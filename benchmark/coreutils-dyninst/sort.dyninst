
"__ctype_toupper_loc@plt" :
2ab0(6): jmp 0x21717a(%rip)
2ab6(5): push $0x0

"getenv@plt" :
2ac0(6): jmp 0x217172(%rip)
2ac6(5): push $0x1

"raise@plt" :
2ad0(6): jmp 0x21716a(%rip)
2ad6(5): push $0x2

"pthread_create@plt" :
2ae0(6): jmp 0x217162(%rip)
2ae6(5): push $0x3

"pthread_sigmask@plt" :
2af0(6): jmp 0x21715a(%rip)
2af6(5): push $0x4

"abort@plt" :
2b00(6): jmp 0x217152(%rip)
2b06(5): push $0x5

"__errno_location@plt" :
2b10(6): jmp 0x21714a(%rip)
2b16(5): push $0x6

"unlink@plt" :
2b20(6): jmp 0x217142(%rip)
2b26(5): push $0x7

"strncmp@plt" :
2b30(6): jmp 0x21713a(%rip)
2b36(5): push $0x8

"_exit@plt" :
2b40(6): jmp 0x217132(%rip)
2b46(5): push $0x9

"strcpy@plt" :
2b50(6): jmp 0x21712a(%rip)
2b56(5): push $0xa

"__fpending@plt" :
2b60(6): jmp 0x217122(%rip)
2b66(5): push $0xb

"__read_chk@plt" :
2b70(6): jmp 0x21711a(%rip)
2b76(5): push $0xc

"ferror@plt" :
2b80(6): jmp 0x217112(%rip)
2b86(5): push $0xd

"qsort@plt" :
2b90(6): jmp 0x21710a(%rip)
2b96(5): push $0xe

"sigaction@plt" :
2ba0(6): jmp 0x217102(%rip)
2ba6(5): push $0xf

"iswcntrl@plt" :
2bb0(6): jmp 0x2170fa(%rip)
2bb6(5): push $0x10

"localeconv@plt" :
2bc0(6): jmp 0x2170f2(%rip)
2bc6(5): push $0x11

"fcntl@plt" :
2bd0(6): jmp 0x2170ea(%rip)
2bd6(5): push $0x12

"clearerr_unlocked@plt" :
2be0(6): jmp 0x2170e2(%rip)
2be6(5): push $0x13

"write@plt" :
2bf0(6): jmp 0x2170da(%rip)
2bf6(5): push $0x14

"getpid@plt" :
2c00(6): jmp 0x2170d2(%rip)
2c06(5): push $0x15

"fread_unlocked@plt" :
2c10(6): jmp 0x2170ca(%rip)
2c16(5): push $0x16

"textdomain@plt" :
2c20(6): jmp 0x2170c2(%rip)
2c26(5): push $0x17

"pthread_cond_wait@plt" :
2c30(6): jmp 0x2170ba(%rip)
2c36(5): push $0x18

"fclose@plt" :
2c40(6): jmp 0x2170b2(%rip)
2c46(5): push $0x19

"__sched_cpucount@plt" :
2c50(6): jmp 0x2170aa(%rip)
2c56(5): push $0x1a

"bindtextdomain@plt" :
2c60(6): jmp 0x2170a2(%rip)
2c66(5): push $0x1b

"dcgettext@plt" :
2c70(6): jmp 0x21709a(%rip)
2c76(5): push $0x1c

"__ctype_get_mb_cur_max@plt" :
2c80(6): jmp 0x217092(%rip)
2c86(5): push $0x1d

"strlen@plt" :
2c90(6): jmp 0x21708a(%rip)
2c96(5): push $0x1e

"__stack_chk_fail@plt" :
2ca0(6): jmp 0x217082(%rip)
2ca6(5): push $0x1f

"getuid@plt" :
2cb0(6): jmp 0x21707a(%rip)
2cb6(5): push $0x20

"getopt_long@plt" :
2cc0(6): jmp 0x217072(%rip)
2cc6(5): push $0x21

"mbrtowc@plt" :
2cd0(6): jmp 0x21706a(%rip)
2cd6(5): push $0x22

"dup2@plt" :
2ce0(6): jmp 0x217062(%rip)
2ce6(5): push $0x23

"strchr@plt" :
2cf0(6): jmp 0x21705a(%rip)
2cf6(5): push $0x24

"nanosleep@plt" :
2d00(6): jmp 0x217052(%rip)
2d06(5): push $0x25

"__overflow@plt" :
2d10(6): jmp 0x21704a(%rip)
2d16(5): push $0x26

"strrchr@plt" :
2d20(6): jmp 0x217042(%rip)
2d26(5): push $0x27

"ftruncate@plt" :
2d30(6): jmp 0x21703a(%rip)
2d36(5): push $0x28

"mkostemp@plt" :
2d40(6): jmp 0x217032(%rip)
2d46(5): push $0x29

"lseek@plt" :
2d50(6): jmp 0x21702a(%rip)
2d56(5): push $0x2a

"gettimeofday@plt" :
2d60(6): jmp 0x217022(%rip)
2d66(5): push $0x2b

"__assert_fail@plt" :
2d70(6): jmp 0x21701a(%rip)
2d76(5): push $0x2c

"__strtoul_internal@plt" :
2d80(6): jmp 0x217012(%rip)
2d86(5): push $0x2d

"memset@plt" :
2d90(6): jmp 0x21700a(%rip)
2d96(5): push $0x2e

"fgetc@plt" :
2da0(6): jmp 0x217002(%rip)
2da6(5): push $0x2f

"close@plt" :
2db0(6): jmp 0x216ffa(%rip)
2db6(5): push $0x30

"pipe@plt" :
2dc0(6): jmp 0x216ff2(%rip)
2dc6(5): push $0x31

"posix_fadvise@plt" :
2dd0(6): jmp 0x216fea(%rip)
2dd6(5): push $0x32

"memchr@plt" :
2de0(6): jmp 0x216fe2(%rip)
2de6(5): push $0x33

"memcmp@plt" :
2df0(6): jmp 0x216fda(%rip)
2df6(5): push $0x34

"pthread_cond_signal@plt" :
2e00(6): jmp 0x216fd2(%rip)
2e06(5): push $0x35

"fputs_unlocked@plt" :
2e10(6): jmp 0x216fca(%rip)
2e16(5): push $0x36

"calloc@plt" :
2e20(6): jmp 0x216fc2(%rip)
2e26(5): push $0x37

"strxfrm@plt" :
2e30(6): jmp 0x216fba(%rip)
2e36(5): push $0x38

"strcmp@plt" :
2e40(6): jmp 0x216fb2(%rip)
2e46(5): push $0x39

"signal@plt" :
2e50(6): jmp 0x216faa(%rip)
2e56(5): push $0x3a

"sigemptyset@plt" :
2e60(6): jmp 0x216fa2(%rip)
2e66(5): push $0x3b

"strtol@plt" :
2e70(6): jmp 0x216f9a(%rip)
2e76(5): push $0x3c

"memcpy@plt" :
2e80(6): jmp 0x216f92(%rip)
2e86(5): push $0x3d

"fileno@plt" :
2e90(6): jmp 0x216f8a(%rip)
2e96(5): push $0x3e

"__stpcpy_chk@plt" :
2ea0(6): jmp 0x216f82(%rip)
2ea6(5): push $0x3f

"getgid@plt" :
2eb0(6): jmp 0x216f7a(%rip)
2eb6(5): push $0x40

"__xstat@plt" :
2ec0(6): jmp 0x216f72(%rip)
2ec6(5): push $0x41

"pthread_cond_init@plt" :
2ed0(6): jmp 0x216f6a(%rip)
2ed6(5): push $0x42

"wcwidth@plt" :
2ee0(6): jmp 0x216f62(%rip)
2ee6(5): push $0x43

"pthread_mutex_unlock@plt" :
2ef0(6): jmp 0x216f5a(%rip)
2ef6(5): push $0x44

"fflush@plt" :
2f00(6): jmp 0x216f52(%rip)
2f06(5): push $0x45

"nl_langinfo@plt" :
2f10(6): jmp 0x216f4a(%rip)
2f16(5): push $0x46

"__fxstat@plt" :
2f20(6): jmp 0x216f42(%rip)
2f26(5): push $0x47

"strcoll@plt" :
2f30(6): jmp 0x216f3a(%rip)
2f36(5): push $0x48

"mkstemp@plt" :
2f40(6): jmp 0x216f32(%rip)
2f46(5): push $0x49

"__freading@plt" :
2f50(6): jmp 0x216f2a(%rip)
2f56(5): push $0x4a

"fwrite_unlocked@plt" :
2f60(6): jmp 0x216f22(%rip)
2f66(5): push $0x4b

"realloc@plt" :
2f70(6): jmp 0x216f1a(%rip)
2f76(5): push $0x4c

"fdopen@plt" :
2f80(6): jmp 0x216f12(%rip)
2f86(5): push $0x4d

"setlocale@plt" :
2f90(6): jmp 0x216f0a(%rip)
2f96(5): push $0x4e

"__printf_chk@plt" :
2fa0(6): jmp 0x216f02(%rip)
2fa6(5): push $0x4f

"setvbuf@plt" :
2fb0(6): jmp 0x216efa(%rip)
2fb6(5): push $0x50

"memmove@plt" :
2fc0(6): jmp 0x216ef2(%rip)
2fc6(5): push $0x51

"strtold@plt" :
2fd0(6): jmp 0x216eea(%rip)
2fd6(5): push $0x52

"error@plt" :
2fe0(6): jmp 0x216ee2(%rip)
2fe6(5): push $0x53

"waitpid@plt" :
2ff0(6): jmp 0x216eda(%rip)
2ff6(5): push $0x54

"__explicit_bzero_chk@plt" :
3000(6): jmp 0x216ed2(%rip)
3006(5): push $0x55

"open@plt" :
3010(6): jmp 0x216eca(%rip)
3016(5): push $0x56

"fseeko@plt" :
3020(6): jmp 0x216ec2(%rip)
3026(5): push $0x57

"fopen@plt" :
3030(6): jmp 0x216eba(%rip)
3036(5): push $0x58

"dcngettext@plt" :
3040(6): jmp 0x216eb2(%rip)
3046(5): push $0x59

"sysconf@plt" :
3050(6): jmp 0x216eaa(%rip)
3056(5): push $0x5a

"pthread_join@plt" :
3060(6): jmp 0x216ea2(%rip)
3066(5): push $0x5b

"euidaccess@plt" :
3070(6): jmp 0x216e9a(%rip)
3076(5): push $0x5c

"strtoul@plt" :
3080(6): jmp 0x216e92(%rip)
3086(5): push $0x5d

"__cxa_atexit@plt" :
3090(6): jmp 0x216e8a(%rip)
3096(5): push $0x5e

"sysinfo@plt" :
30a0(6): jmp 0x216e82(%rip)
30a6(5): push $0x5f

"pipe2@plt" :
30b0(6): jmp 0x216e7a(%rip)
30b6(5): push $0x60

"getppid@plt" :
30c0(6): jmp 0x216e72(%rip)
30c6(5): push $0x61

"sigismember@plt" :
30d0(6): jmp 0x216e6a(%rip)
30d6(5): push $0x62

"exit@plt" :
30e0(6): jmp 0x216e62(%rip)
30e6(5): push $0x63

"fwrite@plt" :
30f0(6): jmp 0x216e5a(%rip)
30f6(5): push $0x64

"__fprintf_chk@plt" :
3100(6): jmp 0x216e52(%rip)
3106(5): push $0x65

"getrlimit@plt" :
3110(6): jmp 0x216e4a(%rip)
3116(5): push $0x66

"sched_getaffinity@plt" :
3120(6): jmp 0x216e42(%rip)
3126(5): push $0x67

"fflush_unlocked@plt" :
3130(6): jmp 0x216e3a(%rip)
3136(5): push $0x68

"mbsinit@plt" :
3140(6): jmp 0x216e32(%rip)
3146(5): push $0x69

"execlp@plt" :
3150(6): jmp 0x216e2a(%rip)
3156(5): push $0x6a

"iswprint@plt" :
3160(6): jmp 0x216e22(%rip)
3166(5): push $0x6b

"pthread_mutex_init@plt" :
3170(6): jmp 0x216e1a(%rip)
3176(5): push $0x6c

"sigaddset@plt" :
3180(6): jmp 0x216e12(%rip)
3186(5): push $0x6d

"fork@plt" :
3190(6): jmp 0x216e0a(%rip)
3196(5): push $0x6e

"pthread_mutex_lock@plt" :
31a0(6): jmp 0x216e02(%rip)
31a6(5): push $0x6f

"__ctype_b_loc@plt" :
31b0(6): jmp 0x216dfa(%rip)
31b6(5): push $0x70

"free@plt" :
31c0(6): jmp 0x216df2(%rip)
31c6(2): nop 

"malloc@plt" :
31c8(6): jmp 0x216e0a(%rip)
31ce(2): nop 

"__cxa_finalize@plt" :
31d0(6): jmp 0x216e12(%rip)
31d6(2): nop 

".plt.got" :
31c0(6): jmp 0x216df2(%rip)
31c6(2): nop 
31c8(6): jmp 0x216e0a(%rip)
31ce(2): nop 
31d0(6): jmp 0x216e12(%rip)
31d6(2): nop 

"_init" :
2a88(4): sub $0x8,%rsp
2a8c(7): mov 0x21753d(%rip),%rax
2a93(3): test %rax,%rax
2a96(2): jz 0x4(%rip)
2a98(2): call %rax
2a9a(4): add $0x8,%rsp
2a9e(1): ret near (%rsp)

"badfieldspec" :
31e0(1): push %rbp
31e1(1): push %rbx
31e2(3): mov %rsi,%rbx
31e5(4): sub $0x8,%rsp
31e9(5): call 0xd1a7(%rip)
31ee(3): mov %rbx,%rsi
31f1(5): mov $0x5,%edx
31f6(2): xor %edi,%edi
31f8(3): mov %rax,%rbp
31fb(5): call 0xfffffa75(%rip)
3200(7): lea 0x10d09(%rip),%rsi
3207(3): mov %rax,%rbx
320a(5): mov $0x5,%edx
320f(2): xor %edi,%edi
3211(5): call 0xfffffa5f(%rip)
3216(3): mov %rbp,%r8
3219(3): mov %rax,%rdx
321c(3): mov %rbx,%rcx
321f(2): xor %esi,%esi
3221(5): mov $0x2,%edi
3226(2): xor %eax,%eax
3228(5): call 0xfffffdb8(%rip)
322d(2): push %r12
322f(1): push %rbp
3230(4): or $0xffffffff,%r12
3234(1): push %rbx
3235(2): xor %ebx,%ebx
3237(2): mov %edi,%ebp
3239(3): mov %r12,%rcx
323c(3): mov %rsi,%rdi
323f(4): sub $0x20,%rsp
3243(9): mov $0x28,%rax
324c(5): mov %rax,0x18(%rsp)
3251(2): xor %eax,%eax
3253(2): mov %bl,%al
3255(2): REPNZ scasb rdi(%es,10),%al
3257(5): mov $0x2,%edi
325c(3): not %rcx
325f(4): lea 0x0(%rcx,%r12,1),%rdx
3263(5): call 0xfffff98d(%rip)
3268(2): test %ebp,%ebp
326a(2): jz 0x45(%rip)
326c(5): lea 0xc(%rsp),%rsi
3271(2): mov %ebp,%edi
3273(5): call 0xa99d(%rip)
3278(7): lea 0x121ca(%rip),%rsi
327f(3): mov %rax,%rbp
3282(5): mov $0x8,%edx
3287(5): mov $0x2,%edi
328c(5): call 0xfffff964(%rip)
3291(3): mov %rbp,%rdi
3294(3): mov %r12,%rcx
3297(2): mov %bl,%al
3299(2): REPNZ scasb rdi(%es,10),%al
329b(3): mov %rbp,%rsi
329e(5): mov $0x2,%edi
32a3(3): not %rcx
32a6(4): lea 0x0(%rcx,%r12,1),%rdx
32aa(5): call 0xfffff946(%rip)
32af(7): lea 0x12254(%rip),%rsi
32b6(5): mov $0x2,%edi
32bb(5): mov $0x1,%edx
32c0(5): call 0xfffff930(%rip)
32c5(5): mov $0x2,%edi
32ca(5): call 0xfffff876(%rip)
32cf(1): push %rbx
32d0(7): lea 0x121c8(%rip),%rsi
32d7(3): mov %rdi,%rbx
32da(5): mov $0x5,%edx
32df(2): xor %edi,%edi
32e1(5): call 0xfffff98f(%rip)
32e6(3): mov %rbx,%rsi
32e9(3): mov %rax,%rdi
32ec(5): call 0x3034(%rip)

"async_safe_die" :
322d(2): push %r12
322f(1): push %rbp
3230(4): or $0xffffffff,%r12
3234(1): push %rbx
3235(2): xor %ebx,%ebx
3237(2): mov %edi,%ebp
3239(3): mov %r12,%rcx
323c(3): mov %rsi,%rdi
323f(4): sub $0x20,%rsp
3243(9): mov $0x28,%rax
324c(5): mov %rax,0x18(%rsp)
3251(2): xor %eax,%eax
3253(2): mov %bl,%al
3255(2): REPNZ scasb rdi(%es,10),%al
3257(5): mov $0x2,%edi
325c(3): not %rcx
325f(4): lea 0x0(%rcx,%r12,1),%rdx
3263(5): call 0xfffff98d(%rip)
3268(2): test %ebp,%ebp
326a(2): jz 0x45(%rip)
326c(5): lea 0xc(%rsp),%rsi
3271(2): mov %ebp,%edi
3273(5): call 0xa99d(%rip)
3278(7): lea 0x121ca(%rip),%rsi
327f(3): mov %rax,%rbp
3282(5): mov $0x8,%edx
3287(5): mov $0x2,%edi
328c(5): call 0xfffff964(%rip)
3291(3): mov %rbp,%rdi
3294(3): mov %r12,%rcx
3297(2): mov %bl,%al
3299(2): REPNZ scasb rdi(%es,10),%al
329b(3): mov %rbp,%rsi
329e(5): mov $0x2,%edi
32a3(3): not %rcx
32a6(4): lea 0x0(%rcx,%r12,1),%rdx
32aa(5): call 0xfffff946(%rip)
32af(7): lea 0x12254(%rip),%rsi
32b6(5): mov $0x2,%edi
32bb(5): mov $0x1,%edx
32c0(5): call 0xfffff930(%rip)
32c5(5): mov $0x2,%edi
32ca(5): call 0xfffff876(%rip)
32cf(1): push %rbx
32d0(7): lea 0x121c8(%rip),%rsi
32d7(3): mov %rdi,%rbx
32da(5): mov $0x5,%edx
32df(2): xor %edi,%edi
32e1(5): call 0xfffff98f(%rip)
32e6(3): mov %rbx,%rsi
32e9(3): mov %rax,%rdi
32ec(5): call 0x3034(%rip)

"xfopen.part.7" :
32cf(1): push %rbx
32d0(7): lea 0x121c8(%rip),%rsi
32d7(3): mov %rdi,%rbx
32da(5): mov $0x5,%edx
32df(2): xor %edi,%edi
32e1(5): call 0xfffff98f(%rip)
32e6(3): mov %rbx,%rsi
32e9(3): mov %rax,%rdi
32ec(5): call 0x3034(%rip)

"main" :
3300(2): push %r15
3302(2): push %r14
3304(2): push %r13
3306(2): push %r12
3308(1): push %rbp
3309(1): push %rbx
330a(2): mov %edi,%ebx
330c(7): lea 0x122b2(%rip),%rdi
3313(3): mov %rsi,%rbp
3316(7): sub $0x3f8,%rsp
331d(9): mov $0x28,%rax
3326(8): mov %rax,0x3e8(%rsp)
332e(2): xor %eax,%eax
3330(5): call 0xfffff790(%rip)
3335(3): test %rax,%rax
3338(5): mov %rax,0x68(%rsp)
333d(5): setnz 0x8(%rsp)
3342(5): call 0xb2ae(%rip)
3347(4): mov 0x0(%rbp),%rdi
334b(5): sub $0x30db0,%eax
3350(5): cmp $0x2b8,%eax
3355(5): setnbe 0x10(%rsp)
335a(5): call 0xb326(%rip)
335f(7): lea 0x121a5(%rip),%rsi
3366(5): mov $0x6,%edi
336b(5): call 0xfffffc25(%rip)
3370(7): lea 0x1225e(%rip),%rsi
3377(7): lea 0x1221e(%rip),%rdi
337e(5): mov %rax,0x50(%rsp)
3383(5): call 0xfffff8dd(%rip)
3388(7): lea 0x1220d(%rip),%rdi
338f(5): call 0xfffff891(%rip)
3394(5): mov $0x3,%edi
3399(a): mov $0x2,0x216d8d(%rip)
33a3(5): call 0x923d(%rip)
33a8(5): mov $0x2,%edi
33ad(6): mov %al,0x2174ce(%rip)
33b3(5): call 0x922d(%rip)
33b8(3): mov %eax,%r14d
33bb(6): mov %al,0x2174bf(%rip)
33c1(5): call 0xfffff7ff(%rip)
33c6(3): mov (%rax),%rcx
33c9(3): movzx (%rcx),%esi
33cc(3): test %sil,%sil
33cf(6): mov %esi,0x2174b3(%rip)
33d5(6): jz 0xe8(%rip)
33db(4): cmp $0x0,0x1(%rcx)
33df(6): jnz 0xde(%rip)
33e5(4): mov 0x8(%rax),%rdx
33e9(3): movzx (%rdx),%ecx
33ec(2): test %cl,%cl
33ee(6): mov %ecx,0x217490(%rip)
33f4(6): jz 0xba(%rip)
33fa(4): cmp $0x0,0x1(%rdx)
33fe(6): jnz 0xb0(%rip)
3404(7): mov $0x0,0x21702d(%rip)
340b(7): lea 0x21704e(%rip),%r12
3412(5): call 0xfffffd9e(%rip)
3417(3): mov %rax,%r13
341a(5): call 0xfffff696(%rip)
341f(2): xor %edx,%edx
3421(7): lea 0x217338(%rip),%r10
3428(7): lea 0x217231(%rip),%r9
342f(7): lea 0x21712a(%rip),%r8
3436(2): jmp 0x3f(%rip)
3438(8): nop 0x0(%rax,%rax,1)
3440(3): test %di,%di
3443(2): jnz 0x54(%rip)
3445(3): test %cx,%cx
3448(5): mov $0x0,0x0(%r10,%rdx,1)
344d(4): mov %sil,0x0(%r9,%rdx,1)
3451(2): jnz 0x59(%rip)
3453(4): cmp $0xa,%rdx
3457(3): setnz %cl
345a(4): mov %cl,0x0(%r8,%rdx,1)
345e(3): mov (%rax),%rcx
3461(3): mov 0x0(%rcx,%rdx,4),%ecx
3464(4): mov %cl,0x0(%r12,%rdx,1)
3468(4): add $0x1,%rdx
346c(7): cmp $0x100,%rdx
3473(2): jz 0x5d(%rip)
3475(4): mov 0x0(%r13),%rcx
3479(4): movzx 0x0(%rcx,%rdx,2),%ecx
347d(2): mov %ecx,%esi
347f(2): mov %ecx,%edi
3481(3): and $0x8,%ecx
3484(4): shr $0xe,%si
3488(3): and $0x1,%edi
348b(3): xor $0x1,%esi
348e(3): and $0x1,%esi
3491(4): cmp $0xa,%rdx
3495(2): jnz 0xffffffab(%rip)
3497(3): test %cx,%cx
349a(5): mov $0x1,0x0(%r10,%rdx,1)
349f(4): mov %sil,0x0(%r9,%rdx,1)
34a3(2): jnz 0x7(%rip)
34a5(3): test %di,%di
34a8(2): jz 0xffffffab(%rip)
34aa(2): xor %ecx,%ecx
34ac(2): jmp 0xffffffae(%rip)
34ae(a): mov $0xffffffff,0x2173cc(%rip)
34b8(5): jmp 0xffffff4c(%rip)
34bd(a): mov $0x2e,0x2173c1(%rip)
34c7(5): jmp 0xffffff1e(%rip)
34cc(4): nop 0x0(%rax)
34d0(3): test %r14b,%r14b
34d3(6): jz 0xc9(%rip)
34d9(7): lea 0x216b80(%rip),%r15
34e0(6): mov $0x1,%r14d
34e6(4): mov %ebx,0x18(%rsp)
34ea(5): mov %rbp,0x20(%rsp)
34ef(1): nop 
34f0(7): lea 0x2000d(%r14),%edi
34f7(5): call 0xfffffa19(%rip)
34fc(3): mov %rax,%rdi
34ff(3): mov %rax,%rbp
3502(5): call 0xfffff78e(%rip)
3507(4): lea 0x1(%rax),%rdi
350b(3): mov %rax,%rbx
350e(5): call 0xe8d2(%rip)
3513(3): test %rbx,%rbx
3516(3): mov %rax,(%r15)
3519(4): mov %r14d,0x8(%r15)
351d(6): jz 0xa73(%rip)
3523(4): mov 0x0(%r13),%r10
3527(5): lea 0x0(%rbp,%rbx,1),%r8
352c(3): mov %rbp,%rdi
352f(3): xor %r9d,%r9d
3532(3): mov %rax,%rcx
3535(3): nop (%rax)
3538(3): movzx (%rdi),%esi
353b(3): mov %rcx,%r11
353e(5): test $0x1,0x0(%r10,%rsi,2)
3543(2): jnz 0x14(%rip)
3545(5): movzx 0x0(%r12,%rsi,1),%edx
354a(4): add $0x1,%r9
354e(2): mov %dl,(%rcx)
3550(4): lea 0x0(%rax,%r9,1),%rcx
3554(3): mov %rcx,%r11
3557(4): add $0x1,%rdi
355b(3): cmp %rdi,%r8
355e(2): jnz 0xffffffda(%rip)
3560(4): add $0x1,%r14
3564(4): add $0x10,%r15
3568(4): mov $0x0,(%r11)
356c(4): cmp $0xd,%r14
3570(6): jnz 0xffffff80(%rip)
3576(7): lea 0x2d13(%rip),%rcx
357d(7): lea 0x216adc(%rip),%rdi
3584(5): mov $0x10,%edx
3589(5): mov $0xc,%esi
358e(4): mov 0x18(%rsp),%ebx
3592(5): mov 0x20(%rsp),%rbp
3597(5): call 0xfffff5f9(%rip)
359c(7): lea 0x216dfd(%rip),%rdi
35a3(7): lea 0x107da(%rip),%r13
35aa(6): mov $0xe,%r15d
35b0(5): call 0xfffff8b0(%rip)
35b5(8): lea 0x2c0(%rsp),%rax
35bd(4): mov %ebx,0x18(%rsp)
35c1(4): lea 0x28(%r13),%r14
35c5(3): mov %r15d,%ebx
35c8(3): mov %r13,%r12
35cb(5): mov %rax,0x20(%rsp)
35d0(3): mov %rax,%r15
35d3(2): jmp 0xd(%rip)
35d5(3): nop (%rax)
35d8(4): mov (%r12),%ebx
35dc(4): add $0x4,%r12
35e0(2): xor %esi,%esi
35e2(3): mov %r15,%rdx
35e5(2): mov %ebx,%edi
35e7(5): call 0xfffff5b9(%rip)
35ec(9): cmp $0x1,0x2c0(%rsp)
35f5(2): jz 0x10(%rip)
35f7(7): lea 0x216da2(%rip),%rdi
35fe(2): mov %ebx,%esi
3600(5): call 0xfffffb80(%rip)
3605(3): cmp %r12,%r14
3608(2): jnz 0xffffffd0(%rip)
360a(8): movdqa 0x216d8e(%rip),%xmm0
3612(7): lea 0x2cb7(%rip),%rax
3619(4): mov 0x18(%rsp),%ebx
361d(b): mov $0x0,0x348(%rsp)
3628(6): mov $0xe,%r14d
362e(8): movups %xmm0,0x2c8(%rsp)
3636(8): mov %rax,0x2c0(%rsp)
363e(7): lea 0x216d5b(%rip),%r15
3645(8): movdqa 0x216d63(%rip),%xmm0
364d(8): movups %xmm0,0x2d8(%rsp)
3655(8): movdqa 0x216d63(%rip),%xmm0
365d(8): movups %xmm0,0x2e8(%rsp)
3665(8): movdqa 0x216d63(%rip),%xmm0
366d(8): movups %xmm0,0x2f8(%rsp)
3675(8): movdqa 0x216d63(%rip),%xmm0
367d(8): movups %xmm0,0x308(%rsp)
3685(8): movdqa 0x216d63(%rip),%xmm0
368d(8): movups %xmm0,0x318(%rsp)
3695(8): movdqa 0x216d63(%rip),%xmm0
369d(8): movups %xmm0,0x328(%rsp)
36a5(8): movdqa 0x216d63(%rip),%xmm0
36ad(8): movups %xmm0,0x338(%rsp)
36b5(2): jmp 0x18(%rip)
36b7(9): nop 0x0(%rax,%rax,1)
36c0(3): cmp %r13,%r12
36c3(2): jz 0x2d(%rip)
36c5(4): mov 0x0(%r13),%r14d
36c9(4): add $0x4,%r13
36cd(3): mov %r14d,%esi
36d0(3): mov %r15,%rdi
36d3(5): call 0xfffff9fd(%rip)
36d8(2): test %eax,%eax
36da(2): jz 0xffffffe6(%rip)
36dc(5): mov 0x20(%rsp),%rsi
36e1(2): xor %edx,%edx
36e3(3): mov %r14d,%edi
36e6(5): call 0xfffff4ba(%rip)
36eb(3): cmp %r13,%r12
36ee(2): jnz 0xffffffd7(%rip)
36f0(2): xor %esi,%esi
36f2(5): mov $0x11,%edi
36f7(5): call 0xfffff759(%rip)
36fc(7): lea 0x34bd(%rip),%rdi
3703(5): call 0x1013d(%rip)
3708(4): pxor %xmm0,%xmm0
370c(8): lea 0x100(%rsp),%rax
3714(5): mov $0x8,%edx
3719(3): movsxd %ebx,%rcx
371c(2): xor %esi,%esi
371e(5): mov %rax,0x38(%rsp)
3723(7): mov $0xffffffff,%rax
372a(8): movups %xmm0,0x108(%rsp)
3732(8): mov %rax,0x100(%rsp)
373a(8): mov %rax,0x110(%rsp)
3742(3): mov %rdx,%rax
3745(3): mul %rax,%rcx,%rdx
3748(8): movups %xmm0,0x118(%rsp)
3750(8): movups %xmm0,0x128(%rsp)
3758(8): movups %xmm0,0x138(%rsp)
3760(6): jo 0x239f(%rip)
3766(3): test %rax,%rax
3769(6): js 0x2391(%rip)
376f(3): test %rsi,%rsi
3772(6): jnz 0x2388(%rip)
3778(8): lea 0x0(,%rcx,8),%rdi
3780(3): xor %r15d,%r15d
3783(3): xor %r12d,%r12d
3786(7): lea 0x1019f(%rip),%r13
378d(5): call 0xe653(%rip)
3792(3): mov %rax,%r14
3795(8): lea 0xb0(%rsp),%rax
379d(9): mov $0x0,0x28(%rsp)
37a6(9): mov $0x0,0x18(%rsp)
37af(9): mov $0x0,0x58(%rsp)
37b8(3): xor %r9d,%r9d
37bb(5): mov %rax,0x30(%rsp)
37c0(8): lea 0xc0(%rsp),%rax
37c8(9): mov $0x0,0x40(%rsp)
37d1(5): mov $0x0,0x48(%rsp)
37d6(5): mov %rax,0x60(%rsp)
37db(2): jmp 0x63(%rip)
37dd(3): nop (%rax)
37e0(3): test %r15,%r15
37e3(6): jz 0x95(%rip)
37e9(5): cmp $0x0,0x8(%rsp)
37ee(6): jz 0x8a(%rip)
37f4(5): cmp $0x1,0x10(%rsp)
37f9(7): movsxd 0x2169d8(%rip),%rax
3800(2): jnz 0x20(%rip)
3802(3): test %r12b,%r12b
3805(2): jnz 0x1b(%rip)
3807(2): cmp %eax,%ebx
3809(6): jz 0x187(%rip)
380f(3): movsxd %eax,%rdx
3812(5): mov 0x0(%rbp,%rdx,8),%rdx
3817(3): cmp $0x2d,(%rdx)
381a(2): jz 0x46(%rip)
381c(4): nop 0x0(%rax)
3820(2): cmp %eax,%ebx
3822(6): jle 0x171(%rip)
3828(3): lea 0x1(%rax),%edx
382b(5): mov 0x0(%rbp,%rax,8),%rax
3830(6): mov %edx,0x2169a2(%rip)
3836(4): mov %rax,0x0(%r14,%r15,8)
383a(4): add $0x1,%r15
383e(4): cmp $0xff,%r9d
3842(b): mov $0xffffffff,0x90(%rsp)
384d(2): jnz 0xffffff93(%rip)
384f(7): movsxd 0x216982(%rip),%rax
3856(2): jmp 0xffffffca(%rip)
3858(8): nop 0x0(%rax,%rax,1)
3860(4): cmp $0x6f,0x1(%rdx)
3864(2): jnz 0xffffffbc(%rip)
3866(4): cmp $0x0,0x2(%rdx)
386a(2): jnz 0xe(%rip)
386c(3): lea 0x1(%rax),%edx
386f(2): cmp %ebx,%edx
3871(2): jz 0xffffffaf(%rip)
3873(5): nop 0x0(%rax,%rax,1)
3878(8): lea 0x90(%rsp),%r8
3880(7): lea 0x215d59(%rip),%rcx
3887(7): lea 0x10642(%rip),%rdx
388e(3): mov %rbp,%rsi
3891(2): mov %ebx,%edi
3893(5): call 0xfffff42d(%rip)
3898(3): cmp $0xff,%eax
389b(3): mov %eax,%r9d
389e(2): jz 0xffffffb1(%rip)
38a0(6): lea 0x83(%rax),%eax
38a6(5): cmp $0x10a,%eax
38ab(6): jnbe 0x2245(%rip)
38b1(5): movsxd 0x0(%r13,%rax,4),%rax
38b6(3): add %r13,%rax
38b9(2): jmp %rax
38bb(7): mov 0x216866(%rip),%r9
38c2(7): mov 0x216917(%rip),%rsi
38c9(7): lea 0x215cb0(%rip),%rdx
38d0(7): lea 0x105e9(%rip),%rcx
38d7(7): lea 0x11d5f(%rip),%rdi
38de(6): mov $0x1,%r8d
38e4(5): call 0x789c(%rip)
38e9(7): lea 0x105d0(%rip),%rdx
38f0(5): movsx 0x0(%rdx,%rax,1),%r9d
38f5(5): mov 0x38(%rsp),%rsi
38fa(8): lea 0x3b0(%rsp),%rdi
3902(5): mov $0x2,%edx
3907(8): mov %r9b,0x3b0(%rsp)
390f(5): mov %r9d,0x70(%rsp)
3914(8): mov $0x0,0x3b1(%rsp)
391c(5): call 0x2864(%rip)
3921(5): mov 0x70(%rsp),%r9d
3926(5): jmp 0xffffff18(%rip)
392b(7): mov 0x2168ae(%rip),%rsi
3932(6): mov $0x63,%r9d
3938(3): test %rsi,%rsi
393b(2): jz 0x35(%rip)
393d(7): mov 0x2167e4(%rip),%r9
3944(7): lea 0x215c75(%rip),%rdx
394b(7): lea 0x10574(%rip),%rcx
3952(7): lea 0x11ceb(%rip),%rdi
3959(6): mov $0x1,%r8d
395f(5): call 0x7821(%rip)
3964(7): lea 0x1055b(%rip),%rdx
396b(5): movsx 0x0(%rdx,%rax,1),%r9d
3970(3): test %r12b,%r12b
3973(2): jz 0xb(%rip)
3975(3): cmp %r9d,%r12d
3978(6): jnz 0x2315(%rip)
397e(4): movsx %r9b,%r12d
3982(5): jmp 0xfffffebc(%rip)
3987(9): nop 0x0(%rax,%rax,1)
3990(3): xor %r12d,%r12d
3993(6): cmp $0x0,0x18(%rsp)
3999(6): jz 0xb7(%rip)
399f(3): test %r15,%r15
39a2(6): jnz 0x20ea(%rip)
39a8(5): mov 0x18(%rsp),%rdi
39ad(7): lea 0x11edf(%rip),%rsi
39b4(5): call 0x36fc(%rip)
39b9(3): test %rax,%rax
39bc(3): mov %rax,%rbx
39bf(6): jz 0x2347(%rip)
39c5(8): lea 0x1a0(%rsp),%rbp
39cd(3): mov %rbp,%rdi
39d0(5): call 0xd540(%rip)
39d5(3): mov %rbp,%rsi
39d8(3): mov %rbx,%rdi
39db(5): call 0xd5d5(%rip)
39e0(2): test %al,%al
39e2(5): mov 0x18(%rsp),%rsi
39e7(6): jz 0x2166(%rip)
39ed(3): mov %rbx,%rdi
39f0(5): call 0x3800(%rip)
39f5(8): mov 0x1a0(%rsp),%rbp
39fd(3): test %rbp,%rbp
3a00(6): jz 0x2181(%rip)
3a06(3): mov %r14,%rdi
3a09(7): lea 0x12c2a(%rip),%rbx
3a10(5): call 0xfffff7b0(%rip)
3a15(8): mov 0x1a8(%rsp),%r14
3a1d(3): nop (%rax)
3a20(4): mov 0x0(%r14,%r15,8),%rdx
3a24(5): mov $0x2,%ecx
3a29(3): mov %rbx,%rdi
3a2c(3): mov %rdx,%rsi
3a2f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3a31(3): setnbe %al
3a34(2): sbb $0x0,%al
3a36(2): test %al,%al
3a38(6): jz 0x2182(%rip)
3a3e(4): add $0x1,%r15
3a42(3): cmp $0x0,(%rdx)
3a45(6): jz 0x21ac(%rip)
3a4b(3): cmp %r15,%rbp
3a4e(2): jnz 0xffffffd2(%rip)
3a50(7): mov 0x2169d9(%rip),%rsi
3a57(3): test %rsi,%rsi
3a5a(3): mov %rsi,%rcx
3a5d(6): jz 0x14ac(%rip)
3a63(3): xor %r13d,%r13d
3a66(5): jmp 0x9b(%rip)
3a6b(5): nop 0x0(%rax,%rax,1)
3a70(4): cmp $0x0,0x37(%rcx)
3a74(6): jnz 0x9d(%rip)
3a7a(8): mov 0x120(%rsp),%rax
3a82(8): movzx 0x137(%rsp),%edx
3a8a(4): mov %rax,0x20(%rcx)
3a8e(8): mov 0x128(%rsp),%rax
3a96(4): mov %rax,0x28(%rcx)
3a9a(8): movzx 0x130(%rsp),%eax
3aa2(3): mov %al,0x30(%rcx)
3aa5(8): movzx 0x131(%rsp),%eax
3aad(3): mov %al,0x31(%rcx)
3ab0(8): movzx 0x136(%rsp),%eax
3ab8(3): mov %al,0x36(%rcx)
3abb(8): movzx 0x132(%rsp),%eax
3ac3(3): mov %al,0x32(%rcx)
3ac6(8): movzx 0x134(%rsp),%eax
3ace(3): mov %al,0x34(%rcx)
3ad1(8): movzx 0x135(%rsp),%eax
3ad9(3): mov %al,0x35(%rcx)
3adc(8): movzx 0x138(%rsp),%eax
3ae4(3): mov %dl,0x37(%rcx)
3ae7(3): mov %al,0x38(%rcx)
3aea(8): movzx 0x133(%rsp),%eax
3af2(3): mov %al,0x33(%rcx)
3af5(4): mov 0x40(%rcx),%rcx
3af9(3): or %eax,%r13d
3afc(3): test %rcx,%rcx
3aff(2): jz 0x22(%rip)
3b01(3): mov %rcx,%rdi
3b04(5): call 0x256c(%rip)
3b09(2): test %al,%al
3b0b(6): jnz 0xffffff65(%rip)
3b11(4): movzx 0x33(%rcx),%eax
3b15(4): mov 0x40(%rcx),%rcx
3b19(3): or %eax,%r13d
3b1c(3): test %rcx,%rcx
3b1f(2): jnz 0xffffffe2(%rip)
3b21(3): mov %rsi,%rdi
3b24(5): mov $0x0,0x10(%rsp)
3b29(4): movzx 0x34(%rdi),%edx
3b2d(4): movzx 0x32(%rdi),%eax
3b31(2): add %edx,%eax
3b33(4): movzx 0x35(%rdi),%edx
3b37(2): add %edx,%eax
3b39(4): movzx 0x36(%rdi),%edx
3b3d(2): add %edx,%eax
3b3f(4): movzx 0x38(%rdi),%edx
3b43(3): or 0x33(%rdi),%dl
3b46(5): cmp $0x0,0x20(%rdi)
3b4b(3): setnz %cl
3b4e(2): or %ecx,%edx
3b50(3): movzx %dl,%edx
3b53(2): add %edx,%eax
3b55(3): sub $0x1,%eax
3b58(2): jle 0x3d(%rip)
3b5a(5): jmp 0x1f0e(%rip)
3b5f(1): nop 
3b60(4): movzx 0x34(%rdi),%edx
3b64(4): movzx 0x32(%rdi),%eax
3b68(2): add %edx,%eax
3b6a(4): movzx 0x35(%rdi),%edx
3b6e(2): add %edx,%eax
3b70(4): movzx 0x36(%rdi),%edx
3b74(2): add %eax,%edx
3b76(4): movzx 0x38(%rdi),%eax
3b7a(3): or 0x33(%rdi),%al
3b7d(5): cmp $0x0,0x20(%rdi)
3b82(3): setnz %cl
3b85(2): or %ecx,%eax
3b87(3): movzx %al,%eax
3b8a(2): add %edx,%eax
3b8c(3): cmp $0x1,%eax
3b8f(6): jnle 0x1ed9(%rip)
3b95(4): mov 0x40(%rdi),%rdi
3b99(3): test %rdi,%rdi
3b9c(2): jnz 0xffffffc4(%rip)
3b9e(7): cmp $0x0,0x21687b(%rip)
3ba5(6): jz 0xa44(%rip)
3bab(3): test %r12b,%r12b
3bae(3): setnz %dl
3bb1(6): cmp $0x0,0x28(%rsp)
3bb7(3): setnz %al
3bba(2): or %al,%dl
3bbc(6): jnz 0x20dd(%rip)
3bc2(6): cmp $0x0,0x50(%rsp)
3bc8(6): jz 0xd77(%rip)
3bce(7): lea 0x11936(%rip),%rsi
3bd5(5): mov $0x3,%edi
3bda(5): call 0xfffff3b6(%rip)
3bdf(3): test %rax,%rax
3be2(6): jz 0xd5d(%rip)
3be8(7): cmp $0x0,0x216c92(%rip)
3bef(6): jz 0x1346(%rip)
3bf5(2): xor %esi,%esi
3bf7(5): mov $0x3,%edi
3bfc(5): call 0xfffff394(%rip)
3c01(3): mov %rax,%rdi
3c04(5): call 0xc78c(%rip)
3c09(7): lea 0x11638(%rip),%rsi
3c10(3): mov %rax,%rbx
3c13(5): mov $0x5,%edx
3c18(2): xor %edi,%edi
3c1a(5): call 0xfffff056(%rip)
3c1f(3): mov %rbx,%rcx
3c22(3): mov %rax,%rdx
3c25(2): xor %esi,%esi
3c27(2): xor %edi,%edi
3c29(2): xor %eax,%eax
3c2b(5): call 0xfffff3b5(%rip)
3c30(7): mov 0x2167f9(%rip),%rbp
3c37(8): lea 0x150(%rsp),%rdi
3c3f(5): mov $0x12,%ecx
3c44(5): mov 0x38(%rsp),%rsi
3c49(5): mov %rdi,0x8(%rsp)
3c4e(3): test %rbp,%rbp
3c51(2): REP movsd rsi(%ds,10),rdi(%es,10)
3c53(6): jz 0xecb(%rip)
3c59(8): lea 0x380(%rsp),%rax
3c61(8): lea 0x360(%rsp),%rdi
3c69(5): mov %r13b,0x50(%rsp)
3c6e(5): mov %r12b,0x60(%rsp)
3c73(5): mov %r14,0x70(%rsp)
3c78(5): mov $0x1,%ebx
3c7d(5): mov %rax,0x30(%rsp)
3c82(8): lea 0x381(%rsp),%rax
3c8a(6): movzx 0x10(%rsp),%r12d
3c90(5): mov %r15,0x68(%rsp)
3c95(3): mov %rbp,%r14
3c98(3): mov %rdi,%r13
3c9b(5): mov %rax,0x38(%rsp)
3ca0(5): jmp 0x116(%rip)
3ca5(5): cmp $0x0,0x18(%r14)
3caa(6): jz 0x28b(%rip)
3cb0(2): test %al,%al
3cb2(6): jnz 0xe26(%rip)
3cb8(a): mov $0x281470698455040,%rax
3cc2(4): test %rax,0x30(%r14)
3cc6(2): jz 0x2a(%rip)
3cc8(4): mov 0x10(%r14),%rax
3ccc(4): lea 0x1(%rax),%rdx
3cd0(3): mov (%r14),%rax
3cd3(4): add $0x1,%rax
3cd7(2): jnz 0x7(%rip)
3cd9(5): mov $0x1,%eax
3cde(3): test %rdx,%rdx
3ce1(6): jz 0x1281(%rip)
3ce7(3): cmp %rax,%rdx
3cea(6): jnbe 0x1278(%rip)
3cf0(8): mov 0x170(%rsp),%rax
3cf8(3): test %rax,%rax
3cfb(2): jz 0xc(%rip)
3cfd(4): cmp 0x20(%r14),%rax
3d01(6): jz 0xdf6(%rip)
3d07(8): mov 0x178(%rsp),%rax
3d0f(3): test %rax,%rax
3d12(2): jz 0xc(%rip)
3d14(4): cmp 0x28(%r14),%rax
3d18(6): jz 0xdce(%rip)
3d1e(5): movzx 0x30(%r14),%eax
3d23(4): add $0x1,%rbx
3d27(3): xor $0x1,%eax
3d2a(7): and %al,0x180(%rsp)
3d31(5): movzx 0x31(%r14),%eax
3d36(3): xor $0x1,%eax
3d39(7): and %al,0x181(%rsp)
3d40(5): movzx 0x36(%r14),%eax
3d45(3): xor $0x1,%eax
3d48(7): and %al,0x186(%rsp)
3d4f(5): movzx 0x32(%r14),%eax
3d54(3): xor $0x1,%eax
3d57(7): and %al,0x182(%rsp)
3d5e(5): movzx 0x34(%r14),%eax
3d63(3): xor $0x1,%eax
3d66(7): and %al,0x184(%rsp)
3d6d(5): movzx 0x35(%r14),%eax
3d72(3): xor $0x1,%eax
3d75(7): and %al,0x185(%rsp)
3d7c(5): movzx 0x33(%r14),%eax
3d81(3): xor $0x1,%eax
3d84(7): and %al,0x183(%rsp)
3d8b(5): movzx 0x38(%r14),%eax
3d90(3): xor $0x1,%eax
3d93(7): and %al,0x188(%rsp)
3d9a(5): movzx 0x37(%r14),%eax
3d9f(4): mov 0x40(%r14),%r14
3da3(3): xor $0x1,%eax
3da6(7): and %al,0x187(%rsp)
3dad(3): test %r14,%r14
3db0(6): jz 0xd58(%rip)
3db6(5): cmp $0x0,0x39(%r14)
3dbb(3): mov (%r14),%r15
3dbe(4): mov 0x10(%r14),%rbp
3dc2(6): jz 0x115(%rip)
3dc8(4): cmp $0xffffffff,%r15
3dcc(5): mov $0x0,%eax
3dd1(3): mov %r13,%rsi
3dd4(4): cmove %rax,%r15
3dd8(3): mov %r15,%rdi
3ddb(5): call 0x9ef5(%rip)
3de0(5): mov 0x38(%rsp),%rdi
3de5(5): mov $0x2d,%edx
3dea(3): mov %rax,%rsi
3ded(8): mov $0x2b,0x380(%rsp)
3df5(5): call 0xfffff0ab(%rip)
3dfa(4): lea 0x1(%r15),%rdi
3dfe(8): lea 0x3b0(%rsp),%r15
3e06(3): mov %r13,%rsi
3e09(5): mov %rax,0x10(%rsp)
3e0e(5): call 0x9ec2(%rip)
3e13(4): lea 0x3(%r15),%rdi
3e17(5): mov $0x2c,%edx
3e1c(3): mov %rax,%rsi
3e1f(b): mov $0x206b2d,0x3b0(%rsp)
3e2a(5): call 0xfffff076(%rip)
3e2f(5): cmp $0xffffffff,0x10(%r14)
3e34(5): mov %rax,0x18(%rsp)
3e39(2): jz 0x51(%rip)
3e3b(4): add $0x1,%rbp
3e3f(3): mov %r13,%rsi
3e42(3): mov %rbp,%rdi
3e45(5): call 0x9e8b(%rip)
3e4a(5): mov 0x10(%rsp),%rdi
3e4f(3): mov %rax,%rsi
3e52(5): mov $0x2d20,(%rdi)
3e57(4): add $0x2,%rdi
3e5b(5): call 0xffffecf5(%rip)
3e60(2): xor %edi,%edi
3e62(5): cmp $0xffffffff,0x18(%r14)
3e67(3): mov %r13,%rsi
3e6a(4): setz %dil
3e6e(3): add %rbp,%rdi
3e71(5): call 0x9e5f(%rip)
3e76(5): mov 0x18(%rsp),%rdx
3e7b(3): mov %rax,%rsi
3e7e(4): lea 0x1(%rdx),%rdi
3e82(3): mov $0x2c,(%rdx)
3e85(5): call 0xffffeccb(%rip)
3e8a(3): mov %r15,%rsi
3e8d(5): mov $0x1,%edi
3e92(5): call 0xc4de(%rip)
3e97(5): mov 0x30(%rsp),%rsi
3e9c(2): xor %edi,%edi
3e9e(3): mov %rax,%rbp
3ea1(5): call 0xc4cf(%rip)
3ea6(7): lea 0x11403(%rip),%rsi
3ead(3): mov %rax,%r15
3eb0(5): mov $0x5,%edx
3eb5(2): xor %edi,%edi
3eb7(5): call 0xffffedb9(%rip)
3ebc(3): mov %rbp,%r8
3ebf(3): mov %r15,%rcx
3ec2(3): mov %rax,%rdx
3ec5(2): xor %esi,%esi
3ec7(2): xor %edi,%edi
3ec9(2): xor %eax,%eax
3ecb(5): call 0xfffff115(%rip)
3ed0(3): mov (%r14),%r15
3ed3(4): mov 0x10(%r14),%rbp
3ed7(2): xor %eax,%eax
3ed9(4): cmp $0xffffffff,%r15
3edd(2): jz 0x30(%rip)
3edf(3): cmp %rbp,%r15
3ee2(2): jbe 0x2b(%rip)
3ee4(7): lea 0x114cd(%rip),%rsi
3eeb(5): mov $0x5,%edx
3ef0(2): xor %edi,%edi
3ef2(5): call 0xffffed7e(%rip)
3ef7(3): mov %rbx,%rcx
3efa(3): mov %rax,%rdx
3efd(2): xor %esi,%esi
3eff(2): xor %eax,%eax
3f01(2): xor %edi,%edi
3f03(5): call 0xfffff0dd(%rip)
3f08(5): mov $0x1,%eax
3f0d(a): mov $0x281470698455040,%rdi
3f17(4): test %rdi,0x30(%r14)
3f1b(5): mov $0x1,%edx
3f20(2): jnz 0x7(%rip)
3f22(5): movzx 0x36(%r14),%edx
3f27(3): or %r12d,%eax
3f2a(5): cmp $0x0,0x10(%r14)
3f2f(6): jz 0xfffffd76(%rip)
3f35(2): test %al,%al
3f37(6): jnz 0xba1(%rip)
3f3d(a): cmp $0x80,0x2160e1(%rip)
3f47(6): jnz 0xfffffd71(%rip)
3f4d(5): cmp $0x0,0x30(%r14)
3f52(6): jnz 0x10d7(%rip)
3f58(2): test %edx,%edx
3f5a(6): jnz 0x10c4(%rip)
3f60(7): lea 0x11379(%rip),%rsi
3f67(2): xor %edi,%edi
3f69(5): mov $0x5,%edx
3f6e(5): call 0xffffed02(%rip)
3f73(3): mov %rbx,%rcx
3f76(3): mov %rax,%rdx
3f79(2): xor %esi,%esi
3f7b(2): xor %edi,%edi
3f7d(2): xor %eax,%eax
3f7f(5): call 0xfffff061(%rip)
3f84(5): jmp 0xfffffd34(%rip)
3f89(7): nop 0x0(%rax)
3f90(3): mov %rax,%r11
3f93(5): jmp 0xfffff5cd(%rip)
3f98(7): mov 0x216241(%rip),%r10
3f9f(7): mov 0x90(%rsp),%eax
3fa6(8): lea 0x1a0(%rsp),%rcx
3fae(7): lea 0x11556(%rip),%r8
3fb5(2): xor %esi,%esi
3fb7(5): mov $0xa,%edx
3fbc(5): mov %r9d,0x70(%rsp)
3fc1(3): mov %r10,%rdi
3fc4(4): mov %eax,0x78(%rsp)
3fc8(5): mov %r10,0x58(%rsp)
3fcd(5): call 0xe283(%rip)
3fd2(3): cmp $0x1,%eax
3fd5(5): mov 0x70(%rsp),%r9d
3fda(6): jz 0x158c(%rip)
3fe0(2): test %eax,%eax
3fe2(5): mov 0x58(%rsp),%r10
3fe7(6): jnz 0x1c8c(%rip)
3fed(8): mov 0x1a0(%rsp),%rax
3ff5(3): test %rax,%rax
3ff8(5): mov %rax,0x58(%rsp)
3ffd(6): jnz 0xfffff841(%rip)
4003(7): lea 0x11156(%rip),%rsi
400a(5): mov $0x5,%edx
400f(2): xor %edi,%edi
4011(5): call 0xffffec5f(%rip)
4016(2): xor %esi,%esi
4018(3): mov %rax,%rdx
401b(5): mov $0x2,%edi
4020(2): xor %eax,%eax
4022(5): call 0xffffefbe(%rip)
4027(5): mov 0x40(%rsp),%rdi
402c(7): mov 0x2161ad(%rip),%rdx
4033(3): test %rdi,%rdi
4036(2): jz 0x26(%rip)
4038(3): mov %rdx,%rsi
403b(5): mov %r9d,0x70(%rsp)
4040(5): mov %rdx,0x40(%rsp)
4045(5): call 0xffffedfb(%rip)
404a(2): test %eax,%eax
404c(5): mov 0x40(%rsp),%rdx
4051(5): mov 0x70(%rsp),%r9d
4056(6): jnz 0x18ab(%rip)
405c(5): mov %rdx,0x40(%rsp)
4061(5): jmp 0xfffff7dd(%rip)
4066(7): mov 0x216173(%rip),%r11
406d(7): mov 0x90(%rsp),%eax
4074(8): lea 0x150(%rsp),%rcx
407c(3): xor %r8d,%r8d
407f(2): xor %esi,%esi
4081(5): mov $0xa,%edx
4086(8): mov %r9d,0x8c(%rsp)
408e(3): mov %r11,%rdi
4091(8): mov %r11,0x80(%rsp)
4099(4): mov %eax,0x70(%rsp)
409d(5): call 0xe683(%rip)
40a2(8): lea 0x1a0(%rsp),%rsi
40aa(5): mov $0x7,%edi
40af(4): mov %eax,0x78(%rsp)
40b3(5): call 0xfffff05d(%rip)
40b8(2): test %eax,%eax
40ba(6): mov $0x11,%r10d
40c0(8): mov 0x80(%rsp),%r11
40c8(8): mov 0x8c(%rsp),%r9d
40d0(2): jnz 0xd(%rip)
40d2(7): mov 0x1a0(%rsp),%eax
40d9(4): lea 0xfffffffd(%rax),%r10d
40dd(5): cmp $0x0,0x78(%rsp)
40e2(6): jnz 0x8aa(%rip)
40e8(8): mov 0x150(%rsp),%rax
40f0(2): mov %eax,%edx
40f2(6): mov %eax,0x215f2c(%rip)
40f8(3): cmp %rdx,%rax
40fb(2): jnz 0x14(%rip)
40fd(3): cmp $0x1,%eax
4100(6): jbe 0x188c(%rip)
4106(3): cmp %r10d,%eax
4109(6): jbe 0xfffff735(%rip)
410f(3): mov %r11,%rdi
4112(5): mov %r10d,0x8(%rsp)
4117(5): call 0xc279(%rip)
411c(3): mov %rax,%rbp
411f(5): movsxd 0x70(%rsp),%rax
4124(7): lea 0x2154b5(%rip),%rdx
412b(7): lea 0x11582(%rip),%rsi
4132(2): xor %edi,%edi
4134(4): shl/sal $0x5,%rax
4138(4): mov 0x0(%rdx,%rax,1),%rbx
413c(5): mov $0x5,%edx
4141(5): call 0xffffeb2f(%rip)
4146(3): mov %rbp,%r8
4149(3): mov %rax,%rdx
414c(2): xor %esi,%esi
414e(3): mov %rbx,%rcx
4151(2): xor %edi,%edi
4153(2): xor %eax,%eax
4155(5): call 0xffffee8b(%rip)
415a(5): mov 0x8(%rsp),%r10d
415f(8): lea 0x3b0(%rsp),%rsi
4167(3): mov %r10d,%edi
416a(5): call 0x9b26(%rip)
416f(7): lea 0x10f72(%rip),%rsi
4176(3): mov %rax,%rbp
4179(5): mov $0x5,%edx
417e(2): xor %edi,%edi
4180(5): call 0xffffeaf0(%rip)
4185(3): mov %rbp,%r8
4188(3): mov %rax,%rdx
418b(3): mov %rbx,%rcx
418e(2): xor %esi,%esi
4190(5): mov $0x2,%edi
4195(2): xor %eax,%eax
4197(5): call 0xffffee49(%rip)
419c(7): mov 0x21603d(%rip),%rax
41a3(5): mov %rax,0x18(%rsp)
41a8(5): jmp 0xfffff696(%rip)
41ad(7): mov 0x216274(%rip),%rdi
41b4(7): mov 0x216025(%rip),%rdx
41bb(3): test %rdi,%rdi
41be(2): jz 0x26(%rip)
41c0(3): mov %rdx,%rsi
41c3(5): mov %r9d,0x78(%rsp)
41c8(5): mov %rdx,0x70(%rsp)
41cd(5): call 0xffffec73(%rip)
41d2(2): test %eax,%eax
41d4(5): mov 0x70(%rsp),%rdx
41d9(5): mov 0x78(%rsp),%r9d
41de(6): jnz 0x1747(%rip)
41e4(7): mov %rdx,0x21623d(%rip)
41eb(5): jmp 0xfffff653(%rip)
41f0(7): mov $0x1,0x216229(%rip)
41f7(5): jmp 0xfffff647(%rip)
41fc(7): mov $0x0,0x215e35(%rip)
4203(5): jmp 0xfffff63b(%rip)
4208(7): movsxd 0x215fc9(%rip),%rdx
420f(3): mov %rdx,%rax
4212(5): mov 0xfffffff8(%rbp,%rdx,8),%rdx
4217(7): cmp 0x215fc2(%rip),%rdx
421e(6): jnz 0xfffff620(%rip)
4224(3): movsx (%rdx),%ecx
4227(2): mov %ecx,%esi
4229(3): sub $0x30,%ecx
422c(3): cmp $0x9,%ecx
422f(6): jbe 0x1435(%rip)
4235(2): xor %edx,%edx
4237(3): test %sil,%sil
423a(3): setnz %dl
423d(2): sub %edx,%eax
423f(6): mov %eax,0x215f93(%rip)
4245(5): jmp 0xfffff5f9(%rip)
424a(7): mov $0x1,0x2161e8(%rip)
4251(5): jmp 0xfffff5ed(%rip)
4256(7): mov 0x215f83(%rip),%rdx
425d(3): movsx (%rdx),%eax
4260(2): test %al,%al
4262(6): jz 0x18c7(%rip)
4268(4): cmp $0x0,0x1(%rdx)
426c(2): jz 0x2f(%rip)
426e(7): lea 0x114a8(%rip),%rsi
4275(3): mov %rdx,%rdi
4278(5): mov %r9d,0x78(%rsp)
427d(5): mov %rdx,0x70(%rsp)
4282(5): call 0xffffebbe(%rip)
4287(2): test %eax,%eax
4289(5): mov 0x70(%rsp),%rdx
428e(5): mov 0x78(%rsp),%r9d
4293(6): jnz 0x1778(%rip)
4299(2): xor %eax,%eax
429b(6): mov 0x215d87(%rip),%edx
42a1(6): cmp $0x80,%edx
42a7(2): jz 0xa(%rip)
42a9(2): cmp %eax,%edx
42ab(6): jnz 0x1792(%rip)
42b1(6): mov %eax,0x215d71(%rip)
42b7(5): jmp 0xfffff587(%rip)
42bc(7): mov $0x1,0x216177(%rip)
42c3(5): jmp 0xfffff57b(%rip)
42c8(7): mov 0x215f11(%rip),%rdi
42cf(5): mov %r9d,0x70(%rsp)
42d4(5): call 0x211c(%rip)
42d9(5): mov 0x70(%rsp),%r9d
42de(5): jmp 0xfffff560(%rip)
42e3(7): mov 0x215ef6(%rip),%rdi
42ea(7): mov 0x90(%rsp),%eax
42f1(8): lea 0x150(%rsp),%rcx
42f9(8): lea 0x1a0(%rsp),%rsi
4301(7): lea 0x113fe(%rip),%r8
4308(5): mov $0xa,%edx
430d(5): mov %r9d,0x70(%rsp)
4312(5): mov %rdi,0x78(%rsp)
4317(7): mov %eax,0x80(%rsp)
431e(5): call 0xe402(%rip)
4323(2): test %eax,%eax
4325(5): mov 0x70(%rsp),%r9d
432a(6): jnz 0x689(%rip)
4330(8): mov 0x1a0(%rsp),%rax
4338(4): movsx 0xffffffff(%rax),%eax
433c(3): sub $0x30,%eax
433f(3): cmp $0x9,%eax
4342(2): jnbe 0x29(%rip)
4344(8): mov 0x150(%rsp),%rax
434c(a): mov $0x18014398509481983,%rdx
4356(3): cmp %rdx,%rax
4359(6): jnbe 0x1262(%rip)
435f(4): shl/sal $0xa,%rax
4363(8): mov %rax,0x150(%rsp)
436b(8): mov 0x150(%rsp),%rdx
4373(7): cmp 0x2160de(%rip),%rdx
437a(6): jb 0xfffff4c4(%rip)
4380(6): mov 0x215c9e(%rip),%eax
4386(4): imul %rax,$0x22,%rax
438a(3): cmp %rdx,%rax
438d(4): cmovnae %rdx,%rax
4391(7): mov %rax,0x2160c0(%rip)
4398(5): jmp 0xfffff4a6(%rip)
439d(7): mov 0x215e3c(%rip),%rdx
43a4(3): cmp $0x2b,(%rdx)
43a7(6): jz 0x64e(%rip)
43ad(4): mov %rdx,0x0(%r14,%r15,8)
43b1(4): add $0x1,%r15
43b5(5): jmp 0xfffff489(%rip)
43ba(4): sub $0x8,%rsp
43be(7): mov 0x215e03(%rip),%rdi
43c5(7): mov 0x215d54(%rip),%rcx
43cc(2): push $0x0
43ce(7): lea 0x11374(%rip),%r9
43d5(7): lea 0x11379(%rip),%r8
43dc(7): lea 0x111b5(%rip),%rdx
43e3(7): lea 0x11255(%rip),%rsi
43ea(2): xor %eax,%eax
43ec(5): call 0xd894(%rip)
43f1(2): xor %edi,%edi
43f3(5): call 0xffffeced(%rip)
43f8(5): mov 0x30(%rsp),%rdi
43fd(2): xor %eax,%eax
43ff(5): mov $0x12,%ecx
4404(5): mov 0x30(%rsp),%rsi
4409(7): lea 0x1123f(%rip),%rdx
4410(5): mov %r9d,0x70(%rsp)
4415(2): REP stosd %eax,rdi(%es,10)
4417(7): mov 0x215dc2(%rip),%rdi
441e(c): mov $0xffffffff,0xc0(%rsp)
442a(5): call 0x2b96(%rip)
442f(8): mov 0xb0(%rsp),%rdx
4437(5): mov 0x70(%rsp),%r9d
443c(4): lea 0xffffffff(%rdx),%rcx
4440(3): test %rdx,%rdx
4443(8): mov %rcx,0xb0(%rsp)
444b(6): jz 0x18e0(%rip)
4451(3): cmp $0x2e,(%rax)
4454(6): jz 0x1059(%rip)
445a(9): cmp $0x0,0xb0(%rsp)
4463(6): jz 0x509(%rip)
4469(5): mov 0x30(%rsp),%rsi
446e(2): xor %edx,%edx
4470(3): mov %rax,%rdi
4473(5): mov %r9d,0x70(%rsp)
4478(5): call 0x1d08(%rip)
447d(3): cmp $0x2c,(%rax)
4480(5): mov 0x70(%rsp),%r9d
4485(6): jz 0x107b(%rip)
448b(c): mov $0xffffffff,0xc0(%rsp)
4497(c): mov $0x0,0xc8(%rsp)
44a3(3): cmp $0x0,(%rax)
44a6(6): jnz 0x1872(%rip)
44ac(5): mov 0x30(%rsp),%rdi
44b1(5): mov $0x48,%esi
44b6(5): mov %r9d,0x70(%rsp)
44bb(5): call 0xdb25(%rip)
44c0(7): mov 0x215f69(%rip),%rdx
44c7(5): mov 0x70(%rsp),%r9d
44cc(7): lea 0x215f5d(%rip),%rcx
44d3(3): test %rdx,%rdx
44d6(6): jz 0x399(%rip)
44dc(4): lea 0x40(%rdx),%rcx
44e0(4): mov 0x40(%rdx),%rdx
44e4(2): jmp 0xffffffef(%rip)
44e6(5): mov 0x28(%rsp),%rdi
44eb(7): mov 0x215cee(%rip),%rdx
44f2(3): test %rdi,%rdi
44f5(2): jz 0x26(%rip)
44f7(3): mov %rdx,%rsi
44fa(5): mov %r9d,0x70(%rsp)
44ff(5): mov %rdx,0x28(%rsp)
4504(5): call 0xffffe93c(%rip)
4509(2): test %eax,%eax
450b(5): mov 0x28(%rsp),%rdx
4510(5): mov 0x70(%rsp),%r9d
4515(6): jnz 0x1434(%rip)
451b(5): mov %rdx,0x28(%rsp)
4520(5): jmp 0xfffff31e(%rip)
4525(5): mov $0x1,0x48(%rsp)
452a(5): jmp 0xfffff314(%rip)
452f(7): cmp $0x0,0x215f04(%rip)
4536(2): jnz 0x13(%rip)
4538(7): cmp $0x0,0x215efa(%rip)
453f(2): jnz 0xa(%rip)
4541(8): mov $0x0,0x187(%rsp)
4549(8): lea 0x3b0(%rsp),%rbx
4551(5): mov 0x8(%rsp),%rdi
4556(3): mov %rbx,%rsi
4559(5): call 0x1b77(%rip)
455e(2): xor %eax,%eax
4560(4): or $0xffffffff,%rcx
4564(3): mov %rbx,%rdi
4567(2): REPNZ scasb rdi(%es,10),%al
4569(7): lea 0x11229(%rip),%rdx
4570(7): lea 0x1123c(%rip),%rsi
4577(2): xor %edi,%edi
4579(3): mov %rcx,%rax
457c(6): mov $0x5,%r8d
4582(3): not %rax
4585(4): lea 0xffffffff(%rax),%rcx
4589(5): call 0xffffeab7(%rip)
458e(2): xor %esi,%esi
4590(3): mov %rax,%rdx
4593(2): xor %edi,%edi
4595(2): xor %eax,%eax
4597(3): mov %rbx,%rcx
459a(5): call 0xffffea46(%rip)
459f(3): test %bpl,%bpl
45a2(8): mov %bpl,0x187(%rsp)
45aa(2): jz 0x3f(%rip)
45ac(7): cmp $0x0,0x215e87(%rip)
45b3(2): jnz 0x36(%rip)
45b5(7): cmp $0x0,0x215e7d(%rip)
45bc(2): jnz 0x2d(%rip)
45be(8): cmp $0x0,0x215e6a(%rip)
45c6(2): jz 0x23(%rip)
45c8(7): lea 0x10d89(%rip),%rsi
45cf(5): mov $0x5,%edx
45d4(2): xor %edi,%edi
45d6(5): call 0xffffe69a(%rip)
45db(2): xor %esi,%esi
45dd(3): mov %rax,%rdx
45e0(2): xor %edi,%edi
45e2(2): xor %eax,%eax
45e4(5): call 0xffffe9fc(%rip)
45e9(8): movzx 0x137(%rsp),%eax
45f1(3): test %r13b,%r13b
45f4(6): mov %al,0x215e41(%rip)
45fa(6): jnz 0x2d1(%rip)
4600(8): cmp $0x0,0x215e40(%rip)
4608(6): jz 0x2a1(%rip)
460e(3): test %r15,%r15
4611(6): jz 0x26e(%rip)
4617(7): mov 0x215e3a(%rip),%rdx
461e(3): test %rdx,%rdx
4621(2): jz 0x1a(%rip)
4623(6): mov 0x2159fb(%rip),%eax
4629(4): imul %rax,$0x22,%rax
462d(3): cmp %rdx,%rax
4630(4): cmovnae %rdx,%rax
4634(7): mov %rax,0x215e1d(%rip)
463b(3): test %r12b,%r12b
463e(6): jz 0x523(%rip)
4644(4): cmp $0x1,%r15
4648(6): jnbe 0x166f(%rip)
464e(6): cmp $0x0,0x28(%rsp)
4654(6): jnz 0x169f(%rip)
465a(3): mov (%r14),%r13
465d(7): lea 0x1122f(%rip),%rsi
4664(3): mov %r13,%rdi
4667(5): call 0x2a49(%rip)
466c(3): test %rax,%rax
466f(5): mov %rax,0x10(%rsp)
4674(6): jz 0x169c(%rip)
467a(7): movzx 0x215db8(%rip),%ebx
4681(7): mov 0x215da8(%rip),%rax
4688(5): mov $0x20,%esi
468d(5): mov %rax,0x20(%rsp)
4692(7): mov 0x215997(%rip),%rax
4699(3): xor $0x1,%ebx
469c(7): cmp %rax,0x215db5(%rip)
46a3(8): cmovnb 0x215dad(%rip),%rax
46ab(3): movzx %bl,%ebx
46ae(3): xor %r14d,%r14d
46b1(3): mov %rax,%rdx
46b4(8): lea 0x150(%rsp),%rax
46bc(3): mov %rax,%rdi
46bf(5): mov %rax,0x8(%rsp)
46c4(5): call 0x1ddc(%rip)
46c9(8): lea 0x90(%rsp),%rax
46d1(c): mov $0x0,0x90(%rsp)
46dd(9): mov $0x0,0x18(%rsp)
46e6(5): mov %rax,0x28(%rsp)
46eb(5): mov 0x10(%rsp),%rsi
46f0(5): mov 0x8(%rsp),%rdi
46f5(3): mov %r13,%rdx
46f8(5): call 0x5018(%rip)
46fd(2): test %al,%al
46ff(6): jz 0xf28(%rip)
4705(8): mov 0x168(%rsp),%rdi
470d(8): add 0x150(%rsp),%rdi
4715(8): mov 0x160(%rsp),%rax
471d(3): mov %rdi,%rbp
4720(4): shl/sal $0x5,%rax
4724(4): lea 0xffffffe0(%rdi),%r15
4728(3): sub %rax,%rbp
472b(3): test %r14,%r14
472e(2): jz 0x1e(%rip)
4730(5): jmp 0xc6(%rip)
4735(3): nop (%rax)
4738(4): sub $0x20,%r15
473c(3): mov %r15,%rsi
473f(5): call 0x3fa1(%rip)
4744(2): cmp %eax,%ebx
4746(6): jle 0xc5(%rip)
474c(3): cmp %r15,%rbp
474f(3): mov %r15,%rdi
4752(2): jb 0xffffffe6(%rip)
4754(4): mov 0x8(%r15),%rdx
4758(8): mov 0x160(%rsp),%rdi
4760(5): add %rdi,0x18(%rsp)
4765(3): cmp %rdx,%r14
4768(2): jb 0x60(%rip)
476a(3): mov (%r15),%rsi
476d(8): mov 0x90(%rsp),%rdi
4775(5): call 0xffffe70b(%rip)
477a(6): cmp $0x0,0x20(%rsp)
4780(4): mov 0x8(%r15),%rax
4784(8): mov %rax,0x98(%rsp)
478c(6): jz 0xffffff5f(%rip)
4792(4): mov 0x10(%r15),%rdx
4796(8): mov 0x90(%rsp),%rax
479e(3): mov (%r15),%rcx
47a1(3): add %rax,%rdx
47a4(4): add 0x18(%r15),%rax
47a8(3): sub %rcx,%rdx
47ab(8): mov %rdx,0xa0(%rsp)
47b3(3): sub %rcx,%rax
47b6(8): mov %rax,0xa8(%rsp)
47be(5): jmp 0xffffff2d(%rip)
47c3(3): cmp %r14,%rdx
47c6(2): jbe 0xa(%rip)
47c8(3): add %r14,%r14
47cb(2): jnz 0xfffffff8(%rip)
47cd(3): mov %rdx,%r14
47d0(8): mov 0x90(%rsp),%rdi
47d8(5): call 0xffffe9e8(%rip)
47dd(3): mov %r14,%rdi
47e0(5): call 0xd600(%rip)
47e5(4): mov 0x8(%r15),%rdx
47e9(8): mov %rax,0x90(%rsp)
47f1(5): jmp 0xffffff79(%rip)
47f6(5): mov 0x28(%rsp),%rdi
47fb(3): mov %r15,%rsi
47fe(5): call 0x3ee2(%rip)
4803(2): cmp %eax,%ebx
4805(6): jnle 0xffffff47(%rip)
480b(2): xor %ebx,%ebx
480d(4): cmp $0x63,%r12b
4811(6): jz 0xba0(%rip)
4817(5): mov 0x10(%rsp),%rdi
481c(3): mov %r13,%rsi
481f(5): call 0x29d1(%rip)
4824(8): mov 0x150(%rsp),%rdi
482c(5): call 0xffffe994(%rip)
4831(8): mov 0x90(%rsp),%rdi
4839(5): call 0xffffe987(%rip)
483e(2): mov %ebx,%eax
4840(3): xor $0x1,%eax
4843(3): movzx %al,%eax
4846(8): mov 0x3e8(%rsp),%rbx
484e(9): xor $0x28,%rbx
4857(6): jnz 0x14e7(%rip)
485d(7): add $0x3f8,%rsp
4864(1): pop %rbx
4865(1): pop %rbp
4866(2): pop %r12
4868(2): pop %r13
486a(2): pop %r14
486c(2): pop %r15
486e(1): ret near (%rsp)
486f(3): mov %rax,(%rcx)
4872(8): mov $0x0,0x40(%rax)
487a(5): jmp 0xffffefc4(%rip)
487f(3): mov %r14,%rdi
4882(6): mov $0x1,%r15d
4888(5): call 0xffffe938(%rip)
488d(5): mov $0x8,%edi
4892(5): call 0xd54e(%rip)
4897(3): mov %rax,%r14
489a(7): lea 0x11d99(%rip),%rax
48a1(3): mov %rax,(%r14)
48a4(5): jmp 0xfffffd73(%rip)
48a9(7): lea 0x10f1b(%rip),%rdi
48b0(5): call 0xffffe210(%rip)
48b5(3): test %rax,%rax
48b8(6): jz 0x20e(%rip)
48be(3): mov %rax,%rdi
48c1(5): call 0x1b2f(%rip)
48c6(5): jmp 0xfffffd48(%rip)
48cb(5): mov 0x40(%rsp),%rdi
48d0(5): mov $0x10,%esi
48d5(5): call 0xbb3b(%rip)
48da(3): test %rax,%rax
48dd(3): mov %rax,%rbp
48e0(5): mov $0x5,%edx
48e5(7): lea 0x10bb3(%rip),%rsi
48ec(6): jz 0x1229(%rip)
48f2(8): lea 0x3b0(%rsp),%rbx
48fa(3): mov %rax,%rdi
48fd(5): mov $0x10,%edx
4902(3): mov %rbx,%rsi
4905(5): call 0xbe5b(%rip)
490a(3): mov %rbp,%rdi
490d(5): call 0xbff3(%rip)
4912(2): test %eax,%eax
4914(6): jnz 0x11f5(%rip)
491a(7): lea 0x2159bf(%rip),%rdi
4921(5): call 0x69ef(%rip)
4926(7): lea 0x2159b3(%rip),%rdx
492d(5): mov $0x10,%esi
4932(3): mov %rbx,%rdi
4935(5): call 0x72bb(%rip)
493a(5): jmp 0xfffffcc6(%rip)
493f(7): lea 0x10e3e(%rip),%rsi
4946(2): xor %edi,%edi
4948(5): mov $0x5,%edx
494d(5): call 0xffffe323(%rip)
4952(7): lea 0x110fb(%rip),%rdx
4959(3): mov %rax,%rcx
495c(2): xor %esi,%esi
495e(2): xor %edi,%edi
4960(2): xor %eax,%eax
4962(5): call 0xffffe67e(%rip)
4967(5): jmp 0xfffff281(%rip)
496c(9): cmp $0x0,0xb8(%rsp)
4975(6): jnz 0xfffffaf4(%rip)
497b(c): mov $0xffffffff,0xb0(%rsp)
4987(5): jmp 0xfffffae2(%rip)
498c(4): mov 0x78(%rsp),%eax
4990(3): cmp $0x1,%eax
4993(6): jz 0xfffff77c(%rip)
4999(4): mov 0x70(%rsp),%esi
499d(7): lea 0x214c3c(%rip),%rcx
49a4(3): mov %r11,%r8
49a7(5): mov $0xffffff84,%edx
49ac(2): mov %eax,%edi
49ae(5): call 0xdcc2(%rip)
49b3(3): cmp $0x2,%eax
49b6(2): jnz 0x20(%rip)
49b8(8): mov 0x1a0(%rsp),%rdx
49c0(4): movsx 0xffffffff(%rdx),%ecx
49c4(3): sub $0x30,%ecx
49c7(3): cmp $0x9,%ecx
49ca(2): jnbe 0xc(%rip)
49cc(4): cmp $0x0,0x1(%rdx)
49d0(6): jz 0xdbf(%rip)
49d6(5): mov 0x78(%rsp),%r8
49db(7): mov 0x80(%rsp),%esi
49e2(7): lea 0x214bf7(%rip),%rcx
49e9(5): mov $0x53,%edx
49ee(2): mov %eax,%edi
49f0(5): call 0xdc80(%rip)
49f5(7): movsxd 0x2157dc(%rip),%rax
49fc(2): cmp %ebx,%eax
49fe(6): jz 0xc3d(%rip)
4a04(5): mov 0x0(%rbp,%rax,8),%rax
4a09(8): mov $0x0,0x70(%rsp)
4a11(3): cmp $0x2d,(%rax)
4a14(6): jz 0xbb1(%rip)
4a1a(6): cmp $0x0,0x68(%rsp)
4a20(3): setz %al
4a23(4): and 0x70(%rsp),%eax
4a27(4): or %al,0x10(%rsp)
4a2b(6): jz 0xfffff982(%rip)
4a31(5): mov 0x30(%rsp),%rdi
4a36(2): xor %eax,%eax
4a38(5): mov $0x12,%ecx
4a3d(5): mov 0x30(%rsp),%rsi
4a42(8): mov %r9d,0x80(%rsp)
4a4a(2): REP stosd %eax,rdi(%es,10)
4a4c(4): lea 0x1(%rdx),%rdi
4a50(4): or $0xffffffff,%rcx
4a54(2): xor %edx,%edx
4a56(8): mov %rcx,0xc0(%rsp)
4a5e(5): mov %rcx,0x78(%rsp)
4a63(5): call 0x255d(%rip)
4a68(3): test %rax,%rax
4a6b(5): mov 0x78(%rsp),%rcx
4a70(8): mov 0x80(%rsp),%r9d
4a78(6): jz 0xd2d(%rip)
4a7e(3): cmp $0x2e,(%rax)
4a81(6): jz 0xdf8(%rip)
4a87(9): cmp $0x0,0xb0(%rsp)
4a90(6): jnz 0xbdd(%rip)
4a96(9): cmp $0x0,0xb8(%rsp)
4a9f(6): jnz 0xbce(%rip)
4aa5(c): mov $0xffffffff,0xb0(%rsp)
4ab1(3): test %rax,%rax
4ab4(6): jnz 0xbb9(%rip)
4aba(7): mov 0x21571f(%rip),%rdx
4ac1(5): jmp 0xfffff8ec(%rip)
4ac6(7): lea 0x10a50(%rip),%rax
4acd(5): jmp 0xfffffdf1(%rip)
4ad2(6): nop 0x0(%rax,%rax,1)
4ad8(3): test %r12b,%r12b
4adb(6): jnz 0xfffff215(%rip)
4ae1(5): jmp 0xfffff1d7(%rip)
4ae6(c): mov $0x0,0x178(%rsp)
4af2(5): jmp 0xfffff22c(%rip)
4af7(c): mov $0x0,0x170(%rsp)
4b03(5): jmp 0xfffff204(%rip)
4b08(6): movzx 0x50(%rsp),%r13d
4b0e(6): movzx 0x60(%rsp),%r12d
4b14(5): mov 0x68(%rsp),%r15
4b19(5): mov 0x70(%rsp),%r14
4b1e(5): mov 0x8(%rsp),%rdi
4b23(5): call 0x154d(%rip)
4b28(2): test %al,%al
4b2a(8): movzx 0x187(%rsp),%ebp
4b32(6): jz 0xfffff9fd(%rip)
4b38(3): test %bpl,%bpl
4b3b(6): jz 0xfffffaae(%rip)
4b41(7): cmp $0x0,0x2158f2(%rip)
4b48(6): jz 0xa61(%rip)
4b4e(8): cmp $0x0,0x2158da(%rip)
4b56(6): jnz 0xfffff9f3(%rip)
4b5c(5): jmp 0xfffffa50(%rip)
4b61(7): lea 0x11ad2(%rip),%rbx
4b68(3): mov %r14,%rbp
4b6b(3): xor %r12d,%r12d
4b6e(2): nop 
4b70(4): mov 0x0(%rbp),%rdx
4b74(5): mov $0x2,%ecx
4b79(3): mov %rbx,%rdi
4b7c(3): mov %rdx,%rsi
4b7f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4b81(3): setnbe %al
4b84(2): sbb $0x0,%al
4b86(2): test %al,%al
4b88(2): jz 0x17(%rip)
4b8a(5): mov $0x4,%esi
4b8f(3): mov %rdx,%rdi
4b92(5): call 0xffffe4de(%rip)
4b97(2): test %eax,%eax
4b99(6): jnz 0xd21(%rip)
4b9f(4): add $0x1,%r12
4ba3(4): add $0x8,%rbp
4ba7(3): cmp %r12,%r15
4baa(2): jnz 0xffffffc6(%rip)
4bac(5): mov 0x28(%rsp),%rax
4bb1(3): test %rax,%rax
4bb4(2): jz 0x2f(%rip)
4bb6(3): mov %rax,%rdi
4bb9(5): mov $0x1b6,%edx
4bbe(2): xor %eax,%eax
4bc0(5): mov $0x80041,%esi
4bc5(5): call 0xffffe44b(%rip)
4bca(2): test %eax,%eax
4bcc(6): js 0x107d(%rip)
4bd2(3): cmp $0x1,%eax
4bd5(2): jz 0xe(%rip)
4bd7(5): mov $0x1,%esi
4bdc(2): mov %eax,%edi
4bde(5): call 0x3e82(%rip)
4be3(5): cmp $0x0,0x48(%rsp)
4be8(6): jnz 0x78b(%rip)
4bee(6): cmp $0x0,0x58(%rsp)
4bf4(6): jz 0xa12(%rip)
4bfa(5): mov 0x58(%rsp),%rbx
4bff(a): mov $0x72057594037927935,%rax
4c09(5): mov %r14,0x68(%rsp)
4c0e(5): mov 0x20(%rsp),%r14
4c13(c): mov $0x0,0x168(%rsp)
4c1f(5): mov %r15,0x38(%rsp)
4c24(3): cmp %rax,%rbx
4c27(4): cmovbe %rbx,%rax
4c2b(3): xor %r13d,%r13d
4c2e(3): mov %rax,%rbx
4c31(5): mov %rax,0x40(%rsp)
4c36(3): add %rax,%rbx
4c39(4): shl/sal $0x8,%rax
4c3d(5): mov %rbx,0x50(%rsp)
4c42(5): mov %rax,0x48(%rsp)
4c47(5): mov 0x68(%rsp),%rax
4c4c(7): lea 0x10c40(%rip),%rsi
4c53(3): mov (%rax),%rax
4c56(3): mov %rax,%rdi
4c59(5): mov %rax,0x10(%rsp)
4c5e(5): call 0x2452(%rip)
4c63(3): test %rax,%rax
4c66(5): mov %rax,0x8(%rsp)
4c6b(6): jz 0xc8c(%rip)
4c71(6): cmp $0x1,0x58(%rsp)
4c77(9): mov $0x30,0x60(%rsp)
4c80(2): jbe 0x26(%rip)
4c82(5): mov 0x40(%rsp),%rcx
4c87(5): mov $0x1,%edx
4c8c(5): mov $0x1,%eax
4c91(3): add %rax,%rax
4c94(4): add $0x1,%rdx
4c98(3): cmp %rax,%rcx
4c9b(2): jnbe 0xfffffff6(%rip)
4c9d(4): shl/sal $0x5,%rdx
4ca1(5): mov %rdx,0x60(%rsp)
4ca6(8): mov 0x168(%rsp),%rbp
4cae(8): lea 0x150(%rsp),%rax
4cb6(5): mov %rax,0x20(%rsp)
4cbb(3): test %rbp,%rbp
4cbe(6): jz 0x386(%rip)
4cc4(8): lea 0x90(%rsp),%rax
4ccc(8): mov $0x0,0x180(%rsp)
4cd4(6): sub $0x1,0x38(%rsp)
4cda(5): mov %rax,0x30(%rsp)
4cdf(5): jmp 0x10f(%rip)
4ce4(4): nop 0x0(%rax)
4ce8(5): mov 0x50(%rsp),%rsi
4ced(7): lea 0x1e8c(%rip),%rdi
4cf4(5): call 0x8c3c(%rip)
4cf9(4): lea 0x8(%r14),%rdi
4cfd(2): xor %esi,%esi
4cff(8): mov %rax,0x2c0(%rsp)
4d07(5): call 0xffffe469(%rip)
4d0c(4): lea 0x30(%r14),%rdi
4d10(2): xor %esi,%esi
4d12(5): call 0xffffe1be(%rip)
4d17(5): mov 0x48(%rsp),%rdi
4d1c(8): mov 0x160(%rsp),%r15
4d24(5): call 0xd0bc(%rip)
4d29(4): lea 0x58(%rax),%rdi
4d2d(4): mov %r15,0x30(%rax)
4d31(4): mov %r15,0x28(%rax)
4d35(2): xor %esi,%esi
4d37(8): mov $0x0,0x18(%rax)
4d3f(8): mov $0x0,0x10(%rax)
4d47(8): mov $0x0,0x8(%rax)
4d4f(7): mov $0x0,(%rax)
4d56(8): mov $0x0,0x20(%rax)
4d5e(8): mov $0x0,0x38(%rax)
4d66(7): mov $0x0,0x50(%rax)
4d6d(4): mov $0x0,0x54(%rax)
4d71(5): mov %rax,0x18(%rsp)
4d76(5): call 0xffffe3fa(%rip)
4d7b(5): mov 0x18(%rsp),%r10
4d80(3): mov %r15,%r8
4d83(5): mov 0x40(%rsp),%r15
4d88(3): xor %r9d,%r9d
4d8b(3): mov %rbx,%rdx
4d8e(7): lea 0x80(%r10),%r11
4d95(3): mov %r10,%rdi
4d98(3): mov %r15,%rcx
4d9b(3): mov %r11,%rsi
4d9e(5): mov %r11,0x18(%rsp)
4da3(5): call 0x1a5d(%rip)
4da8(4): sub $0x8,%rsp
4dac(3): mov %r14,%r8
4daf(3): mov %r15,%rsi
4db2(1): push %rbp
4db3(5): mov 0x28(%rsp),%r11
4db8(3): mov %rbx,%rdi
4dbb(8): mov 0xa0(%rsp),%r9
4dc3(8): mov 0x170(%rsp),%rdx
4dcb(3): mov %r11,%rcx
4dce(5): call 0x4222(%rip)
4dd3(1): pop %rdx
4dd4(1): pop %rcx
4dd5(8): mov 0x90(%rsp),%rdi
4ddd(3): mov %rbp,%rsi
4de0(5): call 0x2410(%rip)
4de5(3): test %r12b,%r12b
4de8(6): jnz 0x1c9(%rip)
4dee(5): mov 0x10(%rsp),%rdx
4df3(5): mov 0x8(%rsp),%rsi
4df8(5): mov 0x20(%rsp),%rdi
4dfd(5): call 0x4913(%rip)
4e02(2): test %al,%al
4e04(6): jz 0x187(%rip)
4e0a(9): movzx 0x180(%rsp),%r12d
4e13(8): mov 0x168(%rsp),%rbx
4e1b(3): test %r12b,%r12b
4e1e(2): jz 0x36(%rip)
4e20(6): cmp $0x0,0x38(%rsp)
4e26(2): jz 0x80(%rip)
4e28(5): mov 0x60(%rsp),%rdi
4e2d(8): mov 0x158(%rsp),%rdx
4e35(3): mov %rbx,%rax
4e38(4): lea 0x1(%rdi),%rcx
4e3c(3): sub %rdx,%rax
4e3f(9): imul 0x160(%rsp),%rdi
4e48(3): sub %rdi,%rax
4e4b(3): cmp %rax,%rcx
4e4e(6): jb 0x7fa(%rip)
4e54(8): add 0x150(%rsp),%rbx
4e5c(b): mov $0x0,0x2159f9(%rip)
4e67(5): mov 0x30(%rsp),%rdi
4e6c(2): xor %esi,%esi
4e6e(4): add $0x1,%r13
4e72(3): xor %r12d,%r12d
4e75(5): call 0x3e8b(%rip)
4e7a(4): lea 0xd(%rax),%rbp
4e7e(9): cmp $0x1,0x160(%rsp)
4e87(6): jnbe 0xfffffe61(%rip)
4e8d(8): mov 0x90(%rsp),%rsi
4e95(4): lea 0xffffffe0(%rbx),%rdi
4e99(3): mov %rbp,%rdx
4e9c(5): call 0x3b54(%rip)
4ea1(5): jmp 0xffffff34(%rip)
4ea6(8): add 0x150(%rsp),%rbx
4eae(3): test %r13,%r13
4eb1(b): mov $0x0,0x2159a4(%rip)
4ebc(2): jnz 0xffffffab(%rip)
4ebe(9): cmp $0x0,0x170(%rsp)
4ec7(2): jnz 0xffffffa0(%rip)
4ec9(5): mov 0x10(%rsp),%rsi
4ece(5): mov 0x8(%rsp),%rdi
4ed3(5): call 0x231d(%rip)
4ed8(5): mov 0x28(%rsp),%rdi
4edd(7): lea 0x10606(%rip),%rsi
4ee4(5): call 0x21cc(%rip)
4ee9(3): test %rax,%rax
4eec(6): jz 0xa01(%rip)
4ef2(8): mov %rax,0x90(%rsp)
4efa(5): mov 0x28(%rsp),%rbp
4eff(5): mov 0x38(%rsp),%r13
4f04(5): jmp 0xffffff7a(%rip)
4f09(5): mov 0x38(%rsp),%rdi
4f0e(5): call 0x1162(%rip)
4f13(2): test %al,%al
4f15(6): jz 0x53e(%rip)
4f1b(7): cmp $0x0,0x2154fe(%rip)
4f22(6): jz 0x51e(%rip)
4f28(5): mov $0x0,0x10(%rsp)
4f2d(3): xor %r13d,%r13d
4f30(5): jmp 0xffffec7b(%rip)
4f35(7): lea 0x1033c(%rip),%rsi
4f3c(2): xor %edi,%edi
4f3e(5): mov $0x5,%edx
4f43(5): call 0xffffdd2d(%rip)
4f48(7): lea 0x10b05(%rip),%rdx
4f4f(3): mov %rax,%rcx
4f52(2): xor %esi,%esi
4f54(2): xor %edi,%edi
4f56(2): xor %eax,%eax
4f58(5): call 0xffffe088(%rip)
4f5d(5): jmp 0xffffecd3(%rip)
4f62(7): lea 0x103bf(%rip),%rsi
4f69(2): xor %edi,%edi
4f6b(5): mov $0x5,%edx
4f70(5): call 0xffffdd00(%rip)
4f75(3): mov %rbx,%rcx
4f78(3): mov %rax,%rdx
4f7b(2): xor %esi,%esi
4f7d(2): xor %edi,%edi
4f7f(2): xor %eax,%eax
4f81(5): call 0xffffe05f(%rip)
4f86(5): jmp 0xffffed6a(%rip)
4f8b(5): mov 0x10(%rsp),%rsi
4f90(5): mov 0x8(%rsp),%rdi
4f95(5): call 0x225b(%rip)
4f9a(6): cmp $0x0,0x38(%rsp)
4fa0(6): jz 0x34e(%rip)
4fa6(6): add $0x8,0x68(%rsp)
4fac(5): jmp 0xfffffc9b(%rip)
4fb1(8): mov 0x150(%rsp),%rdi
4fb9(5): call 0xffffe207(%rip)
4fbe(3): or $0xff,%ebx
4fc1(7): cmp $0x0,0x2153b4(%rip)
4fc8(2): jle 0x13(%rip)
4fca(2): mov %ebx,%edi
4fcc(5): call 0x1654(%rip)
4fd1(6): mov 0x2153a5(%rip),%eax
4fd7(2): test %eax,%eax
4fd9(2): jnle 0xfffffff1(%rip)
4fdb(7): cmp $0x0,0x215456(%rip)
4fe2(2): jnz 0x9(%rip)
4fe4(2): xor %eax,%eax
4fe6(5): jmp 0xfffff860(%rip)
4feb(7): mov 0x2151de(%rip),%rdi
4ff2(5): call 0xdb4e(%rip)
4ff7(3): add $0x1,%eax
4ffa(2): jnz 0xffffffea(%rip)
4ffc(7): lea 0x104b6(%rip),%rsi
5003(2): xor %edi,%edi
5005(5): mov $0x5,%edx
500a(5): call 0xffffdc66(%rip)
500f(7): lea 0x11624(%rip),%rsi
5016(3): mov %rax,%rdi
5019(5): call 0x1307(%rip)
501e(5): cmp $0x0,0x8(%r14)
5023(6): jnz 0xffffef3d(%rip)
5029(5): cmp $0x0,0x31(%r14)
502e(6): jnz 0xffffec8a(%rip)
5034(5): cmp $0x0,0x18(%r14)
5039(6): jz 0xffffec7f(%rip)
503f(5): jmp 0xffffef21(%rip)
5044(5): mov 0x60(%rsp),%rax
5049(5): mov %r13,0x18(%rsp)
504e(3): mov %rbp,%r13
5051(4): lea 0x1(%rax),%rbx
5055(4): lea 0x2(%rax),%r12
5059(5): jmp 0x9c(%rip)
505e(2): xor %esi,%esi
5060(5): mov $0x1,%edi
5065(5): call 0xffffdebb(%rip)
506a(2): test %eax,%eax
506c(3): setnz %al
506f(2): test %al,%al
5071(6): jnz 0xbbe(%rip)
5077(7): mov 0x2d8(%rsp),%eax
507e(5): and $0xf000,%eax
5083(5): cmp $0x8000,%eax
5088(6): jz 0xb0(%rip)
508e(7): mov 0x2153c3(%rip),%rsi
5095(3): test %rsi,%rsi
5098(6): jnz 0x22c(%rip)
509e(8): cmp $0x0,0x21517a(%rip)
50a6(5): mov $0x20000,%ebp
50ab(6): jz 0xba(%rip)
50b1(3): mov %rbx,%rcx
50b4(2): xor %edx,%edx
50b6(7): mov 0x215163(%rip),%rsi
50bd(4): imul %rbp,%rcx
50c1(4): add $0x1,%rcx
50c5(3): mov %rcx,%rax
50c8(3): div %rbx,%rax
50cb(3): cmp %rax,%rbp
50ce(6): jnz 0x1f6(%rip)
50d4(3): mov %rsi,%rax
50d7(3): sub %r12,%rax
50da(3): cmp %rax,%rcx
50dd(6): jnb 0x1e7(%rip)
50e3(3): add %rcx,%r12
50e6(4): add $0x1,%r13
50ea(5): cmp 0x38(%rsp),%r13
50ef(6): jnb 0x542(%rip)
50f5(3): test %r13,%r13
50f8(6): jz 0x1a9(%rip)
50fe(5): mov 0x68(%rsp),%rax
5103(7): lea 0x11530(%rip),%rsi
510a(4): mov 0x0(%rax,%r13,8),%rbp
510e(3): mov %rbp,%rdi
5111(5): call 0xffffdd2f(%rip)
5116(2): test %eax,%eax
5118(3): mov %r14,%rdx
511b(6): jz 0xffffff43(%rip)
5121(3): mov %rbp,%rsi
5124(5): mov $0x1,%edi
5129(5): call 0xffffdd97(%rip)
512e(2): test %eax,%eax
5130(3): setnz %al
5133(5): jmp 0xffffff3c(%rip)
5138(8): cmp $0x0,0x2150e0(%rip)
5140(8): mov 0x2f0(%rsp),%rbp
5148(6): jnz 0xffffff69(%rip)
514e(7): mov 0x215303(%rip),%rax
5155(3): test %rax,%rax
5158(7): mov %rax,0x2150c1(%rip)
515f(6): jnz 0xffffff52(%rip)
5165(8): lea 0x90(%rsp),%rsi
516d(5): mov $0x2,%edi
5172(4): or $0xffffffff,%r15
5176(5): mov %rsi,0x20(%rsp)
517b(5): call 0xffffdf95(%rip)
5180(2): test %eax,%eax
5182(2): jnz 0xa(%rip)
5184(8): mov 0x90(%rsp),%r15
518c(5): mov 0x20(%rsp),%rsi
5191(5): mov $0x9,%edi
5196(5): call 0xffffdf7a(%rip)
519b(2): test %eax,%eax
519d(2): jnz 0x11(%rip)
519f(8): mov 0x90(%rsp),%rax
51a7(3): cmp %rax,%r15
51aa(4): cmovnbe %rax,%r15
51ae(5): mov 0x20(%rsp),%rsi
51b3(5): mov $0x5,%edi
51b8(3): shr $0x1,%r15
51bb(5): call 0xffffdf55(%rip)
51c0(2): test %eax,%eax
51c2(2): jnz 0x19(%rip)
51c4(8): mov 0x90(%rsp),%rax
51cc(4): shr $0x4,%rax
51d0(4): imul %rax,$0xf,%rax
51d4(3): cmp %rax,%r15
51d7(4): cmovnbe %rax,%r15
51db(5): call 0x90f5(%rip)
51e0(6): movsd %xmm0,0x20(%rsp)
51e6(5): call 0x900a(%rip)
51eb(8): movsd 0x107f5(%rip),%xmm1
51f3(6): movsd 0x20(%rsp),%xmm2
51f9(4): mulsd %xmm0,%xmm1
51fd(8): mulsd 0x107eb(%rip),%xmm0
5205(4): maxsd %xmm1,%xmm2
5209(4): movapd %xmm2,%xmm1
520d(4): pxor %xmm2,%xmm2
5211(5): cvtsi2sd %r15,%xmm2
5216(4): ucomisd %xmm0,%xmm2
521a(2): jbe 0x2a(%rip)
521c(8): movsd 0x107bc(%rip),%xmm2
5224(4): ucomisd %xmm2,%xmm0
5228(6): jb 0x377(%rip)
522e(4): subsd %xmm2,%xmm0
5232(a): mov $0x-9223372036854775808,%rax
523c(5): cvttsd2si %xmm0,%r15
5241(3): xor %rax,%r15
5244(3): test %r15,%r15
5247(6): js 0x32d(%rip)
524d(4): pxor %xmm0,%xmm0
5251(5): cvtsi2sd %r15,%xmm0
5256(4): ucomisd %xmm1,%xmm0
525a(2): jbe 0x2a(%rip)
525c(8): ucomisd 0x1077c(%rip),%xmm1
5264(6): jb 0x331(%rip)
526a(8): subsd 0x1076e(%rip),%xmm1
5272(a): mov $0x-9223372036854775808,%rax
527c(5): cvttsd2si %xmm1,%r15
5281(3): xor %rax,%r15
5284(6): mov 0x214d9a(%rip),%eax
528a(4): imul %rax,$0x22,%rax
528e(3): cmp %r15,%rax
5291(4): cmovnae %r15,%rax
5295(7): mov %rax,0x214f84(%rip)
529c(5): jmp 0xfffffe15(%rip)
52a1(5): mov 0x8(%rsp),%rdi
52a6(5): call 0xffffdbea(%rip)
52ab(3): mov %r14,%rdx
52ae(2): mov %eax,%esi
52b0(5): mov $0x1,%edi
52b5(5): call 0xffffdc6b(%rip)
52ba(2): test %eax,%eax
52bc(3): setnz %al
52bf(5): jmp 0xfffffdb0(%rip)
52c4(5): mov 0x18(%rsp),%r13
52c9(3): mov %rsi,%r12
52cc(8): lea 0x150(%rsp),%rax
52d4(5): mov 0x60(%rsp),%rsi
52d9(3): mov %r12,%rdx
52dc(3): mov %rax,%rdi
52df(5): mov %rax,0x20(%rsp)
52e4(5): call 0x11bc(%rip)
52e9(5): jmp 0xfffff9db(%rip)
52ee(8): mov 0x150(%rsp),%rdi
52f6(5): call 0xffffdeca(%rip)
52fb(5): mov $0x10,%edx
5300(2): xor %ecx,%ecx
5302(7): mov 0x21507f(%rip),%rbx
5309(3): mov %rdx,%rax
530c(3): mul %rax,%r13,%rdx
530f(6): jo 0x95a(%rip)
5315(3): test %rax,%rax
5318(6): js 0x7e2(%rip)
531e(3): test %rcx,%rcx
5321(6): jnz 0x7d9(%rip)
5327(3): mov %r13,%rdi
532a(4): shl/sal $0x4,%rdi
532e(5): call 0xcab2(%rip)
5333(3): mov %rax,%rbp
5336(3): mov %rax,%rdx
5339(2): jmp 0x15(%rip)
533b(4): lea 0xd(%rbx),%rax
533f(4): mov %rbx,0x8(%rdx)
5343(3): mov (%rbx),%rbx
5346(4): add $0x10,%rdx
534a(4): mov %rax,0xfffffff0(%rdx)
534e(3): test %rbx,%rbx
5351(2): jnz 0xffffffea(%rip)
5353(5): mov 0x28(%rsp),%rcx
5358(3): mov %rbp,%rdi
535b(3): mov %r13,%rdx
535e(3): mov %r13,%rsi
5361(5): call 0x503f(%rip)
5366(3): mov %rbp,%rdi
5369(5): call 0xffffde57(%rip)
536e(5): jmp 0xfffffc50(%rip)
5373(5): mov $0x10,%esi
5378(3): mov %r15,%rdi
537b(5): call 0xcc35(%rip)
5380(2): xor %edx,%edx
5382(4): mov 0x0(%r14,%rdx,8),%rsi
5386(3): mov %rdx,%rcx
5389(4): add $0x1,%rdx
538d(4): shl/sal $0x4,%rcx
5391(3): cmp %rdx,%r15
5394(4): mov %rsi,0x0(%rax,%rcx,1)
5398(2): jnbe 0xffffffea(%rip)
539a(5): mov 0x28(%rsp),%rcx
539f(3): mov %r15,%rdx
53a2(2): xor %esi,%esi
53a4(3): mov %rax,%rdi
53a7(5): call 0x4ff9(%rip)
53ac(5): jmp 0xfffffc2f(%rip)
53b1(8): mov 0x168(%rsp),%rdi
53b9(8): add 0x150(%rsp),%rdi
53c1(8): lea 0x3b0(%rsp),%rsi
53c9(3): sub %r15,%rdi
53cc(4): sar $0x5,%rdi
53d0(5): add 0x18(%rsp),%rdi
53d5(5): call 0x88fb(%rip)
53da(7): lea 0x103f1(%rip),%rsi
53e1(7): mov 0x2154c0(%rip),%rbp
53e8(2): xor %edi,%edi
53ea(5): mov $0x5,%edx
53ef(3): mov %rax,%r12
53f2(5): call 0xffffd87e(%rip)
53f7(7): mov 0x214e02(%rip),%rdi
53fe(3): mov %r12,%r9
5401(3): mov %r13,%r8
5404(3): mov %rbp,%rcx
5407(3): mov %rax,%rdx
540a(5): mov $0x1,%esi
540f(2): xor %eax,%eax
5411(5): call 0xffffdcef(%rip)
5416(7): lea 0x103cb(%rip),%rsi
541d(2): xor %edi,%edi
541f(5): mov $0x5,%edx
5424(5): call 0xffffd84c(%rip)
5429(7): mov 0x214dd0(%rip),%rsi
5430(3): mov %rax,%rdx
5433(3): mov %r15,%rdi
5436(5): call 0x1e4a(%rip)
543b(5): jmp 0xfffff3dc(%rip)
5440(8): movzx 0x137(%rsp),%eax
5448(6): mov %al,0x214fed(%rip)
544e(5): jmp 0xfffff1b2(%rip)
5453(5): mov 0x38(%rsp),%rdi
5458(5): mov $0x48,%esi
545d(5): call 0xcb83(%rip)
5462(7): mov 0x214fc7(%rip),%rdx
5469(7): lea 0x214fc0(%rip),%rcx
5470(3): test %rdx,%rdx
5473(2): jz 0xc(%rip)
5475(4): lea 0x40(%rdx),%rcx
5479(4): mov 0x40(%rdx),%rdx
547d(2): jmp 0xfffffff3(%rip)
547f(3): mov %rax,(%rcx)
5482(7): mov 0x214fa7(%rip),%rdi
5489(8): mov $0x0,0x40(%rax)
5491(9): movzx 0x133(%rsp),%r13d
549a(5): mov $0x1,0x10(%rsp)
549f(3): test %rdi,%rdi
54a2(6): jnz 0xffffe687(%rip)
54a8(5): jmp 0xffffe6f6(%rip)
54ad(4): lea 0x1(%rax),%rdi
54b1(5): mov 0x30(%rsp),%rax
54b6(7): lea 0x10149(%rip),%rdx
54bd(5): mov %r9d,0x70(%rsp)
54c2(4): lea 0x8(%rax),%rsi
54c6(5): call 0x1afa(%rip)
54cb(8): mov 0xb8(%rsp),%rdx
54d3(5): mov 0x70(%rsp),%r9d
54d8(4): lea 0xffffffff(%rdx),%rcx
54dc(3): test %rdx,%rdx
54df(8): mov %rcx,0xb8(%rsp)
54e7(6): jnz 0xffffef73(%rip)
54ed(7): mov 0x214cec(%rip),%rdi
54f4(7): lea 0x10187(%rip),%rsi
54fb(5): call 0xffffdce5(%rip)
5500(5): mov 0x60(%rsp),%rsi
5505(7): lea 0x1018f(%rip),%rdx
550c(4): lea 0x1(%rax),%rdi
5510(5): mov %r9d,0x70(%rsp)
5515(5): call 0x1aab(%rip)
551a(8): mov 0xc0(%rsp),%rdx
5522(5): mov 0x70(%rsp),%r9d
5527(4): lea 0xffffffff(%rdx),%rcx
552b(3): test %rdx,%rdx
552e(8): mov %rcx,0xc0(%rsp)
5536(6): jz 0x7f5(%rip)
553c(3): cmp $0x2e,(%rax)
553f(6): jz 0x9f(%rip)
5545(5): mov 0x30(%rsp),%rsi
554a(5): mov $0x1,%edx
554f(3): mov %rax,%rdi
5552(5): mov %r9d,0x70(%rsp)
5557(5): call 0xc29(%rip)
555c(5): mov 0x70(%rsp),%r9d
5561(5): jmp 0xffffef42(%rip)
5566(9): mov $0xffffffff,0x58(%rsp)
556f(5): jmp 0xffffe2cf(%rip)
5574(3): mov %r15,%rax
5577(3): mov %r15,%rcx
557a(4): pxor %xmm0,%xmm0
557e(3): shr $0x1,%rax
5581(3): and $0x1,%ecx
5584(3): or %rcx,%rax
5587(5): cvtsi2sd %rax,%xmm0
558c(4): addsd %xmm0,%xmm0
5590(5): jmp 0xfffffcc6(%rip)
5595(5): cvttsd2si %xmm1,%r15
559a(5): jmp 0xfffffcea(%rip)
559f(5): cvttsd2si %xmm0,%r15
55a4(5): jmp 0xfffffca0(%rip)
55a9(7): cmp $0x0,0x214e89(%rip)
55b0(6): jnz 0xfffff59e(%rip)
55b6(5): jmp 0xffffefff(%rip)
55bb(5): mov $0x1,%eax
55c0(5): jmp 0xfffff416(%rip)
55c5(4): movsx 0x1(%rax),%eax
55c9(3): sub $0x30,%eax
55cc(3): cmp $0x9,%eax
55cf(3): setbe %al
55d2(3): movzx %al,%eax
55d5(4): mov %eax,0x70(%rsp)
55d9(5): jmp 0xfffff441(%rip)
55de(4): lea 0x1(%rax),%rdi
55e2(5): mov 0x30(%rsp),%rax
55e7(7): lea 0x10018(%rip),%rdx
55ee(5): mov %r9d,0x70(%rsp)
55f3(4): lea 0x18(%rax),%rsi
55f7(5): call 0x19c9(%rip)
55fc(5): mov 0x70(%rsp),%r9d
5601(5): jmp 0xffffff44(%rip)
5606(5): mov $0x2,%edi
560b(5): call 0x8a95(%rip)
5610(5): mov $0x8,%edx
5615(4): cmp $0x8,%rax
5619(4): cmovbe %rax,%rdx
561d(5): mov %rdx,0x58(%rsp)
5622(5): jmp 0xfffff5d8(%rip)
5627(5): mov $0x1,%ebx
562c(5): jmp 0xfffff1eb(%rip)
5631(5): mov 0x18(%rsp),%r13
5636(5): jmp 0xfffffc96(%rip)
563b(8): mov $0x0,0x70(%rsp)
5643(5): jmp 0xfffff3d7(%rip)
5648(5): mov 0x10(%rsp),%rsi
564d(5): mov 0x8(%rsp),%rdi
5652(8): mov %rdx,0x170(%rsp)
565a(5): call 0x1b96(%rip)
565f(5): jmp 0xfffff947(%rip)
5664(4): add $0x1,%rdx
5668(5): jmp 0xffffebbc(%rip)
566d(5): mov 0x30(%rsp),%rsi
5672(2): xor %edx,%edx
5674(3): mov %rax,%rdi
5677(5): mov %r9d,0x78(%rsp)
567c(5): call 0xb04(%rip)
5681(3): cmp $0x0,(%rax)
5684(5): mov 0x78(%rsp),%r9d
5689(6): jnz 0xfffff431(%rip)
568f(5): cmp $0x0,0x70(%rsp)
5694(6): jz 0xb9(%rip)
569a(7): movsxd 0x214b37(%rip),%rax
56a1(5): mov 0x60(%rsp),%rsi
56a6(5): mov %r9d,0x78(%rsp)
56ab(3): lea 0x1(%rax),%edx
56ae(5): mov 0x0(%rbp,%rax,8),%rax
56b3(6): mov %edx,0x214b1f(%rip)
56b9(7): lea 0xff2d(%rip),%rdx
56c0(4): lea 0x1(%rax),%rdi
56c4(5): mov %rax,0x70(%rsp)
56c9(5): call 0x18f7(%rip)
56ce(3): test %rax,%rax
56d1(5): mov 0x78(%rsp),%r9d
56d6(6): jz 0x297(%rip)
56dc(3): cmp $0x2e,(%rax)
56df(2): jnz 0x25(%rip)
56e1(4): lea 0x1(%rax),%rdi
56e5(5): mov 0x30(%rsp),%rax
56ea(7): lea 0xff15(%rip),%rdx
56f1(5): mov %r9d,0x78(%rsp)
56f6(4): lea 0x18(%rax),%rsi
56fa(5): call 0x18c6(%rip)
56ff(5): mov 0x78(%rsp),%r9d
5704(9): cmp $0x0,0xc8(%rsp)
570d(2): jnz 0x1b(%rip)
570f(8): mov 0xc0(%rsp),%rdx
5717(3): test %rdx,%rdx
571a(2): jz 0xe(%rip)
571c(4): sub $0x1,%rdx
5720(8): mov %rdx,0xc0(%rsp)
5728(5): mov 0x30(%rsp),%rsi
572d(5): mov $0x1,%edx
5732(3): mov %rax,%rdi
5735(5): mov %r9d,0x78(%rsp)
573a(5): call 0xa46(%rip)
573f(3): cmp $0x0,(%rax)
5742(5): mov 0x78(%rsp),%r9d
5747(6): jnz 0x195(%rip)
574d(5): mov 0x30(%rsp),%rdi
5752(5): mov $0x48,%esi
5757(5): mov %r9d,0x70(%rsp)
575c(8): mov $0x1,0xe9(%rsp)
5764(5): call 0xc87c(%rip)
5769(7): mov 0x214cc0(%rip),%rdx
5770(5): mov 0x70(%rsp),%r9d
5775(7): lea 0x214cb4(%rip),%rcx
577c(3): test %rdx,%rdx
577f(6): jz 0xfffff0f0(%rip)
5785(4): lea 0x40(%rdx),%rcx
5789(4): mov 0x40(%rdx),%rdx
578d(2): jmp 0xffffffef(%rip)
578f(3): movzx (%rdx),%edx
5792(3): cmp $0x25,%dl
5795(2): jz 0x3b(%rip)
5797(3): cmp $0x62,%dl
579a(6): jz 0xffffebd1(%rip)
57a0(5): jmp 0xfffff236(%rip)
57a5(9): cmp $0x0,0xb0(%rsp)
57ae(6): jnz 0xfffff30c(%rip)
57b4(9): cmp $0x0,0xb8(%rsp)
57bd(6): jnz 0xfffff2fd(%rip)
57c3(8): mov %rcx,0xb0(%rsp)
57cb(5): jmp 0xfffff2ef(%rip)
57d0(5): mov %r9d,0x70(%rsp)
57d5(5): call 0x8a1b(%rip)
57da(8): mov 0x150(%rsp),%rax
57e2(5): mov 0x70(%rsp),%r9d
57e7(3): test %rax,%rax
57ea(2): js 0x71(%rip)
57ec(4): pxor %xmm1,%xmm1
57f0(5): cvtsi2sd %rax,%xmm1
57f5(4): mulsd %xmm1,%xmm0
57f9(8): movsd 0x101d7(%rip),%xmm1
5801(8): divsd 0x101c7(%rip),%xmm0
5809(4): ucomisd %xmm0,%xmm1
580d(6): jbe 0xfffffdae(%rip)
5813(8): movsd 0x101c5(%rip),%xmm1
581b(4): ucomisd %xmm1,%xmm0
581f(2): jnb 0x14(%rip)
5821(5): cvttsd2si %xmm0,%rax
5826(8): mov %rax,0x150(%rsp)
582e(5): jmp 0xffffeb3d(%rip)
5833(4): subsd %xmm1,%xmm0
5837(5): cvttsd2si %xmm0,%rax
583c(8): mov %rax,0x150(%rsp)
5844(a): mov $0x-9223372036854775808,%rax
584e(8): xor %rax,0x150(%rsp)
5856(5): jmp 0xffffeb15(%rip)
585b(3): mov %rax,%rdx
585e(4): pxor %xmm1,%xmm1
5862(3): shr $0x1,%rdx
5865(3): and $0x1,%eax
5868(3): or %rax,%rdx
586b(5): cvtsi2sd %rdx,%xmm1
5870(4): addsd %xmm1,%xmm1
5874(5): jmp 0xffffff81(%rip)
5879(4): lea 0x1(%rax),%rdi
587d(5): mov 0x30(%rsp),%rax
5882(2): xor %edx,%edx
5884(5): mov %r9d,0x78(%rsp)
5889(4): lea 0x8(%rax),%rsi
588d(5): call 0x1733(%rip)
5892(9): cmp $0x0,0xb0(%rsp)
589b(5): mov 0x78(%rsp),%r9d
58a0(6): jnz 0xfffff211(%rip)
58a6(9): cmp $0x0,0xb8(%rsp)
58af(6): jnz 0xfffff202(%rip)
58b5(5): jmp 0xfffff1f0(%rip)
58ba(4): mov 0x0(%rbp),%rbx
58be(7): lea 0xff32(%rip),%rsi
58c5(5): mov $0x5,%edx
58ca(2): xor %edi,%edi
58cc(5): call 0xffffd3a4(%rip)
58d1(3): mov %rbx,%rsi
58d4(3): mov %rax,%rdi
58d7(5): call 0xa49(%rip)
58dc(5): mov 0x70(%rsp),%rdi
58e1(7): lea 0xfd37(%rip),%rsi
58e8(5): call 0xffffd8f8(%rip)
58ed(5): mov 0x28(%rsp),%rdi
58f2(5): call 0xffffd9dd(%rip)
58f7(5): mov 0x10(%rsp),%rdi
58fc(5): call 0xffffd9d3(%rip)
5901(7): lea 0xf830(%rip),%rsi
5908(5): mov $0x5,%edx
590d(2): xor %edi,%edi
590f(5): call 0xffffd361(%rip)
5914(2): xor %esi,%esi
5916(3): mov %rax,%rdx
5919(5): mov $0x2,%edi
591e(2): xor %eax,%eax
5920(5): call 0xffffd6c0(%rip)
5925(7): lea 0xf794(%rip),%rsi
592c(5): mov $0x5,%edx
5931(2): xor %edi,%edi
5933(5): call 0xffffd33d(%rip)
5938(2): xor %esi,%esi
593a(3): mov %rax,%rdx
593d(5): mov $0x2,%edi
5942(2): xor %eax,%eax
5944(5): call 0xffffd69c(%rip)
5949(7): lea 0xf7c8(%rip),%rsi
5950(5): mov $0x5,%edx
5955(2): xor %edi,%edi
5957(5): call 0xffffd319(%rip)
595c(2): xor %esi,%esi
595e(3): mov %rax,%rdx
5961(5): mov $0x2,%edi
5966(2): xor %eax,%eax
5968(5): call 0xffffd678(%rip)
596d(7): lea 0xe3f0(%rip),%rcx
5974(7): lea 0xfb07(%rip),%rsi
597b(7): lea 0x100d3(%rip),%rdi
5982(5): mov $0x1112,%edx
5987(5): call 0xffffd3e9(%rip)
598c(3): mov %r11,%rdi
598f(5): call 0xaa01(%rip)
5994(3): mov %rax,%rbp
5997(5): movsxd 0x70(%rsp),%rax
599c(7): lea 0x213c3d(%rip),%rdx
59a3(7): lea 0xfd25(%rip),%rsi
59aa(2): xor %edi,%edi
59ac(4): shl/sal $0x5,%rax
59b0(4): mov 0x0(%rdx,%rax,1),%rbx
59b4(5): mov $0x5,%edx
59b9(5): call 0xffffd2b7(%rip)
59be(3): mov %rbp,%r8
59c1(3): mov %rax,%rdx
59c4(2): xor %esi,%esi
59c6(3): mov %rbx,%rcx
59c9(2): xor %edi,%edi
59cb(2): xor %eax,%eax
59cd(5): call 0xffffd613(%rip)
59d2(7): lea 0xfd0f(%rip),%rdi
59d9(5): call 0xa9b7(%rip)
59de(7): lea 0xfd05(%rip),%rsi
59e5(3): mov %rax,%rbp
59e8(5): mov $0x5,%edx
59ed(2): xor %edi,%edi
59ef(5): call 0xffffd281(%rip)
59f4(3): mov %rbp,%r8
59f7(3): mov %rax,%rdx
59fa(3): mov %rbx,%rcx
59fd(2): xor %esi,%esi
59ff(5): mov $0x2,%edi
5a04(2): xor %eax,%eax
5a06(5): call 0xffffd5da(%rip)
5a0b(3): mov %rdx,%rdi
5a0e(5): call 0xa982(%rip)
5a13(7): lea 0xfd06(%rip),%rsi
5a1a(3): mov %rax,%rbx
5a1d(5): mov $0x5,%edx
5a22(2): xor %edi,%edi
5a24(5): call 0xffffd24c(%rip)
5a29(3): mov %rbx,%rcx
5a2c(3): mov %rax,%rdx
5a2f(2): xor %esi,%esi
5a31(5): mov $0x2,%edi
5a36(2): xor %eax,%eax
5a38(5): call 0xffffd5a8(%rip)
5a3d(7): lea 0xfcf3(%rip),%rsi
5a44(5): mov $0x5,%edx
5a49(2): xor %edi,%edi
5a4b(5): call 0xffffd225(%rip)
5a50(2): xor %esi,%esi
5a52(3): mov %rax,%rdx
5a55(5): mov $0x2,%edi
5a5a(2): xor %eax,%eax
5a5c(5): call 0xffffd584(%rip)
5a61(2): xor %edi,%edi
5a63(5): call 0x4e5d(%rip)
5a68(8): lea 0x3b0(%rsp),%rcx
5a70(4): mov $0x0,0x37(%rdi)
5a74(4): mov $0x0,0x31(%rdi)
5a78(4): mov $0x0,0x30(%rdi)
5a7c(3): mov %rcx,%rsi
5a7f(5): call 0x651(%rip)
5a84(3): mov %rcx,%rdi
5a87(5): call 0x819(%rip)
5a8c(3): mov (%r14),%rsi
5a8f(5): mov $0x4,%edi
5a94(5): call 0xa62c(%rip)
5a99(7): lea 0xfcc2(%rip),%rsi
5aa0(3): mov %rax,%rbx
5aa3(5): mov $0x5,%edx
5aa8(2): xor %edi,%edi
5aaa(5): call 0xffffd1c6(%rip)
5aaf(3): mov %rbx,%rcx
5ab2(3): mov %rax,%rdx
5ab5(2): xor %esi,%esi
5ab7(2): xor %edi,%edi
5ab9(2): xor %eax,%eax
5abb(5): call 0xffffd525(%rip)
5ac0(7): lea 0xf6c1(%rip),%rsi
5ac7(5): mov $0x5,%edx
5acc(2): xor %edi,%edi
5ace(5): call 0xffffd1a2(%rip)
5ad3(7): mov 0x214726(%rip),%rdi
5ada(7): lea 0x1061e(%rip),%rdx
5ae1(3): mov %rax,%rcx
5ae4(5): mov $0x1,%esi
5ae9(2): xor %eax,%eax
5aeb(5): call 0xffffd615(%rip)
5af0(5): mov $0x2,%edi
5af5(5): call 0x4dcb(%rip)
5afa(5): call 0xc536(%rip)
5aff(5): mov $0x1,%esi
5b04(5): jmp 0xffffdc62(%rip)
5b09(7): lea 0xf9a9(%rip),%rsi
5b10(5): mov $0x5,%edx
5b15(2): xor %edi,%edi
5b17(5): call 0xffffd159(%rip)
5b1c(5): mov 0x40(%rsp),%rsi
5b21(3): mov %rax,%rdi
5b24(5): call 0x7fc(%rip)
5b29(7): lea 0xfbe3(%rip),%rsi
5b30(5): mov $0x5,%edx
5b35(2): xor %edi,%edi
5b37(5): call 0xffffd139(%rip)
5b3c(2): xor %esi,%esi
5b3e(3): mov %rax,%rdx
5b41(5): mov $0x2,%edi
5b46(2): xor %eax,%eax
5b48(5): call 0xffffd498(%rip)
5b4d(5): mov $0x4,%edi
5b52(5): call 0xa56e(%rip)
5b57(7): lea 0xf662(%rip),%rsi
5b5e(3): mov %rax,%rbx
5b61(5): mov $0x5,%edx
5b66(2): xor %edi,%edi
5b68(5): call 0xffffd108(%rip)
5b6d(3): mov %rbx,%rcx
5b70(3): mov %rax,%rdx
5b73(2): xor %esi,%esi
5b75(5): mov $0x2,%edi
5b7a(2): xor %eax,%eax
5b7c(5): call 0xffffd464(%rip)
5b81(5): mov 0x18(%rsp),%rsi
5b86(5): mov $0x4,%edi
5b8b(5): call 0xa535(%rip)
5b90(7): lea 0xfbdc(%rip),%rsi
5b97(3): mov %rax,%rbx
5b9a(5): mov $0x5,%edx
5b9f(2): xor %edi,%edi
5ba1(5): call 0xffffd0cf(%rip)
5ba6(3): mov %rbx,%rcx
5ba9(3): mov %rax,%rdx
5bac(2): xor %esi,%esi
5bae(5): mov $0x2,%edi
5bb3(2): xor %eax,%eax
5bb5(5): call 0xffffd42b(%rip)
5bba(3): mov %rdx,%rsi
5bbd(5): mov $0x4,%edi
5bc2(5): call 0xa4fe(%rip)
5bc7(7): lea 0xf612(%rip),%rsi
5bce(3): mov %rax,%rbx
5bd1(5): mov $0x5,%edx
5bd6(2): xor %edi,%edi
5bd8(5): call 0xffffd098(%rip)
5bdd(3): mov %rbx,%rcx
5be0(3): mov %rax,%rdx
5be3(2): xor %esi,%esi
5be5(5): mov $0x2,%edi
5bea(2): xor %eax,%eax
5bec(5): call 0xffffd3f4(%rip)
5bf1(5): mov 0x18(%rsp),%rdx
5bf6(5): mov $0x3,%esi
5bfb(2): xor %edi,%edi
5bfd(5): call 0xa5c3(%rip)
5c02(7): lea 0xf617(%rip),%rsi
5c09(3): mov %rax,%rbx
5c0c(5): mov $0x5,%edx
5c11(2): xor %edi,%edi
5c13(5): call 0xffffd05d(%rip)
5c18(3): mov %r15,%r8
5c1b(3): mov %rax,%rdx
5c1e(3): mov %rbx,%rcx
5c21(2): xor %esi,%esi
5c23(5): mov $0x2,%edi
5c28(2): xor %eax,%eax
5c2a(5): call 0xffffd3b6(%rip)
5c2f(5): mov 0x68(%rsp),%r14
5c34(5): mov $0x5,%edx
5c39(7): lea 0xfbc3(%rip),%rsi
5c40(4): mov 0x0(%r14,%r13,8),%rbx
5c44(5): jmp 0xfffffc86(%rip)
5c49(7): lea 0xf84f(%rip),%rsi
5c50(2): xor %edi,%edi
5c52(5): mov $0x5,%edx
5c57(5): call 0xffffd019(%rip)
5c5c(5): mov 0x28(%rsp),%rsi
5c61(3): mov %rax,%rdi
5c64(5): call 0x6bc(%rip)
5c69(5): mov $0x1,%ecx
5c6e(5): jmp 0xfffff6a7(%rip)
5c73(4): mov 0x78(%rsp),%esi
5c77(7): lea 0x213962(%rip),%rcx
5c7e(3): mov %r10,%r8
5c81(5): mov $0xffffff87,%edx
5c86(2): mov %eax,%edi
5c88(5): call 0xc9e8(%rip)
5c8d(7): lea 0xf9b8(%rip),%rdi
5c94(5): call 0x60c(%rip)
5c99(3): test %r12b,%r12b
5c9c(2): jnz 0x8(%rip)
5c9e(6): mov $0x6f,%r12d
5ca4(7): lea 0x21436d(%rip),%rdi
5cab(7): mov %r12b,0x214366(%rip)
5cb2(5): call 0x5ee(%rip)
5cb7(4): mov 0x8(%r14),%rsi
5cbb(5): mov $0x4,%edi
5cc0(5): call 0xa400(%rip)
5cc5(7): lea 0xf6c4(%rip),%rsi
5ccc(3): mov %rax,%rbx
5ccf(5): mov $0x5,%edx
5cd4(2): xor %edi,%edi
5cd6(5): call 0xffffcf9a(%rip)
5cdb(4): movsx %r12b,%r8d
5cdf(3): mov %rax,%rdx
5ce2(3): mov %rbx,%rcx
5ce5(2): xor %esi,%esi
5ce7(5): mov $0x2,%edi
5cec(2): xor %eax,%eax
5cee(5): call 0xffffd2f2(%rip)
5cf3(7): lea 0x214316(%rip),%rdi
5cfa(7): mov %r12b,0x21430f(%rip)
5d01(5): call 0x59f(%rip)
5d06(5): mov 0x18(%rsp),%rdi
5d0b(5): call 0xffffd5c4(%rip)
5d10(3): mov %r13,%rdi
5d13(5): call 0xffffd5bc(%rip)
5d18(7): mov 0x2144c1(%rip),%rdi
5d1f(7): lea 0xf8f9(%rip),%rsi
5d26(5): call 0xffffd4ba(%rip)
5d2b(7): mov 0x2144ae(%rip),%rdi
5d32(7): lea 0xf934(%rip),%rsi
5d39(5): call 0xffffd4a7(%rip)
5d3e(5): call 0xffffcf62(%rip)

"_start" :
5d50(2): xor %ebp,%ebp
5d52(3): mov %rdx,%r9
5d55(1): pop %rsi
5d56(3): mov %rsp,%rdx
5d59(4): and $0xfffffff0,%rsp
5d5d(1): push %rax
5d5e(1): push %rsp
5d5f(7): lea 0xdaca(%rip),%r8
5d66(7): lea 0xda53(%rip),%rcx
5d6d(7): lea 0xffffd58c(%rip),%rdi
5d74(6): call 0x21424e(%rip)
5d7a(1): hlt 

"deregister_tm_clones" :
5d80(7): lea 0x214421(%rip),%rdi
5d87(1): push %rbp
5d88(7): lea 0x214419(%rip),%rax
5d8f(3): cmp %rdi,%rax
5d92(3): mov %rsp,%rbp
5d95(2): jz 0x1b(%rip)
5d97(7): mov 0x214222(%rip),%rax
5d9e(3): test %rax,%rax
5da1(2): jz 0xf(%rip)
5da3(1): pop %rbp
5da4(2): jmp %rax
5da6(a): nop 0x0(%rax,%rax,1)
5db0(1): pop %rbp
5db1(1): ret near (%rsp)

"register_tm_clones" :
5dc0(7): lea 0x2143e1(%rip),%rdi
5dc7(7): lea 0x2143da(%rip),%rsi
5dce(1): push %rbp
5dcf(3): sub %rdi,%rsi
5dd2(3): mov %rsp,%rbp
5dd5(4): sar $0x3,%rsi
5dd9(3): mov %rsi,%rax
5ddc(4): shr $0x3f,%rax
5de0(3): add %rax,%rsi
5de3(3): sar $0x1,%rsi
5de6(2): jz 0x1a(%rip)
5de8(7): mov 0x2141f1(%rip),%rax
5def(3): test %rax,%rax
5df2(2): jz 0xe(%rip)
5df4(1): pop %rbp
5df5(2): jmp %rax
5df7(9): nop 0x0(%rax,%rax,1)
5e00(1): pop %rbp
5e01(1): ret near (%rsp)

"__do_global_dtors_aux" :
5e10(7): cmp $0x0,0x2143f1(%rip)
5e17(2): jnz 0x31(%rip)
5e19(8): cmp $0x0,0x2141c7(%rip)
5e21(1): push %rbp
5e22(3): mov %rsp,%rbp
5e25(2): jz 0xe(%rip)
5e27(7): mov 0x2141da(%rip),%rdi
5e2e(5): call 0xffffd3a2(%rip)
5e33(5): call 0xffffff4d(%rip)
5e38(7): mov $0x1,0x2143c9(%rip)
5e3f(1): pop %rbp
5e40(1): ret near (%rsp)
5e41(7): nop 0x0(%rax)
5e48(2): REP ret near (%rsp)

"frame_dummy" :
5e50(1): push %rbp
5e51(3): mov %rsp,%rbp
5e54(1): pop %rbp
5e55(5): jmp 0xffffff6b(%rip)

"proctab_hasher" :
5e60(4): movsxd 0x8(%rdi),%rax
5e64(2): xor %edx,%edx
5e66(3): div %rsi,%rax
5e69(3): mov %rdx,%rax
5e6c(1): ret near (%rsp)

"proctab_comparator" :
5e70(3): mov 0x8(%rsi),%eax
5e73(3): cmp %eax,0x8(%rdi)
5e76(3): setz %al
5e79(1): ret near (%rsp)

"traverse_raw_number" :
5e80(3): mov (%rdi),%rcx
5e83(7): mov 0x2149fa(%rip),%r11d
5e8a(3): xor %r10d,%r10d
5e8d(2): xor %eax,%eax
5e8f(3): movzx (%rcx),%edx
5e92(2): jmp 0x2c(%rip)
5e94(4): nop 0x0(%rax)
5e98(5): movsx 0x1(%rcx),%r8d
5e9d(2): cmp %dl,%al
5e9f(3): cmovnae %edx,%eax
5ea2(3): xor %r10d,%r10d
5ea5(3): cmp %r11d,%r8d
5ea8(3): mov %r8d,%edx
5eab(2): jnz 0x10(%rip)
5ead(4): movzx 0x2(%rcx),%edx
5eb1(4): lea 0x2(%rcx),%rsi
5eb5(6): mov $0x1,%r10d
5ebb(3): mov %rsi,%rcx
5ebe(4): movzx %dl,%r8d
5ec2(4): lea 0x1(%rcx),%rsi
5ec6(4): lea 0xffffffd0(%r8),%r9d
5eca(4): cmp $0x9,%r9d
5ece(2): jbe 0xffffffca(%rip)
5ed0(3): test %r10b,%r10b
5ed3(2): jnz 0x1d(%rip)
5ed5(7): cmp 0x2149ac(%rip),%r8d
5edc(2): jz 0x24(%rip)
5ede(4): sub $0x1,%rsi
5ee2(3): mov %rsi,(%rdi)
5ee5(1): ret near (%rsp)
5ee6(a): nop 0x0(%rax,%rax,1)
5ef0(4): sub $0x1,%rcx
5ef4(3): mov %rcx,(%rdi)
5ef7(1): ret near (%rsp)
5ef8(8): nop 0x0(%rax,%rax,1)
5f00(4): lea 0x2(%rcx),%rsi
5f04(4): movzx 0x1(%rcx),%ecx
5f08(2): mov %ecx,%edx
5f0a(3): sub $0x30,%ecx
5f0d(3): cmp $0x9,%ecx
5f10(2): jnbe 0xffffffce(%rip)
5f12(6): nop 0x0(%rax,%rax,1)
5f18(2): cmp %dl,%al
5f1a(3): cmovnae %edx,%eax
5f1d(4): add $0x1,%rsi
5f21(4): movzx 0xffffffff(%rsi),%ecx
5f25(2): mov %ecx,%edx
5f27(3): sub $0x30,%ecx
5f2a(3): cmp $0x9,%ecx
5f2d(2): jbe 0xffffffeb(%rip)
5f2f(4): sub $0x1,%rsi
5f33(3): mov %rsi,(%rdi)
5f36(1): ret near (%rsp)

"find_unit_order" :
5f40(1): push %rbx
5f41(4): sub $0x10,%rsp
5f45(3): movzx (%rdi),%ebx
5f48(9): mov $0x28,%rax
5f51(5): mov %rax,0x8(%rsp)
5f56(2): xor %eax,%eax
5f58(2): xor %eax,%eax
5f5a(3): cmp $0x2d,%bl
5f5d(3): setz %al
5f60(3): add %rax,%rdi
5f63(4): mov %rdi,(%rsp)
5f67(3): mov %rsp,%rdi
5f6a(5): call 0xffffff16(%rip)
5f6f(2): xor %edx,%edx
5f71(2): cmp $0x30,%al
5f73(2): jbe 0x1e(%rip)
5f75(4): mov (%rsp),%rax
5f79(7): lea 0xde40(%rip),%rdx
5f80(3): movzx (%rax),%eax
5f83(4): movsx 0x0(%rdx,%rax,1),%edx
5f87(2): mov %edx,%eax
5f89(2): neg %eax
5f8b(3): cmp $0x2d,%bl
5f8e(3): cmove %eax,%edx
5f91(5): mov 0x8(%rsp),%rcx
5f96(9): xor $0x28,%rcx
5f9f(2): mov %edx,%eax
5fa1(2): jnz 0x8(%rip)
5fa3(4): add $0x10,%rsp
5fa7(1): pop %rbx
5fa8(1): ret near (%rsp)
5fa9(5): call 0xffffccf7(%rip)

"getmonth" :
5fb0(3): movzx (%rdi),%eax
5fb3(7): lea 0x2147a6(%rip),%rdx
5fba(1): push %rbp
5fbb(1): push %rbx
5fbc(4): cmp $0x0,0x0(%rdx,%rax,1)
5fc0(2): jz 0x15(%rip)
5fc2(6): nop 0x0(%rax,%rax,1)
5fc8(4): add $0x1,%rdi
5fcc(3): movzx (%rdi),%eax
5fcf(4): cmp $0x0,0x0(%rdx,%rax,1)
5fd3(2): jnz 0xfffffff5(%rip)
5fd5(7): lea 0x214084(%rip),%rbp
5fdc(7): lea 0x21447d(%rip),%r9
5fe3(6): mov $0xc,%r11d
5fe9(2): xor %ebx,%ebx
5feb(4): lea 0x0(%rbx,%r11,1),%r10
5fef(3): shr $0x1,%r10
5ff2(3): mov %r10,%rax
5ff5(4): shl/sal $0x4,%rax
5ff9(5): mov 0x0(%rbp,%rax,1),%rax
5ffe(3): movzx (%rax),%edx
6001(2): test %dl,%dl
6003(2): jz 0x63(%rip)
6005(3): movzx (%rdi),%ecx
6008(4): cmp %dl,0x0(%r9,%rcx,1)
600c(2): jb 0x44(%rip)
600e(2): jnbe 0x52(%rip)
6010(3): mov %rdi,%rdx
6013(2): jmp 0x11(%rip)
6015(3): nop (%rax)
6018(4): movzx (%rdx),%r8d
601c(4): cmp %cl,0x0(%r9,%r8,1)
6020(2): jb 0x30(%rip)
6022(2): jnbe 0x3e(%rip)
6024(4): add $0x1,%rax
6028(3): movzx (%rax),%ecx
602b(4): add $0x1,%rdx
602f(2): test %cl,%cl
6031(2): jnz 0xffffffe7(%rip)
6033(3): test %rsi,%rsi
6036(2): jz 0x5(%rip)
6038(3): mov %rdx,(%rsi)
603b(4): shl/sal $0x4,%r10
603f(5): mov 0x8(%rbp,%r10,1),%eax
6044(1): pop %rbx
6045(1): pop %rbp
6046(1): ret near (%rsp)
6047(9): nop 0x0(%rax,%rax,1)
6050(3): mov %r10,%r11
6053(3): cmp %r11,%rbx
6056(2): jb 0xffffff95(%rip)
6058(2): xor %eax,%eax
605a(1): pop %rbx
605b(1): pop %rbp
605c(1): ret near (%rsp)
605d(3): nop (%rax)
6060(4): lea 0x1(%r10),%rbx
6064(2): jmp 0xffffffef(%rip)
6066(3): mov %rdi,%rdx
6069(2): jmp 0xffffffca(%rip)

"default_key_compare" :
6070(2): xor %eax,%eax
6072(5): cmp $0x0,0x20(%rdi)
6077(2): jz 0x9(%rip)
6079(2): REP ret near (%rsp)
607b(5): nop 0x0(%rax,%rax,1)
6080(5): cmp $0x0,0x28(%rdi)
6085(2): jnz 0xfffffff4(%rip)
6087(4): movzx 0x30(%rdi),%eax
608b(2): test %al,%al
608d(2): jnz 0x33(%rip)
608f(4): cmp $0x0,0x31(%rdi)
6093(2): jnz 0xffffffe6(%rip)
6095(a): mov $0x281470698455040,%rdx
609f(4): test %rdx,0x30(%rdi)
60a3(2): jnz 0xffffffd6(%rip)
60a5(4): movzx 0x36(%rdi),%eax
60a9(2): test %al,%al
60ab(2): jnz 0x15(%rip)
60ad(4): cmp $0x0,0x38(%rdi)
60b1(2): jnz 0xffffffc8(%rip)
60b3(4): movzx 0x33(%rdi),%eax
60b7(3): xor $0x1,%eax
60ba(1): ret near (%rsp)
60bb(5): nop 0x0(%rax,%rax,1)
60c0(2): xor %eax,%eax
60c2(1): ret near (%rsp)

"key_to_opts" :
60d0(5): cmp $0x0,0x30(%rdi)
60d5(2): jz 0x9(%rip)
60d7(3): mov $0x62,(%rsi)
60da(4): add $0x1,%rsi
60de(7): lea 0x21447b(%rip),%rax
60e5(4): cmp %rax,0x20(%rdi)
60e9(2): jz 0x7f(%rip)
60eb(5): cmp $0x0,0x28(%rdi)
60f0(3): mov %rsi,%rax
60f3(2): jz 0x9(%rip)
60f5(4): add $0x1,%rax
60f9(3): mov $0x66,(%rsi)
60fc(4): cmp $0x0,0x34(%rdi)
6100(2): jz 0x9(%rip)
6102(3): mov $0x67,(%rax)
6105(4): add $0x1,%rax
6109(4): cmp $0x0,0x35(%rdi)
610d(2): jz 0x9(%rip)
610f(3): mov $0x68,(%rax)
6112(4): add $0x1,%rax
6116(7): lea 0x214543(%rip),%rdx
611d(4): cmp %rdx,0x20(%rdi)
6121(2): jz 0x53(%rip)
6123(4): cmp $0x0,0x36(%rdi)
6127(2): jz 0x9(%rip)
6129(3): mov $0x4d,(%rax)
612c(4): add $0x1,%rax
6130(4): cmp $0x0,0x32(%rdi)
6134(2): jz 0x9(%rip)
6136(3): mov $0x6e,(%rax)
6139(4): add $0x1,%rax
613d(4): cmp $0x0,0x33(%rdi)
6141(2): jz 0x9(%rip)
6143(3): mov $0x52,(%rax)
6146(4): add $0x1,%rax
614a(4): cmp $0x0,0x37(%rdi)
614e(2): jz 0x9(%rip)
6150(3): mov $0x72,(%rax)
6153(4): add $0x1,%rax
6157(4): cmp $0x0,0x38(%rdi)
615b(2): jz 0x9(%rip)
615d(3): mov $0x56,(%rax)
6160(4): add $0x1,%rax
6164(3): mov $0x0,(%rax)
6167(1): ret near (%rsp)
6168(3): mov $0x64,(%rsi)
616b(4): add $0x1,%rsi
616f(5): jmp 0xffffff7c(%rip)
6174(3): mov $0x69,(%rax)
6177(4): add $0x1,%rax
617b(2): jmp 0xffffffa8(%rip)

"set_ordering" :
6180(3): movzx (%rdi),%ecx
6183(3): mov %rdi,%rax
6186(2): test %cl,%cl
6188(2): jz 0x53(%rip)
618a(3): mov %edx,%r8d
618d(7): lea 0xd6ec(%rip),%rdi
6194(7): lea 0x2144c5(%rip),%r11
619b(7): lea 0x2142be(%rip),%r10
61a2(7): lea 0x2143b7(%rip),%r9
61a9(4): and $0xfd,%r8d
61ad(3): sub $0x1,%edx
61b0(3): sub $0x4d,%ecx
61b3(3): cmp $0x25,%cl
61b6(2): jnbe 0x25(%rip)
61b8(3): movzx %cl,%ecx
61bb(4): movsxd 0x0(%rdi,%rcx,4),%rcx
61bf(3): add %rdi,%rcx
61c2(2): jmp %rcx
61c4(4): nop 0x0(%rax)
61c8(4): mov $0x1,0x37(%rsi)
61cc(4): nop 0x0(%rax)
61d0(4): add $0x1,%rax
61d4(3): movzx (%rax),%ecx
61d7(2): test %cl,%cl
61d9(2): jnz 0xffffffd7(%rip)
61db(2): REP ret near (%rsp)
61dd(3): nop (%rax)
61e0(4): mov $0x1,0x32(%rsi)
61e4(2): jmp 0xffffffec(%rip)
61e6(a): nop 0x0(%rax,%rax,1)
61f0(5): cmp $0x0,0x20(%rsi)
61f5(2): jnz 0xffffffdb(%rip)
61f7(4): mov %r11,0x20(%rsi)
61fb(2): jmp 0xffffffd5(%rip)
61fd(3): nop (%rax)
6200(4): mov $0x1,0x35(%rsi)
6204(2): jmp 0xffffffcc(%rip)
6206(a): nop 0x0(%rax,%rax,1)
6210(4): mov $0x1,0x34(%rsi)
6214(2): jmp 0xffffffbc(%rip)
6216(a): nop 0x0(%rax,%rax,1)
6220(4): mov %r10,0x28(%rsi)
6224(2): jmp 0xffffffac(%rip)
6226(a): nop 0x0(%rax,%rax,1)
6230(4): mov %r9,0x20(%rsi)
6234(2): jmp 0xffffff9c(%rip)
6236(a): nop 0x0(%rax,%rax,1)
6240(3): test %r8d,%r8d
6243(2): jnz 0x6(%rip)
6245(4): mov $0x1,0x30(%rsi)
6249(3): cmp $0x1,%edx
624c(2): jnbe 0xffffff84(%rip)
624e(4): mov $0x1,0x31(%rsi)
6252(5): jmp 0xffffff7e(%rip)
6257(9): nop 0x0(%rax,%rax,1)
6260(4): mov $0x1,0x38(%rsi)
6264(5): jmp 0xffffff6c(%rip)
6269(7): nop 0x0(%rax)
6270(4): mov $0x1,0x36(%rsi)
6274(5): jmp 0xffffff5c(%rip)
6279(7): nop 0x0(%rax)
6280(4): mov $0x1,0x33(%rsi)
6284(5): jmp 0xffffff4c(%rip)

"struct_month_cmp" :
6290(3): mov (%rsi),%rsi
6293(3): mov (%rdi),%rdi
6296(5): jmp 0xffffcbaa(%rip)

"incompatible_options" :
62a0(1): push %rbx
62a1(7): lea 0xdc48(%rip),%rsi
62a8(3): mov %rdi,%rbx
62ab(5): mov $0x5,%edx
62b0(2): xor %edi,%edi
62b2(5): call 0xffffc9be(%rip)
62b7(3): mov %rbx,%rcx
62ba(3): mov %rax,%rdx
62bd(2): xor %esi,%esi
62bf(5): mov $0x2,%edi
62c4(2): xor %eax,%eax
62c6(5): call 0xffffcd1a(%rip)
62cb(5): nop 0x0(%rax,%rax,1)
62d0(1): push %rbp
62d1(1): push %rbx
62d2(2): mov %edi,%ebp
62d4(4): sub $0x8,%rsp
62d8(7): mov 0x2140a9(%rip),%rbx
62df(3): test %rbx,%rbx
62e2(2): jz 0x17(%rip)
62e4(4): nop 0x0(%rax)
62e8(4): lea 0xd(%rbx),%rdi
62ec(5): call 0xffffc834(%rip)
62f1(3): mov (%rbx),%rbx
62f4(3): test %rbx,%rbx
62f7(2): jnz 0xfffffff1(%rip)
62f9(2): mov %ebp,%edi
62fb(2): xor %esi,%esi
62fd(b): mov $0x0,0x214080(%rip)
6308(5): call 0xffffcb48(%rip)
630d(4): add $0x8,%rsp
6311(2): mov %ebp,%edi
6313(1): pop %rbx
6314(1): pop %rbp
6315(5): jmp 0xffffc7bb(%rip)

"sighandler" :
62d0(1): push %rbp
62d1(1): push %rbx
62d2(2): mov %edi,%ebp
62d4(4): sub $0x8,%rsp
62d8(7): mov 0x2140a9(%rip),%rbx
62df(3): test %rbx,%rbx
62e2(2): jz 0x17(%rip)
62e4(4): nop 0x0(%rax)
62e8(4): lea 0xd(%rbx),%rdi
62ec(5): call 0xffffc834(%rip)
62f1(3): mov (%rbx),%rbx
62f4(3): test %rbx,%rbx
62f7(2): jnz 0xfffffff1(%rip)
62f9(2): mov %ebp,%edi
62fb(2): xor %esi,%esi
62fd(b): mov $0x0,0x214080(%rip)
6308(5): call 0xffffcb48(%rip)
630d(4): add $0x8,%rsp
6311(2): mov %ebp,%edi
6313(1): pop %rbx
6314(1): pop %rbp
6315(5): jmp 0xffffc7bb(%rip)

"sort_die" :
6320(1): push %rbp
6321(1): push %rbx
6322(3): mov %rsi,%rdx
6325(3): mov %rdi,%rbx
6328(4): sub $0x8,%rsp
632c(3): test %rsi,%rsi
632f(2): jz 0x31(%rip)
6331(5): mov $0x3,%esi
6336(2): xor %edi,%edi
6338(5): call 0x9e88(%rip)
633d(3): mov %rax,%rbp
6340(5): call 0xffffc7d0(%rip)
6345(2): mov (%rax),%esi
6347(7): lea 0xf0a5(%rip),%rdx
634e(3): mov %rbp,%r8
6351(3): mov %rbx,%rcx
6354(5): mov $0x2,%edi
6359(2): xor %eax,%eax
635b(5): call 0xffffcc85(%rip)
6360(7): lea 0xf07c(%rip),%rsi
6367(5): mov $0x5,%edx
636c(2): xor %edi,%edi
636e(5): call 0xffffc902(%rip)
6373(3): mov %rax,%rdx
6376(2): jmp 0xffffffbb(%rip)

"get_outstatus" :
6380(4): sub $0x8,%rsp
6384(6): mov 0x213f46(%rip),%eax
638a(2): test %eax,%eax
638c(2): jz 0x1c(%rip)
638e(2): test %eax,%eax
6390(7): lea 0x213ea9(%rip),%rax
6397(5): mov $0x0,%edx
639c(4): cmovns %rdx,%rax
63a0(4): add $0x8,%rsp
63a4(1): ret near (%rsp)
63a5(3): nop (%rax)
63a8(7): lea 0x213e91(%rip),%rdx
63af(5): mov $0x1,%esi
63b4(5): mov $0x1,%edi
63b9(5): call 0xffffcb67(%rip)
63be(2): test %eax,%eax
63c0(2): jz 0x18(%rip)
63c2(5): call 0xffffc74e(%rip)
63c7(2): mov (%rax),%eax
63c9(6): mov %eax,0x213f01(%rip)
63cf(2): jmp 0xffffffbf(%rip)
63d1(7): nop 0x0(%rax)
63d8(a): mov $0xffffffff,0x213eee(%rip)
63e2(7): lea 0x213e57(%rip),%rax
63e9(4): add $0x8,%rsp
63ed(1): ret near (%rsp)

"add_temp_dir" :
63f0(7): mov 0x214051(%rip),%rsi
63f7(7): cmp 0x214042(%rip),%rsi
63fe(1): push %rbx
63ff(3): mov %rdi,%rbx
6402(7): mov 0x214047(%rip),%rdi
6409(2): jz 0x17(%rip)
640b(4): lea 0x1(%rsi),%rax
640f(4): mov %rbx,0x0(%rdi,%rsi,8)
6413(1): pop %rbx
6414(7): mov %rax,0x21402d(%rip)
641b(1): ret near (%rsp)
641c(4): nop 0x0(%rax)
6420(3): test %rdi,%rdi
6423(2): jz 0x45(%rip)
6425(a): mov $0x768614336404564649,%rax
642f(3): cmp %rax,%rsi
6432(2): jnbe 0x5b(%rip)
6434(3): mov %rsi,%rax
6437(3): shr $0x1,%rax
643a(5): lea 0x1(%rsi,%rax,1),%rsi
643f(7): mov %rsi,0x213ffa(%rip)
6446(4): shl/sal $0x3,%rsi
644a(5): call 0xb9f6(%rip)
644f(7): mov 0x213ff2(%rip),%rsi
6456(3): mov %rax,%rdi
6459(7): mov %rax,0x213ff0(%rip)
6460(2): jmp 0xffffffab(%rip)
6462(6): nop 0x0(%rax,%rax,1)
6468(3): test %rsi,%rsi
646b(5): mov $0x10,%eax
6470(5): mov $0x8,%edx
6475(4): cmove %rax,%rsi
6479(3): mov %rdx,%rax
647c(2): xor %ecx,%ecx
647e(3): mul %rax,%rsi,%rdx
6481(2): jo 0x11(%rip)
6483(3): test %rax,%rax
6486(2): js 0x7(%rip)
6488(3): test %rcx,%rcx
648b(2): jz 0xffffffb4(%rip)
648d(5): call 0xbba3(%rip)
6492(5): mov $0x1,%ecx
6497(2): jmp 0xffffffec(%rip)

"initbuf" :
64a0(2): push %r13
64a2(2): push %r12
64a4(3): mov %rsi,%r13
64a7(1): push %rbp
64a8(1): push %rbx
64a9(3): mov %rdi,%rbp
64ac(3): mov %rdx,%rbx
64af(4): lea 0x1(%rsi),%r12
64b3(4): sub $0x8,%rsp
64b7(2): jmp 0x11(%rip)
64b9(7): nop 0x0(%rax)
64c0(3): shr $0x1,%rbx
64c3(3): cmp %rbx,%r12
64c6(2): jnb 0x4a(%rip)
64c8(4): and $0xffffffe0,%rbx
64cc(4): add $0x20,%rbx
64d0(3): mov %rbx,%rdi
64d3(5): call 0xffffccf5(%rip)
64d8(3): test %rax,%rax
64db(4): mov %rax,0x0(%rbp)
64df(2): jz 0xffffffe1(%rip)
64e1(4): mov %r13,0x28(%rbp)
64e5(4): mov %rbx,0x18(%rbp)
64e9(8): mov $0x0,0x10(%rbp)
64f1(8): mov $0x0,0x20(%rbp)
64f9(8): mov $0x0,0x8(%rbp)
6501(4): mov $0x0,0x30(%rbp)
6505(4): add $0x8,%rsp
6509(1): pop %rbx
650a(1): pop %rbp
650b(2): pop %r12
650d(2): pop %r13
650f(1): ret near (%rsp)
6510(5): call 0xbb20(%rip)

"debug_width" :
6520(1): push %rbp
6521(1): push %rbx
6522(3): mov %rsi,%rbp
6525(3): mov %rdi,%rbx
6528(3): sub %rdi,%rsi
652b(2): xor %edx,%edx
652d(4): sub $0x8,%rsp
6531(5): call 0x77ef(%rip)
6536(3): cmp %rbx,%rbp
6539(2): cwde 
653b(2): jbe 0x1a(%rip)
653d(3): nop (%rax)
6540(4): add $0x1,%rbx
6544(2): xor %edx,%edx
6546(4): cmp $0x9,0xffffffff(%rbx)
654a(3): setz %dl
654d(3): add %rdx,%rax
6550(3): cmp %rbx,%rbp
6553(2): jnz 0xffffffed(%rip)
6555(4): add $0x8,%rsp
6559(1): pop %rbx
655a(1): pop %rbp
655b(1): ret near (%rsp)

"xstrxfrm" :
6560(2): push %r13
6562(2): push %r12
6564(3): mov %rdx,%r13
6567(1): push %rbp
6568(1): push %rbx
6569(3): mov %rdi,%r12
656c(3): mov %rsi,%rbp
656f(4): sub $0x8,%rsp
6573(5): call 0xffffc59d(%rip)
6578(3): mov %r13,%rdx
657b(3): mov %rax,%rbx
657e(6): mov $0x0,(%rax)
6584(3): mov %rbp,%rsi
6587(3): mov %r12,%rdi
658a(5): call 0xffffc8a6(%rip)
658f(2): mov (%rbx),%edx
6591(2): test %edx,%edx
6593(2): jnz 0xd(%rip)
6595(4): add $0x8,%rsp
6599(1): pop %rbx
659a(1): pop %rbp
659b(2): pop %r12
659d(2): pop %r13
659f(1): ret near (%rsp)
65a0(7): lea 0xee53(%rip),%rsi
65a7(5): mov $0x5,%edx
65ac(2): xor %edi,%edi
65ae(5): call 0xffffc6c2(%rip)
65b3(2): mov (%rbx),%esi
65b5(3): mov %rax,%rdx
65b8(2): xor %edi,%edi
65ba(2): xor %eax,%eax
65bc(5): call 0xffffca24(%rip)
65c1(7): lea 0xd970(%rip),%rsi
65c8(5): mov $0x5,%edx
65cd(2): xor %edi,%edi
65cf(5): call 0xffffc6a1(%rip)
65d4(2): xor %esi,%esi
65d6(3): mov %rax,%rdx
65d9(2): xor %edi,%edi
65db(2): xor %eax,%eax
65dd(5): call 0xffffca03(%rip)
65e2(3): mov %rbp,%rdx
65e5(5): mov $0x8,%esi
65ea(2): xor %edi,%edi
65ec(5): call 0x99b4(%rip)
65f1(7): lea 0xd970(%rip),%rsi
65f8(3): mov %rax,%rbx
65fb(5): mov $0x5,%edx
6600(2): xor %edi,%edi
6602(5): call 0xffffc66e(%rip)
6607(3): mov %rbx,%rcx
660a(3): mov %rax,%rdx
660d(2): xor %esi,%esi
660f(5): mov $0x2,%edi
6614(2): xor %eax,%eax
6616(5): call 0xffffc9ca(%rip)
661b(5): nop 0x0(%rax,%rax,1)
6620(1): push %rbp
6621(1): push %rbx
6622(2): xor %edx,%edx
6624(2): mov %edi,%ebx
6626(4): sub $0x38,%rsp
662a(9): mov $0x28,%rax
6633(5): mov %rax,0x28(%rsp)
6638(2): xor %eax,%eax
663a(5): lea 0xc(%rsp),%rsi
663f(2): test %edi,%edi
6641(5): mov $0xffffffff,%edi
6646(3): setz %dl
6649(3): cmovne %ebx,%edi
664c(5): call 0xffffc9a4(%rip)
6651(2): test %eax,%eax
6653(6): js 0xa0(%rip)
6659(2): mov %eax,%ebp
665b(2): jz 0x1a(%rip)
665d(2): test %ebx,%ebx
665f(2): jle 0x39(%rip)
6661(4): mov 0xc(%rsp),%eax
6665(2): test $0x7f,%al
6667(2): jnz 0x51(%rip)
6669(3): test $0xff,%ah
666c(2): jnz 0x4c(%rip)
666e(7): sub $0x1,0x213d07(%rip)
6675(5): mov 0x28(%rsp),%rcx
667a(9): xor $0x28,%rcx
6683(2): mov %ebp,%eax
6685(6): jnz 0xb1(%rip)
668b(4): add $0x38,%rsp
668f(1): pop %rbx
6690(1): pop %rbp
6691(1): ret near (%rsp)
6692(6): nop 0x0(%rax,%rax,1)
6698(7): mov 0x213ce1(%rip),%rdi
669f(5): lea 0x10(%rsp),%rsi
66a4(4): mov %eax,0x18(%rsp)
66a8(5): call 0x7068(%rip)
66ad(3): test %rax,%rax
66b0(2): jz 0xffffffc5(%rip)
66b2(4): mov $0x2,0xc(%rax)
66b6(2): jmp 0xffffffab(%rip)
66b8(7): mov 0x213d69(%rip),%rsi
66bf(5): mov $0x4,%edi
66c4(5): call 0x99fc(%rip)
66c9(7): lea 0xed5b(%rip),%rsi
66d0(3): mov %rax,%rbx
66d3(5): mov $0x5,%edx
66d8(2): xor %edi,%edi
66da(5): call 0xffffc596(%rip)
66df(3): mov %rbx,%rcx
66e2(3): mov %rax,%rdx
66e5(2): xor %esi,%esi
66e7(5): mov $0x2,%edi
66ec(2): xor %eax,%eax
66ee(5): call 0xffffc8f2(%rip)
66f3(7): mov 0x213d2e(%rip),%rsi
66fa(5): mov $0x4,%edi
66ff(5): call 0x99c1(%rip)
6704(7): lea 0xed0c(%rip),%rsi
670b(5): mov $0x5,%edx
6710(2): xor %edi,%edi
6712(3): mov %rax,%rbp
6715(5): call 0xffffc55b(%rip)
671a(3): mov %rax,%rbx
671d(5): call 0xffffc3f3(%rip)
6722(2): mov (%rax),%esi
6724(3): mov %rbp,%rcx
6727(3): mov %rbx,%rdx
672a(5): mov $0x2,%edi
672f(2): xor %eax,%eax
6731(5): call 0xffffc8af(%rip)
6736(5): call 0xffffc56a(%rip)

"reap" :
6620(1): push %rbp
6621(1): push %rbx
6622(2): xor %edx,%edx
6624(2): mov %edi,%ebx
6626(4): sub $0x38,%rsp
662a(9): mov $0x28,%rax
6633(5): mov %rax,0x28(%rsp)
6638(2): xor %eax,%eax
663a(5): lea 0xc(%rsp),%rsi
663f(2): test %edi,%edi
6641(5): mov $0xffffffff,%edi
6646(3): setz %dl
6649(3): cmovne %ebx,%edi
664c(5): call 0xffffc9a4(%rip)
6651(2): test %eax,%eax
6653(6): js 0xa0(%rip)
6659(2): mov %eax,%ebp
665b(2): jz 0x1a(%rip)
665d(2): test %ebx,%ebx
665f(2): jle 0x39(%rip)
6661(4): mov 0xc(%rsp),%eax
6665(2): test $0x7f,%al
6667(2): jnz 0x51(%rip)
6669(3): test $0xff,%ah
666c(2): jnz 0x4c(%rip)
666e(7): sub $0x1,0x213d07(%rip)
6675(5): mov 0x28(%rsp),%rcx
667a(9): xor $0x28,%rcx
6683(2): mov %ebp,%eax
6685(6): jnz 0xb1(%rip)
668b(4): add $0x38,%rsp
668f(1): pop %rbx
6690(1): pop %rbp
6691(1): ret near (%rsp)
6692(6): nop 0x0(%rax,%rax,1)
6698(7): mov 0x213ce1(%rip),%rdi
669f(5): lea 0x10(%rsp),%rsi
66a4(4): mov %eax,0x18(%rsp)
66a8(5): call 0x7068(%rip)
66ad(3): test %rax,%rax
66b0(2): jz 0xffffffc5(%rip)
66b2(4): mov $0x2,0xc(%rax)
66b6(2): jmp 0xffffffab(%rip)
66b8(7): mov 0x213d69(%rip),%rsi
66bf(5): mov $0x4,%edi
66c4(5): call 0x99fc(%rip)
66c9(7): lea 0xed5b(%rip),%rsi
66d0(3): mov %rax,%rbx
66d3(5): mov $0x5,%edx
66d8(2): xor %edi,%edi
66da(5): call 0xffffc596(%rip)
66df(3): mov %rbx,%rcx
66e2(3): mov %rax,%rdx
66e5(2): xor %esi,%esi
66e7(5): mov $0x2,%edi
66ec(2): xor %eax,%eax
66ee(5): call 0xffffc8f2(%rip)
66f3(7): mov 0x213d2e(%rip),%rsi
66fa(5): mov $0x4,%edi
66ff(5): call 0x99c1(%rip)
6704(7): lea 0xed0c(%rip),%rsi
670b(5): mov $0x5,%edx
6710(2): xor %edi,%edi
6712(3): mov %rax,%rbp
6715(5): call 0xffffc55b(%rip)
671a(3): mov %rax,%rbx
671d(5): call 0xffffc3f3(%rip)
6722(2): mov (%rax),%esi
6724(3): mov %rbp,%rcx
6727(3): mov %rbx,%rdx
672a(5): mov $0x2,%edi
672f(2): xor %eax,%eax
6731(5): call 0xffffc8af(%rip)
6736(5): call 0xffffc56a(%rip)

"wait_proc" :
6740(1): push %rbx
6741(2): mov %edi,%ebx
6743(4): sub $0x20,%rsp
6747(4): mov %edi,0x8(%rsp)
674b(7): mov 0x213c2e(%rip),%rdi
6752(3): mov %rsp,%rsi
6755(9): mov $0x28,%rax
675e(5): mov %rax,0x18(%rsp)
6763(2): xor %eax,%eax
6765(5): call 0x6fab(%rip)
676a(3): test %rax,%rax
676d(2): jz 0xd(%rip)
676f(4): mov $0x2,0xc(%rax)
6773(2): mov %ebx,%edi
6775(5): call 0xfffffeab(%rip)
677a(5): mov 0x18(%rsp),%rax
677f(9): xor $0x28,%rax
6788(2): jnz 0x8(%rip)
678a(4): add $0x20,%rsp
678e(1): pop %rbx
678f(1): ret near (%rsp)
6790(5): call 0xffffc510(%rip)

"register_proc" :
67a0(1): push %rbx
67a1(3): mov %rdi,%rbx
67a4(7): mov 0x213bd5(%rip),%rdi
67ab(3): test %rdi,%rdi
67ae(2): jz 0x1a(%rip)
67b0(4): mov $0x1,0xc(%rbx)
67b4(3): mov %rbx,%rsi
67b7(5): call 0x6ef9(%rip)
67bc(3): test %rax,%rax
67bf(2): jz 0x35(%rip)
67c1(1): pop %rbx
67c2(1): ret near (%rsp)
67c3(5): nop 0x0(%rax,%rax,1)
67c8(7): lea 0xfffff6a1(%rip),%rcx
67cf(7): lea 0xfffff68a(%rip),%rdx
67d6(3): xor %r8d,%r8d
67d9(2): xor %esi,%esi
67db(5): mov $0x2f,%edi
67e0(5): call 0x66d0(%rip)
67e5(3): test %rax,%rax
67e8(3): mov %rax,%rdi
67eb(7): mov %rax,0x213b8e(%rip)
67f2(2): jnz 0xffffffbe(%rip)
67f4(5): call 0xb83c(%rip)

"init_node" :
6800(2): push %r15
6802(3): mov %r8,%rax
6805(2): push %r14
6807(2): push %r13
6809(2): push %r12
680b(4): shl/sal $0x5,%rax
680f(1): push %rbp
6810(1): push %rbx
6811(3): sub %rax,%rdx
6814(3): mov %rsi,%rbx
6817(3): mov %rcx,%r15
681a(3): mov %r8,%r12
681d(4): sub $0x8,%rsp
6821(3): test %r9b,%r9b
6824(3): mov %rdx,%rbp
6827(6): jz 0x91(%rip)
682d(4): mov 0x28(%rdi),%rax
6831(3): mov %rbp,%r14
6834(3): mov %rax,%rdx
6837(3): shr $0x1,%rdx
683a(3): mov %rdx,%rcx
683d(3): sub %rdx,%rax
6840(4): shl/sal $0x5,%rcx
6844(3): sub %rcx,%r14
6847(4): lea 0x10(%rdi),%rcx
684b(4): mov %rax,0x30(%rbx)
684f(3): mov 0x50(%rdi),%eax
6852(2): xor %esi,%esi
6854(4): mov %rdi,0x38(%rbx)
6858(4): lea 0x58(%rbx),%rdi
685c(4): mov %rbp,0x10(%rbx)
6860(3): mov %rbp,(%rbx)
6863(4): mov %r14,0x18(%rbx)
6867(7): lea 0x80(%rbx),%r13
686e(3): add $0x1,%eax
6871(4): mov %r14,0x8(%rbx)
6875(4): mov %rcx,0x20(%rbx)
6879(4): mov %rdx,0x28(%rbx)
687d(3): mov %eax,0x50(%rbx)
6880(4): mov $0x0,0x54(%rbx)
6884(5): call 0xffffc8ec(%rip)
6889(4): cmp $0x1,%r15
688d(2): jnbe 0x53(%rip)
688f(8): mov $0x0,0x40(%rbx)
6897(8): mov $0x0,0x48(%rbx)
689f(4): add $0x8,%rsp
68a3(1): pop %rbx
68a4(3): mov %r13,%rax
68a7(1): pop %rbp
68a8(2): pop %r12
68aa(2): pop %r13
68ac(2): pop %r14
68ae(2): pop %r15
68b0(1): ret near (%rsp)
68b1(7): nop 0x0(%rax)
68b8(4): mov 0x30(%rdi),%rax
68bc(3): mov %rbp,%r14
68bf(3): mov %rax,%rdx
68c2(3): shr $0x1,%rdx
68c5(3): mov %rdx,%rcx
68c8(3): sub %rdx,%rax
68cb(4): shl/sal $0x5,%rcx
68cf(3): sub %rcx,%r14
68d2(4): lea 0x18(%rdi),%rcx
68d6(5): jmp 0xffffff75(%rip)
68db(5): nop 0x0(%rax,%rax,1)
68e0(3): mov %r15,%rcx
68e3(4): mov %r13,0x40(%rbx)
68e7(3): mov %r12,%r8
68ea(3): shr $0x1,%rcx
68ed(3): mov %rbp,%rdx
68f0(3): mov %r13,%rsi
68f3(3): mov %rbx,%rdi
68f6(6): mov $0x1,%r9d
68fc(3): sub %rcx,%r15
68ff(5): call 0xffffff01(%rip)
6904(4): mov %rax,0x48(%rbx)
6908(4): add $0x8,%rsp
690c(3): mov %r12,%r8
690f(3): mov %r15,%rcx
6912(3): mov %r14,%rdx
6915(3): mov %rbx,%rdi
6918(1): pop %rbx
6919(1): pop %rbp
691a(2): pop %r12
691c(2): pop %r13
691e(2): pop %r14
6920(2): pop %r15
6922(3): xor %r9d,%r9d
6925(3): mov %rax,%rsi
6928(5): jmp 0xfffffed8(%rip)

"queue_insert" :
6930(2): push %r12
6932(1): push %rbp
6933(4): lea 0x8(%rdi),%rbp
6937(1): push %rbx
6938(3): mov %rdi,%rbx
693b(3): mov %rsi,%r12
693e(3): mov %rbp,%rdi
6941(5): call 0xffffc85f(%rip)
6946(3): mov (%rbx),%rdi
6949(3): mov %r12,%rsi
694c(5): call 0x7094(%rip)
6951(4): lea 0x30(%rbx),%rdi
6955(6): mov $0x1,0x54(%r12)
695b(5): call 0xffffc4a5(%rip)
6960(1): pop %rbx
6961(3): mov %rbp,%rdi
6964(1): pop %rbp
6965(2): pop %r12
6967(5): jmp 0xffffc589(%rip)

"begfield.isra.1" :
6970(5): lea 0xffffffff(%rdi,%rsi,1),%rax
6975(6): mov 0x2136ad(%rip),%esi
697b(3): mov (%rdx),%r10
697e(4): mov 0x8(%rdx),%r9
6982(6): cmp $0x80,%esi
6988(2): jz 0x70(%rip)
698a(3): cmp %rdi,%rax
698d(2): jbe 0x5d(%rip)
698f(3): test %r10,%r10
6992(4): lea 0xffffffff(%r10),%r8
6996(2): jnz 0x13(%rip)
6998(2): jmp 0x2b(%rip)
699a(6): nop 0x0(%rax,%rax,1)
69a0(4): add $0x1,%rdi
69a4(3): cmp %rdi,%rax
69a7(2): jz 0x43(%rip)
69a9(3): movsx (%rdi),%ecx
69ac(2): cmp %ecx,%esi
69ae(2): jnz 0xfffffff2(%rip)
69b0(4): add $0x1,%rdi
69b4(3): cmp %rdi,%rax
69b7(2): jbe 0x33(%rip)
69b9(4): sub $0x1,%r8
69bd(4): cmp $0xffffffff,%r8
69c1(2): jnz 0xffffffe8(%rip)
69c3(4): cmp $0x0,0x30(%rdx)
69c7(7): lea 0x213d92(%rip),%rcx
69ce(2): jnz 0x13(%rip)
69d0(2): jmp 0x1a(%rip)
69d2(6): nop 0x0(%rax,%rax,1)
69d8(4): add $0x1,%rdi
69dc(3): cmp %rdi,%rax
69df(2): jbe 0xb(%rip)
69e1(3): movzx (%rdi),%edx
69e4(4): cmp $0x0,0x0(%rcx,%rdx,1)
69e8(2): jnz 0xfffffff0(%rip)
69ea(3): add %r9,%rdi
69ed(3): cmp %rdi,%rax
69f0(4): cmovnbe %rdi,%rax
69f4(1): ret near (%rsp)
69f5(3): nop (%rax)
69f8(3): cmp %rdi,%rax
69fb(2): jbe 0xffffffef(%rip)
69fd(3): test %r10,%r10
6a00(4): lea 0xffffffff(%r10),%r8
6a04(7): lea 0x213d55(%rip),%rcx
6a0b(2): jnz 0xe(%rip)
6a0d(2): jmp 0xffffffb6(%rip)
6a0f(1): nop 
6a10(4): add $0x1,%rdi
6a14(3): cmp %rdi,%rax
6a17(2): jz 0xffffffd3(%rip)
6a19(3): movzx (%rdi),%esi
6a1c(4): cmp $0x0,0x0(%rcx,%rsi,1)
6a20(2): jnz 0xfffffff0(%rip)
6a22(4): add $0x1,%rdi
6a26(3): cmp %rdi,%rax
6a29(2): jbe 0xffffffc1(%rip)
6a2b(3): movzx (%rdi),%esi
6a2e(4): cmp $0x0,0x0(%rcx,%rsi,1)
6a32(2): jnz 0x18(%rip)
6a34(4): nop 0x0(%rax)
6a38(4): add $0x1,%rdi
6a3c(3): cmp %rdi,%rax
6a3f(2): jbe 0xffffffab(%rip)
6a41(3): movzx (%rdi),%esi
6a44(4): cmp $0x0,0x0(%rcx,%rsi,1)
6a48(2): jz 0xfffffff0(%rip)
6a4a(4): sub $0x1,%r8
6a4e(4): cmp $0xffffffff,%r8
6a52(2): jnz 0xffffffc7(%rip)
6a54(5): jmp 0xffffff6f(%rip)

"limfield.isra.2" :
6a60(4): mov 0x18(%rdx),%r9
6a64(3): mov %rdi,%rax
6a67(5): lea 0xffffffff(%rdi,%rsi,1),%rcx
6a6c(4): mov 0x10(%rdx),%r10
6a70(6): mov 0x2135b2(%rip),%edi
6a76(4): cmp $0x1,%r9
6a7a(4): adc $0x0,%r10
6a7e(6): cmp $0x80,%edi
6a84(6): jz 0x94(%rip)
6a8a(3): cmp %rax,%rcx
6a8d(2): jbe 0x4b(%rip)
6a8f(3): test %r10,%r10
6a92(4): lea 0xffffffff(%r10),%r8
6a96(2): jnz 0x13(%rip)
6a98(2): jmp 0x40(%rip)
6a9a(6): nop 0x0(%rax,%rax,1)
6aa0(4): add $0x1,%rax
6aa4(3): cmp %rax,%rcx
6aa7(2): jz 0x31(%rip)
6aa9(3): movsx (%rax),%esi
6aac(2): cmp %esi,%edi
6aae(2): jnz 0xfffffff2(%rip)
6ab0(3): mov %r9,%rsi
6ab3(3): or %r8,%rsi
6ab6(2): jnz 0xa(%rip)
6ab8(2): REP ret near (%rsp)
6aba(6): nop 0x0(%rax,%rax,1)
6ac0(4): add $0x1,%rax
6ac4(3): cmp %rax,%rcx
6ac7(2): jbe 0x11(%rip)
6ac9(4): sub $0x1,%r8
6acd(4): cmp $0xffffffff,%r8
6ad1(2): jnz 0xffffffd8(%rip)
6ad3(5): nop 0x0(%rax,%rax,1)
6ad8(3): test %r9,%r9
6adb(6): jz 0xa2(%rip)
6ae1(4): cmp $0x0,0x31(%rdx)
6ae5(2): jz 0x25(%rip)
6ae7(3): cmp %rax,%rcx
6aea(2): jbe 0x20(%rip)
6aec(7): lea 0x213c6d(%rip),%rsi
6af3(2): jmp 0xe(%rip)
6af5(3): nop (%rax)
6af8(4): add $0x1,%rax
6afc(3): cmp %rax,%rcx
6aff(2): jz 0xb(%rip)
6b01(3): movzx (%rax),%edx
6b04(4): cmp $0x0,0x0(%rsi,%rdx,1)
6b08(2): jnz 0xfffffff0(%rip)
6b0a(3): add %r9,%rax
6b0d(3): cmp %rax,%rcx
6b10(4): cmovbe %rcx,%rax
6b14(1): ret near (%rsp)
6b15(3): nop (%rax)
6b18(3): cmp %rax,%rcx
6b1b(2): jbe 0xffffffbd(%rip)
6b1d(3): test %r10,%r10
6b20(4): lea 0xffffffff(%r10),%r8
6b24(7): lea 0x213c35(%rip),%rsi
6b2b(2): jnz 0xe(%rip)
6b2d(2): jmp 0xffffffab(%rip)
6b2f(1): nop 
6b30(4): add $0x1,%rax
6b34(3): cmp %rax,%rcx
6b37(2): jz 0xffffffa1(%rip)
6b39(3): movzx (%rax),%edi
6b3c(4): cmp $0x0,0x0(%rsi,%rdi,1)
6b40(2): jnz 0xfffffff0(%rip)
6b42(4): add $0x1,%rax
6b46(3): cmp %rax,%rcx
6b49(2): jbe 0xffffff8f(%rip)
6b4b(3): movzx (%rax),%edi
6b4e(4): cmp $0x0,0x0(%rsi,%rdi,1)
6b52(2): jnz 0x1c(%rip)
6b54(4): nop 0x0(%rax)
6b58(4): add $0x1,%rax
6b5c(3): cmp %rax,%rcx
6b5f(6): jbe 0xffffff79(%rip)
6b65(3): movzx (%rax),%edi
6b68(4): cmp $0x0,0x0(%rsi,%rdi,1)
6b6c(2): jz 0xffffffec(%rip)
6b6e(4): sub $0x1,%r8
6b72(4): cmp $0xffffffff,%r8
6b76(2): jnz 0xffffffc3(%rip)
6b78(5): jmp 0xffffff60(%rip)
6b7d(1): ret near (%rsp)

"compare_nodes" :
6b80(3): mov 0x50(%rsi),%eax
6b83(3): cmp %eax,0x50(%rdi)
6b86(2): jz 0xa(%rip)
6b88(3): setb %al
6b8b(3): movzx %al,%eax
6b8e(1): ret near (%rsp)
6b8f(1): nop 
6b90(4): mov 0x30(%rdi),%rdx
6b94(4): mov 0x30(%rsi),%rax
6b98(4): add 0x28(%rdi),%rdx
6b9c(4): add 0x28(%rsi),%rax
6ba0(3): cmp %rax,%rdx
6ba3(3): setb %al
6ba6(3): movzx %al,%eax
6ba9(1): ret near (%rsp)

"cs_leave.part.4" :
6bb0(4): lea 0x8(%rdi),%rsi
6bb4(2): xor %edx,%edx
6bb6(5): mov $0x2,%edi
6bbb(5): jmp 0xffffbf35(%rip)

"exit_cleanup" :
6bc0(1): push %rbp
6bc1(1): push %rbx
6bc2(7): sub $0x98,%rsp
6bc9(9): mov $0x28,%rax
6bd2(8): mov %rax,0x88(%rsp)
6bda(2): xor %eax,%eax
6bdc(7): mov 0x2137a5(%rip),%rax
6be3(3): test %rax,%rax
6be6(2): jz 0x56(%rip)
6be8(3): mov %rsp,%rbp
6beb(7): lea 0x2137ae(%rip),%rsi
6bf2(2): xor %edi,%edi
6bf4(4): lea 0x8(%rbp),%rdx
6bf8(5): call 0xffffbef8(%rip)
6bfd(7): mov 0x213784(%rip),%rbx
6c04(2): test %eax,%eax
6c06(3): setz %al
6c09(3): mov %al,(%rsp)
6c0c(3): test %rbx,%rbx
6c0f(2): jz 0x1e(%rip)
6c11(7): nop 0x0(%rax)
6c18(4): lea 0xd(%rbx),%rdi
6c1c(5): call 0xffffbf04(%rip)
6c21(3): mov (%rbx),%rbx
6c24(3): test %rbx,%rbx
6c27(2): jnz 0xfffffff1(%rip)
6c29(4): movzx (%rsp),%eax
6c2d(2): test %al,%al
6c2f(b): mov $0x0,0x21374e(%rip)
6c3a(2): jnz 0x26(%rip)
6c3c(5): call 0x4624(%rip)
6c41(8): mov 0x88(%rsp),%rax
6c49(9): xor $0x28,%rax
6c52(2): jnz 0x18(%rip)
6c54(7): add $0x98,%rsp
6c5b(1): pop %rbx
6c5c(1): pop %rbp
6c5d(1): ret near (%rsp)
6c5e(2): nop 
6c60(3): mov %rbp,%rdi
6c63(5): call 0xffffff4d(%rip)
6c68(2): jmp 0xffffffd4(%rip)
6c6a(5): call 0xffffc036(%rip)

"zaptemp" :
6c70(2): push %r15
6c72(2): push %r14
6c74(2): push %r13
6c76(2): push %r12
6c78(7): lea 0x213709(%rip),%r13
6c7f(1): push %rbp
6c80(1): push %rbx
6c81(3): mov %rdi,%rbp
6c84(7): sub $0xa8,%rsp
6c8b(9): mov $0x28,%rax
6c94(8): mov %rax,0x98(%rsp)
6c9c(2): xor %eax,%eax
6c9e(7): mov 0x2136e3(%rip),%rbx
6ca5(4): lea 0xd(%rbx),%rax
6ca9(3): cmp %rax,%rdi
6cac(2): jz 0x23(%rip)
6cae(3): mov (%rbx),%rax
6cb1(4): lea 0xd(%rax),%rdx
6cb5(3): cmp %rbp,%rdx
6cb8(2): jz 0x11(%rip)
6cba(3): mov %rax,%rbx
6cbd(3): mov (%rbx),%rax
6cc0(4): lea 0xd(%rax),%rdx
6cc4(3): cmp %rbp,%rdx
6cc7(2): jnz 0xfffffff3(%rip)
6cc9(3): mov %rbx,%r13
6ccc(3): mov %rax,%rbx
6ccf(4): cmp $0x1,0xc(%rbx)
6cd3(6): jz 0xdd(%rip)
6cd9(5): lea 0x18(%rsp),%rdx
6cde(7): lea 0x2136bb(%rip),%rsi
6ce5(2): xor %edi,%edi
6ce7(3): mov (%rbx),%r12
6cea(5): lea 0x10(%rsp),%r15
6cef(5): call 0xffffbe01(%rip)
6cf4(3): mov %rbp,%rdi
6cf7(2): test %eax,%eax
6cf9(5): setz 0x10(%rsp)
6cfe(5): call 0xffffbe22(%rip)
6d03(3): mov %eax,%r14d
6d06(5): call 0xffffbe0a(%rip)
6d0b(5): cmp $0x0,0x10(%rsp)
6d10(2): mov (%rax),%eax
6d12(4): mov %r12,0x0(%r13)
6d16(4): mov %eax,0xc(%rsp)
6d1a(6): jnz 0x86(%rip)
6d20(3): test %r14d,%r14d
6d23(2): jnz 0x3d(%rip)
6d25(3): test %r12,%r12
6d28(2): jnz 0x9(%rip)
6d2a(7): mov %r13,0x21330f(%rip)
6d31(3): mov %rbx,%rdi
6d34(5): call 0xffffc48c(%rip)
6d39(8): mov 0x98(%rsp),%rax
6d41(9): xor $0x28,%rax
6d4a(2): jnz 0x73(%rip)
6d4c(7): add $0xa8,%rsp
6d53(1): pop %rbx
6d54(1): pop %rbp
6d55(2): pop %r12
6d57(2): pop %r13
6d59(2): pop %r14
6d5b(2): pop %r15
6d5d(1): ret near (%rsp)
6d5e(2): nop 
6d60(3): mov %rbp,%rdx
6d63(2): xor %edi,%edi
6d65(5): mov $0x3,%esi
6d6a(5): call 0x9456(%rip)
6d6f(7): lea 0xe6dc(%rip),%rsi
6d76(2): xor %edi,%edi
6d78(5): mov $0x5,%edx
6d7d(3): mov %rax,%rbp
6d80(5): call 0xffffbef0(%rip)
6d85(4): mov 0xc(%rsp),%esi
6d89(3): mov %rax,%rdx
6d8c(3): mov %rbp,%rcx
6d8f(2): xor %edi,%edi
6d91(2): xor %eax,%eax
6d93(5): call 0xffffc24d(%rip)
6d98(2): jmp 0xffffff8d(%rip)
6d9a(6): nop 0x0(%rax,%rax,1)
6da0(3): mov %r15,%rdi
6da3(5): call 0xfffffe0d(%rip)
6da8(5): jmp 0xffffff78(%rip)
6dad(3): nop (%rax)
6db0(3): mov 0x8(%rbx),%edi
6db3(5): call 0xfffff98d(%rip)
6db8(5): jmp 0xffffff21(%rip)
6dbd(5): call 0xffffbee3(%rip)

"pipe_fork" :
6dd0(2): push %r15
6dd2(2): push %r14
6dd4(2): push %r13
6dd6(2): push %r12
6dd8(1): push %rbp
6dd9(1): push %rbx
6dda(3): mov %rsi,%rbx
6ddd(5): mov $0x80000,%esi
6de2(7): sub $0xb8,%rsp
6de9(9): mov $0x28,%rax
6df2(8): mov %rax,0xa8(%rsp)
6dfa(2): xor %eax,%eax
6dfc(5): mov %rdi,0x18(%rsp)
6e01(5): call 0x75ef(%rip)
6e06(2): test %eax,%eax
6e08(6): js 0x1a9(%rip)
6e0e(6): mov 0x213210(%rip),%eax
6e14(3): add $0x1,%eax
6e17(6): cmp 0x21355f(%rip),%eax
6e1d(6): jb 0x16b(%rip)
6e23(5): call 0xffffbced(%rip)
6e28(8): movsd 0xeb98(%rip),%xmm3
6e30(5): lea 0x20(%rsp),%r13
6e35(3): mov %rax,%r12
6e38(6): movsd %xmm3,0x8(%rsp)
6e3e(4): sub $0x1,%rbx
6e42(4): cmp $0xffffffff,%rbx
6e46(6): jz 0xae(%rip)
6e4c(4): lea 0x8(%r13),%rdx
6e50(7): lea 0x213549(%rip),%rsi
6e57(2): xor %edi,%edi
6e59(5): call 0xffffbc97(%rip)
6e5e(2): test %eax,%eax
6e60(7): mov 0x213521(%rip),%r14
6e67(b): mov $0x0,0x213516(%rip)
6e72(5): setz 0x20(%rsp)
6e77(5): call 0xffffc319(%rip)
6e7c(2): test %eax,%eax
6e7e(2): mov %eax,%ebp
6e80(4): mov (%r12),%r15d
6e84(6): jz 0xbc(%rip)
6e8a(5): cmp $0x0,0x20(%rsp)
6e8f(7): mov %r14,0x2134f2(%rip)
6e96(6): jnz 0xb1(%rip)
6e9c(2): test %eax,%eax
6e9e(4): mov %r15d,(%r12)
6ea2(6): jns 0xba(%rip)
6ea8(4): cmp $0xb,%r15d
6eac(2): jnz 0x4c(%rip)
6eae(6): movsd 0x8(%rsp),%xmm0
6eb4(5): call 0xb31c(%rip)
6eb9(6): movsd 0x8(%rsp),%xmm2
6ebf(4): movapd %xmm2,%xmm1
6ec3(4): addsd %xmm2,%xmm1
6ec7(6): movsd %xmm1,0x8(%rsp)
6ecd(6): mov 0x2134a9(%rip),%eax
6ed3(2): test %eax,%eax
6ed5(6): jle 0xffffff69(%rip)
6edb(2): xor %edi,%edi
6edd(5): call 0xfffff743(%rip)
6ee2(2): test %eax,%eax
6ee4(2): jnz 0xffffffe9(%rip)
6ee6(4): sub $0x1,%rbx
6eea(4): cmp $0xffffffff,%rbx
6eee(6): jnz 0xffffff5e(%rip)
6ef4(4): mov (%r12),%r15d
6ef8(5): mov 0x18(%rsp),%rbx
6efd(2): mov (%rbx),%edi
6eff(5): call 0xffffbeb1(%rip)
6f04(3): mov 0x4(%rbx),%edi
6f07(5): call 0xffffbea9(%rip)
6f0c(4): mov %r15d,(%r12)
6f10(8): mov 0xa8(%rsp),%rcx
6f18(9): xor $0x28,%rcx
6f21(2): mov %ebp,%eax
6f23(6): jnz 0x98(%rip)
6f29(7): add $0xb8,%rsp
6f30(1): pop %rbx
6f31(1): pop %rbp
6f32(2): pop %r12
6f34(2): pop %r13
6f36(2): pop %r14
6f38(2): pop %r15
6f3a(1): ret near (%rsp)
6f3b(5): nop 0x0(%rax,%rax,1)
6f40(5): cmp $0x0,0x20(%rsp)
6f45(2): jz 0x2b(%rip)
6f47(3): mov %r13,%rdi
6f4a(4): mov %eax,0x14(%rsp)
6f4e(5): call 0xfffffc62(%rip)
6f53(4): mov 0x14(%rsp),%eax
6f57(5): jmp 0xffffff45(%rip)
6f5c(2): jz 0x14(%rip)
6f5e(7): add $0x1,0x213417(%rip)
6f65(2): jmp 0xffffffab(%rip)
6f67(9): nop 0x0(%rax,%rax,1)
6f70(2): xor %edi,%edi
6f72(2): xor %ebp,%ebp
6f74(5): call 0xffffbe3c(%rip)
6f79(5): mov $0x1,%edi
6f7e(5): call 0xffffbe32(%rip)
6f83(2): jmp 0xffffff8d(%rip)
6f85(3): nop (%rax)
6f88(5): mov $0xffffffff,%edi
6f8d(5): call 0xfffff693(%rip)
6f92(6): mov 0x2133e4(%rip),%edx
6f98(2): test %edx,%edx
6f9a(6): jle 0xfffffe89(%rip)
6fa0(2): xor %edi,%edi
6fa2(5): call 0xfffff67e(%rip)
6fa7(2): test %eax,%eax
6fa9(6): jz 0xfffffe7a(%rip)
6faf(2): jmp 0xffffffe3(%rip)
6fb1(5): mov $0xffffffff,%ebp
6fb6(5): jmp 0xffffff5a(%rip)
6fbb(5): call 0xffffbce5(%rip)

"parse_field_count" :
6fc0(2): push %r12
6fc2(1): push %rbp
6fc3(7): lea 0xe541(%rip),%r8
6fca(1): push %rbx
6fcb(3): mov %rsi,%rbp
6fce(3): mov %rdx,%r12
6fd1(5): mov $0xa,%edx
6fd6(3): mov %rdi,%rbx
6fd9(4): sub $0x20,%rsp
6fdd(5): lea 0x10(%rsp),%rcx
6fe2(5): lea 0x8(%rsp),%rsi
6fe7(9): mov $0x28,%rax
6ff0(5): mov %rax,0x18(%rsp)
6ff5(2): xor %eax,%eax
6ff7(5): call 0xb729(%rip)
6ffc(3): cmp $0x4,%eax
6fff(2): jnbe 0x22(%rip)
7001(7): lea 0xc910(%rip),%rdx
7008(2): mov %eax,%eax
700a(4): movsxd 0x0(%rdx,%rax,4),%rax
700e(3): add %rdx,%rax
7011(2): jmp %rax
7013(5): nop 0x0(%rax,%rax,1)
7018(5): mov 0x10(%rsp),%rax
701d(4): mov %rax,0x0(%rbp)
7021(5): mov 0x8(%rsp),%rax
7026(5): mov 0x18(%rsp),%rbx
702b(9): xor $0x28,%rbx
7034(2): jnz 0x25(%rip)
7036(4): add $0x20,%rsp
703a(1): pop %rbx
703b(1): pop %rbp
703c(2): pop %r12
703e(1): ret near (%rsp)
703f(1): nop 
7040(8): mov $0xffffffff,0x0(%rbp)
7048(2): jmp 0xffffffd9(%rip)
704a(6): nop 0x0(%rax,%rax,1)
7050(3): test %r12,%r12
7053(2): jnz 0xb(%rip)
7055(2): xor %eax,%eax
7057(2): jmp 0xffffffcf(%rip)
7059(5): call 0xffffbc47(%rip)
705e(3): mov %rbx,%rdi
7061(5): call 0x932f(%rip)
7066(5): mov $0x5,%edx
706b(3): mov %r12,%rsi
706e(2): xor %edi,%edi
7070(3): mov %rax,%rbp
7073(5): call 0xffffbbfd(%rip)
7078(7): lea 0xcf09(%rip),%rsi
707f(3): mov %rax,%rbx
7082(5): mov $0x5,%edx
7087(2): xor %edi,%edi
7089(5): call 0xffffbbe7(%rip)
708e(3): mov %rbp,%r8
7091(3): mov %rax,%rdx
7094(3): mov %rbx,%rcx
7097(2): xor %esi,%esi
7099(5): mov $0x2,%edi
709e(2): xor %eax,%eax
70a0(5): call 0xffffbf40(%rip)
70a5(1): nop 
70a6(a): nop 0x0(%rax,%rax,1)
70b0(1): push %rbp
70b1(1): push %rbx
70b2(3): mov %rdi,%rbx
70b5(4): sub $0x18,%rsp
70b9(3): movzx (%rsi),%eax
70bc(2): cmp $0x72,%al
70be(2): jz 0x32(%rip)
70c0(2): cmp $0x77,%al
70c2(6): jnz 0x106(%rip)
70c8(3): test %rdi,%rdi
70cb(2): jz 0x12(%rip)
70cd(2): xor %esi,%esi
70cf(5): mov $0x1,%edi
70d4(5): call 0xffffbc5c(%rip)
70d9(2): test %eax,%eax
70db(2): jnz 0x65(%rip)
70dd(7): mov 0x2130e4(%rip),%rax
70e4(4): add $0x18,%rsp
70e8(1): pop %rbx
70e9(1): pop %rbp
70ea(1): ret near (%rsp)
70eb(5): nop 0x0(%rax,%rax,1)
70f0(7): lea 0xf543(%rip),%rdi
70f7(3): mov %rsi,%rbp
70fa(5): mov $0x2,%ecx
70ff(3): mov %rbx,%rsi
7102(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
7104(3): setnbe %al
7107(2): sbb $0x0,%al
7109(2): test %al,%al
710b(6): jnz 0x95(%rip)
7111(7): mov 0x2130b8(%rip),%rax
7118(7): mov $0x1,0x213319(%rip)
711f(3): mov %rax,%rdi
7122(5): mov $0x2,%esi
7127(5): mov %rax,0x8(%rsp)
712c(5): call 0x4f84(%rip)
7131(5): mov 0x8(%rsp),%rax
7136(4): add $0x18,%rsp
713a(1): pop %rbx
713b(1): pop %rbp
713c(1): ret near (%rsp)
713d(3): nop (%rax)
7140(5): call 0xffffb9d0(%rip)
7145(2): mov (%rax),%ebp
7147(5): call 0xfffff239(%rip)
714c(3): test %rax,%rax
714f(2): jz 0x15(%rip)
7151(3): mov 0x18(%rax),%eax
7154(5): and $0xf000,%eax
7159(5): cmp $0x8000,%eax
715e(6): jnz 0xffffff7f(%rip)
7164(3): mov %rbx,%rdx
7167(5): mov $0x3,%esi
716c(2): xor %edi,%edi
716e(5): call 0x9052(%rip)
7173(7): lea 0xe2f3(%rip),%rsi
717a(3): mov %rax,%rbx
717d(5): mov $0x5,%edx
7182(2): xor %edi,%edi
7184(5): call 0xffffbaec(%rip)
7189(3): mov %rbx,%rcx
718c(3): mov %rax,%rdx
718f(2): mov %ebp,%esi
7191(5): mov $0x2,%edi
7196(2): xor %eax,%eax
7198(5): call 0xffffbe48(%rip)
719d(3): nop (%rax)
71a0(3): mov %rbx,%rdi
71a3(2): xor %eax,%eax
71a5(5): mov $0x80000,%esi
71aa(5): call 0xffffbe66(%rip)
71af(2): mov %eax,%edi
71b1(2): xor %eax,%eax
71b3(2): test %edi,%edi
71b5(6): js 0xffffff6a(%rip)
71bb(3): mov %rbp,%rsi
71be(5): call 0xffffbdc2(%rip)
71c3(5): jmp 0xffffff5c(%rip)
71c8(7): lea 0xcb89(%rip),%rcx
71cf(7): lea 0xe2ac(%rip),%rsi
71d6(7): lea 0xcdd3(%rip),%rdi
71dd(5): mov $0x3d6,%edx
71e2(5): call 0xffffbb8e(%rip)

"stream_open" :
70b0(1): push %rbp
70b1(1): push %rbx
70b2(3): mov %rdi,%rbx
70b5(4): sub $0x18,%rsp
70b9(3): movzx (%rsi),%eax
70bc(2): cmp $0x72,%al
70be(2): jz 0x32(%rip)
70c0(2): cmp $0x77,%al
70c2(6): jnz 0x106(%rip)
70c8(3): test %rdi,%rdi
70cb(2): jz 0x12(%rip)
70cd(2): xor %esi,%esi
70cf(5): mov $0x1,%edi
70d4(5): call 0xffffbc5c(%rip)
70d9(2): test %eax,%eax
70db(2): jnz 0x65(%rip)
70dd(7): mov 0x2130e4(%rip),%rax
70e4(4): add $0x18,%rsp
70e8(1): pop %rbx
70e9(1): pop %rbp
70ea(1): ret near (%rsp)
70eb(5): nop 0x0(%rax,%rax,1)
70f0(7): lea 0xf543(%rip),%rdi
70f7(3): mov %rsi,%rbp
70fa(5): mov $0x2,%ecx
70ff(3): mov %rbx,%rsi
7102(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
7104(3): setnbe %al
7107(2): sbb $0x0,%al
7109(2): test %al,%al
710b(6): jnz 0x95(%rip)
7111(7): mov 0x2130b8(%rip),%rax
7118(7): mov $0x1,0x213319(%rip)
711f(3): mov %rax,%rdi
7122(5): mov $0x2,%esi
7127(5): mov %rax,0x8(%rsp)
712c(5): call 0x4f84(%rip)
7131(5): mov 0x8(%rsp),%rax
7136(4): add $0x18,%rsp
713a(1): pop %rbx
713b(1): pop %rbp
713c(1): ret near (%rsp)
713d(3): nop (%rax)
7140(5): call 0xffffb9d0(%rip)
7145(2): mov (%rax),%ebp
7147(5): call 0xfffff239(%rip)
714c(3): test %rax,%rax
714f(2): jz 0x15(%rip)
7151(3): mov 0x18(%rax),%eax
7154(5): and $0xf000,%eax
7159(5): cmp $0x8000,%eax
715e(6): jnz 0xffffff7f(%rip)
7164(3): mov %rbx,%rdx
7167(5): mov $0x3,%esi
716c(2): xor %edi,%edi
716e(5): call 0x9052(%rip)
7173(7): lea 0xe2f3(%rip),%rsi
717a(3): mov %rax,%rbx
717d(5): mov $0x5,%edx
7182(2): xor %edi,%edi
7184(5): call 0xffffbaec(%rip)
7189(3): mov %rbx,%rcx
718c(3): mov %rax,%rdx
718f(2): mov %ebp,%esi
7191(5): mov $0x2,%edi
7196(2): xor %eax,%eax
7198(5): call 0xffffbe48(%rip)
719d(3): nop (%rax)
71a0(3): mov %rbx,%rdi
71a3(2): xor %eax,%eax
71a5(5): mov $0x80000,%esi
71aa(5): call 0xffffbe66(%rip)
71af(2): mov %eax,%edi
71b1(2): xor %eax,%eax
71b3(2): test %edi,%edi
71b5(6): js 0xffffff6a(%rip)
71bb(3): mov %rbp,%rsi
71be(5): call 0xffffbdc2(%rip)
71c3(5): jmp 0xffffff5c(%rip)
71c8(7): lea 0xcb89(%rip),%rcx
71cf(7): lea 0xe2ac(%rip),%rsi
71d6(7): lea 0xcdd3(%rip),%rdi
71dd(5): mov $0x3d6,%edx
71e2(5): call 0xffffbb8e(%rip)

"xfclose" :
71f0(1): push %rbp
71f1(1): push %rbx
71f2(3): mov %rsi,%rbp
71f5(3): mov %rdi,%rbx
71f8(4): sub $0x8,%rsp
71fc(5): call 0xffffbc94(%rip)
7201(2): test %eax,%eax
7203(2): jz 0x4d(%rip)
7205(3): cmp $0x1,%eax
7208(2): jz 0x18(%rip)
720a(3): mov %rbx,%rdi
720d(5): call 0xb933(%rip)
7212(2): test %eax,%eax
7214(2): jnz 0x4f(%rip)
7216(4): add $0x8,%rsp
721a(1): pop %rbx
721b(1): pop %rbp
721c(1): ret near (%rsp)
721d(3): nop (%rax)
7220(3): mov %rbx,%rdi
7223(5): call 0xffffbf0d(%rip)
7228(2): test %eax,%eax
722a(2): jz 0xffffffec(%rip)
722c(7): lea 0xe278(%rip),%rsi
7233(5): mov $0x5,%edx
7238(2): xor %edi,%edi
723a(5): call 0xffffba36(%rip)
723f(3): mov %rbp,%rsi
7242(3): mov %rax,%rdi
7245(5): call 0xfffff0db(%rip)
724a(6): nop 0x0(%rax,%rax,1)
7250(3): test $0x10,(%rbx)
7253(2): jz 0xffffffc3(%rip)
7255(4): add $0x8,%rsp
7259(3): mov %rbx,%rdi
725c(1): pop %rbx
725d(1): pop %rbp
725e(5): jmp 0xffffb982(%rip)
7263(5): mov $0x5,%edx
7268(7): lea 0xe24a(%rip),%rsi
726f(2): jmp 0xffffffc9(%rip)

"write_line" :
7280(2): push %r15
7282(2): push %r14
7284(3): mov %rsi,%rcx
7287(2): push %r13
7289(2): push %r12
728b(1): push %rbp
728c(1): push %rbx
728d(3): mov %rdx,%rbp
7290(4): sub $0x38,%rsp
7294(3): mov (%rdi),%r15
7297(4): mov 0x8(%rdi),%r13
729b(9): mov $0x28,%rax
72a4(5): mov %rax,0x28(%rsp)
72a9(2): xor %eax,%eax
72ab(3): test %rdx,%rdx
72ae(4): lea 0x0(%r15,%r13,1),%rbx
72b2(2): jz 0x4e(%rip)
72b4(7): movzx 0x212d7d(%rip),%eax
72bb(3): mov %r13,%rdx
72be(5): mov $0x1,%esi
72c3(3): mov %r15,%rdi
72c6(3): mov %al,0xffffffff(%rbx)
72c9(5): call 0xffffbc97(%rip)
72ce(3): cmp %rax,%r13
72d1(6): jnz 0x42d(%rip)
72d7(4): mov $0x0,0xffffffff(%rbx)
72db(5): mov 0x28(%rsp),%rax
72e0(9): xor $0x28,%rax
72e9(6): jnz 0x410(%rip)
72ef(4): add $0x38,%rsp
72f3(1): pop %rbx
72f4(1): pop %rbp
72f5(2): pop %r12
72f7(2): pop %r13
72f9(2): pop %r14
72fb(2): pop %r15
72fd(1): ret near (%rsp)
72fe(2): nop 
7300(7): cmp $0x0,0x213119(%rip)
7307(2): jz 0xffffffad(%rip)
7309(3): cmp %rbx,%r15
730c(3): mov %rdi,%r12
730f(2): jb 0x32(%rip)
7311(5): jmp 0xa8(%rip)
7316(a): nop 0x0(%rax,%rax,1)
7320(3): cmp %r15,%rbx
7323(3): movsx %al,%esi
7326(2): jz 0x7a(%rip)
7328(4): mov 0x28(%rcx),%rdx
732c(4): cmp %rdx,0x30(%rcx)
7330(2): jbe 0x32(%rip)
7332(4): lea 0x1(%rdx),%rsi
7336(4): mov %rsi,0x28(%rcx)
733a(2): mov %al,(%rdx)
733c(3): cmp %r15,%rbx
733f(2): jz 0x71(%rip)
7341(4): add $0x1,%r15
7345(5): movzx 0xffffffff(%r15),%eax
734a(2): cmp $0x9,%al
734c(2): jnz 0xffffffd4(%rip)
734e(4): mov 0x28(%rcx),%rdx
7352(4): cmp %rdx,0x30(%rcx)
7356(5): mov $0x3e,%esi
735b(5): mov $0x3e,%eax
7360(2): jnbe 0xffffffd2(%rip)
7362(3): mov %rcx,%rdi
7365(4): movzx %sil,%esi
7369(4): mov %rcx,(%rsp)
736d(5): call 0xffffb9a3(%rip)
7372(3): cmp $0xff,%eax
7375(4): mov (%rsp),%rcx
7379(2): jnz 0xffffffc3(%rip)
737b(7): lea 0xe144(%rip),%rsi
7382(2): xor %edi,%edi
7384(5): mov $0x5,%edx
7389(5): call 0xffffb8e7(%rip)
738e(2): xor %esi,%esi
7390(3): mov %rax,%rdi
7393(5): call 0xffffef8d(%rip)
7398(8): nop 0x0(%rax,%rax,1)
73a0(5): mov $0xa,%esi
73a5(5): mov $0xa,%eax
73aa(5): jmp 0xffffff7e(%rip)
73af(1): nop 
73b0(4): mov (%r12),%r15
73b4(5): mov 0x8(%r12),%r13
73b9(7): mov 0x213070(%rip),%r14
73c0(7): lea 0x213399(%rip),%rbp
73c7(5): lea 0xffffffff(%r15,%r13,1),%r9
73cc(3): test %r14,%r14
73cf(6): jz 0x200(%rip)
73d5(3): nop (%rax)
73d8(3): mov (%r14),%r11
73db(4): mov 0x10(%r14),%r10
73df(4): cmp $0xffffffff,%r11
73e3(6): jz 0x28d(%rip)
73e9(3): mov %r14,%rdx
73ec(3): mov %r13,%rsi
73ef(3): mov %r15,%rdi
73f2(5): mov %r10,0x8(%rsp)
73f7(4): mov %r9,(%rsp)
73fb(5): call 0xfffff575(%rip)
7400(5): mov 0x8(%rsp),%r10
7405(3): mov %rax,%rbx
7408(4): mov (%rsp),%r9
740c(4): cmp $0xffffffff,%r10
7410(2): jz 0x20(%rip)
7412(3): mov %r14,%rdx
7415(3): mov %r13,%rsi
7418(3): mov %r15,%rdi
741b(5): call 0xfffff645(%rip)
7420(3): mov %rax,%r9
7423(5): cmp $0x0,0x30(%r14)
7428(2): jz 0x8(%rip)
742a(4): cmp $0xffffffff,%r11
742e(2): jz 0x1d(%rip)
7430(5): cmp $0x0,0x36(%r14)
7435(2): jnz 0x16(%rip)
7437(a): mov $0x281470698455040,%rax
7441(4): test %rax,0x30(%r14)
7445(6): jz 0xb3(%rip)
744b(4): movzx (%r9),%r13d
744f(4): mov $0x0,(%r9)
7453(3): movzx (%rbx),%eax
7456(5): cmp $0x0,0x0(%rbp,%rax,1)
745b(2): jz 0x13(%rip)
745d(3): nop (%rax)
7460(4): add $0x1,%rbx
7464(3): movzx (%rbx),%eax
7467(5): cmp $0x0,0x0(%rbp,%rax,1)
746c(2): jnz 0xfffffff4(%rip)
746e(3): cmp %rbx,%r9
7471(5): mov %rbx,0x18(%rsp)
7476(6): jb 0x18a(%rip)
747c(5): cmp $0x0,0x36(%r14)
7481(6): jnz 0x207(%rip)
7487(5): cmp $0x0,0x34(%r14)
748c(6): jnz 0x234(%rip)
7492(a): mov $0x280375481794560,%rax
749c(4): test %rax,0x30(%r14)
74a0(6): jz 0x160(%rip)
74a6(3): cmp %rbx,%r9
74a9(3): mov %rbx,%rax
74ac(2): jbe 0xd(%rip)
74ae(2): xor %eax,%eax
74b0(3): cmp $0x2d,(%rbx)
74b3(3): setz %al
74b6(3): add %rbx,%rax
74b9(5): lea 0x20(%rsp),%rdi
74be(4): mov %r9,(%rsp)
74c2(5): mov %rax,0x20(%rsp)
74c7(5): call 0xffffe9b9(%rip)
74cc(2): cmp $0x2f,%al
74ce(4): mov (%rsp),%r9
74d2(2): jbe 0x1e(%rip)
74d4(5): cmp $0x0,0x35(%r14)
74d9(5): mov 0x20(%rsp),%rax
74de(6): jnz 0x1fe(%rip)
74e4(5): mov %rax,0x18(%rsp)
74e9(7): nop 0x0(%rax)
74f0(3): mov %r13b,(%r9)
74f3(5): mov 0x18(%rsp),%r9
74f8(7): lea 0xdfd4(%rip),%r13
74ff(3): mov %rbx,%rsi
7502(3): mov %r15,%rdi
7505(4): mov %r9,(%rsp)
7509(5): call 0xfffff017(%rip)
750e(4): mov (%rsp),%r9
7512(3): mov %rbx,%rdi
7515(3): mov %rax,%r15
7518(3): mov %r9,%rsi
751b(5): call 0xfffff005(%rip)
7520(3): mov %rax,%rbx
7523(4): sub $0x1,%r15
7527(4): cmp $0xffffffff,%r15
752b(2): jz 0x2c(%rip)
752d(7): mov 0x212c94(%rip),%rdi
7534(4): mov 0x28(%rdi),%rax
7538(4): cmp 0x30(%rdi),%rax
753c(6): jnb 0xa4(%rip)
7542(4): lea 0x1(%rax),%rsi
7546(4): sub $0x1,%r15
754a(4): cmp $0xffffffff,%r15
754e(4): mov %rsi,0x28(%rdi)
7552(3): mov $0x20,(%rax)
7555(2): jnz 0xffffffd8(%rip)
7557(3): test %rbx,%rbx
755a(6): jz 0xb6(%rip)
7560(7): mov 0x212c61(%rip),%rdi
7567(4): mov 0x28(%rdi),%rax
756b(4): cmp 0x30(%rdi),%rax
756f(2): jnb 0x81(%rip)
7571(4): lea 0x1(%rax),%rdx
7575(4): mov %rdx,0x28(%rdi)
7579(3): mov $0x5f,(%rax)
757c(4): sub $0x1,%rbx
7580(2): jnz 0xffffffe0(%rip)
7582(7): mov 0x212c3f(%rip),%rdi
7589(4): mov 0x28(%rdi),%rax
758d(4): cmp 0x30(%rdi),%rax
7591(6): jnb 0x117(%rip)
7597(4): lea 0x1(%rax),%rdx
759b(4): mov %rdx,0x28(%rdi)
759f(3): mov $0xa,(%rax)
75a2(3): test %r14,%r14
75a5(6): jz 0xfffffd36(%rip)
75ab(4): mov 0x40(%r14),%r14
75af(3): test %r14,%r14
75b2(6): jz 0x86(%rip)
75b8(4): mov (%r12),%r15
75bc(5): mov 0x8(%r12),%r13
75c1(3): test %r14,%r14
75c4(5): lea 0xffffffff(%r15,%r13,1),%r9
75c9(6): jnz 0xfffffe0f(%rip)
75cf(3): mov %r15,%rbx
75d2(5): jmp 0xffffff26(%rip)
75d7(9): nop 0x0(%rax,%rax,1)
75e0(5): mov $0x20,%esi
75e5(5): call 0xffffb72b(%rip)
75ea(5): jmp 0xffffff39(%rip)
75ef(1): nop 
75f0(5): mov $0x5f,%esi
75f5(5): call 0xffffb71b(%rip)
75fa(2): jmp 0xffffff82(%rip)
75fc(4): nop 0x0(%rax)
7600(5): mov %r9,0x18(%rsp)
7605(5): jmp 0xfffffeeb(%rip)
760a(6): nop 0x0(%rax,%rax,1)
7610(3): mov %r13,%rsi
7613(2): xor %edi,%edi
7615(5): mov $0x5,%edx
761a(5): call 0xffffb656(%rip)
761f(5): mov $0x1,%edi
7624(3): mov %rax,%rsi
7627(2): xor %eax,%eax
7629(5): call 0xffffb977(%rip)
762e(5): jmp 0xffffff74(%rip)
7633(5): nop 0x0(%rax,%rax,1)
7638(7): cmp $0x0,0x212dfa(%rip)
763f(6): jnz 0xfffffc9c(%rip)
7645(7): cmp $0x0,0x212dee(%rip)
764c(6): jnz 0xfffffc8f(%rip)
7652(4): mov (%r12),%rbx
7656(5): mov 0x8(%r12),%rax
765b(3): mov %rbx,%r15
765e(5): lea 0xffffffff(%rbx,%rax,1),%r9
7663(5): jmp 0xfffffe9c(%rip)
7668(8): nop 0x0(%rax,%rax,1)
7670(4): cmp $0xffffffff,%r10
7674(3): mov %r15,%rbx
7677(6): jnz 0xfffffd9b(%rip)
767d(5): jmp 0xfffffda6(%rip)
7682(6): nop 0x0(%rax,%rax,1)
7688(5): lea 0x18(%rsp),%rsi
768d(3): mov %rbx,%rdi
7690(4): mov %r9,(%rsp)
7694(5): call 0xffffe91c(%rip)
7699(4): mov (%rsp),%r9
769d(5): jmp 0xfffffe53(%rip)
76a2(6): nop 0x0(%rax,%rax,1)
76a8(5): mov $0xa,%esi
76ad(5): call 0xffffb663(%rip)
76b2(5): jmp 0xfffffef0(%rip)
76b7(9): nop 0x0(%rax,%rax,1)
76c0(5): lea 0x18(%rsp),%rsi
76c5(3): mov %rbx,%rdi
76c8(4): mov %r9,(%rsp)
76cc(5): call 0xffffb904(%rip)
76d1(2): fstp %st0,%st0
76d3(4): mov (%rsp),%r9
76d7(5): jmp 0xfffffe19(%rip)
76dc(3): movzx (%rax),%edx
76df(7): lea 0xc6da(%rip),%rcx
76e6(4): cmp $0x0,0x0(%rcx,%rdx,1)
76ea(6): jz 0xfffffdfa(%rip)
76f0(4): add $0x1,%rax
76f4(5): jmp 0xfffffdf0(%rip)
76f9(5): call 0xffffb5a7(%rip)
76fe(7): lea 0xddc1(%rip),%rsi
7705(2): xor %edi,%edi
7707(5): mov $0x5,%edx
770c(5): call 0xffffb564(%rip)
7711(3): mov %rbp,%rsi
7714(3): mov %rax,%rdi
7717(5): call 0xffffec09(%rip)

"keycompare" :
7720(2): push %r15
7722(2): push %r14
7724(7): lea 0x213035(%rip),%r14
772b(2): push %r13
772d(2): push %r12
772f(1): push %rbp
7730(1): push %rbx
7731(7): sub $0x21a8,%rsp
7738(4): mov 0x18(%rdi),%rbp
773c(4): mov 0x10(%rdi),%r8
7740(8): lea 0x110(%rsp),%rax
7748(4): mov 0x18(%rsi),%rcx
774c(7): mov 0x212cdd(%rip),%r15
7753(4): mov 0x10(%rsi),%rbx
7757(5): mov %rdi,0x38(%rsp)
775c(5): mov %rax,0x78(%rsp)
7761(8): lea 0x1ac(%rsp),%rax
7769(3): mov %rbp,%r11
776c(9): mov $0x28,%rdx
7775(8): mov %rdx,0x2198(%rsp)
777d(2): xor %edx,%edx
777f(5): mov %rsi,0x40(%rsp)
7784(8): mov %rax,0x80(%rsp)
778c(3): mov %r8,%r12
778f(3): mov %rcx,%rbp
7792(6): nop 0x0(%rax,%rax,1)
7798(3): cmp %r11,%r12
779b(3): mov %r11,%rcx
779e(3): mov %rbp,%rax
77a1(4): cmovnb %r12,%rcx
77a5(3): cmp %rbp,%rbx
77a8(4): mov 0x28(%r15),%rdx
77ac(4): cmovnb %rbx,%rax
77b0(3): mov %rcx,%rbp
77b3(4): mov 0x20(%r15),%r13
77b7(3): mov %rax,%r9
77ba(3): sub %r12,%rbp
77bd(3): sub %rbx,%r9
77c0(7): cmp $0x0,0x2130ba(%rip)
77c7(2): jnz 0x16(%rip)
77c9(a): mov $0x72057594037862400,%rsi
77d3(4): test %rsi,0x30(%r15)
77d7(6): jz 0x4a9(%rip)
77dd(3): test %r13,%r13
77e0(4): setnz %dil
77e4(3): test %rdx,%rdx
77e7(4): setnz %sil
77eb(3): or %sil,%dil
77ee(5): mov %dil,0x8(%rsp)
77f3(6): jnz 0x14d(%rip)
77f9(3): movzx (%rcx),%edx
77fc(3): mov $0x0,(%rcx)
77ff(3): movzx (%rax),%ecx
7802(3): mov $0x0,(%rax)
7805(5): cmp $0x0,0x32(%r15)
780a(4): mov %dl,0x36(%rsp)
780e(4): mov %cl,0x37(%rsp)
7812(6): jnz 0x1fb(%rip)
7818(5): cmp $0x0,0x34(%r15)
781d(6): jnz 0x32b(%rip)
7823(5): cmp $0x0,0x35(%r15)
7828(6): jnz 0x3b8(%rip)
782e(5): cmp $0x0,0x36(%r15)
7833(6): jnz 0x5c5(%rip)
7839(5): cmp $0x0,0x33(%r15)
783e(6): jnz 0x60a(%rip)
7844(5): cmp $0x0,0x38(%r15)
7849(6): jz 0x5df(%rip)
784f(3): mov %rbx,%rsi
7852(3): mov %r12,%rdi
7855(5): mov %r9,0x10(%rsp)
785a(5): call 0x4956(%rip)
785f(5): mov 0x10(%rsp),%r9
7864(3): mov %eax,%r8d
7867(2): jmp 0x21(%rip)
7869(7): nop 0x0(%rax)
7870(2): fstp %st0,%st0
7872(2): fstp %st0,%st0
7874(2): jmp 0x14(%rip)
7876(a): nop 0x0(%rax,%rax,1)
7880(2): fstp %st0,%st0
7882(2): fstp %st0,%st0
7884(4): nop 0x0(%rax)
7888(5): cmp $0x0,0x8(%rsp)
788d(6): jnz 0x1ea(%rip)
7893(5): movzx 0x36(%rsp),%eax
7898(4): mov %al,0x0(%r12,%rbp,1)
789c(5): movzx 0x37(%rsp),%eax
78a1(4): mov %al,0x0(%rbx,%r9,1)
78a5(3): test %r8d,%r8d
78a8(6): jnz 0x1f0(%rip)
78ae(4): mov 0x40(%r15),%r15
78b2(3): test %r15,%r15
78b5(6): jz 0xcab(%rip)
78bb(5): mov 0x38(%rsp),%rax
78c0(5): cmp $0xffffffff,0x10(%r15)
78c5(3): mov (%rax),%r12
78c8(4): mov 0x8(%rax),%r13
78cc(5): mov 0x40(%rsp),%rax
78d1(4): mov 0x8(%rax),%rbp
78d5(3): mov (%rax),%rbx
78d8(5): mov %rbp,0x8(%rsp)
78dd(6): jz 0x253(%rip)
78e3(3): mov %r15,%rdx
78e6(3): mov %r13,%rsi
78e9(3): mov %r12,%rdi
78ec(5): call 0xfffff174(%rip)
78f1(3): mov %rbp,%rsi
78f4(3): mov %r15,%rdx
78f7(3): mov %rbx,%rdi
78fa(3): mov %rax,%r11
78fd(5): call 0xfffff163(%rip)
7902(3): mov %rax,%rbp
7905(4): cmp $0xffffffff,(%r15)
7909(6): jz 0x1c7(%rip)
790f(3): mov %r12,%rdi
7912(3): mov %r15,%rdx
7915(3): mov %r13,%rsi
7918(5): call 0xfffff058(%rip)
791d(5): mov 0x8(%rsp),%rsi
7922(3): mov %rbx,%rdi
7925(3): mov %r15,%rdx
7928(3): mov %rax,%r12
792b(5): call 0xfffff045(%rip)
7930(3): mov %rax,%rbx
7933(5): jmp 0xfffffe65(%rip)
7938(8): nop 0x0(%rax,%rax,1)
7940(5): lea 0x2(%rbp,%r9,1),%rdi
7945(7): cmp $0xfa0,%rdi
794c(6): jnbe 0x434(%rip)
7952(8): lea 0x250(%rsp),%rsi
795a(3): test %rbp,%rbp
795d(9): mov $0x0,0x58(%rsp)
7966(5): lea 0x1(%rsi,%rbp,1),%rdi
796b(6): jz 0x444(%rip)
7971(4): lea 0x0(%r12,%rbp,1),%r10
7975(2): xor %ebp,%ebp
7977(9): nop 0x0(%rax,%rax,1)
7980(3): test %r13,%r13
7983(5): movzx (%r12),%eax
7988(2): jz 0xd(%rip)
798a(3): movzx %al,%ecx
798d(6): cmp $0x0,0x0(%r13,%rcx,1)
7993(2): jnz 0x12(%rip)
7995(3): test %rdx,%rdx
7998(2): jz 0x6(%rip)
799a(4): movzx 0x0(%rdx,%rax,1),%eax
799e(3): mov %al,0x0(%rsi,%rbp,1)
79a1(4): add $0x1,%rbp
79a5(4): add $0x1,%r12
79a9(3): cmp %r12,%r10
79ac(2): jnz 0xffffffd4(%rip)
79ae(4): lea 0x0(%rsi,%rbp,1),%rax
79b2(3): test %r9,%r9
79b5(3): mov $0x0,(%rax)
79b8(6): jz 0x408(%rip)
79be(4): lea 0x0(%rbx,%r9,1),%r10
79c2(3): xor %r9d,%r9d
79c5(3): nop (%rax)
79c8(3): test %r13,%r13
79cb(3): movzx (%rbx),%eax
79ce(2): jz 0xd(%rip)
79d0(3): movzx %al,%ecx
79d3(6): cmp $0x0,0x0(%r13,%rcx,1)
79d9(2): jnz 0x13(%rip)
79db(3): test %rdx,%rdx
79de(2): jz 0x6(%rip)
79e0(4): movzx 0x0(%rdx,%rax,1),%eax
79e4(4): mov %al,0x0(%rdi,%r9,1)
79e8(4): add $0x1,%r9
79ec(4): add $0x1,%rbx
79f0(3): cmp %rbx,%r10
79f3(2): jnz 0xffffffd5(%rip)
79f5(4): lea 0x0(%rdi,%r9,1),%rax
79f9(3): mov $0x0,(%rax)
79fc(5): cmp $0x0,0x32(%r15)
7a01(3): mov %rdi,%rbx
7a04(3): mov %rsi,%r12
7a07(6): jz 0xfffffe11(%rip)
7a0d(5): movzx (%r12),%eax
7a12(3): mov %r12,%rdi
7a15(5): cmp $0x0,0x0(%r14,%rax,1)
7a1a(2): jz 0x14(%rip)
7a1c(4): nop 0x0(%rax)
7a20(4): add $0x1,%rdi
7a24(3): movzx (%rdi),%eax
7a27(5): cmp $0x0,0x0(%r14,%rax,1)
7a2c(2): jnz 0xfffffff4(%rip)
7a2e(3): movzx (%rbx),%eax
7a31(3): mov %rbx,%rsi
7a34(5): cmp $0x0,0x0(%r14,%rax,1)
7a39(2): jz 0x15(%rip)
7a3b(5): nop 0x0(%rax,%rax,1)
7a40(4): add $0x1,%rsi
7a44(3): movzx (%rsi),%eax
7a47(5): cmp $0x0,0x0(%r14,%rax,1)
7a4c(2): jnz 0xfffffff4(%rip)
7a4e(6): mov 0x212e30(%rip),%ecx
7a54(6): mov 0x212e2e(%rip),%edx
7a5a(5): mov %r9,0x10(%rsp)
7a5f(5): call 0x97a1(%rip)
7a64(5): cmp $0x0,0x8(%rsp)
7a69(3): mov %eax,%r8d
7a6c(5): mov 0x10(%rsp),%r9
7a71(6): jz 0xfffffe22(%rip)
7a77(5): mov 0x58(%rsp),%rdi
7a7c(5): mov %r8d,0x8(%rsp)
7a81(5): call 0xffffb73f(%rip)
7a86(5): mov 0x8(%rsp),%r8d
7a8b(3): test %r8d,%r8d
7a8e(6): jz 0xfffffe20(%rip)
7a94(4): nop 0x0(%rax)
7a98(3): mov %r8d,%ebp
7a9b(5): cmp $0x0,0x37(%r15)
7aa0(2): jz 0x4(%rip)
7aa2(2): neg %ebp
7aa4(8): mov 0x2198(%rsp),%rcx
7aac(9): xor $0x28,%rcx
7ab5(2): mov %ebp,%eax
7ab7(6): jnz 0xc22(%rip)
7abd(7): add $0x21a8,%rsp
7ac4(1): pop %rbx
7ac5(1): pop %rbp
7ac6(2): pop %r12
7ac8(2): pop %r13
7aca(2): pop %r14
7acc(2): pop %r15
7ace(1): ret near (%rsp)
7acf(1): nop 
7ad0(5): cmp $0x0,0x30(%r15)
7ad5(6): jz 0xfffffcc3(%rip)
7adb(3): cmp %r12,%r11
7ade(2): jnbe 0x17(%rip)
7ae0(2): jmp 0x21(%rip)
7ae2(6): nop 0x0(%rax,%rax,1)
7ae8(4): add $0x1,%r12
7aec(3): cmp %r12,%r11
7aef(6): jz 0x741(%rip)
7af5(5): movzx (%r12),%eax
7afa(5): cmp $0x0,0x0(%r14,%rax,1)
7aff(2): jnz 0xffffffe9(%rip)
7b01(3): cmp %rbx,%rbp
7b04(6): jbe 0xfffffc94(%rip)
7b0a(6): nop 0x0(%rax,%rax,1)
7b10(3): movzx (%rbx),%eax
7b13(5): cmp $0x0,0x0(%r14,%rax,1)
7b18(6): jz 0xfffffc80(%rip)
7b1e(4): add $0x1,%rbx
7b22(3): cmp %rbx,%rbp
7b25(2): jnz 0xffffffeb(%rip)
7b27(3): mov %rbp,%rbx
7b2a(5): jmp 0xfffffc6e(%rip)
7b2f(1): nop 
7b30(5): mov 0x8(%rsp),%rax
7b35(5): lea 0xffffffff(%r12,%r13,1),%r11
7b3a(5): lea 0xffffffff(%rbx,%rax,1),%rbp
7b3f(5): jmp 0xfffffdc6(%rip)
7b44(4): nop 0x0(%rax)
7b48(8): lea 0xc0(%rsp),%rsi
7b50(3): mov %r12,%rdi
7b53(5): mov %r9,0x20(%rsp)
7b58(5): call 0xffffb478(%rip)
7b5d(4): fstp %st0,0x10(%rsp)
7b61(8): lea 0xc8(%rsp),%rsi
7b69(3): mov %rbx,%rdi
7b6c(5): call 0xffffb464(%rip)
7b71(8): cmp 0xc0(%rsp),%r12
7b79(5): mov 0x20(%rsp),%r9
7b7e(4): fld 0x10(%rsp),%st0
7b82(6): jz 0x68e(%rip)
7b88(8): cmp 0xc8(%rsp),%rbx
7b90(6): mov $0x1,%r8d
7b96(6): jz 0xfffffcda(%rip)
7b9c(2): fxch %st1,%st0
7b9e(2): fucomi %st1,%st0
7ba0(2): jnbe 0x2c(%rip)
7ba2(2): fxch %st1,%st0
7ba4(2): fucomi %st1,%st0
7ba6(6): jnbe 0xfffffcda(%rip)
7bac(2): jp 0xc(%rip)
7bae(6): jz 0x7e2(%rip)
7bb4(2): fxch %st1,%st0
7bb6(2): jmp 0xa(%rip)
7bb8(2): fxch %st1,%st0
7bba(6): nop 0x0(%rax,%rax,1)
7bc0(2): fucomip %st0,%st0
7bc2(6): jp 0x939(%rip)
7bc8(2): fstp %st0,%st0
7bca(2): jmp 0x6(%rip)
7bcc(2): fstp %st0,%st0
7bce(2): fstp %st0,%st0
7bd0(6): mov $0xffffffff,%r8d
7bd6(5): jmp 0xfffffcb2(%rip)
7bdb(5): nop 0x0(%rax,%rax,1)
7be0(5): movzx (%r12),%eax
7be5(3): mov %r12,%r13
7be8(5): cmp $0x0,0x0(%r14,%rax,1)
7bed(2): jz 0x13(%rip)
7bef(1): nop 
7bf0(4): add $0x1,%r13
7bf4(5): movzx 0x0(%r13),%eax
7bf9(5): cmp $0x0,0x0(%r14,%rax,1)
7bfe(2): jnz 0xfffffff2(%rip)
7c00(3): movzx (%rbx),%eax
7c03(3): mov %rbx,%rsi
7c06(5): cmp $0x0,0x0(%r14,%rax,1)
7c0b(2): jz 0x13(%rip)
7c0d(3): nop (%rax)
7c10(4): add $0x1,%rsi
7c14(3): movzx (%rsi),%eax
7c17(5): cmp $0x0,0x0(%r14,%rax,1)
7c1c(2): jnz 0xfffffff4(%rip)
7c1e(3): mov %r13,%rdi
7c21(5): mov %r9,0x48(%rsp)
7c26(5): mov %rsi,0x20(%rsp)
7c2b(5): call 0xffffe315(%rip)
7c30(5): mov 0x20(%rsp),%rsi
7c35(4): mov %eax,0x10(%rsp)
7c39(3): mov %rsi,%rdi
7c3c(5): call 0xffffe304(%rip)
7c41(5): mov 0x10(%rsp),%r8d
7c46(5): mov 0x20(%rsp),%rsi
7c4b(5): mov 0x48(%rsp),%r9
7c50(3): sub %eax,%r8d
7c53(6): jnz 0xfffffc35(%rip)
7c59(6): mov 0x212c25(%rip),%ecx
7c5f(6): mov 0x212c23(%rip),%edx
7c65(3): mov %r13,%rdi
7c68(5): mov %r9,0x10(%rsp)
7c6d(5): call 0x9593(%rip)
7c72(5): mov 0x10(%rsp),%r9
7c77(3): mov %eax,%r8d
7c7a(5): jmp 0xfffffc0e(%rip)
7c7f(1): nop 
7c80(5): cmp $0x0,0x38(%r15)
7c85(6): jnz 0xfffffb58(%rip)
7c8b(3): test %r13,%r13
7c8e(6): jz 0x8e2(%rip)
7c94(3): test %rdx,%rdx
7c97(3): mov %r12,%rdi
7c9a(6): jz 0xa1(%rip)
7ca0(3): cmp %rcx,%rdi
7ca3(2): jnb 0xd(%rip)
7ca5(3): movzx (%rdi),%esi
7ca8(6): cmp $0x0,0x0(%r13,%rsi,1)
7cae(2): jnz 0x58(%rip)
7cb0(3): cmp %rax,%rbx
7cb3(2): jb 0x1a(%rip)
7cb5(5): jmp 0x11e(%rip)
7cba(6): nop 0x0(%rax,%rax,1)
7cc0(4): add $0x1,%rbx
7cc4(3): cmp %rbx,%rax
7cc7(6): jz 0x109(%rip)
7ccd(3): movzx (%rbx),%esi
7cd0(6): cmp $0x0,0x0(%r13,%rsi,1)
7cd6(2): jnz 0xffffffea(%rip)
7cd8(3): cmp %rdi,%rcx
7cdb(6): jbe 0xf8(%rip)
7ce1(3): cmp %rbx,%rax
7ce4(6): jbe 0xef(%rip)
7cea(3): movzx (%rdi),%esi
7ced(5): movzx 0x0(%rdx,%rsi,1),%r8d
7cf2(3): movzx (%rbx),%esi
7cf5(4): movzx 0x0(%rdx,%rsi,1),%esi
7cf9(3): sub %esi,%r8d
7cfc(6): jnz 0xfffffd9c(%rip)
7d02(4): add $0x1,%rbx
7d06(4): add $0x1,%rdi
7d0a(2): jmp 0xffffff96(%rip)
7d0c(4): nop 0x0(%rax)
7d10(3): cmp %r12,%rcx
7d13(6): jbe 0x530(%rip)
7d19(3): cmp %rbx,%rax
7d1c(6): jbe 0x527(%rip)
7d22(5): movzx (%r12),%r8d
7d27(3): movzx (%rbx),%edx
7d2a(3): sub %edx,%r8d
7d2d(6): jnz 0xfffffd6b(%rip)
7d33(4): add $0x1,%rbx
7d37(4): add $0x1,%r12
7d3b(3): cmp %rcx,%r12
7d3e(2): jnb 0xf(%rip)
7d40(5): movzx (%r12),%edx
7d45(6): cmp $0x0,0x0(%r13,%rdx,1)
7d4b(2): jnz 0xffffffec(%rip)
7d4d(3): cmp %rax,%rbx
7d50(2): jb 0x1d(%rip)
7d52(5): jmp 0x4f1(%rip)
7d57(9): nop 0x0(%rax,%rax,1)
7d60(4): add $0x1,%rbx
7d64(3): cmp %rbx,%rax
7d67(6): jz 0x4d9(%rip)
7d6d(3): movzx (%rbx),%edx
7d70(6): cmp $0x0,0x0(%r13,%rdx,1)
7d76(2): jnz 0xffffffea(%rip)
7d78(2): jmp 0xffffff98(%rip)
7d7a(6): nop 0x0(%rax,%rax,1)
7d80(5): mov %rdx,0x20(%rsp)
7d85(5): mov %r9,0x10(%rsp)
7d8a(5): call 0xa056(%rip)
7d8f(3): test %rbp,%rbp
7d92(3): mov %rax,%rsi
7d95(5): mov %rax,0x58(%rsp)
7d9a(5): mov 0x10(%rsp),%r9
7d9f(5): mov 0x20(%rsp),%rdx
7da4(5): lea 0x1(%rsi,%rbp,1),%rdi
7da9(6): jnz 0xfffffbc8(%rip)
7daf(3): mov %rsi,%rax
7db2(3): test %r9,%r9
7db5(3): mov $0x0,(%rax)
7db8(6): jnz 0xfffffc06(%rip)
7dbe(2): nop 
7dc0(3): mov %rdi,%rax
7dc3(5): jmp 0xfffffc36(%rip)
7dc8(8): nop 0x0(%rax,%rax,1)
7dd0(3): mov %rax,%rbx
7dd3(3): cmp %rcx,%rdi
7dd6(4): setb %bpl
7dda(3): cmp %rbx,%rax
7ddd(3): setnbe %al
7de0(4): movzx %bpl,%ebp
7de4(3): movzx %al,%eax
7de7(3): mov %ebp,%r8d
7dea(3): sub %eax,%r8d
7ded(5): jmp 0xfffffab8(%rip)
7df2(6): nop 0x0(%rax,%rax,1)
7df8(2): xor %esi,%esi
7dfa(3): mov %r12,%rdi
7dfd(5): mov %r9,0x10(%rsp)
7e02(5): call 0xffffe1ae(%rip)
7e07(2): xor %esi,%esi
7e09(3): mov %eax,%r13d
7e0c(3): mov %rbx,%rdi
7e0f(5): call 0xffffe1a1(%rip)
7e14(3): mov %r13d,%r8d
7e17(5): mov 0x10(%rsp),%r9
7e1c(3): sub %eax,%r8d
7e1f(5): jmp 0xfffffa69(%rip)
7e24(4): nop 0x0(%rax)
7e28(3): test %rbp,%rbp
7e2b(6): jnz 0x425(%rip)
7e31(2): xor %eax,%eax
7e33(3): test %r9,%r9
7e36(3): setnz %al
7e39(2): neg %eax
7e3b(3): mov %eax,%r8d
7e3e(5): jmp 0xfffffa4a(%rip)
7e43(5): nop 0x0(%rax,%rax,1)
7e48(7): mov 0x212521(%rip),%rdx
7e4f(6): mov 0x212523(%rip),%eax
7e55(9): movdqa 0x212482(%rip),%xmm0
7e5e(8): movdqa 0x21248a(%rip),%xmm7
7e66(8): mov %rdx,0x23c(%rsp)
7e6e(7): mov %eax,0x244(%rsp)
7e75(8): movdqa 0x212483(%rip),%xmm6
7e7d(8): mov %rdx,0x1a0(%rsp)
7e85(8): movdqa 0x212483(%rip),%xmm5
7e8d(8): movdqa 0x21248b(%rip),%xmm4
7e95(8): movdqa 0x212493(%rip),%xmm3
7e9d(8): movdqa 0x21249b(%rip),%xmm2
7ea5(8): movdqa 0x2124a3(%rip),%xmm1
7ead(8): movdqa 0x2124ab(%rip),%xmm0
7eb5(9): movups %xmm0,0x1ac(%rsp)
7ebe(8): movups %xmm7,0x1bc(%rsp)
7ec6(8): movups %xmm6,0x1cc(%rsp)
7ece(8): movups %xmm5,0x1dc(%rsp)
7ed6(8): movups %xmm4,0x1ec(%rsp)
7ede(8): movups %xmm3,0x1fc(%rsp)
7ee6(8): movups %xmm2,0x20c(%rsp)
7eee(8): movups %xmm1,0x21c(%rsp)
7ef6(8): movups %xmm0,0x22c(%rsp)
7efe(9): movaps %xmm0,0x110(%rsp)
7f07(8): movaps %xmm7,0x120(%rsp)
7f0f(8): movaps %xmm6,0x130(%rsp)
7f17(8): movaps %xmm5,0x140(%rsp)
7f1f(8): movaps %xmm4,0x150(%rsp)
7f27(8): movaps %xmm3,0x160(%rsp)
7f2f(8): movaps %xmm2,0x170(%rsp)
7f37(8): movaps %xmm1,0x180(%rsp)
7f3f(8): movaps %xmm0,0x190(%rsp)
7f47(7): mov %eax,0x1a8(%rsp)
7f4e(7): cmp $0x0,0x21292c(%rip)
7f55(6): jz 0x333(%rip)
7f5b(4): lea 0x0(%r12,%rbp,1),%rax
7f5f(3): xor %r8d,%r8d
7f62(8): mov %r15,0x90(%rsp)
7f6a(5): mov %rbx,0x20(%rsp)
7f6f(9): mov $0x0,0x68(%rsp)
7f78(3): mov %r8d,%r15d
7f7b(5): mov %rax,0x50(%rsp)
7f80(4): lea 0x0(%rbx,%r9,1),%rax
7f84(9): mov $0xfa0,0x48(%rsp)
7f8d(8): mov %r12,0x98(%rsp)
7f95(8): mov %rbx,0xa0(%rsp)
7f9d(5): mov %rax,0x60(%rsp)
7fa2(5): lea 0x0(%rbp,%r9,1),%rax
7fa7(8): mov %rbp,0xa8(%rsp)
7faf(8): mov %r9,0xb0(%rsp)
7fb7(5): lea 0x2(%rax,%rax,2),%rax
7fbc(8): mov %rax,0x88(%rsp)
7fc4(8): lea 0x11f0(%rsp),%rax
7fcc(8): mov %rax,0xb8(%rsp)
7fd4(5): mov %rax,0x10(%rsp)
7fd9(7): nop 0x0(%rax)
7fe0(5): mov 0x48(%rsp),%rcx
7fe5(8): cmp %rcx,0x88(%rsp)
7fed(6): jnbe 0xfe(%rip)
7ff3(5): cmp %r12,0x50(%rsp)
7ff8(6): jnbe 0x141(%rip)
7ffe(5): mov 0x20(%rsp),%rdx
8003(5): cmp %rdx,0x60(%rsp)
8008(6): jnbe 0x490(%rip)
800e(2): xor %ebx,%ebx
8010(3): xor %r13d,%r13d
8013(5): mov 0x10(%rsp),%rax
8018(3): add %r13,%rax
801b(5): cmp %r12,0x50(%rsp)
8020(5): mov %rax,0x70(%rsp)
8025(6): jnbe 0x4eb(%rip)
802b(5): mov 0x20(%rsp),%rcx
8030(5): cmp %rcx,0x60(%rsp)
8035(5): mov 0x48(%rsp),%rbp
803a(6): jbe 0x380(%rip)
8040(5): mov 0x20(%rsp),%rdi
8045(5): call 0xffffac4b(%rip)
804a(5): mov 0x20(%rsp),%rcx
804f(5): mov %rbp,0x48(%rsp)
8054(5): lea 0x1(%rcx,%rax,1),%rax
8059(5): mov %rax,0x20(%rsp)
805e(5): cmp %r12,0x50(%rsp)
8063(2): jnbe 0x12(%rip)
8065(5): mov 0x20(%rsp),%rcx
806a(5): cmp %rcx,0x60(%rsp)
806f(6): jbe 0x34b(%rip)
8075(5): mov 0x78(%rsp),%rdx
807a(5): mov 0x10(%rsp),%rdi
807f(3): mov %r13,%rsi
8082(5): call 0x3b6e(%rip)
8087(5): mov 0x70(%rsp),%rbp
808c(8): mov 0x80(%rsp),%rdx
8094(3): mov %rbx,%rsi
8097(3): mov %rbp,%rdi
809a(5): call 0x3b56(%rip)
809f(3): test %r15d,%r15d
80a2(6): jnz 0xffffff3e(%rip)
80a8(5): mov 0x10(%rsp),%rdi
80ad(3): cmp %rbx,%r13
80b0(3): mov %rbx,%rdx
80b3(4): cmovbe %r13,%rdx
80b7(3): mov %rbp,%rsi
80ba(5): call 0xffffad36(%rip)
80bf(2): test %eax,%eax
80c1(3): mov %eax,%r15d
80c4(6): jnz 0xffffff1c(%rip)
80ca(3): xor %r15d,%r15d
80cd(3): cmp %rbx,%r13
80d0(5): mov 0x48(%rsp),%rcx
80d5(4): setnbe %r15b
80d9(4): sbb $0x0,%r15d
80dd(8): cmp %rcx,0x88(%rsp)
80e5(6): jbe 0xffffff0e(%rip)
80eb(8): mov 0x88(%rsp),%rdx
80f3(4): lea 0x0(%rcx,%rcx,2),%rax
80f7(5): mov 0x68(%rsp),%rdi
80fc(3): shr $0x1,%rax
80ff(3): cmp %rax,%rdx
8102(4): cmovnb %rdx,%rax
8106(3): mov %rax,%rbx
8109(5): mov %rax,0x48(%rsp)
810e(5): call 0xffffb0b2(%rip)
8113(3): mov %rbx,%rdi
8116(5): call 0xffffb0b2(%rip)
811b(3): test %rax,%rax
811e(5): mov %rax,0x68(%rsp)
8123(6): jz 0x41d(%rip)
8129(5): cmp %r12,0x50(%rsp)
812e(5): mov %rax,0x10(%rsp)
8133(6): jbe 0xfffffecb(%rip)
8139(5): mov 0x48(%rsp),%rbp
813e(5): mov 0x10(%rsp),%rdi
8143(3): mov %r12,%rsi
8146(2): xor %ebx,%ebx
8148(3): mov %rbp,%rdx
814b(5): call 0xffffe415(%rip)
8150(5): mov 0x20(%rsp),%rdx
8155(5): cmp %rdx,0x60(%rsp)
815a(4): lea 0x1(%rax),%r13
815e(2): jbe 0x1d(%rip)
8160(3): cmp %r13,%rbp
8163(6): jnb 0x560(%rip)
8169(2): xor %edx,%edx
816b(2): xor %edi,%edi
816d(5): mov 0x20(%rsp),%rsi
8172(5): call 0xffffe3ee(%rip)
8177(4): lea 0x1(%rax),%rbx
817b(5): cmp %r13,0x48(%rsp)
8180(4): lea 0x0(%rbx,%r13,1),%rbp
8184(6): jnb 0x443(%rip)
818a(a): mov $0x6148914691236517204,%rax
8194(3): cmp %rax,%rbp
8197(2): jnbe 0xa(%rip)
8199(5): lea 0x0(%rbp,%rbp,2),%rbp
819e(3): shr $0x1,%rbp
81a1(5): mov 0x68(%rsp),%rdi
81a6(5): call 0xffffb01a(%rip)
81ab(3): mov %rbp,%rdi
81ae(5): call 0x9c32(%rip)
81b3(5): cmp %r12,0x50(%rsp)
81b8(5): mov %rax,0x10(%rsp)
81bd(6): jnbe 0x32b(%rip)
81c3(5): mov 0x10(%rsp),%rax
81c8(5): mov 0x20(%rsp),%rcx
81cd(3): add %r13,%rax
81d0(5): cmp %rcx,0x60(%rsp)
81d5(5): mov %rax,0x70(%rsp)
81da(6): jnbe 0x2d6(%rip)
81e0(5): cmp %r12,0x50(%rsp)
81e5(6): jbe 0x1bb(%rip)
81eb(3): mov %r12,%rdi
81ee(5): call 0xffffaaa2(%rip)
81f3(5): lea 0x1(%r12,%rax,1),%r12
81f8(5): mov 0x10(%rsp),%rax
81fd(5): mov %rbp,0x48(%rsp)
8202(5): mov %rax,0x68(%rsp)
8207(5): jmp 0xfffffe57(%rip)
820c(4): nop 0x0(%rax)
8210(2): fstp %st0,%st0
8212(2): fstp %st0,%st0
8214(2): xor %eax,%eax
8216(8): cmp %rbx,0xc8(%rsp)
821e(3): setnz %al
8221(2): neg %eax
8223(3): mov %eax,%r8d
8226(5): jmp 0xfffff662(%rip)
822b(5): nop 0x0(%rax,%rax,1)
8230(3): mov %r11,%r12
8233(5): jmp 0xfffff8ce(%rip)
8238(8): nop 0x0(%rax,%rax,1)
8240(3): mov %rax,%rbx
8243(3): cmp %rcx,%r12
8246(5): jmp 0xfffffb90(%rip)
824b(5): nop 0x0(%rax,%rax,1)
8250(3): test %r9,%r9
8253(6): mov $0x1,%r8d
8259(6): jz 0xfffff62f(%rip)
825f(4): lea 0x1(%r9),%rcx
8263(4): lea 0x1(%rbp),%rsi
8267(3): mov %rbx,%rdx
826a(3): mov %r12,%rdi
826d(5): mov %r9,0x10(%rsp)
8272(5): call 0x9f0e(%rip)
8277(5): mov 0x10(%rsp),%r9
827c(3): mov %eax,%r8d
827f(5): jmp 0xfffff609(%rip)
8284(4): nop 0x0(%rax)
8288(5): mov 0x78(%rsp),%rdx
828d(3): mov %rbp,%rsi
8290(3): mov %r12,%rdi
8293(5): mov %r9,0x10(%rsp)
8298(8): lea 0xf0(%rsp),%r13
82a0(5): call 0x3950(%rip)
82a5(5): mov 0x78(%rsp),%rdi
82aa(3): mov %r13,%rsi
82ad(5): call 0x3823(%rip)
82b2(5): mov 0x10(%rsp),%r9
82b7(8): mov 0x80(%rsp),%rdx
82bf(3): mov %rbx,%rdi
82c2(3): mov %r9,%rsi
82c5(5): mov %r9,0x20(%rsp)
82ca(5): call 0x3926(%rip)
82cf(4): lea 0x10(%r13),%rcx
82d3(8): mov 0x80(%rsp),%rdi
82db(3): mov %rcx,%rsi
82de(5): mov %rcx,0x10(%rsp)
82e3(5): call 0x37ed(%rip)
82e8(5): mov 0x10(%rsp),%rcx
82ed(5): mov $0x10,%edx
82f2(3): mov %r13,%rdi
82f5(3): mov %rcx,%rsi
82f8(5): call 0xffffaaf8(%rip)
82fd(2): test %eax,%eax
82ff(3): mov %eax,%r8d
8302(5): mov 0x20(%rsp),%r9
8307(6): jnz 0x2d0(%rip)
830d(5): mov %r9,0x20(%rsp)
8312(5): mov %rbx,0x70(%rsp)
8317(3): mov %rbp,%r13
831a(5): mov %r12,0x10(%rsp)
831f(9): mov $0x0,0x68(%rsp)
8328(5): mov 0x20(%rsp),%rcx
832d(5): mov 0x70(%rsp),%rsi
8332(5): mov 0x10(%rsp),%rdi
8337(5): mov %r9,0x48(%rsp)
833c(3): cmp %rcx,%r13
833f(3): mov %rcx,%rdx
8342(4): cmovbe %r13,%rdx
8346(5): call 0xffffaaaa(%rip)
834b(2): test %eax,%eax
834d(3): mov %eax,%r8d
8350(5): mov 0x48(%rsp),%r9
8355(2): jnz 0x15(%rip)
8357(5): mov 0x20(%rsp),%rcx
835c(2): xor %eax,%eax
835e(3): cmp %rcx,%r13
8361(3): setnbe %al
8364(3): sbb $0x0,%eax
8367(3): mov %eax,%r8d
836a(5): mov 0x68(%rsp),%rdi
836f(5): mov %r8d,0x20(%rsp)
8374(5): mov %r9,0x10(%rsp)
8379(5): call 0xffffae47(%rip)
837e(5): mov 0x10(%rsp),%r9
8383(5): mov 0x20(%rsp),%r8d
8388(5): jmp 0xfffff500(%rip)
838d(3): nop (%rax)
8390(2): fstp %st0,%st0
8392(2): fstp %st0,%st0
8394(3): xor %r8d,%r8d
8397(5): jmp 0xfffff4f1(%rip)
839c(4): nop 0x0(%rax)
83a0(5): mov 0x20(%rsp),%rcx
83a5(5): cmp %rcx,0x60(%rsp)
83aa(5): mov 0x10(%rsp),%rax
83af(5): mov %rax,0x68(%rsp)
83b4(6): jnbe 0xfffffc8c(%rip)
83ba(8): mov 0xb0(%rsp),%r9
83c2(5): mov 0x78(%rsp),%rdx
83c7(3): mov %r15d,%r8d
83ca(5): mov 0x10(%rsp),%rdi
83cf(3): mov %r13,%rsi
83d2(8): mov %r8d,0x88(%rsp)
83da(5): mov %rbx,0x20(%rsp)
83df(8): mov 0x98(%rsp),%r12
83e7(5): mov %r9,0x60(%rsp)
83ec(8): mov 0xa8(%rsp),%rbp
83f4(8): mov 0xa0(%rsp),%rbx
83fc(8): mov 0x90(%rsp),%r15
8404(5): call 0x37ec(%rip)
8409(8): lea 0xf0(%rsp),%rax
8411(5): mov 0x78(%rsp),%rdi
8416(3): mov %rax,%rsi
8419(5): mov %rax,0x48(%rsp)
841e(5): call 0x36b2(%rip)
8423(8): mov 0x80(%rsp),%rdx
842b(5): mov 0x20(%rsp),%rsi
8430(5): mov 0x70(%rsp),%rdi
8435(5): call 0x37bb(%rip)
843a(5): mov 0x48(%rsp),%rax
843f(8): mov 0x80(%rsp),%rdi
8447(4): lea 0x10(%rax),%rcx
844b(3): mov %rcx,%rsi
844e(5): mov %rcx,0x50(%rsp)
8453(5): call 0x367d(%rip)
8458(5): mov 0x50(%rsp),%rcx
845d(5): mov 0x48(%rsp),%rdi
8462(5): mov $0x10,%edx
8467(3): mov %rcx,%rsi
846a(5): call 0xffffa986(%rip)
846f(2): test %eax,%eax
8471(5): mov 0x60(%rsp),%r9
8476(8): mov 0x88(%rsp),%r8d
847e(6): jnz 0xfffffee9(%rip)
8484(3): test %r8d,%r8d
8487(6): jnz 0xfffffee3(%rip)
848d(5): jmp 0xfffffe9b(%rip)
8492(6): nop 0x0(%rax,%rax,1)
8498(5): mov 0x10(%rsp),%rdi
849d(5): mov 0x48(%rsp),%rdx
84a2(3): xor %r13d,%r13d
84a5(5): jmp 0xfffffcc8(%rip)
84aa(6): nop 0x0(%rax,%rax,1)
84b0(3): mov %rbx,%rdx
84b3(3): mov %rcx,%rsi
84b6(3): mov %rax,%rdi
84b9(5): call 0xffffa977(%rip)
84be(5): cmp %r12,0x50(%rsp)
84c3(6): jbe 0xfffffedd(%rip)
84c9(3): mov %r12,%rdi
84cc(5): call 0xffffa7c4(%rip)
84d1(5): lea 0x1(%r12,%rax,1),%r12
84d6(5): mov 0x10(%rsp),%rax
84db(5): mov %rax,0x68(%rsp)
84e0(5): jmp 0xfffffb60(%rip)
84e5(3): nop (%rax)
84e8(3): mov %r13,%rdx
84eb(3): mov %r12,%rsi
84ee(3): mov %rax,%rdi
84f1(5): call 0xffffa93f(%rip)
84f6(5): jmp 0xfffffccd(%rip)
84fb(2): fucomip %st0,%st0
84fd(6): jp 0xfc(%rip)
8503(6): mov $0x1,%r8d
8509(5): jmp 0xfffff37f(%rip)
850e(2): nop 
8510(3): mov %r12,%rdi
8513(5): call 0xffffa77d(%rip)
8518(5): mov 0x20(%rsp),%rcx
851d(5): cmp %rcx,0x60(%rsp)
8522(5): lea 0x1(%r12,%rax,1),%r12
8527(6): jbe 0xfffffb37(%rip)
852d(5): mov 0x48(%rsp),%rbp
8532(5): jmp 0xfffffb0e(%rip)
8537(9): nop 0x0(%rax,%rax,1)
8540(9): mov $0xfa0,0x48(%rsp)
8549(8): mov 0xb8(%rsp),%rax
8551(5): jmp 0xfffffbd8(%rip)
8556(a): nop 0x0(%rax,%rax,1)
8560(3): mov %r8d,%ebp
8563(5): jmp 0xfffff541(%rip)
8568(8): nop 0x0(%rax,%rax,1)
8570(3): test %rbp,%rbp
8573(2): jz 0x72(%rip)
8575(3): test %r9,%r9
8578(6): jz 0x141(%rip)
857e(3): test %rdx,%rdx
8581(6): jz 0xf2(%rip)
8587(9): nop 0x0(%rax,%rax,1)
8590(3): cmp %rcx,%r12
8593(6): jnb 0x10a(%rip)
8599(3): cmp %rax,%rbx
859c(6): jnb 0x101(%rip)
85a2(4): add $0x1,%r12
85a6(6): movzx 0xffffffff(%r12),%esi
85ac(4): add $0x1,%rbx
85b0(5): movzx 0x0(%rdx,%rsi,1),%r8d
85b5(4): movzx 0xffffffff(%rbx),%esi
85b9(4): movzx 0x0(%rdx,%rsi,1),%esi
85bd(3): sub %esi,%r8d
85c0(2): jz 0xffffffd0(%rip)
85c2(5): jmp 0xfffff4d6(%rip)
85c7(5): cmp %rbp,0x48(%rsp)
85cc(6): jb 0xfffffbbe(%rip)
85d2(5): jmp 0xfffffa41(%rip)
85d7(9): mov $0x0,0x68(%rsp)
85e0(5): jmp 0xfffffd8a(%rip)
85e5(2): xor %ebp,%ebp
85e7(3): test %r9,%r9
85ea(4): setnz %bpl
85ee(3): mov %ebp,%r8d
85f1(3): neg %r8d
85f4(5): jmp 0xfffff2b1(%rip)
85f9(4): pxor %xmm0,%xmm0
85fd(2): xor %esi,%esi
85ff(3): mov %r12,%rdi
8602(5): mov %r9,0x48(%rsp)
8607(8): lea 0xd0(%rsp),%r13
860f(8): movaps %xmm0,0xd0(%rsp)
8617(5): movaps %xmm0,0x20(%rsp)
861c(5): call 0xffffa9b4(%rip)
8621(7): fstp %st0,0xd0(%rsp)
8628(8): lea 0xe0(%rsp),%rax
8630(2): xor %esi,%esi
8632(3): mov %rbx,%rdi
8635(5): mov %rax,0x10(%rsp)
863a(6): movdqa 0x20(%rsp),%xmm0
8640(8): movaps %xmm0,0xe0(%rsp)
8648(5): call 0xffffa988(%rip)
864d(5): mov $0x10,%edx
8652(3): mov %r13,%rdi
8655(7): fstp %st0,0xe0(%rsp)
865c(5): mov 0x10(%rsp),%rsi
8661(5): call 0xffffa78f(%rip)
8666(5): mov 0x48(%rsp),%r9
866b(3): mov %eax,%r8d
866e(5): jmp 0xfffff21a(%rip)
8673(3): cmp %r9,%rbp
8676(3): mov %r9,%rdx
8679(3): mov %rbx,%rsi
867c(4): cmovbe %rbp,%rdx
8680(3): mov %r12,%rdi
8683(5): mov %r9,0x8(%rsp)
8688(5): call 0xffffa768(%rip)
868d(2): test %eax,%eax
868f(3): mov %eax,%r8d
8692(6): jnz 0xfffff406(%rip)
8698(5): mov 0x8(%rsp),%r9
869d(3): cmp %r9,%rbp
86a0(2): jb 0xf(%rip)
86a2(4): setnz %r8b
86a6(4): movzx %r8b,%r8d
86aa(5): jmp 0xfffff1fb(%rip)
86af(5): mov $0xffffffff,%ebp
86b4(5): jmp 0xfffff3e7(%rip)
86b9(5): mov $0x1,%ebp
86be(5): jmp 0xfffff3dd(%rip)
86c3(5): mov 0x48(%rsp),%rdx
86c8(5): mov 0x10(%rsp),%rax
86cd(3): sub %r13,%rdx
86d0(4): lea 0x0(%rax,%r13,1),%rdi
86d4(5): jmp 0xfffffa99(%rip)
86d9(5): call 0xffffa5c7(%rip)

"compare" :
86e0(2): push %r13
86e2(2): push %r12
86e4(1): push %rbp
86e5(1): push %rbx
86e6(3): mov %rsi,%rbp
86e9(3): mov %rdi,%rbx
86ec(4): sub $0x8,%rsp
86f0(8): cmp $0x0,0x211d38(%rip)
86f8(2): jz 0x20(%rip)
86fa(5): call 0xfffff026(%rip)
86ff(2): test %eax,%eax
8701(2): jnz 0x41(%rip)
8703(7): cmp $0x0,0x211d2f(%rip)
870a(2): jnz 0x38(%rip)
870c(7): cmp $0x0,0x211d27(%rip)
8713(2): jnz 0x2f(%rip)
8715(3): nop (%rax)
8718(4): mov 0x8(%rbx),%r8
871c(4): mov 0x8(%rbp),%rcx
8720(3): mov %r8,%r13
8723(4): lea 0xffffffff(%rcx),%r12
8727(4): sub $0x1,%r13
872b(2): jnz 0x25(%rip)
872d(2): xor %eax,%eax
872f(3): test %r12,%r12
8732(3): setnz %al
8735(2): neg %eax
8737(7): cmp $0x0,0x211cfd(%rip)
873e(2): jz 0x4(%rip)
8740(2): neg %eax
8742(4): add $0x8,%rsp
8746(1): pop %rbx
8747(1): pop %rbp
8748(2): pop %r12
874a(2): pop %r13
874c(1): ret near (%rsp)
874d(3): nop (%rax)
8750(3): test %r12,%r12
8753(5): mov $0x1,%eax
8758(2): jz 0xffffffdf(%rip)
875a(7): cmp $0x0,0x212120(%rip)
8761(4): mov 0x0(%rbp),%rsi
8765(3): mov (%rbx),%rdi
8768(2): jnz 0x28(%rip)
876a(3): cmp %r12,%r13
876d(3): mov %r12,%rdx
8770(4): cmovbe %r13,%rdx
8774(5): call 0xffffa67c(%rip)
8779(2): test %eax,%eax
877b(2): jnz 0xffffffbc(%rip)
877d(2): xor %eax,%eax
877f(3): cmp %r12,%r13
8782(5): mov $0xffffffff,%edx
8787(3): setnz %al
878a(3): cmovnae %edx,%eax
878d(2): jmp 0xffffffaa(%rip)
878f(1): nop 
8790(3): mov %rsi,%rdx
8793(3): mov %r8,%rsi
8796(5): call 0x99ea(%rip)
879b(2): jmp 0xffffff9c(%rip)

"sequential_sort" :
87a0(2): push %r15
87a2(2): push %r14
87a4(2): push %r13
87a6(2): push %r12
87a8(3): mov %rdi,%r13
87ab(1): push %rbp
87ac(1): push %rbx
87ad(2): mov %ecx,%ebp
87af(3): mov %rdx,%rbx
87b2(4): sub $0x18,%rsp
87b6(4): cmp $0x2,%rsi
87ba(6): jz 0x14e(%rip)
87c0(3): mov %rsi,%r15
87c3(3): shr $0x1,%r15
87c6(3): mov %r15,%r14
87c9(3): sub %r15,%rsi
87cc(4): shl/sal $0x5,%r14
87d0(5): mov %rsi,0x8(%rsp)
87d5(3): neg %r14
87d8(2): test %cl,%cl
87da(4): lea 0x0(%rdi,%r14,1),%r12
87de(6): jnz 0xc2(%rip)
87e4(5): mov 0x8(%rsp),%rsi
87e9(2): xor %ecx,%ecx
87eb(3): mov %r12,%rdi
87ee(5): call 0xffffffb2(%rip)
87f3(4): cmp $0x1,%r15
87f7(6): jnbe 0x1c8(%rip)
87fd(6): movdqu 0xffffffe0(%r13),%xmm0
8803(3): mov %rbx,%rax
8806(3): mov %r12,%r14
8809(4): movups %xmm0,0xffffffe0(%rbx)
880d(6): movdqu 0xfffffff0(%r13),%xmm0
8813(4): movups %xmm0,0xfffffff0(%rbx)
8817(3): mov %r13,%rbx
881a(3): mov %rax,%r13
881d(4): lea 0xffffffe0(%r13),%rbp
8821(4): lea 0xffffffe0(%r14),%r12
8825(3): nop (%rax)
8828(3): mov %r12,%rsi
882b(3): mov %rbp,%rdi
882e(4): sub $0x20,%rbx
8832(5): call 0xfffffeae(%rip)
8837(2): test %eax,%eax
8839(6): jle 0xa7(%rip)
883f(6): movdqu 0xffffffe0(%r14),%xmm0
8845(6): sub $0x1,0x8(%rsp)
884b(3): movups %xmm0,(%rbx)
884e(6): movdqu 0xfffffff0(%r14),%xmm0
8854(4): movups %xmm0,0x10(%rbx)
8858(2): jz 0x14(%rip)
885a(3): mov %r12,%r14
885d(4): sub $0x20,%r12
8861(2): jmp 0xffffffc7(%rip)
8863(5): nop 0x0(%rax,%rax,1)
8868(4): sub $0x20,%rbp
886c(5): movdqu 0x0(%rbp),%xmm0
8871(4): sub $0x20,%rbx
8875(4): sub $0x1,%r15
8879(3): movups %xmm0,(%rbx)
887c(5): movdqu 0x10(%rbp),%xmm0
8881(4): movups %xmm0,0x10(%rbx)
8885(2): jnz 0xffffffe3(%rip)
8887(4): add $0x18,%rsp
888b(1): pop %rbx
888c(1): pop %rbp
888d(2): pop %r12
888f(2): pop %r13
8891(2): pop %r14
8893(2): pop %r15
8895(1): ret near (%rsp)
8896(a): nop 0x0(%rax,%rax,1)
88a0(5): mov 0x8(%rsp),%rsi
88a5(3): add %rdx,%r14
88a8(5): mov $0x1,%ecx
88ad(3): mov %r14,%rdx
88b0(3): mov %r12,%rdi
88b3(5): call 0xfffffeed(%rip)
88b8(4): cmp $0x1,%r15
88bc(6): jbe 0xffffff61(%rip)
88c2(2): xor %ecx,%ecx
88c4(3): mov %rbx,%rdx
88c7(3): mov %r15,%rsi
88ca(3): mov %r13,%rdi
88cd(5): call 0xfffffed3(%rip)
88d2(5): jmp 0xffffff4b(%rip)
88d7(9): nop 0x0(%rax,%rax,1)
88e0(6): movdqu 0xffffffe0(%r13),%xmm0
88e6(4): sub $0x1,%r15
88ea(3): movups %xmm0,(%rbx)
88ed(6): movdqu 0xfffffff0(%r13),%xmm0
88f3(4): movups %xmm0,0x10(%rbx)
88f7(2): jz 0xffffff90(%rip)
88f9(3): mov %rbp,%r13
88fc(4): sub $0x20,%rbp
8900(5): jmp 0xffffff28(%rip)
8905(3): nop (%rax)
8908(4): lea 0xffffffc0(%rdi),%rsi
890c(4): lea 0xffffffe0(%rdi),%rdi
8910(5): call 0xfffffdd0(%rip)
8915(3): test %bpl,%bpl
8918(2): jnz 0x50(%rip)
891a(2): test %eax,%eax
891c(6): jle 0xffffff6b(%rip)
8922(6): movdqu 0xffffffc0(%r13),%xmm2
8928(6): movdqu 0xffffffe0(%r13),%xmm1
892e(6): movdqu 0xfffffff0(%r13),%xmm0
8934(5): movups %xmm2,0xffffffe0(%r13)
8939(4): movups %xmm1,0xffffffe0(%rbx)
893d(4): movups %xmm0,0xfffffff0(%rbx)
8941(5): movups %xmm1,0xffffffc0(%r13)
8946(6): movdqu 0xffffffd0(%r13),%xmm2
894c(5): movups %xmm0,0xffffffd0(%r13)
8951(5): movups %xmm2,0xfffffff0(%r13)
8956(4): add $0x18,%rsp
895a(1): pop %rbx
895b(1): pop %rbp
895c(2): pop %r12
895e(2): pop %r13
8960(2): pop %r14
8962(2): pop %r15
8964(1): ret near (%rsp)
8965(3): nop (%rax)
8968(2): test %eax,%eax
896a(3): setnle %al
896d(3): movzx %al,%eax
8970(2): mov %eax,%edx
8972(3): sub $0x2,%eax
8975(2): not %edx
8977(2): cwde 
8979(3): movsxd %edx,%rdx
897c(4): shl/sal $0x5,%rax
8980(4): shl/sal $0x5,%rdx
8984(5): lea 0x0(%r13,%rax,1),%r8
8989(3): add %r13,%rdx
898c(4): movdqu (%rdx),%xmm0
8990(4): movups %xmm0,0xffffffe0(%rbx)
8994(5): movdqu 0x10(%rdx),%xmm0
8999(4): movups %xmm0,0xfffffff0(%rbx)
899d(5): movdqu (%r8),%xmm0
89a2(4): movups %xmm0,0xffffffc0(%rbx)
89a6(6): movdqu 0x10(%r8),%xmm0
89ac(4): movups %xmm0,0xffffffd0(%rbx)
89b0(4): add $0x18,%rsp
89b4(1): pop %rbx
89b5(1): pop %rbp
89b6(2): pop %r12
89b8(2): pop %r13
89ba(2): pop %r14
89bc(2): pop %r15
89be(1): ret near (%rsp)
89bf(3): mov %rbx,%rdx
89c2(3): mov %r13,%rdi
89c5(5): mov $0x1,%ecx
89ca(3): mov %r15,%rsi
89cd(3): mov %r12,%r14
89d0(5): call 0xfffffdd0(%rip)
89d5(3): mov %rbx,%rax
89d8(3): mov %r13,%rbx
89db(3): mov %rax,%r13
89de(5): jmp 0xfffffe3f(%rip)

"write_unique" :
89f0(1): push %rbp
89f1(1): push %rbx
89f2(3): mov %rsi,%rbp
89f5(3): mov %rdi,%rbx
89f8(4): sub $0x18,%rsp
89fc(7): cmp $0x0,0x211a36(%rip)
8a03(2): jz 0x3d(%rip)
8a05(8): cmp $0x0,0x211e53(%rip)
8a0d(2): jz 0x1c(%rip)
8a0f(7): lea 0x211e4a(%rip),%rsi
8a16(5): mov %rdx,0x8(%rsp)
8a1b(5): call 0xfffffcc5(%rip)
8a20(2): test %eax,%eax
8a22(5): mov 0x8(%rsp),%rdx
8a27(2): jz 0x31(%rip)
8a29(4): movdqu (%rbx),%xmm0
8a2d(7): movaps %xmm0,0x211e2c(%rip)
8a34(5): movdqu 0x10(%rbx),%xmm0
8a39(7): movaps %xmm0,0x211e30(%rip)
8a40(4): add $0x18,%rsp
8a44(3): mov %rbp,%rsi
8a47(3): mov %rbx,%rdi
8a4a(1): pop %rbx
8a4b(1): pop %rbp
8a4c(5): jmp 0xffffe834(%rip)
8a51(7): nop 0x0(%rax)
8a58(4): add $0x18,%rsp
8a5c(1): pop %rbx
8a5d(1): pop %rbp
8a5e(1): ret near (%rsp)

"move_fd.part.11" :
8a60(1): push %rbx
8a61(2): mov %edi,%ebx
8a63(5): call 0xffffa27d(%rip)
8a68(2): mov %ebx,%edi
8a6a(1): pop %rbx
8a6b(5): jmp 0xffffa345(%rip)

"open_input_files" :
8a70(2): push %r15
8a72(2): push %r14
8a74(2): push %r13
8a76(2): push %r12
8a78(3): mov %rsi,%r12
8a7b(1): push %rbp
8a7c(1): push %rbx
8a7d(3): mov %rdx,%rbx
8a80(5): mov $0x8,%edx
8a85(3): mov %rdi,%rbp
8a88(4): sub $0x28,%rsp
8a8c(9): mov $0x28,%rax
8a95(5): mov %rax,0x18(%rsp)
8a9a(2): xor %eax,%eax
8a9c(3): mov %rdx,%rax
8a9f(3): mul %rax,%rsi,%rdx
8aa2(6): jo 0x203(%rip)
8aa8(2): xor %ecx,%ecx
8aaa(3): test %rax,%rax
8aad(6): js 0x1f3(%rip)
8ab3(3): test %rcx,%rcx
8ab6(6): jnz 0x1ea(%rip)
8abc(8): lea 0x0(,%r12,8),%rdi
8ac4(5): call 0x931c(%rip)
8ac9(3): mov %rax,(%rbx)
8acc(2): xor %ebx,%ebx
8ace(3): test %r12,%r12
8ad1(3): mov %rax,%r13
8ad4(6): jz 0xf4(%rip)
8ada(5): lea 0x10(%rsp),%rax
8adf(5): mov %rax,0x8(%rsp)
8ae4(2): jmp 0x3b(%rip)
8ae6(a): nop 0x0(%rax,%rax,1)
8af0(4): mov 0x0(%rbp),%rdi
8af4(7): lea 0xcd98(%rip),%rsi
8afb(5): call 0xffffe5b5(%rip)
8b00(3): test %rax,%rax
8b03(5): mov %rax,0x0(%r13,%rbx,8)
8b08(6): jz 0xc0(%rip)
8b0e(4): add $0x1,%rbx
8b12(4): add $0x10,%rbp
8b16(3): cmp %rbx,%r12
8b19(6): jz 0xaf(%rip)
8b1f(4): mov 0x8(%rbp),%r15
8b23(3): test %r15,%r15
8b26(2): jz 0xffffffca(%rip)
8b28(5): movzx 0xc(%r15),%eax
8b2d(2): test %al,%al
8b2f(2): jz 0xffffffc1(%rip)
8b31(2): cmp $0x1,%al
8b33(6): jz 0xed(%rip)
8b39(4): lea 0xd(%r15),%rdi
8b3d(2): xor %esi,%esi
8b3f(2): xor %eax,%eax
8b41(5): call 0xffffa4cf(%rip)
8b46(2): test %eax,%eax
8b48(3): mov %eax,%r14d
8b4b(6): js 0xc5(%rip)
8b51(5): mov 0x8(%rsp),%rdi
8b56(5): mov $0x9,%esi
8b5b(5): call 0xffffe275(%rip)
8b60(3): cmp $0xff,%eax
8b63(6): jz 0x8d(%rip)
8b69(2): test %eax,%eax
8b6b(6): jz 0xe7(%rip)
8b71(4): mov %eax,0x8(%r15)
8b75(3): mov %r15,%rdi
8b78(5): call 0xffffdc28(%rip)
8b7d(3): mov %r14d,%edi
8b80(5): lea 0x0(%r13,%rbx,8),%r14
8b85(5): call 0xffffa22b(%rip)
8b8a(4): mov 0x14(%rsp),%edi
8b8e(5): call 0xffffa222(%rip)
8b93(4): mov 0x10(%rsp),%edi
8b97(7): lea 0xccf5(%rip),%rsi
8b9e(5): call 0xffffa3e2(%rip)
8ba3(3): test %rax,%rax
8ba6(6): jz 0x88(%rip)
8bac(5): mov %rax,0x0(%r13,%rbx,8)
8bb1(4): add $0x1,%rbx
8bb5(4): add $0x10,%rbp
8bb9(3): cmp %rbx,%r12
8bbc(6): jnz 0xffffff63(%rip)
8bc2(6): nop 0x0(%rax,%rax,1)
8bc8(5): mov 0x18(%rsp),%rcx
8bcd(9): xor $0x28,%rcx
8bd6(3): mov %rbx,%rax
8bd9(6): jnz 0xd6(%rip)
8bdf(4): add $0x28,%rsp
8be3(1): pop %rbx
8be4(1): pop %rbp
8be5(2): pop %r12
8be7(2): pop %r13
8be9(2): pop %r14
8beb(2): pop %r15
8bed(1): ret near (%rsp)
8bee(2): nop 
8bf0(5): call 0xffff9f20(%rip)
8bf5(3): cmp $0x18,(%rax)
8bf8(3): mov %rax,%rbp
8bfb(6): jnz 0xc5(%rip)
8c01(3): mov %r14d,%edi
8c04(5): call 0xffffa1ac(%rip)
8c09(7): mov $0x18,0x0(%rbp)
8c10(9): mov $0x0,0x0(%r13,%rbx,8)
8c19(2): jmp 0xffffffaf(%rip)
8c1b(5): nop 0x0(%rax,%rax,1)
8c20(4): mov 0x8(%r15),%edi
8c24(5): call 0xffffdb1c(%rip)
8c29(5): jmp 0xffffff10(%rip)
8c2e(5): call 0xffff9ee2(%rip)
8c33(4): mov 0x10(%rsp),%edi
8c37(3): mov (%rax),%r12d
8c3a(3): mov %rax,%rbp
8c3d(5): call 0xffffa173(%rip)
8c42(4): mov %r12d,0x0(%rbp)
8c46(7): mov $0x0,(%r14)
8c4d(5): jmp 0xffffff7b(%rip)
8c52(4): mov 0x10(%rsp),%edi
8c56(5): call 0xffffa15a(%rip)
8c5b(3): test %r14d,%r14d
8c5e(2): jnz 0x56(%rip)
8c60(4): mov 0x14(%rsp),%edi
8c64(3): cmp $0x1,%edi
8c67(2): jz 0xc(%rip)
8c69(5): mov $0x1,%esi
8c6e(5): call 0xfffffdf2(%rip)
8c73(7): mov 0x2117ae(%rip),%rdi
8c7a(7): lea 0xc866(%rip),%rdx
8c81(2): xor %ecx,%ecx
8c83(2): xor %eax,%eax
8c85(3): mov %rdi,%rsi
8c88(5): call 0xffffa4c8(%rip)
8c8d(5): call 0xffff9e83(%rip)
8c92(2): mov (%rax),%edi
8c94(7): lea 0xb36d(%rip),%rsi
8c9b(5): call 0xffffa592(%rip)
8ca0(5): call 0x9390(%rip)
8ca5(5): mov $0x1,%ecx
8caa(5): jmp 0xfffffe00(%rip)
8caf(5): call 0xffff9ff1(%rip)
8cb4(2): xor %esi,%esi
8cb6(3): mov %r14d,%edi
8cb9(5): call 0xfffffda7(%rip)
8cbe(2): jmp 0xffffffa2(%rip)
8cc0(7): mov 0x211761(%rip),%rsi
8cc7(5): mov $0x4,%edi
8ccc(5): call 0x73f4(%rip)
8cd1(7): lea 0xb308(%rip),%rsi
8cd8(5): mov $0x5,%edx
8cdd(2): xor %edi,%edi
8cdf(3): mov %rax,%rbx
8ce2(5): call 0xffff9f8e(%rip)
8ce7(3): mov 0x0(%rbp),%esi
8cea(3): mov %rax,%rdx
8ced(3): mov %rbx,%rcx
8cf0(5): mov $0x2,%edi
8cf5(2): xor %eax,%eax
8cf7(5): call 0xffffa2e9(%rip)
8cfc(4): nop 0x0(%rax)
8d00(2): push %r15
8d02(2): push %r14
8d04(2): push %r13
8d06(2): push %r12
8d08(1): push %rbp
8d09(1): push %rbx
8d0a(7): sub $0xa8,%rsp
8d11(7): mov 0x211510(%rip),%rdx
8d18(9): mov $0x28,%rax
8d21(8): mov %rax,0x98(%rsp)
8d29(2): xor %eax,%eax
8d2b(7): mov 0x21171e(%rip),%rax
8d32(4): mov %rdi,(%rsp)
8d36(4): mov %esi,0xc(%rsp)
8d3a(4): mov 0x0(%rax,%rdx,8),%r12
8d3e(3): mov %r12,%rdi
8d41(5): call 0xffff9f4f(%rip)
8d46(4): lea 0x20(%rax),%rdi
8d4a(3): mov %rax,%r15
8d4d(4): and $0xfffffff8,%rdi
8d51(5): call 0x908f(%rip)
8d56(4): lea 0xd(%rax),%rbp
8d5a(3): mov %r15,%rdx
8d5d(3): mov %r12,%rsi
8d60(3): mov %rax,%rbx
8d63(3): mov %rbp,%rdi
8d66(5): call 0xffffa11a(%rip)
8d6b(a): mov $0x6365935330447553327,%rax
8d75(5): mov %rax,0xd(%rbx,%r15,1)
8d7a(7): mov 0x2114a7(%rip),%rax
8d81(9): mov $0x585858,0x8(%rbp,%r15,1)
8d8a(7): mov $0x0,(%rbx)
8d91(4): add $0x1,%rax
8d95(7): cmp 0x2116ac(%rip),%rax
8d9c(7): mov %rax,0x211485(%rip)
8da3(2): jnz 0xd(%rip)
8da5(b): mov $0x0,0x211478(%rip)
8db0(5): lea 0x10(%rsp),%r13
8db5(7): lea 0x2115e4(%rip),%rsi
8dbc(2): xor %edi,%edi
8dbe(4): lea 0x8(%r13),%rdx
8dc2(5): call 0xffff9d2e(%rip)
8dc7(5): mov $0x80000,%esi
8dcc(2): test %eax,%eax
8dce(3): mov %rbp,%rdi
8dd1(5): setz 0x10(%rsp)
8dd6(5): call 0x840a(%rip)
8ddb(3): mov %eax,%r15d
8dde(5): call 0xffff9d32(%rip)
8de3(3): test %r15d,%r15d
8de6(3): mov %rax,%r14
8de9(6): js 0xc7(%rip)
8def(5): cmp $0x0,0x10(%rsp)
8df4(7): mov 0x211245(%rip),%rax
8dfb(7): mov %rbx,0x21123e(%rip)
8e02(3): mov %rbx,(%rax)
8e05(2): jz 0x10(%rip)
8e07(3): mov (%r14),%r12d
8e0a(3): mov %r13,%rdi
8e0d(5): call 0xffffdda3(%rip)
8e12(3): mov %r12d,(%r14)
8e15(8): cmp $0x0,0x21160b(%rip)
8e1d(4): mov $0x0,0xc(%rbx)
8e21(2): jz 0x1d(%rip)
8e23(5): mov $0x4,%esi
8e28(3): mov %r13,%rdi
8e2b(5): call 0xffffdfa5(%rip)
8e30(3): cmp $0x0,%eax
8e33(3): mov %eax,0x8(%rbx)
8e36(2): jnle 0x5a(%rip)
8e38(6): jz 0x9d(%rip)
8e3e(7): lea 0xc6a5(%rip),%rsi
8e45(3): mov %r15d,%edi
8e48(5): call 0xffffa138(%rip)
8e4d(4): mov (%rsp),%rcx
8e51(3): test %rax,%rax
8e54(3): mov %rax,(%rcx)
8e57(6): jz 0xc9(%rip)
8e5d(8): mov 0x98(%rsp),%rcx
8e65(9): xor $0x28,%rcx
8e6e(3): mov %rbx,%rax
8e71(6): jnz 0xaa(%rip)
8e77(7): add $0xa8,%rsp
8e7e(1): pop %rbx
8e7f(1): pop %rbp
8e80(2): pop %r12
8e82(2): pop %r13
8e84(2): pop %r14
8e86(2): pop %r15
8e88(1): ret near (%rsp)
8e89(7): nop 0x0(%rax)
8e90(3): mov %r15d,%edi
8e93(5): call 0xffff9f1d(%rip)
8e98(4): mov 0x10(%rsp),%edi
8e9c(5): call 0xffff9f14(%rip)
8ea1(3): mov %rbx,%rdi
8ea4(5): mov 0x14(%rsp),%r15d
8ea9(5): call 0xffffd8f7(%rip)
8eae(2): jmp 0xffffff90(%rip)
8eb0(5): cmp $0x0,0x10(%rsp)
8eb5(2): mov (%rax),%ebp
8eb7(6): jnz 0xcb(%rip)
8ebd(3): cmp $0x18,%ebp
8ec0(2): jnz 0x7e(%rip)
8ec2(5): cmp $0x1,0xc(%rsp)
8ec7(2): jnz 0x77(%rip)
8ec9(3): mov %rbx,%rdi
8ecc(2): xor %ebx,%ebx
8ece(5): call 0xffffa2f2(%rip)
8ed3(2): jmp 0xffffff8a(%rip)
8ed5(4): mov 0x14(%rsp),%edi
8ed9(5): call 0xffff9ed7(%rip)
8ede(4): cmp $0x1,%r15d
8ee2(2): jz 0xf(%rip)
8ee4(5): mov $0x1,%esi
8ee9(3): mov %r15d,%edi
8eec(5): call 0xfffffb74(%rip)
8ef1(4): mov 0x10(%rsp),%edi
8ef5(2): test %edi,%edi
8ef7(2): jnz 0x7f(%rip)
8ef9(7): mov 0x211528(%rip),%rdi
8f00(2): xor %edx,%edx
8f02(2): xor %eax,%eax
8f04(3): mov %rdi,%rsi
8f07(5): call 0xffffa249(%rip)
8f0c(3): mov (%r14),%edi
8f0f(7): lea 0xb14a(%rip),%rsi
8f16(5): call 0xffffa317(%rip)
8f1b(5): call 0xffff9d85(%rip)
8f20(7): lea 0xb161(%rip),%rsi
8f27(2): xor %edi,%edi
8f29(5): mov $0x5,%edx
8f2e(5): call 0xffff9d42(%rip)
8f33(3): mov %rbp,%rsi
8f36(3): mov %rax,%rdi
8f39(5): call 0xffffd3e7(%rip)
8f3e(3): mov %r12,%rsi
8f41(5): mov $0x4,%edi
8f46(5): call 0x717a(%rip)
8f4b(7): lea 0xb0e6(%rip),%rsi
8f52(5): mov $0x5,%edx
8f57(2): xor %edi,%edi
8f59(3): mov %rax,%rbx
8f5c(5): call 0xffff9d14(%rip)
8f61(3): mov (%r14),%esi
8f64(3): mov %rax,%rdx
8f67(3): mov %rbx,%rcx
8f6a(5): mov $0x2,%edi
8f6f(2): xor %eax,%eax
8f71(5): call 0xffffa06f(%rip)
8f76(2): xor %esi,%esi
8f78(5): call 0xfffffae8(%rip)
8f7d(5): jmp 0xffffff7c(%rip)
8f82(3): mov %r13,%rdi
8f85(5): call 0xffffdc2b(%rip)
8f8a(3): mov %ebp,(%r14)
8f8d(5): jmp 0xffffff30(%rip)

"maybe_create_temp" :
8d00(2): push %r15
8d02(2): push %r14
8d04(2): push %r13
8d06(2): push %r12
8d08(1): push %rbp
8d09(1): push %rbx
8d0a(7): sub $0xa8,%rsp
8d11(7): mov 0x211510(%rip),%rdx
8d18(9): mov $0x28,%rax
8d21(8): mov %rax,0x98(%rsp)
8d29(2): xor %eax,%eax
8d2b(7): mov 0x21171e(%rip),%rax
8d32(4): mov %rdi,(%rsp)
8d36(4): mov %esi,0xc(%rsp)
8d3a(4): mov 0x0(%rax,%rdx,8),%r12
8d3e(3): mov %r12,%rdi
8d41(5): call 0xffff9f4f(%rip)
8d46(4): lea 0x20(%rax),%rdi
8d4a(3): mov %rax,%r15
8d4d(4): and $0xfffffff8,%rdi
8d51(5): call 0x908f(%rip)
8d56(4): lea 0xd(%rax),%rbp
8d5a(3): mov %r15,%rdx
8d5d(3): mov %r12,%rsi
8d60(3): mov %rax,%rbx
8d63(3): mov %rbp,%rdi
8d66(5): call 0xffffa11a(%rip)
8d6b(a): mov $0x6365935330447553327,%rax
8d75(5): mov %rax,0xd(%rbx,%r15,1)
8d7a(7): mov 0x2114a7(%rip),%rax
8d81(9): mov $0x585858,0x8(%rbp,%r15,1)
8d8a(7): mov $0x0,(%rbx)
8d91(4): add $0x1,%rax
8d95(7): cmp 0x2116ac(%rip),%rax
8d9c(7): mov %rax,0x211485(%rip)
8da3(2): jnz 0xd(%rip)
8da5(b): mov $0x0,0x211478(%rip)
8db0(5): lea 0x10(%rsp),%r13
8db5(7): lea 0x2115e4(%rip),%rsi
8dbc(2): xor %edi,%edi
8dbe(4): lea 0x8(%r13),%rdx
8dc2(5): call 0xffff9d2e(%rip)
8dc7(5): mov $0x80000,%esi
8dcc(2): test %eax,%eax
8dce(3): mov %rbp,%rdi
8dd1(5): setz 0x10(%rsp)
8dd6(5): call 0x840a(%rip)
8ddb(3): mov %eax,%r15d
8dde(5): call 0xffff9d32(%rip)
8de3(3): test %r15d,%r15d
8de6(3): mov %rax,%r14
8de9(6): js 0xc7(%rip)
8def(5): cmp $0x0,0x10(%rsp)
8df4(7): mov 0x211245(%rip),%rax
8dfb(7): mov %rbx,0x21123e(%rip)
8e02(3): mov %rbx,(%rax)
8e05(2): jz 0x10(%rip)
8e07(3): mov (%r14),%r12d
8e0a(3): mov %r13,%rdi
8e0d(5): call 0xffffdda3(%rip)
8e12(3): mov %r12d,(%r14)
8e15(8): cmp $0x0,0x21160b(%rip)
8e1d(4): mov $0x0,0xc(%rbx)
8e21(2): jz 0x1d(%rip)
8e23(5): mov $0x4,%esi
8e28(3): mov %r13,%rdi
8e2b(5): call 0xffffdfa5(%rip)
8e30(3): cmp $0x0,%eax
8e33(3): mov %eax,0x8(%rbx)
8e36(2): jnle 0x5a(%rip)
8e38(6): jz 0x9d(%rip)
8e3e(7): lea 0xc6a5(%rip),%rsi
8e45(3): mov %r15d,%edi
8e48(5): call 0xffffa138(%rip)
8e4d(4): mov (%rsp),%rcx
8e51(3): test %rax,%rax
8e54(3): mov %rax,(%rcx)
8e57(6): jz 0xc9(%rip)
8e5d(8): mov 0x98(%rsp),%rcx
8e65(9): xor $0x28,%rcx
8e6e(3): mov %rbx,%rax
8e71(6): jnz 0xaa(%rip)
8e77(7): add $0xa8,%rsp
8e7e(1): pop %rbx
8e7f(1): pop %rbp
8e80(2): pop %r12
8e82(2): pop %r13
8e84(2): pop %r14
8e86(2): pop %r15
8e88(1): ret near (%rsp)
8e89(7): nop 0x0(%rax)
8e90(3): mov %r15d,%edi
8e93(5): call 0xffff9f1d(%rip)
8e98(4): mov 0x10(%rsp),%edi
8e9c(5): call 0xffff9f14(%rip)
8ea1(3): mov %rbx,%rdi
8ea4(5): mov 0x14(%rsp),%r15d
8ea9(5): call 0xffffd8f7(%rip)
8eae(2): jmp 0xffffff90(%rip)
8eb0(5): cmp $0x0,0x10(%rsp)
8eb5(2): mov (%rax),%ebp
8eb7(6): jnz 0xcb(%rip)
8ebd(3): cmp $0x18,%ebp
8ec0(2): jnz 0x7e(%rip)
8ec2(5): cmp $0x1,0xc(%rsp)
8ec7(2): jnz 0x77(%rip)
8ec9(3): mov %rbx,%rdi
8ecc(2): xor %ebx,%ebx
8ece(5): call 0xffffa2f2(%rip)
8ed3(2): jmp 0xffffff8a(%rip)
8ed5(4): mov 0x14(%rsp),%edi
8ed9(5): call 0xffff9ed7(%rip)
8ede(4): cmp $0x1,%r15d
8ee2(2): jz 0xf(%rip)
8ee4(5): mov $0x1,%esi
8ee9(3): mov %r15d,%edi
8eec(5): call 0xfffffb74(%rip)
8ef1(4): mov 0x10(%rsp),%edi
8ef5(2): test %edi,%edi
8ef7(2): jnz 0x7f(%rip)
8ef9(7): mov 0x211528(%rip),%rdi
8f00(2): xor %edx,%edx
8f02(2): xor %eax,%eax
8f04(3): mov %rdi,%rsi
8f07(5): call 0xffffa249(%rip)
8f0c(3): mov (%r14),%edi
8f0f(7): lea 0xb14a(%rip),%rsi
8f16(5): call 0xffffa317(%rip)
8f1b(5): call 0xffff9d85(%rip)
8f20(7): lea 0xb161(%rip),%rsi
8f27(2): xor %edi,%edi
8f29(5): mov $0x5,%edx
8f2e(5): call 0xffff9d42(%rip)
8f33(3): mov %rbp,%rsi
8f36(3): mov %rax,%rdi
8f39(5): call 0xffffd3e7(%rip)
8f3e(3): mov %r12,%rsi
8f41(5): mov $0x4,%edi
8f46(5): call 0x717a(%rip)
8f4b(7): lea 0xb0e6(%rip),%rsi
8f52(5): mov $0x5,%edx
8f57(2): xor %edi,%edi
8f59(3): mov %rax,%rbx
8f5c(5): call 0xffff9d14(%rip)
8f61(3): mov (%r14),%esi
8f64(3): mov %rax,%rdx
8f67(3): mov %rbx,%rcx
8f6a(5): mov $0x2,%edi
8f6f(2): xor %eax,%eax
8f71(5): call 0xffffa06f(%rip)
8f76(2): xor %esi,%esi
8f78(5): call 0xfffffae8(%rip)
8f7d(5): jmp 0xffffff7c(%rip)
8f82(3): mov %r13,%rdi
8f85(5): call 0xffffdc2b(%rip)
8f8a(3): mov %ebp,(%r14)
8f8d(5): jmp 0xffffff30(%rip)

"queue_check_insert.part.12" :
8fa0(4): mov 0x10(%rsi),%rcx
8fa4(3): cmp %rcx,(%rsi)
8fa7(4): mov 0x8(%rsi),%rdx
8fab(4): mov 0x18(%rsi),%rax
8faf(2): jz 0x21(%rip)
8fb1(3): cmp %rax,%rdx
8fb4(2): jz 0xc(%rip)
8fb6(5): jmp 0xffffd97a(%rip)
8fbb(5): nop 0x0(%rax,%rax,1)
8fc0(5): cmp $0x0,0x30(%rsi)
8fc5(2): jz 0xfffffff1(%rip)
8fc7(2): REP ret near (%rsp)
8fc9(7): nop 0x0(%rax)
8fd0(3): cmp %rax,%rdx
8fd3(2): jz 0xfffffff4(%rip)
8fd5(5): cmp $0x0,0x28(%rsi)
8fda(2): jnz 0xffffffed(%rip)
8fdc(5): jmp 0xffffd954(%rip)

"sortlines" :
8ff0(2): push %r15
8ff2(2): push %r14
8ff4(2): push %r13
8ff6(2): push %r12
8ff8(3): mov %r8,%r12
8ffb(1): push %rbp
8ffc(1): push %rbx
8ffd(3): mov %rcx,%rbx
9000(3): mov %rsi,%r8
9003(3): mov %rdi,%rbp
9006(7): sub $0x98,%rsp
900d(4): mov 0x28(%rbx),%r15
9011(4): mov 0x30(%rbx),%r14
9015(9): mov $0x28,%rax
901e(8): mov %rax,0x88(%rsp)
9026(2): xor %eax,%eax
9028(4): mov 0x40(%rbx),%rax
902c(8): mov 0xd0(%rsp),%rcx
9034(3): shr $0x1,%r8
9037(5): mov %rdx,0x20(%rsp)
903c(5): mov %r9,0x28(%rsp)
9041(5): mov %rdi,0x50(%rsp)
9046(5): mov %r8,0x58(%rsp)
904b(5): mov %rax,0x68(%rsp)
9050(4): lea 0x0(%r15,%r14,1),%rax
9054(5): mov %rcx,0x30(%rsp)
9059(5): mov %r8,0x8(%rsp)
905e(5): mov %rdx,0x60(%rsp)
9063(6): cmp $0x1ffff,%rax
9069(5): mov %r12,0x70(%rsp)
906e(5): mov %r9,0x78(%rsp)
9073(8): mov %rcx,0x80(%rsp)
907b(2): jbe 0xf(%rip)
907d(4): cmp $0x1,%rsi
9081(3): mov %rsi,%r13
9084(6): jnbe 0x5d0(%rip)
908a(5): mov 0x20(%rsp),%rax
908f(3): mov %r15,%r13
9092(3): mov %rbp,%r8
9095(4): shl/sal $0x5,%r13
9099(3): neg %r13
909c(4): shl/sal $0x5,%rax
90a0(3): sub %rax,%r8
90a3(4): cmp $0x1,%r14
90a7(5): lea 0x0(%rbp,%r13,1),%rax
90ac(2): jbe 0x36(%rip)
90ae(3): mov %r15,%rdx
90b1(3): mov %r8,%rcx
90b4(3): mov %rax,%rdi
90b7(3): shr $0x1,%rdx
90ba(3): mov %r14,%rsi
90bd(5): mov %r8,0x10(%rsp)
90c2(4): shl/sal $0x5,%rdx
90c6(5): mov %rax,0x8(%rsp)
90cb(3): sub %rdx,%rcx
90ce(3): mov %rcx,%rdx
90d1(2): xor %ecx,%ecx
90d3(5): call 0xfffff6cd(%rip)
90d8(5): mov 0x10(%rsp),%r8
90dd(5): mov 0x8(%rsp),%rax
90e2(4): cmp $0x1,%r15
90e6(2): jbe 0x1c(%rip)
90e8(2): xor %ecx,%ecx
90ea(3): mov %r8,%rdx
90ed(3): mov %r15,%rsi
90f0(3): mov %rbp,%rdi
90f3(5): mov %rax,0x8(%rsp)
90f8(5): call 0xfffff6a8(%rip)
90fd(5): mov 0x8(%rsp),%rax
9102(3): mov %r14,%rsi
9105(3): mov %rbp,(%rbx)
9108(4): mov %rax,0x8(%rbx)
910c(4): shl/sal $0x5,%rsi
9110(4): mov %rax,0x10(%rbx)
9114(3): mov %r12,%rdi
9117(3): sub %rsi,%r13
911a(3): mov %rbx,%rsi
911d(3): add %r13,%rbp
9120(5): lea 0x8(%r12),%r13
9125(4): mov %rbp,0x18(%rbx)
9129(5): lea 0x30(%r12),%rbp
912e(5): call 0xffffd802(%rip)
9133(5): nop 0x0(%rax,%rax,1)
9138(3): mov %r13,%rdi
913b(5): call 0xffffa065(%rip)
9140(2): jmp 0x13(%rip)
9142(6): nop 0x0(%rax,%rax,1)
9148(3): mov %r13,%rsi
914b(3): mov %rbp,%rdi
914e(5): call 0xffff9ae2(%rip)
9153(4): mov (%r12),%rdi
9157(5): call 0x49a9(%rip)
915c(3): test %rax,%rax
915f(2): jz 0xffffffe9(%rip)
9161(3): mov %rax,%rbx
9164(3): mov %r13,%rdi
9167(5): call 0xffff9d89(%rip)
916c(4): lea 0x58(%rbx),%rax
9170(3): mov %rax,%rdi
9173(5): mov %rax,0x18(%rsp)
9178(5): call 0xffffa028(%rip)
917d(3): mov 0x50(%rbx),%eax
9180(4): mov $0x0,0x54(%rbx)
9184(2): test %eax,%eax
9186(6): jz 0x29a(%rip)
918c(5): mov 0x20(%rsp),%rdx
9191(3): mov (%rbx),%rdi
9194(4): lea 0x2(%rax,%rax,1),%ecx
9198(4): mov 0x8(%rbx),%rsi
919c(3): shr %cl,%rdx
919f(3): cmp $0x1,%eax
91a2(5): mov %rdi,0x8(%rsp)
91a7(5): mov %rsi,0x10(%rsp)
91ac(4): lea 0x1(%rdx),%r15
91b0(6): jbe 0x150(%rip)
91b6(4): mov 0x20(%rbx),%rax
91ba(3): mov (%rax),%r14
91bd(2): jmp 0x29(%rip)
91bf(1): nop 
91c0(4): mov 0x8(%rbx),%rax
91c4(3): mov (%rbx),%rdi
91c7(5): movdqu 0xffffffe0(%rax),%xmm0
91cc(4): lea 0xffffffe0(%rax),%rsi
91d0(4): mov %rsi,0x8(%rbx)
91d4(4): movups %xmm0,(%r14)
91d8(5): movdqu 0xfffffff0(%rax),%xmm0
91dd(5): movups %xmm0,0x10(%r14)
91e2(4): sub $0x1,%r15
91e6(4): mov 0x10(%rbx),%rax
91ea(3): cmp %rdi,%rax
91ed(6): jz 0x1b3(%rip)
91f3(4): cmp %rsi,0x18(%rbx)
91f7(2): jz 0x50(%rip)
91f9(3): test %r15,%r15
91fc(2): jz 0x44(%rip)
91fe(4): sub $0x20,%rsi
9202(4): sub $0x20,%rdi
9206(4): sub $0x20,%r14
920a(5): call 0xfffff4d6(%rip)
920f(2): test %eax,%eax
9211(2): jnle 0xffffffaf(%rip)
9213(3): mov (%rbx),%rax
9216(4): mov 0x8(%rbx),%rsi
921a(5): movdqu 0xffffffe0(%rax),%xmm0
921f(4): lea 0xffffffe0(%rax),%rdi
9223(3): mov %rdi,(%rbx)
9226(4): movups %xmm0,(%r14)
922a(5): movdqu 0xfffffff0(%rax),%xmm0
922f(5): movups %xmm0,0x10(%r14)
9234(2): jmp 0xffffffae(%rip)
9236(a): nop 0x0(%rax,%rax,1)
9240(7): mov $0xffffffff,%r15
9247(5): mov 0x10(%rsp),%r8
924c(5): mov 0x8(%rsp),%r11
9251(4): mov 0x30(%rbx),%r9
9255(4): mov 0x28(%rbx),%r10
9259(3): sub %rsi,%r8
925c(3): sub %rdi,%r11
925f(4): sar $0x5,%r8
9263(4): sar $0x5,%r11
9267(3): cmp %r9,%r8
926a(3): mov %r11,%rcx
926d(6): jz 0x143(%rip)
9273(3): cmp %r10,%r11
9276(6): jz 0x1ea(%rip)
927c(4): mov 0x20(%rbx),%rax
9280(3): mov %r14,(%rax)
9283(3): sub %rcx,%r10
9286(3): sub %r8,%r9
9289(4): cmp $0x0,0x54(%rbx)
928d(4): mov %r10,0x28(%rbx)
9291(4): mov %r9,0x30(%rbx)
9295(6): jz 0xfb(%rip)
929b(4): cmp $0x1,0x50(%rbx)
929f(2): jnbe 0x31(%rip)
92a1(4): mov 0x30(%rbx),%rax
92a5(4): add 0x28(%rbx),%rax
92a9(2): jnz 0x17(%rip)
92ab(4): mov 0x38(%rbx),%rsi
92af(3): mov %r12,%rdi
92b2(5): call 0xffffd67e(%rip)
92b7(9): nop 0x0(%rax,%rax,1)
92c0(5): mov 0x18(%rsp),%rdi
92c5(5): call 0xffff9c2b(%rip)
92ca(5): jmp 0xfffffe6e(%rip)
92cf(1): nop 
92d0(4): mov 0x38(%rbx),%rax
92d4(4): lea 0x58(%rax),%rdi
92d8(5): call 0xffff9ec8(%rip)
92dd(4): mov 0x38(%rbx),%rsi
92e1(4): cmp $0x0,0x54(%rsi)
92e5(2): jnz 0xe(%rip)
92e7(3): mov %r12,%rdi
92ea(5): call 0xfffffcb6(%rip)
92ef(4): mov 0x38(%rbx),%rsi
92f3(4): lea 0x58(%rsi),%rdi
92f7(5): call 0xffff9bf9(%rip)
92fc(2): jmp 0xffffffc4(%rip)
92fe(2): nop 
9300(5): mov %rbp,0x38(%rsp)
9305(5): mov 0x8(%rsp),%rdi
930a(3): mov %rbx,%rbp
930d(5): mov 0x10(%rsp),%rsi
9312(5): mov 0x28(%rsp),%r14
9317(5): mov 0x30(%rsp),%rbx
931c(2): jmp 0x27(%rip)
931e(2): nop 
9320(4): mov 0x8(%rbp),%rax
9324(3): mov %rbx,%rdx
9327(3): mov %r14,%rsi
932a(4): lea 0xffffffe0(%rax),%rdi
932e(4): mov %rdi,0x8(%rbp)
9332(5): call 0xfffff6be(%rip)
9337(4): mov 0x8(%rbp),%rsi
933b(4): mov 0x0(%rbp),%rdi
933f(4): sub $0x1,%r15
9343(4): mov 0x10(%rbp),%rax
9347(3): cmp %rdi,%rax
934a(6): jz 0x186(%rip)
9350(4): cmp %rsi,0x18(%rbp)
9354(6): jz 0x2dc(%rip)
935a(3): test %r15,%r15
935d(6): jz 0x2e3(%rip)
9363(4): sub $0x20,%rsi
9367(4): sub $0x20,%rdi
936b(5): call 0xfffff375(%rip)
9370(2): test %eax,%eax
9372(2): jnle 0xffffffae(%rip)
9374(4): mov 0x0(%rbp),%rax
9378(3): mov %rbx,%rdx
937b(3): mov %r14,%rsi
937e(4): lea 0xffffffe0(%rax),%rdi
9382(4): mov %rdi,0x0(%rbp)
9386(5): call 0xfffff66a(%rip)
938b(2): jmp 0xffffffac(%rip)
938d(3): nop (%rax)
9390(3): mov %rbx,%rsi
9393(3): mov %r12,%rdi
9396(5): call 0xfffffc0a(%rip)
939b(5): jmp 0xffffff00(%rip)
93a0(3): mov %rdi,%rax
93a3(5): jmp 0xfffffea4(%rip)
93a8(8): nop 0x0(%rax,%rax,1)
93b0(3): cmp %rax,%rdi
93b3(6): jz 0xfffffec9(%rip)
93b9(3): test %r15,%r15
93bc(4): lea 0xffffffff(%r15),%rsi
93c0(6): jz 0xfffffebc(%rip)
93c6(4): sub $0x20,%rdi
93ca(2): jmp 0x17(%rip)
93cc(4): nop 0x0(%rax)
93d0(4): sub $0x1,%rsi
93d4(4): lea 0xffffffe0(%rdi),%rdx
93d8(4): cmp $0xffffffff,%rsi
93dc(2): jz 0x23(%rip)
93de(3): mov %rdx,%rdi
93e1(4): movdqu (%rdi),%xmm0
93e5(4): sub $0x20,%r14
93e9(3): cmp %rax,%rdi
93ec(3): mov %rdi,(%rbx)
93ef(4): movups %xmm0,(%r14)
93f3(5): movdqu 0x10(%rdi),%xmm0
93f8(5): movups %xmm0,0x10(%r14)
93fd(2): jnz 0xffffffd3(%rip)
93ff(5): mov 0x8(%rsp),%rax
9404(3): mov %r9,%r8
9407(3): sub %rdi,%rax
940a(4): sar $0x5,%rax
940e(3): mov %rax,%rcx
9411(5): jmp 0xfffffe6b(%rip)
9416(a): nop 0x0(%rax,%rax,1)
9420(5): mov 0x18(%rsp),%rdi
9425(5): call 0xffff9acb(%rip)
942a(3): mov %rbx,%rsi
942d(3): mov %r12,%rdi
9430(5): call 0xffffd500(%rip)
9435(8): mov 0x88(%rsp),%rax
943d(9): xor $0x28,%rax
9446(6): jnz 0x295(%rip)
944c(7): add $0x98,%rsp
9453(1): pop %rbx
9454(1): pop %rbp
9455(2): pop %r12
9457(2): pop %r13
9459(2): pop %r14
945b(2): pop %r15
945d(1): ret near (%rsp)
945e(2): nop 
9460(4): mov 0x18(%rbx),%rdi
9464(3): cmp %rsi,%rdi
9467(6): jz 0xfffffe15(%rip)
946d(3): test %r15,%r15
9470(4): lea 0xffffffff(%r15),%rax
9474(6): jz 0xfffffe08(%rip)
947a(4): sub $0x20,%rsi
947e(2): jmp 0x13(%rip)
9480(4): sub $0x1,%rax
9484(4): lea 0xffffffe0(%rsi),%rdx
9488(4): cmp $0xffffffff,%rax
948c(2): jz 0x24(%rip)
948e(3): mov %rdx,%rsi
9491(4): movdqu (%rsi),%xmm0
9495(4): sub $0x20,%r14
9499(3): cmp %rdi,%rsi
949c(4): mov %rsi,0x8(%rbx)
94a0(4): movups %xmm0,(%r14)
94a4(5): movdqu 0x10(%rsi),%xmm0
94a9(5): movups %xmm0,0x10(%r14)
94ae(2): jnz 0xffffffd2(%rip)
94b0(5): mov 0x10(%rsp),%r15
94b5(3): mov %r10,%rcx
94b8(3): sub %rsi,%r15
94bb(3): mov %r15,%r8
94be(4): sar $0x5,%r8
94c2(5): jmp 0xfffffdba(%rip)
94c7(9): nop 0x0(%rax,%rax,1)
94d0(3): mov %rbp,%rbx
94d3(5): mov 0x38(%rsp),%rbp
94d8(3): mov %rdi,%rax
94db(5): mov 0x8(%rsp),%rdx
94e0(5): mov 0x10(%rsp),%r8
94e5(4): mov 0x30(%rbx),%r9
94e9(3): sub %rdi,%rdx
94ec(3): sub %rsi,%r8
94ef(3): mov %rdx,%rcx
94f2(4): sar $0x5,%r8
94f6(4): sar $0x5,%rcx
94fa(3): cmp %r9,%r8
94fd(6): jz 0xa3(%rip)
9503(4): mov 0x28(%rbx),%r10
9507(3): cmp %r10,%rcx
950a(6): jnz 0xfffffd79(%rip)
9510(4): cmp %rsi,0x18(%rbx)
9514(6): jz 0x17a(%rip)
951a(3): test %r15,%r15
951d(4): lea 0xffffffff(%r15),%rax
9521(6): jz 0x16d(%rip)
9527(5): mov %rbp,0x38(%rsp)
952c(5): mov 0x28(%rsp),%r14
9531(3): mov %rax,%rbp
9534(5): mov 0x30(%rsp),%r15
9539(2): jmp 0x11(%rip)
953b(5): nop 0x0(%rax,%rax,1)
9540(4): sub $0x1,%rbp
9544(4): cmp $0xffffffff,%rbp
9548(2): jz 0x1f(%rip)
954a(4): lea 0xffffffe0(%rsi),%rdi
954e(3): mov %r15,%rdx
9551(3): mov %r14,%rsi
9554(4): mov %rdi,0x8(%rbx)
9558(5): call 0xfffff498(%rip)
955d(4): mov 0x8(%rbx),%rsi
9561(4): cmp 0x18(%rbx),%rsi
9565(2): jnz 0xffffffdb(%rip)
9567(5): mov 0x8(%rsp),%r14
956c(5): mov 0x10(%rsp),%r15
9571(3): sub (%rbx),%r14
9574(5): mov 0x38(%rsp),%rbp
9579(4): mov 0x28(%rbx),%r10
957d(4): mov 0x30(%rbx),%r9
9581(3): sub %rsi,%r15
9584(3): mov %r15,%r8
9587(3): mov %r14,%rcx
958a(4): sar $0x5,%r8
958e(4): sar $0x5,%rcx
9592(5): jmp 0xfffffcf1(%rip)
9597(9): nop 0x0(%rax,%rax,1)
95a0(3): cmp %rdi,%rax
95a3(6): jz 0xdf(%rip)
95a9(3): test %r15,%r15
95ac(4): lea 0xffffffff(%r15),%rax
95b0(6): jz 0xd2(%rip)
95b6(5): mov %rbp,0x38(%rsp)
95bb(5): mov 0x28(%rsp),%r14
95c0(3): mov %rax,%rbp
95c3(5): mov 0x30(%rsp),%r15
95c8(2): jmp 0x12(%rip)
95ca(6): nop 0x0(%rax,%rax,1)
95d0(4): sub $0x1,%rbp
95d4(4): cmp $0xffffffff,%rbp
95d8(2): jz 0x1d(%rip)
95da(4): sub $0x20,%rdi
95de(3): mov %r15,%rdx
95e1(3): mov %r14,%rsi
95e4(3): mov %rdi,(%rbx)
95e7(5): call 0xfffff409(%rip)
95ec(3): mov (%rbx),%rdi
95ef(4): cmp 0x10(%rbx),%rdi
95f3(2): jnz 0xffffffdd(%rip)
95f5(5): mov 0x8(%rsp),%r14
95fa(5): mov 0x10(%rsp),%r15
95ff(4): sub 0x8(%rbx),%r15
9603(5): mov 0x38(%rsp),%rbp
9608(4): mov 0x28(%rbx),%r10
960c(4): mov 0x30(%rbx),%r9
9610(3): sub %rdi,%r14
9613(3): mov %r14,%rcx
9616(3): mov %r15,%r8
9619(4): sar $0x5,%rcx
961d(4): sar $0x5,%r8
9621(5): jmp 0xfffffc62(%rip)
9626(a): nop 0x0(%rax,%rax,1)
9630(3): mov %rbp,%rbx
9633(5): mov 0x38(%rsp),%rbp
9638(5): jmp 0xfffffea3(%rip)
963d(3): nop (%rax)
9640(3): mov %rbp,%rbx
9643(7): mov $0xffffffff,%r15
964a(5): mov 0x38(%rsp),%rbp
964f(5): jmp 0xfffffe8c(%rip)
9654(5): lea 0x50(%rsp),%rcx
9659(5): lea 0x48(%rsp),%rdi
965e(7): lea 0x7b(%rip),%rdx
9665(2): xor %esi,%esi
9667(5): call 0xffff9479(%rip)
966c(2): test %eax,%eax
966e(5): mov 0x8(%rsp),%r8
9673(2): jz 0x23(%rip)
9675(4): mov 0x28(%rbx),%r15
9679(4): mov 0x30(%rbx),%r14
967d(5): jmp 0xfffffa0d(%rip)
9682(4): mov 0x28(%rbx),%r10
9686(3): mov %r8,%r9
9689(5): jmp 0xfffffbfa(%rip)
968e(3): mov %rcx,%r10
9691(5): jmp 0xfffffbf2(%rip)
9696(4): mov 0x28(%rbx),%rax
969a(4): sub $0x8,%rsp
969e(4): mov 0x48(%rbx),%rcx
96a2(4): push 0x38(%rsp)
96a6(5): mov 0x38(%rsp),%r9
96ab(3): mov %r13,%rsi
96ae(5): mov 0x30(%rsp),%rdx
96b3(3): mov %rbp,%rdi
96b6(3): sub %r8,%rsi
96b9(4): shl/sal $0x5,%rax
96bd(3): mov %r12,%r8
96c0(3): sub %rax,%rdi
96c3(5): call 0xfffff92d(%rip)
96c8(5): mov 0x58(%rsp),%rdi
96cd(2): xor %esi,%esi
96cf(5): call 0xffff9991(%rip)
96d4(1): pop %rax
96d5(1): pop %rdx
96d6(5): jmp 0xfffffd5f(%rip)
96db(5): call 0xffff95c5(%rip)

"sortlines_thread" :
96e0(4): sub $0x10,%rsp
96e4(4): mov 0x18(%rdi),%rcx
96e8(4): mov 0x10(%rdi),%rdx
96ec(4): mov 0x8(%rdi),%rsi
96f0(4): mov 0x28(%rdi),%r9
96f4(3): push 0x30(%rdi)
96f7(4): mov 0x20(%rdi),%r8
96fb(3): mov (%rdi),%rdi
96fe(5): call 0xfffff8f2(%rip)
9703(2): xor %eax,%eax
9705(4): add $0x18,%rsp
9709(1): ret near (%rsp)

"fillbuf" :
9710(4): cmp $0x0,0x30(%rdi)
9714(6): jnz 0x36d(%rip)
971a(2): push %r15
971c(2): push %r14
971e(3): mov %rdi,%rax
9721(2): push %r13
9723(2): push %r12
9725(1): push %rbp
9726(1): push %rbx
9727(4): sub $0x48,%rsp
972b(7): mov 0x210cfe(%rip),%rbx
9732(7): mov 0x2108f7(%rip),%rbp
9739(5): mov %rdi,0x28(%rsp)
973e(7): movzx 0x2108f3(%rip),%edi
9745(5): mov %rdx,0x38(%rsp)
974a(5): mov %rsi,0x20(%rsp)
974f(5): mov %dil,0x37(%rsp)
9754(4): mov 0x28(%rax),%rdi
9758(5): mov %rdi,0x8(%rsp)
975d(3): mov %rax,%rdi
9760(4): mov 0x8(%rax),%rax
9764(4): mov 0x20(%rdi),%rdx
9768(3): mov (%rdi),%r15
976b(3): cmp %rdx,%rax
976e(6): jnz 0x19b(%rip)
9774(4): mov 0x10(%rdi),%rax
9778(5): mov 0x8(%rsp),%rdi
977d(4): sub $0x22,%rbp
9781(4): add $0x1,%rdi
9785(5): mov %rdi,0x10(%rsp)
978a(5): mov 0x28(%rsp),%rdi
978f(4): mov 0x18(%rdi),%r12
9793(5): movsx 0x37(%rsp),%edi
9798(4): mov %edi,0x30(%rsp)
979c(4): nop 0x0(%rax)
97a0(3): add %r15,%r12
97a3(4): lea 0x0(%r15,%rdx,1),%r13
97a7(3): mov %rax,%rdx
97aa(4): shl/sal $0x5,%rdx
97ae(3): mov %r12,%r14
97b1(3): sub %rdx,%r14
97b4(5): mov 0x8(%rsp),%rdx
97b9(4): imul %rax,%rdx
97bd(3): sub %rdx,%r12
97c0(3): sub %r13,%r12
97c3(3): test %rax,%rax
97c6(6): jz 0x255(%rip)
97cc(4): mov 0x8(%r14),%r9
97d0(3): add (%r14),%r9
97d3(3): mov %r13,%r15
97d6(3): mov %r9,%r13
97d9(7): nop 0x0(%rax)
97e0(5): cmp 0x10(%rsp),%r12
97e5(6): jbe 0x24a(%rip)
97eb(5): lea 0xffffffff(%r12),%rax
97f0(2): xor %edx,%edx
97f2(5): mov 0x20(%rsp),%rcx
97f7(3): mov %r15,%rdi
97fa(5): mov $0x1,%esi
97ff(5): div 0x10(%rsp),%rax
9804(3): mov %rax,%rdx
9807(5): mov %rax,0x18(%rsp)
980c(5): call 0xffff9404(%rip)
9811(5): mov 0x18(%rsp),%r11
9816(4): lea 0x0(%r15,%rax,1),%rdi
981a(3): sub %rax,%r12
981d(4): mov %rdi,(%rsp)
9821(3): cmp %rax,%r11
9824(2): jz 0x4c(%rip)
9826(5): mov 0x20(%rsp),%rax
982b(2): mov (%rax),%eax
982d(2): test $0x20,%al
982f(6): jnz 0x280(%rip)
9835(2): test $0x10,%al
9837(2): jz 0x39(%rip)
9839(5): mov 0x28(%rsp),%rax
983e(3): mov %rax,%rsi
9841(4): mov $0x1,0x30(%rax)
9845(4): mov (%rsp),%rax
9849(3): cmp %rax,(%rsi)
984c(6): jz 0x224(%rip)
9852(3): cmp %rax,%r13
9855(2): jz 0x1b(%rip)
9857(5): movzx 0x37(%rsp),%esi
985c(4): cmp %sil,0xffffffff(%rax)
9860(2): jz 0x10(%rip)
9862(3): mov %sil,(%rax)
9865(4): add $0x1,%rax
9869(4): mov %rax,(%rsp)
986d(3): nop (%rax)
9870(4): mov (%rsp),%rax
9874(3): mov %r15,%r11
9877(5): mov %rax,0x18(%rsp)
987c(2): jmp 0x19(%rip)
987e(2): nop 
9880(3): mov %rbx,%rdx
9883(3): mov %r15,%rsi
9886(3): mov %r13,%rdi
9889(5): call 0xffffd0e7(%rip)
988e(4): mov %rax,0x10(%r14)
9892(3): mov %r11,%r13
9895(4): mov (%rsp),%rdx
9899(4): mov 0x30(%rsp),%esi
989d(3): mov %r11,%rdi
98a0(3): sub %r11,%rdx
98a3(5): call 0xffff953d(%rip)
98a8(3): test %rax,%rax
98ab(6): jz 0x95(%rip)
98b1(4): lea 0x1(%rax),%r11
98b5(4): sub $0x20,%r14
98b9(3): mov $0x0,(%rax)
98bc(3): mov %r13,(%r14)
98bf(3): mov %r11,%r15
98c2(3): sub %r13,%r15
98c5(3): cmp %r15,%rbp
98c8(4): mov %r15,0x8(%r14)
98cc(4): cmovnae %r15,%rbp
98d0(5): sub 0x8(%rsp),%r12
98d5(3): test %rbx,%rbx
98d8(2): jz 0xffffffba(%rip)
98da(5): cmp $0xffffffff,0x10(%rbx)
98df(2): jz 0x10(%rip)
98e1(3): mov %rbx,%rdx
98e4(3): mov %r15,%rsi
98e7(3): mov %r13,%rdi
98ea(5): call 0xffffd176(%rip)
98ef(4): cmp $0xffffffff,(%rbx)
98f3(4): mov %rax,0x18(%r14)
98f7(2): jnz 0xffffff89(%rip)
98f9(4): cmp $0x0,0x30(%rbx)
98fd(6): jnz 0xe3(%rip)
9903(4): mov %r13,0x10(%r14)
9907(2): jmp 0xffffff8b(%rip)
9909(3): sub %rdx,%rax
990c(3): mov %r15,%rdi
990f(4): lea 0x0(%r15,%rax,1),%rsi
9913(5): call 0xffff96ad(%rip)
9918(5): mov 0x28(%rsp),%rax
991d(4): mov 0x20(%rax),%rdx
9921(8): mov $0x0,0x10(%rax)
9929(3): mov (%rax),%r15
992c(4): mov %rdx,0x8(%rax)
9930(2): xor %eax,%eax
9932(5): jmp 0xfffffe46(%rip)
9937(9): nop 0x0(%rax,%rax,1)
9940(5): mov 0x28(%rsp),%rax
9945(4): mov (%rsp),%r15
9949(4): cmp $0x0,0x30(%rax)
994d(6): jz 0xfffffe93(%rip)
9953(3): mov %r13,%r15
9956(5): mov 0x28(%rsp),%rsi
995b(5): mov 0x18(%rsp),%rax
9960(3): mov (%rsi),%rdi
9963(4): mov 0x18(%rsi),%rdx
9967(3): sub %rdi,%rax
996a(4): mov %rax,0x8(%rsi)
996e(4): lea 0x0(%rdi,%rdx,1),%rax
9972(3): sub %r14,%rax
9975(4): sar $0x5,%rax
9979(3): test %rax,%rax
997c(4): mov %rax,0x10(%rsi)
9980(6): jnz 0x104(%rip)
9986(3): mov %rdx,%rsi
9989(4): shr $0x5,%rsi
998d(3): test %rdi,%rdi
9990(6): jz 0xb2(%rip)
9996(a): mov $0x192153584101141161,%rax
99a0(3): cmp %rax,%rsi
99a3(6): jnbe 0xc8(%rip)
99a9(4): shr $0x6,%rdx
99ad(5): lea 0x1(%rsi,%rdx,1),%rsi
99b2(4): shl/sal $0x5,%rsi
99b6(3): mov %rsi,%r12
99b9(5): call 0x8487(%rip)
99be(3): mov %rax,%r15
99c1(5): mov 0x28(%rsp),%rax
99c6(3): mov %r15,(%rax)
99c9(4): mov %r12,0x18(%rax)
99cd(4): mov 0x8(%rax),%rdx
99d1(4): mov 0x10(%rax),%rax
99d5(5): jmp 0xfffffdcb(%rip)
99da(6): nop 0x0(%rax,%rax,1)
99e0(5): movzx 0x0(%r13),%eax
99e5(7): lea 0x210d74(%rip),%rdi
99ec(4): cmp $0x0,0x0(%rdi,%rax,1)
99f0(6): jz 0xffffff13(%rip)
99f6(a): nop 0x0(%rax,%rax,1)
9a00(4): add $0x1,%r13
9a04(5): movzx 0x0(%r13),%eax
9a09(7): lea 0x210d50(%rip),%rcx
9a10(4): cmp $0x0,0x0(%rcx,%rax,1)
9a14(2): jnz 0xffffffec(%rip)
9a16(5): jmp 0xfffffeed(%rip)
9a1b(5): cmp 0x10(%rsp),%r12
9a20(3): mov %r15,%rax
9a23(3): mov %r13,%r15
9a26(3): mov %rax,%r13
9a29(6): jnbe 0xfffffdc2(%rip)
9a2f(3): mov %r13,%rax
9a32(3): mov %r15,%r13
9a35(5): mov %r13,0x18(%rsp)
9a3a(3): mov %rax,%r15
9a3d(5): jmp 0xffffff19(%rip)
9a42(3): test %rsi,%rsi
9a45(5): mov $0x4,%eax
9a4a(5): mov $0x20,%edx
9a4f(4): cmove %rax,%rsi
9a53(3): mov %rdx,%rax
9a56(2): xor %ecx,%ecx
9a58(3): mul %rax,%rsi,%rdx
9a5b(2): jo 0x74(%rip)
9a5d(3): test %rax,%rax
9a60(2): js 0xb(%rip)
9a62(3): test %rcx,%rcx
9a65(6): jz 0xffffff4d(%rip)
9a6b(5): call 0x85c5(%rip)
9a70(4): add $0x48,%rsp
9a74(2): xor %eax,%eax
9a76(1): pop %rbx
9a77(1): pop %rbp
9a78(2): pop %r12
9a7a(2): pop %r13
9a7c(2): pop %r14
9a7e(2): pop %r15
9a80(1): ret near (%rsp)
9a81(2): xor %eax,%eax
9a83(1): ret near (%rsp)
9a84(5): mov 0x18(%rsp),%rax
9a89(4): add $0x22,%rbp
9a8d(7): mov %rbp,0x21059c(%rip)
9a94(3): sub %r15,%rax
9a97(4): mov %rax,0x20(%rsi)
9a9b(4): add $0x48,%rsp
9a9f(5): mov $0x1,%eax
9aa4(1): pop %rbx
9aa5(1): pop %rbp
9aa6(2): pop %r12
9aa8(2): pop %r13
9aaa(2): pop %r14
9aac(2): pop %r15
9aae(1): ret near (%rsp)
9aaf(7): lea 0xba36(%rip),%rsi
9ab6(2): xor %edi,%edi
9ab8(5): mov $0x5,%edx
9abd(5): call 0xffff91b3(%rip)
9ac2(5): mov 0x38(%rsp),%rsi
9ac7(3): mov %rax,%rdi
9aca(5): call 0xffffc856(%rip)
9acf(5): mov $0x1,%ecx
9ad4(2): jmp 0xffffff89(%rip)

"mergefps" :
9ae0(2): push %r15
9ae2(2): push %r14
9ae4(3): mov %rdx,%r15
9ae7(2): push %r13
9ae9(2): push %r12
9aeb(5): mov $0x38,%edx
9af0(1): push %rbp
9af1(1): push %rbx
9af2(7): sub $0xb8,%rsp
9af9(9): mov $0x28,%rax
9b02(8): mov %rax,0xa8(%rsp)
9b0a(2): xor %eax,%eax
9b0c(3): mov %rdx,%rax
9b0f(5): mov %rdi,0x30(%rsp)
9b14(5): mov %rsi,0x60(%rsp)
9b19(3): mul %rax,%r15,%rdx
9b1c(5): mov %rcx,0x50(%rsp)
9b21(5): mov %r8,0x58(%rsp)
9b26(5): mov %r9,0x18(%rsp)
9b2b(6): jo 0x7ab(%rip)
9b31(2): xor %ecx,%ecx
9b33(3): test %rax,%rax
9b36(6): js 0x796(%rip)
9b3c(3): test %rcx,%rcx
9b3f(6): jnz 0x78d(%rip)
9b45(8): lea 0x0(,%r15,8),%rdi
9b4d(3): sub %r15,%rdi
9b50(4): shl/sal $0x3,%rdi
9b54(5): call 0x828c(%rip)
9b59(5): mov $0x8,%edx
9b5e(5): mov %rax,0x28(%rsp)
9b63(2): xor %ecx,%ecx
9b65(3): mov %rdx,%rax
9b68(3): mul %rax,%r15,%rdx
9b6b(6): jo 0x775(%rip)
9b71(3): test %rax,%rax
9b74(6): js 0x758(%rip)
9b7a(3): test %rcx,%rcx
9b7d(6): jnz 0x74f(%rip)
9b83(8): lea 0x0(,%r15,8),%rbx
9b8b(3): xor %r14d,%r14d
9b8e(3): mov %rbx,%rdi
9b91(5): call 0x824f(%rip)
9b96(3): mov %rbx,%rdi
9b99(3): mov %rax,%rbp
9b9c(5): call 0x8244(%rip)
9ba1(3): mov %rbx,%rdi
9ba4(5): mov %rax,0x10(%rsp)
9ba9(5): call 0x8237(%rip)
9bae(3): mov %rax,%rbx
9bb1(7): mov 0x210878(%rip),%rax
9bb8(c): mov $0x0,0x80(%rsp)
9bc4(5): mov %rax,0x78(%rsp)
9bc9(5): mov 0x30(%rsp),%rax
9bce(4): sub $0x10,%rax
9bd2(3): test %r15,%r15
9bd5(5): mov %rax,0x8(%rsp)
9bda(6): jz 0x481(%rip)
9be0(5): mov %rbx,0x20(%rsp)
9be5(4): mov %rbp,(%rsp)
9be9(3): mov %r15,%rbx
9bec(4): nop 0x0(%rax)
9bf0(8): lea 0x0(,%r14,8),%r13
9bf8(5): mov 0x28(%rsp),%rcx
9bfd(2): xor %edx,%edx
9bff(5): mov $0x20,%esi
9c04(3): mov %r13,%rax
9c07(3): sub %r14,%rax
9c0a(4): lea 0x0(%rcx,%rax,8),%r15
9c0e(7): mov 0x210843(%rip),%rax
9c15(3): mov %r15,%rdi
9c18(3): div %rbx,%rax
9c1b(7): mov 0x21040e(%rip),%rdx
9c22(3): cmp %rdx,%rax
9c25(4): cmovnb %rax,%rdx
9c29(5): call 0xffffc877(%rip)
9c2e(5): mov 0x30(%rsp),%rdi
9c33(3): mov %r14,%rax
9c36(4): shl/sal $0x4,%rax
9c3a(4): lea 0x0(%rdi,%rax,1),%r12
9c3e(5): mov 0x18(%rsp),%rax
9c43(3): mov %r15,%rdi
9c46(4): mov (%r12),%rdx
9c4a(4): lea 0x0(%rax,%r13,1),%rbp
9c4e(4): mov 0x0(%rbp),%rsi
9c52(5): call 0xfffffabe(%rip)
9c57(2): test %al,%al
9c59(6): jz 0x35f(%rip)
9c5f(4): mov 0x18(%r15),%rax
9c63(3): add (%r15),%rax
9c66(4): mov (%rsp),%rcx
9c6a(4): lea 0xffffffe0(%rax),%rdx
9c6e(4): mov %rdx,0x0(%rcx,%r14,8)
9c72(4): mov 0x10(%r15),%rdx
9c76(5): mov 0x10(%rsp),%rcx
9c7b(4): shl/sal $0x5,%rdx
9c7f(3): sub %rdx,%rax
9c82(4): mov %rax,0x0(%rcx,%r14,8)
9c86(4): add $0x1,%r14
9c8a(3): cmp %rbx,%r14
9c8d(6): jb 0xffffff63(%rip)
9c93(3): mov %rbx,%r15
9c96(4): mov (%rsp),%rbp
9c9a(5): mov 0x20(%rsp),%rbx
9c9f(3): test %r15,%r15
9ca2(6): jz 0x3b9(%rip)
9ca8(2): xor %eax,%eax
9caa(6): nop 0x0(%rax,%rax,1)
9cb0(4): mov %rax,0x0(%rbx,%rax,8)
9cb4(4): add $0x1,%rax
9cb8(3): cmp %r15,%rax
9cbb(2): jnz 0xfffffff5(%rip)
9cbd(4): cmp $0x1,%rax
9cc1(5): mov %rax,0x20(%rsp)
9cc6(6): mov $0x1,%r12d
9ccc(2): jz 0x65(%rip)
9cce(3): mov %rbp,%rdx
9cd1(3): mov %rbx,%rbp
9cd4(4): nop 0x0(%rax)
9cd8(8): lea 0x0(,%r12,8),%rax
9ce0(4): mov %rdx,(%rsp)
9ce4(5): lea 0x0(%rbp,%rax,1),%r13
9ce9(5): lea 0xfffffff8(%rbp,%rax,1),%r15
9cee(4): mov 0x0(%r13),%rbx
9cf2(3): mov (%r15),%r14
9cf5(4): mov 0x0(%rdx,%rbx,8),%rsi
9cf9(4): mov 0x0(%rdx,%r14,8),%rdi
9cfd(5): call 0xffffe9e3(%rip)
9d02(2): test %eax,%eax
9d04(4): mov (%rsp),%rdx
9d08(2): jle 0x18(%rip)
9d0a(3): mov %rbx,(%r15)
9d0d(6): mov $0x1,%r12d
9d13(4): mov %r14,0x0(%r13)
9d17(2): jmp 0xffffffc1(%rip)
9d19(7): nop 0x0(%rax)
9d20(4): add $0x1,%r12
9d24(5): cmp 0x20(%rsp),%r12
9d29(2): jb 0xffffffaf(%rip)
9d2b(3): mov %rbp,%rbx
9d2e(3): mov %rdx,%rbp
9d31(8): lea 0x80(%rsp),%rax
9d39(9): mov $0x0,0x68(%rsp)
9d42(9): mov $0x0,0x38(%rsp)
9d4b(5): mov %rax,0x70(%rsp)
9d50(4): lea 0xfffffff8(%rbx),%rax
9d54(5): mov %rax,0x40(%rsp)
9d59(7): nop 0x0(%rax)
9d60(3): mov (%rbx),%rax
9d63(7): cmp $0x0,0x2106cf(%rip)
9d6a(8): lea 0x0(,%rax,8),%r15
9d72(4): mov %rax,(%rsp)
9d76(5): lea 0x0(%rbp,%r15,1),%r13
9d7b(4): mov 0x0(%r13),%r14
9d7f(6): jz 0x199(%rip)
9d85(5): mov 0x38(%rsp),%rax
9d8a(3): test %rax,%rax
9d8d(6): jz 0x1b7(%rip)
9d93(3): mov %r14,%rsi
9d96(3): mov %rax,%rdi
9d99(5): call 0xffffe947(%rip)
9d9e(2): test %eax,%eax
9da0(6): jnz 0x190(%rip)
9da6(5): mov 0x10(%rsp),%rax
9dab(4): lea 0x0(%rax,%r15,1),%r10
9daf(3): cmp %r14,(%r10)
9db2(6): jnb 0xce(%rip)
9db8(4): sub $0x20,%r14
9dbc(4): mov %r14,0x0(%r13)
9dc0(5): mov 0x20(%rsp),%r14
9dc5(4): cmp $0x1,%r14
9dc9(6): jz 0x13c(%rip)
9dcf(4): mov 0x0(%r13),%rax
9dd3(6): mov $0x1,%r15d
9dd9(6): mov $0x1,%r13d
9ddf(5): mov %rax,0x8(%rsp)
9de4(3): mov %rbp,%rax
9de7(3): mov %r15,%rbp
9dea(3): mov %r14,%r15
9ded(3): mov %rax,%r14
9df0(2): jmp 0x23(%rip)
9df2(6): nop 0x0(%rax,%rax,1)
9df8(4): cmp %r12,(%rsp)
9dfc(2): jnb 0x6(%rip)
9dfe(2): test %eax,%eax
9e00(2): jz 0x29(%rip)
9e02(4): lea 0x1(%r13),%rbp
9e06(5): lea 0x0(%rbp,%r15,1),%r13
9e0b(3): shr $0x1,%r13
9e0e(3): cmp %r15,%rbp
9e11(2): jnb 0x28(%rip)
9e13(4): mov 0x0(%rbx,%r13,8),%r12
9e17(5): mov 0x8(%rsp),%rdi
9e1c(4): mov 0x0(%r14,%r12,8),%rsi
9e20(5): call 0xffffe8c0(%rip)
9e25(2): test %eax,%eax
9e27(2): jns 0xffffffd1(%rip)
9e29(3): mov %r13,%r15
9e2c(5): lea 0x0(%rbp,%r15,1),%r13
9e31(3): shr $0x1,%r13
9e34(3): cmp %r15,%rbp
9e37(2): jb 0xffffffdc(%rip)
9e39(3): mov %rbp,%r15
9e3c(3): mov %r14,%rbp
9e3f(4): lea 0xffffffff(%r15),%rax
9e43(3): test %rax,%rax
9e46(4): lea 0x0(%rbx,%rax,8),%rsi
9e4a(2): jz 0x27(%rip)
9e4c(5): mov 0x40(%rsp),%rdi
9e51(3): mov %rbx,%rax
9e54(4): lea 0x0(%rdi,%r15,8),%rcx
9e58(8): nop 0x0(%rax,%rax,1)
9e60(4): mov 0x8(%rax),%rdx
9e64(4): add $0x8,%rax
9e68(4): mov %rdx,0xfffffff8(%rax)
9e6c(3): cmp %rcx,%rax
9e6f(2): jnz 0xfffffff1(%rip)
9e71(4): mov (%rsp),%rax
9e75(3): mov %rax,(%rsi)
9e78(5): jmp 0xfffffee8(%rip)
9e7d(3): nop (%rax)
9e80(4): mov (%rsp),%rax
9e84(5): mov 0x18(%rsp),%rcx
9e89(5): mov %r10,0x48(%rsp)
9e8e(3): mov %rax,%rdi
9e91(3): mov %rax,%r14
9e94(8): lea 0x0(,%rax,8),%rax
9e9c(4): shl/sal $0x4,%r14
9ea0(5): add 0x30(%rsp),%r14
9ea5(3): add %r15,%rcx
9ea8(3): sub %rdi,%rax
9eab(5): mov 0x28(%rsp),%rdi
9eb0(3): mov (%rcx),%rsi
9eb3(5): mov %rcx,0x8(%rsp)
9eb8(4): lea 0x0(%rdi,%rax,8),%r15
9ebc(3): mov (%r14),%rdx
9ebf(3): mov %r15,%rdi
9ec2(5): call 0xfffff84e(%rip)
9ec7(2): test %al,%al
9ec9(5): mov 0x8(%rsp),%rcx
9ece(5): mov 0x48(%rsp),%r10
9ed3(6): jz 0x1ed(%rip)
9ed9(4): mov 0x18(%r15),%rax
9edd(3): add (%r15),%rax
9ee0(5): mov 0x20(%rsp),%r14
9ee5(4): lea 0xffffffe0(%rax),%rdx
9ee9(4): mov %rdx,0x0(%r13)
9eed(4): mov 0x10(%r15),%rdx
9ef1(4): shl/sal $0x5,%rdx
9ef5(3): sub %rdx,%rax
9ef8(4): cmp $0x1,%r14
9efc(3): mov %rax,(%r10)
9eff(6): jnz 0xfffffed0(%rip)
9f05(4): mov (%rsp),%rax
9f09(3): mov %rbx,%rsi
9f0c(3): mov %rax,(%rsi)
9f0f(5): jmp 0xfffffe51(%rip)
9f14(4): nop 0x0(%rax)
9f18(5): mov 0x58(%rsp),%rdx
9f1d(5): mov 0x50(%rsp),%rsi
9f22(3): mov %r14,%rdi
9f25(5): call 0xffffd35b(%rip)
9f2a(5): jmp 0xfffffe7c(%rip)
9f2f(1): nop 
9f30(5): mov 0x58(%rsp),%rdx
9f35(5): mov 0x50(%rsp),%rsi
9f3a(5): mov 0x70(%rsp),%rdi
9f3f(5): call 0xffffd341(%rip)
9f44(4): mov 0x8(%r14),%rdx
9f48(5): cmp 0x68(%rsp),%rdx
9f4d(8): mov 0x80(%rsp),%rdi
9f55(6): jnbe 0x2db(%rip)
9f5b(3): mov (%r14),%rsi
9f5e(8): mov %rdx,0x88(%rsp)
9f66(5): call 0xffff8f1a(%rip)
9f6b(6): cmp $0x0,0x78(%rsp)
9f71(5): mov 0x70(%rsp),%rcx
9f76(5): mov %rcx,0x38(%rsp)
9f7b(6): jz 0xfffffe2b(%rip)
9f81(4): mov 0x10(%r14),%rdx
9f85(8): mov 0x80(%rsp),%rax
9f8d(3): mov (%r14),%rsi
9f90(3): add %rax,%rdx
9f93(4): add 0x18(%r14),%rax
9f97(3): sub %rsi,%rdx
9f9a(8): mov %rdx,0x90(%rsp)
9fa2(3): sub %rsi,%rax
9fa5(8): mov %rax,0x98(%rsp)
9fad(5): jmp 0xfffffdf9(%rip)
9fb2(6): nop 0x0(%rax,%rax,1)
9fb8(4): mov (%r12),%rsi
9fbc(4): mov 0x0(%rbp),%rdi
9fc0(5): call 0xffffd230(%rip)
9fc5(5): cmp %r14,0x60(%rsp)
9fca(6): jnbe 0x2c6(%rip)
9fd0(3): mov (%r15),%rdi
9fd3(5): call 0xffff91ed(%rip)
9fd8(4): lea 0xffffffff(%rbx),%rsi
9fdc(3): cmp %r14,%rsi
9fdf(6): jbe 0x2dc(%rip)
9fe5(5): mov 0x18(%rsp),%rdi
9fea(5): mov 0x8(%rsp),%rcx
9fef(4): shl/sal $0x4,%rbx
9ff3(3): mov %r12,%rax
9ff6(5): lea 0x8(%rdi,%r13,1),%rdx
9ffb(3): add %rbx,%rcx
9ffe(2): nop 
a000(5): movdqu 0x10(%rax),%xmm0
a005(4): add $0x10,%rax
a009(4): add $0x8,%rdx
a00d(4): mov 0xfffffff8(%rdx),%rdi
a011(4): movups %xmm0,0xfffffff0(%rax)
a015(4): mov %rdi,0xfffffff0(%rdx)
a019(3): cmp %rax,%rcx
a01c(2): jnz 0xffffffe4(%rip)
a01e(3): mov %rsi,%rbx
a021(5): jmp 0xfffffbcf(%rip)
a026(6): cmp $0x0,0x38(%rsp)
a02c(2): jz 0x2f(%rip)
a02e(7): cmp $0x0,0x210404(%rip)
a035(2): jz 0x26(%rip)
a037(5): mov 0x58(%rsp),%rdx
a03c(5): mov 0x50(%rsp),%rsi
a041(8): lea 0x80(%rsp),%rdi
a049(5): call 0xffffd237(%rip)
a04e(8): mov 0x80(%rsp),%rdi
a056(5): call 0xffff916a(%rip)
a05b(5): mov 0x58(%rsp),%rsi
a060(5): mov 0x50(%rsp),%rdi
a065(5): call 0xffffd18b(%rip)
a06a(5): mov 0x18(%rsp),%rdi
a06f(5): call 0xffff9151(%rip)
a074(5): mov 0x28(%rsp),%rdi
a079(5): call 0xffff9147(%rip)
a07e(3): mov %rbx,%rdi
a081(5): call 0xffff913f(%rip)
a086(5): mov 0x10(%rsp),%rdi
a08b(5): call 0xffff9135(%rip)
a090(8): mov 0xa8(%rsp),%rax
a098(9): xor $0x28,%rax
a0a1(6): jnz 0x230(%rip)
a0a7(7): add $0xb8,%rsp
a0ae(3): mov %rbp,%rdi
a0b1(1): pop %rbx
a0b2(1): pop %rbp
a0b3(2): pop %r12
a0b5(2): pop %r13
a0b7(2): pop %r14
a0b9(2): pop %r15
a0bb(5): jmp 0xffff9105(%rip)
a0c0(6): cmp $0x1,0x20(%rsp)
a0c6(2): jz 0x61(%rip)
a0c8(5): mov 0x20(%rsp),%rdi
a0cd(4): mov (%rsp),%rsi
a0d1(4): lea 0x8(%rbx),%rax
a0d5(4): lea 0x0(%rbx,%rdi,8),%rcx
a0d9(7): nop 0x0(%rax)
a0e0(3): mov (%rax),%rdx
a0e3(3): cmp %rsi,%rdx
a0e6(2): jbe 0xc(%rip)
a0e8(4): sub $0x1,%rdx
a0ec(3): mov %rdx,(%rax)
a0ef(3): mov (%rbx),%rsi
a0f2(4): add $0x8,%rax
a0f6(3): cmp %rax,%rcx
a0f9(2): jnz 0xffffffe7(%rip)
a0fb(5): mov 0x18(%rsp),%rcx
a100(8): lea 0x0(,%rsi,8),%rax
a108(3): mov %rsi,%r14
a10b(5): mov 0x28(%rsp),%rdi
a110(4): shl/sal $0x4,%r14
a114(5): add 0x30(%rsp),%r14
a119(4): mov %rsi,(%rsp)
a11d(3): add %rax,%rcx
a120(3): sub %rsi,%rax
a123(4): lea 0x0(%rdi,%rax,8),%r15
a127(5): mov 0x20(%rsp),%rax
a12c(3): mov (%rcx),%rdi
a12f(3): mov (%r14),%rsi
a132(4): lea 0xffffffff(%rax),%r13
a136(5): call 0xffffd0ba(%rip)
a13b(4): mov (%rsp),%rdi
a13f(5): cmp %rdi,0x60(%rsp)
a144(6): jnbe 0x164(%rip)
a14a(3): mov (%r15),%rdi
a14d(5): call 0xffff9073(%rip)
a152(4): mov (%rsp),%rcx
a156(3): cmp %rcx,%r13
a159(6): jbe 0x9c(%rip)
a15f(8): lea 0x0(,%rcx,8),%rax
a167(5): mov 0x28(%rsp),%rdi
a16c(5): mov 0x18(%rsp),%r8
a171(3): sub %rcx,%rax
a174(4): lea 0x0(%rdi,%rax,8),%rdx
a178(5): mov 0x20(%rsp),%rdi
a17d(8): lea 0x8(,%rcx,8),%rax
a185(5): mov 0x10(%rsp),%rcx
a18a(8): lea 0x0(,%rdi,8),%rsi
a192(5): mov 0x30(%rsp),%rdi
a197(9): nop 0x0(%rax,%rax,1)
a1a0(4): mov 0x0(%r8,%rax,1),%r9
a1a4(4): add $0x38,%rdx
a1a8(5): movdqu 0x0(%rdi,%rax,2),%xmm0
a1ad(5): mov %r9,0xfffffff8(%r8,%rax,1)
a1b2(4): mov 0x30(%rdx),%r9
a1b6(5): movups %xmm0,0xfffffff0(%rdi,%rax,2)
a1bb(4): mov %r9,0xfffffff8(%rdx)
a1bf(5): mov 0x0(%rbp,%rax,1),%r9
a1c4(4): movdqu (%rdx),%xmm0
a1c8(5): mov %r9,0xfffffff8(%rbp,%rax,1)
a1cd(4): mov 0x0(%rcx,%rax,1),%r9
a1d1(4): movups %xmm0,0xffffffc8(%rdx)
a1d5(5): movdqu 0x10(%rdx),%xmm0
a1da(5): mov %r9,0xfffffff8(%rcx,%rax,1)
a1df(4): add $0x8,%rax
a1e3(4): movups %xmm0,0xffffffd8(%rdx)
a1e7(5): movdqu 0x20(%rdx),%xmm0
a1ec(4): movups %xmm0,0xffffffe8(%rdx)
a1f0(3): cmp %rax,%rsi
a1f3(2): jnz 0xffffffad(%rip)
a1f5(3): test %r13,%r13
a1f8(6): jz 0xfffffe2e(%rip)
a1fe(5): mov 0x40(%rsp),%rdi
a203(5): mov 0x20(%rsp),%rcx
a208(3): mov %rbx,%rax
a20b(4): lea 0x0(%rdi,%rcx,8),%rcx
a20f(1): nop 
a210(4): mov 0x8(%rax),%rdx
a214(4): add $0x8,%rax
a218(4): mov %rdx,0xfffffff8(%rax)
a21c(3): cmp %rax,%rcx
a21f(2): jnz 0xfffffff1(%rip)
a221(5): mov %r13,0x20(%rsp)
a226(5): jmp 0xfffffb3a(%rip)
a22b(5): nop 0x0(%rax,%rax,1)
a230(5): mov 0x68(%rsp),%rax
a235(3): test %rax,%rax
a238(2): jz 0x10(%rip)
a23a(3): mov %rax,%rsi
a23d(3): add %rsi,%rsi
a240(3): cmp %rsi,%rdx
a243(2): jnbe 0x45(%rip)
a245(3): mov %rsi,%rdx
a248(5): mov %rdx,0x8(%rsp)
a24d(5): call 0xffff8f73(%rip)
a252(5): mov 0x8(%rsp),%rdx
a257(3): mov %rdx,%rdi
a25a(5): call 0x7b86(%rip)
a25f(5): mov 0x8(%rsp),%rdx
a264(3): mov %rax,%rdi
a267(8): mov %rax,0x80(%rsp)
a26f(5): mov %rdx,0x68(%rsp)
a274(4): mov 0x8(%r14),%rdx
a278(5): jmp 0xfffffce3(%rip)
a27d(3): nop (%rax)
a280(3): add %rsi,%rsi
a283(3): cmp %rsi,%rdx
a286(2): jbe 0xffffffbf(%rip)
a288(3): test %rsi,%rsi
a28b(2): jnz 0xfffffff5(%rip)
a28d(2): jmp 0xffffffbb(%rip)
a28f(1): nop 
a290(4): mov (%r12),%rdi
a294(6): sub $0x1,0x60(%rsp)
a29a(5): call 0xffffc9d6(%rip)
a29f(5): jmp 0xfffffd31(%rip)
a2a4(4): nop 0x0(%rax)
a2a8(3): mov (%r14),%rdi
a2ab(6): sub $0x1,0x60(%rsp)
a2b1(5): call 0xffffc9bf(%rip)
a2b6(5): jmp 0xfffffe94(%rip)
a2bb(5): mov 0x20(%rsp),%rbx
a2c0(4): mov (%rsp),%rbp
a2c4(3): mov %rsi,%r15
a2c7(5): jmp 0xfffff9d8(%rip)
a2cc(5): call 0x7d64(%rip)
a2d1(5): call 0xffff89cf(%rip)
a2d6(5): mov $0x1,%ecx
a2db(5): jmp 0xfffff858(%rip)
a2e0(5): mov $0x1,%ecx
a2e5(5): jmp 0xfffff88c(%rip)

"mergefiles" :
a2f0(2): push %r15
a2f2(2): push %r14
a2f4(3): mov %r8,%r15
a2f7(2): push %r13
a2f9(2): push %r12
a2fb(3): mov %rdx,%r12
a2fe(1): push %rbp
a2ff(1): push %rbx
a300(3): mov %rsi,%r13
a303(3): mov %r12,%rsi
a306(3): mov %rdi,%rbp
a309(3): mov %rcx,%r14
a30c(4): sub $0x18,%rsp
a310(3): mov %rsp,%rdx
a313(9): mov $0x28,%rax
a31c(5): mov %rax,0x8(%rsp)
a321(2): xor %eax,%eax
a323(5): call 0xffffe74d(%rip)
a328(3): cmp %rax,%r12
a32b(3): mov %rax,%rbx
a32e(2): jbe 0x8(%rip)
a330(4): cmp $0x1,%rax
a334(2): jbe 0x3c(%rip)
a336(4): mov (%rsp),%r9
a33a(3): mov %r14,%rcx
a33d(3): mov %r15,%r8
a340(3): mov %rbx,%rdx
a343(3): mov %r13,%rsi
a346(3): mov %rbp,%rdi
a349(5): call 0xfffff797(%rip)
a34e(5): mov 0x8(%rsp),%rcx
a353(9): xor $0x28,%rcx
a35c(3): mov %rbx,%rax
a35f(2): jnz 0x38(%rip)
a361(4): add $0x18,%rsp
a365(1): pop %rbx
a366(1): pop %rbp
a367(2): pop %r12
a369(2): pop %r13
a36b(2): pop %r14
a36d(2): pop %r15
a36f(1): ret near (%rsp)
a370(4): shl/sal $0x4,%rbx
a374(7): lea 0xb124(%rip),%rsi
a37b(2): xor %edi,%edi
a37d(5): mov 0x0(%rbp,%rbx,1),%rbx
a382(5): mov $0x5,%edx
a387(5): call 0xffff88e9(%rip)
a38c(3): mov %rax,%rdi
a38f(3): mov %rbx,%rsi
a392(5): call 0xffffbf8e(%rip)
a397(5): call 0xffff8909(%rip)

"merge" :
a3a0(2): push %r15
a3a2(2): push %r14
a3a4(3): mov %rdi,%r14
a3a7(2): push %r13
a3a9(2): push %r12
a3ab(1): push %rbp
a3ac(1): push %rbx
a3ad(3): mov %rsi,%rbp
a3b0(7): sub $0xf8,%rsp
a3b7(5): mov %rcx,0x30(%rsp)
a3bc(6): mov 0x20fc62(%rip),%ecx
a3c2(9): mov $0x28,%rax
a3cb(8): mov %rax,0xe8(%rsp)
a3d3(2): xor %eax,%eax
a3d5(5): lea 0x48(%rsp),%rax
a3da(5): mov %rdx,0x8(%rsp)
a3df(3): cmp %rcx,%rdx
a3e2(5): mov %rax,0x10(%rsp)
a3e7(6): jbe 0x171(%rip)
a3ed(3): xor %r12d,%r12d
a3f0(2): xor %ebx,%ebx
a3f2(5): cmp %rcx,0x8(%rsp)
a3f7(6): jb 0x450(%rip)
a3fd(3): nop (%rax)
a400(5): mov 0x10(%rsp),%rdi
a405(2): xor %esi,%esi
a407(5): call 0xffffe8f9(%rip)
a40c(6): mov 0x20fc12(%rip),%edx
a412(4): lea 0xd(%rax),%r13
a416(3): mov %rbp,%rsi
a419(3): mov %rbx,%rdi
a41c(5): mov 0x48(%rsp),%rcx
a421(3): mov %rax,%r15
a424(3): mov %r13,%r8
a427(3): cmp %rbp,%rdx
a42a(4): cmovbe %rdx,%rsi
a42e(4): shl/sal $0x4,%rdi
a432(3): add %r14,%rdi
a435(5): call 0xfffffebb(%rip)
a43a(6): mov 0x20fbe4(%rip),%ecx
a440(5): mov 0x8(%rsp),%rsi
a445(3): cmp %rbp,%rax
a448(3): mov %rbp,%rdx
a44b(4): cmovbe %rax,%rdx
a44f(3): add %rax,%rbx
a452(3): sub %rdx,%rbp
a455(3): sub %rbx,%rsi
a458(3): mov %r12,%rdx
a45b(4): shl/sal $0x4,%rdx
a45f(4): add $0x1,%r12
a463(3): cmp %rsi,%rcx
a466(4): mov %r13,0x0(%r14,%rdx,1)
a46a(5): mov %r15,0x8(%r14,%rdx,1)
a46f(2): jbe 0xffffff91(%rip)
a471(3): mov %r12,%rax
a474(2): xor %edx,%edx
a476(3): mov %r12,%r9
a479(3): div %rcx,%rax
a47c(3): mov %rbx,%r10
a47f(4): shl/sal $0x4,%r9
a483(4): shl/sal $0x4,%r10
a487(3): add %r14,%r9
a48a(3): add %r14,%r10
a48d(3): sub %rdx,%rcx
a490(3): cmp %rsi,%rcx
a493(6): jnb 0x8e(%rip)
a499(4): lea 0x1(%rsi),%rdx
a49d(5): mov 0x10(%rsp),%rdi
a4a2(2): xor %esi,%esi
a4a4(5): mov %r9,0x38(%rsp)
a4a9(5): mov %r10,0x28(%rsp)
a4ae(3): sub %rcx,%rdx
a4b1(5): mov %rdx,0x20(%rsp)
a4b6(5): call 0xffffe84a(%rip)
a4bb(5): mov 0x20(%rsp),%rdx
a4c0(5): mov 0x28(%rsp),%r10
a4c5(4): lea 0xd(%rax),%r15
a4c9(5): mov 0x48(%rsp),%rcx
a4ce(3): mov %rbp,%rsi
a4d1(5): mov %rax,0x18(%rsp)
a4d6(3): mov %r15,%r8
a4d9(3): cmp %rbp,%rdx
a4dc(3): mov %r10,%rdi
a4df(4): cmovbe %rdx,%rsi
a4e3(5): call 0xfffffe0d(%rip)
a4e8(5): mov 0x38(%rsp),%r9
a4ed(5): mov 0x18(%rsp),%r11
a4f2(3): cmp %rbp,%rax
a4f5(3): mov %rbp,%rdx
a4f8(4): cmovbe %rax,%rdx
a4fc(4): add $0x1,%r12
a500(3): add %rax,%rbx
a503(3): mov %r15,(%r9)
a506(4): mov %r11,0x8(%r9)
a50a(3): mov %rbx,%r10
a50d(3): mov %r12,%r9
a510(4): shl/sal $0x4,%r10
a514(3): sub %rdx,%rbp
a517(4): shl/sal $0x4,%r9
a51b(3): add %r14,%r10
a51e(3): add %r14,%r9
a521(5): mov 0x8(%rsp),%r15
a526(3): mov %r10,%rsi
a529(3): mov %r9,%rdi
a52c(3): add %r12,%rbp
a52f(3): sub %rbx,%r12
a532(3): mov %r15,%rdx
a535(3): add %r12,%r15
a538(3): sub %rbx,%rdx
a53b(4): shl/sal $0x4,%rdx
a53f(5): call 0xffff8a81(%rip)
a544(6): mov 0x20fada(%rip),%ecx
a54a(5): mov %r15,0x8(%rsp)
a54f(3): cmp %r15,%rcx
a552(6): jb 0xfffffe9b(%rip)
a558(5): mov 0x8(%rsp),%rax
a55d(3): cmp %rbp,%rax
a560(6): jbe 0x12d(%rip)
a566(3): sub %rbp,%rax
a569(3): mov %rbp,%rbx
a56c(3): xor %r13d,%r13d
a56f(5): mov %rax,0x10(%rsp)
a574(5): lea 0x50(%rsp),%rax
a579(4): shl/sal $0x4,%rbx
a57d(3): add %r14,%rbx
a580(3): xor %r15d,%r15d
a583(5): mov %r14,0x20(%rsp)
a588(5): mov %rax,0x18(%rsp)
a58d(5): lea 0x48(%rsp),%rax
a592(5): mov %rbp,0x28(%rsp)
a597(5): mov 0x30(%rsp),%r12
a59c(5): mov %rax,0x38(%rsp)
a5a1(2): jmp 0x4e(%rip)
a5a3(2): test %ebp,%ebp
a5a5(6): jnz 0xb7(%rip)
a5ab(5): call 0xffffbdd5(%rip)
a5b0(3): test %rax,%rax
a5b3(3): mov %rax,%r14
a5b6(6): jz 0xcd(%rip)
a5bc(5): mov 0x18(%rsp),%rdx
a5c1(2): xor %esi,%esi
a5c3(5): mov $0x1,%edi
a5c8(5): call 0xffff8958(%rip)
a5cd(2): test %eax,%eax
a5cf(2): jnz 0xd(%rip)
a5d1(4): mov 0x8(%r14),%rax
a5d5(5): cmp %rax,0x58(%rsp)
a5da(2): jz 0x78(%rip)
a5dc(4): add $0x1,%r13
a5e0(4): add $0x10,%rbx
a5e4(5): cmp %r13,0x10(%rsp)
a5e9(6): jz 0x9a(%rip)
a5ef(3): mov (%rbx),%rax
a5f2(7): lea 0xc041(%rip),%rdi
a5f9(5): mov $0x2,%ecx
a5fe(3): mov %rax,%rsi
a601(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a603(3): setnbe %dl
a606(3): sbb $0x0,%dl
a609(3): test %r12,%r12
a60c(3): movsx %dl,%ebp
a60f(2): jz 0x11(%rip)
a611(3): mov %rax,%rsi
a614(3): mov %r12,%rdi
a617(5): call 0xffff8829(%rip)
a61c(2): test %eax,%eax
a61e(2): jz 0xffffff85(%rip)
a620(5): call 0xffffbd60(%rip)
a625(3): test %rax,%rax
a628(3): mov %rax,%r14
a62b(2): jz 0x58(%rip)
a62d(2): test %ebp,%ebp
a62f(2): jz 0xffffff8d(%rip)
a631(5): mov 0x18(%rsp),%rdx
a636(3): mov (%rbx),%rsi
a639(5): mov $0x1,%edi
a63e(5): call 0xffff8882(%rip)
a643(2): test %eax,%eax
a645(2): jnz 0xffffff97(%rip)
a647(4): mov 0x8(%r14),%rax
a64b(5): cmp %rax,0x58(%rsp)
a650(2): jnz 0xffffff8c(%rip)
a652(3): mov (%r14),%rax
a655(5): cmp %rax,0x50(%rsp)
a65a(2): jnz 0xffffff82(%rip)
a65c(3): test %r15,%r15
a65f(4): lea 0xd(%r15),%r14
a663(6): jz 0x1f6(%rip)
a669(3): mov %r14,(%rbx)
a66c(4): mov %r15,0x8(%rbx)
a670(4): add $0x1,%r13
a674(4): add $0x10,%rbx
a678(5): cmp %r13,0x10(%rsp)
a67d(6): jnz 0xffffff72(%rip)
a683(5): mov 0x20(%rsp),%r14
a688(5): mov 0x28(%rsp),%rbp
a68d(5): lea 0x40(%rsp),%rax
a692(5): lea 0x48(%rsp),%r15
a697(5): mov %rbp,0x10(%rsp)
a69c(5): mov %rax,0x28(%rsp)
a6a1(7): nop 0x0(%rax)
a6a8(5): mov 0x8(%rsp),%rbp
a6ad(5): mov 0x28(%rsp),%rdx
a6b2(3): mov %r14,%rdi
a6b5(3): mov %rbp,%rsi
a6b8(5): call 0xffffe3b8(%rip)
a6bd(3): mov %rax,%rbx
a6c0(3): cmp %rbx,%rbp
a6c3(6): jz 0xed(%rip)
a6c9(4): cmp $0x2,%rbx
a6cd(6): jbe 0x1bb(%rip)
a6d3(3): mov %rbx,%rax
a6d6(8): lea 0xfffffff8(,%rbx,8),%r13
a6de(4): shl/sal $0x4,%rax
a6e2(5): lea 0xfffffff0(%r14,%rax,1),%rbp
a6e7(9): nop 0x0(%rax,%rax,1)
a6f0(5): mov 0x40(%rsp),%rax
a6f5(4): mov 0x0(%rbp),%rsi
a6f9(4): sub $0x1,%rbx
a6fd(3): mov %rbp,%r12
a700(4): mov 0x0(%rax,%r13,1),%rdi
a704(5): call 0xffffcaec(%rip)
a709(2): xor %esi,%esi
a70b(4): cmp $0x2,%rbx
a70f(3): mov %r15,%rdi
a712(4): setnbe %sil
a716(4): sub $0x10,%rbp
a71a(4): sub $0x8,%r13
a71e(5): call 0xffffe5e2(%rip)
a723(3): test %rax,%rax
a726(2): jz 0xffffffca(%rip)
a728(5): mov 0x10(%rsp),%rbp
a72d(4): lea 0xd(%rax),%r11
a731(5): mov 0x40(%rsp),%r9
a736(5): mov 0x48(%rsp),%rcx
a73b(3): mov %rbx,%rdx
a73e(3): mov %r14,%rdi
a741(3): mov %r11,%r8
a744(5): mov %rax,0x20(%rsp)
a749(5): mov %r11,0x18(%rsp)
a74e(3): cmp %rbx,%rbp
a751(3): mov %rbp,%r10
a754(4): cmovnbe %rbx,%r10
a758(3): mov %r10,%rsi
a75b(5): mov %r10,0x10(%rsp)
a760(5): call 0xfffff380(%rip)
a765(5): mov 0x8(%rsp),%r13
a76a(5): mov 0x18(%rsp),%r11
a76f(4): lea 0x10(%r14),%rdi
a773(5): mov 0x20(%rsp),%rax
a778(3): mov %r12,%rsi
a77b(3): sub %rbx,%r13
a77e(3): mov %r11,(%r14)
a781(3): mov %r13,%rdx
a784(4): mov %rax,0x8(%r14)
a788(4): shl/sal $0x4,%rdx
a78c(5): call 0xffff8834(%rip)
a791(5): mov 0x10(%rsp),%r10
a796(3): sub %r10,%rbp
a799(4): lea 0x1(%rbp),%rax
a79d(5): mov %rax,0x10(%rsp)
a7a2(4): lea 0x1(%r13),%rax
a7a6(5): mov %rax,0x8(%rsp)
a7ab(5): jmp 0xfffffefd(%rip)
a7b0(5): mov 0x30(%rsp),%rdi
a7b5(7): lea 0xad2e(%rip),%rsi
a7bc(5): call 0xffffc8f4(%rip)
a7c1(3): test %rax,%rax
a7c4(2): jnz 0x3c(%rip)
a7c6(5): call 0xffff834a(%rip)
a7cb(3): cmp $0x18,(%rax)
a7ce(2): jnz 0xe(%rip)
a7d0(6): cmp $0x2,0x8(%rsp)
a7d6(6): jnbe 0xfffffefd(%rip)
a7dc(7): lea 0xacbc(%rip),%rsi
a7e3(2): xor %edi,%edi
a7e5(5): mov $0x5,%edx
a7ea(5): call 0xffff8486(%rip)
a7ef(5): mov 0x30(%rsp),%rsi
a7f4(3): mov %rax,%rdi
a7f7(5): call 0xffffbb29(%rip)
a7fc(4): nop 0x0(%rax)
a800(5): mov 0x10(%rsp),%rbp
a805(5): mov 0x40(%rsp),%r9
a80a(3): mov %rax,%rcx
a80d(5): mov 0x30(%rsp),%r8
a812(5): mov 0x8(%rsp),%rdx
a817(3): mov %r14,%rdi
a81a(3): mov %rbp,%rsi
a81d(5): call 0xfffff2c3(%rip)
a822(8): mov 0xe8(%rsp),%rax
a82a(9): xor $0x28,%rax
a833(2): jnz 0x7b(%rip)
a835(7): add $0xf8,%rsp
a83c(1): pop %rbx
a83d(1): pop %rbp
a83e(2): pop %r12
a840(2): pop %r13
a842(2): pop %r14
a844(2): pop %r15
a846(1): ret near (%rsp)
a847(3): mov %r14,%r9
a84a(3): mov %r14,%r10
a84d(5): mov 0x8(%rsp),%rsi
a852(2): xor %edx,%edx
a854(5): jmp 0xfffffc39(%rip)
a859(5): mov 0x38(%rsp),%rdi
a85e(2): xor %esi,%esi
a860(5): call 0xffffe4a0(%rip)
a865(5): mov 0x48(%rsp),%rcx
a86a(4): lea 0xd(%rax),%r14
a86e(5): mov $0x1,%edx
a873(2): xor %esi,%esi
a875(3): mov %rbx,%rdi
a878(3): mov %rax,%r15
a87b(3): mov %r14,%r8
a87e(5): call 0xfffffa72(%rip)
a883(5): jmp 0xfffffde6(%rip)
a888(4): shl/sal $0x4,%rbx
a88c(7): lea 0xac0c(%rip),%rsi
a893(2): xor %edi,%edi
a895(4): mov 0x0(%r14,%rbx,1),%rbx
a899(5): mov $0x5,%edx
a89e(5): call 0xffff83d2(%rip)
a8a3(3): mov %rax,%rdi
a8a6(3): mov %rbx,%rsi
a8a9(5): call 0xffffba77(%rip)
a8ae(5): call 0xffff83f2(%rip)

"usage" :
a8c0(2): push %r13
a8c2(2): push %r12
a8c4(5): mov $0x5,%edx
a8c9(1): push %rbp
a8ca(1): push %rbx
a8cb(2): mov %edi,%ebp
a8cd(7): sub $0x88,%rsp
a8d4(7): mov 0x20ffcd(%rip),%rbx
a8db(9): mov $0x28,%rax
a8e4(5): mov %rax,0x78(%rsp)
a8e9(2): xor %eax,%eax
a8eb(2): test %edi,%edi
a8ed(2): jz 0x30(%rip)
a8ef(7): lea 0x97b2(%rip),%rsi
a8f6(2): xor %edi,%edi
a8f8(5): call 0xffff8378(%rip)
a8fd(7): mov 0x20f8fc(%rip),%rdi
a904(3): mov %rax,%rdx
a907(3): mov %rbx,%rcx
a90a(5): mov $0x1,%esi
a90f(2): xor %eax,%eax
a911(5): call 0xffff87ef(%rip)
a916(2): mov %ebp,%edi
a918(5): call 0xffff87c8(%rip)
a91d(7): lea 0x97ac(%rip),%rsi
a924(2): xor %edi,%edi
a926(5): call 0xffff834a(%rip)
a92b(3): mov %rbx,%rcx
a92e(3): mov %rbx,%rdx
a931(3): mov %rax,%rsi
a934(5): mov $0x1,%edi
a939(2): xor %eax,%eax
a93b(5): call 0xffff8665(%rip)
a940(7): mov 0x20f881(%rip),%rbx
a947(7): lea 0x97ca(%rip),%rsi
a94e(5): mov $0x5,%edx
a953(2): xor %edi,%edi
a955(5): call 0xffff831b(%rip)
a95a(3): mov %rbx,%rsi
a95d(3): mov %rax,%rdi
a960(5): call 0xffff84b0(%rip)
a965(7): mov 0x20f85c(%rip),%rbx
a96c(7): lea 0x97e5(%rip),%rsi
a973(5): mov $0x5,%edx
a978(2): xor %edi,%edi
a97a(5): call 0xffff82f6(%rip)
a97f(3): mov %rbx,%rsi
a982(3): mov %rax,%rdi
a985(5): call 0xffff848b(%rip)
a98a(7): mov 0x20f837(%rip),%rbx
a991(7): lea 0x97f8(%rip),%rsi
a998(5): mov $0x5,%edx
a99d(2): xor %edi,%edi
a99f(5): call 0xffff82d1(%rip)
a9a4(3): mov %rbx,%rsi
a9a7(3): mov %rax,%rdi
a9aa(5): call 0xffff8466(%rip)
a9af(7): mov 0x20f812(%rip),%rbx
a9b6(7): lea 0xab3b(%rip),%rsi
a9bd(5): mov $0x5,%edx
a9c2(2): xor %edi,%edi
a9c4(5): call 0xffff82ac(%rip)
a9c9(3): mov %rbx,%rsi
a9cc(3): mov %rax,%rdi
a9cf(5): call 0xffff8441(%rip)
a9d4(7): mov 0x20f7ed(%rip),%rbx
a9db(7): lea 0x97fe(%rip),%rsi
a9e2(5): mov $0x5,%edx
a9e7(2): xor %edi,%edi
a9e9(5): call 0xffff8287(%rip)
a9ee(3): mov %rbx,%rsi
a9f1(3): mov %rax,%rdi
a9f4(5): call 0xffff841c(%rip)
a9f9(7): mov 0x20f7c8(%rip),%rbx
aa00(7): lea 0x98a9(%rip),%rsi
aa07(5): mov $0x5,%edx
aa0c(2): xor %edi,%edi
aa0e(5): call 0xffff8262(%rip)
aa13(3): mov %rbx,%rsi
aa16(3): mov %rax,%rdi
aa19(5): call 0xffff83f7(%rip)
aa1e(7): mov 0x20f7a3(%rip),%rbx
aa25(7): lea 0x995c(%rip),%rsi
aa2c(5): mov $0x5,%edx
aa31(2): xor %edi,%edi
aa33(5): call 0xffff823d(%rip)
aa38(3): mov %rbx,%rsi
aa3b(3): mov %rax,%rdi
aa3e(5): call 0xffff83d2(%rip)
aa43(7): mov 0x20f77e(%rip),%rbx
aa4a(7): lea 0x9987(%rip),%rsi
aa51(5): mov $0x5,%edx
aa56(2): xor %edi,%edi
aa58(5): call 0xffff8218(%rip)
aa5d(3): mov %rbx,%rsi
aa60(3): mov %rax,%rdi
aa63(5): call 0xffff83ad(%rip)
aa68(7): mov 0x20f759(%rip),%rbx
aa6f(7): lea 0x9a7a(%rip),%rsi
aa76(5): mov $0x5,%edx
aa7b(2): xor %edi,%edi
aa7d(5): call 0xffff81f3(%rip)
aa82(3): mov %rbx,%rsi
aa85(3): mov %rax,%rdi
aa88(5): call 0xffff8388(%rip)
aa8d(7): mov 0x20f734(%rip),%rbx
aa94(7): lea 0xaa71(%rip),%rsi
aa9b(5): mov $0x5,%edx
aaa0(2): xor %edi,%edi
aaa2(5): call 0xffff81ce(%rip)
aaa7(3): mov %rbx,%rsi
aaaa(3): mov %rax,%rdi
aaad(5): call 0xffff8363(%rip)
aab2(7): mov 0x20f70f(%rip),%rbx
aab9(7): lea 0x9b48(%rip),%rsi
aac0(5): mov $0x5,%edx
aac5(2): xor %edi,%edi
aac7(5): call 0xffff81a9(%rip)
aacc(3): mov %rbx,%rsi
aacf(3): mov %rax,%rdi
aad2(5): call 0xffff833e(%rip)
aad7(7): mov 0x20f6ea(%rip),%rbx
aade(7): lea 0x9b9b(%rip),%rsi
aae5(5): mov $0x5,%edx
aaea(2): xor %edi,%edi
aaec(5): call 0xffff8184(%rip)
aaf1(3): mov %rbx,%rsi
aaf4(3): mov %rax,%rdi
aaf7(5): call 0xffff8319(%rip)
aafc(7): mov 0x20f6c5(%rip),%rbx
ab03(7): lea 0x9c8e(%rip),%rsi
ab0a(5): mov $0x5,%edx
ab0f(2): xor %edi,%edi
ab11(5): call 0xffff815f(%rip)
ab16(3): mov %rbx,%rsi
ab19(3): mov %rax,%rdi
ab1c(5): call 0xffff82f4(%rip)
ab21(7): mov 0x20f6a0(%rip),%rbx
ab28(7): lea 0x9dc9(%rip),%rsi
ab2f(5): mov $0x5,%edx
ab34(2): xor %edi,%edi
ab36(5): call 0xffff813a(%rip)
ab3b(3): mov %rbx,%rsi
ab3e(3): mov %rax,%rdi
ab41(5): call 0xffff82cf(%rip)
ab46(7): mov 0x20f67b(%rip),%rbx
ab4d(7): lea 0x9e34(%rip),%rsi
ab54(5): mov $0x5,%edx
ab59(2): xor %edi,%edi
ab5b(5): call 0xffff8115(%rip)
ab60(3): mov %rbx,%rsi
ab63(3): mov %rax,%rdi
ab66(5): call 0xffff82aa(%rip)
ab6b(7): lea 0x9eee(%rip),%rsi
ab72(2): xor %edi,%edi
ab74(5): mov $0x5,%edx
ab79(5): call 0xffff80f7(%rip)
ab7e(7): lea 0xa998(%rip),%rdx
ab85(3): mov %rax,%rsi
ab88(5): mov $0x1,%edi
ab8d(2): xor %eax,%eax
ab8f(5): call 0xffff8411(%rip)
ab94(7): mov 0x20f62d(%rip),%rbx
ab9b(7): lea 0xa086(%rip),%rsi
aba2(5): mov $0x5,%edx
aba7(2): xor %edi,%edi
aba9(5): call 0xffff80c7(%rip)
abae(3): mov %rbx,%rsi
abb1(3): mov %rax,%rdi
abb4(5): call 0xffff825c(%rip)
abb9(7): mov 0x20f608(%rip),%rbx
abc0(7): lea 0xa0a1(%rip),%rsi
abc7(5): mov $0x5,%edx
abcc(2): xor %edi,%edi
abce(5): call 0xffff80a2(%rip)
abd3(3): mov %rbx,%rsi
abd6(3): mov %rax,%rdi
abd9(5): call 0xffff8237(%rip)
abde(7): mov 0x20f5e3(%rip),%rbx
abe5(7): lea 0xa0ac(%rip),%rsi
abec(5): mov $0x5,%edx
abf1(2): xor %edi,%edi
abf3(5): call 0xffff807d(%rip)
abf8(3): mov %rbx,%rsi
abfb(3): mov %rax,%rdi
abfe(5): call 0xffff8212(%rip)
ac03(7): mov 0x20f5be(%rip),%rbx
ac0a(7): lea 0xa0bf(%rip),%rsi
ac11(5): mov $0x5,%edx
ac16(2): xor %edi,%edi
ac18(5): call 0xffff8058(%rip)
ac1d(3): mov %rbx,%rsi
ac20(3): mov %rax,%rdi
ac23(5): call 0xffff81ed(%rip)
ac28(7): mov 0x20f599(%rip),%rbx
ac2f(7): lea 0xa2fa(%rip),%rsi
ac36(5): mov $0x5,%edx
ac3b(2): xor %edi,%edi
ac3d(5): call 0xffff8033(%rip)
ac42(3): mov %rbx,%rsi
ac45(3): mov %rax,%rdi
ac48(7): lea 0xa9f0(%rip),%rbx
ac4f(5): call 0xffff81c1(%rip)
ac54(7): lea 0xa8c7(%rip),%rax
ac5b(7): lea 0xa901(%rip),%rcx
ac62(9): mov $0x0,0x60(%rsp)
ac6b(9): mov $0x0,0x68(%rsp)
ac74(3): mov %rsp,%rdx
ac77(4): mov %rax,(%rsp)
ac7b(7): lea 0xa8a2(%rip),%rax
ac82(5): mov %rcx,0x30(%rsp)
ac87(7): lea 0xa8df(%rip),%rcx
ac8e(5): mov %rax,0x8(%rsp)
ac93(7): lea 0xa902(%rip),%rax
ac9a(5): mov %rcx,0x40(%rsp)
ac9f(7): lea 0xa8d1(%rip),%rcx
aca6(5): mov %rax,0x10(%rsp)
acab(7): lea 0xa882(%rip),%rax
acb2(5): mov %rcx,0x50(%rsp)
acb7(5): mov %rax,0x18(%rsp)
acbc(7): lea 0xa887(%rip),%rax
acc3(5): mov %rax,0x20(%rsp)
acc8(7): lea 0xa885(%rip),%rax
accf(5): mov %rax,0x28(%rsp)
acd4(5): mov %rax,0x38(%rsp)
acd9(5): mov %rax,0x48(%rsp)
acde(5): mov %rax,0x58(%rsp)
ace3(5): nop 0x0(%rax,%rax,1)
ace8(4): add $0x10,%rdx
acec(3): mov (%rdx),%rdi
acef(3): test %rdi,%rdi
acf2(2): jz 0x15(%rip)
acf4(5): mov $0x5,%ecx
acf9(3): mov %rbx,%rsi
acfc(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
acfe(3): setnbe %al
ad01(2): sbb $0x0,%al
ad03(2): test %al,%al
ad05(2): jnz 0xffffffe3(%rip)
ad07(4): mov 0x8(%rdx),%r12
ad0b(2): xor %edi,%edi
ad0d(5): mov $0x5,%edx
ad12(7): lea 0xa868(%rip),%rsi
ad19(3): test %r12,%r12
ad1c(6): jz 0xc7(%rip)
ad22(5): call 0xffff7f4e(%rip)
ad27(7): lea 0xa2ea(%rip),%rcx
ad2e(7): lea 0xa863(%rip),%rdx
ad35(3): mov %rax,%rsi
ad38(5): mov $0x1,%edi
ad3d(2): xor %eax,%eax
ad3f(5): call 0xffff8261(%rip)
ad44(2): xor %esi,%esi
ad46(5): mov $0x5,%edi
ad4b(5): call 0xffff8245(%rip)
ad50(3): test %rax,%rax
ad53(2): jz 0x1e(%rip)
ad55(7): lea 0xa84a(%rip),%rsi
ad5c(5): mov $0x3,%edx
ad61(3): mov %rax,%rdi
ad64(5): call 0xffff7dcc(%rip)
ad69(2): test %eax,%eax
ad6b(6): jnz 0x10d(%rip)
ad71(7): lea 0xa832(%rip),%rsi
ad78(2): xor %edi,%edi
ad7a(5): mov $0x5,%edx
ad7f(5): call 0xffff7ef1(%rip)
ad84(7): lea 0xa8b4(%rip),%rcx
ad8b(7): lea 0xa286(%rip),%rdx
ad92(3): mov %rax,%rsi
ad95(5): mov $0x1,%edi
ad9a(2): xor %eax,%eax
ad9c(5): call 0xffff8204(%rip)
ada1(3): cmp %rbx,%r12
ada4(7): lea 0xa793(%rip),%rcx
adab(7): lea 0xa759(%rip),%rbx
adb2(4): cmove %rcx,%rbx
adb6(7): lea 0xa2cb(%rip),%rsi
adbd(2): xor %edi,%edi
adbf(5): mov $0x5,%edx
adc4(5): call 0xffff7eac(%rip)
adc9(3): mov %rbx,%rcx
adcc(3): mov %rax,%rsi
adcf(3): mov %r12,%rdx
add2(5): mov $0x1,%edi
add7(2): xor %eax,%eax
add9(5): call 0xffff81c7(%rip)
adde(5): jmp 0xfffffb38(%rip)
ade3(5): call 0xffff7e8d(%rip)
ade8(7): lea 0xa229(%rip),%rcx
adef(7): lea 0xa7a2(%rip),%rdx
adf6(3): mov %rax,%rsi
adf9(5): mov $0x1,%edi
adfe(2): xor %eax,%eax
ae00(5): call 0xffff81a0(%rip)
ae05(2): xor %esi,%esi
ae07(5): mov $0x5,%edi
ae0c(5): call 0xffff8184(%rip)
ae11(3): test %rax,%rax
ae14(2): jz 0x1a(%rip)
ae16(7): lea 0xa789(%rip),%rsi
ae1d(5): mov $0x3,%edx
ae22(3): mov %rax,%rdi
ae25(5): call 0xffff7d0b(%rip)
ae2a(2): test %eax,%eax
ae2c(2): jnz 0x45(%rip)
ae2e(7): lea 0xa775(%rip),%rsi
ae35(5): mov $0x5,%edx
ae3a(2): xor %edi,%edi
ae3c(7): lea 0xa7fc(%rip),%r12
ae43(7): lea 0xa6f4(%rip),%rbx
ae4a(5): call 0xffff7e26(%rip)
ae4f(7): lea 0xa7e9(%rip),%rcx
ae56(7): lea 0xa1bb(%rip),%rdx
ae5d(3): mov %rax,%rsi
ae60(5): mov $0x1,%edi
ae65(2): xor %eax,%eax
ae67(5): call 0xffff8139(%rip)
ae6c(5): jmp 0xffffff4a(%rip)
ae71(7): lea 0xa7c7(%rip),%r12
ae78(7): mov 0x20f349(%rip),%r13
ae7f(7): lea 0xa1ba(%rip),%rsi
ae86(2): xor %edi,%edi
ae88(5): mov $0x5,%edx
ae8d(5): call 0xffff7de3(%rip)
ae92(3): mov %r13,%rsi
ae95(3): mov %rax,%rdi
ae98(5): call 0xffff7f78(%rip)
ae9d(5): jmp 0xfffffed4(%rip)

"__argmatch_die" :
aeb0(5): mov $0x1,%edi
aeb5(5): jmp 0xfffffa0b(%rip)

"argmatch" :
aec0(2): push %r15
aec2(2): push %r14
aec4(3): mov %rsi,%r15
aec7(2): push %r13
aec9(2): push %r12
aecb(3): mov %rcx,%r13
aece(1): push %rbp
aecf(1): push %rbx
aed0(3): mov %rdx,%rbp
aed3(4): sub $0x28,%rsp
aed7(5): mov %rdi,0x8(%rsp)
aedc(5): mov %rdx,0x18(%rsp)
aee1(5): call 0xffff7daf(%rip)
aee6(3): mov (%r15),%r14
aee9(8): mov $0xffffffff,(%rsp)
aef1(3): test %r14,%r14
aef4(6): jz 0xb9(%rip)
aefa(3): mov %rax,%r12
aefd(5): mov $0x0,0x17(%rsp)
af02(2): xor %ebx,%ebx
af04(2): jmp 0x53(%rip)
af06(a): nop 0x0(%rax,%rax,1)
af10(5): mov 0x18(%rsp),%rax
af15(3): test %rax,%rax
af18(6): jz 0xa8(%rip)
af1e(4): mov (%rsp),%rdi
af22(3): mov %r13,%rdx
af25(3): mov %rbp,%rsi
af28(4): imul %r13,%rdi
af2c(3): add %rax,%rdi
af2f(5): call 0xffff7ec1(%rip)
af34(2): test %eax,%eax
af36(5): movzx 0x17(%rsp),%eax
af3b(5): mov $0x1,%ecx
af40(3): cmovne %ecx,%eax
af43(4): mov %al,0x17(%rsp)
af47(4): add $0x1,%rbx
af4b(3): add %r13,%rbp
af4e(4): mov 0x0(%r15,%rbx,8),%r14
af52(3): test %r14,%r14
af55(2): jz 0x43(%rip)
af57(5): mov 0x8(%rsp),%rsi
af5c(3): mov %r12,%rdx
af5f(3): mov %r14,%rdi
af62(5): call 0xffff7bce(%rip)
af67(2): test %eax,%eax
af69(2): jnz 0xffffffde(%rip)
af6b(3): mov %r14,%rdi
af6e(5): call 0xffff7d22(%rip)
af73(3): cmp %r12,%rax
af76(2): jz 0x5a(%rip)
af78(5): cmp $0xffffffff,(%rsp)
af7d(2): jnz 0xffffff93(%rip)
af7f(4): mov %rbx,(%rsp)
af83(4): add $0x1,%rbx
af87(3): add %r13,%rbp
af8a(4): mov 0x0(%r15,%rbx,8),%r14
af8e(3): test %r14,%r14
af91(2): jnz 0xffffffc6(%rip)
af93(5): nop 0x0(%rax,%rax,1)
af98(5): cmp $0x0,0x17(%rsp)
af9d(7): mov $0xfffffffe,%rax
afa4(5): cmove (%rsp),%rax
afa9(4): mov %rax,(%rsp)
afad(4): mov (%rsp),%rax
afb1(4): add $0x28,%rsp
afb5(1): pop %rbx
afb6(1): pop %rbp
afb7(2): pop %r12
afb9(2): pop %r13
afbb(2): pop %r14
afbd(2): pop %r15
afbf(1): ret near (%rsp)
afc0(5): mov $0x1,0x17(%rsp)
afc5(2): jmp 0xffffff82(%rip)
afc7(9): nop 0x0(%rax,%rax,1)
afd0(4): mov %rbx,(%rsp)
afd4(2): jmp 0xffffffd9(%rip)

"argmatch_invalid" :
afe0(4): cmp $0xffffffff,%rdx
afe4(2): push %r12
afe6(5): mov $0x5,%edx
afeb(1): push %rbp
afec(3): mov %rsi,%r12
afef(1): push %rbx
aff0(3): mov %rdi,%rbp
aff3(2): jz 0x4d(%rip)
aff5(7): lea 0xaa1c(%rip),%rsi
affc(2): xor %edi,%edi
affe(5): call 0xffff7c72(%rip)
b003(3): mov %rax,%rbx
b006(3): mov %rbp,%rsi
b009(5): mov $0x1,%edi
b00e(5): call 0x5362(%rip)
b013(3): mov %r12,%rdx
b016(3): mov %rax,%rbp
b019(5): mov $0x8,%esi
b01e(2): xor %edi,%edi
b020(5): call 0x4f80(%rip)
b025(3): mov %rbp,%r8
b028(3): mov %rbx,%rdx
b02b(3): mov %rax,%rcx
b02e(1): pop %rbx
b02f(1): pop %rbp
b030(2): pop %r12
b032(2): xor %esi,%esi
b034(2): xor %edi,%edi
b036(2): xor %eax,%eax
b038(5): jmp 0xffff7fa8(%rip)
b03d(3): nop (%rax)
b040(7): lea 0xa9b6(%rip),%rsi
b047(2): xor %edi,%edi
b049(5): call 0xffff7c27(%rip)
b04e(3): mov %rax,%rbx
b051(2): jmp 0xffffffb5(%rip)

"argmatch_valid" :
b060(2): push %r15
b062(2): push %r14
b064(3): mov %rdi,%r14
b067(2): push %r13
b069(2): push %r12
b06b(2): xor %edi,%edi
b06d(1): push %rbp
b06e(1): push %rbx
b06f(3): mov %rsi,%rbp
b072(7): lea 0xa9bc(%rip),%rsi
b079(3): mov %rdx,%r12
b07c(5): mov $0x5,%edx
b081(4): sub $0x8,%rsp
b085(7): mov 0x20f174(%rip),%rbx
b08c(5): call 0xffff7be4(%rip)
b091(3): mov %rax,%rdi
b094(3): mov %rbx,%rsi
b097(5): call 0xffff7d79(%rip)
b09c(3): mov (%r14),%r15
b09f(3): test %r15,%r15
b0a2(6): jz 0x96(%rip)
b0a8(3): xor %r13d,%r13d
b0ab(2): xor %ebx,%ebx
b0ad(2): jmp 0x3b(%rip)
b0af(1): nop 
b0b0(3): mov %r15,%rdi
b0b3(4): add $0x1,%rbx
b0b7(3): mov %rbp,%r13
b0ba(5): call 0x52d6(%rip)
b0bf(7): mov 0x20f13a(%rip),%rdi
b0c6(7): lea 0xa97d(%rip),%rdx
b0cd(3): mov %rax,%rcx
b0d0(5): mov $0x1,%esi
b0d5(2): xor %eax,%eax
b0d7(3): add %r12,%rbp
b0da(5): call 0xffff8026(%rip)
b0df(4): mov 0x0(%r14,%rbx,8),%r15
b0e3(3): test %r15,%r15
b0e6(2): jz 0x52(%rip)
b0e8(3): test %rbx,%rbx
b0eb(2): jz 0xffffffc5(%rip)
b0ed(3): mov %r12,%rdx
b0f0(3): mov %rbp,%rsi
b0f3(3): mov %r13,%rdi
b0f6(5): call 0xffff7cfa(%rip)
b0fb(2): test %eax,%eax
b0fd(2): jnz 0xffffffb3(%rip)
b0ff(3): mov %r15,%rdi
b102(4): add $0x1,%rbx
b106(3): add %r12,%rbp
b109(5): call 0x5287(%rip)
b10e(7): mov 0x20f0eb(%rip),%rdi
b115(7): lea 0xa936(%rip),%rdx
b11c(3): mov %rax,%rcx
b11f(5): mov $0x1,%esi
b124(2): xor %eax,%eax
b126(5): call 0xffff7fda(%rip)
b12b(4): mov 0x0(%r14,%rbx,8),%r15
b12f(3): test %r15,%r15
b132(2): jnz 0xffffffb6(%rip)
b134(4): nop 0x0(%rax)
b138(7): mov 0x20f0c1(%rip),%rdi
b13f(4): mov 0x28(%rdi),%rax
b143(4): cmp 0x30(%rdi),%rax
b147(2): jnb 0x21(%rip)
b149(4): lea 0x1(%rax),%rdx
b14d(4): mov %rdx,0x28(%rdi)
b151(3): mov $0xa,(%rax)
b154(4): add $0x8,%rsp
b158(1): pop %rbx
b159(1): pop %rbp
b15a(2): pop %r12
b15c(2): pop %r13
b15e(2): pop %r14
b160(2): pop %r15
b162(1): ret near (%rsp)
b163(5): nop 0x0(%rax,%rax,1)
b168(4): add $0x8,%rsp
b16c(5): mov $0xa,%esi
b171(1): pop %rbx
b172(1): pop %rbp
b173(2): pop %r12
b175(2): pop %r13
b177(2): pop %r14
b179(2): pop %r15
b17b(5): jmp 0xffff7b95(%rip)

"__xargmatch_internal" :
b180(2): push %r15
b182(2): push %r14
b184(3): mov %rdi,%r14
b187(2): push %r13
b189(2): push %r12
b18b(3): mov %rsi,%r12
b18e(1): push %rbp
b18f(1): push %rbx
b190(3): mov %rcx,%rbp
b193(3): mov %rdx,%rbx
b196(3): mov %r8,%rcx
b199(3): mov %rbp,%rdx
b19c(4): sub $0x8,%rsp
b1a0(3): mov %rbx,%rsi
b1a3(3): mov %r12,%rdi
b1a6(3): mov %r8,%r15
b1a9(3): mov %r9,%r13
b1ac(5): call 0xfffffd14(%rip)
b1b1(3): test %rax,%rax
b1b4(2): js 0x11(%rip)
b1b6(4): add $0x8,%rsp
b1ba(1): pop %rbx
b1bb(1): pop %rbp
b1bc(2): pop %r12
b1be(2): pop %r13
b1c0(2): pop %r14
b1c2(2): pop %r15
b1c4(1): ret near (%rsp)
b1c5(3): mov %rax,%rdx
b1c8(3): mov %r12,%rsi
b1cb(3): mov %r14,%rdi
b1ce(5): call 0xfffffe12(%rip)
b1d3(3): mov %r15,%rdx
b1d6(3): mov %rbp,%rsi
b1d9(3): mov %rbx,%rdi
b1dc(5): call 0xfffffe84(%rip)
b1e1(3): call %r13
b1e4(7): mov $0xffffffff,%rax
b1eb(2): jmp 0xffffffcb(%rip)

"argmatch_to_argument" :
b1f0(2): push %r14
b1f2(2): push %r13
b1f4(2): push %r12
b1f6(1): push %rbp
b1f7(1): push %rbx
b1f8(3): mov (%rsi),%r14
b1fb(3): test %r14,%r14
b1fe(2): jz 0x33(%rip)
b200(3): mov %rcx,%r12
b203(3): mov %rdi,%r13
b206(3): mov %rdx,%rbp
b209(4): lea 0x8(%rsi),%rbx
b20d(2): jmp 0x12(%rip)
b20f(1): nop 
b210(3): mov (%rbx),%r14
b213(3): add %r12,%rbp
b216(4): add $0x8,%rbx
b21a(3): test %r14,%r14
b21d(2): jz 0x14(%rip)
b21f(3): mov %r12,%rdx
b222(3): mov %rbp,%rsi
b225(3): mov %r13,%rdi
b228(5): call 0xffff7bc8(%rip)
b22d(2): test %eax,%eax
b22f(2): jnz 0xffffffe1(%rip)
b231(1): pop %rbx
b232(3): mov %r14,%rax
b235(1): pop %rbp
b236(2): pop %r12
b238(2): pop %r13
b23a(2): pop %r14
b23c(1): ret near (%rsp)

"close_stdout_set_file_name" :
b240(7): mov %rdi,0x20f651(%rip)
b247(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
b250(7): mov %dil,0x20f639(%rip)
b257(1): ret near (%rsp)

"close_stdout" :
b260(1): push %rbp
b261(1): push %rbx
b262(4): sub $0x8,%rsp
b266(7): mov 0x20ef5b(%rip),%rdi
b26d(5): call 0x80f3(%rip)
b272(2): test %eax,%eax
b274(2): jz 0x18(%rip)
b276(5): call 0xffff789a(%rip)
b27b(7): cmp $0x0,0x20f60e(%rip)
b282(3): mov %rax,%rbx
b285(2): jz 0x1e(%rip)
b287(3): cmp $0x20,(%rax)
b28a(2): jnz 0x19(%rip)
b28c(7): mov 0x20ef6d(%rip),%rdi
b293(5): call 0x80cd(%rip)
b298(2): test %eax,%eax
b29a(2): jnz 0x48(%rip)
b29c(4): add $0x8,%rsp
b2a0(1): pop %rbx
b2a1(1): pop %rbp
b2a2(1): ret near (%rsp)
b2a3(7): lea 0xa7ad(%rip),%rsi
b2aa(2): xor %edi,%edi
b2ac(5): mov $0x5,%edx
b2b1(5): call 0xffff79bf(%rip)
b2b6(7): mov 0x20f5db(%rip),%rdi
b2bd(3): mov %rax,%rbp
b2c0(3): test %rdi,%rdi
b2c3(2): jz 0x2a(%rip)
b2c5(5): call 0x4ecb(%rip)
b2ca(2): mov (%rbx),%esi
b2cc(7): lea 0xa120(%rip),%rdx
b2d3(3): mov %rax,%rcx
b2d6(3): mov %rbp,%r8
b2d9(2): xor %edi,%edi
b2db(2): xor %eax,%eax
b2dd(5): call 0xffff7d03(%rip)
b2e2(6): mov 0x20ee48(%rip),%edi
b2e8(5): call 0xffff7858(%rip)
b2ed(2): mov (%rbx),%esi
b2ef(7): lea 0xa75e(%rip),%rdx
b2f6(3): mov %rax,%rcx
b2f9(2): xor %edi,%edi
b2fb(2): xor %eax,%eax
b2fd(5): call 0xffff7ce3(%rip)
b302(2): jmp 0xffffffe0(%rip)

"md5_init_ctx" :
b310(a): mov $0x-1167088121787636991,%rax
b31a(8): mov $0x0,0x10(%rdi)
b322(7): mov $0x0,0x18(%rdi)
b329(3): mov %rax,(%rdi)
b32c(a): mov $0x1167088121787636990,%rax
b336(4): mov %rax,0x8(%rdi)
b33a(1): ret near (%rsp)

"md5_read_ctx" :
b340(2): mov (%rdi),%edx
b342(3): mov %rsi,%rax
b345(2): mov %edx,(%rsi)
b347(3): mov 0x4(%rdi),%edx
b34a(3): mov %edx,0x4(%rsi)
b34d(3): mov 0x8(%rdi),%edx
b350(3): mov %edx,0x8(%rsi)
b353(3): mov 0xc(%rdi),%edx
b356(3): mov %edx,0xc(%rsi)
b359(1): ret near (%rsp)

"md5_process_block" :
b360(3): mov %rsi,%rax
b363(2): push %r15
b365(2): push %r14
b367(4): and $0xfffffffc,%rax
b36b(2): push %r13
b36d(2): push %r12
b36f(1): push %rbp
b370(1): push %rbx
b371(3): mov %rdi,%rbx
b374(4): lea 0x0(%rbx,%rax,1),%rcx
b378(2): mov (%rdx),%eax
b37a(3): mov %rdx,%rdi
b37d(4): mov 0x4(%rdx),%r11d
b381(4): mov 0x8(%rdx),%r10d
b385(5): mov %rdx,0xfffffff8(%rsp)
b38a(5): mov %rcx,0xfffffff0(%rsp)
b38f(4): mov %eax,0xffffffe8(%rsp)
b393(3): mov 0xc(%rdx),%eax
b396(2): mov %esi,%edx
b398(4): mov %eax,0xffffffe0(%rsp)
b39c(2): xor %eax,%eax
b39e(3): add 0x10(%rdi),%edx
b3a1(3): setb %al
b3a4(4): shr $0x20,%rsi
b3a8(3): add 0x14(%rdi),%esi
b3ab(3): mov %edx,0x10(%rdi)
b3ae(2): add %eax,%esi
b3b0(3): cmp %rcx,%rbx
b3b3(3): mov %esi,0x14(%rdi)
b3b6(6): jnb 0x6f4(%rip)
b3bc(3): mov %r10d,%r15d
b3bf(1): nop 
b3c0(3): mov (%rbx),%r14d
b3c3(4): mov 0xffffffe0(%rsp),%edi
b3c7(4): mov 0xffffffe8(%rsp),%eax
b3cb(3): mov 0x4(%rbx),%esi
b3ce(4): mov 0xc(%rbx),%r8d
b3d2(4): mov 0x14(%rbx),%r10d
b3d6(3): mov 0x18(%rbx),%ebp
b3d9(4): mov 0x1c(%rbx),%r13d
b3dd(8): lea 0xd76aa478(%r14,%rax,1),%edx
b3e5(2): mov %edi,%eax
b3e7(7): lea 0xe8c7b756(%rsi,%rdi,1),%ecx
b3ee(3): xor %r15d,%eax
b3f1(4): mov %esi,0xffffffbc(%rsp)
b3f5(5): mov %r10d,0xffffffcc(%rsp)
b3fa(3): and %r11d,%eax
b3fd(4): mov 0x24(%rbx),%r12d
b401(5): mov %r8d,0xffffffc4(%rsp)
b406(2): xor %edi,%eax
b408(8): lea 0xc1bdceee(%r8,%r11,1),%edi
b410(4): mov 0x2c(%rbx),%r8d
b414(2): add %edx,%eax
b416(3): mov %r11d,%edx
b419(3): rol $0x7,%eax
b41c(3): xor %r15d,%edx
b41f(5): mov %r12d,0xffffffd4(%rsp)
b424(3): add %r11d,%eax
b427(5): mov %r8d,0xffffffdc(%rsp)
b42c(2): and %eax,%edx
b42e(3): mov %eax,%r9d
b431(3): xor %r15d,%edx
b434(3): xor %r11d,%r9d
b437(2): add %ecx,%edx
b439(3): mov 0x8(%rbx),%ecx
b43c(3): rol $0xc,%edx
b43f(2): add %eax,%edx
b441(8): lea 0x242070db(%rcx,%r15,1),%esi
b449(4): mov %ecx,0xffffffc0(%rsp)
b44d(3): mov %r9d,%ecx
b450(2): and %edx,%ecx
b452(3): mov %eax,%r9d
b455(3): xor %r11d,%ecx
b458(3): xor %edx,%r9d
b45b(2): add %esi,%ecx
b45d(3): mov %r9d,%esi
b460(4): mov 0x10(%rbx),%r9d
b464(3): ror $0xf,%ecx
b467(2): add %edx,%ecx
b469(2): and %ecx,%esi
b46b(5): mov %r9d,0xffffffc8(%rsp)
b470(2): xor %eax,%esi
b472(2): add %edi,%esi
b474(8): lea 0xf57c0faf(%r9,%rax,1),%edi
b47c(2): mov %edx,%eax
b47e(3): ror $0xa,%esi
b481(2): xor %ecx,%eax
b483(4): mov 0x3c(%rbx),%r9d
b487(2): add %ecx,%esi
b489(2): and %esi,%eax
b48b(2): xor %edx,%eax
b48d(2): add %edi,%eax
b48f(8): lea 0x4787c62a(%r10,%rdx,1),%edi
b497(2): mov %ecx,%edx
b499(3): rol $0x7,%eax
b49c(2): xor %esi,%edx
b49e(3): mov %ebp,%r10d
b4a1(2): add %esi,%eax
b4a3(5): mov %r10d,0xffffffe4(%rsp)
b4a8(2): and %eax,%edx
b4aa(2): xor %ecx,%edx
b4ac(2): add %edi,%edx
b4ae(7): lea 0xa8304613(%rbp,%rcx,1),%edi
b4b5(2): mov %esi,%ebp
b4b7(2): xor %eax,%ebp
b4b9(3): rol $0xc,%edx
b4bc(2): add %eax,%edx
b4be(2): mov %ebp,%ecx
b4c0(2): mov %eax,%ebp
b4c2(2): and %edx,%ecx
b4c4(2): xor %edx,%ebp
b4c6(2): xor %esi,%ecx
b4c8(2): add %edi,%ecx
b4ca(8): lea 0xfd469501(%r13,%rsi,1),%edi
b4d2(2): mov %ebp,%esi
b4d4(3): ror $0xf,%ecx
b4d7(3): mov 0x20(%rbx),%ebp
b4da(2): add %edx,%ecx
b4dc(2): and %ecx,%esi
b4de(2): xor %eax,%esi
b4e0(4): mov %ebp,0xffffffd0(%rsp)
b4e4(2): add %edi,%esi
b4e6(7): lea 0x698098d8(%rbp,%rax,1),%edi
b4ed(2): mov %edx,%eax
b4ef(3): ror $0xa,%esi
b4f2(2): xor %ecx,%eax
b4f4(3): mov 0x30(%rbx),%ebp
b4f7(2): add %ecx,%esi
b4f9(2): and %esi,%eax
b4fb(2): xor %edx,%eax
b4fd(2): add %edi,%eax
b4ff(8): lea 0x8b44f7af(%r12,%rdx,1),%edi
b507(2): mov %ecx,%edx
b509(3): rol $0x7,%eax
b50c(2): xor %esi,%edx
b50e(4): mov 0x38(%rbx),%r12d
b512(2): add %esi,%eax
b514(2): and %eax,%edx
b516(2): xor %ecx,%edx
b518(2): add %edi,%edx
b51a(3): mov 0x28(%rbx),%edi
b51d(3): rol $0xc,%edx
b520(2): add %eax,%edx
b522(4): mov %edi,0xffffffd8(%rsp)
b526(7): lea 0xffff5bb1(%rdi,%rcx,1),%edi
b52d(2): mov %esi,%ecx
b52f(2): xor %eax,%ecx
b531(2): and %edx,%ecx
b533(2): xor %esi,%ecx
b535(2): add %edi,%ecx
b537(8): lea 0x895cd7be(%r8,%rsi,1),%edi
b53f(2): mov %eax,%esi
b541(3): ror $0xf,%ecx
b544(2): xor %edx,%esi
b546(4): mov 0x34(%rbx),%r8d
b54a(2): add %edx,%ecx
b54c(4): add $0x40,%rbx
b550(2): and %ecx,%esi
b552(2): xor %eax,%esi
b554(2): add %edi,%esi
b556(7): lea 0x6b901122(%rbp,%rax,1),%edi
b55d(2): mov %edx,%eax
b55f(3): ror $0xa,%esi
b562(2): xor %ecx,%eax
b564(2): add %ecx,%esi
b566(2): and %esi,%eax
b568(2): xor %edx,%eax
b56a(2): add %edi,%eax
b56c(8): lea 0xfd987193(%r8,%rdx,1),%edi
b574(2): mov %ecx,%edx
b576(3): rol $0x7,%eax
b579(2): xor %esi,%edx
b57b(2): add %esi,%eax
b57d(2): and %eax,%edx
b57f(2): xor %ecx,%edx
b581(2): add %edi,%edx
b583(8): lea 0xa679438e(%r12,%rcx,1),%edi
b58b(2): mov %esi,%ecx
b58d(3): rol $0xc,%edx
b590(2): xor %eax,%ecx
b592(2): add %eax,%edx
b594(2): and %edx,%ecx
b596(2): xor %esi,%ecx
b598(2): add %edi,%ecx
b59a(8): lea 0x49b40821(%r9,%rsi,1),%edi
b5a2(2): mov %eax,%esi
b5a4(3): ror $0xf,%ecx
b5a7(2): xor %edx,%esi
b5a9(2): add %edx,%ecx
b5ab(2): and %ecx,%esi
b5ad(2): xor %eax,%esi
b5af(2): add %edi,%esi
b5b1(4): mov 0xffffffbc(%rsp),%edi
b5b5(3): ror $0xa,%esi
b5b8(2): add %ecx,%esi
b5ba(7): lea 0xf61e2562(%rdi,%rax,1),%edi
b5c1(2): mov %ecx,%eax
b5c3(2): xor %esi,%eax
b5c5(2): and %edx,%eax
b5c7(2): xor %ecx,%eax
b5c9(2): add %edi,%eax
b5cb(8): lea 0xc040b340(%r10,%rdx,1),%edi
b5d3(2): mov %esi,%edx
b5d5(3): rol $0x5,%eax
b5d8(2): add %esi,%eax
b5da(2): xor %eax,%edx
b5dc(2): and %ecx,%edx
b5de(2): xor %esi,%edx
b5e0(2): add %edi,%edx
b5e2(4): mov 0xffffffdc(%rsp),%edi
b5e6(3): rol $0x9,%edx
b5e9(2): add %eax,%edx
b5eb(7): lea 0x265e5a51(%rdi,%rcx,1),%edi
b5f2(2): mov %eax,%ecx
b5f4(2): xor %edx,%ecx
b5f6(2): and %esi,%ecx
b5f8(2): xor %eax,%ecx
b5fa(2): add %edi,%ecx
b5fc(8): lea 0xe9b6c7aa(%r14,%rsi,1),%edi
b604(2): mov %edx,%esi
b606(3): rol $0xe,%ecx
b609(2): add %edx,%ecx
b60b(2): xor %ecx,%esi
b60d(2): and %eax,%esi
b60f(2): xor %edx,%esi
b611(2): add %edi,%esi
b613(4): mov 0xffffffcc(%rsp),%edi
b617(3): ror $0xc,%esi
b61a(2): add %ecx,%esi
b61c(7): lea 0xd62f105d(%rdi,%rax,1),%edi
b623(2): mov %ecx,%eax
b625(2): xor %esi,%eax
b627(2): and %edx,%eax
b629(2): xor %ecx,%eax
b62b(2): add %edi,%eax
b62d(4): mov 0xffffffd8(%rsp),%edi
b631(3): rol $0x5,%eax
b634(2): add %esi,%eax
b636(7): lea 0x2441453(%rdi,%rdx,1),%edi
b63d(2): mov %esi,%edx
b63f(2): xor %eax,%edx
b641(2): and %ecx,%edx
b643(2): xor %esi,%edx
b645(2): add %edi,%edx
b647(8): lea 0xd8a1e681(%r9,%rcx,1),%edi
b64f(2): mov %eax,%ecx
b651(3): rol $0x9,%edx
b654(2): add %eax,%edx
b656(2): xor %edx,%ecx
b658(2): and %esi,%ecx
b65a(2): xor %eax,%ecx
b65c(2): add %edi,%ecx
b65e(4): mov 0xffffffc8(%rsp),%edi
b662(5): mov 0xffffffd4(%rsp),%r10d
b667(3): rol $0xe,%ecx
b66a(2): add %edx,%ecx
b66c(7): lea 0xe7d3fbc8(%rdi,%rsi,1),%edi
b673(2): mov %edx,%esi
b675(2): xor %ecx,%esi
b677(2): and %eax,%esi
b679(2): xor %edx,%esi
b67b(2): add %edi,%esi
b67d(8): lea 0x21e1cde6(%r10,%rax,1),%edi
b685(2): mov %ecx,%eax
b687(3): ror $0xc,%esi
b68a(5): mov 0xffffffd0(%rsp),%r10d
b68f(2): add %ecx,%esi
b691(2): xor %esi,%eax
b693(2): and %edx,%eax
b695(2): xor %ecx,%eax
b697(2): add %edi,%eax
b699(8): lea 0xc33707d6(%r12,%rdx,1),%edi
b6a1(2): mov %esi,%edx
b6a3(3): rol $0x5,%eax
b6a6(2): add %esi,%eax
b6a8(2): xor %eax,%edx
b6aa(2): and %ecx,%edx
b6ac(2): xor %esi,%edx
b6ae(2): add %edi,%edx
b6b0(4): mov 0xffffffc4(%rsp),%edi
b6b4(3): rol $0x9,%edx
b6b7(2): add %eax,%edx
b6b9(7): lea 0xf4d50d87(%rdi,%rcx,1),%edi
b6c0(2): mov %eax,%ecx
b6c2(2): xor %edx,%ecx
b6c4(2): and %esi,%ecx
b6c6(8): lea 0x455a14ed(%r10,%rsi,1),%esi
b6ce(3): mov %edx,%r10d
b6d1(2): xor %eax,%ecx
b6d3(2): add %edi,%ecx
b6d5(3): rol $0xe,%ecx
b6d8(2): add %edx,%ecx
b6da(3): xor %ecx,%r10d
b6dd(3): mov %r10d,%edi
b6e0(2): and %eax,%edi
b6e2(2): xor %edx,%edi
b6e4(2): add %esi,%edi
b6e6(8): lea 0xa9e3e905(%r8,%rax,1),%esi
b6ee(2): mov %ecx,%eax
b6f0(3): ror $0xc,%edi
b6f3(2): add %ecx,%edi
b6f5(2): xor %edi,%eax
b6f7(8): lea 0x8d2a4c8a(%rbp,%rdi,1),%r10d
b6ff(2): and %edx,%eax
b701(2): xor %ecx,%eax
b703(5): mov %r10d,0xffffffec(%rsp)
b708(2): add %esi,%eax
b70a(4): mov 0xffffffc0(%rsp),%esi
b70e(3): rol $0x5,%eax
b711(2): add %edi,%eax
b713(7): lea 0xfcefa3f8(%rsi,%rdx,1),%esi
b71a(2): mov %edi,%edx
b71c(2): xor %eax,%edx
b71e(2): and %ecx,%edx
b720(8): lea 0x676f02d9(%r13,%rcx,1),%ecx
b728(2): xor %edi,%edx
b72a(2): add %esi,%edx
b72c(2): mov %eax,%esi
b72e(3): rol $0x9,%edx
b731(2): add %eax,%edx
b733(2): xor %edx,%esi
b735(2): and %edi,%esi
b737(2): xor %eax,%esi
b739(2): add %ecx,%esi
b73b(2): mov %edx,%ecx
b73d(3): rol $0xe,%esi
b740(2): add %edx,%esi
b742(2): xor %esi,%ecx
b744(3): mov %ecx,%r10d
b747(3): and %eax,%r10d
b74a(3): mov %r10d,%edi
b74d(5): mov 0xffffffcc(%rsp),%r10d
b752(2): xor %edx,%edi
b754(4): add 0xffffffec(%rsp),%edi
b758(8): lea 0xfffa3942(%r10,%rax,1),%eax
b760(3): ror $0xc,%edi
b763(2): add %esi,%edi
b765(2): xor %edi,%ecx
b767(2): add %eax,%ecx
b769(4): mov 0xffffffd0(%rsp),%eax
b76d(3): rol $0x4,%ecx
b770(2): add %edi,%ecx
b772(7): lea 0x8771f681(%rax,%rdx,1),%eax
b779(2): mov %esi,%edx
b77b(2): xor %edi,%edx
b77d(2): xor %ecx,%edx
b77f(2): add %eax,%edx
b781(4): mov 0xffffffdc(%rsp),%eax
b785(3): rol $0xb,%edx
b788(2): add %ecx,%edx
b78a(7): lea 0x6d9d6122(%rax,%rsi,1),%eax
b791(2): mov %edi,%esi
b793(8): lea 0xfde5380c(%r12,%rdi,1),%edi
b79b(2): xor %ecx,%esi
b79d(2): xor %edx,%esi
b79f(2): add %eax,%esi
b7a1(2): mov %ecx,%eax
b7a3(3): rol $0x10,%esi
b7a6(2): xor %edx,%eax
b7a8(2): add %edx,%esi
b7aa(2): xor %esi,%eax
b7ac(3): mov %esi,%r10d
b7af(2): add %edi,%eax
b7b1(4): mov 0xffffffbc(%rsp),%edi
b7b5(3): ror $0x9,%eax
b7b8(2): add %esi,%eax
b7ba(7): lea 0xa4beea44(%rdi,%rcx,1),%edi
b7c1(2): mov %edx,%ecx
b7c3(3): xor %eax,%r10d
b7c6(2): xor %esi,%ecx
b7c8(8): lea 0xf6bb4b60(%r13,%rsi,1),%esi
b7d0(2): xor %eax,%ecx
b7d2(2): add %edi,%ecx
b7d4(4): mov 0xffffffc8(%rsp),%edi
b7d8(3): rol $0x4,%ecx
b7db(2): add %eax,%ecx
b7dd(7): lea 0x4bdecfa9(%rdi,%rdx,1),%edx
b7e4(3): mov %r10d,%edi
b7e7(2): xor %ecx,%edi
b7e9(2): add %edx,%edi
b7eb(2): mov %eax,%edx
b7ed(3): rol $0xb,%edi
b7f0(2): xor %ecx,%edx
b7f2(2): add %ecx,%edi
b7f4(2): xor %edi,%edx
b7f6(2): add %esi,%edx
b7f8(4): mov 0xffffffd8(%rsp),%esi
b7fc(3): rol $0x10,%edx
b7ff(2): add %edi,%edx
b801(7): lea 0xbebfbc70(%rsi,%rax,1),%eax
b808(2): mov %ecx,%esi
b80a(2): xor %edi,%esi
b80c(2): xor %edx,%esi
b80e(2): add %eax,%esi
b810(8): lea 0x289b7ec6(%r8,%rcx,1),%eax
b818(2): mov %edi,%ecx
b81a(3): ror $0x9,%esi
b81d(2): xor %edx,%ecx
b81f(8): lea 0xeaa127fa(%r14,%rdi,1),%edi
b827(2): add %edx,%esi
b829(2): xor %esi,%ecx
b82b(3): mov %esi,%r10d
b82e(2): add %eax,%ecx
b830(2): mov %edx,%eax
b832(3): rol $0x4,%ecx
b835(2): xor %esi,%eax
b837(2): add %esi,%ecx
b839(2): xor %ecx,%eax
b83b(3): xor %ecx,%r10d
b83e(2): add %edi,%eax
b840(4): mov 0xffffffc4(%rsp),%edi
b844(3): rol $0xb,%eax
b847(2): add %ecx,%eax
b849(7): lea 0xd4ef3085(%rdi,%rdx,1),%edx
b850(3): mov %r10d,%edi
b853(2): xor %eax,%edi
b855(2): add %edx,%edi
b857(4): mov 0xffffffe4(%rsp),%edx
b85b(3): rol $0x10,%edi
b85e(2): add %eax,%edi
b860(7): lea 0x4881d05(%rdx,%rsi,1),%edx
b867(2): mov %ecx,%esi
b869(2): xor %eax,%esi
b86b(2): xor %edi,%esi
b86d(2): add %edx,%esi
b86f(4): mov 0xffffffd4(%rsp),%edx
b873(3): ror $0x9,%esi
b876(2): add %edi,%esi
b878(7): lea 0xd9d4d039(%rdx,%rcx,1),%ecx
b87f(2): mov %eax,%edx
b881(7): lea 0xe6db99e5(%rbp,%rax,1),%eax
b888(2): xor %edi,%edx
b88a(3): mov %esi,%r10d
b88d(2): xor %esi,%edx
b88f(2): add %ecx,%edx
b891(2): mov %edi,%ecx
b893(3): rol $0x4,%edx
b896(2): add %esi,%edx
b898(2): xor %esi,%ecx
b89a(2): xor %edx,%ecx
b89c(3): xor %edx,%r10d
b89f(2): add %eax,%ecx
b8a1(8): lea 0x1fa27cf8(%r9,%rdi,1),%eax
b8a9(3): mov %r10d,%edi
b8ac(3): rol $0xb,%ecx
b8af(5): mov 0xffffffcc(%rsp),%r10d
b8b4(2): add %edx,%ecx
b8b6(2): xor %ecx,%edi
b8b8(2): add %eax,%edi
b8ba(4): mov 0xffffffc0(%rsp),%eax
b8be(3): rol $0x10,%edi
b8c1(2): add %ecx,%edi
b8c3(7): lea 0xc4ac5665(%rax,%rsi,1),%esi
b8ca(2): mov %edx,%eax
b8cc(2): xor %ecx,%eax
b8ce(2): xor %edi,%eax
b8d0(2): add %esi,%eax
b8d2(8): lea 0xf4292244(%r14,%rdx,1),%esi
b8da(2): mov %ecx,%edx
b8dc(3): ror $0x9,%eax
b8df(2): not %edx
b8e1(5): mov 0xffffffbc(%rsp),%r14d
b8e6(2): add %edi,%eax
b8e8(2): or %eax,%edx
b8ea(2): xor %edi,%edx
b8ec(2): add %esi,%edx
b8ee(8): lea 0x432aff97(%r13,%rcx,1),%esi
b8f6(3): mov %edi,%r13d
b8f9(3): rol $0x6,%edx
b8fc(3): not %r13d
b8ff(8): lea 0xab9423a7(%r12,%rdi,1),%edi
b907(2): add %eax,%edx
b909(3): mov %r13d,%ecx
b90c(2): or %edx,%ecx
b90e(3): mov %edx,%r13d
b911(2): xor %eax,%ecx
b913(3): not %r13d
b916(2): add %esi,%ecx
b918(2): mov %eax,%esi
b91a(3): rol $0xa,%ecx
b91d(2): not %esi
b91f(2): add %edx,%ecx
b921(2): or %ecx,%esi
b923(3): mov %ecx,%r12d
b926(2): xor %edx,%esi
b928(3): not %r12d
b92b(2): add %edi,%esi
b92d(8): lea 0xfc93a039(%r10,%rax,1),%edi
b935(3): mov %r13d,%eax
b938(3): rol $0xf,%esi
b93b(5): mov 0xffffffe4(%rsp),%r10d
b940(2): add %ecx,%esi
b942(2): or %esi,%eax
b944(2): xor %ecx,%eax
b946(2): add %edi,%eax
b948(7): lea 0x655b59c3(%rbp,%rdx,1),%edi
b94f(4): mov 0xffffffc4(%rsp),%ebp
b953(3): ror $0xb,%eax
b956(3): mov %r12d,%edx
b959(2): add %esi,%eax
b95b(2): or %eax,%edx
b95d(2): xor %esi,%edx
b95f(2): add %edi,%edx
b961(7): lea 0x8f0ccc92(%rbp,%rcx,1),%edi
b968(2): mov %esi,%ebp
b96a(3): rol $0x6,%edx
b96d(2): not %ebp
b96f(2): add %eax,%edx
b971(2): mov %ebp,%ecx
b973(2): or %edx,%ecx
b975(2): mov %edx,%ebp
b977(2): xor %eax,%ecx
b979(2): not %ebp
b97b(2): add %edi,%ecx
b97d(4): mov 0xffffffd8(%rsp),%edi
b981(3): rol $0xa,%ecx
b984(2): add %edx,%ecx
b986(7): lea 0xffeff47d(%rdi,%rsi,1),%edi
b98d(2): mov %eax,%esi
b98f(2): not %esi
b991(2): or %ecx,%esi
b993(2): xor %edx,%esi
b995(2): add %edi,%esi
b997(8): lea 0x85845dd1(%r14,%rax,1),%edi
b99f(2): mov %ebp,%eax
b9a1(3): rol $0xf,%esi
b9a4(5): mov 0xffffffd0(%rsp),%r14d
b9a9(2): mov %ecx,%ebp
b9ab(2): add %ecx,%esi
b9ad(2): not %ebp
b9af(2): or %esi,%eax
b9b1(2): xor %ecx,%eax
b9b3(2): add %edi,%eax
b9b5(8): lea 0x6fa87e4f(%r14,%rdx,1),%edi
b9bd(2): mov %ebp,%edx
b9bf(3): ror $0xb,%eax
b9c2(2): mov %esi,%ebp
b9c4(5): mov 0xffffffdc(%rsp),%r14d
b9c9(2): add %esi,%eax
b9cb(2): not %ebp
b9cd(2): or %eax,%edx
b9cf(2): xor %esi,%edx
b9d1(2): add %edi,%edx
b9d3(8): lea 0xfe2ce6e0(%r9,%rcx,1),%edi
b9db(2): mov %ebp,%ecx
b9dd(3): rol $0x6,%edx
b9e0(5): mov 0xffffffc8(%rsp),%r9d
b9e5(2): add %eax,%edx
b9e7(2): or %edx,%ecx
b9e9(2): xor %eax,%ecx
b9eb(2): add %edi,%ecx
b9ed(8): lea 0xa3014314(%r10,%rsi,1),%edi
b9f5(2): mov %eax,%esi
b9f7(3): rol $0xa,%ecx
b9fa(2): not %esi
b9fc(8): lea 0x4e0811a1(%r8,%rax,1),%eax
ba04(2): add %edx,%ecx
ba06(3): mov %edx,%r8d
ba09(5): mov 0xffffffd4(%rsp),%r10d
ba0e(2): or %ecx,%esi
ba10(3): not %r8d
ba13(2): xor %edx,%esi
ba15(8): lea 0xf7537e82(%r9,%rdx,1),%edx
ba1d(3): mov %ecx,%r9d
ba20(2): add %edi,%esi
ba22(3): mov %r8d,%edi
ba25(3): not %r9d
ba28(3): rol $0xf,%esi
ba2b(2): add %ecx,%esi
ba2d(2): or %esi,%edi
ba2f(2): xor %ecx,%edi
ba31(8): lea 0xbd3af235(%r14,%rcx,1),%ecx
ba39(2): add %eax,%edi
ba3b(3): mov %r9d,%eax
ba3e(3): ror $0xb,%edi
ba41(2): add %esi,%edi
ba43(2): or %edi,%eax
ba45(2): xor %esi,%eax
ba47(2): add %edx,%eax
ba49(2): mov %esi,%edx
ba4b(3): rol $0x6,%eax
ba4e(2): not %edx
ba50(2): add %edi,%eax
ba52(2): or %eax,%edx
ba54(2): xor %edi,%edx
ba56(2): add %ecx,%edx
ba58(4): mov 0xffffffc0(%rsp),%ecx
ba5c(3): rol $0xa,%edx
ba5f(2): add %eax,%edx
ba61(7): lea 0x2ad7d2bb(%rcx,%rsi,1),%esi
ba68(2): mov %edi,%ecx
ba6a(8): lea 0xeb86d391(%r10,%rdi,1),%edi
ba72(2): not %ecx
ba74(2): or %edx,%ecx
ba76(2): xor %eax,%ecx
ba78(2): add %esi,%ecx
ba7a(2): mov %eax,%esi
ba7c(3): rol $0xf,%ecx
ba7f(2): not %esi
ba81(2): add %edx,%ecx
ba83(2): or %ecx,%esi
ba85(2): xor %edx,%esi
ba87(2): add %edi,%esi
ba89(3): ror $0xb,%esi
ba8c(2): add %ecx,%esi
ba8e(4): add %eax,0xffffffe8(%rsp)
ba92(3): add %ecx,%r15d
ba95(3): add %esi,%r11d
ba98(4): add %edx,0xffffffe0(%rsp)
ba9c(5): cmp %rbx,0xfffffff0(%rsp)
baa1(6): jnbe 0xfffff91f(%rip)
baa7(3): mov %r15d,%r10d
baaa(5): mov 0xfffffff8(%rsp),%rax
baaf(4): mov 0xffffffe8(%rsp),%ebx
bab3(2): mov %ebx,(%rax)
bab5(4): mov 0xffffffe0(%rsp),%ebx
bab9(4): mov %r11d,0x4(%rax)
babd(4): mov %r10d,0x8(%rax)
bac1(3): mov %ebx,0xc(%rax)
bac4(1): pop %rbx
bac5(1): pop %rbp
bac6(2): pop %r12
bac8(2): pop %r13
baca(2): pop %r14
bacc(2): pop %r15
bace(1): ret near (%rsp)

"md5_finish_ctx" :
bad0(1): push %rbp
bad1(1): push %rbx
bad2(3): mov %rdi,%rbx
bad5(3): mov 0x18(%rdi),%eax
bad8(3): mov %rsi,%rbp
badb(3): mov 0x14(%rbx),%edx
bade(3): cmp $0x38,%eax
bae1(2): mov %eax,%esi
bae3(3): sbb %r8,%r8
bae6(4): and $0xffffffc0,%r8
baea(4): sub $0xffffff80,%r8
baee(3): cmp $0x38,%eax
baf1(3): sbb %rcx,%rcx
baf4(4): and $0xfffffff0,%rcx
baf8(4): add $0x1f,%rcx
bafc(3): cmp $0x38,%eax
baff(3): sbb %rdi,%rdi
bb02(3): xor %r9d,%r9d
bb05(4): and $0xfffffff0,%rdi
bb09(4): add $0x1e,%rdi
bb0d(3): add 0x10(%rbx),%esi
bb10(4): setb %r9b
bb14(3): mov %esi,0x10(%rbx)
bb17(3): test %r9d,%r9d
bb1a(2): jz 0x8(%rip)
bb1c(3): add $0x1,%edx
bb1f(3): mov %edx,0x14(%rbx)
bb22(8): lea 0x0(,%rsi,8),%r9d
bb2a(3): shl/sal $0x3,%edx
bb2d(3): shr $0x1d,%esi
bb30(2): or %esi,%edx
bb32(7): lea 0x9f47(%rip),%rsi
bb39(5): mov %r9d,0x1c(%rbx,%rdi,4)
bb3e(3): mov %r8,%rdi
bb41(4): mov %edx,0x1c(%rbx,%rcx,4)
bb45(3): sub %rax,%rdi
bb48(4): lea 0x1c(%rbx),%r9
bb4c(4): lea 0xfffffff8(%rdi),%rcx
bb50(4): lea 0x0(%r9,%rax,1),%rdx
bb54(4): cmp $0x8,%rcx
bb58(2): jnb 0x28(%rip)
bb5a(3): test $0x4,%cl
bb5d(2): jnz 0x73(%rip)
bb5f(3): test %rcx,%rcx
bb62(2): jz 0x4a(%rip)
bb64(7): movzx 0x9f15(%rip),%eax
bb6b(3): test $0x2,%cl
bb6e(2): mov %al,(%rdx)
bb70(2): jz 0x3c(%rip)
bb72(5): movzx 0xfffffffe(%rsi,%rcx,1),%eax
bb77(5): mov %ax,0xfffffffe(%rdx,%rcx,1)
bb7c(2): jmp 0x30(%rip)
bb7e(2): nop 
bb80(7): mov 0x9ef9(%rip),%rax
bb87(4): lea 0x8(%rdx),%rdi
bb8b(4): and $0xfffffff8,%rdi
bb8f(3): mov %rax,(%rdx)
bb92(5): mov 0xfffffff8(%rsi,%rcx,1),%rax
bb97(5): mov %rax,0xfffffff8(%rdx,%rcx,1)
bb9c(3): sub %rdi,%rdx
bb9f(3): add %rdx,%rcx
bba2(3): sub %rdx,%rsi
bba5(4): shr $0x3,%rcx
bba9(3): REP movsd rsi(%ds,10),rdi(%es,10)
bbac(3): mov %rbx,%rdx
bbaf(3): mov %r8,%rsi
bbb2(3): mov %r9,%rdi
bbb5(5): call 0xfffff7ab(%rip)
bbba(3): mov %rbp,%rsi
bbbd(3): mov %rbx,%rdi
bbc0(1): pop %rbx
bbc1(1): pop %rbp
bbc2(5): jmp 0xfffff77e(%rip)
bbc7(9): nop 0x0(%rax,%rax,1)
bbd0(6): mov 0x9eaa(%rip),%eax
bbd6(2): mov %eax,(%rdx)
bbd8(4): mov 0xfffffffc(%rsi,%rcx,1),%eax
bbdc(4): mov %eax,0xfffffffc(%rdx,%rcx,1)
bbe0(2): jmp 0xffffffcc(%rip)

"md5_process_bytes" :
bbf0(2): push %r15
bbf2(2): push %r14
bbf4(2): push %r13
bbf6(2): push %r12
bbf8(3): mov %rdx,%r13
bbfb(1): push %rbp
bbfc(1): push %rbx
bbfd(3): mov %rsi,%r12
bc00(3): mov %rdi,%rbx
bc03(4): sub $0x8,%rsp
bc07(3): mov 0x18(%rdx),%eax
bc0a(2): test %eax,%eax
bc0c(6): jnz 0x134(%rip)
bc12(4): cmp $0x3f,%r12
bc16(6): jbe 0x10e(%rip)
bc1c(3): test $0x3,%bl
bc1f(6): jz 0xe9(%rip)
bc25(4): cmp $0x40,%r12
bc29(4): lea 0x1c(%r13),%rbp
bc2d(2): jz 0x63(%rip)
bc2f(5): lea 0xffffffbf(%r12),%r15
bc34(4): shr $0x6,%r15
bc38(4): lea 0x1(%r15),%r14
bc3c(4): shl/sal $0x6,%r14
bc40(3): add %rbx,%r14
bc43(5): nop 0x0(%rax,%rax,1)
bc48(4): movdqu (%rbx),%xmm0
bc4c(3): mov %r13,%rdx
bc4f(5): mov $0x40,%esi
bc54(3): mov %rbp,%rdi
bc57(4): add $0x40,%rbx
bc5b(4): movups %xmm0,0x0(%rbp)
bc5f(5): movdqu 0xffffffd0(%rbx),%xmm0
bc64(4): movups %xmm0,0x10(%rbp)
bc68(5): movdqu 0xffffffe0(%rbx),%xmm0
bc6d(4): movups %xmm0,0x20(%rbp)
bc71(5): movdqu 0xfffffff0(%rbx),%xmm0
bc76(4): movups %xmm0,0x30(%rbp)
bc7a(5): call 0xfffff6e6(%rip)
bc7f(3): cmp %r14,%rbx
bc82(2): jnz 0xffffffc6(%rip)
bc84(3): neg %r15
bc87(4): shl/sal $0x6,%r15
bc8b(5): lea 0xffffffc0(%r12,%r15,1),%r12
bc90(4): mov 0x18(%r13),%edi
bc94(4): cmp $0x8,%r12d
bc98(3): mov %r12d,%eax
bc9b(5): lea 0x0(%rbp,%rdi,1),%rcx
bca0(6): jnb 0xe0(%rip)
bca6(4): test $0x4,%r12b
bcaa(6): jnz 0x1f7(%rip)
bcb0(3): test %r12d,%r12d
bcb3(2): jz 0xf(%rip)
bcb5(3): movzx (%rbx),%edx
bcb8(2): test $0x2,%al
bcba(2): mov %dl,(%rcx)
bcbc(6): jnz 0x1f9(%rip)
bcc2(3): add %rdi,%r12
bcc5(4): cmp $0x3f,%r12
bcc9(2): jbe 0x25(%rip)
bccb(3): mov %r13,%rdx
bcce(5): mov $0x40,%esi
bcd3(3): mov %rbp,%rdi
bcd6(5): call 0xfffff68a(%rip)
bcdb(4): sub $0x40,%r12
bcdf(4): lea 0x5c(%r13),%rsi
bce3(3): mov %rbp,%rdi
bce6(3): mov %r12,%rdx
bce9(5): call 0xffff7197(%rip)
bcee(4): mov %r12d,0x18(%r13)
bcf2(4): add $0x8,%rsp
bcf6(1): pop %rbx
bcf7(1): pop %rbp
bcf8(2): pop %r12
bcfa(2): pop %r13
bcfc(2): pop %r14
bcfe(2): pop %r15
bd00(1): ret near (%rsp)
bd01(7): nop 0x0(%rax)
bd08(3): mov %r12,%rbp
bd0b(3): mov %rbx,%rdi
bd0e(3): mov %r13,%rdx
bd11(4): and $0xffffffc0,%rbp
bd15(4): and $0x3f,%r12d
bd19(3): mov %rbp,%rsi
bd1c(3): add %rbp,%rbx
bd1f(5): call 0xfffff641(%rip)
bd24(3): test %r12,%r12
bd27(6): jnz 0x171(%rip)
bd2d(4): add $0x8,%rsp
bd31(1): pop %rbx
bd32(1): pop %rbp
bd33(2): pop %r12
bd35(2): pop %r13
bd37(2): pop %r14
bd39(2): pop %r15
bd3b(1): ret near (%rsp)
bd3c(4): nop 0x0(%rax)
bd40(2): mov %eax,%ebp
bd42(5): mov $0x80,%edx
bd47(4): lea 0x1c(%r13),%r15
bd4b(3): sub %rbp,%rdx
bd4e(3): cmp %rsi,%rdx
bd51(4): lea 0x0(%r15,%rbp,1),%rdi
bd55(4): cmovnbe %rsi,%rdx
bd59(3): mov %rbx,%rsi
bd5c(3): mov %rdx,%r14
bd5f(5): call 0xffff7121(%rip)
bd64(4): mov 0x18(%r13),%esi
bd68(3): add %r14d,%esi
bd6b(3): cmp $0x40,%esi
bd6e(4): mov %esi,0x18(%r13)
bd72(2): jnbe 0x5e(%rip)
bd74(3): add %r14,%rbx
bd77(3): sub %r14,%r12
bd7a(5): jmp 0xfffffe98(%rip)
bd7f(1): nop 
bd80(3): mov (%rbx),%rax
bd83(3): mov %r12d,%edx
bd86(3): mov %rax,(%rcx)
bd89(5): mov 0xfffffff8(%rbx,%rdx,1),%rax
bd8e(5): mov %rax,0xfffffff8(%rcx,%rdx,1)
bd93(4): lea 0x8(%rcx),%rdx
bd97(3): mov %rcx,%rax
bd9a(4): and $0xfffffff8,%rdx
bd9e(3): sub %rdx,%rax
bda1(3): sub %rax,%rbx
bda4(3): add %r12d,%eax
bda7(3): and $0xf8,%eax
bdaa(3): cmp $0x8,%eax
bdad(6): jb 0xffffff15(%rip)
bdb3(3): and $0xf8,%eax
bdb6(2): xor %ecx,%ecx
bdb8(2): mov %ecx,%esi
bdba(3): add $0x8,%ecx
bdbd(4): mov 0x0(%rbx,%rsi,1),%r8
bdc1(2): cmp %eax,%ecx
bdc3(4): mov %r8,0x0(%rdx,%rsi,1)
bdc7(2): jb 0xfffffff1(%rip)
bdc9(5): jmp 0xfffffef9(%rip)
bdce(2): nop 
bdd0(3): and $0xc0,%esi
bdd3(3): mov %r13,%rdx
bdd6(3): mov %r15,%rdi
bdd9(5): call 0xfffff587(%rip)
bdde(4): mov 0x18(%r13),%ecx
bde2(5): lea 0x0(%rbp,%r14,1),%rax
bde7(4): and $0xffffffc0,%rax
bdeb(2): mov %ecx,%edx
bded(3): add %r15,%rax
bdf0(3): and $0x3f,%edx
bdf3(3): cmp $0x8,%edx
bdf6(4): mov %edx,0x18(%r13)
bdfa(2): jnb 0x36(%rip)
bdfc(3): test $0x4,%cl
bdff(2): jnz 0x80(%rip)
be01(2): test %edx,%edx
be03(6): jz 0xffffff71(%rip)
be09(3): movzx (%rax),%esi
be0c(3): and $0x2,%ecx
be0f(4): mov %sil,0x1c(%r13)
be13(6): jz 0xffffff61(%rip)
be19(5): movzx 0xfffffffe(%rax,%rdx,1),%eax
be1e(6): mov %ax,0xfffffffe(%r15,%rdx,1)
be24(5): jmp 0xffffff50(%rip)
be29(7): nop 0x0(%rax)
be30(3): mov (%rax),%rcx
be33(4): mov %rcx,0x1c(%r13)
be37(2): mov %edx,%ecx
be39(5): mov 0xfffffff8(%rax,%rcx,1),%rsi
be3e(5): mov %rsi,0xfffffff8(%r15,%rcx,1)
be43(4): lea 0x24(%r13),%rcx
be47(4): and $0xfffffff8,%rcx
be4b(3): sub %rcx,%r15
be4e(3): sub %r15,%rax
be51(3): add %edx,%r15d
be54(4): and $0xf8,%r15d
be58(4): cmp $0x8,%r15d
be5c(6): jb 0xffffff18(%rip)
be62(4): and $0xf8,%r15d
be66(2): xor %edx,%edx
be68(2): mov %edx,%esi
be6a(3): add $0x8,%edx
be6d(4): mov 0x0(%rax,%rsi,1),%rdi
be71(3): cmp %r15d,%edx
be74(4): mov %rdi,0x0(%rcx,%rsi,1)
be78(2): jb 0xfffffff0(%rip)
be7a(5): jmp 0xfffffefa(%rip)
be7f(2): mov (%rax),%ecx
be81(4): mov %ecx,0x1c(%r13)
be85(4): mov 0xfffffffc(%rax,%rdx,1),%eax
be89(5): mov %eax,0xfffffffc(%r15,%rdx,1)
be8e(5): jmp 0xfffffee6(%rip)
be93(5): nop 0x0(%rax,%rax,1)
be98(4): lea 0x1c(%r13),%rbp
be9c(5): jmp 0xfffffdf4(%rip)
bea1(2): mov (%rbx),%edx
bea3(2): mov %edx,(%rcx)
bea5(3): mov %r12d,%edx
bea8(4): mov 0xfffffffc(%rbx,%rdx,1),%eax
beac(4): mov %eax,0xfffffffc(%rcx,%rdx,1)
beb0(5): jmp 0xfffffe12(%rip)
beb5(3): mov %r12d,%edx
beb8(5): movzx 0xfffffffe(%rbx,%rdx,1),%eax
bebd(5): mov %ax,0xfffffffe(%rcx,%rdx,1)
bec2(5): jmp 0xfffffe00(%rip)

"md5_buffer" :
bed0(1): push %rbp
bed1(1): push %rbx
bed2(3): mov %rdx,%rbp
bed5(7): sub $0xb8,%rsp
bedc(9): mov $0x28,%rax
bee5(8): mov %rax,0xa8(%rsp)
beed(2): xor %eax,%eax
beef(3): mov %rsp,%rbx
bef2(a): mov $0x-1167088121787636991,%rax
befc(9): mov $0x0,0x10(%rsp)
bf05(4): mov %rax,(%rsp)
bf09(3): mov %rbx,%rdx
bf0c(a): mov $0x1167088121787636990,%rax
bf16(5): mov %rax,0x8(%rsp)
bf1b(8): mov $0x0,0x18(%rsp)
bf23(5): call 0xfffffccd(%rip)
bf28(3): mov %rbp,%rsi
bf2b(3): mov %rbx,%rdi
bf2e(5): call 0xfffffba2(%rip)
bf33(8): mov 0xa8(%rsp),%rcx
bf3b(9): xor $0x28,%rcx
bf44(2): jnz 0xc(%rip)
bf46(7): add $0xb8,%rsp
bf4d(1): pop %rbx
bf4e(1): pop %rbp
bf4f(1): ret near (%rsp)
bf50(5): call 0xffff6d50(%rip)

"md5_stream" :
bf60(2): push %r15
bf62(2): push %r14
bf64(3): mov %rsi,%r14
bf67(2): push %r13
bf69(2): push %r12
bf6b(1): push %rbp
bf6c(1): push %rbx
bf6d(3): mov %rdi,%rbp
bf70(5): mov $0x8048,%edi
bf75(7): sub $0xb8,%rsp
bf7c(9): mov $0x28,%rax
bf85(8): mov %rax,0xa8(%rsp)
bf8d(2): xor %eax,%eax
bf8f(5): call 0xffff7239(%rip)
bf94(3): mov %rax,%r12
bf97(5): mov $0x1,%eax
bf9c(3): test %r12,%r12
bf9f(6): jz 0x8c(%rip)
bfa5(a): mov $0x-1167088121787636991,%rax
bfaf(9): mov $0x0,0x10(%rsp)
bfb8(8): mov $0x0,0x18(%rsp)
bfc0(4): mov %rax,(%rsp)
bfc4(a): mov $0x1167088121787636990,%rax
bfce(6): mov $0x8000,%r13d
bfd4(5): mov %rax,0x8(%rsp)
bfd9(3): mov %rsp,%r15
bfdc(2): xor %ebx,%ebx
bfde(2): jmp 0x2a(%rip)
bfe0(4): lea 0x0(%r12,%rbx,1),%rdi
bfe4(3): mov %r13,%rdx
bfe7(3): mov %rbp,%rcx
bfea(3): sub %rbx,%rdx
bfed(5): mov $0x1,%esi
bff2(5): call 0xffff6c1e(%rip)
bff7(3): add %rax,%rbx
bffa(7): cmp $0x8000,%rbx
c001(2): jz 0x5f(%rip)
c003(3): test %rax,%rax
c006(2): jz 0x72(%rip)
c008(4): test $0x10,0x0(%rbp)
c00c(2): jz 0xffffffd4(%rip)
c00e(3): test %rbx,%rbx
c011(3): mov %rsp,%rbp
c014(2): jnz 0x3c(%rip)
c016(3): mov %r14,%rsi
c019(3): mov %rbp,%rdi
c01c(5): call 0xfffffab4(%rip)
c021(3): mov %r12,%rdi
c024(5): call 0xffff719c(%rip)
c029(2): xor %eax,%eax
c02b(8): mov 0xa8(%rsp),%rcx
c033(9): xor $0x28,%rcx
c03c(2): jnz 0x51(%rip)
c03e(7): add $0xb8,%rsp
c045(1): pop %rbx
c046(1): pop %rbp
c047(2): pop %r12
c049(2): pop %r13
c04b(2): pop %r14
c04d(2): pop %r15
c04f(1): ret near (%rsp)
c050(3): mov %rbp,%rdx
c053(3): mov %rbx,%rsi
c056(3): mov %r12,%rdi
c059(5): call 0xfffffb97(%rip)
c05e(2): jmp 0xffffffb8(%rip)
c060(3): mov %r15,%rdx
c063(5): mov $0x8000,%esi
c068(3): mov %r12,%rdi
c06b(5): call 0xfffff2f5(%rip)
c070(5): jmp 0xffffff6c(%rip)
c075(3): nop (%rax)
c078(4): test $0x20,0x0(%rbp)
c07c(2): jz 0xffffff92(%rip)
c07e(3): mov %r12,%rdi
c081(5): call 0xffff713f(%rip)
c086(5): mov $0x1,%eax
c08b(2): jmp 0xffffffa0(%rip)
c08d(5): call 0xffff6c13(%rip)

"fadvise" :
c0b0(3): test %rdi,%rdi
c0b3(2): jz 0x1d(%rip)
c0b5(1): push %rbx
c0b6(2): mov %esi,%ebx
c0b8(5): call 0xffff6dd8(%rip)
c0bd(2): mov %ebx,%ecx
c0bf(2): xor %edx,%edx
c0c1(2): xor %esi,%esi
c0c3(1): pop %rbx
c0c4(2): mov %eax,%edi
c0c6(5): jmp 0xffff6d0a(%rip)
c0cb(5): nop 0x0(%rax,%rax,1)
c0d0(2): REP ret near (%rsp)

"match_suffix" :
c0e0(3): mov (%rdi),%rsi
c0e3(3): movzx (%rsi),%edx
c0e6(2): test %dl,%dl
c0e8(6): jz 0xb8(%rip)
c0ee(2): xor %ecx,%ecx
c0f0(2): xor %eax,%eax
c0f2(3): xor %r8d,%r8d
c0f5(6): mov $0x1,%r11d
c0fb(a): mov $0x288230371923853311,%r10
c105(2): jmp 0x3a(%rip)
c107(9): nop 0x0(%rax,%rax,1)
c110(3): movsx %dl,%ecx
c113(3): sub $0x41,%ecx
c116(3): cmp $0x39,%ecx
c119(2): jnbe 0xf(%rip)
c11b(3): mov %r11,%r9
c11e(3): shl/sal %cl,%r9
c121(2): xor %ecx,%ecx
c123(3): test %r10,%r9
c126(2): jnz 0xb(%rip)
c128(2): xor %ecx,%ecx
c12a(3): cmp $0x7e,%dl
c12d(4): cmovne %r8,%rax
c131(4): add $0x1,%rsi
c135(3): mov %rsi,(%rdi)
c138(3): movzx (%rsi),%edx
c13b(2): test %dl,%dl
c13d(2): jz 0x34(%rip)
c13f(2): test %cl,%cl
c141(2): jnz 0xffffffcf(%rip)
c143(3): cmp $0x2e,%dl
c146(2): jz 0x32(%rip)
c148(3): cmp $0x5a,%dl
c14b(2): jnle 0x45(%rip)
c14d(3): cmp $0x41,%dl
c150(2): jnl 0xffffffe1(%rip)
c152(4): lea 0xffffffd0(%rdx),%r9d
c156(4): cmp $0x9,%r9b
c15a(2): jbe 0xffffffd7(%rip)
c15c(3): cmp $0x7e,%dl
c15f(4): cmovne %r8,%rax
c163(4): add $0x1,%rsi
c167(3): mov %rsi,(%rdi)
c16a(3): movzx (%rsi),%edx
c16d(2): test %dl,%dl
c16f(2): jnz 0xffffffd0(%rip)
c171(2): REP ret near (%rsp)
c173(5): nop 0x0(%rax,%rax,1)
c178(3): test %rax,%rax
c17b(5): mov $0x1,%ecx
c180(4): cmove %rsi,%rax
c184(2): jmp 0xffffffad(%rip)
c186(a): nop 0x0(%rax,%rax,1)
c190(4): lea 0xffffff9f(%rdx),%r9d
c194(4): cmp $0x19,%r9b
c198(2): jnbe 0xffffffc4(%rip)
c19a(2): jmp 0xffffff97(%rip)
c19c(4): nop 0x0(%rax)
c1a0(2): xor %eax,%eax
c1a2(1): ret near (%rsp)

"filevercmp" :
c1b0(2): push %r15
c1b2(2): push %r14
c1b4(2): push %r13
c1b6(2): push %r12
c1b8(1): push %rbp
c1b9(1): push %rbx
c1ba(3): mov %rsi,%rbp
c1bd(3): mov %rdi,%rbx
c1c0(4): sub $0x38,%rsp
c1c4(9): mov $0x28,%rax
c1cd(5): mov %rax,0x28(%rsp)
c1d2(2): xor %eax,%eax
c1d4(5): call 0xffff6c6c(%rip)
c1d9(2): test %eax,%eax
c1db(3): mov %eax,%r12d
c1de(6): jz 0x24a(%rip)
c1e4(3): movzx (%rbx),%eax
c1e7(2): test %al,%al
c1e9(6): jz 0x37f(%rip)
c1ef(5): movzx 0x0(%rbp),%r8d
c1f4(3): test %r8b,%r8b
c1f7(6): jz 0x259(%rip)
c1fd(7): lea 0x98bd(%rip),%r9
c204(5): mov $0x2,%ecx
c209(3): mov %rbx,%rdi
c20c(3): mov %r9,%rsi
c20f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c211(3): setnbe %dl
c214(3): sbb $0x0,%dl
c217(2): test %dl,%dl
c219(6): jz 0x34f(%rip)
c21f(5): mov $0x2,%ecx
c224(3): mov %r9,%rsi
c227(3): mov %rbp,%rdi
c22a(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c22c(3): setnbe %dl
c22f(3): sbb $0x0,%dl
c232(2): test %dl,%dl
c234(6): jz 0x21c(%rip)
c23a(7): lea 0x987f(%rip),%r9
c241(5): mov $0x3,%ecx
c246(3): mov %rbx,%rdi
c249(3): mov %r9,%rsi
c24c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c24e(3): setnbe %dl
c251(3): sbb $0x0,%dl
c254(2): test %dl,%dl
c256(6): jz 0x312(%rip)
c25c(5): mov $0x3,%ecx
c261(3): mov %r9,%rsi
c264(3): mov %rbp,%rdi
c267(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c269(3): setnbe %dl
c26c(3): sbb $0x0,%dl
c26f(2): test %dl,%dl
c271(6): jz 0x1df(%rip)
c277(2): cmp $0x2e,%al
c279(6): jz 0x2d7(%rip)
c27f(4): cmp $0x2e,%r8b
c283(6): jz 0x1cd(%rip)
c289(5): lea 0x18(%rsp),%rdi
c28e(5): mov %rbx,0x18(%rsp)
c293(5): mov %rbp,0x20(%rsp)
c298(5): call 0xfffffe48(%rip)
c29d(5): lea 0x20(%rsp),%rdi
c2a2(3): mov %rax,%r13
c2a5(5): call 0xfffffe3b(%rip)
c2aa(3): test %r13,%r13
c2ad(6): jz 0x213(%rip)
c2b3(3): sub %rbx,%r13
c2b6(3): test %rax,%rax
c2b9(6): jz 0x31a(%rip)
c2bf(3): sub %rbp,%rax
c2c2(3): mov %rax,%r14
c2c5(3): cmp %r14,%r13
c2c8(6): jz 0x2d8(%rip)
c2ce(2): xor %esi,%esi
c2d0(2): xor %edx,%edx
c2d2(6): mov $0x1,%r10d
c2d8(a): mov $0x288230371923853311,%r15
c2e2(3): cmp %rdx,%r13
c2e5(2): jnbe 0xb(%rip)
c2e7(3): cmp %rsi,%r14
c2ea(6): jbe 0x13e(%rip)
c2f0(3): mov %rsi,%r11
c2f3(4): mov %rbp,(%rsp)
c2f7(3): sub %rdx,%r11
c2fa(5): lea 0x0(%r13,%r11,1),%rax
c2ff(5): lea 0x0(%rbp,%r11,1),%r9
c304(5): mov %rax,0x8(%rsp)
c309(7): nop 0x0(%rax)
c310(3): cmp %rdx,%r13
c313(2): jbe 0xd(%rip)
c315(4): movzx 0x0(%rbx,%rdx,1),%eax
c319(3): sub $0x30,%eax
c31c(2): cmp $0x9,%al
c31e(2): jnbe 0x1c(%rip)
c320(3): cmp %rsi,%r14
c323(5): movsx 0x0(%r9,%rdx,1),%eax
c328(6): jbe 0x1c8(%rip)
c32e(3): lea 0xffffffd0(%rax),%ecx
c331(3): cmp $0x9,%cl
c334(6): jbe 0x1bc(%rip)
c33a(3): cmp %rdx,%r13
c33d(6): jz 0x236(%rip)
c343(4): movzx 0x0(%rbx,%rdx,1),%eax
c347(3): lea 0xffffffd0(%rax),%ecx
c34a(3): cmp $0x9,%cl
c34d(6): jbe 0x193(%rip)
c353(4): movzx %al,%r8d
c357(4): lea 0xffffffbf(%r8),%ecx
c35b(3): cmp $0x39,%ecx
c35e(2): jnbe 0xd(%rip)
c360(3): mov %r10,%rdi
c363(3): shl/sal %cl,%rdi
c366(3): test %r15,%rdi
c369(2): jnz 0x11(%rip)
c36b(7): add $0x100,%r8d
c372(2): cmp $0x7e,%al
c374(6): jz 0xec(%rip)
c37a(3): cmp %rsi,%r14
c37d(2): jz 0x13(%rip)
c37f(5): movzx 0x0(%r9,%rdx,1),%eax
c384(3): lea 0xffffffd0(%rax),%ecx
c387(3): cmp $0x9,%cl
c38a(6): jnbe 0xfe(%rip)
c390(2): xor %edi,%edi
c392(3): cmp %r8d,%edi
c395(6): jnz 0x193(%rip)
c39b(4): add $0x1,%rdx
c39f(4): add $0x1,%rsi
c3a3(5): jmp 0xffffff6d(%rip)
c3a8(8): nop 0x0(%rax,%rax,1)
c3b0(4): add $0x1,%rsi
c3b4(5): movsx 0x0(%rbp,%rsi,1),%eax
c3b9(2): cmp $0x30,%al
c3bb(2): jz 0xfffffff5(%rip)
c3bd(3): sub %rdx,%rsi
c3c0(3): xor %r8d,%r8d
c3c3(3): mov %rsi,%r9
c3c6(5): lea 0x0(%rbp,%rsi,1),%r11
c3cb(2): jmp 0x2b(%rip)
c3cd(3): nop (%rax)
c3d0(3): lea 0xffffffd0(%rax),%esi
c3d3(4): cmp $0x9,%sil
c3d7(6): jnbe 0x169(%rip)
c3dd(3): test %r8d,%r8d
c3e0(2): jnz 0x9(%rip)
c3e2(4): movsx %cl,%r8d
c3e6(3): sub %eax,%r8d
c3e9(4): add $0x1,%rdx
c3ed(4): movzx 0x0(%rbx,%rdx,1),%ecx
c3f1(5): movsx 0x0(%r11,%rdx,1),%eax
c3f6(3): lea 0xffffffd0(%rcx),%edi
c3f9(4): lea 0x0(%rdx,%r9,1),%rsi
c3fd(4): cmp $0x9,%dil
c401(2): jbe 0xffffffcf(%rip)
c403(3): sub $0x30,%eax
c406(2): cmp $0x9,%al
c408(6): jbe 0x1bb(%rip)
c40e(3): test %r8d,%r8d
c411(6): jz 0xfffffed1(%rip)
c417(9): nop 0x0(%rax,%rax,1)
c420(3): mov %r8d,%r12d
c423(5): nop 0x0(%rax,%rax,1)
c428(5): mov 0x28(%rsp),%rbx
c42d(9): xor $0x28,%rbx
c436(3): mov %r12d,%eax
c439(6): jnz 0x195(%rip)
c43f(4): add $0x38,%rsp
c443(1): pop %rbx
c444(1): pop %rbp
c445(2): pop %r12
c447(2): pop %r13
c449(2): pop %r14
c44b(2): pop %r15
c44d(1): ret near (%rsp)
c44e(2): nop 
c450(6): mov $0x1,%r12d
c456(2): jmp 0xffffffd2(%rip)
c458(8): nop 0x0(%rax,%rax,1)
c460(4): lea 0x0(%r11,%rdx,1),%rax
c464(3): cmp %rax,%r14
c467(6): jz 0xb9(%rip)
c46d(5): movzx 0x0(%r9,%rdx,1),%eax
c472(3): lea 0xffffffd0(%rax),%ecx
c475(3): cmp $0x9,%cl
c478(6): jbe 0xa8(%rip)
c47e(6): mov $0xffffffff,%r8d
c484(4): nop 0x0(%rax)
c488(3): movzx %al,%edi
c48b(3): lea 0xffffffbf(%rdi),%ecx
c48e(3): cmp $0x39,%ecx
c491(2): jnbe 0x11(%rip)
c493(3): mov %r10,%rbp
c496(3): shl/sal %cl,%rbp
c499(3): test %r15,%rbp
c49c(6): jnz 0xfffffef6(%rip)
c4a2(6): add $0x100,%edi
c4a8(2): cmp $0x7e,%al
c4aa(5): mov $0xffffffff,%eax
c4af(3): cmove %eax,%edi
c4b2(5): jmp 0xfffffee0(%rip)
c4b7(9): nop 0x0(%rax,%rax,1)
c4c0(5): mov 0x18(%rsp),%r13
c4c5(3): sub %rbx,%r13
c4c8(3): test %rax,%rax
c4cb(6): jnz 0xfffffdf4(%rip)
c4d1(5): mov 0x20(%rsp),%r14
c4d6(3): sub %rbp,%r14
c4d9(5): jmp 0xfffffdf5(%rip)
c4de(2): nop 
c4e0(3): xor %r8d,%r8d
c4e3(5): jmp 0xfffffe97(%rip)
c4e8(8): nop 0x0(%rax,%rax,1)
c4f0(4): movzx 0x0(%rbx,%rdx,1),%ecx
c4f4(4): mov (%rsp),%rbp
c4f8(3): cmp $0x30,%cl
c4fb(6): jnz 0xfffffebe(%rip)
c501(7): nop 0x0(%rax)
c508(4): add $0x1,%rdx
c50c(4): movzx 0x0(%rbx,%rdx,1),%ecx
c510(3): cmp $0x30,%cl
c513(2): jz 0xfffffff5(%rip)
c515(5): jmp 0xfffffea4(%rip)
c51a(6): nop 0x0(%rax,%rax,1)
c520(2): xor %edi,%edi
c522(6): mov $0xffffffff,%r8d
c528(3): sub %edi,%r8d
c52b(6): jnz 0xfffffef5(%rip)
c531(5): jmp 0xfffffef7(%rip)
c536(a): nop 0x0(%rax,%rax,1)
c540(6): mov $0x1,%r8d
c546(5): jmp 0xfffffeda(%rip)
c54b(5): nop 0x0(%rax,%rax,1)
c550(4): add $0x1,%rbx
c554(4): add $0x1,%rbp
c558(4): cmp $0x2e,%r8b
c55c(6): jz 0xfffffd2d(%rip)
c562(6): nop 0x0(%rax,%rax,1)
c568(6): mov $0xffffffff,%r12d
c56e(5): jmp 0xfffffeba(%rip)
c573(5): cmp 0x8(%rsp),%r14
c578(6): jz 0xfffffe23(%rip)
c57e(5): movzx 0x0(%r9,%r13,1),%eax
c583(3): lea 0xffffffd0(%rax),%ecx
c586(3): cmp $0x9,%cl
c589(6): jbe 0xfffffe12(%rip)
c58f(3): xor %r8d,%r8d
c592(5): jmp 0xfffffef6(%rip)
c597(9): nop 0x0(%rax,%rax,1)
c5a0(3): mov %r13,%rdx
c5a3(3): mov %rbp,%rsi
c5a6(3): mov %rbx,%rdi
c5a9(5): call 0xffff6587(%rip)
c5ae(2): test %eax,%eax
c5b0(6): jnz 0xfffffd1e(%rip)
c5b6(5): mov 0x18(%rsp),%r13
c5bb(3): sub %rbx,%r13
c5be(5): jmp 0xffffff13(%rip)
c5c3(6): mov $0xffffffff,%r8d
c5c9(5): jmp 0xfffffe57(%rip)
c5ce(5): call 0xffff66d2(%rip)
c5d3(5): mov 0x20(%rsp),%r14
c5d8(3): sub %rbp,%r14
c5db(5): jmp 0xfffffcea(%rip)

"hard_locale" :
c5e0(4): sub $0x8,%rsp
c5e4(2): xor %esi,%esi
c5e6(5): call 0xffff69aa(%rip)
c5eb(3): mov %rax,%rdx
c5ee(5): mov $0x1,%eax
c5f3(3): test %rdx,%rdx
c5f6(2): jz 0x1f(%rip)
c5f8(7): lea 0x939e(%rip),%rdi
c5ff(5): mov $0x2,%ecx
c604(3): mov %rdx,%rsi
c607(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c609(3): setnbe %cl
c60c(3): sbb $0x0,%cl
c60f(2): xor %eax,%eax
c611(2): test %cl,%cl
c613(2): jnz 0xd(%rip)
c615(4): add $0x8,%rsp
c619(1): ret near (%rsp)
c61a(6): nop 0x0(%rax,%rax,1)
c620(7): lea 0x949c(%rip),%rdi
c627(5): mov $0x6,%ecx
c62c(3): mov %rdx,%rsi
c62f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c631(3): setnbe %al
c634(2): sbb $0x0,%al
c636(2): test %al,%al
c638(3): setnz %al
c63b(4): add $0x8,%rsp
c63f(1): ret near (%rsp)

"next_prime" :
c640(4): cmp $0xa,%rdi
c644(5): mov $0xa,%eax
c649(a): mov $0x-6148914691236517205,%r9
c653(4): cmovnae %rax,%rdi
c657(4): or $0x1,%rdi
c65b(4): cmp $0xffffffff,%rdi
c65f(2): jz 0x70(%rip)
c661(7): nop 0x0(%rax)
c668(3): mov %rdi,%rax
c66b(3): mov %rdi,%rcx
c66e(3): mul %rax,%r9,%rdx
c671(3): mov %rdx,%rax
c674(3): shr $0x1,%rax
c677(4): lea 0x0(%rax,%rax,2),%rax
c67b(3): sub %rax,%rcx
c67e(4): cmp $0x9,%rdi
c682(3): mov %rcx,%rax
c685(2): jbe 0x3b(%rip)
c687(3): test %rcx,%rcx
c68a(2): jz 0x3b(%rip)
c68c(6): mov $0x10,%r8d
c692(5): mov $0x9,%esi
c697(5): mov $0x3,%ecx
c69c(2): jmp 0xd(%rip)
c69e(2): nop 
c6a0(4): add $0x8,%r8
c6a4(3): test %rdx,%rdx
c6a7(2): jz 0x1e(%rip)
c6a9(4): add $0x2,%rcx
c6ad(2): xor %edx,%edx
c6af(3): mov %rdi,%rax
c6b2(3): div %rcx,%rax
c6b5(3): add %r8,%rsi
c6b8(3): cmp %rdi,%rsi
c6bb(3): mov %rdx,%rax
c6be(2): jb 0xffffffe2(%rip)
c6c0(3): test %rax,%rax
c6c3(2): jnz 0xc(%rip)
c6c5(4): add $0x2,%rdi
c6c9(4): cmp $0xffffffff,%rdi
c6cd(2): jnz 0xffffff9b(%rip)
c6cf(3): mov %rdi,%rax
c6d2(1): ret near (%rsp)

"raw_hasher" :
c6e0(3): mov %rdi,%rax
c6e3(2): xor %edx,%edx
c6e5(4): ror $0x3,%rax
c6e9(3): div %rsi,%rax
c6ec(3): mov %rdx,%rax
c6ef(1): ret near (%rsp)

"raw_comparator" :
c6f0(3): cmp %rsi,%rdi
c6f3(3): setz %al
c6f6(1): ret near (%rsp)

"safe_hasher" :
c700(1): push %rbx
c701(3): mov %rdi,%rbx
c704(3): mov %rsi,%rdi
c707(4): mov 0x10(%rbx),%rsi
c70b(3): call 0x30(%rbx)
c70e(4): cmp %rax,0x10(%rbx)
c712(2): jbe 0xb(%rip)
c714(4): shl/sal $0x4,%rax
c718(3): add (%rbx),%rax
c71b(1): pop %rbx
c71c(1): ret near (%rsp)
c71d(5): call 0xffff63e3(%rip)

"hash_find_entry" :
c730(2): push %r14
c732(2): push %r13
c734(3): mov %rdx,%r14
c737(2): push %r12
c739(1): push %rbp
c73a(3): mov %rdi,%r12
c73d(1): push %rbx
c73e(3): mov %rsi,%rbp
c741(3): mov %ecx,%r13d
c744(5): call 0xffffffbc(%rip)
c749(3): mov %rax,(%r14)
c74c(3): mov (%rax),%rsi
c74f(3): test %rsi,%rsi
c752(6): jz 0xee(%rip)
c758(3): cmp %rbp,%rsi
c75b(3): mov %rax,%rbx
c75e(6): jz 0x95(%rip)
c764(3): mov %rbp,%rdi
c767(5): call 0x38(%r12)
c76c(2): test %al,%al
c76e(6): jnz 0x82(%rip)
c774(4): mov 0x8(%rbx),%rax
c778(3): test %rax,%rax
c77b(6): jz 0xc5(%rip)
c781(3): mov (%rax),%rsi
c784(3): cmp %rsi,%rbp
c787(2): jnz 0x22(%rip)
c789(2): jmp 0x33(%rip)
c78b(5): nop 0x0(%rax,%rax,1)
c790(4): mov 0x8(%rbx),%rbx
c794(4): mov 0x8(%rbx),%rax
c798(3): test %rax,%rax
c79b(6): jz 0xa5(%rip)
c7a1(3): mov (%rax),%rsi
c7a4(3): cmp %rbp,%rsi
c7a7(2): jz 0x15(%rip)
c7a9(3): mov %rbp,%rdi
c7ac(5): call 0x38(%r12)
c7b1(2): test %al,%al
c7b3(2): jz 0xffffffdd(%rip)
c7b5(4): mov 0x8(%rbx),%rax
c7b9(3): mov (%rax),%rsi
c7bc(3): test %r13b,%r13b
c7bf(2): jz 0x1f(%rip)
c7c1(4): mov 0x8(%rax),%rdx
c7c5(4): mov %rdx,0x8(%rbx)
c7c9(7): mov $0x0,(%rax)
c7d0(5): mov 0x48(%r12),%rdx
c7d5(4): mov %rdx,0x8(%rax)
c7d9(5): mov %rax,0x48(%r12)
c7de(1): pop %rbx
c7df(3): mov %rsi,%rax
c7e2(1): pop %rbp
c7e3(2): pop %r12
c7e5(2): pop %r13
c7e7(2): pop %r14
c7e9(1): ret near (%rsp)
c7ea(6): nop 0x0(%rax,%rax,1)
c7f0(3): mov (%rbx),%rsi
c7f3(3): test %r13b,%r13b
c7f6(2): jz 0xffffffe8(%rip)
c7f8(4): mov 0x8(%rbx),%rax
c7fc(3): test %rax,%rax
c7ff(2): jz 0x31(%rip)
c801(4): movdqu (%rax),%xmm0
c805(3): movups %xmm0,(%rbx)
c808(7): mov $0x0,(%rax)
c80f(5): mov 0x48(%r12),%rdx
c814(4): mov %rdx,0x8(%rax)
c818(5): mov %rax,0x48(%r12)
c81d(3): mov %rsi,%rax
c820(1): pop %rbx
c821(1): pop %rbp
c822(2): pop %r12
c824(2): pop %r13
c826(2): pop %r14
c828(1): ret near (%rsp)
c829(7): nop 0x0(%rax)
c830(7): mov $0x0,(%rbx)
c837(2): jmp 0xffffffa7(%rip)
c839(7): nop 0x0(%rax)
c840(2): xor %esi,%esi
c842(1): pop %rbx
c843(3): mov %rsi,%rax
c846(1): pop %rbp
c847(2): pop %r12
c849(2): pop %r13
c84b(2): pop %r14
c84d(1): ret near (%rsp)

"check_tuning.isra.0" :
c850(3): mov (%rdi),%rdx
c853(7): lea 0x92e6(%rip),%rcx
c85a(5): mov $0x1,%eax
c85f(3): cmp %rcx,%rdx
c862(2): jz 0x63(%rip)
c864(5): movss 0x8(%rdx),%xmm0
c869(7): ucomiss 0x92e4(%rip),%xmm0
c870(2): jbe 0x50(%rip)
c872(8): movss 0x92de(%rip),%xmm1
c87a(3): ucomiss %xmm0,%xmm1
c87d(2): jbe 0x43(%rip)
c87f(5): movss 0xc(%rdx),%xmm1
c884(7): ucomiss 0x92d1(%rip),%xmm1
c88b(2): jbe 0x35(%rip)
c88d(4): movss (%rdx),%xmm1
c891(7): ucomiss 0x92c8(%rip),%xmm1
c898(2): jb 0x28(%rip)
c89a(8): addss 0x92b2(%rip),%xmm1
c8a2(5): movss 0x4(%rdx),%xmm2
c8a7(3): ucomiss %xmm1,%xmm2
c8aa(2): jbe 0x16(%rip)
c8ac(8): movss 0x92b0(%rip),%xmm3
c8b4(3): ucomiss %xmm2,%xmm3
c8b7(2): jb 0x9(%rip)
c8b9(3): ucomiss %xmm1,%xmm0
c8bc(2): jnbe 0x9(%rip)
c8be(2): nop 
c8c0(3): mov %rcx,(%rdi)
c8c3(2): xor %eax,%eax
c8c5(2): REP ret near (%rsp)

"transfer_entries" :
c8d0(2): push %r15
c8d2(2): push %r14
c8d4(2): push %r13
c8d6(2): push %r12
c8d8(1): push %rbp
c8d9(1): push %rbx
c8da(4): sub $0x8,%rsp
c8de(3): mov (%rsi),%r12
c8e1(4): cmp 0x8(%rsi),%r12
c8e5(6): jnb 0xe3(%rip)
c8eb(3): mov %rdi,%rbp
c8ee(3): mov %rsi,%r13
c8f1(3): mov %edx,%r14d
c8f4(4): nop 0x0(%rax)
c8f8(4): mov (%r12),%r15
c8fc(3): test %r15,%r15
c8ff(6): jz 0xbb(%rip)
c905(5): mov 0x8(%r12),%rbx
c90a(3): test %rbx,%rbx
c90d(2): jnz 0x1f(%rip)
c90f(2): jmp 0x5c(%rip)
c911(7): nop 0x0(%rax)
c918(4): mov 0x8(%rax),%rcx
c91c(3): test %rdx,%rdx
c91f(4): mov %rcx,0x8(%rbx)
c923(4): mov %rbx,0x8(%rax)
c927(3): mov %rdx,%rbx
c92a(2): jz 0x3d(%rip)
c92c(3): mov (%rbx),%r15
c92f(3): mov %rbp,%rdi
c932(3): mov %r15,%rsi
c935(5): call 0xfffffdcb(%rip)
c93a(4): cmp $0x0,(%rax)
c93e(4): mov 0x8(%rbx),%rdx
c942(2): jnz 0xffffffd6(%rip)
c944(3): mov %r15,(%rax)
c947(5): add $0x1,0x18(%rbp)
c94c(3): test %rdx,%rdx
c94f(7): mov $0x0,(%rbx)
c956(4): mov 0x48(%rbp),%rax
c95a(4): mov %rax,0x8(%rbx)
c95e(4): mov %rbx,0x48(%rbp)
c962(3): mov %rdx,%rbx
c965(2): jnz 0xffffffc7(%rip)
c967(4): mov (%r12),%r15
c96b(3): test %r14b,%r14b
c96e(9): mov $0x0,0x8(%r12)
c977(2): jnz 0x43(%rip)
c979(3): mov %r15,%rsi
c97c(3): mov %rbp,%rdi
c97f(5): call 0xfffffd81(%rip)
c984(4): cmp $0x0,(%rax)
c988(3): mov %rax,%rbx
c98b(2): jz 0x55(%rip)
c98d(4): mov 0x48(%rbp),%rax
c991(3): test %rax,%rax
c994(2): jz 0x5c(%rip)
c996(4): mov 0x8(%rax),%rdx
c99a(4): mov %rdx,0x48(%rbp)
c99e(4): mov 0x8(%rbx),%rdx
c9a2(3): mov %r15,(%rax)
c9a5(4): mov %rdx,0x8(%rax)
c9a9(4): mov %rax,0x8(%rbx)
c9ad(8): mov $0x0,(%r12)
c9b5(5): sub $0x1,0x18(%r13)
c9ba(4): add $0x10,%r12
c9be(4): cmp %r12,0x8(%r13)
c9c2(6): jnbe 0xffffff36(%rip)
c9c8(4): add $0x8,%rsp
c9cc(5): mov $0x1,%eax
c9d1(1): pop %rbx
c9d2(1): pop %rbp
c9d3(2): pop %r12
c9d5(2): pop %r13
c9d7(2): pop %r14
c9d9(2): pop %r15
c9db(1): ret near (%rsp)
c9dc(4): nop 0x0(%rax)
c9e0(3): mov %r15,(%rax)
c9e3(5): add $0x1,0x18(%rbp)
c9e8(2): jmp 0xffffffc5(%rip)
c9ea(6): nop 0x0(%rax,%rax,1)
c9f0(5): mov $0x10,%edi
c9f5(5): call 0xffff67d3(%rip)
c9fa(3): test %rax,%rax
c9fd(2): jnz 0xffffffa1(%rip)
c9ff(4): add $0x8,%rsp
ca03(2): xor %eax,%eax
ca05(1): pop %rbx
ca06(1): pop %rbp
ca07(2): pop %r12
ca09(2): pop %r13
ca0b(2): pop %r14
ca0d(2): pop %r15
ca0f(1): ret near (%rsp)

"hash_get_n_buckets" :
ca10(4): mov 0x10(%rdi),%rax
ca14(1): ret near (%rsp)

"hash_get_n_buckets_used" :
ca20(4): mov 0x18(%rdi),%rax
ca24(1): ret near (%rsp)

"hash_get_n_entries" :
ca30(4): mov 0x20(%rdi),%rax
ca34(1): ret near (%rsp)

"hash_get_max_bucket_length" :
ca40(3): mov (%rdi),%rsi
ca43(4): mov 0x8(%rdi),%rdi
ca47(2): xor %eax,%eax
ca49(3): cmp %rdi,%rsi
ca4c(2): jnb 0x3b(%rip)
ca4e(2): nop 
ca50(4): cmp $0x0,(%rsi)
ca54(2): jz 0x28(%rip)
ca56(4): mov 0x8(%rsi),%rdx
ca5a(5): mov $0x1,%ecx
ca5f(3): test %rdx,%rdx
ca62(2): jz 0x13(%rip)
ca64(4): nop 0x0(%rax)
ca68(4): mov 0x8(%rdx),%rdx
ca6c(4): add $0x1,%rcx
ca70(3): test %rdx,%rdx
ca73(2): jnz 0xfffffff5(%rip)
ca75(3): cmp %rcx,%rax
ca78(4): cmovnae %rcx,%rax
ca7c(4): add $0x10,%rsi
ca80(3): cmp %rdi,%rsi
ca83(2): jb 0xffffffcd(%rip)
ca85(2): REP ret near (%rsp)
ca87(2): REP ret near (%rsp)

"hash_table_ok" :
ca90(3): mov (%rdi),%rcx
ca93(4): mov 0x8(%rdi),%r8
ca97(2): xor %edx,%edx
ca99(2): xor %esi,%esi
ca9b(3): cmp %r8,%rcx
ca9e(2): jnb 0x38(%rip)
caa0(4): cmp $0x0,(%rcx)
caa4(2): jz 0x29(%rip)
caa6(4): mov 0x8(%rcx),%rax
caaa(4): add $0x1,%rsi
caae(4): add $0x1,%rdx
cab2(3): test %rax,%rax
cab5(2): jz 0x18(%rip)
cab7(9): nop 0x0(%rax,%rax,1)
cac0(4): mov 0x8(%rax),%rax
cac4(4): add $0x1,%rdx
cac8(3): test %rax,%rax
cacb(2): jnz 0xfffffff5(%rip)
cacd(4): add $0x10,%rcx
cad1(3): cmp %r8,%rcx
cad4(2): jb 0xffffffcc(%rip)
cad6(2): xor %eax,%eax
cad8(4): cmp %rsi,0x18(%rdi)
cadc(2): jz 0x4(%rip)
cade(2): REP ret near (%rsp)
cae0(4): cmp %rdx,0x20(%rdi)
cae4(3): setz %al
cae7(1): ret near (%rsp)

"hash_print_statistics" :
caf0(2): push %r13
caf2(2): push %r12
caf4(3): mov %rsi,%r12
caf7(1): push %rbp
caf8(1): push %rbx
caf9(2): xor %ebx,%ebx
cafb(4): sub $0x8,%rsp
caff(3): mov (%rdi),%rsi
cb02(4): mov 0x20(%rdi),%rcx
cb06(4): mov 0x10(%rdi),%rbp
cb0a(4): mov 0x18(%rdi),%r13
cb0e(4): mov 0x8(%rdi),%rdi
cb12(3): cmp %rdi,%rsi
cb15(2): jnb 0x40(%rip)
cb17(9): nop 0x0(%rax,%rax,1)
cb20(4): cmp $0x0,(%rsi)
cb24(2): jz 0x28(%rip)
cb26(4): mov 0x8(%rsi),%rax
cb2a(5): mov $0x1,%edx
cb2f(3): test %rax,%rax
cb32(2): jz 0x13(%rip)
cb34(4): nop 0x0(%rax)
cb38(4): mov 0x8(%rax),%rax
cb3c(4): add $0x1,%rdx
cb40(3): test %rax,%rax
cb43(2): jnz 0xfffffff5(%rip)
cb45(3): cmp %rdx,%rbx
cb48(4): cmovnae %rdx,%rbx
cb4c(4): add $0x10,%rsi
cb50(3): cmp %rdi,%rsi
cb53(2): jb 0xffffffcd(%rip)
cb55(7): lea 0x8f6d(%rip),%rdx
cb5c(5): mov $0x1,%esi
cb61(3): mov %r12,%rdi
cb64(2): xor %eax,%eax
cb66(5): call 0xffff659a(%rip)
cb6b(7): lea 0x8f6f(%rip),%rdx
cb72(2): xor %eax,%eax
cb74(3): mov %rbp,%rcx
cb77(5): mov $0x1,%esi
cb7c(3): mov %r12,%rdi
cb7f(5): call 0xffff6581(%rip)
cb84(3): test %r13,%r13
cb87(2): js 0x69(%rip)
cb89(4): pxor %xmm0,%xmm0
cb8d(3): test %rbp,%rbp
cb90(5): cvtsi2sd %r13,%xmm0
cb95(8): mulsd 0x8e33(%rip),%xmm0
cb9d(2): js 0x7c(%rip)
cb9f(4): pxor %xmm1,%xmm1
cba3(5): cvtsi2sd %rbp,%xmm1
cba8(4): divsd %xmm1,%xmm0
cbac(7): lea 0x8f65(%rip),%rdx
cbb3(3): mov %r13,%rcx
cbb6(3): mov %r12,%rdi
cbb9(5): mov $0x1,%esi
cbbe(5): mov $0x1,%eax
cbc3(5): call 0xffff653d(%rip)
cbc8(4): add $0x8,%rsp
cbcc(3): mov %rbx,%rcx
cbcf(3): mov %r12,%rdi
cbd2(1): pop %rbx
cbd3(1): pop %rbp
cbd4(2): pop %r12
cbd6(2): pop %r13
cbd8(7): lea 0x8f1a(%rip),%rdx
cbdf(5): mov $0x1,%esi
cbe4(2): xor %eax,%eax
cbe6(5): jmp 0xffff651a(%rip)
cbeb(5): nop 0x0(%rax,%rax,1)
cbf0(3): mov %r13,%rax
cbf3(3): mov %r13,%rdx
cbf6(4): pxor %xmm0,%xmm0
cbfa(3): shr $0x1,%rax
cbfd(3): and $0x1,%edx
cc00(3): or %rdx,%rax
cc03(3): test %rbp,%rbp
cc06(5): cvtsi2sd %rax,%xmm0
cc0b(4): addsd %xmm0,%xmm0
cc0f(8): mulsd 0x8db9(%rip),%xmm0
cc17(2): jns 0xffffff88(%rip)
cc19(3): mov %rbp,%rax
cc1c(4): pxor %xmm1,%xmm1
cc20(3): shr $0x1,%rax
cc23(3): and $0x1,%ebp
cc26(3): or %rbp,%rax
cc29(5): cvtsi2sd %rax,%xmm1
cc2e(4): addsd %xmm1,%xmm1
cc32(5): jmp 0xffffff76(%rip)

"hash_lookup" :
cc40(2): push %r12
cc42(1): push %rbp
cc43(3): mov %rdi,%r12
cc46(1): push %rbx
cc47(3): mov %rsi,%rbp
cc4a(5): call 0xfffffab6(%rip)
cc4f(3): mov (%rax),%rsi
cc52(3): test %rsi,%rsi
cc55(2): jz 0x28(%rip)
cc57(3): mov %rax,%rbx
cc5a(2): jmp 0x9(%rip)
cc5c(4): nop 0x0(%rax)
cc60(3): mov (%rbx),%rsi
cc63(3): cmp %rbp,%rsi
cc66(2): jz 0x19(%rip)
cc68(3): mov %rbp,%rdi
cc6b(5): call 0x38(%r12)
cc70(2): test %al,%al
cc72(2): jnz 0x1e(%rip)
cc74(4): mov 0x8(%rbx),%rbx
cc78(3): test %rbx,%rbx
cc7b(2): jnz 0xffffffe5(%rip)
cc7d(2): xor %esi,%esi
cc7f(1): pop %rbx
cc80(3): mov %rsi,%rax
cc83(1): pop %rbp
cc84(2): pop %r12
cc86(1): ret near (%rsp)
cc87(9): nop 0x0(%rax,%rax,1)
cc90(3): mov (%rbx),%rsi
cc93(1): pop %rbx
cc94(1): pop %rbp
cc95(3): mov %rsi,%rax
cc98(2): pop %r12
cc9a(1): ret near (%rsp)

"hash_get_first" :
cca0(5): cmp $0x0,0x20(%rdi)
cca5(2): jz 0x2e(%rip)
cca7(3): mov (%rdi),%rdx
ccaa(4): mov 0x8(%rdi),%rcx
ccae(3): cmp %rcx,%rdx
ccb1(2): jnb 0x27(%rip)
ccb3(3): mov (%rdx),%rax
ccb6(3): test %rax,%rax
ccb9(2): jnz 0x1d(%rip)
ccbb(5): nop 0x0(%rax,%rax,1)
ccc0(4): add $0x10,%rdx
ccc4(3): cmp %rcx,%rdx
ccc7(2): jnb 0x11(%rip)
ccc9(3): mov (%rdx),%rax
cccc(3): test %rax,%rax
cccf(2): jz 0xfffffff1(%rip)
ccd1(2): REP ret near (%rsp)
ccd3(2): xor %eax,%eax
ccd5(1): ret near (%rsp)
ccd6(2): REP ret near (%rsp)
ccd8(4): sub $0x8,%rsp
ccdc(5): call 0xffff5e24(%rip)

"hash_get_next" :
ccf0(1): push %rbp
ccf1(1): push %rbx
ccf2(3): mov %rdi,%rbp
ccf5(3): mov %rsi,%rbx
ccf8(4): sub $0x8,%rsp
ccfc(5): call 0xfffffa04(%rip)
cd01(3): mov %rax,%rdx
cd04(3): mov %rax,%rcx
cd07(3): mov (%rdx),%rax
cd0a(4): mov 0x8(%rdx),%rdx
cd0e(3): cmp %rbx,%rax
cd11(2): jz 0x18(%rip)
cd13(5): nop 0x0(%rax,%rax,1)
cd18(3): test %rdx,%rdx
cd1b(2): jz 0x13(%rip)
cd1d(3): mov (%rdx),%rax
cd20(4): mov 0x8(%rdx),%rdx
cd24(3): cmp %rbx,%rax
cd27(2): jnz 0xfffffff1(%rip)
cd29(3): test %rdx,%rdx
cd2c(2): jnz 0x2c(%rip)
cd2e(4): mov 0x8(%rbp),%rdx
cd32(2): jmp 0xe(%rip)
cd34(4): nop 0x0(%rax)
cd38(3): mov (%rcx),%rax
cd3b(3): test %rax,%rax
cd3e(2): jnz 0xd(%rip)
cd40(4): add $0x10,%rcx
cd44(3): cmp %rcx,%rdx
cd47(2): jnbe 0xfffffff1(%rip)
cd49(2): xor %eax,%eax
cd4b(4): add $0x8,%rsp
cd4f(1): pop %rbx
cd50(1): pop %rbp
cd51(1): ret near (%rsp)
cd52(6): nop 0x0(%rax,%rax,1)
cd58(3): mov (%rdx),%rax
cd5b(4): add $0x8,%rsp
cd5f(1): pop %rbx
cd60(1): pop %rbp
cd61(1): ret near (%rsp)

"hash_get_entries" :
cd70(3): mov (%rdi),%r9
cd73(4): cmp %r9,0x8(%rdi)
cd77(2): jbe 0x5b(%rip)
cd79(3): xor %r8d,%r8d
cd7c(3): mov (%r9),%rcx
cd7f(3): test %rcx,%rcx
cd82(2): jz 0x3b(%rip)
cd84(3): cmp %r8,%rdx
cd87(2): jbe 0x40(%rip)
cd89(4): mov %rcx,0x0(%rsi,%r8,8)
cd8d(4): mov 0x8(%r9),%rcx
cd91(4): lea 0x1(%r8),%rax
cd95(3): test %rcx,%rcx
cd98(2): jz 0x22(%rip)
cd9a(6): nop 0x0(%rax,%rax,1)
cda0(3): cmp %rax,%rdx
cda3(2): jz 0x2d(%rip)
cda5(3): mov (%rcx),%r8
cda8(4): add $0x1,%rax
cdac(5): mov %r8,0xfffffff8(%rsi,%rax,8)
cdb1(4): mov 0x8(%rcx),%rcx
cdb5(3): test %rcx,%rcx
cdb8(2): jnz 0xffffffe8(%rip)
cdba(3): mov %rax,%r8
cdbd(4): add $0x10,%r9
cdc1(4): cmp %r9,0x8(%rdi)
cdc5(2): jnbe 0xffffffb7(%rip)
cdc7(3): mov %r8,%rax
cdca(1): ret near (%rsp)
cdcb(5): nop 0x0(%rax,%rax,1)
cdd0(2): REP ret near (%rsp)
cdd2(2): xor %eax,%eax
cdd4(1): ret near (%rsp)

"hash_do_for_each" :
cde0(2): push %r15
cde2(2): push %r14
cde4(2): push %r13
cde6(2): push %r12
cde8(1): push %rbp
cde9(1): push %rbx
cdea(4): sub $0x8,%rsp
cdee(3): mov (%rdi),%r14
cdf1(4): cmp %r14,0x8(%rdi)
cdf5(2): jbe 0x51(%rip)
cdf7(3): mov %rdx,%r13
cdfa(3): mov %rsi,%r12
cdfd(3): mov %rdi,%r15
ce00(2): xor %ebp,%ebp
ce02(3): mov (%r14),%rdi
ce05(3): test %rdi,%rdi
ce08(2): jz 0x22(%rip)
ce0a(3): mov %r14,%rbx
ce0d(2): jmp 0x6(%rip)
ce0f(1): nop 
ce10(3): mov (%rbx),%rdi
ce13(3): mov %r13,%rsi
ce16(3): call %r12
ce19(2): test %al,%al
ce1b(2): jz 0x19(%rip)
ce1d(4): mov 0x8(%rbx),%rbx
ce21(4): add $0x1,%rbp
ce25(3): test %rbx,%rbx
ce28(2): jnz 0xffffffe8(%rip)
ce2a(4): add $0x10,%r14
ce2e(4): cmp %r14,0x8(%r15)
ce32(2): jnbe 0xffffffd0(%rip)
ce34(4): add $0x8,%rsp
ce38(3): mov %rbp,%rax
ce3b(1): pop %rbx
ce3c(1): pop %rbp
ce3d(2): pop %r12
ce3f(2): pop %r13
ce41(2): pop %r14
ce43(2): pop %r15
ce45(1): ret near (%rsp)
ce46(2): xor %ebp,%ebp
ce48(2): jmp 0xffffffec(%rip)

"hash_string" :
ce50(3): movzx (%rdi),%ecx
ce53(2): xor %edx,%edx
ce55(2): test %cl,%cl
ce57(2): jz 0x26(%rip)
ce59(7): nop 0x0(%rax)
ce60(3): mov %rdx,%rax
ce63(4): add $0x1,%rdi
ce67(4): shl/sal $0x5,%rax
ce6b(3): sub %rdx,%rax
ce6e(2): xor %edx,%edx
ce70(3): add %rcx,%rax
ce73(3): movzx (%rdi),%ecx
ce76(3): div %rsi,%rax
ce79(2): test %cl,%cl
ce7b(2): jnz 0xffffffe5(%rip)
ce7d(3): mov %rdx,%rax
ce80(1): ret near (%rsp)

"hash_reset_tuning" :
ce90(a): mov $0x4575657221408423936,%rax
ce9a(4): mov $0x0,0x10(%rdi)
ce9e(3): mov %rax,(%rdi)
cea1(a): mov $0x4590573145673223373,%rax
ceab(4): mov %rax,0x8(%rdi)
ceaf(1): ret near (%rsp)

"hash_initialize" :
ceb0(2): push %r15
ceb2(2): push %r14
ceb4(7): lea 0xfffff825(%rip),%rax
cebb(2): push %r13
cebd(2): push %r12
cebf(3): mov %rdx,%r12
cec2(1): push %rbp
cec3(1): push %rbx
cec4(3): mov %rcx,%r13
cec7(3): mov %rdi,%rbp
ceca(5): mov $0x50,%edi
cecf(3): mov %rsi,%r15
ced2(4): sub $0x8,%rsp
ced6(3): test %rdx,%rdx
ced9(3): mov %r8,%r14
cedc(4): cmove %rax,%r12
cee0(7): lea 0xfffff809(%rip),%rax
cee7(3): test %rcx,%rcx
ceea(4): cmove %rax,%r13
ceee(5): call 0xffff62da(%rip)
cef3(3): test %rax,%rax
cef6(3): mov %rax,%rbx
cef9(6): jz 0xb1(%rip)
ceff(3): test %r15,%r15
cf02(4): lea 0x28(%rax),%rdi
cf06(6): jz 0xba(%rip)
cf0c(4): mov %r15,0x28(%rax)
cf10(5): call 0xfffff940(%rip)
cf15(2): test %al,%al
cf17(6): jz 0x89(%rip)
cf1d(5): cmp $0x0,0x10(%r15)
cf22(6): jz 0xfe(%rip)
cf28(3): mov %rbp,%rdi
cf2b(5): call 0xfffff715(%rip)
cf30(5): mov $0x8,%edx
cf35(3): mov %rax,%rbp
cf38(2): xor %ecx,%ecx
cf3a(3): mov %rdx,%rax
cf3d(3): mul %rax,%rbp,%rdx
cf40(6): jo 0x11a(%rip)
cf46(3): test %rax,%rax
cf49(2): js 0x57(%rip)
cf4b(3): test %rcx,%rcx
cf4e(2): jnz 0x52(%rip)
cf50(3): test %rbp,%rbp
cf53(4): mov %rbp,0x10(%rbx)
cf57(2): jz 0x49(%rip)
cf59(5): mov $0x10,%esi
cf5e(3): mov %rbp,%rdi
cf61(5): call 0xffff5ebf(%rip)
cf66(3): test %rax,%rax
cf69(3): mov %rax,(%rbx)
cf6c(2): jz 0x34(%rip)
cf6e(4): shl/sal $0x4,%rbp
cf72(8): mov $0x0,0x18(%rbx)
cf7a(8): mov $0x0,0x20(%rbx)
cf82(3): add %rax,%rbp
cf85(4): mov %r12,0x30(%rbx)
cf89(4): mov %r13,0x38(%rbx)
cf8d(4): mov %rbp,0x8(%rbx)
cf91(4): mov %r14,0x40(%rbx)
cf95(8): mov $0x0,0x48(%rbx)
cf9d(2): jmp 0xd(%rip)
cf9f(1): nop 
cfa0(3): mov %rbx,%rdi
cfa3(2): xor %ebx,%ebx
cfa5(5): call 0xffff621b(%rip)
cfaa(4): add $0x8,%rsp
cfae(3): mov %rbx,%rax
cfb1(1): pop %rbx
cfb2(1): pop %rbp
cfb3(2): pop %r12
cfb5(2): pop %r13
cfb7(2): pop %r14
cfb9(2): pop %r15
cfbb(1): ret near (%rsp)
cfbc(4): nop 0x0(%rax)
cfc0(7): lea 0x8b79(%rip),%rax
cfc7(4): mov %rax,0x28(%rbx)
cfcb(5): call 0xfffff885(%rip)
cfd0(2): test %al,%al
cfd2(8): movss 0x8b8e(%rip),%xmm1
cfda(2): jz 0xffffffc6(%rip)
cfdc(3): test %rbp,%rbp
cfdf(2): js 0x4c(%rip)
cfe1(4): pxor %xmm0,%xmm0
cfe5(5): cvtsi2ss %rbp,%xmm0
cfea(4): divss %xmm1,%xmm0
cfee(7): ucomiss 0x8b77(%rip),%xmm0
cff5(2): jnb 0xffffffab(%rip)
cff7(7): ucomiss 0x8b72(%rip),%xmm0
cffe(2): jb 0x52(%rip)
d000(8): subss 0x8b68(%rip),%xmm0
d008(a): mov $0x-9223372036854775808,%rax
d012(5): cvttss2si %xmm0,%rbp
d017(3): xor %rax,%rbp
d01a(5): jmp 0xffffff0e(%rip)
d01f(1): nop 
d020(3): test %rbp,%rbp
d023(6): movss 0x8(%r15),%xmm1
d029(2): jns 0xffffffb8(%rip)
d02b(3): mov %rbp,%rax
d02e(4): pxor %xmm0,%xmm0
d032(3): shr $0x1,%rax
d035(3): and $0x1,%ebp
d038(3): or %rbp,%rax
d03b(5): cvtsi2ss %rax,%xmm0
d040(4): addss %xmm0,%xmm0
d044(2): jmp 0xffffffa6(%rip)
d046(a): nop 0x0(%rax,%rax,1)
d050(5): cvttss2si %xmm0,%rbp
d055(5): jmp 0xfffffed3(%rip)
d05a(5): mov $0x1,%ecx
d05f(5): jmp 0xfffffee7(%rip)

"hash_clear" :
d070(2): push %r12
d072(1): push %rbp
d073(3): mov %rdi,%rbp
d076(1): push %rbx
d077(3): mov (%rdi),%r12
d07a(4): cmp 0x8(%rdi),%r12
d07e(2): jnb 0x6d(%rip)
d080(5): cmp $0x0,(%r12)
d085(2): jz 0x5c(%rip)
d087(5): mov 0x8(%r12),%rbx
d08c(4): mov 0x40(%rbp),%rax
d090(3): test %rbx,%rbx
d093(2): jz 0x32(%rip)
d095(3): nop (%rax)
d098(3): test %rax,%rax
d09b(2): jz 0xb(%rip)
d09d(3): mov (%rbx),%rdi
d0a0(2): call %rax
d0a2(4): mov 0x40(%rbp),%rax
d0a6(4): mov 0x8(%rbx),%rdx
d0aa(4): mov 0x48(%rbp),%rcx
d0ae(7): mov $0x0,(%rbx)
d0b5(3): test %rdx,%rdx
d0b8(4): mov %rcx,0x8(%rbx)
d0bc(4): mov %rbx,0x48(%rbp)
d0c0(3): mov %rdx,%rbx
d0c3(2): jnz 0xffffffd5(%rip)
d0c5(3): test %rax,%rax
d0c8(2): jz 0x8(%rip)
d0ca(4): mov (%r12),%rdi
d0ce(2): call %rax
d0d0(8): mov $0x0,(%r12)
d0d8(9): mov $0x0,0x8(%r12)
d0e1(4): add $0x10,%r12
d0e5(4): cmp %r12,0x8(%rbp)
d0e9(2): jnbe 0xffffff97(%rip)
d0eb(8): mov $0x0,0x18(%rbp)
d0f3(8): mov $0x0,0x20(%rbp)
d0fb(1): pop %rbx
d0fc(1): pop %rbp
d0fd(2): pop %r12
d0ff(1): ret near (%rsp)

"hash_free" :
d100(2): push %r12
d102(1): push %rbp
d103(3): mov %rdi,%r12
d106(1): push %rbx
d107(5): cmp $0x0,0x40(%rdi)
d10c(3): mov (%rdi),%rbp
d10f(4): mov 0x8(%rdi),%rax
d113(2): jz 0x50(%rip)
d115(5): cmp $0x0,0x20(%rdi)
d11a(2): jz 0x49(%rip)
d11c(3): cmp %rax,%rbp
d11f(2): jnb 0x7d(%rip)
d121(7): nop 0x0(%rax)
d128(4): mov 0x0(%rbp),%rdi
d12c(3): test %rdi,%rdi
d12f(2): jz 0x27(%rip)
d131(3): mov %rbp,%rbx
d134(2): jmp 0xf(%rip)
d136(a): nop 0x0(%rax,%rax,1)
d140(3): mov (%rbx),%rdi
d143(5): call 0x40(%r12)
d148(4): mov 0x8(%rbx),%rbx
d14c(3): test %rbx,%rbx
d14f(2): jnz 0xfffffff1(%rip)
d151(5): mov 0x8(%r12),%rax
d156(4): add $0x10,%rbp
d15a(3): cmp %rbp,%rax
d15d(2): jnbe 0xffffffcb(%rip)
d15f(4): mov (%r12),%rbp
d163(3): cmp %rax,%rbp
d166(2): jnb 0x36(%rip)
d168(8): nop 0x0(%rax,%rax,1)
d170(4): mov 0x8(%rbp),%rdi
d174(3): test %rdi,%rdi
d177(2): jz 0x1a(%rip)
d179(7): nop 0x0(%rax)
d180(4): mov 0x8(%rdi),%rbx
d184(5): call 0xffff603c(%rip)
d189(3): test %rbx,%rbx
d18c(3): mov %rbx,%rdi
d18f(2): jnz 0xfffffff1(%rip)
d191(4): add $0x10,%rbp
d195(5): cmp %rbp,0x8(%r12)
d19a(2): jnbe 0xffffffd6(%rip)
d19c(5): mov 0x48(%r12),%rdi
d1a1(3): test %rdi,%rdi
d1a4(2): jz 0x1d(%rip)
d1a6(a): nop 0x0(%rax,%rax,1)
d1b0(4): mov 0x8(%rdi),%rbx
d1b4(5): call 0xffff600c(%rip)
d1b9(3): test %rbx,%rbx
d1bc(3): mov %rbx,%rdi
d1bf(2): jnz 0xfffffff1(%rip)
d1c1(4): mov (%r12),%rdi
d1c5(5): call 0xffff5ffb(%rip)
d1ca(1): pop %rbx
d1cb(3): mov %r12,%rdi
d1ce(1): pop %rbp
d1cf(2): pop %r12
d1d1(5): jmp 0xffff5fef(%rip)

"hash_rehash" :
d1e0(2): push %r12
d1e2(1): push %rbp
d1e3(3): mov %rdi,%rbp
d1e6(1): push %rbx
d1e7(4): sub $0x60,%rsp
d1eb(4): mov 0x28(%rdi),%r12
d1ef(9): mov $0x28,%rax
d1f8(5): mov %rax,0x58(%rsp)
d1fd(2): xor %eax,%eax
d1ff(6): cmp $0x0,0x10(%r12)
d205(2): jnz 0x53(%rip)
d207(3): test %rsi,%rsi
d20a(6): js 0x17e(%rip)
d210(4): pxor %xmm0,%xmm0
d214(5): cvtsi2ss %rsi,%xmm0
d219(7): divss 0x8(%r12),%xmm0
d220(7): ucomiss 0x8945(%rip),%xmm0
d227(6): jnb 0x139(%rip)
d22d(7): ucomiss 0x893c(%rip),%xmm0
d234(6): jb 0x17c(%rip)
d23a(8): subss 0x892e(%rip),%xmm0
d242(a): mov $0x-9223372036854775808,%rax
d24c(5): cvttss2si %xmm0,%rsi
d251(3): xor %rax,%rsi
d254(4): nop 0x0(%rax)
d258(3): mov %rsi,%rdi
d25b(5): call 0xfffff3e5(%rip)
d260(5): mov $0x8,%edx
d265(3): mov %rax,%rbx
d268(2): xor %ecx,%ecx
d26a(3): mov %rdx,%rax
d26d(3): mul %rax,%rbx,%rdx
d270(6): jo 0x19f(%rip)
d276(3): test %rax,%rax
d279(5): mov $0x1,%eax
d27e(4): cmovs %rax,%rcx
d282(3): test %rbx,%rbx
d285(6): jz 0xdb(%rip)
d28b(3): and $0x1,%ecx
d28e(6): jnz 0xd2(%rip)
d294(4): cmp %rbx,0x10(%rbp)
d298(6): jz 0x128(%rip)
d29e(5): mov $0x10,%esi
d2a3(3): mov %rbx,%rdi
d2a6(5): call 0xffff5b7a(%rip)
d2ab(3): test %rax,%rax
d2ae(4): mov %rax,(%rsp)
d2b2(6): jz 0xae(%rip)
d2b8(5): mov %rbx,0x10(%rsp)
d2bd(4): shl/sal $0x4,%rbx
d2c1(5): mov %r12,0x28(%rsp)
d2c6(3): add %rax,%rbx
d2c9(4): mov 0x30(%rbp),%rax
d2cd(3): mov %rsp,%r12
d2d0(2): xor %edx,%edx
d2d2(3): mov %rbp,%rsi
d2d5(3): mov %r12,%rdi
d2d8(5): mov %rbx,0x8(%rsp)
d2dd(9): mov $0x0,0x18(%rsp)
d2e6(5): mov %rax,0x30(%rsp)
d2eb(4): mov 0x38(%rbp),%rax
d2ef(9): mov $0x0,0x20(%rsp)
d2f8(5): mov %rax,0x38(%rsp)
d2fd(4): mov 0x40(%rbp),%rax
d301(5): mov %rax,0x40(%rsp)
d306(4): mov 0x48(%rbp),%rax
d30a(5): mov %rax,0x48(%rsp)
d30f(5): call 0xfffff5c1(%rip)
d314(2): test %al,%al
d316(2): mov %eax,%ebx
d318(6): jnz 0xb8(%rip)
d31e(5): mov 0x48(%rsp),%rax
d323(5): mov $0x1,%edx
d328(3): mov %r12,%rsi
d32b(3): mov %rbp,%rdi
d32e(4): mov %rax,0x48(%rbp)
d332(5): call 0xfffff59e(%rip)
d337(2): test %al,%al
d339(6): jz 0xe0(%rip)
d33f(2): xor %edx,%edx
d341(3): mov %r12,%rsi
d344(3): mov %rbp,%rdi
d347(5): call 0xfffff589(%rip)
d34c(2): test %al,%al
d34e(6): jz 0xcb(%rip)
d354(4): mov (%rsp),%rdi
d358(5): call 0xffff5e68(%rip)
d35d(2): jmp 0x5(%rip)
d35f(1): nop 
d360(2): xor %ebx,%ebx
d362(5): mov 0x58(%rsp),%rcx
d367(9): xor $0x28,%rcx
d370(2): mov %ebx,%eax
d372(6): jnz 0x98(%rip)
d378(4): add $0x60,%rsp
d37c(1): pop %rbx
d37d(1): pop %rbp
d37e(2): pop %r12
d380(1): ret near (%rsp)
d381(7): nop 0x0(%rax)
d388(3): mov %rsi,%rax
d38b(4): pxor %xmm0,%xmm0
d38f(3): shr $0x1,%rax
d392(3): and $0x1,%esi
d395(3): or %rsi,%rax
d398(5): cvtsi2ss %rax,%xmm0
d39d(4): addss %xmm0,%xmm0
d3a1(5): jmp 0xfffffe78(%rip)
d3a6(a): nop 0x0(%rax,%rax,1)
d3b0(5): cvttss2si %xmm0,%rsi
d3b5(5): jmp 0xfffffea3(%rip)
d3ba(6): nop 0x0(%rax,%rax,1)
d3c0(5): mov $0x1,%ebx
d3c5(2): jmp 0xffffff9d(%rip)
d3c7(9): nop 0x0(%rax,%rax,1)
d3d0(4): mov 0x0(%rbp),%rdi
d3d4(5): call 0xffff5dec(%rip)
d3d9(4): mov (%rsp),%rax
d3dd(4): mov %rax,0x0(%rbp)
d3e1(5): mov 0x8(%rsp),%rax
d3e6(4): mov %rax,0x8(%rbp)
d3ea(5): mov 0x10(%rsp),%rax
d3ef(4): mov %rax,0x10(%rbp)
d3f3(5): mov 0x18(%rsp),%rax
d3f8(4): mov %rax,0x18(%rbp)
d3fc(5): mov 0x48(%rsp),%rax
d401(4): mov %rax,0x48(%rbp)
d405(5): jmp 0xffffff5d(%rip)
d40a(5): call 0xffff5896(%rip)
d40f(5): mov $0x1,%ecx
d414(5): jmp 0xfffffe62(%rip)
d419(5): call 0xffff56e7(%rip)

"hash_insert_if_absent" :
d420(2): push %r13
d422(2): push %r12
d424(1): push %rbp
d425(1): push %rbx
d426(4): sub $0x18,%rsp
d42a(9): mov $0x28,%rax
d433(5): mov %rax,0x8(%rsp)
d438(2): xor %eax,%eax
d43a(3): test %rsi,%rsi
d43d(6): jz 0x1c0(%rip)
d443(3): mov %rsp,%r12
d446(2): xor %ecx,%ecx
d448(3): mov %rdx,%r13
d44b(3): mov %r12,%rdx
d44e(3): mov %rdi,%rbx
d451(3): mov %rsi,%rbp
d454(5): call 0xfffff2dc(%rip)
d459(3): test %rax,%rax
d45c(3): mov %rax,%rdx
d45f(2): jz 0x31(%rip)
d461(2): xor %eax,%eax
d463(3): test %r13,%r13
d466(2): jz 0x6(%rip)
d468(4): mov %rdx,0x0(%r13)
d46c(5): mov 0x8(%rsp),%rcx
d471(9): xor $0x28,%rcx
d47a(6): jnz 0x225(%rip)
d480(4): add $0x18,%rsp
d484(1): pop %rbx
d485(1): pop %rbp
d486(2): pop %r12
d488(2): pop %r13
d48a(1): ret near (%rsp)
d48b(5): nop 0x0(%rax,%rax,1)
d490(4): mov 0x18(%rbx),%rax
d494(3): test %rax,%rax
d497(2): js 0x79(%rip)
d499(4): pxor %xmm1,%xmm1
d49d(4): mov 0x28(%rbx),%rdx
d4a1(5): cvtsi2ss %rax,%xmm1
d4a6(4): mov 0x10(%rbx),%rax
d4aa(3): test %rax,%rax
d4ad(6): js 0x8d(%rip)
d4b3(4): pxor %xmm0,%xmm0
d4b7(5): cvtsi2ss %rax,%xmm0
d4bc(5): mulss 0x8(%rdx),%xmm0
d4c1(3): ucomiss %xmm0,%xmm1
d4c4(6): jnbe 0x9c(%rip)
d4ca(4): mov (%rsp),%r12
d4ce(5): cmp $0x0,(%r12)
d4d3(6): jz 0x135(%rip)
d4d9(4): mov 0x48(%rbx),%rax
d4dd(3): test %rax,%rax
d4e0(6): jz 0x140(%rip)
d4e6(4): mov 0x8(%rax),%rdx
d4ea(4): mov %rdx,0x48(%rbx)
d4ee(5): mov 0x8(%r12),%rdx
d4f3(3): mov %rbp,(%rax)
d4f6(4): mov %rdx,0x8(%rax)
d4fa(5): mov %rax,0x8(%r12)
d4ff(5): mov $0x1,%eax
d504(5): add $0x1,0x20(%rbx)
d509(5): jmp 0xffffff63(%rip)
d50e(2): nop 
d510(3): mov %rax,%rdx
d513(4): pxor %xmm1,%xmm1
d517(3): and $0x1,%eax
d51a(3): shr $0x1,%rdx
d51d(3): or %rax,%rdx
d520(4): mov 0x10(%rbx),%rax
d524(5): cvtsi2ss %rdx,%xmm1
d529(4): mov 0x28(%rbx),%rdx
d52d(3): test %rax,%rax
d530(4): addss %xmm1,%xmm1
d534(6): jns 0xffffff7f(%rip)
d53a(3): mov %rax,%rcx
d53d(4): pxor %xmm0,%xmm0
d541(3): shr $0x1,%rcx
d544(3): and $0x1,%eax
d547(3): or %rax,%rcx
d54a(5): cvtsi2ss %rcx,%xmm0
d54f(4): addss %xmm0,%xmm0
d553(5): jmp 0xffffff69(%rip)
d558(8): nop 0x0(%rax,%rax,1)
d560(4): lea 0x28(%rbx),%rdi
d564(5): call 0xfffff2ec(%rip)
d569(4): mov 0x10(%rbx),%rax
d56d(4): mov 0x28(%rbx),%rdx
d571(3): test %rax,%rax
d574(5): movss 0x8(%rdx),%xmm2
d579(6): js 0xc7(%rip)
d57f(4): pxor %xmm0,%xmm0
d583(5): cvtsi2ss %rax,%xmm0
d588(4): mov 0x18(%rbx),%rax
d58c(3): test %rax,%rax
d58f(6): js 0xd1(%rip)
d595(4): pxor %xmm1,%xmm1
d599(5): cvtsi2ss %rax,%xmm1
d59e(3): movaps %xmm2,%xmm3
d5a1(4): mulss %xmm0,%xmm3
d5a5(3): ucomiss %xmm3,%xmm1
d5a8(6): jbe 0xffffff22(%rip)
d5ae(4): cmp $0x0,0x10(%rdx)
d5b2(5): mulss 0xc(%rdx),%xmm0
d5b7(2): jnz 0x6(%rip)
d5b9(4): mulss %xmm2,%xmm0
d5bd(7): ucomiss 0x85a8(%rip),%xmm0
d5c4(2): jnb 0x6f(%rip)
d5c6(7): ucomiss 0x85a3(%rip),%xmm0
d5cd(6): jnb 0xb3(%rip)
d5d3(5): cvttss2si %xmm0,%rsi
d5d8(3): mov %rbx,%rdi
d5db(5): call 0xfffffc05(%rip)
d5e0(2): test %al,%al
d5e2(2): jz 0x51(%rip)
d5e4(2): xor %ecx,%ecx
d5e6(3): mov %r12,%rdx
d5e9(3): mov %rbp,%rsi
d5ec(3): mov %rbx,%rdi
d5ef(5): call 0xfffff141(%rip)
d5f4(3): test %rax,%rax
d5f7(6): jz 0xfffffed3(%rip)
d5fd(5): call 0xffff5503(%rip)
d602(6): nop 0x0(%rax,%rax,1)
d608(4): mov %rbp,(%r12)
d60c(5): mov $0x1,%eax
d611(5): add $0x1,0x20(%rbx)
d616(5): add $0x1,0x18(%rbx)
d61b(5): jmp 0xfffffe51(%rip)
d620(5): mov $0x10,%edi
d625(5): call 0xffff5ba3(%rip)
d62a(3): test %rax,%rax
d62d(6): jnz 0xfffffec1(%rip)
d633(5): mov $0xffffffff,%eax
d638(5): jmp 0xfffffe34(%rip)
d63d(3): nop (%rax)
d640(3): mov %rax,%rcx
d643(4): pxor %xmm0,%xmm0
d647(3): shr $0x1,%rcx
d64a(3): and $0x1,%eax
d64d(3): or %rax,%rcx
d650(5): cvtsi2ss %rcx,%xmm0
d655(4): addss %xmm0,%xmm0
d659(5): jmp 0xffffff2f(%rip)
d65e(2): nop 
d660(3): mov %rax,%rcx
d663(4): pxor %xmm1,%xmm1
d667(3): shr $0x1,%rcx
d66a(3): and $0x1,%eax
d66d(3): or %rax,%rcx
d670(5): cvtsi2ss %rcx,%xmm1
d675(4): addss %xmm1,%xmm1
d679(5): jmp 0xffffff25(%rip)
d67e(2): nop 
d680(8): subss 0x84e8(%rip),%xmm0
d688(a): mov $0x-9223372036854775808,%rax
d692(5): cvttss2si %xmm0,%rsi
d697(3): xor %rax,%rsi
d69a(5): jmp 0xffffff3e(%rip)
d69f(5): call 0xffff5601(%rip)

"hash_insert" :
d6b0(1): push %rbx
d6b1(3): mov %rsi,%rbx
d6b4(4): sub $0x10,%rsp
d6b8(3): mov %rsp,%rdx
d6bb(9): mov $0x28,%rax
d6c4(5): mov %rax,0x8(%rsp)
d6c9(2): xor %eax,%eax
d6cb(5): call 0xfffffd55(%rip)
d6d0(3): cmp $0xff,%eax
d6d3(2): jz 0x2d(%rip)
d6d5(2): test %eax,%eax
d6d7(2): jnz 0x6(%rip)
d6d9(4): mov (%rsp),%rbx
d6dd(5): mov 0x8(%rsp),%rcx
d6e2(9): xor $0x28,%rcx
d6eb(3): mov %rbx,%rax
d6ee(2): jnz 0x16(%rip)
d6f0(4): add $0x10,%rsp
d6f4(1): pop %rbx
d6f5(1): ret near (%rsp)
d6f6(a): nop 0x0(%rax,%rax,1)
d700(2): xor %ebx,%ebx
d702(2): jmp 0xffffffdb(%rip)
d704(5): call 0xffff559c(%rip)

"hash_delete" :
d710(2): push %r12
d712(1): push %rbp
d713(5): mov $0x1,%ecx
d718(1): push %rbx
d719(3): mov %rdi,%rbx
d71c(4): sub $0x10,%rsp
d720(3): mov %rsp,%rdx
d723(9): mov $0x28,%rax
d72c(5): mov %rax,0x8(%rsp)
d731(2): xor %eax,%eax
d733(5): call 0xffffeffd(%rip)
d738(3): test %rax,%rax
d73b(3): mov %rax,%rbp
d73e(2): jz 0x11(%rip)
d740(4): mov (%rsp),%rax
d744(5): sub $0x1,0x20(%rbx)
d749(4): cmp $0x0,(%rax)
d74d(2): jz 0x23(%rip)
d74f(5): mov 0x8(%rsp),%rcx
d754(9): xor $0x28,%rcx
d75d(3): mov %rbp,%rax
d760(6): jnz 0x1ae(%rip)
d766(4): add $0x10,%rsp
d76a(1): pop %rbx
d76b(1): pop %rbp
d76c(2): pop %r12
d76e(1): ret near (%rsp)
d76f(1): nop 
d770(4): mov 0x18(%rbx),%rax
d774(4): sub $0x1,%rax
d778(3): test %rax,%rax
d77b(4): mov %rax,0x18(%rbx)
d77f(6): js 0x101(%rip)
d785(4): pxor %xmm0,%xmm0
d789(5): cvtsi2ss %rax,%xmm0
d78e(4): mov 0x10(%rbx),%rax
d792(4): mov 0x28(%rbx),%rdx
d796(3): test %rax,%rax
d799(6): js 0xc7(%rip)
d79f(4): pxor %xmm1,%xmm1
d7a3(5): cvtsi2ss %rax,%xmm1
d7a8(4): mulss (%rdx),%xmm1
d7ac(3): ucomiss %xmm0,%xmm1
d7af(2): jbe 0xffffffa0(%rip)
d7b1(4): lea 0x28(%rbx),%rdi
d7b5(5): call 0xfffff09b(%rip)
d7ba(4): mov 0x10(%rbx),%rax
d7be(4): mov 0x28(%rbx),%rdx
d7c2(3): test %rax,%rax
d7c5(6): js 0x12b(%rip)
d7cb(4): pxor %xmm0,%xmm0
d7cf(5): cvtsi2ss %rax,%xmm0
d7d4(4): mov 0x18(%rbx),%rax
d7d8(3): test %rax,%rax
d7db(6): js 0xf5(%rip)
d7e1(4): pxor %xmm1,%xmm1
d7e5(5): cvtsi2ss %rax,%xmm1
d7ea(4): movss (%rdx),%xmm2
d7ee(4): mulss %xmm0,%xmm2
d7f2(3): ucomiss %xmm1,%xmm2
d7f5(6): jbe 0xffffff5a(%rip)
d7fb(4): cmp $0x0,0x10(%rdx)
d7ff(5): mulss 0x4(%rdx),%xmm0
d804(6): jz 0xbc(%rip)
d80a(7): ucomiss 0x835f(%rip),%xmm0
d811(6): jnb 0x8f(%rip)
d817(5): cvttss2si %xmm0,%rsi
d81c(3): mov %rbx,%rdi
d81f(5): call 0xfffff9c1(%rip)
d824(2): test %al,%al
d826(6): jnz 0xffffff29(%rip)
d82c(4): mov 0x48(%rbx),%rdi
d830(3): test %rdi,%rdi
d833(2): jz 0x16(%rip)
d835(3): nop (%rax)
d838(4): mov 0x8(%rdi),%r12
d83c(5): call 0xffff5984(%rip)
d841(3): test %r12,%r12
d844(3): mov %r12,%rdi
d847(2): jnz 0xfffffff1(%rip)
d849(8): mov $0x0,0x48(%rbx)
d851(5): jmp 0xfffffefe(%rip)
d856(a): nop 0x0(%rax,%rax,1)
d860(3): mov %rax,%rcx
d863(4): pxor %xmm1,%xmm1
d867(3): shr $0x1,%rcx
d86a(3): and $0x1,%eax
d86d(3): or %rax,%rcx
d870(5): cvtsi2ss %rcx,%xmm1
d875(4): addss %xmm1,%xmm1
d879(5): jmp 0xffffff2f(%rip)
d87e(2): nop 
d880(3): mov %rax,%rdx
d883(4): pxor %xmm0,%xmm0
d887(3): shr $0x1,%rdx
d88a(3): and $0x1,%eax
d88d(3): or %rax,%rdx
d890(5): cvtsi2ss %rdx,%xmm0
d895(4): addss %xmm0,%xmm0
d899(5): jmp 0xfffffef5(%rip)
d89e(2): nop 
d8a0(8): subss 0x82c8(%rip),%xmm0
d8a8(a): mov $0x-9223372036854775808,%rax
d8b2(5): cvttss2si %xmm0,%rsi
d8b7(3): xor %rax,%rsi
d8ba(5): jmp 0xffffff62(%rip)
d8bf(1): nop 
d8c0(5): mulss 0x8(%rdx),%xmm0
d8c5(5): jmp 0xffffff45(%rip)
d8ca(6): nop 0x0(%rax,%rax,1)
d8d0(3): mov %rax,%rcx
d8d3(4): pxor %xmm1,%xmm1
d8d7(3): shr $0x1,%rcx
d8da(3): and $0x1,%eax
d8dd(3): or %rax,%rcx
d8e0(5): cvtsi2ss %rcx,%xmm1
d8e5(4): addss %xmm1,%xmm1
d8e9(5): jmp 0xffffff01(%rip)
d8ee(2): nop 
d8f0(3): mov %rax,%rcx
d8f3(4): pxor %xmm0,%xmm0
d8f7(3): shr $0x1,%rcx
d8fa(3): and $0x1,%eax
d8fd(3): or %rax,%rcx
d900(5): cvtsi2ss %rcx,%xmm0
d905(4): addss %xmm0,%xmm0
d909(5): jmp 0xfffffecb(%rip)
d90e(5): call 0xffff5392(%rip)

"heap_default_compare" :
d920(2): xor %eax,%eax
d922(1): ret near (%rsp)

"heap_alloc" :
d930(2): push %r12
d932(1): push %rbp
d933(3): mov %rdi,%r12
d936(1): push %rbx
d937(5): mov $0x20,%edi
d93c(3): mov %rsi,%rbx
d93f(5): call 0x44a1(%rip)
d944(3): test %rbx,%rbx
d947(5): mov $0x8,%edx
d94c(3): mov %rax,%rbp
d94f(5): mov $0x1,%eax
d954(4): cmove %rax,%rbx
d958(3): mov %rdx,%rax
d95b(3): mul %rax,%rbx,%rdx
d95e(2): jo 0x4c(%rip)
d960(2): xor %ecx,%ecx
d962(3): test %rax,%rax
d965(2): js 0x4c(%rip)
d967(3): test %rcx,%rcx
d96a(2): jnz 0x47(%rip)
d96c(8): lea 0x0(,%rbx,8),%rdi
d974(5): call 0x446c(%rip)
d979(4): mov %rax,0x0(%rbp)
d97d(7): mov $0x0,(%rax)
d984(7): lea 0xffffff95(%rip),%rax
d98b(3): test %r12,%r12
d98e(4): mov %rbx,0x8(%rbp)
d992(8): mov $0x0,0x10(%rbp)
d99a(4): cmove %rax,%r12
d99e(3): mov %rbp,%rax
d9a1(4): mov %r12,0x18(%rbp)
d9a5(1): pop %rbx
d9a6(1): pop %rbp
d9a7(2): pop %r12
d9a9(1): ret near (%rsp)
d9aa(5): mov $0x1,%ecx
d9af(2): jmp 0xffffffb3(%rip)
d9b1(5): call 0x467f(%rip)

"heap_free" :
d9c0(1): push %rbx
d9c1(3): mov %rdi,%rbx
d9c4(3): mov (%rdi),%rdi
d9c7(5): call 0xffff57f9(%rip)
d9cc(3): mov %rbx,%rdi
d9cf(1): pop %rbx
d9d0(5): jmp 0xffff57f0(%rip)

"heap_insert" :
d9e0(2): push %r15
d9e2(2): push %r14
d9e4(2): push %r13
d9e6(2): push %r12
d9e8(3): mov %rsi,%r12
d9eb(1): push %rbp
d9ec(1): push %rbx
d9ed(3): mov %rdi,%rbp
d9f0(4): sub $0x8,%rsp
d9f4(4): mov 0x8(%rdi),%rsi
d9f8(4): mov 0x10(%rdi),%rbx
d9fc(3): mov (%rdi),%rdi
d9ff(4): lea 0xffffffff(%rsi),%rax
da03(3): cmp %rbx,%rax
da06(2): jbe 0x7a(%rip)
da08(4): add $0x1,%rbx
da0c(4): mov %rbx,0x10(%rbp)
da10(4): mov %r12,0x0(%rdi,%rbx,8)
da14(4): cmp $0x1,%rbx
da18(4): mov 0x0(%rbp),%r13
da1c(4): mov 0x18(%rbp),%r15
da20(5): mov 0x0(%r13,%rbx,8),%r14
da25(2): jnz 0x1b(%rip)
da27(2): jmp 0x51(%rip)
da29(7): nop 0x0(%rax)
da30(4): mov 0x0(%rbp),%rax
da34(4): cmp $0x1,%r12
da38(3): mov %r12,%rbx
da3b(3): mov %rax,(%rdx)
da3e(2): jz 0x3a(%rip)
da40(3): mov %rbx,%r12
da43(3): mov %r14,%rsi
da46(3): shr $0x1,%r12
da49(5): lea 0x0(%r13,%r12,8),%rbp
da4e(4): mov 0x0(%rbp),%rdi
da52(3): call %r15
da55(2): test %eax,%eax
da57(5): lea 0x0(%r13,%rbx,8),%rdx
da5c(2): jle 0xffffffd4(%rip)
da5e(3): mov %r14,(%rdx)
da61(4): add $0x8,%rsp
da65(2): xor %eax,%eax
da67(1): pop %rbx
da68(1): pop %rbp
da69(2): pop %r12
da6b(2): pop %r13
da6d(2): pop %r14
da6f(2): pop %r15
da71(1): ret near (%rsp)
da72(6): nop 0x0(%rax,%rax,1)
da78(4): lea 0x8(%r13),%rdx
da7c(2): jmp 0xffffffe2(%rip)
da7e(2): nop 
da80(3): test %rdi,%rdi
da83(2): jz 0x3d(%rip)
da85(a): mov $0x768614336404564649,%rax
da8f(3): cmp %rax,%rsi
da92(2): jnbe 0x53(%rip)
da94(3): mov %rsi,%rax
da97(3): shr $0x1,%rax
da9a(5): lea 0x1(%rsi,%rax,1),%rsi
da9f(4): mov %rsi,0x8(%rbp)
daa3(4): shl/sal $0x3,%rsi
daa7(5): call 0x4399(%rip)
daac(4): mov 0x10(%rbp),%rbx
dab0(3): mov %rax,%rdi
dab3(4): mov %rax,0x0(%rbp)
dab7(5): jmp 0xffffff51(%rip)
dabc(4): nop 0x0(%rax)
dac0(3): test %rsi,%rsi
dac3(5): mov $0x10,%eax
dac8(5): mov $0x8,%edx
dacd(4): cmove %rax,%rsi
dad1(3): mov %rdx,%rax
dad4(2): xor %ecx,%ecx
dad6(3): mul %rax,%rsi,%rdx
dad9(2): jo 0x11(%rip)
dadb(3): test %rax,%rax
dade(2): js 0x7(%rip)
dae0(3): test %rcx,%rcx
dae3(2): jz 0xffffffbc(%rip)
dae5(5): call 0x454b(%rip)
daea(5): mov $0x1,%ecx
daef(2): jmp 0xffffffec(%rip)

"heap_remove_top" :
db00(2): push %r15
db02(2): push %r14
db04(2): push %r13
db06(2): push %r12
db08(1): push %rbp
db09(1): push %rbx
db0a(4): sub $0x38,%rsp
db0e(4): mov 0x10(%rdi),%rax
db12(3): test %rax,%rax
db15(6): jz 0xeb(%rip)
db1b(3): mov (%rdi),%rdx
db1e(4): lea 0xffffffff(%rax),%rsi
db22(5): mov %rsi,0x18(%rsp)
db27(4): mov 0x0(%rdx,%rax,8),%rax
db2b(4): mov 0x8(%rdx),%rcx
db2f(4): mov %rsi,0x10(%rdi)
db33(3): shr $0x1,%rsi
db36(5): mov %rsi,0x20(%rsp)
db3b(4): mov %rax,0x8(%rdx)
db3f(3): mov (%rdi),%rbp
db42(5): mov %rcx,0x28(%rsp)
db47(4): mov 0x18(%rdi),%r12
db4b(4): mov 0x8(%rbp),%rax
db4f(5): mov %rax,0x10(%rsp)
db54(2): jz 0x7c(%rip)
db56(6): mov $0x1,%r14d
db5c(2): jmp 0x28(%rip)
db5e(2): nop 
db60(3): mov (%r15),%rdi
db63(5): mov 0x10(%rsp),%rsi
db68(3): call %r12
db6b(2): test %eax,%eax
db6d(5): lea 0x0(%rbp,%r14,8),%rcx
db72(2): jle 0x66(%rip)
db74(5): cmp 0x20(%rsp),%rbx
db79(3): mov (%r15),%rax
db7c(3): mov %rbx,%r14
db7f(3): mov %rax,(%rcx)
db82(2): jnbe 0x76(%rip)
db84(3): mov %r14,%rdx
db87(4): lea 0x0(%r14,%r14,1),%rbx
db8b(4): shl/sal $0x4,%rdx
db8f(5): cmp %rbx,0x18(%rsp)
db94(5): lea 0x0(%rbp,%rdx,1),%r15
db99(3): mov (%r15),%rdi
db9c(2): jbe 0xffffffc7(%rip)
db9e(4): lea 0x1(%rbx),%r13
dba2(5): lea 0x0(%rbp,%r13,8),%r8
dba7(3): mov (%r8),%rsi
dbaa(5): mov %r8,0x8(%rsp)
dbaf(3): call %r12
dbb2(2): test %eax,%eax
dbb4(5): mov 0x8(%rsp),%r8
dbb9(2): jns 0xffffffa7(%rip)
dbbb(3): mov (%r8),%rdi
dbbe(3): mov %r8,%r15
dbc1(3): mov %r13,%rbx
dbc4(2): jmp 0xffffff9f(%rip)
dbc6(a): nop 0x0(%rax,%rax,1)
dbd0(4): lea 0x8(%rbp),%rcx
dbd4(4): nop 0x0(%rax)
dbd8(5): mov 0x10(%rsp),%rax
dbdd(3): mov %rax,(%rcx)
dbe0(5): mov 0x28(%rsp),%rax
dbe5(4): add $0x38,%rsp
dbe9(1): pop %rbx
dbea(1): pop %rbp
dbeb(2): pop %r12
dbed(2): pop %r13
dbef(2): pop %r14
dbf1(2): pop %r15
dbf3(1): ret near (%rsp)
dbf4(4): nop 0x0(%rax)
dbf8(3): mov %r15,%rcx
dbfb(2): jmp 0xffffffdd(%rip)
dbfd(3): nop (%rax)
dc00(9): mov $0x0,0x28(%rsp)
dc09(2): jmp 0xffffffd7(%rip)

"inttostr" :
dc10(2): test %edi,%edi
dc12(4): lea 0xb(%rsi),%rcx
dc16(4): mov $0x0,0xb(%rsi)
dc1a(6): mov $0x66666667,%r9d
dc20(5): mov $0xcccccccd,%esi
dc25(6): mov $0x30,%r8d
dc2b(2): js 0x30(%rip)
dc2d(3): nop (%rax)
dc30(2): mov %edi,%eax
dc32(4): sub $0x1,%rcx
dc36(2): mul %eax,%esi,%edx
dc38(3): shr $0x3,%edx
dc3b(3): lea 0x0(%rdx,%rdx,4),%eax
dc3e(2): add %eax,%eax
dc40(2): sub %eax,%edi
dc42(3): add $0x30,%edi
dc45(2): test %edx,%edx
dc47(3): mov %dil,(%rcx)
dc4a(2): mov %edx,%edi
dc4c(2): jnz 0xffffffe4(%rip)
dc4e(3): mov %rcx,%rax
dc51(1): ret near (%rsp)
dc52(6): nop 0x0(%rax,%rax,1)
dc58(3): mov %rsi,%rcx
dc5b(2): mov %edi,%eax
dc5d(4): lea 0xffffffff(%rcx),%rsi
dc61(3): imul %eax,%r9d,%edx
dc64(2): mov %edi,%eax
dc66(3): sar $0x1f,%eax
dc69(3): sar $0x2,%edx
dc6c(2): sub %eax,%edx
dc6e(3): lea 0x0(%rdx,%rdx,4),%eax
dc71(4): lea 0x0(%r8,%rax,2),%eax
dc75(2): sub %edi,%eax
dc77(2): test %edx,%edx
dc79(2): mov %edx,%edi
dc7b(3): mov %al,0xffffffff(%rcx)
dc7e(2): jnz 0xffffffda(%rip)
dc80(4): sub $0x2,%rcx
dc84(4): mov $0x2d,0xffffffff(%rsi)
dc88(3): mov %rcx,%rax
dc8b(1): ret near (%rsp)

"uinttostr" :
dc90(4): lea 0xa(%rsi),%rcx
dc94(4): mov $0x0,0xa(%rsi)
dc98(5): mov $0xcccccccd,%esi
dc9d(3): nop (%rax)
dca0(2): mov %edi,%eax
dca2(4): sub $0x1,%rcx
dca6(2): mul %eax,%esi,%edx
dca8(3): shr $0x3,%edx
dcab(3): lea 0x0(%rdx,%rdx,4),%eax
dcae(2): add %eax,%eax
dcb0(2): sub %eax,%edi
dcb2(3): add $0x30,%edi
dcb5(2): test %edx,%edx
dcb7(3): mov %dil,(%rcx)
dcba(2): mov %edx,%edi
dcbc(2): jnz 0xffffffe4(%rip)
dcbe(3): mov %rcx,%rax
dcc1(1): ret near (%rsp)

"umaxtostr" :
dcd0(4): lea 0x14(%rsi),%rcx
dcd4(4): mov $0x0,0x14(%rsi)
dcd8(a): mov $0x-3689348814741910323,%rsi
dce2(6): nop 0x0(%rax,%rax,1)
dce8(3): mov %rdi,%rax
dceb(4): sub $0x1,%rcx
dcef(3): mul %rax,%rsi,%rdx
dcf2(4): shr $0x3,%rdx
dcf6(4): lea 0x0(%rdx,%rdx,4),%rax
dcfa(3): add %rax,%rax
dcfd(3): sub %rax,%rdi
dd00(3): add $0x30,%edi
dd03(3): test %rdx,%rdx
dd06(3): mov %dil,(%rcx)
dd09(3): mov %rdx,%rdi
dd0c(2): jnz 0xffffffdc(%rip)
dd0e(3): mov %rcx,%rax
dd11(1): ret near (%rsp)

"mbsnwidth" :
dd20(2): push %r15
dd22(2): push %r14
dd24(2): push %r13
dd26(2): push %r12
dd28(4): lea 0x0(%rdi,%rsi,1),%r13
dd2c(1): push %rbp
dd2d(1): push %rbx
dd2e(3): mov %rdi,%rbx
dd31(4): sub $0x38,%rsp
dd35(9): mov $0x28,%rax
dd3e(5): mov %rax,0x28(%rsp)
dd43(2): xor %eax,%eax
dd45(4): mov %edx,0xc(%rsp)
dd49(5): call 0xffff4f37(%rip)
dd4e(4): cmp $0x1,%rax
dd52(6): jbe 0x136(%rip)
dd58(2): xor %ebp,%ebp
dd5a(3): cmp %r13,%rbx
dd5d(6): jnb 0xf0(%rip)
dd63(5): lea 0x20(%rsp),%r12
dd68(5): lea 0x1c(%rsp),%r14
dd6d(2): jmp 0x1e(%rip)
dd6f(1): nop 
dd70(2): cmp $0x25,%al
dd72(2): jnl 0x9(%rip)
dd74(3): sub $0x20,%eax
dd77(2): cmp $0x3,%al
dd79(2): jnbe 0x28(%rip)
dd7b(4): add $0x1,%rbx
dd7f(3): add $0x1,%ebp
dd82(3): cmp %r13,%rbx
dd85(6): jnb 0xc8(%rip)
dd8b(3): movzx (%rbx),%eax
dd8e(2): cmp $0x3f,%al
dd90(2): jle 0xffffffe0(%rip)
dd92(2): cmp $0x41,%al
dd94(2): jl 0xd(%rip)
dd96(2): cmp $0x5f,%al
dd98(2): jle 0xffffffe3(%rip)
dd9a(3): sub $0x61,%eax
dd9d(2): cmp $0x1d,%al
dd9f(2): jbe 0xffffffdc(%rip)
dda1(8): mov $0x0,(%r12)
dda9(2): jmp 0x27(%rip)
ddab(5): nop 0x0(%rax,%rax,1)
ddb0(5): mov $0x7fffffff,%ecx
ddb5(2): sub %ebp,%ecx
ddb7(2): cmp %eax,%ecx
ddb9(6): jl 0x117(%rip)
ddbf(2): add %eax,%ebp
ddc1(3): mov %r12,%rdi
ddc4(3): add %r15,%rbx
ddc7(5): call 0xffff5379(%rip)
ddcc(2): test %eax,%eax
ddce(2): jnz 0xffffffb4(%rip)
ddd0(3): mov %r13,%rdx
ddd3(3): mov %r12,%rcx
ddd6(3): mov %rbx,%rsi
ddd9(3): sub %rbx,%rdx
dddc(3): mov %r14,%rdi
dddf(5): call 0x5101(%rip)
dde4(4): cmp $0xffffffff,%rax
dde8(3): mov %rax,%r15
ddeb(2): jz 0x4d(%rip)
dded(4): cmp $0xfffffffe,%rax
ddf1(2): jz 0x7f(%rip)
ddf3(4): mov 0x1c(%rsp),%edi
ddf7(3): test %rax,%rax
ddfa(5): mov $0x1,%eax
ddff(4): cmove %rax,%r15
de03(5): call 0xffff50dd(%rip)
de08(2): test %eax,%eax
de0a(2): jns 0xffffffa6(%rip)
de0c(5): test $0x2,0xc(%rsp)
de11(2): jnz 0x37(%rip)
de13(4): mov 0x1c(%rsp),%edi
de17(5): call 0xffff4d99(%rip)
de1c(2): test %eax,%eax
de1e(2): jnz 0xffffffa3(%rip)
de20(6): cmp $0x7fffffff,%ebp
de26(6): jz 0xaa(%rip)
de2c(3): add $0x1,%ebp
de2f(2): jmp 0xffffff92(%rip)
de31(7): nop 0x0(%rax)
de38(5): test $0x1,0xc(%rsp)
de3d(6): jz 0xffffff3e(%rip)
de43(5): nop 0x0(%rax,%rax,1)
de48(5): mov $0xffffffff,%ebp
de4d(5): mov 0x28(%rsp),%rsi
de52(9): xor $0x28,%rsi
de5b(2): mov %ebp,%eax
de5d(2): jnz 0x7d(%rip)
de5f(4): add $0x38,%rsp
de63(1): pop %rbx
de64(1): pop %rbp
de65(2): pop %r12
de67(2): pop %r13
de69(2): pop %r14
de6b(2): pop %r15
de6d(1): ret near (%rsp)
de6e(2): nop 
de70(5): test $0x1,0xc(%rsp)
de75(2): jnz 0xffffffd3(%rip)
de77(3): add $0x1,%ebp
de7a(3): mov %r13,%rbx
de7d(5): jmp 0xffffff05(%rip)
de82(6): nop 0x0(%rax,%rax,1)
de88(2): xor %ebp,%ebp
de8a(3): cmp %r13,%rbx
de8d(2): jnb 0xffffffc0(%rip)
de8f(5): call 0xffff5321(%rip)
de94(4): mov 0xc(%rsp),%edx
de98(3): mov (%rax),%rcx
de9b(2): xor %ebp,%ebp
de9d(3): and $0x2,%edx
dea0(4): add $0x1,%rbx
dea4(4): movzx 0xffffffff(%rbx),%eax
dea8(4): movzx 0x0(%rcx,%rax,2),%eax
deac(3): test $0x40,%ah
deaf(2): jnz 0xa(%rip)
deb1(2): test %edx,%edx
deb3(2): jnz 0xffffff95(%rip)
deb5(2): test $0x2,%al
deb7(2): jnz 0xd(%rip)
deb9(6): cmp $0x7fffffff,%ebp
debf(2): jz 0xffffff8e(%rip)
dec1(3): add $0x1,%ebp
dec4(3): cmp %rbx,%r13
dec7(2): jnz 0xffffffd9(%rip)
dec9(2): jmp 0xffffff84(%rip)
decb(5): nop 0x0(%rax,%rax,1)
ded0(5): mov $0x7fffffff,%ebp
ded5(5): jmp 0xffffff78(%rip)
deda(5): call 0xffff4dc6(%rip)

"gnu_mbswidth" :
dee0(1): push %rbp
dee1(1): push %rbx
dee2(2): mov %esi,%ebp
dee4(3): mov %rdi,%rbx
dee7(4): sub $0x8,%rsp
deeb(5): call 0xffff4da5(%rip)
def0(4): add $0x8,%rsp
def4(2): mov %ebp,%edx
def6(3): mov %rbx,%rdi
def9(1): pop %rbx
defa(1): pop %rbp
defb(3): mov %rax,%rsi
defe(5): jmp 0xfffffe22(%rip)

"num_processors_via_affinity_mask" :
df10(1): push %rbx
df11(2): xor %edi,%edi
df13(5): mov $0x80,%esi
df18(7): sub $0x90,%rsp
df1f(3): mov %rsp,%rbx
df22(3): mov %rbx,%rdx
df25(9): mov $0x28,%rax
df2e(8): mov %rax,0x88(%rsp)
df36(2): xor %eax,%eax
df38(5): call 0xffff51e8(%rip)
df3d(2): test %eax,%eax
df3f(2): jz 0x21(%rip)
df41(2): xor %eax,%eax
df43(8): mov 0x88(%rsp),%rcx
df4b(9): xor $0x28,%rcx
df54(2): jnz 0x22(%rip)
df56(7): add $0x90,%rsp
df5d(1): pop %rbx
df5e(1): ret near (%rsp)
df5f(1): nop 
df60(3): mov %rbx,%rsi
df63(5): mov $0x80,%edi
df68(5): call 0xffff4ce8(%rip)
df6d(2): cwde 
df6f(3): test %rax,%rax
df72(2): jz 0xffffffcf(%rip)
df74(2): jmp 0xffffffcf(%rip)
df76(5): call 0xffff4d2a(%rip)

"parse_omp_threads.part.0" :
df80(4): sub $0x18,%rsp
df84(3): movzx (%rdi),%ecx
df87(9): mov $0x28,%rax
df90(5): mov %rax,0x8(%rsp)
df95(2): xor %eax,%eax
df97(2): test %cl,%cl
df99(2): jz 0x45(%rip)
df9b(3): movsx %cl,%eax
df9e(3): cmp $0x20,%eax
dfa1(2): jnbe 0x5f(%rip)
dfa3(a): mov $0x4294983168,%rax
dfad(5): mov $0x1,%esi
dfb2(4): bt %rcx,%rax
dfb6(3): mov %rax,%rdx
dfb9(2): jb 0x1a(%rip)
dfbb(2): jmp 0x45(%rip)
dfbd(3): nop (%rax)
dfc0(3): movsx %cl,%eax
dfc3(3): cmp $0x20,%eax
dfc6(2): jnbe 0x3a(%rip)
dfc8(3): mov %rsi,%rax
dfcb(3): shl/sal %cl,%rax
dfce(3): test %rdx,%rax
dfd1(2): jz 0x2f(%rip)
dfd3(4): add $0x1,%rdi
dfd7(3): movzx (%rdi),%ecx
dfda(2): test %cl,%cl
dfdc(2): jnz 0xffffffe4(%rip)
dfde(2): xor %eax,%eax
dfe0(5): mov 0x8(%rsp),%rdx
dfe5(9): xor $0x28,%rdx
dfee(6): jnz 0x9e(%rip)
dff4(4): add $0x18,%rsp
dff8(1): ret near (%rsp)
dff9(7): nop 0x0(%rax)
e000(3): sub $0x30,%ecx
e003(2): xor %eax,%eax
e005(3): cmp $0x9,%cl
e008(2): jnbe 0xffffffd8(%rip)
e00a(5): mov $0xa,%edx
e00f(3): mov %rsp,%rsi
e012(8): mov $0x0,(%rsp)
e01a(5): call 0xffff5066(%rip)
e01f(4): mov (%rsp),%rdx
e023(3): test %rdx,%rdx
e026(2): jz 0xffffffb8(%rip)
e028(3): movzx (%rdx),%ecx
e02b(2): test %cl,%cl
e02d(2): jz 0xffffffb3(%rip)
e02f(3): movsx %cl,%esi
e032(3): cmp $0x20,%esi
e035(2): jnbe 0x49(%rip)
e037(a): mov $0x4294983168,%rdi
e041(4): bt %rcx,%rdi
e045(2): jnb 0x39(%rip)
e047(4): add $0x1,%rdx
e04b(6): mov $0x1,%r8d
e051(2): jmp 0x16(%rip)
e053(5): nop 0x0(%rax,%rax,1)
e058(3): mov %r8,%rsi
e05b(4): add $0x1,%rdx
e05f(3): shl/sal %cl,%rsi
e062(3): test %rdi,%rsi
e065(2): jz 0x19(%rip)
e067(4): mov %rdx,(%rsp)
e06b(3): movzx (%rdx),%ecx
e06e(2): test %cl,%cl
e070(6): jz 0xffffff70(%rip)
e076(3): movsx %cl,%esi
e079(3): cmp $0x20,%esi
e07c(2): jbe 0xffffffdc(%rip)
e07e(3): cmp $0x2c,%cl
e081(6): jnz 0xffffff5d(%rip)
e087(5): jmp 0xffffff59(%rip)
e08c(5): call 0xffff4c14(%rip)

"num_processors" :
e0a0(1): push %rbp
e0a1(1): push %rbx
e0a2(4): sub $0x8,%rsp
e0a6(3): cmp $0x2,%edi
e0a9(2): jz 0x37(%rip)
e0ab(3): cmp $0x1,%edi
e0ae(6): jz 0x102(%rip)
e0b4(5): mov $0x53,%edi
e0b9(5): call 0xffff4f97(%rip)
e0be(4): cmp $0x1,%rax
e0c2(6): jz 0xc6(%rip)
e0c8(3): test %rax,%rax
e0cb(5): mov $0x1,%edx
e0d0(4): cmovng %rdx,%rax
e0d4(4): add $0x8,%rsp
e0d8(1): pop %rbx
e0d9(1): pop %rbp
e0da(1): ret near (%rsp)
e0db(5): nop 0x0(%rax,%rax,1)
e0e0(7): lea 0x7a8d(%rip),%rdi
e0e7(5): call 0xffff49d9(%rip)
e0ec(3): test %rax,%rax
e0ef(2): jz 0x59(%rip)
e0f1(3): mov %rax,%rdi
e0f4(7): mov $0xffffffff,%rbp
e0fb(5): call 0xfffffe85(%rip)
e100(7): lea 0x7a7d(%rip),%rdi
e107(3): mov %rax,%rbx
e10a(5): call 0xffff49b6(%rip)
e10f(3): test %rax,%rax
e112(2): jz 0x1b(%rip)
e114(3): mov %rax,%rdi
e117(5): call 0xfffffe69(%rip)
e11c(3): mov %rax,%rbp
e11f(3): test %rax,%rax
e122(7): mov $0xffffffff,%rax
e129(4): cmove %rax,%rbp
e12d(3): test %rbx,%rbx
e130(2): jz 0x39(%rip)
e132(3): cmp %rbx,%rbp
e135(3): mov %rbx,%rax
e138(4): cmovbe %rbp,%rax
e13c(4): add $0x8,%rsp
e140(1): pop %rbx
e141(1): pop %rbp
e142(1): ret near (%rsp)
e143(5): nop 0x0(%rax,%rax,1)
e148(7): lea 0x7a35(%rip),%rdi
e14f(5): call 0xffff4971(%rip)
e154(3): test %rax,%rax
e157(2): jz 0x59(%rip)
e159(3): mov %rax,%rdi
e15c(5): call 0xfffffe24(%rip)
e161(3): test %rax,%rax
e164(3): mov %rax,%rbp
e167(2): jz 0x49(%rip)
e169(5): call 0xfffffda7(%rip)
e16e(3): test %rax,%rax
e171(2): jz 0x50(%rip)
e173(3): cmp %rbp,%rax
e176(4): cmovnbe %rbp,%rax
e17a(4): add $0x8,%rsp
e17e(1): pop %rbx
e17f(1): pop %rbp
e180(1): ret near (%rsp)
e181(7): nop 0x0(%rax)
e188(5): call 0xfffffd88(%rip)
e18d(3): mov %rax,%rdx
e190(5): mov $0x1,%eax
e195(3): test %rdx,%rdx
e198(6): jz 0xffffff3c(%rip)
e19e(3): mov %rdx,%rax
e1a1(5): jmp 0xffffff27(%rip)
e1a6(a): nop 0x0(%rax,%rax,1)
e1b0(5): call 0xfffffd60(%rip)
e1b5(3): test %rax,%rax
e1b8(7): mov $0xffffffff,%rbp
e1bf(2): jnz 0xffffffb4(%rip)
e1c1(5): mov $0x54,%edi
e1c6(5): call 0xffff4e8a(%rip)
e1cb(3): mov %rax,%rdx
e1ce(5): mov $0x1,%eax
e1d3(3): test %rdx,%rdx
e1d6(6): jle 0xfffffefe(%rip)
e1dc(3): cmp %rbp,%rdx
e1df(3): mov %rbp,%rax
e1e2(4): cmovbe %rdx,%rax
e1e6(5): jmp 0xfffffeee(%rip)

"physmem_total" :
e1f0(7): sub $0x98,%rsp
e1f7(5): mov $0x55,%edi
e1fc(9): mov $0x28,%rax
e205(8): mov %rax,0x88(%rsp)
e20d(2): xor %eax,%eax
e20f(5): call 0xffff4e41(%rip)
e214(4): pxor %xmm0,%xmm0
e218(5): mov $0x1e,%edi
e21d(5): cvtsi2sd %rax,%xmm0
e222(6): movsd %xmm0,0x8(%rsp)
e228(5): call 0xffff4e28(%rip)
e22d(4): pxor %xmm2,%xmm2
e231(6): movsd 0x8(%rsp),%xmm0
e237(4): ucomisd %xmm2,%xmm0
e23b(2): jb 0x35(%rip)
e23d(4): pxor %xmm1,%xmm1
e241(5): cvtsi2sd %rax,%xmm1
e246(4): ucomisd %xmm2,%xmm1
e24a(2): jb 0x26(%rip)
e24c(4): mulsd %xmm1,%xmm0
e250(8): mov 0x88(%rsp),%rax
e258(9): xor $0x28,%rax
e261(2): jnz 0x6a(%rip)
e263(7): add $0x98,%rsp
e26a(1): ret near (%rsp)
e26b(5): nop 0x0(%rax,%rax,1)
e270(5): lea 0x10(%rsp),%rdi
e275(5): call 0xffff4e2b(%rip)
e27a(2): test %eax,%eax
e27c(8): movsd 0x7914(%rip),%xmm0
e284(2): jnz 0xffffffcc(%rip)
e286(5): mov 0x30(%rsp),%rax
e28b(3): test %rax,%rax
e28e(2): js 0x22(%rip)
e290(4): pxor %xmm0,%xmm0
e294(5): cvtsi2sd %rax,%xmm0
e299(4): mov 0x78(%rsp),%eax
e29d(4): pxor %xmm1,%xmm1
e2a1(5): cvtsi2sd %rax,%xmm1
e2a6(2): jmp 0xffffffa6(%rip)
e2a8(8): nop 0x0(%rax,%rax,1)
e2b0(3): mov %rax,%rdx
e2b3(4): pxor %xmm0,%xmm0
e2b7(3): shr $0x1,%rdx
e2ba(3): and $0x1,%eax
e2bd(3): or %rax,%rdx
e2c0(5): cvtsi2sd %rdx,%xmm0
e2c5(4): addsd %xmm0,%xmm0
e2c9(2): jmp 0xffffffd0(%rip)
e2cb(5): call 0xffff49d5(%rip)

"physmem_available" :
e2d0(7): sub $0x98,%rsp
e2d7(5): mov $0x56,%edi
e2dc(9): mov $0x28,%rax
e2e5(8): mov %rax,0x88(%rsp)
e2ed(2): xor %eax,%eax
e2ef(5): call 0xffff4d61(%rip)
e2f4(4): pxor %xmm0,%xmm0
e2f8(5): mov $0x1e,%edi
e2fd(5): cvtsi2sd %rax,%xmm0
e302(6): movsd %xmm0,0x8(%rsp)
e308(5): call 0xffff4d48(%rip)
e30d(4): pxor %xmm2,%xmm2
e311(6): movsd 0x8(%rsp),%xmm0
e317(4): ucomisd %xmm2,%xmm0
e31b(2): jb 0x35(%rip)
e31d(4): pxor %xmm1,%xmm1
e321(5): cvtsi2sd %rax,%xmm1
e326(4): ucomisd %xmm2,%xmm1
e32a(2): jb 0x26(%rip)
e32c(4): mulsd %xmm1,%xmm0
e330(8): mov 0x88(%rsp),%rax
e338(9): xor $0x28,%rax
e341(6): jnz 0xaa(%rip)
e347(7): add $0x98,%rsp
e34e(1): ret near (%rsp)
e34f(1): nop 
e350(5): lea 0x10(%rsp),%rdi
e355(5): call 0xffff4d4b(%rip)
e35a(2): test %eax,%eax
e35c(2): jnz 0x44(%rip)
e35e(5): mov 0x38(%rsp),%rax
e363(3): test %rax,%rax
e366(2): js 0x6a(%rip)
e368(4): pxor %xmm0,%xmm0
e36c(5): cvtsi2sd %rax,%xmm0
e371(5): mov 0x48(%rsp),%rax
e376(3): test %rax,%rax
e379(2): js 0x37(%rip)
e37b(4): pxor %xmm1,%xmm1
e37f(5): cvtsi2sd %rax,%xmm1
e384(4): mov 0x78(%rsp),%eax
e388(4): addsd %xmm1,%xmm0
e38c(4): pxor %xmm1,%xmm1
e390(5): cvtsi2sd %rax,%xmm1
e395(2): jmp 0xffffff97(%rip)
e397(9): nop 0x0(%rax,%rax,1)
e3a0(5): call 0xfffffe50(%rip)
e3a5(8): mulsd 0x761b(%rip),%xmm0
e3ad(2): jmp 0xffffff83(%rip)
e3af(1): nop 
e3b0(3): mov %rax,%rdx
e3b3(4): pxor %xmm1,%xmm1
e3b7(3): shr $0x1,%rdx
e3ba(3): and $0x1,%eax
e3bd(3): or %rax,%rdx
e3c0(5): cvtsi2sd %rdx,%xmm1
e3c5(4): addsd %xmm1,%xmm1
e3c9(2): jmp 0xffffffbb(%rip)
e3cb(5): nop 0x0(%rax,%rax,1)
e3d0(3): mov %rax,%rdx
e3d3(4): pxor %xmm0,%xmm0
e3d7(3): shr $0x1,%rdx
e3da(3): and $0x1,%eax
e3dd(3): or %rax,%rdx
e3e0(5): cvtsi2sd %rdx,%xmm0
e3e5(4): addsd %xmm0,%xmm0
e3e9(2): jmp 0xffffff88(%rip)
e3eb(5): call 0xffff48b5(%rip)

"rpl_pipe2" :
e3f0(6): mov 0x20c4aa(%rip),%eax
e3f6(2): push %r14
e3f8(2): push %r13
e3fa(2): push %r12
e3fc(1): push %rbp
e3fd(2): mov %esi,%ebp
e3ff(1): push %rbx
e400(2): test %eax,%eax
e402(3): mov %rdi,%rbx
e405(3): mov (%rdi),%r13d
e408(4): mov 0x4(%rdi),%r14d
e40c(6): jns 0xe4(%rip)
e412(3): mov %ebp,%r12d
e415(7): and $0xfff7f7ff,%r12d
e41c(6): jnz 0x1a4(%rip)
e422(3): mov %rbx,%rdi
e425(5): call 0xffff499b(%rip)
e42a(2): test %eax,%eax
e42c(6): js 0x1aa(%rip)
e432(6): test $0x800,%ebp
e438(6): jnz 0xe8(%rip)
e43e(6): and $0x80000,%ebp
e444(2): jnz 0x14(%rip)
e446(1): pop %rbx
e447(3): mov %r12d,%eax
e44a(1): pop %rbp
e44b(2): pop %r12
e44d(2): pop %r13
e44f(2): pop %r14
e451(1): ret near (%rsp)
e452(6): nop 0x0(%rax,%rax,1)
e458(3): mov 0x4(%rbx),%edi
e45b(2): xor %edx,%edx
e45d(2): xor %eax,%eax
e45f(5): mov $0x1,%esi
e464(5): call 0x475c(%rip)
e469(2): test %eax,%eax
e46b(2): js 0x4d(%rip)
e46d(3): mov 0x4(%rbx),%edi
e470(3): or $0x1,%eax
e473(5): mov $0x2,%esi
e478(2): mov %eax,%edx
e47a(2): xor %eax,%eax
e47c(5): call 0x4744(%rip)
e481(3): cmp $0xff,%eax
e484(2): jz 0x34(%rip)
e486(2): mov (%rbx),%edi
e488(2): xor %edx,%edx
e48a(2): xor %eax,%eax
e48c(5): mov $0x1,%esi
e491(5): call 0x472f(%rip)
e496(2): test %eax,%eax
e498(2): js 0x20(%rip)
e49a(2): mov (%rbx),%edi
e49c(3): or $0x1,%eax
e49f(5): mov $0x2,%esi
e4a4(2): mov %eax,%edx
e4a6(2): xor %eax,%eax
e4a8(5): call 0x4718(%rip)
e4ad(3): cmp $0xff,%eax
e4b0(2): jnz 0xffffff96(%rip)
e4b2(6): nop 0x0(%rax,%rax,1)
e4b8(5): call 0xffff4658(%rip)
e4bd(2): mov (%rbx),%edi
e4bf(3): mov (%rax),%r12d
e4c2(3): mov %rax,%rbp
e4c5(5): call 0xffff48eb(%rip)
e4ca(3): mov 0x4(%rbx),%edi
e4cd(5): call 0xffff48e3(%rip)
e4d2(3): mov %r13d,(%rbx)
e4d5(4): mov %r14d,0x4(%rbx)
e4d9(4): mov %r12d,0x0(%rbp)
e4dd(6): mov $0xffffffff,%r12d
e4e3(5): jmp 0xffffff63(%rip)
e4e8(8): nop 0x0(%rax,%rax,1)
e4f0(5): call 0xffff4bc0(%rip)
e4f5(2): test %eax,%eax
e4f7(3): mov %eax,%r12d
e4fa(6): js 0xa6(%rip)
e500(1): pop %rbx
e501(3): mov %r12d,%eax
e504(a): mov $0x1,0x20c392(%rip)
e50e(1): pop %rbp
e50f(2): pop %r12
e511(2): pop %r13
e513(2): pop %r14
e515(1): ret near (%rsp)
e516(a): nop 0x0(%rax,%rax,1)
e520(3): mov 0x4(%rbx),%edi
e523(2): xor %edx,%edx
e525(2): xor %eax,%eax
e527(5): mov $0x3,%esi
e52c(5): call 0x4694(%rip)
e531(2): test %eax,%eax
e533(2): js 0xffffff85(%rip)
e535(3): mov 0x4(%rbx),%edi
e538(3): or $0x8,%ah
e53b(5): mov $0x4,%esi
e540(2): mov %eax,%edx
e542(2): xor %eax,%eax
e544(5): call 0x467c(%rip)
e549(3): cmp $0xff,%eax
e54c(6): jz 0xffffff6c(%rip)
e552(2): mov (%rbx),%edi
e554(2): xor %edx,%edx
e556(2): xor %eax,%eax
e558(5): mov $0x3,%esi
e55d(5): call 0x4663(%rip)
e562(2): test %eax,%eax
e564(6): js 0xffffff54(%rip)
e56a(2): mov (%rbx),%edi
e56c(3): or $0x8,%ah
e56f(5): mov $0x4,%esi
e574(2): mov %eax,%edx
e576(2): xor %eax,%eax
e578(5): call 0x4648(%rip)
e57d(3): cmp $0xff,%eax
e580(6): jz 0xffffff38(%rip)
e586(6): and $0x80000,%ebp
e58c(6): jz 0xfffffeba(%rip)
e592(5): jmp 0xfffffec6(%rip)
e597(9): nop 0x0(%rax,%rax,1)
e5a0(5): call 0xffff4570(%rip)
e5a5(3): cmp $0x26,(%rax)
e5a8(6): jnz 0xffffff58(%rip)
e5ae(a): mov $0xffffffff,0x20c2e8(%rip)
e5b8(5): jmp 0xfffffe5a(%rip)
e5bd(3): nop (%rax)
e5c0(5): call 0xffff4550(%rip)
e5c5(6): mov $0xffffffff,%r12d
e5cb(6): mov $0x16,(%rax)
e5d1(5): jmp 0xfffffe75(%rip)
e5d6(6): mov $0xffffffff,%r12d
e5dc(5): jmp 0xfffffe6a(%rip)

"posix2_version" :
e5f0(1): push %rbx
e5f1(7): lea 0x75a8(%rip),%rdi
e5f8(5): mov $0x31069,%ebx
e5fd(4): sub $0x10,%rsp
e601(9): mov $0x28,%rax
e60a(5): mov %rax,0x8(%rsp)
e60f(2): xor %eax,%eax
e611(5): call 0xffff44af(%rip)
e616(3): test %rax,%rax
e619(2): jz 0x7(%rip)
e61b(3): cmp $0x0,(%rax)
e61e(2): jnz 0x22(%rip)
e620(5): mov 0x8(%rsp),%rcx
e625(9): xor $0x28,%rcx
e62e(2): mov %ebx,%eax
e630(2): jnz 0x49(%rip)
e632(4): add $0x10,%rsp
e636(1): pop %rbx
e637(1): ret near (%rsp)
e638(8): nop 0x0(%rax,%rax,1)
e640(5): mov $0xa,%edx
e645(3): mov %rsp,%rsi
e648(3): mov %rax,%rdi
e64b(5): call 0xffff4825(%rip)
e650(4): mov (%rsp),%rdx
e654(3): cmp $0x0,(%rdx)
e657(2): jnz 0xffffffc9(%rip)
e659(6): cmp $0x80000000,%rax
e65f(2): jl 0x13(%rip)
e661(6): cmp $0x7fffffff,%rax
e667(5): mov $0x7fffffff,%ebx
e66c(4): cmovng %rax,%rbx
e670(2): jmp 0xffffffb0(%rip)
e672(5): mov $0x80000000,%ebx
e677(2): jmp 0xffffffa9(%rip)
e679(5): call 0xffff4627(%rip)

"set_program_name" :
e680(3): test %rdi,%rdi
e683(1): push %rbx
e684(2): jz 0x79(%rip)
e686(5): mov $0x2f,%esi
e68b(3): mov %rdi,%rbx
e68e(5): call 0xffff4692(%rip)
e693(3): test %rax,%rax
e696(2): jz 0x57(%rip)
e698(4): lea 0x1(%rax),%r8
e69c(3): mov %r8,%rdx
e69f(3): sub %rbx,%rdx
e6a2(4): cmp $0x6,%rdx
e6a6(2): jle 0x47(%rip)
e6a8(4): lea 0xfffffffa(%rax),%rsi
e6ac(7): lea 0x7535(%rip),%rdi
e6b3(5): mov $0x7,%ecx
e6b8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
e6ba(3): setnbe %dl
e6bd(3): sbb $0x0,%dl
e6c0(2): test %dl,%dl
e6c2(2): jnz 0x2b(%rip)
e6c4(7): lea 0x7525(%rip),%rdi
e6cb(5): mov $0x3,%ecx
e6d0(3): mov %r8,%rsi
e6d3(3): mov %r8,%rbx
e6d6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
e6d8(3): setnbe %dl
e6db(3): sbb $0x0,%dl
e6de(2): test %dl,%dl
e6e0(2): jnz 0xd(%rip)
e6e2(4): lea 0x4(%rax),%rbx
e6e6(7): mov %rbx,0x20bad3(%rip)
e6ed(7): mov %rbx,0x20c1b4(%rip)
e6f4(7): mov %rbx,0x20baed(%rip)
e6fb(1): pop %rbx
e6fc(1): ret near (%rsp)
e6fd(7): mov 0x20bafc(%rip),%rcx
e704(7): lea 0x74a5(%rip),%rdi
e70b(5): mov $0x37,%edx
e710(5): mov $0x1,%esi
e715(5): call 0xffff49db(%rip)
e71a(5): call 0xffff43e6(%rip)

"gettext_quote.part.1" :
e720(1): push %rbp
e721(1): push %rbx
e722(3): mov %rdi,%rbp
e725(2): mov %esi,%ebx
e727(4): sub $0x8,%rsp
e72b(5): call 0x4e75(%rip)
e730(3): movzx (%rax),%edx
e733(3): and $0xdf,%edx
e736(3): cmp $0x55,%dl
e739(2): jz 0x77(%rip)
e73b(3): cmp $0x47,%dl
e73e(2): jz 0x22(%rip)
e740(7): lea 0x74bc(%rip),%rax
e747(7): lea 0x6f64(%rip),%rdx
e74e(3): cmp $0x9,%ebx
e751(4): cmovne %rdx,%rax
e755(4): add $0x8,%rsp
e759(1): pop %rbx
e75a(1): pop %rbp
e75b(1): ret near (%rsp)
e75c(4): nop 0x0(%rax)
e760(4): movzx 0x1(%rax),%edx
e764(3): and $0xdf,%edx
e767(3): cmp $0x42,%dl
e76a(2): jnz 0xffffffd6(%rip)
e76c(4): cmp $0x31,0x2(%rax)
e770(2): jnz 0xffffffd0(%rip)
e772(4): cmp $0x38,0x3(%rax)
e776(2): jnz 0xffffffca(%rip)
e778(4): cmp $0x30,0x4(%rax)
e77c(2): jnz 0xffffffc4(%rip)
e77e(4): cmp $0x33,0x5(%rax)
e782(2): jnz 0xffffffbe(%rip)
e784(4): cmp $0x30,0x6(%rax)
e788(2): jnz 0xffffffb8(%rip)
e78a(4): cmp $0x0,0x7(%rax)
e78e(2): jnz 0xffffffb2(%rip)
e790(4): cmp $0x60,0x0(%rbp)
e794(7): lea 0x7461(%rip),%rax
e79b(7): lea 0x745e(%rip),%rdx
e7a2(4): cmovne %rdx,%rax
e7a6(4): add $0x8,%rsp
e7aa(1): pop %rbx
e7ab(1): pop %rbp
e7ac(1): ret near (%rsp)
e7ad(3): nop (%rax)
e7b0(4): movzx 0x1(%rax),%edx
e7b4(3): and $0xdf,%edx
e7b7(3): cmp $0x54,%dl
e7ba(2): jnz 0xffffff86(%rip)
e7bc(4): movzx 0x2(%rax),%edx
e7c0(3): and $0xdf,%edx
e7c3(3): cmp $0x46,%dl
e7c6(6): jnz 0xffffff7a(%rip)
e7cc(4): cmp $0x2d,0x3(%rax)
e7d0(6): jnz 0xffffff70(%rip)
e7d6(4): cmp $0x38,0x4(%rax)
e7da(6): jnz 0xffffff66(%rip)
e7e0(4): cmp $0x0,0x5(%rax)
e7e4(6): jnz 0xffffff5c(%rip)
e7ea(4): cmp $0x60,0x0(%rbp)
e7ee(7): lea 0x73ff(%rip),%rax
e7f5(7): lea 0x73fc(%rip),%rdx
e7fc(4): cmovne %rdx,%rax
e800(4): add $0x8,%rsp
e804(1): pop %rbx
e805(1): pop %rbp
e806(1): ret near (%rsp)

"quotearg_buffer_restyled" :
e810(2): push %r15
e812(2): push %r14
e814(3): mov %r8d,%r15d
e817(2): push %r13
e819(2): push %r12
e81b(3): mov %rdi,%r14
e81e(1): push %rbp
e81f(1): push %rbx
e820(3): mov %r9d,%ebx
e823(3): mov %rsi,%r13
e826(3): mov %rcx,%rbp
e829(3): and $0x2,%ebx
e82c(7): sub $0xb8,%rsp
e833(8): mov 0xf0(%rsp),%rax
e83b(5): mov %rdx,0x10(%rsp)
e840(5): mov %r8d,0x8(%rsp)
e845(5): mov %r9d,0x78(%rsp)
e84a(5): mov %rax,0x20(%rsp)
e84f(8): mov 0xf8(%rsp),%rax
e857(5): mov %rax,0x68(%rsp)
e85c(8): mov 0x100(%rsp),%rax
e864(5): mov %rax,0x60(%rsp)
e869(9): mov $0x28,%rax
e872(8): mov %rax,0xa8(%rsp)
e87a(2): xor %eax,%eax
e87c(5): call 0xffff4404(%rip)
e881(4): cmp $0xa,%r15d
e885(5): mov %rax,0x58(%rsp)
e88a(6): jnbe 0x11b5(%rip)
e890(7): lea 0x73c9(%rip),%rcx
e897(3): mov %r15d,%edx
e89a(4): movsxd 0x0(%rcx,%rdx,4),%rax
e89e(3): add %rcx,%rax
e8a1(2): jmp %rax
e8a3(5): mov $0x1,0xe(%rsp)
e8a8(5): mov $0x0,0x7c(%rsp)
e8ad(3): xor %r12d,%r12d
e8b0(9): mov $0x0,0x50(%rsp)
e8b9(5): mov $0x1,0xf(%rsp)
e8be(5): mov $0x0,0xd(%rsp)
e8c3(7): lea 0x6de8(%rip),%rax
e8ca(9): mov $0x1,0x18(%rsp)
e8d3(3): xor %r15d,%r15d
e8d6(8): mov $0x2,0x8(%rsp)
e8de(5): mov %rax,0x48(%rsp)
e8e3(3): xor %r11d,%r11d
e8e6(3): mov %rbp,%rax
e8e9(3): mov %r12d,%r8d
e8ec(3): mov %r11,%rbp
e8ef(3): mov %rax,%r11
e8f2(6): nop 0x0(%rax,%rax,1)
e8f8(3): cmp %rbp,%r11
e8fb(4): setnz %r12b
e8ff(4): cmp $0xffffffff,%r11
e903(2): jnz 0xf(%rip)
e905(5): mov 0x10(%rsp),%rax
e90a(4): cmp $0x0,0x0(%rax,%rbp,1)
e90e(4): setnz %r12b
e912(3): test %r12b,%r12b
e915(6): jz 0x65b(%rip)
e91b(5): cmp $0x2,0x8(%rsp)
e920(5): mov 0x10(%rsp),%rdi
e925(4): lea 0x0(%rdi,%rbp,1),%r9
e929(3): setnz %al
e92c(4): and 0xd(%rsp),%al
e930(3): mov %eax,%r10d
e933(6): jz 0xad(%rip)
e939(5): mov 0x18(%rsp),%rax
e93e(3): test %rax,%rax
e941(6): jz 0x42f(%rip)
e947(4): cmp $0xffffffff,%r11
e94b(5): lea 0x0(%rbp,%rax,1),%rbx
e950(2): jnz 0x30(%rip)
e952(4): cmp $0x1,%rax
e956(2): jbe 0x2a(%rip)
e958(5): mov %r8b,0x38(%rsp)
e95d(5): mov %r10b,0x30(%rsp)
e962(5): mov %r9,0x28(%rsp)
e967(5): call 0xffff4329(%rip)
e96c(6): movzx 0x38(%rsp),%r8d
e972(6): movzx 0x30(%rsp),%r10d
e978(3): mov %rax,%r11
e97b(5): mov 0x28(%rsp),%r9
e980(3): cmp %r11,%rbx
e983(5): mov %r10b,0x28(%rsp)
e988(6): jnbe 0x5b8(%rip)
e98e(5): mov 0x18(%rsp),%rdx
e993(5): mov 0x48(%rsp),%rsi
e998(3): mov %r9,%rdi
e99b(5): mov %r11,0x40(%rsp)
e9a0(5): mov %r8b,0x38(%rsp)
e9a5(5): mov %r9,0x30(%rsp)
e9aa(5): call 0xffff4446(%rip)
e9af(2): test %eax,%eax
e9b1(5): mov 0x30(%rsp),%r9
e9b6(6): movzx 0x38(%rsp),%r8d
e9bc(5): mov 0x40(%rsp),%r11
e9c1(6): jnz 0x57f(%rip)
e9c7(5): cmp $0x0,0xf(%rsp)
e9cc(6): movzx 0x28(%rsp),%r10d
e9d2(6): jnz 0xf83(%rip)
e9d8(8): nop 0x0(%rax,%rax,1)
e9e0(4): movzx (%r9),%ebx
e9e4(3): cmp $0x7e,%bl
e9e7(6): jnbe 0x321(%rip)
e9ed(7): lea 0x7298(%rip),%rcx
e9f4(3): movzx %bl,%edx
e9f7(4): movsxd 0x0(%rcx,%rdx,4),%rax
e9fb(3): add %rcx,%rax
e9fe(2): jmp %rax
ea00(3): xor %r10d,%r10d
ea03(4): cmp $0x1,%r11
ea07(3): setnz %al
ea0a(4): cmp $0xffffffff,%r11
ea0e(2): jnz 0xe(%rip)
ea10(5): mov 0x10(%rsp),%rax
ea15(4): cmp $0x0,0x1(%rax)
ea19(3): setnz %al
ea1c(5): cmp $0x2,0x8(%rsp)
ea21(3): setz %dl
ea24(2): test %al,%al
ea26(6): jz 0x252(%rip)
ea2c(3): xor %r12d,%r12d
ea2f(2): xor %eax,%eax
ea31(7): nop 0x0(%rax)
ea38(5): cmp $0x1,0xd(%rsp)
ea3d(6): jnz 0x115(%rip)
ea43(2): test %dl,%dl
ea45(6): jnz 0x10d(%rip)
ea4b(5): mov 0x20(%rsp),%rsi
ea50(3): test %rsi,%rsi
ea53(2): jz 0x16(%rip)
ea55(2): mov %ebx,%edx
ea57(3): shr $0x5,%dl
ea5a(3): movzx %dl,%edx
ea5d(3): mov 0x0(%rsi,%rdx,4),%edx
ea60(3): bt %ebx,%edx
ea63(6): jb 0x150(%rip)
ea69(3): test %r10b,%r10b
ea6c(6): jnz 0x147(%rip)
ea72(3): xor $0x1,%eax
ea75(4): add $0x1,%rbp
ea79(3): and %r8d,%eax
ea7c(2): test %al,%al
ea7e(2): jz 0x22(%rip)
ea80(3): cmp %r15,%r13
ea83(2): jbe 0x7(%rip)
ea85(5): mov $0x27,0x0(%r14,%r15,1)
ea8a(4): lea 0x1(%r15),%rax
ea8e(3): cmp %rax,%r13
ea91(2): jbe 0x8(%rip)
ea93(6): mov $0x27,0x1(%r14,%r15,1)
ea99(4): add $0x2,%r15
ea9d(3): xor %r8d,%r8d
eaa0(3): cmp %r13,%r15
eaa3(2): jnb 0x6(%rip)
eaa5(4): mov %bl,0x0(%r14,%r15,1)
eaa9(5): movzx 0xe(%rsp),%edi
eaae(4): add $0x1,%r15
eab2(5): mov $0x0,%eax
eab7(3): test %r12b,%r12b
eaba(3): cmove %eax,%edi
eabd(5): mov %dil,0xe(%rsp)
eac2(5): jmp 0xfffffe36(%rip)
eac7(9): nop 0x0(%rax,%rax,1)
ead0(3): xor %r10d,%r10d
ead3(4): mov 0x8(%rsp),%eax
ead7(3): cmp $0x2,%eax
eada(6): jz 0x5be(%rip)
eae0(3): cmp $0x5,%eax
eae3(6): jz 0x575(%rip)
eae9(3): cmp $0x2,%eax
eaec(5): mov $0x3f,%ebx
eaf1(3): setz %dl
eaf4(3): xor %r12d,%r12d
eaf7(2): xor %eax,%eax
eaf9(5): jmp 0xffffff3f(%rip)
eafe(2): nop 
eb00(3): xor %r10d,%r10d
eb03(5): cmp $0x2,0x8(%rsp)
eb08(6): jz 0x508(%rip)
eb0e(5): mov %r12b,0x7c(%rsp)
eb13(2): xor %edx,%edx
eb15(2): xor %eax,%eax
eb17(5): mov $0x27,%ebx
eb1c(5): jmp 0xffffff1c(%rip)
eb21(7): nop 0x0(%rax)
eb28(5): mov $0x9,%edx
eb2d(5): mov $0x74,%ebx
eb32(5): cmp $0x2,0x8(%rsp)
eb37(3): setz %al
eb3a(4): and 0xf(%rsp),%al
eb3e(6): jnz 0x150(%rip)
eb44(5): cmp $0x0,0xd(%rsp)
eb49(2): jnz 0x67(%rip)
eb4b(2): mov %edx,%ebx
eb4d(3): xor %r12d,%r12d
eb50(2): xor %eax,%eax
eb52(5): cmp $0x0,0xf(%rsp)
eb57(6): jnz 0xfffffef4(%rip)
eb5d(5): jmp 0xffffff0c(%rip)
eb62(6): nop 0x0(%rax,%rax,1)
eb68(5): mov $0x8,%edx
eb6d(5): mov $0x62,%ebx
eb72(2): jmp 0xffffffd2(%rip)
eb74(4): nop 0x0(%rax)
eb78(5): cmp $0x2,0x8(%rsp)
eb7d(6): jz 0x3d3(%rip)
eb83(5): cmp $0x0,0xd(%rsp)
eb88(6): jz 0x218(%rip)
eb8e(5): cmp $0x0,0xf(%rsp)
eb93(6): jz 0x20d(%rip)
eb99(6): cmp $0x0,0x18(%rsp)
eb9f(6): jnz 0x3bc(%rip)
eba5(5): mov $0x5c,%ebx
ebaa(6): nop 0x0(%rax,%rax,1)
ebb0(3): xor %r12d,%r12d
ebb3(5): cmp $0x2,0x8(%rsp)
ebb8(3): setz %dl
ebbb(5): cmp $0x0,0xf(%rsp)
ebc0(2): mov %edx,%eax
ebc2(6): jnz 0x856(%rip)
ebc8(3): mov %r8d,%eax
ebcb(3): xor $0x1,%eax
ebce(2): and %dl,%al
ebd0(2): jz 0x31(%rip)
ebd2(3): cmp %r15,%r13
ebd5(2): jbe 0x7(%rip)
ebd7(5): mov $0x27,0x0(%r14,%r15,1)
ebdc(4): lea 0x1(%r15),%rdx
ebe0(3): cmp %rdx,%r13
ebe3(2): jbe 0x8(%rip)
ebe5(6): mov $0x24,0x1(%r14,%r15,1)
ebeb(4): lea 0x2(%r15),%rdx
ebef(3): cmp %rdx,%r13
ebf2(2): jbe 0x8(%rip)
ebf4(6): mov $0x27,0x2(%r14,%r15,1)
ebfa(4): add $0x3,%r15
ebfe(3): mov %eax,%r8d
ec01(3): cmp %r15,%r13
ec04(2): jbe 0x7(%rip)
ec06(5): mov $0x5c,0x0(%r14,%r15,1)
ec0b(4): add $0x1,%r15
ec0f(4): add $0x1,%rbp
ec13(5): jmp 0xfffffe8d(%rip)
ec18(8): nop 0x0(%rax,%rax,1)
ec20(5): cmp $0x0,0xd(%rsp)
ec25(6): jnz 0x1ce(%rip)
ec2b(2): xor %edx,%edx
ec2d(5): test $0x1,0x78(%rsp)
ec32(6): jz 0xffffff19(%rip)
ec38(4): add $0x1,%rbp
ec3c(5): jmp 0xfffffcbc(%rip)
ec41(7): nop 0x0(%rax)
ec48(5): cmp $0x2,0x8(%rsp)
ec4d(3): setz %dl
ec50(2): xor %eax,%eax
ec52(5): jmp 0xfffffde6(%rip)
ec57(9): nop 0x0(%rax,%rax,1)
ec60(5): mov $0x7,%edx
ec65(5): mov $0x61,%ebx
ec6a(5): jmp 0xfffffeda(%rip)
ec6f(1): nop 
ec70(5): cmp $0x2,0x8(%rsp)
ec75(3): setz %dl
ec78(3): test %rbp,%rbp
ec7b(6): jnz 0xfffffdb1(%rip)
ec81(5): movzx 0xf(%rsp),%eax
ec86(2): and %dl,%al
ec88(6): jz 0xfffffdb0(%rip)
ec8e(3): mov %r11,%rbp
ec91(8): mov $0x2,0x8(%rsp)
ec99(5): jmp 0x700(%rip)
ec9e(2): nop 
eca0(5): cmp $0x2,0x8(%rsp)
eca5(3): setz %dl
eca8(3): xor %r12d,%r12d
ecab(2): jmp 0xffffffd6(%rip)
ecad(3): nop (%rax)
ecb0(5): cmp $0x2,0x8(%rsp)
ecb5(5): mov $0x20,%ebx
ecba(3): setz %dl
ecbd(2): jmp 0xffffffc4(%rip)
ecbf(1): nop 
ecc0(5): mov $0xd,%edx
ecc5(5): mov $0x72,%ebx
ecca(5): jmp 0xfffffe68(%rip)
eccf(1): nop 
ecd0(5): mov $0xc,%edx
ecd5(5): mov $0x66,%ebx
ecda(5): jmp 0xfffffe6a(%rip)
ecdf(1): nop 
ece0(5): mov $0xb,%edx
ece5(5): mov $0x76,%ebx
ecea(5): jmp 0xfffffe5a(%rip)
ecef(1): nop 
ecf0(5): mov $0xa,%edx
ecf5(5): mov $0x6e,%ebx
ecfa(5): jmp 0xfffffe38(%rip)
ecff(1): nop 
ed00(3): xor %r10d,%r10d
ed03(5): nop 0x0(%rax,%rax,1)
ed08(6): cmp $0x1,0x58(%rsp)
ed0e(6): jnz 0x3aa(%rip)
ed14(5): mov %r11,0x38(%rsp)
ed19(5): mov %r8b,0x30(%rsp)
ed1e(5): mov %r10b,0x28(%rsp)
ed23(5): call 0xffff448d(%rip)
ed28(3): mov (%rax),%rcx
ed2b(3): movzx %bl,%edx
ed2e(6): movzx 0x28(%rsp),%r10d
ed34(6): movzx 0x30(%rsp),%r8d
ed3a(5): mov 0x38(%rsp),%r11
ed3f(5): mov $0x1,%edi
ed44(4): movzx 0x0(%rcx,%rdx,2),%eax
ed48(4): and $0x4000,%ax
ed4c(4): setnz %r12b
ed50(3): setz %al
ed53(4): and 0xd(%rsp),%al
ed57(2): test %al,%al
ed59(6): jnz 0x998(%rip)
ed5f(5): cmp $0x2,0x8(%rsp)
ed64(3): setz %dl
ed67(5): jmp 0xfffffcd1(%rip)
ed6c(4): nop 0x0(%rax)
ed70(4): movzx (%r9),%ebx
ed74(3): cmp $0x7e,%bl
ed77(2): jnbe 0xffffff89(%rip)
ed79(7): lea 0x7108(%rip),%rcx
ed80(3): movzx %bl,%edx
ed83(4): movsxd 0x0(%rcx,%rdx,4),%rax
ed87(3): add %rcx,%rax
ed8a(2): jmp %rax
ed8c(4): nop 0x0(%rax)
ed90(3): xor %r10d,%r10d
ed93(5): cmp $0x0,0xd(%rsp)
ed98(6): jnz 0xfffffdf6(%rip)
ed9e(2): nop 
eda0(5): mov $0x5c,%edx
eda5(5): mov $0x5c,%ebx
edaa(5): jmp 0xfffffd9a(%rip)
edaf(1): nop 
edb0(5): mov $0xc,%edx
edb5(3): xor %r10d,%r10d
edb8(5): mov $0x66,%ebx
edbd(5): jmp 0xfffffd87(%rip)
edc2(6): nop 0x0(%rax,%rax,1)
edc8(5): mov $0xa,%edx
edcd(3): xor %r10d,%r10d
edd0(5): mov $0x6e,%ebx
edd5(5): jmp 0xfffffd5d(%rip)
edda(6): nop 0x0(%rax,%rax,1)
ede0(5): mov $0x61,%ebx
ede5(5): jmp 0xfffffdcb(%rip)
edea(6): nop 0x0(%rax,%rax,1)
edf0(3): xor %r10d,%r10d
edf3(5): cmp $0x2,0x8(%rsp)
edf8(3): setz %dl
edfb(5): cmp $0x0,0xf(%rsp)
ee00(6): jnz 0xb9a(%rip)
ee06(3): mov %r8d,%eax
ee09(3): mov %r15,%rcx
ee0c(3): xor $0x1,%eax
ee0f(2): and %dl,%al
ee11(2): jz 0x2f(%rip)
ee13(3): cmp %r15,%r13
ee16(2): jbe 0x7(%rip)
ee18(5): mov $0x27,0x0(%r14,%r15,1)
ee1d(4): lea 0x1(%r15),%rcx
ee21(3): cmp %rcx,%r13
ee24(2): jbe 0x8(%rip)
ee26(6): mov $0x24,0x1(%r14,%r15,1)
ee2c(4): lea 0x2(%r15),%rcx
ee30(3): cmp %rcx,%r13
ee33(6): jnbe 0x636(%rip)
ee39(4): lea 0x3(%r15),%rcx
ee3d(3): mov %eax,%r8d
ee40(3): cmp %rcx,%r13
ee43(2): jbe 0x7(%rip)
ee45(5): mov $0x5c,0x0(%r14,%rcx,1)
ee4a(5): cmp $0x2,0x8(%rsp)
ee4f(4): lea 0x1(%rcx),%r15
ee53(6): jz 0x606(%rip)
ee59(4): lea 0x1(%rbp),%rax
ee5d(3): cmp %r11,%rax
ee60(2): jnb 0x1b(%rip)
ee62(5): mov 0x10(%rsp),%rax
ee67(5): movzx 0x1(%rax,%rbp,1),%eax
ee6c(4): mov %al,0x28(%rsp)
ee70(3): sub $0x30,%eax
ee73(2): cmp $0x9,%al
ee75(6): jbe 0x834(%rip)
ee7b(3): mov %r12d,%eax
ee7e(5): mov $0x30,%ebx
ee83(3): xor %r12d,%r12d
ee86(5): jmp 0xfffffbb2(%rip)
ee8b(5): nop 0x0(%rax,%rax,1)
ee90(5): cmp $0x2,0x8(%rsp)
ee95(3): mov %r10d,%r12d
ee98(3): setz %dl
ee9b(3): xor %r10d,%r10d
ee9e(2): xor %eax,%eax
eea0(5): jmp 0xfffffb98(%rip)
eea5(3): nop (%rax)
eea8(5): cmp $0x2,0x8(%rsp)
eead(3): setz %dl
eeb0(3): xor %r10d,%r10d
eeb3(5): jmp 0xfffffdc5(%rip)
eeb8(8): nop 0x0(%rax,%rax,1)
eec0(5): cmp $0x2,0x8(%rsp)
eec5(3): setz %dl
eec8(3): xor %r10d,%r10d
eecb(3): xor %r12d,%r12d
eece(5): jmp 0xfffffdb3(%rip)
eed3(5): nop 0x0(%rax,%rax,1)
eed8(5): cmp $0x2,0x8(%rsp)
eedd(3): mov %r10d,%r12d
eee0(5): mov $0x20,%ebx
eee5(3): setz %dl
eee8(3): xor %r10d,%r10d
eeeb(5): jmp 0xfffffd96(%rip)
eef0(5): mov $0xd,%edx
eef5(3): xor %r10d,%r10d
eef8(5): mov $0x72,%ebx
eefd(5): jmp 0xfffffc35(%rip)
ef02(6): nop 0x0(%rax,%rax,1)
ef08(5): mov $0x76,%ebx
ef0d(5): jmp 0xfffffca3(%rip)
ef12(6): nop 0x0(%rax,%rax,1)
ef18(5): mov $0x9,%edx
ef1d(3): xor %r10d,%r10d
ef20(5): mov $0x74,%ebx
ef25(5): jmp 0xfffffc0d(%rip)
ef2a(6): nop 0x0(%rax,%rax,1)
ef30(5): mov $0x62,%ebx
ef35(5): jmp 0xfffffc7b(%rip)
ef3a(6): nop 0x0(%rax,%rax,1)
ef40(3): xor %r10d,%r10d
ef43(5): jmp 0xfffffa9d(%rip)
ef48(8): nop 0x0(%rax,%rax,1)
ef50(5): cmp $0x0,0xf(%rsp)
ef55(6): jnz 0x96b(%rip)
ef5b(4): add $0x1,%rbp
ef5f(3): mov %r8d,%eax
ef62(3): xor %r12d,%r12d
ef65(5): mov $0x5c,%ebx
ef6a(5): jmp 0xfffffb12(%rip)
ef6f(1): nop 
ef70(5): cmp $0x2,0x8(%rsp)
ef75(5): movzx 0xf(%rsp),%ebx
ef7a(3): mov %r8d,%r12d
ef7d(3): mov %r11,%rbp
ef80(3): setz %dl
ef83(2): mov %ebx,%eax
ef85(3): test %r15,%r15
ef88(3): setz %cl
ef8b(2): and %edx,%eax
ef8d(2): and %cl,%al
ef8f(6): jnz 0xa67(%rip)
ef95(2): mov %ebx,%eax
ef97(3): xor $0x1,%eax
ef9a(2): and %al,%dl
ef9c(6): jz 0x970(%rip)
efa2(5): cmp $0x0,0x7c(%rsp)
efa7(6): jz 0x963(%rip)
efad(5): cmp $0x0,0xe(%rsp)
efb2(6): jnz 0x9fb(%rip)
efb8(3): test %r13,%r13
efbb(3): setz %al
efbe(6): cmp $0x0,0x50(%rsp)
efc4(3): setnz %dl
efc7(2): and %dl,%al
efc9(6): jz 0xa23(%rip)
efcf(5): mov 0x50(%rsp),%r13
efd4(7): lea 0x66d7(%rip),%rbx
efdb(4): mov $0x27,(%r14)
efdf(8): mov $0x2,0x8(%rsp)
efe7(6): mov $0x1,%r15d
efed(9): mov $0x1,0x18(%rsp)
eff6(5): mov $0x0,0xf(%rsp)
effb(5): mov %rbx,0x48(%rsp)
f000(4): mov %al,0x7c(%rsp)
f004(5): jmp 0xfffff8df(%rip)
f009(7): nop 0x0(%rax)
f010(5): cmp $0x0,0xf(%rsp)
f015(6): jnz 0x8ab(%rip)
f01b(3): test %r13,%r13
f01e(6): jz 0x402(%rip)
f024(2): xor %edx,%edx
f026(6): cmp $0x0,0x50(%rsp)
f02c(6): jnz 0x3f4(%rip)
f032(5): mov %r13,0x50(%rsp)
f037(4): add $0x3,%r15
f03b(2): xor %eax,%eax
f03d(5): mov %r12b,0x7c(%rsp)
f042(3): xor %r8d,%r8d
f045(3): mov %rdx,%r13
f048(5): mov $0x27,%ebx
f04d(5): jmp 0xfffffa1c(%rip)
f052(6): nop 0x0(%rax,%rax,1)
f058(5): test $0x4,0x78(%rsp)
f05d(2): jz 0x23(%rip)
f05f(4): lea 0x2(%rbp),%rcx
f063(3): cmp %r11,%rcx
f066(2): jnb 0x1a(%rip)
f068(5): mov 0x10(%rsp),%rax
f06d(5): cmp $0x3f,0x1(%rax,%rbp,1)
f072(6): jz 0x790(%rip)
f078(8): nop 0x0(%rax,%rax,1)
f080(2): xor %edx,%edx
f082(3): xor %r12d,%r12d
f085(2): xor %eax,%eax
f087(5): mov $0x3f,%ebx
f08c(5): jmp 0xfffff9ac(%rip)
f091(7): nop 0x0(%rax)
f098(5): cmp $0x0,0xf(%rsp)
f09d(6): jnz 0x823(%rip)
f0a3(3): xor %r12d,%r12d
f0a6(2): xor %eax,%eax
f0a8(5): mov $0x3f,%ebx
f0ad(5): jmp 0xfffff9bc(%rip)
f0b2(6): nop 0x0(%rax,%rax,1)
f0b8(8): lea 0xa0(%rsp),%rax
f0c0(4): cmp $0xffffffff,%r11
f0c4(c): mov $0x0,0xa0(%rsp)
f0d0(5): mov %rax,0x28(%rsp)
f0d5(2): jnz 0x2f(%rip)
f0d7(5): mov 0x10(%rsp),%rdi
f0dc(5): mov %r8b,0x40(%rsp)
f0e1(5): mov %r10b,0x38(%rsp)
f0e6(5): mov %r9,0x30(%rsp)
f0eb(5): call 0xffff3ba5(%rip)
f0f0(6): movzx 0x40(%rsp),%r8d
f0f6(6): movzx 0x38(%rsp),%r10d
f0fc(3): mov %rax,%r11
f0ff(5): mov 0x30(%rsp),%r9
f104(8): lea 0x9c(%rsp),%rax
f10c(2): xor %ecx,%ecx
f10e(4): mov %bl,0x7e(%rsp)
f112(5): mov %r8b,0x7d(%rsp)
f117(3): mov %rcx,%rbx
f11a(8): mov %r9,0x88(%rsp)
f122(5): mov %rax,0x38(%rsp)
f127(5): mov %r10b,0x7f(%rsp)
f12c(8): mov %r15,0x80(%rsp)
f134(5): mov %r14,0x40(%rsp)
f139(5): mov %r13,0x70(%rsp)
f13e(5): mov %r11,0x30(%rsp)
f143(5): mov 0x10(%rsp),%rax
f148(5): lea 0x0(%rbp,%rbx,1),%r14
f14d(5): mov 0x30(%rsp),%rdx
f152(5): mov 0x28(%rsp),%rcx
f157(5): mov 0x38(%rsp),%rdi
f15c(4): lea 0x0(%rax,%r14,1),%r13
f160(3): sub %r14,%rdx
f163(3): mov %r13,%rsi
f166(5): call 0x3d7a(%rip)
f16b(3): test %rax,%rax
f16e(3): mov %rax,%r15
f171(2): jz 0x50(%rip)
f173(4): cmp $0xffffffff,%rax
f177(6): jz 0x61e(%rip)
f17d(4): cmp $0xfffffffe,%rax
f181(6): jz 0x5a0(%rip)
f187(5): cmp $0x2,0x8(%rsp)
f18c(3): setz %al
f18f(4): and 0xf(%rsp),%al
f193(6): jnz 0x19d(%rip)
f199(7): mov 0x9c(%rsp),%edi
f1a0(5): call 0xffff3fc0(%rip)
f1a5(5): mov 0x28(%rsp),%rdi
f1aa(2): test %eax,%eax
f1ac(5): mov $0x0,%eax
f1b1(4): cmove %eax,%r12d
f1b5(3): add %r15,%rbx
f1b8(5): call 0xffff3f88(%rip)
f1bd(2): test %eax,%eax
f1bf(2): jz 0xffffff84(%rip)
f1c1(3): mov %r12d,%edx
f1c4(3): mov %rbx,%rdi
f1c7(6): movzx 0x7d(%rsp),%r8d
f1cd(3): xor $0x1,%edx
f1d0(5): movzx 0x7e(%rsp),%ebx
f1d5(6): movzx 0x7f(%rsp),%r10d
f1db(4): and 0xd(%rsp),%dl
f1df(8): mov 0x80(%rsp),%r15
f1e7(5): mov 0x40(%rsp),%r14
f1ec(5): mov 0x70(%rsp),%r13
f1f1(5): mov 0x30(%rsp),%r11
f1f6(4): cmp $0x1,%rdi
f1fa(6): jbe 0x601(%rip)
f200(3): mov %rdi,%rcx
f203(2): xor %esi,%esi
f205(6): movzx 0xf(%rsp),%r9d
f20b(3): add %rbp,%rcx
f20e(5): mov 0x10(%rsp),%rdi
f213(5): jmp 0xbb(%rip)
f218(8): nop 0x0(%rax,%rax,1)
f220(5): cmp $0x2,0x8(%rsp)
f225(3): setz %al
f228(3): test %r9b,%r9b
f22b(6): jnz 0x4b5(%rip)
f231(3): mov %r8d,%esi
f234(3): xor $0x1,%esi
f237(3): and %sil,%al
f23a(2): jz 0x31(%rip)
f23c(3): cmp %r15,%r13
f23f(2): jbe 0x7(%rip)
f241(5): mov $0x27,0x0(%r14,%r15,1)
f246(4): lea 0x1(%r15),%rsi
f24a(3): cmp %rsi,%r13
f24d(2): jbe 0x8(%rip)
f24f(6): mov $0x24,0x1(%r14,%r15,1)
f255(4): lea 0x2(%r15),%rsi
f259(3): cmp %rsi,%r13
f25c(2): jbe 0x8(%rip)
f25e(6): mov $0x27,0x2(%r14,%r15,1)
f264(4): add $0x3,%r15
f268(3): mov %eax,%r8d
f26b(3): cmp %r15,%r13
f26e(2): jbe 0x7(%rip)
f270(5): mov $0x5c,0x0(%r14,%r15,1)
f275(4): lea 0x1(%r15),%rax
f279(3): cmp %rax,%r13
f27c(2): jbe 0xf(%rip)
f27e(2): mov %ebx,%eax
f280(3): shr $0x6,%al
f283(3): add $0x30,%eax
f286(5): mov %al,0x1(%r14,%r15,1)
f28b(4): lea 0x2(%r15),%rax
f28f(3): cmp %rax,%r13
f292(2): jbe 0x12(%rip)
f294(2): mov %ebx,%eax
f296(3): shr $0x3,%al
f299(3): and $0x7,%eax
f29c(3): add $0x30,%eax
f29f(5): mov %al,0x2(%r14,%r15,1)
f2a4(3): and $0x7,%ebx
f2a7(4): add $0x1,%rbp
f2ab(4): add $0x3,%r15
f2af(3): add $0x30,%ebx
f2b2(3): cmp %rcx,%rbp
f2b5(6): jnb 0xfffff7eb(%rip)
f2bb(2): mov %edx,%esi
f2bd(3): cmp %r15,%r13
f2c0(2): jbe 0x6(%rip)
f2c2(4): mov %bl,0x0(%r14,%r15,1)
f2c6(4): movzx 0x0(%rdi,%rbp,1),%ebx
f2ca(4): add $0x1,%r15
f2ce(2): test %dl,%dl
f2d0(6): jnz 0xffffff50(%rip)
f2d6(2): mov %esi,%eax
f2d8(3): xor $0x1,%eax
f2db(3): and %r8d,%eax
f2de(3): test %r10b,%r10b
f2e1(2): jz 0x10(%rip)
f2e3(3): cmp %r15,%r13
f2e6(2): jbe 0x7(%rip)
f2e8(5): mov $0x5c,0x0(%r14,%r15,1)
f2ed(4): add $0x1,%r15
f2f1(4): add $0x1,%rbp
f2f5(3): cmp %rcx,%rbp
f2f8(6): jnb 0xfffff784(%rip)
f2fe(2): test %al,%al
f300(6): jz 0x3fe(%rip)
f306(3): cmp %r15,%r13
f309(2): jbe 0x7(%rip)
f30b(5): mov $0x27,0x0(%r14,%r15,1)
f310(4): lea 0x1(%r15),%rax
f314(3): cmp %rax,%r13
f317(2): jbe 0x8(%rip)
f319(6): mov $0x27,0x1(%r14,%r15,1)
f31f(4): add $0x2,%r15
f323(3): xor %r10d,%r10d
f326(3): xor %r8d,%r8d
f329(2): jmp 0xffffff94(%rip)
f32b(5): nop 0x0(%rax,%rax,1)
f330(4): cmp $0x1,%r15
f334(6): jz 0xfffffe65(%rip)
f33a(5): mov 0x10(%rsp),%rdi
f33f(4): lea 0x0(%rdi,%r15,1),%rcx
f343(5): lea 0x1(%rdi,%r14,1),%rdx
f348(4): lea 0x0(%rcx,%r14,1),%r8
f34c(2): jmp 0x11(%rip)
f34e(2): nop 
f350(4): add $0x1,%rdx
f354(3): cmp %rdx,%r8
f357(6): jz 0xfffffe42(%rip)
f35d(3): movzx (%rdx),%ecx
f360(3): sub $0x5b,%ecx
f363(3): cmp $0x21,%cl
f366(2): jnbe 0xffffffea(%rip)
f368(5): mov $0x1,%esi
f36d(3): shl/sal %cl,%rsi
f370(3): mov %rsi,%rcx
f373(a): mov $0x8589934635,%rsi
f37d(3): test %rsi,%rcx
f380(2): jz 0xffffffd0(%rip)
f382(5): mov 0x40(%rsp),%r14
f387(5): mov 0x70(%rsp),%r13
f38c(5): mov 0x30(%rsp),%rbp
f391(8): mov $0x2,0x8(%rsp)
f399(5): cmp $0x0,0xd(%rsp)
f39e(2): jz 0x12(%rip)
f3a0(2): test %al,%al
f3a2(5): mov $0x4,%eax
f3a7(5): cmove 0x8(%rsp),%eax
f3ac(4): mov %eax,0x8(%rsp)
f3b0(4): sub $0x8,%rsp
f3b4(3): mov %rbp,%rcx
f3b7(3): mov %r13,%rsi
f3ba(4): push 0x68(%rsp)
f3be(4): push 0x78(%rsp)
f3c2(3): mov %r14,%rdi
f3c5(2): push $0x0
f3c7(8): mov 0x98(%rsp),%r9d
f3cf(5): mov 0x28(%rsp),%r8d
f3d4(5): mov 0x30(%rsp),%rdx
f3d9(4): and $0xfd,%r9d
f3dd(5): call 0xfffff433(%rip)
f3e2(4): add $0x20,%rsp
f3e6(3): mov %rax,%r15
f3e9(8): mov 0xa8(%rsp),%rbx
f3f1(9): xor $0x28,%rbx
f3fa(3): mov %r15,%rax
f3fd(6): jnz 0x606(%rip)
f403(7): add $0xb8,%rsp
f40a(1): pop %rbx
f40b(1): pop %rbp
f40c(2): pop %r12
f40e(2): pop %r13
f410(2): pop %r14
f412(2): pop %r15
f414(1): ret near (%rsp)
f415(3): nop (%rax)
f418(3): mov %r11,%rbp
f41b(5): jmp 0xffffff7e(%rip)
f420(3): cmp %r15,%r13
f423(2): jbe 0x7(%rip)
f425(5): mov $0x27,0x0(%r14,%r15,1)
f42a(4): lea 0x1(%r15),%rax
f42e(3): cmp %rax,%r13
f431(2): jbe 0x8(%rip)
f433(6): mov $0x5c,0x1(%r14,%r15,1)
f439(4): lea 0x2(%r15),%rax
f43d(3): cmp %rax,%r13
f440(6): jbe 0x5f2(%rip)
f446(3): mov %r13,%rdx
f449(6): mov $0x27,0x2(%r14,%r15,1)
f44f(5): mov 0x50(%rsp),%r13
f454(5): jmp 0xfffffbde(%rip)
f459(3): mov %r12d,%eax
f45c(5): mov $0x30,%ebx
f461(3): xor %r12d,%r12d
f464(5): jmp 0xfffff605(%rip)
f469(6): mov $0x27,0x2(%r14,%r15,1)
f46f(5): jmp 0xfffff9ca(%rip)
f474(2): test %ebx,%ebx
f476(6): jnz 0xfffff42d(%rip)
f47c(5): mov $0x1,0xd(%rsp)
f481(3): test %r13,%r13
f484(6): jnz 0x596(%rip)
f48a(7): lea 0x6221(%rip),%rax
f491(9): mov $0x0,0x50(%rsp)
f49a(5): mov $0x1,0xe(%rsp)
f49f(5): mov $0x0,0x7c(%rsp)
f4a4(3): xor %r12d,%r12d
f4a7(5): mov $0x0,0xf(%rsp)
f4ac(9): mov $0x1,0x18(%rsp)
f4b5(5): mov %rax,0x48(%rsp)
f4ba(6): mov $0x1,%r15d
f4c0(8): mov $0x2,0x8(%rsp)
f4c8(5): jmp 0xfffff41b(%rip)
f4cd(3): nop (%rax)
f4d0(2): test %ebx,%ebx
f4d2(6): jnz 0x3fb(%rip)
f4d8(3): test %r13,%r13
f4db(6): jz 0x22b(%rip)
f4e1(4): mov $0x22,(%r14)
f4e5(5): mov $0x1,0xe(%rsp)
f4ea(3): xor %r12d,%r12d
f4ed(5): mov $0x0,0x7c(%rsp)
f4f2(9): mov $0x0,0x50(%rsp)
f4fb(7): lea 0x6701(%rip),%rax
f502(5): mov $0x0,0xf(%rsp)
f507(5): mov $0x1,0xd(%rsp)
f50c(9): mov $0x1,0x18(%rsp)
f515(6): mov $0x1,%r15d
f51b(5): mov %rax,0x48(%rsp)
f520(5): jmp 0xfffff3c3(%rip)
f525(7): lea 0x66d7(%rip),%rax
f52c(5): mov $0x1,0xe(%rsp)
f531(5): mov $0x0,0x7c(%rsp)
f536(3): xor %r12d,%r12d
f539(9): mov $0x0,0x50(%rsp)
f542(5): mov $0x1,0xf(%rsp)
f547(5): mov $0x1,0xd(%rsp)
f54c(9): mov $0x1,0x18(%rsp)
f555(3): xor %r15d,%r15d
f558(5): mov %rax,0x48(%rsp)
f55d(8): mov $0x5,0x8(%rsp)
f565(5): jmp 0xfffff37e(%rip)
f56a(5): mov $0x1,0xe(%rsp)
f56f(5): mov $0x0,0x7c(%rsp)
f574(3): xor %r12d,%r12d
f577(9): mov $0x0,0x50(%rsp)
f580(5): mov $0x0,0xf(%rsp)
f585(3): xor %r15d,%r15d
f588(5): mov $0x1,0xd(%rsp)
f58d(9): mov $0x0,0x18(%rsp)
f596(9): mov $0x0,0x48(%rsp)
f59f(5): jmp 0xfffff344(%rip)
f5a4(5): cmp $0xa,0x8(%rsp)
f5a9(2): jz 0x58(%rip)
f5ab(7): lea 0x6653(%rip),%rsi
f5b2(2): xor %edi,%edi
f5b4(5): mov $0x5,%edx
f5b9(5): call 0xffff36b7(%rip)
f5be(3): mov %rax,%rcx
f5c1(5): mov %rax,0x68(%rsp)
f5c6(7): lea 0x6638(%rip),%rax
f5cd(3): cmp %rax,%rcx
f5d0(6): jz 0x39e(%rip)
f5d6(7): lea 0x60d5(%rip),%rsi
f5dd(2): xor %edi,%edi
f5df(5): mov $0x5,%edx
f5e4(5): call 0xffff368c(%rip)
f5e9(3): mov %rax,%rcx
f5ec(5): mov %rax,0x60(%rsp)
f5f1(7): lea 0x60ba(%rip),%rax
f5f8(3): cmp %rax,%rcx
f5fb(6): jz 0x389(%rip)
f601(3): xor %r15d,%r15d
f604(2): test %ebx,%ebx
f606(6): jz 0x1c7(%rip)
f60c(2): test %ebx,%ebx
f60e(5): mov 0x60(%rsp),%rbx
f613(5): setnz 0xf(%rsp)
f618(3): xor %r12d,%r12d
f61b(3): mov %rbx,%rdi
f61e(5): call 0xffff3672(%rip)
f623(5): mov %rbx,0x48(%rsp)
f628(5): mov %rax,0x18(%rsp)
f62d(5): mov $0x1,0xe(%rsp)
f632(5): mov $0x0,0x7c(%rsp)
f637(9): mov $0x0,0x50(%rsp)
f640(5): mov $0x1,0xd(%rsp)
f645(5): jmp 0xfffff29e(%rip)
f64a(5): mov $0x1,0xe(%rsp)
f64f(5): mov $0x0,0x7c(%rsp)
f654(3): xor %r12d,%r12d
f657(9): mov $0x0,0x50(%rsp)
f660(5): mov $0x0,0xf(%rsp)
f665(3): xor %r15d,%r15d
f668(5): mov $0x0,0xd(%rsp)
f66d(9): mov $0x0,0x18(%rsp)
f676(9): mov $0x0,0x48(%rsp)
f67f(5): jmp 0xfffff264(%rip)
f684(5): mov $0x1,0xe(%rsp)
f689(5): mov $0x0,0x7c(%rsp)
f68e(3): xor %r12d,%r12d
f691(9): mov $0x0,0x50(%rsp)
f69a(5): mov $0x1,0xf(%rsp)
f69f(5): mov $0x1,0xd(%rsp)
f6a4(5): jmp 0xfffff21f(%rip)
f6a9(3): cmp %r15,%r13
f6ac(2): jbe 0x7(%rip)
f6ae(5): mov $0x30,0x0(%r14,%r15,1)
f6b3(4): lea 0x2(%rcx),%rax
f6b7(3): cmp %rax,%r13
f6ba(2): jbe 0x8(%rip)
f6bc(6): mov $0x30,0x2(%r14,%rcx,1)
f6c2(3): mov %r12d,%eax
f6c5(4): lea 0x3(%rcx),%r15
f6c9(3): xor %r12d,%r12d
f6cc(5): mov $0x30,%ebx
f6d1(5): jmp 0xfffff367(%rip)
f6d6(a): nop 0x0(%rax,%rax,1)
f6e0(5): movzx 0xf(%rsp),%ebx
f6e5(3): mov %r11,%rbp
f6e8(4): mov %bl,0xd(%rsp)
f6ec(5): jmp 0xfffffcad(%rip)
f6f1(5): movzx 0xd(%rsp),%edx
f6f6(3): xor %r12d,%r12d
f6f9(5): jmp 0xfffffb07(%rip)
f6fe(3): xor %r10d,%r10d
f701(5): jmp 0xfffffbbc(%rip)
f706(9): mov $0x0,0x50(%rsp)
f70f(5): mov $0x1,0xe(%rsp)
f714(3): xor %r12d,%r12d
f717(5): mov $0x0,0x7c(%rsp)
f71c(5): jmp 0xfffffddf(%rip)
f721(5): mov 0x30(%rsp),%r11
f726(3): mov %r14,%rsi
f729(3): mov %r13,%rcx
f72c(3): mov %rbx,%rax
f72f(3): mov %rbx,%rdi
f732(6): movzx 0x7d(%rsp),%r8d
f738(5): movzx 0x7e(%rsp),%ebx
f73d(8): mov 0x88(%rsp),%r9
f745(3): cmp %r11,%rsi
f748(6): movzx 0x7f(%rsp),%r10d
f74e(8): mov 0x80(%rsp),%r15
f756(5): mov 0x40(%rsp),%r14
f75b(5): mov 0x70(%rsp),%r13
f760(2): jnb 0x28(%rip)
f762(3): cmp $0x0,(%rcx)
f765(2): jnz 0x12(%rip)
f767(2): jmp 0x21(%rip)
f769(7): nop 0x0(%rax)
f770(5): cmp $0x0,0x0(%r9,%rax,1)
f775(2): jz 0x10(%rip)
f777(4): add $0x1,%rax
f77b(5): lea 0x0(%rbp,%rax,1),%rdx
f780(3): cmp %rdx,%r11
f783(2): jnbe 0xffffffed(%rip)
f785(3): mov %rax,%rdi
f788(5): movzx 0xd(%rsp),%edx
f78d(3): xor %r12d,%r12d
f790(5): jmp 0xfffffa66(%rip)
f795(3): mov %rbx,%rdi
f798(6): movzx 0x7d(%rsp),%r8d
f79e(5): movzx 0x7e(%rsp),%ebx
f7a3(6): movzx 0x7f(%rsp),%r10d
f7a9(8): mov 0x80(%rsp),%r15
f7b1(3): xor %r12d,%r12d
f7b4(5): mov 0x40(%rsp),%r14
f7b9(5): mov 0x70(%rsp),%r13
f7be(5): mov 0x30(%rsp),%r11
f7c3(5): movzx 0xd(%rsp),%edx
f7c8(5): jmp 0xfffffa2e(%rip)
f7cd(5): mov 0x68(%rsp),%rdx
f7d2(3): movzx (%rdx),%eax
f7d5(2): test %al,%al
f7d7(6): jz 0xfffffe35(%rip)
f7dd(3): nop (%rax)
f7e0(3): cmp %r15,%r13
f7e3(2): jbe 0x6(%rip)
f7e5(4): mov %al,0x0(%r14,%r15,1)
f7e9(4): add $0x1,%r15
f7ed(5): movzx 0x0(%rdx,%r15,1),%eax
f7f2(2): test %al,%al
f7f4(2): jnz 0xffffffec(%rip)
f7f6(5): jmp 0xfffffe16(%rip)
f7fb(2): mov %edx,%eax
f7fd(5): jmp 0xfffff55a(%rip)
f802(4): movzx 0x0(%rax,%rcx,1),%ebx
f806(3): cmp $0x3e,%bl
f809(6): jnbe 0xfffff877(%rip)
f80f(a): mov $0x8070630310989004800,%rax
f819(4): bt %rbx,%rax
f81d(6): jnb 0xfffff863(%rip)
f823(5): cmp $0x0,0xf(%rsp)
f828(6): jnz 0x1ea(%rip)
f82e(3): cmp %r15,%r13
f831(2): jbe 0x7(%rip)
f833(5): mov $0x3f,0x0(%r14,%r15,1)
f838(4): lea 0x1(%r15),%rax
f83c(3): cmp %rax,%r13
f83f(2): jbe 0x8(%rip)
f841(6): mov $0x22,0x1(%r14,%r15,1)
f847(4): lea 0x2(%r15),%rax
f84b(3): cmp %rax,%r13
f84e(2): jbe 0x8(%rip)
f850(6): mov $0x22,0x2(%r14,%r15,1)
f856(4): lea 0x3(%r15),%rax
f85a(3): cmp %rax,%r13
f85d(2): jbe 0x8(%rip)
f85f(6): mov $0x3f,0x3(%r14,%r15,1)
f865(4): add $0x4,%r15
f869(2): xor %edx,%edx
f86b(3): xor %r12d,%r12d
f86e(2): xor %eax,%eax
f870(3): mov %rcx,%rbp
f873(5): jmp 0xfffff1c5(%rip)
f878(2): test %ebx,%ebx
f87a(6): jz 0x18e(%rip)
f880(7): lea 0x5e2b(%rip),%rax
f887(5): mov $0x1,0xe(%rsp)
f88c(5): mov $0x0,0x7c(%rsp)
f891(3): xor %r12d,%r12d
f894(9): mov $0x0,0x50(%rsp)
f89d(5): mov $0x1,0xf(%rsp)
f8a2(5): mov $0x0,0xd(%rsp)
f8a7(9): mov $0x1,0x18(%rsp)
f8b0(3): xor %r15d,%r15d
f8b3(5): mov %rax,0x48(%rsp)
f8b8(5): jmp 0xfffff02b(%rip)
f8bd(3): nop (%rax)
f8c0(3): mov %r11,%rbp
f8c3(5): movzx 0xf(%rsp),%eax
f8c8(5): jmp 0xfffffad1(%rip)
f8cd(7): lea 0x632f(%rip),%rax
f8d4(5): mov $0x1,0xe(%rsp)
f8d9(5): mov $0x0,0x7c(%rsp)
f8de(3): xor %r12d,%r12d
f8e1(9): mov $0x0,0x50(%rsp)
f8ea(5): mov $0x1,0xf(%rsp)
f8ef(5): mov $0x1,0xd(%rsp)
f8f4(9): mov $0x1,0x18(%rsp)
f8fd(3): xor %r15d,%r15d
f900(5): mov %rax,0x48(%rsp)
f905(5): jmp 0xffffefde(%rip)
f90a(2): mov %edx,%eax
f90c(5): mov 0x48(%rsp),%rbx
f911(3): test %rbx,%rbx
f914(2): jz 0x2e(%rip)
f916(2): test %al,%al
f918(2): jz 0x2a(%rip)
f91a(3): movzx (%rbx),%ecx
f91d(3): mov %rbx,%rax
f920(2): test %cl,%cl
f922(2): jz 0x20(%rip)
f924(3): mov %r15,%rdx
f927(3): sub %r15,%rax
f92a(3): cmp %rdx,%r13
f92d(2): jbe 0x6(%rip)
f92f(4): mov %cl,0x0(%r14,%rdx,1)
f933(4): add $0x1,%rdx
f937(4): movzx 0x0(%rax,%rdx,1),%ecx
f93b(2): test %cl,%cl
f93d(2): jnz 0xffffffed(%rip)
f93f(3): mov %rdx,%r15
f942(3): cmp %r15,%r13
f945(6): jbe 0xfffffaa4(%rip)
f94b(5): mov $0x0,0x0(%r14,%r15,1)
f950(5): jmp 0xfffffa99(%rip)
f955(5): cmp $0x2,0x8(%rsp)
f95a(5): movzx 0xf(%rsp),%ebx
f95f(3): mov %r11,%rbp
f962(3): setz %al
f965(4): mov %bl,0xd(%rsp)
f969(5): jmp 0xfffffa30(%rip)
f96e(4): mov 0x8(%rsp),%esi
f972(3): mov %rcx,%rdi
f975(5): call 0xffffedab(%rip)
f97a(5): mov %rax,0x68(%rsp)
f97f(5): jmp 0xfffffc57(%rip)
f984(4): mov 0x8(%rsp),%esi
f988(3): mov %rcx,%rdi
f98b(5): call 0xffffed95(%rip)
f990(5): mov %rax,0x60(%rsp)
f995(5): jmp 0xfffffc6c(%rip)
f99a(5): movzx 0xf(%rsp),%ebx
f99f(3): mov %r11,%rbp
f9a2(2): mov %edx,%eax
f9a4(4): mov %bl,0xd(%rsp)
f9a8(5): jmp 0xfffff9f1(%rip)
f9ad(4): sub $0x8,%rsp
f9b1(6): mov $0x5,%r8d
f9b7(3): mov %r11,%rcx
f9ba(4): push 0x68(%rsp)
f9be(4): push 0x78(%rsp)
f9c2(3): mov %r14,%rdi
f9c5(4): push 0x38(%rsp)
f9c9(8): mov 0x98(%rsp),%r9d
f9d1(5): mov 0x30(%rsp),%rdx
f9d6(5): mov 0x70(%rsp),%rsi
f9db(5): call 0xffffee35(%rip)
f9e0(4): add $0x20,%rsp
f9e4(3): mov %rax,%r15
f9e7(5): jmp 0xfffffa02(%rip)
f9ec(5): movzx 0x7c(%rsp),%eax
f9f1(5): jmp 0xffffff1b(%rip)
f9f6(8): mov $0x2,0x8(%rsp)
f9fe(5): jmp 0xfffff99b(%rip)
fa03(5): call 0xffff329d(%rip)
fa08(5): mov $0x0,0xd(%rsp)
fa0d(5): jmp 0xfffffa74(%rip)
fa12(3): mov %r11,%rbp
fa15(5): jmp 0xfffff99b(%rip)
fa1a(5): mov $0x1,0xe(%rsp)
fa1f(2): xor %eax,%eax
fa21(3): xor %r12d,%r12d
fa24(9): mov $0x0,0x50(%rsp)
fa2d(5): jmp 0xfffff5a7(%rip)
fa32(3): mov %r13,%rdx
fa35(5): mov 0x50(%rsp),%r13
fa3a(5): jmp 0xfffff5f8(%rip)
fa3f(5): call 0xffff30c1(%rip)

"quotearg_n_options" :
fa50(2): push %r15
fa52(2): push %r14
fa54(3): movsxd %edi,%r15
fa57(2): push %r13
fa59(2): push %r12
fa5b(3): mov %rdx,%r14
fa5e(1): push %rbp
fa5f(1): push %rbx
fa60(3): mov %rcx,%rbp
fa63(4): sub $0x28,%rsp
fa67(5): mov %rsi,0x8(%rsp)
fa6c(5): call 0xffff30a4(%rip)
fa71(3): mov %rax,%r13
fa74(2): mov (%rax),%eax
fa76(3): test %r15d,%r15d
fa79(7): mov 0x20a700(%rip),%rbx
fa80(4): mov %eax,0x18(%rsp)
fa84(6): js 0x16d(%rip)
fa8a(7): cmp %r15d,0x20a6e7(%rip)
fa91(2): jnle 0x64(%rip)
fa93(7): cmp $0x7fffffff,%r15d
fa9a(6): jz 0x15c(%rip)
faa0(4): lea 0x1(%r15),%r12d
faa4(7): lea 0x20a6e5(%rip),%rax
faab(3): movsxd %r12d,%rsi
faae(4): shl/sal $0x4,%rsi
fab2(3): cmp %rax,%rbx
fab5(6): jz 0x11b(%rip)
fabb(3): mov %rbx,%rdi
fabe(5): call 0x2382(%rip)
fac3(3): mov %rax,%rbx
fac6(7): mov %rax,0x20a6b3(%rip)
facd(7): movsxd 0x20a6a4(%rip),%rdi
fad4(3): mov %r12d,%edx
fad7(2): xor %esi,%esi
fad9(2): sub %edi,%edx
fadb(4): shl/sal $0x4,%rdi
fadf(3): movsxd %edx,%rdx
fae2(3): add %rbx,%rdi
fae5(4): shl/sal $0x4,%rdx
fae9(5): call 0xffff32a7(%rip)
faee(7): mov %r12d,0x20a683(%rip)
faf5(3): mov 0x4(%rbp),%eax
faf8(4): shl/sal $0x4,%r15
fafc(4): sub $0x8,%rsp
fb00(3): add %r15,%rbx
fb03(4): lea 0x8(%rbp),%r15
fb07(4): mov 0x0(%rbp),%r8d
fb0b(3): mov (%rbx),%r11
fb0e(4): mov 0x8(%rbx),%r12
fb12(3): mov %r14,%rcx
fb15(3): or $0x1,%eax
fb18(4): mov %eax,0x24(%rsp)
fb1c(3): push 0x30(%rbp)
fb1f(3): mov %eax,%r9d
fb22(3): push 0x28(%rbp)
fb25(2): push %r15
fb27(3): mov %r11,%rsi
fb2a(5): mov 0x28(%rsp),%rdx
fb2f(3): mov %r12,%rdi
fb32(5): mov %r11,0x30(%rsp)
fb37(5): call 0xffffecd9(%rip)
fb3c(4): add $0x20,%rsp
fb40(5): mov 0x10(%rsp),%r11
fb45(3): cmp %rax,%r11
fb48(2): jnbe 0x69(%rip)
fb4a(4): lea 0x1(%rax),%rsi
fb4e(7): lea 0x20ad6b(%rip),%rax
fb55(3): cmp %rax,%r12
fb58(3): mov %rsi,(%rbx)
fb5b(2): jz 0x14(%rip)
fb5d(3): mov %r12,%rdi
fb60(5): mov %rsi,0x10(%rsp)
fb65(5): call 0xffff365b(%rip)
fb6a(5): mov 0x10(%rsp),%rsi
fb6f(3): mov %rsi,%rdi
fb72(5): mov %rsi,0x10(%rsp)
fb77(5): call 0x2269(%rip)
fb7c(4): sub $0x8,%rsp
fb80(4): mov %rax,0x8(%rbx)
fb84(4): mov 0x0(%rbp),%r8d
fb88(3): push 0x30(%rbp)
fb8b(3): push 0x28(%rbp)
fb8e(3): mov %r14,%rcx
fb91(2): push %r15
fb93(5): mov 0x3c(%rsp),%r9d
fb98(3): mov %rax,%rdi
fb9b(5): mov 0x28(%rsp),%rdx
fba0(5): mov 0x30(%rsp),%rsi
fba5(3): mov %rax,%r12
fba8(5): call 0xffffec68(%rip)
fbad(4): add $0x20,%rsp
fbb1(4): mov 0x18(%rsp),%eax
fbb5(4): mov %eax,0x0(%r13)
fbb9(4): add $0x28,%rsp
fbbd(3): mov %r12,%rax
fbc0(1): pop %rbx
fbc1(1): pop %rbp
fbc2(2): pop %r12
fbc4(2): pop %r13
fbc6(2): pop %r14
fbc8(2): pop %r15
fbca(1): ret near (%rsp)
fbcb(5): nop 0x0(%rax,%rax,1)
fbd0(2): xor %edi,%edi
fbd2(5): call 0x226e(%rip)
fbd7(8): movdqa 0x20a5b1(%rip),%xmm0
fbdf(3): mov %rax,%rbx
fbe2(7): mov %rax,0x20a597(%rip)
fbe9(3): movups %xmm0,(%rax)
fbec(5): jmp 0xfffffee1(%rip)
fbf1(5): call 0xffff2f0f(%rip)
fbf6(5): call 0x243a(%rip)

"clone_quoting_options" :
fc00(2): push %r12
fc02(1): push %rbp
fc03(1): push %rbx
fc04(3): mov %rdi,%rbx
fc07(5): call 0xffff2f09(%rip)
fc0c(3): mov (%rax),%r12d
fc0f(3): mov %rax,%rbp
fc12(7): lea 0x20ada7(%rip),%rax
fc19(3): test %rbx,%rbx
fc1c(5): mov $0x38,%esi
fc21(4): cmove %rax,%rbx
fc25(3): mov %rbx,%rdi
fc28(5): call 0x23b8(%rip)
fc2d(4): mov %r12d,0x0(%rbp)
fc31(1): pop %rbx
fc32(1): pop %rbp
fc33(2): pop %r12
fc35(1): ret near (%rsp)

"get_quoting_style" :
fc40(7): lea 0x20ad79(%rip),%rax
fc47(3): test %rdi,%rdi
fc4a(4): cmove %rax,%rdi
fc4e(2): mov (%rdi),%eax
fc50(1): ret near (%rsp)

"set_quoting_style" :
fc60(7): lea 0x20ad59(%rip),%rax
fc67(3): test %rdi,%rdi
fc6a(4): cmove %rax,%rdi
fc6e(2): mov %esi,(%rdi)
fc70(1): ret near (%rsp)

"set_char_quoting" :
fc80(7): lea 0x20ad39(%rip),%rax
fc87(3): test %rdi,%rdi
fc8a(2): mov %esi,%ecx
fc8c(4): cmove %rax,%rdi
fc90(2): mov %esi,%eax
fc92(3): and $0x1f,%ecx
fc95(3): shr $0x5,%al
fc98(3): movzx %al,%eax
fc9b(5): lea 0x8(%rdi,%rax,4),%rdi
fca0(2): mov (%rdi),%esi
fca2(2): mov %esi,%eax
fca4(2): shr %cl,%eax
fca6(2): xor %eax,%edx
fca8(3): and $0x1,%eax
fcab(3): and $0x1,%edx
fcae(2): shl/sal %cl,%edx
fcb0(2): xor %esi,%edx
fcb2(2): mov %edx,(%rdi)
fcb4(1): ret near (%rsp)

"set_quoting_flags" :
fcc0(7): lea 0x20acf9(%rip),%rax
fcc7(3): test %rdi,%rdi
fcca(4): cmove %rax,%rdi
fcce(3): mov 0x4(%rdi),%eax
fcd1(3): mov %esi,0x4(%rdi)
fcd4(1): ret near (%rsp)

"set_custom_quoting" :
fce0(7): lea 0x20acd9(%rip),%rax
fce7(3): test %rdi,%rdi
fcea(4): cmove %rax,%rdi
fcee(3): test %rsi,%rsi
fcf1(6): mov $0xa,(%rdi)
fcf7(2): jz 0x10(%rip)
fcf9(3): test %rdx,%rdx
fcfc(2): jz 0xb(%rip)
fcfe(4): mov %rsi,0x28(%rdi)
fd02(4): mov %rdx,0x30(%rdi)
fd06(1): ret near (%rsp)
fd07(4): sub $0x8,%rsp
fd0b(5): call 0xffff2df5(%rip)

"quotearg_buffer" :
fd10(2): push %r15
fd12(2): push %r14
fd14(7): lea 0x20aca5(%rip),%rax
fd1b(2): push %r13
fd1d(2): push %r12
fd1f(3): mov %rdi,%r13
fd22(1): push %rbp
fd23(1): push %rbx
fd24(3): mov %r8,%rbx
fd27(3): mov %rsi,%r14
fd2a(3): mov %rdx,%r15
fd2d(4): sub $0x18,%rsp
fd31(3): test %r8,%r8
fd34(4): cmove %rax,%rbx
fd38(5): mov %rcx,0x8(%rsp)
fd3d(5): call 0xffff2dd3(%rip)
fd42(3): mov (%rax),%r12d
fd45(3): mov %rax,%rbp
fd48(4): lea 0x8(%rbx),%rax
fd4c(4): sub $0x8,%rsp
fd50(4): mov 0x4(%rbx),%r9d
fd54(3): push 0x30(%rbx)
fd57(3): mov (%rbx),%r8d
fd5a(3): push 0x28(%rbx)
fd5d(3): mov %r15,%rdx
fd60(1): push %rax
fd61(5): mov 0x28(%rsp),%rcx
fd66(3): mov %r14,%rsi
fd69(3): mov %r13,%rdi
fd6c(5): call 0xffffeaa4(%rip)
fd71(4): mov %r12d,0x0(%rbp)
fd75(4): add $0x38,%rsp
fd79(1): pop %rbx
fd7a(1): pop %rbp
fd7b(2): pop %r12
fd7d(2): pop %r13
fd7f(2): pop %r14
fd81(2): pop %r15
fd83(1): ret near (%rsp)

"quotearg_alloc_mem" :
fd90(2): push %r15
fd92(2): push %r14
fd94(7): lea 0x20ac25(%rip),%rax
fd9b(2): push %r13
fd9d(2): push %r12
fd9f(3): mov %rdx,%r12
fda2(1): push %rbp
fda3(1): push %rbx
fda4(3): mov %rcx,%rbx
fda7(3): mov %rdi,%r14
fdaa(3): mov %rsi,%r15
fdad(4): sub $0x38,%rsp
fdb1(3): test %rcx,%rcx
fdb4(4): cmove %rax,%rbx
fdb8(2): xor %ebp,%ebp
fdba(5): call 0xffff2d56(%rip)
fdbf(3): test %r12,%r12
fdc2(3): mov %rax,%r13
fdc5(2): mov (%rax),%eax
fdc7(4): setz %bpl
fdcb(3): or 0x4(%rbx),%ebp
fdce(4): lea 0x8(%rbx),%r10
fdd2(4): sub $0x8,%rsp
fdd6(3): mov (%rbx),%r8d
fdd9(3): mov %r15,%rcx
fddc(4): mov %eax,0x14(%rsp)
fde0(3): push 0x30(%rbx)
fde3(3): mov %r14,%rdx
fde6(3): push 0x28(%rbx)
fde9(2): push %r10
fdeb(2): xor %esi,%esi
fded(3): mov %ebp,%r9d
fdf0(2): xor %edi,%edi
fdf2(5): mov %r10,0x40(%rsp)
fdf7(5): call 0xffffea19(%rip)
fdfc(4): lea 0x1(%rax),%rsi
fe00(5): mov %rax,0x48(%rsp)
fe05(4): add $0x20,%rsp
fe09(3): mov %rsi,%rdi
fe0c(5): mov %rsi,0x18(%rsp)
fe11(5): call 0x1fcf(%rip)
fe16(5): mov %rax,0x10(%rsp)
fe1b(4): sub $0x8,%rsp
fe1f(3): push 0x30(%rbx)
fe22(3): push 0x28(%rbx)
fe25(5): mov 0x38(%rsp),%r10
fe2a(3): mov %ebp,%r9d
fe2d(3): mov (%rbx),%r8d
fe30(3): mov %r15,%rcx
fe33(3): mov %r14,%rdx
fe36(3): mov %rax,%rdi
fe39(2): push %r10
fe3b(5): mov 0x38(%rsp),%rsi
fe40(5): call 0xffffe9d0(%rip)
fe45(4): mov 0x2c(%rsp),%eax
fe49(4): add $0x20,%rsp
fe4d(3): test %r12,%r12
fe50(4): mov %eax,0x0(%r13)
fe54(2): jz 0xb(%rip)
fe56(5): mov 0x28(%rsp),%r11
fe5b(4): mov %r11,(%r12)
fe5f(5): mov 0x10(%rsp),%rax
fe64(4): add $0x38,%rsp
fe68(1): pop %rbx
fe69(1): pop %rbp
fe6a(2): pop %r12
fe6c(2): pop %r13
fe6e(2): pop %r14
fe70(2): pop %r15
fe72(1): ret near (%rsp)

"quotearg_alloc" :
fe80(3): mov %rdx,%rcx
fe83(2): xor %edx,%edx
fe85(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
fe90(6): mov 0x20a2e2(%rip),%eax
fe96(2): push %r12
fe98(7): mov 0x20a2e1(%rip),%r12
fe9f(1): push %rbp
fea0(1): push %rbx
fea1(3): cmp $0x1,%eax
fea4(2): jle 0x2d(%rip)
fea6(3): sub $0x2,%eax
fea9(5): lea 0x18(%r12),%rbx
feae(4): shl/sal $0x4,%rax
feb2(5): lea 0x28(%r12,%rax,1),%rbp
feb7(9): nop 0x0(%rax,%rax,1)
fec0(3): mov (%rbx),%rdi
fec3(4): add $0x10,%rbx
fec7(5): call 0xffff32f9(%rip)
fecc(3): cmp %rbp,%rbx
fecf(2): jnz 0xfffffff1(%rip)
fed1(5): mov 0x8(%r12),%rdi
fed6(7): lea 0x20a9e3(%rip),%rbx
fedd(3): cmp %rbx,%rdi
fee0(2): jz 0x19(%rip)
fee2(5): call 0xffff32de(%rip)
fee7(b): mov $0x100,0x20a29e(%rip)
fef2(7): mov %rbx,0x20a29f(%rip)
fef9(7): lea 0x20a290(%rip),%rbx
ff00(3): cmp %rbx,%r12
ff03(2): jz 0x11(%rip)
ff05(3): mov %r12,%rdi
ff08(5): call 0xffff32b8(%rip)
ff0d(7): mov %rbx,0x20a26c(%rip)
ff14(1): pop %rbx
ff15(a): mov $0x1,0x20a259(%rip)
ff1f(1): pop %rbp
ff20(2): pop %r12
ff22(1): ret near (%rsp)

"quotearg_n" :
ff30(7): lea 0x20aa89(%rip),%rcx
ff37(7): mov $0xffffffff,%rdx
ff3e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
ff50(7): lea 0x20aa69(%rip),%rcx
ff57(5): jmp 0xfffffaf9(%rip)

"quotearg" :
ff60(7): lea 0x20aa59(%rip),%rcx
ff67(3): mov %rdi,%rsi
ff6a(7): mov $0xffffffff,%rdx
ff71(2): xor %edi,%edi
ff73(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
ff80(7): lea 0x20aa39(%rip),%rcx
ff87(3): mov %rsi,%rdx
ff8a(3): mov %rdi,%rsi
ff8d(2): xor %edi,%edi
ff8f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
ffa0(4): sub $0x48,%rsp
ffa4(3): mov %rdx,%rax
ffa7(9): mov $0x28,%rdx
ffb0(5): mov %rdx,0x38(%rsp)
ffb5(2): xor %edx,%edx
ffb7(3): cmp $0xa,%esi
ffba(2): jz 0x6a(%rip)
ffbc(3): mov %esi,(%rsp)
ffbf(3): mov %rsp,%rcx
ffc2(7): mov $0xffffffff,%rdx
ffc9(3): mov %rax,%rsi
ffcc(9): mov $0x0,0x4(%rsp)
ffd5(9): mov $0x0,0xc(%rsp)
ffde(9): mov $0x0,0x14(%rsp)
ffe7(9): mov $0x0,0x1c(%rsp)
fff0(9): mov $0x0,0x24(%rsp)
fff9(9): mov $0x0,0x2c(%rsp)
10002(8): mov $0x0,0x34(%rsp)
1000a(5): call 0xfffffa46(%rip)
1000f(5): mov 0x38(%rsp),%rcx
10014(9): xor $0x28,%rcx
1001d(2): jnz 0xc(%rip)
1001f(4): add $0x48,%rsp
10023(1): ret near (%rsp)
10024(5): call 0xffff2adc(%rip)
10029(5): call 0xffff2c77(%rip)

"quotearg_n_style_mem" :
10030(4): sub $0x48,%rsp
10034(3): mov %rdx,%rax
10037(3): mov %rcx,%rdx
1003a(9): mov $0x28,%rcx
10043(5): mov %rcx,0x38(%rsp)
10048(2): xor %ecx,%ecx
1004a(3): cmp $0xa,%esi
1004d(2): jz 0x63(%rip)
1004f(3): mov %esi,(%rsp)
10052(3): mov %rsp,%rcx
10055(3): mov %rax,%rsi
10058(9): mov $0x0,0x4(%rsp)
10061(9): mov $0x0,0xc(%rsp)
1006a(9): mov $0x0,0x14(%rsp)
10073(9): mov $0x0,0x1c(%rsp)
1007c(9): mov $0x0,0x24(%rsp)
10085(9): mov $0x0,0x2c(%rsp)
1008e(8): mov $0x0,0x34(%rsp)
10096(5): call 0xfffff9ba(%rip)
1009b(5): mov 0x38(%rsp),%rdx
100a0(9): xor $0x28,%rdx
100a9(2): jnz 0xc(%rip)
100ab(4): add $0x48,%rsp
100af(1): ret near (%rsp)
100b0(5): call 0xffff2a50(%rip)
100b5(5): call 0xffff2beb(%rip)

"quotearg_style" :
100c0(3): mov %rsi,%rdx
100c3(2): mov %edi,%esi
100c5(2): xor %edi,%edi
100c7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
100d0(3): mov %rdx,%rcx
100d3(3): mov %rsi,%rdx
100d6(2): mov %edi,%esi
100d8(2): xor %edi,%edi
100da(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
100e0(4): sub $0x48,%rsp
100e4(2): mov %edx,%ecx
100e6(9): mov $0x28,%rax
100ef(5): mov %rax,0x38(%rsp)
100f4(2): xor %eax,%eax
100f6(7): mov 0x20a8f3(%rip),%rax
100fd(3): mov %rsp,%r8
10100(3): and $0x1f,%ecx
10103(8): movdqa 0x20a8b5(%rip),%xmm0
1010b(5): mov %rax,0x30(%rsp)
10110(2): mov %edx,%eax
10112(4): movaps %xmm0,(%rsp)
10116(3): shr $0x5,%al
10119(3): movzx %al,%eax
1011c(5): lea 0x8(%r8,%rax,4),%r9
10121(8): movdqa 0x20a8a7(%rip),%xmm0
10129(5): movaps %xmm0,0x10(%rsp)
1012e(8): movdqa 0x20a8aa(%rip),%xmm0
10136(5): movaps %xmm0,0x20(%rsp)
1013b(3): mov (%r9),%edx
1013e(2): mov %edx,%eax
10140(2): shr %cl,%eax
10142(2): not %eax
10144(3): and $0x1,%eax
10147(2): shl/sal %cl,%eax
10149(3): mov %r8,%rcx
1014c(2): xor %edx,%eax
1014e(3): mov %rsi,%rdx
10151(3): mov %rdi,%rsi
10154(3): mov %eax,(%r9)
10157(2): xor %edi,%edi
10159(5): call 0xfffff8f7(%rip)
1015e(5): mov 0x38(%rsp),%rsi
10163(9): xor $0x28,%rsi
1016c(2): jnz 0x7(%rip)
1016e(4): add $0x48,%rsp
10172(1): ret near (%rsp)
10173(5): call 0xffff2b2d(%rip)

"quotearg_char" :
10180(4): movsx %sil,%edx
10184(7): mov $0xffffffff,%rsi
1018b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
10190(5): mov $0x3a,%edx
10195(7): mov $0xffffffff,%rsi
1019c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
101b0(5): mov $0x3a,%edx
101b5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
101c0(4): sub $0x48,%rsp
101c4(3): mov %rdx,%rax
101c7(9): mov $0x28,%rdx
101d0(5): mov %rdx,0x38(%rsp)
101d5(2): xor %edx,%edx
101d7(3): cmp $0xa,%esi
101da(2): jz 0x6a(%rip)
101dc(3): mov %esi,(%rsp)
101df(3): mov %rsp,%rcx
101e2(7): mov $0xffffffff,%rdx
101e9(3): mov %rax,%rsi
101ec(9): mov $0x0,0x4(%rsp)
101f5(9): mov $0x4000000,0xc(%rsp)
101fe(9): mov $0x0,0x14(%rsp)
10207(9): mov $0x0,0x1c(%rsp)
10210(9): mov $0x0,0x24(%rsp)
10219(9): mov $0x0,0x2c(%rsp)
10222(8): mov $0x0,0x34(%rsp)
1022a(5): call 0xfffff826(%rip)
1022f(5): mov 0x38(%rsp),%rcx
10234(9): xor $0x28,%rcx
1023d(2): jnz 0xc(%rip)
1023f(4): add $0x48,%rsp
10243(1): ret near (%rsp)
10244(5): call 0xffff28bc(%rip)
10249(5): call 0xffff2a57(%rip)

"quotearg_n_custom_mem" :
10250(4): sub $0x48,%rsp
10254(3): mov %rcx,%r9
10257(7): mov 0x20a792(%rip),%rcx
1025e(8): movdqa 0x20a75a(%rip),%xmm0
10266(9): mov $0x28,%rax
1026f(5): mov %rax,0x38(%rsp)
10274(2): xor %eax,%eax
10276(4): movaps %xmm0,(%rsp)
1027a(3): test %rsi,%rsi
1027d(5): mov %rcx,0x30(%rsp)
10282(7): mov $0xa,(%rsp)
10289(8): movdqa 0x20a73f(%rip),%xmm0
10291(5): movaps %xmm0,0x10(%rsp)
10296(8): movdqa 0x20a742(%rip),%xmm0
1029e(5): movaps %xmm0,0x20(%rsp)
102a3(2): jz 0x34(%rip)
102a5(3): test %rdx,%rdx
102a8(2): jz 0x2f(%rip)
102aa(5): mov %rsi,0x28(%rsp)
102af(5): mov %rdx,0x30(%rsp)
102b4(3): mov %rsp,%rcx
102b7(3): mov %r8,%rdx
102ba(3): mov %r9,%rsi
102bd(5): call 0xfffff793(%rip)
102c2(5): mov 0x38(%rsp),%rdi
102c7(9): xor $0x28,%rdi
102d0(2): jnz 0xc(%rip)
102d2(4): add $0x48,%rsp
102d6(1): ret near (%rsp)
102d7(5): call 0xffff2829(%rip)
102dc(5): call 0xffff29c4(%rip)

"quotearg_n_custom" :
102f0(7): mov $0xffffffff,%r8
102f7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
10300(3): mov %rdx,%rcx
10303(7): mov $0xffffffff,%r8
1030a(3): mov %rsi,%rdx
1030d(3): mov %rdi,%rsi
10310(2): xor %edi,%edi
10312(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
10320(3): mov %rcx,%r8
10323(3): mov %rdx,%rcx
10326(3): mov %rsi,%rdx
10329(3): mov %rdi,%rsi
1032c(2): xor %edi,%edi
1032e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
10340(7): lea 0x209df9(%rip),%rcx
10347(5): jmp 0xfffff709(%rip)

"quote_mem" :
10350(7): lea 0x209de9(%rip),%rcx
10357(3): mov %rsi,%rdx
1035a(3): mov %rdi,%rsi
1035d(2): xor %edi,%edi
1035f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
10370(7): lea 0x209dc9(%rip),%rcx
10377(7): mov $0xffffffff,%rdx
1037e(5): jmp 0xfffff6d2(%rip)

"quote" :
10390(7): lea 0x209da9(%rip),%rcx
10397(3): mov %rdi,%rsi
1039a(7): mov $0xffffffff,%rdx
103a1(2): xor %edi,%edi
103a3(5): jmp 0xfffff6ad(%rip)

"randread_error" :
103b0(1): push %rbp
103b1(1): push %rbx
103b2(4): sub $0x8,%rsp
103b6(3): test %rdi,%rdi
103b9(2): jz 0x3f(%rip)
103bb(5): call 0xffffffd5(%rip)
103c0(3): mov %rax,%rbp
103c3(5): call 0xffff274d(%rip)
103c8(3): cmp $0x0,(%rax)
103cb(3): mov %rax,%rbx
103ce(5): mov $0x5,%edx
103d3(2): jz 0x2a(%rip)
103d5(7): lea 0x5cfc(%rip),%rsi
103dc(2): xor %edi,%edi
103de(5): call 0xffff2892(%rip)
103e3(6): mov 0x209d47(%rip),%edi
103e9(2): mov (%rbx),%esi
103eb(3): mov %rax,%rdx
103ee(3): mov %rbp,%rcx
103f1(2): xor %eax,%eax
103f3(5): call 0xffff2bed(%rip)
103f8(5): call 0xffff2708(%rip)
103fd(7): lea 0x5cc4(%rip),%rsi
10404(2): xor %edi,%edi
10406(5): call 0xffff286a(%rip)
1040b(2): jmp 0xffffffd8(%rip)

"randread_new" :
10410(2): push %r15
10412(2): push %r14
10414(2): push %r13
10416(2): push %r12
10418(1): push %rbp
10419(1): push %rbx
1041a(4): sub $0x38,%rsp
1041e(9): mov $0x28,%rax
10427(5): mov %rax,0x28(%rsp)
1042c(2): xor %eax,%eax
1042e(3): test %rsi,%rsi
10431(6): jz 0x127(%rip)
10437(3): test %rdi,%rdi
1043a(3): mov %rdi,%r12
1043d(3): mov %rsi,%rbp
10440(2): jz 0x80(%rip)
10442(7): lea 0x5cab(%rip),%rsi
10449(5): call 0x30b7(%rip)
1044e(3): test %rax,%rax
10451(3): mov %rax,%r13
10454(6): jz 0x204(%rip)
1045a(5): mov $0x1038,%edi
1045f(5): call 0x1981(%rip)
10464(3): mov %rax,%rbx
10467(3): mov %r13,(%rax)
1046a(7): lea 0xffffff3f(%rip),%rax
10471(7): cmp $0x1000,%rbp
10478(5): mov $0x1000,%ecx
1047d(4): lea 0x18(%rbx),%rsi
10481(4): cmovbe %rbp,%rcx
10485(4): mov %rax,0x8(%rbx)
10489(4): mov %r12,0x10(%rbx)
1048d(2): xor %edx,%edx
1048f(3): mov %r13,%rdi
10492(5): call 0xffff2b1e(%rip)
10497(5): mov 0x28(%rsp),%rdx
1049c(9): xor $0x28,%rdx
104a5(3): mov %rbx,%rax
104a8(6): jnz 0x1b7(%rip)
104ae(4): add $0x38,%rsp
104b2(1): pop %rbx
104b3(1): pop %rbp
104b4(2): pop %r12
104b6(2): pop %r13
104b8(2): pop %r14
104ba(2): pop %r15
104bc(1): ret near (%rsp)
104bd(3): nop (%rax)
104c0(5): mov $0x1038,%edi
104c5(5): call 0x191b(%rip)
104ca(3): mov %rax,%rbx
104cd(7): mov $0x0,(%rax)
104d4(7): lea 0xfffffed5(%rip),%rax
104db(7): lea 0x5c05(%rip),%rdi
104e2(2): xor %esi,%esi
104e4(8): mov $0x0,0x10(%rbx)
104ec(4): mov %rax,0x8(%rbx)
104f0(8): mov $0x0,0x18(%rbx)
104f8(2): xor %eax,%eax
104fa(5): call 0xffff2b16(%rip)
104ff(2): test %eax,%eax
10501(4): lea 0x20(%rbx),%r13
10505(3): mov %eax,%r15d
10508(2): js 0x80(%rip)
1050a(7): cmp $0x800,%rbp
10511(3): mov %rbp,%rdx
10514(6): mov $0x800,%r14d
1051a(4): cmovnbe %r14,%rdx
1051e(5): mov $0x1018,%ecx
10523(3): mov %r13,%rsi
10526(2): mov %eax,%edi
10528(5): call 0xffff2648(%rip)
1052d(3): mov %r15d,%edi
10530(3): mov %rax,%rbp
10533(5): call 0xffff287d(%rip)
10538(7): cmp $0x7ff,%rbp
1053f(6): jle 0x125(%rip)
10545(3): mov %r13,%rdi
10548(5): call 0x698(%rip)
1054d(5): jmp 0xffffff4a(%rip)
10552(6): nop 0x0(%rax,%rax,1)
10558(5): mov $0x1038,%edi
1055d(5): call 0x1883(%rip)
10562(3): mov %rax,%rbx
10565(7): mov $0x0,(%rax)
1056c(7): lea 0xfffffe3d(%rip),%rax
10573(8): mov $0x0,0x10(%rbx)
1057b(4): mov %rax,0x8(%rbx)
1057f(5): jmp 0xffffff18(%rip)
10584(4): nop 0x0(%rax)
10588(5): lea 0x10(%rsp),%r12
1058d(2): xor %esi,%esi
1058f(6): mov $0x18,%r14d
10595(3): mov %r12,%rdi
10598(5): call 0xffff27c8(%rip)
1059d(6): movdqa 0x10(%rsp),%xmm0
105a3(4): movups %xmm0,0x20(%rbx)
105a7(5): call 0xffff2659(%rip)
105ac(3): mov %eax,0x30(%rbx)
105af(4): mov %eax,0x10(%rsp)
105b3(5): call 0xffff2b0d(%rip)
105b8(4): mov %eax,0x10(%rsp)
105bc(3): mov %eax,0x34(%rbx)
105bf(5): mov $0x800,%ebp
105c4(5): mov $0x4,%eax
105c9(3): sub %r14,%rbp
105cc(4): cmp $0x4,%rbp
105d0(4): cmovnbe %rax,%rbp
105d4(5): call 0xffff26dc(%rip)
105d9(2): test %ebp,%ebp
105db(4): mov %eax,0x10(%rsp)
105df(5): lea 0x0(%r13,%r14,1),%rcx
105e4(2): mov %ebp,%esi
105e6(2): jz 0x16(%rip)
105e8(2): xor %eax,%eax
105ea(2): mov %eax,%edx
105ec(3): add $0x1,%eax
105ef(5): movzx 0x0(%r12,%rdx,1),%edi
105f4(2): cmp %esi,%eax
105f6(4): mov %dil,0x0(%rcx,%rdx,1)
105fa(2): jb 0xfffffff0(%rip)
105fc(3): add %r14,%rbp
105ff(7): cmp $0x7ff,%rbp
10606(6): jnbe 0xffffff3f(%rip)
1060c(5): call 0xffff28a4(%rip)
10611(4): mov %eax,0x10(%rsp)
10615(5): mov $0x800,%eax
1061a(5): mov $0x4,%edx
1061f(3): sub %rbp,%rax
10622(5): lea 0x0(%r13,%rbp,1),%rcx
10627(4): cmp $0x4,%rax
1062b(4): cmovnbe %rdx,%rax
1062f(2): test %eax,%eax
10631(2): mov %eax,%esi
10633(6): jz 0xffffff12(%rip)
10639(2): xor %eax,%eax
1063b(2): mov %eax,%edx
1063d(3): add $0x1,%eax
10640(5): movzx 0x0(%r12,%rdx,1),%edi
10645(2): cmp %esi,%eax
10647(4): mov %dil,0x0(%rcx,%rdx,1)
1064b(2): jb 0xfffffff0(%rip)
1064d(5): jmp 0xfffffef8(%rip)
10652(6): nop 0x0(%rax,%rax,1)
10658(2): xor %ebx,%ebx
1065a(5): jmp 0xfffffe3d(%rip)
1065f(5): call 0xffff2641(%rip)
10664(3): test %rbp,%rbp
10667(3): mov %r14,%r15
1066a(5): mov $0x10,%eax
1066f(4): cmovs %r12,%rbp
10673(5): lea 0x10(%rsp),%r12
10678(3): sub %rbp,%r15
1067b(4): cmp $0x10,%r15
1067f(3): mov %r12,%rdi
10682(4): cmovnbe %rax,%r15
10686(2): xor %esi,%esi
10688(5): call 0xffff26d8(%rip)
1068d(5): lea 0x0(%r13,%rbp,1),%rax
10692(3): add %r15,%rbp
10695(3): mov %r15d,%ecx
10698(7): cmp $0x7ff,%rbp
1069f(3): mov %r12,%rsi
106a2(3): mov %rax,%rdi
106a5(2): REP movsb rsi(%ds,10),rdi(%es,10)
106a7(6): jnbe 0xfffffe9e(%rip)
106ad(3): mov %r14,%r15
106b0(6): mov $0x4,%r8d
106b6(3): sub %rbp,%r15
106b9(5): mov %r8,0x8(%rsp)
106be(4): cmp $0x4,%r15
106c2(4): cmovnbe %r8,%r15
106c6(5): lea 0x0(%rbp,%r15,1),%rdx
106cb(3): add %r13,%rbp
106ce(4): mov %rdx,(%rsp)
106d2(5): call 0xffff252e(%rip)
106d7(4): mov (%rsp),%rdx
106db(4): mov %eax,0x10(%rsp)
106df(3): mov %r15d,%ecx
106e2(3): mov %rbp,%rdi
106e5(3): mov %r12,%rsi
106e8(5): mov 0x8(%rsp),%r8
106ed(2): REP movsb rsi(%ds,10),rdi(%es,10)
106ef(7): cmp $0x7ff,%rdx
106f6(6): jnle 0xfffffe4f(%rip)
106fc(3): sub %rdx,%r14
106ff(4): cmp $0x4,%r14
10703(4): cmovnbe %r8,%r14
10707(5): call 0xffff29b9(%rip)
1070c(4): mov (%rsp),%rdx
10710(4): mov %eax,0x10(%rsp)
10714(3): mov %r14d,%ecx
10717(3): mov %r12,%rsi
1071a(5): lea 0x0(%r13,%rdx,1),%rax
1071f(3): add %rdx,%r14
10722(7): cmp $0x7ff,%r14
10729(3): mov %rax,%rdi
1072c(2): REP movsb rsi(%ds,10),rdi(%es,10)
1072e(6): jnbe 0xfffffe17(%rip)
10734(5): jmp 0xfffffe8b(%rip)

"randread_set_handler" :
10740(4): mov %rsi,0x8(%rdi)
10744(1): ret near (%rsp)

"randread_set_handler_arg" :
10750(4): mov %rsi,0x10(%rdi)
10754(1): ret near (%rsp)

"randread" :
10760(2): push %r15
10762(2): push %r14
10764(2): push %r13
10766(2): push %r12
10768(3): mov %rdi,%r12
1076b(1): push %rbp
1076c(1): push %rbx
1076d(3): mov %rdx,%rbp
10770(3): mov %rsi,%rbx
10773(4): sub $0x18,%rsp
10777(3): mov (%rdi),%rcx
1077a(3): test %rcx,%rcx
1077d(5): mov %rcx,0x8(%rsp)
10782(2): jz 0x66(%rip)
10784(5): call 0xffff238c(%rip)
10789(5): mov 0x8(%rsp),%rcx
1078e(3): mov %rax,%r13
10791(2): jmp 0x25(%rip)
10793(5): nop 0x0(%rax,%rax,1)
10798(4): mov (%r12),%rax
1079c(5): mov 0x10(%r12),%rdi
107a1(2): mov (%rax),%eax
107a3(3): and $0x20,%eax
107a6(3): cmovne %edx,%eax
107a9(4): mov %eax,0x0(%r13)
107ad(5): call 0x8(%r12)
107b2(4): mov (%r12),%rcx
107b6(3): mov %rbp,%rdx
107b9(3): mov %rbx,%rdi
107bc(5): mov $0x1,%esi
107c1(5): call 0xffff244f(%rip)
107c6(3): add %rax,%rbx
107c9(3): sub %rax,%rbp
107cc(4): mov 0x0(%r13),%edx
107d0(2): jnz 0xffffffc8(%rip)
107d2(4): add $0x18,%rsp
107d6(1): pop %rbx
107d7(1): pop %rbp
107d8(2): pop %r12
107da(2): pop %r13
107dc(2): pop %r14
107de(2): pop %r15
107e0(1): ret near (%rsp)
107e1(7): nop 0x0(%rax)
107e8(4): mov 0x18(%rdi),%r14
107ec(7): lea 0x838(%rdi),%rax
107f3(4): lea 0x20(%rdi),%r13
107f7(5): mov %rax,0x8(%rsp)
107fc(3): cmp %r14,%rdx
107ff(6): jbe 0xe3(%rip)
10805(5): mov $0x800,%esi
1080a(3): mov %rbx,%rdi
1080d(3): mov %r14,%rdx
10810(3): sub %r14,%rsi
10813(5): add 0x8(%rsp),%rsi
10818(3): add %r14,%rbx
1081b(3): sub %r14,%rbp
1081e(5): call 0xffff2662(%rip)
10823(3): test $0x7,%bl
10826(2): jnz 0x6a(%rip)
10828(7): cmp $0x7ff,%rbp
1082f(6): jbe 0xa4(%rip)
10835(7): lea 0xfffff800(%rbp),%r15
1083c(3): mov %r15,%r14
1083f(7): and $0x7ff,%r14d
10846(2): jmp 0x16(%rip)
10848(8): nop 0x0(%rax,%rax,1)
10850(3): cmp %r14,%r15
10853(2): jz 0x3d(%rip)
10855(7): sub $0x800,%r15
1085c(3): mov %rbx,%rsi
1085f(3): mov %r13,%rdi
10862(7): add $0x800,%rbx
10869(5): call 0xe7(%rip)
1086e(3): test %r15,%r15
10871(3): mov %r15,%rbp
10874(2): jnz 0xffffffdc(%rip)
10876(9): mov $0x0,0x18(%r12)
1087f(4): add $0x18,%rsp
10883(1): pop %rbx
10884(1): pop %rbp
10885(2): pop %r12
10887(2): pop %r13
10889(2): pop %r14
1088b(2): pop %r15
1088d(1): ret near (%rsp)
1088e(2): nop 
10890(5): mov 0x8(%rsp),%rsi
10895(3): mov %r13,%rdi
10898(6): mov $0x800,%r14d
1089e(5): call 0xb2(%rip)
108a3(7): cmp $0x800,%rbp
108aa(6): jnbe 0xffffff5b(%rip)
108b0(6): mov $0x800,%r14d
108b6(5): mov 0x8(%rsp),%rsi
108bb(3): mov %rbp,%rdx
108be(3): mov %rbx,%rdi
108c1(3): sub %rbp,%r14
108c4(5): call 0xffff25bc(%rip)
108c9(5): mov %r14,0x18(%r12)
108ce(5): jmp 0xffffff04(%rip)
108d3(5): mov 0x8(%rsp),%rsi
108d8(3): mov %r13,%rdi
108db(5): call 0x75(%rip)
108e0(2): jmp 0xffffffd0(%rip)
108e2(3): mov %rax,%r15
108e5(3): sub %r14,%r15
108e8(7): lea 0x800(%r15),%rax
108ef(5): mov %rax,0x8(%rsp)
108f4(2): jmp 0xffffffc2(%rip)

"randread_free" :
10900(1): push %rbp
10901(1): push %rbx
10902(7): mov $0xffffffff,%rdx
10909(3): mov %rdi,%rbx
1090c(5): mov $0x1038,%esi
10911(4): sub $0x8,%rsp
10915(3): mov (%rdi),%rbp
10918(5): call 0xffff26e8(%rip)
1091d(3): mov %rbx,%rdi
10920(5): call 0xffff28a0(%rip)
10925(3): test %rbp,%rbp
10928(2): jz 0x18(%rip)
1092a(4): add $0x8,%rsp
1092e(3): mov %rbp,%rdi
10931(1): pop %rbx
10932(1): pop %rbp
10933(5): jmp 0x220d(%rip)
10938(8): nop 0x0(%rax,%rax,1)
10940(4): add $0x8,%rsp
10944(2): xor %eax,%eax
10946(1): pop %rbx
10947(1): pop %rbp
10948(1): ret near (%rsp)

"isaac_refill" :
10950(7): mov 0x810(%rdi),%rax
10957(7): mov 0x800(%rdi),%rdx
1095e(7): lea 0x400(%rdi),%r9
10965(4): lea 0x1(%rax),%rcx
10969(3): mov %rdi,%rax
1096c(7): mov %rcx,0x810(%rdi)
10973(7): add 0x808(%rdi),%rcx
1097a(6): nop 0x0(%rax,%rax,1)
10980(3): mov %rdx,%r8
10983(4): shl/sal $0x15,%r8
10987(3): xor %r8,%rdx
1098a(3): mov (%rax),%r8
1098d(3): not %rdx
10990(7): add 0x400(%rax),%rdx
10997(3): mov %r8,%r10
1099a(7): and $0x7f8,%r10d
109a1(4): mov 0x0(%rdi,%r10,1),%r11
109a5(3): mov %rdx,%r10
109a8(4): shr $0x5,%r10
109ac(3): add %rdx,%r11
109af(3): xor %r10,%rdx
109b2(3): add %r11,%rcx
109b5(3): mov %rcx,(%rax)
109b8(4): shr $0x8,%rcx
109bc(6): and $0x7f8,%ecx
109c2(4): mov 0x0(%rdi,%rcx,1),%r11
109c6(3): add %r8,%r11
109c9(3): mov %r11,(%rsi)
109cc(7): add 0x408(%rax),%rdx
109d3(4): mov 0x8(%rax),%rcx
109d7(3): mov %rdx,%r10
109da(3): mov %rcx,%rdx
109dd(6): and $0x7f8,%edx
109e3(4): mov 0x0(%rdi,%rdx,1),%r8
109e7(3): mov %r10,%rdx
109ea(4): shl/sal $0xc,%rdx
109ee(3): xor %r10,%rdx
109f1(3): add %r10,%r8
109f4(3): add %r11,%r8
109f7(4): mov %r8,0x8(%rax)
109fb(4): shr $0x8,%r8
109ff(7): and $0x7f8,%r8d
10a06(4): add 0x0(%rdi,%r8,1),%rcx
10a0a(4): mov %rcx,0x8(%rsi)
10a0e(4): mov 0x10(%rax),%r8
10a12(3): mov %rcx,%r11
10a15(7): add 0x410(%rax),%rdx
10a1c(3): mov %r8,%rcx
10a1f(6): and $0x7f8,%ecx
10a25(4): mov 0x0(%rdi,%rcx,1),%r10
10a29(3): add %rdx,%r10
10a2c(3): mov %r10,%rcx
10a2f(3): add %r11,%rcx
10a32(4): mov %rcx,0x10(%rax)
10a36(4): shr $0x8,%rcx
10a3a(6): and $0x7f8,%ecx
10a40(4): mov 0x0(%rdi,%rcx,1),%r10
10a44(3): mov %rdx,%rcx
10a47(4): shr $0x21,%rcx
10a4b(3): xor %rcx,%rdx
10a4e(3): add %r8,%r10
10a51(4): mov %r10,0x10(%rsi)
10a55(4): mov 0x18(%rax),%rcx
10a59(7): add 0x418(%rax),%rdx
10a60(3): mov %rcx,%r8
10a63(7): and $0x7f8,%r8d
10a6a(4): mov 0x0(%rdi,%r8,1),%r11
10a6e(3): add %rdx,%r11
10a71(3): mov %r11,%r8
10a74(3): add %r10,%r8
10a77(4): add $0x20,%rax
10a7b(4): add $0x20,%rsi
10a7f(4): mov %r8,0xfffffff8(%rax)
10a83(4): shr $0x8,%r8
10a87(7): and $0x7f8,%r8d
10a8e(4): add 0x0(%rdi,%r8,1),%rcx
10a92(4): mov %rcx,0xfffffff8(%rsi)
10a96(3): cmp %r9,%rax
10a99(6): jb 0xfffffee7(%rip)
10a9f(7): lea 0x800(%rdi),%r9
10aa6(a): nop 0x0(%rax,%rax,1)
10ab0(3): mov %rdx,%r8
10ab3(4): shl/sal $0x15,%r8
10ab7(3): xor %r8,%rdx
10aba(3): mov (%rax),%r8
10abd(3): not %rdx
10ac0(7): add 0xfffffc00(%rax),%rdx
10ac7(3): mov %r8,%r10
10aca(7): and $0x7f8,%r10d
10ad1(4): mov 0x0(%rdi,%r10,1),%r11
10ad5(3): mov %rdx,%r10
10ad8(4): shr $0x5,%r10
10adc(3): add %rdx,%r11
10adf(3): xor %r10,%rdx
10ae2(3): add %r11,%rcx
10ae5(3): mov %rcx,(%rax)
10ae8(4): shr $0x8,%rcx
10aec(6): and $0x7f8,%ecx
10af2(4): mov 0x0(%rdi,%rcx,1),%r11
10af6(3): add %r8,%r11
10af9(3): mov %r11,(%rsi)
10afc(7): add 0xfffffc08(%rax),%rdx
10b03(4): mov 0x8(%rax),%rcx
10b07(3): mov %rdx,%r10
10b0a(3): mov %rcx,%rdx
10b0d(6): and $0x7f8,%edx
10b13(4): mov 0x0(%rdi,%rdx,1),%r8
10b17(3): mov %r10,%rdx
10b1a(4): shl/sal $0xc,%rdx
10b1e(3): xor %r10,%rdx
10b21(3): add %r10,%r8
10b24(3): add %r11,%r8
10b27(4): mov %r8,0x8(%rax)
10b2b(4): shr $0x8,%r8
10b2f(7): and $0x7f8,%r8d
10b36(4): add 0x0(%rdi,%r8,1),%rcx
10b3a(4): mov %rcx,0x8(%rsi)
10b3e(4): mov 0x10(%rax),%r8
10b42(3): mov %rcx,%r11
10b45(7): add 0xfffffc10(%rax),%rdx
10b4c(3): mov %r8,%rcx
10b4f(6): and $0x7f8,%ecx
10b55(4): mov 0x0(%rdi,%rcx,1),%r10
10b59(3): add %rdx,%r10
10b5c(3): mov %r10,%rcx
10b5f(3): add %r11,%rcx
10b62(4): mov %rcx,0x10(%rax)
10b66(4): shr $0x8,%rcx
10b6a(6): and $0x7f8,%ecx
10b70(4): mov 0x0(%rdi,%rcx,1),%r10
10b74(3): mov %rdx,%rcx
10b77(4): shr $0x21,%rcx
10b7b(3): xor %rcx,%rdx
10b7e(3): add %r8,%r10
10b81(4): mov %r10,0x10(%rsi)
10b85(4): mov 0x18(%rax),%rcx
10b89(7): add 0xfffffc18(%rax),%rdx
10b90(3): mov %rcx,%r8
10b93(7): and $0x7f8,%r8d
10b9a(4): mov 0x0(%rdi,%r8,1),%r11
10b9e(3): add %rdx,%r11
10ba1(3): mov %r11,%r8
10ba4(3): add %r10,%r8
10ba7(4): add $0x20,%rax
10bab(4): add $0x20,%rsi
10baf(4): mov %r8,0xfffffff8(%rax)
10bb3(4): shr $0x8,%r8
10bb7(7): and $0x7f8,%r8d
10bbe(4): add 0x0(%rdi,%r8,1),%rcx
10bc2(4): mov %rcx,0xfffffff8(%rsi)
10bc6(3): cmp %r9,%rax
10bc9(6): jb 0xfffffee7(%rip)
10bcf(7): mov %rdx,0x800(%rdi)
10bd6(7): mov %rcx,0x808(%rdi)
10bdd(1): ret near (%rsp)

"isaac_seed" :
10be0(2): push %r13
10be2(2): push %r12
10be4(7): lea 0x800(%rdi),%r12
10beb(1): push %rbp
10bec(3): mov %rdi,%rdx
10bef(1): push %rbx
10bf0(3): mov %rdi,%rax
10bf3(a): mov $0x-7424904924229222229,%rcx
10bfd(a): mov $0x-5865837416287532563,%r10
10c07(a): mov $0x5259722845879046933,%rbp
10c11(a): mov $0x-9011610652101975858,%rsi
10c1b(a): mov $0x-5576812576440232668,%r8
10c25(a): mov $0x-8354558816804203872,%rbx
10c2f(a): mov $0x-5046086420515862430,%r11
10c39(a): mov $0x7240739780546808700,%r9
10c43(5): nop 0x0(%rax,%rax,1)
10c48(4): add 0x20(%rax),%rsi
10c4c(4): add 0x38(%rax),%rcx
10c50(3): mov (%rax),%r13
10c53(4): add 0x28(%rax),%rbp
10c57(4): add 0x30(%rax),%r10
10c5b(3): sub %rsi,%r13
10c5e(3): add %r13,%r9
10c61(3): mov %rcx,%r13
10c64(4): shr $0x9,%r13
10c68(3): add %r9,%rcx
10c6b(3): xor %r13,%rbp
10c6e(4): mov 0x8(%rax),%r13
10c72(3): sub %rbp,%r13
10c75(3): add %r13,%r11
10c78(3): mov %r9,%r13
10c7b(4): shl/sal $0x9,%r13
10c7f(3): add %r11,%r9
10c82(3): xor %r13,%r10
10c85(4): mov 0x10(%rax),%r13
10c89(3): sub %r10,%r13
10c8c(3): add %r13,%rbx
10c8f(3): mov %r11,%r13
10c92(4): shr $0x17,%r13
10c96(3): add %rbx,%r11
10c99(3): xor %r13,%rcx
10c9c(4): mov 0x18(%rax),%r13
10ca0(3): sub %rcx,%r13
10ca3(3): add %r13,%r8
10ca6(3): mov %rbx,%r13
10ca9(4): shl/sal $0xf,%r13
10cad(3): add %r8,%rbx
10cb0(3): xor %r13,%r9
10cb3(3): mov %r8,%r13
10cb6(3): sub %r9,%rsi
10cb9(4): shr $0xe,%r13
10cbd(3): mov %r9,(%rax)
10cc0(3): xor %r13,%r11
10cc3(3): mov %rsi,%r13
10cc6(3): add %rsi,%r8
10cc9(3): sub %r11,%rbp
10ccc(4): shl/sal $0x14,%r13
10cd0(4): mov %r11,0x8(%rax)
10cd4(3): xor %r13,%rbx
10cd7(4): lea 0x0(%rsi,%rbp,1),%r13
10cdb(3): mov %rbp,%rsi
10cde(3): sub %rbx,%r10
10ce1(4): shr $0x11,%rsi
10ce5(4): mov %rbx,0x10(%rax)
10ce9(3): xor %rsi,%r8
10cec(3): mov %r10,%rsi
10cef(3): add %r10,%rbp
10cf2(3): sub %r8,%rcx
10cf5(4): shl/sal $0xe,%rsi
10cf9(4): mov %r8,0x18(%rax)
10cfd(3): xor %r13,%rsi
10d00(3): add %rcx,%r10
10d03(4): mov %rbp,0x28(%rax)
10d07(4): mov %rsi,0x20(%rax)
10d0b(4): mov %r10,0x30(%rax)
10d0f(4): add $0x40,%rax
10d13(4): mov %rcx,0xfffffff8(%rax)
10d17(3): cmp %rax,%r12
10d1a(6): jnz 0xffffff2e(%rip)
10d20(4): add 0x20(%rdx),%rsi
10d24(4): add 0x38(%rdx),%rcx
10d28(3): mov (%rdx),%r12
10d2b(4): add 0x28(%rdx),%rbp
10d2f(4): add 0x30(%rdx),%r10
10d33(3): sub %rsi,%r12
10d36(3): add %r12,%r9
10d39(3): mov %rcx,%r12
10d3c(4): shr $0x9,%r12
10d40(3): add %r9,%rcx
10d43(3): xor %r12,%rbp
10d46(4): mov 0x8(%rdx),%r12
10d4a(3): sub %rbp,%r12
10d4d(3): add %r12,%r11
10d50(3): mov %r9,%r12
10d53(4): shl/sal $0x9,%r12
10d57(3): add %r11,%r9
10d5a(3): xor %r12,%r10
10d5d(4): mov 0x10(%rdx),%r12
10d61(3): sub %r10,%r12
10d64(3): add %r12,%rbx
10d67(3): mov %r11,%r12
10d6a(4): shr $0x17,%r12
10d6e(3): add %rbx,%r11
10d71(3): xor %r12,%rcx
10d74(4): mov 0x18(%rdx),%r12
10d78(3): sub %rcx,%r12
10d7b(3): add %r12,%r8
10d7e(3): mov %rbx,%r12
10d81(4): shl/sal $0xf,%r12
10d85(3): add %r8,%rbx
10d88(3): xor %r12,%r9
10d8b(3): mov %r8,%r12
10d8e(3): sub %r9,%rsi
10d91(4): shr $0xe,%r12
10d95(3): mov %r9,(%rdx)
10d98(3): xor %r12,%r11
10d9b(3): mov %rsi,%r12
10d9e(3): add %rsi,%r8
10da1(3): sub %r11,%rbp
10da4(4): shl/sal $0x14,%r12
10da8(4): mov %r11,0x8(%rdx)
10dac(3): xor %r12,%rbx
10daf(4): lea 0x0(%rsi,%rbp,1),%r12
10db3(3): mov %rbp,%rsi
10db6(3): sub %rbx,%r10
10db9(4): shr $0x11,%rsi
10dbd(4): mov %rbx,0x10(%rdx)
10dc1(3): xor %rsi,%r8
10dc4(3): mov %r10,%rsi
10dc7(3): add %r10,%rbp
10dca(3): sub %r8,%rcx
10dcd(4): shl/sal $0xe,%rsi
10dd1(4): mov %r8,0x18(%rdx)
10dd5(3): xor %r12,%rsi
10dd8(3): add %rcx,%r10
10ddb(4): mov %rbp,0x28(%rdx)
10ddf(4): mov %rsi,0x20(%rdx)
10de3(4): mov %r10,0x30(%rdx)
10de7(4): add $0x40,%rdx
10deb(4): mov %rcx,0xfffffff8(%rdx)
10def(3): cmp %rdx,%rax
10df2(6): jnz 0xffffff2e(%rip)
10df8(1): pop %rbx
10df9(b): mov $0x0,0x810(%rdi)
10e04(b): mov $0x0,0x808(%rdi)
10e0f(1): pop %rbp
10e10(b): mov $0x0,0x800(%rdi)
10e1b(2): pop %r12
10e1d(2): pop %r13
10e1f(1): ret near (%rsp)

"save_token" :
10e20(2): push %r12
10e22(1): push %rbp
10e23(1): push %rbx
10e24(4): mov 0x30(%rdi),%rdx
10e28(3): mov %rdi,%rbx
10e2b(4): mov 0x28(%rdi),%r12
10e2f(3): mov %rdx,%rbp
10e32(3): sub %r12,%rbp
10e35(4): sub $0x1,%rbp
10e39(3): cmp %r12,%rdx
10e3c(6): jz 0xc4(%rip)
10e42(4): mov 0x48(%rbx),%rcx
10e46(4): lea 0x0(%rdx,%rcx,1),%rax
10e4a(3): not %rcx
10e4d(4): mov 0x38(%rbx),%rdx
10e51(3): and %rcx,%rax
10e54(4): mov 0x20(%rbx),%rcx
10e58(3): mov %rax,%rsi
10e5b(3): mov %rdx,%rdi
10e5e(4): mov %rax,0x30(%rbx)
10e62(3): sub %rcx,%rsi
10e65(3): sub %rcx,%rdi
10e68(3): cmp %rdi,%rsi
10e6b(2): jbe 0x9(%rip)
10e6d(4): mov %rdx,0x30(%rbx)
10e71(3): mov %rdx,%rax
10e74(4): mov %rax,0x28(%rbx)
10e78(7): mov 0x88(%rbx),%rdx
10e7f(7): mov 0x90(%rbx),%rax
10e86(3): sub %rdx,%rax
10e89(4): cmp $0x7,%rax
10e8d(2): jbe 0x53(%rip)
10e8f(3): mov %r12,(%rdx)
10e92(7): mov 0xe0(%rbx),%rdx
10e99(7): mov 0xe8(%rbx),%rax
10ea0(8): add $0x8,0x88(%rbx)
10ea8(3): sub %rdx,%rax
10eab(4): cmp $0x7,%rax
10eaf(2): jnbe 0x1a(%rip)
10eb1(7): lea 0xc8(%rbx),%rdi
10eb8(5): mov $0x8,%esi
10ebd(5): call 0x22d3(%rip)
10ec2(7): mov 0xe0(%rbx),%rdx
10ec9(3): mov %rbp,(%rdx)
10ecc(8): add $0x8,0xe0(%rbx)
10ed4(4): add $0x1,(%rbx)
10ed8(1): pop %rbx
10ed9(1): pop %rbp
10eda(2): pop %r12
10edc(1): ret near (%rsp)
10edd(3): nop (%rax)
10ee0(4): lea 0x70(%rbx),%rdi
10ee4(5): mov $0x8,%esi
10ee9(5): call 0x22a7(%rip)
10eee(7): mov 0x88(%rbx),%rdx
10ef5(2): jmp 0xffffff9a(%rip)
10ef7(9): nop 0x0(%rax,%rax,1)
10f00(4): or $0x2,0x68(%rdi)
10f04(5): jmp 0xffffff3e(%rip)

"readtokens0_init" :
10f10(2): push %r12
10f12(7): mov 0x20909f(%rip),%r12
10f19(2): xor %edx,%edx
10f1b(1): push %rbp
10f1c(7): mov 0x2090b5(%rip),%rbp
10f23(2): xor %esi,%esi
10f25(1): push %rbx
10f26(3): mov %rdi,%rbx
10f29(7): mov $0x0,(%rdi)
10f30(8): mov $0x0,0x8(%rdi)
10f38(8): mov $0x0,0x10(%rdi)
10f40(4): lea 0x18(%rdi),%rdi
10f44(3): mov %r12,%r8
10f47(3): mov %rbp,%rcx
10f4a(5): call 0x2206(%rip)
10f4f(4): lea 0x70(%rbx),%rdi
10f53(3): mov %r12,%r8
10f56(3): mov %rbp,%rcx
10f59(2): xor %edx,%edx
10f5b(2): xor %esi,%esi
10f5d(5): call 0x21f3(%rip)
10f62(7): lea 0xc8(%rbx),%rdi
10f69(3): mov %r12,%r8
10f6c(3): mov %rbp,%rcx
10f6f(1): pop %rbx
10f70(1): pop %rbp
10f71(2): pop %r12
10f73(2): xor %edx,%edx
10f75(2): xor %esi,%esi
10f77(5): jmp 0x21d9(%rip)

"readtokens0_free" :
10f80(1): push %rbx
10f81(3): mov %rdi,%rbx
10f84(4): lea 0x18(%rdi),%rdi
10f88(2): xor %esi,%esi
10f8a(5): call 0x2336(%rip)
10f8f(4): lea 0x70(%rbx),%rdi
10f93(2): xor %esi,%esi
10f95(5): call 0x232b(%rip)
10f9a(7): lea 0xc8(%rbx),%rdi
10fa1(2): xor %esi,%esi
10fa3(1): pop %rbx
10fa4(5): jmp 0x231c(%rip)

"readtokens0" :
10fb0(2): push %r12
10fb2(1): push %rbp
10fb3(4): lea 0x18(%rsi),%r12
10fb7(1): push %rbx
10fb8(3): mov %rdi,%rbp
10fbb(3): mov %rsi,%rbx
10fbe(4): sub $0x10,%rsp
10fc2(2): jmp 0x14(%rip)
10fc4(4): nop 0x0(%rax)
10fc8(4): lea 0x1(%rdx),%rcx
10fcc(2): test %eax,%eax
10fce(4): mov %rcx,0x30(%rbx)
10fd2(2): mov %al,(%rdx)
10fd4(2): jz 0x40(%rip)
10fd6(3): mov %rbp,%rdi
10fd9(5): call 0xffff1dc7(%rip)
10fde(3): cmp $0xff,%eax
10fe1(2): jz 0x4f(%rip)
10fe3(4): mov 0x30(%rbx),%rdx
10fe7(4): cmp %rdx,0x38(%rbx)
10feb(2): jnz 0xffffffdd(%rip)
10fed(5): mov $0x1,%esi
10ff2(3): mov %r12,%rdi
10ff5(4): mov %eax,0xc(%rsp)
10ff9(5): call 0x2197(%rip)
10ffe(4): mov 0x30(%rbx),%rdx
11002(4): mov 0xc(%rsp),%eax
11006(4): lea 0x1(%rdx),%rcx
1100a(2): test %eax,%eax
1100c(4): mov %rcx,0x30(%rbx)
11010(2): mov %al,(%rdx)
11012(2): jnz 0xffffffc4(%rip)
11014(3): mov %rbx,%rdi
11017(5): call 0xfffffe09(%rip)
1101c(3): mov %rbp,%rdi
1101f(5): call 0xffff1d81(%rip)
11024(3): cmp $0xff,%eax
11027(2): jnz 0xffffffbc(%rip)
11029(7): nop 0x0(%rax)
11030(4): mov 0x30(%rbx),%rax
11034(4): cmp %rax,0x28(%rbx)
11038(2): jz 0x1f(%rip)
1103a(4): cmp %rax,0x38(%rbx)
1103e(6): jz 0x162(%rip)
11044(4): lea 0x1(%rax),%rdx
11048(3): mov %rbx,%rdi
1104b(4): mov %rdx,0x30(%rbx)
1104f(3): mov $0x0,(%rax)
11052(5): call 0xfffffdce(%rip)
11057(7): mov 0x88(%rbx),%rdx
1105e(7): mov 0x90(%rbx),%rax
11065(3): sub %rdx,%rax
11068(4): cmp $0x7,%rax
1106c(6): jbe 0xf4(%rip)
11072(7): mov $0x0,(%rdx)
11079(7): mov 0x88(%rbx),%rax
11080(7): mov 0x80(%rbx),%rsi
11087(4): lea 0x8(%rax),%rdx
1108b(3): cmp %rsi,%rdx
1108e(7): mov %rdx,0x88(%rbx)
11095(6): jz 0xfb(%rip)
1109b(7): mov 0xa0(%rbx),%rcx
110a2(4): lea 0x0(%rdx,%rcx,1),%rax
110a6(3): not %rcx
110a9(4): mov 0x78(%rbx),%rdx
110ad(3): and %rcx,%rax
110b0(7): mov 0x90(%rbx),%rcx
110b7(3): mov %rax,%rdi
110ba(7): mov %rax,0x88(%rbx)
110c1(3): sub %rdx,%rdi
110c4(3): mov %rcx,%r8
110c7(3): sub %rdx,%r8
110ca(3): cmp %r8,%rdi
110cd(2): jbe 0xc(%rip)
110cf(7): mov %rcx,0x88(%rbx)
110d6(3): mov %rcx,%rax
110d9(4): mov %rsi,0x8(%rbx)
110dd(7): mov 0xe0(%rbx),%rdx
110e4(7): mov 0xd8(%rbx),%rsi
110eb(7): mov %rax,0x80(%rbx)
110f2(3): cmp %rsi,%rdx
110f5(6): jz 0x8b(%rip)
110fb(7): mov 0xf8(%rbx),%rcx
11102(4): lea 0x0(%rdx,%rcx,1),%rax
11106(3): not %rcx
11109(7): mov 0xe8(%rbx),%rdx
11110(3): and %rcx,%rax
11113(7): mov 0xd0(%rbx),%rcx
1111a(3): mov %rax,%rdi
1111d(3): mov %rdx,%r9
11120(7): mov %rax,0xe0(%rbx)
11127(3): sub %rcx,%rdi
1112a(3): sub %rcx,%r9
1112d(3): cmp %r9,%rdi
11130(2): jbe 0xc(%rip)
11132(7): mov %rdx,0xe0(%rbx)
11139(3): mov %rdx,%rax
1113c(7): mov %rax,0xd8(%rbx)
11143(4): mov %rsi,0x10(%rbx)
11147(3): mov %rbp,%rdi
1114a(5): call 0xffff1a36(%rip)
1114f(2): test %eax,%eax
11151(3): setz %al
11154(4): add $0x10,%rsp
11158(1): pop %rbx
11159(1): pop %rbp
1115a(2): pop %r12
1115c(1): ret near (%rsp)
1115d(3): nop (%rax)
11160(4): lea 0x70(%rbx),%rdi
11164(5): mov $0x8,%esi
11169(5): call 0x2027(%rip)
1116e(7): mov 0x88(%rbx),%rdx
11175(5): jmp 0xfffffefd(%rip)
1117a(6): nop 0x0(%rax,%rax,1)
11180(7): or $0x2,0x118(%rbx)
11187(5): jmp 0xffffff74(%rip)
1118c(4): nop 0x0(%rax)
11190(7): or $0x2,0xc0(%rbx)
11197(5): jmp 0xffffff04(%rip)
1119c(4): nop 0x0(%rax)
111a0(4): lea 0x18(%rbx),%rdi
111a4(5): mov $0x1,%esi
111a9(5): call 0x1fe7(%rip)
111ae(4): mov 0x30(%rbx),%rax
111b2(5): jmp 0xfffffe92(%rip)

"mkstemp_safer" :
111c0(4): sub $0x8,%rsp
111c4(5): call 0xffff1d7c(%rip)
111c9(4): add $0x8,%rsp
111cd(2): mov %eax,%edi
111cf(5): jmp 0x5b1(%rip)

"mkostemp_safer" :
111e0(1): push %rbx
111e1(2): mov %esi,%ebx
111e3(5): call 0xffff1b5d(%rip)
111e8(2): mov %ebx,%esi
111ea(2): mov %eax,%edi
111ec(1): pop %rbx
111ed(5): jmp 0x22b3(%rip)

"strnumcmp" :
11200(4): movzx (%rdi),%r10d
11204(4): movzx (%rsi),%r9d
11208(4): cmp $0x2d,%r10b
1120c(6): jz 0x15c(%rip)
11212(4): cmp $0x2d,%r9b
11216(2): jnz 0x42(%rip)
11218(8): nop 0x0(%rax,%rax,1)
11220(4): add $0x1,%rsi
11224(3): movzx (%rsi),%eax
11227(2): cmp $0x30,%al
11229(2): jz 0xfffffff7(%rip)
1122b(2): cmp %eax,%ecx
1122d(2): jz 0xfffffff3(%rip)
1122f(2): cmp %eax,%edx
11231(6): jz 0x2bf(%rip)
11237(3): lea 0xffffffd0(%rax),%esi
1123a(5): mov $0x1,%eax
1123f(3): cmp $0x9,%esi
11242(6): jnbe 0x2d6(%rip)
11248(2): REP ret near (%rsp)
1124a(6): nop 0x0(%rax,%rax,1)
11250(4): add $0x1,%rdi
11254(4): movzx (%rdi),%r10d
11258(4): cmp $0x30,%r10b
1125c(2): jz 0xfffffff4(%rip)
1125e(4): movzx %r10b,%r8d
11262(3): cmp %r8d,%ecx
11265(3): mov %r8d,%eax
11268(2): jz 0xffffffe8(%rip)
1126a(4): cmp $0x30,%r9b
1126e(2): jnz 0x10(%rip)
11270(4): add $0x1,%rsi
11274(4): movzx (%rsi),%r9d
11278(4): cmp $0x30,%r9b
1127c(2): jz 0xfffffff4(%rip)
1127e(4): movzx %r9b,%r11d
11282(3): cmp %r11d,%ecx
11285(2): jz 0xffffffeb(%rip)
11287(3): cmp %r9b,%r10b
1128a(6): jnz 0x2d6(%rip)
11290(4): sub $0x30,%r11d
11294(4): cmp $0x9,%r11d
11298(6): jnbe 0x43f(%rip)
1129e(2): nop 
112a0(4): add $0x1,%rdi
112a4(4): movzx (%rdi),%r8d
112a8(3): cmp %r8d,%ecx
112ab(3): mov %r8d,%r10d
112ae(3): mov %r8d,%eax
112b1(2): jz 0xffffffef(%rip)
112b3(5): nop 0x0(%rax,%rax,1)
112b8(4): add $0x1,%rsi
112bc(4): movzx (%rsi),%r11d
112c0(3): cmp %r11d,%ecx
112c3(3): mov %r11d,%r9d
112c6(2): jz 0xfffffff2(%rip)
112c8(3): cmp %r11b,%r10b
112cb(6): jnz 0x295(%rip)
112d1(4): sub $0x30,%r11d
112d5(4): cmp $0x9,%r11d
112d9(2): jbe 0xffffffc7(%rip)
112db(3): cmp %r8d,%edx
112de(6): jz 0x2c2(%rip)
112e4(4): movzx %r10b,%r11d
112e8(4): movzx %r9b,%r8d
112ec(4): sub $0x30,%r8d
112f0(3): cmp %r11d,%edx
112f3(6): jz 0x2c2(%rip)
112f9(3): sub %r11d,%eax
112fc(4): sub $0x30,%r11d
11300(4): cmp $0x9,%r8d
11304(6): jnbe 0x2dc(%rip)
1130a(3): xor %r8d,%r8d
1130d(3): nop (%rax)
11310(4): add $0x1,%rdi
11314(3): movzx (%rdi),%edx
11317(2): cmp %edx,%ecx
11319(2): jz 0xfffffff7(%rip)
1131b(3): sub $0x30,%edx
1131e(4): add $0x1,%r8
11322(3): cmp $0x9,%edx
11325(2): jbe 0xffffffeb(%rip)
11327(4): cmp $0x9,%r11d
1132b(6): jnbe 0x2c5(%rip)
11331(2): xor %edi,%edi
11333(5): nop 0x0(%rax,%rax,1)
11338(4): add $0x1,%rsi
1133c(3): movzx (%rsi),%edx
1133f(2): cmp %edx,%ecx
11341(2): jz 0xfffffff7(%rip)
11343(3): sub $0x30,%edx
11346(4): add $0x1,%rdi
1134a(3): cmp $0x9,%edx
1134d(2): jbe 0xffffffeb(%rip)
1134f(3): cmp %r8,%rdi
11352(6): jz 0x242(%rip)
11358(3): cmp %rdi,%r8
1135b(2): sbb %eax,%eax
1135d(3): or $0x1,%eax
11360(1): ret near (%rsp)
11361(7): nop 0x0(%rax)
11368(4): add $0x1,%rdi
1136c(4): movzx (%rdi),%r8d
11370(4): cmp $0x30,%r8b
11374(2): jz 0xfffffff4(%rip)
11376(4): movzx %r8b,%eax
1137a(2): cmp %eax,%ecx
1137c(3): mov %eax,%r11d
1137f(2): jz 0xffffffe9(%rip)
11381(4): cmp $0x2d,%r9b
11385(2): jz 0x4b(%rip)
11387(2): cmp %eax,%edx
11389(6): jz 0x147(%rip)
1138f(3): sub $0x30,%eax
11392(3): cmp $0x9,%eax
11395(2): jnbe 0x13(%rip)
11397(5): jmp 0x3c1(%rip)
1139c(4): nop 0x0(%rax)
113a0(4): add $0x1,%rsi
113a4(4): movzx (%rsi),%r9d
113a8(4): cmp $0x30,%r9b
113ac(2): jz 0xfffffff4(%rip)
113ae(4): movzx %r9b,%r11d
113b2(3): cmp %r11d,%ecx
113b5(2): jz 0xffffffeb(%rip)
113b7(3): cmp %r11d,%edx
113ba(6): jz 0x186(%rip)
113c0(4): sub $0x30,%r11d
113c4(2): xor %eax,%eax
113c6(4): cmp $0x9,%r11d
113ca(3): setbe %al
113cd(2): neg %eax
113cf(1): ret near (%rsp)
113d0(4): add $0x1,%rsi
113d4(4): movzx (%rsi),%r10d
113d8(4): cmp $0x30,%r10b
113dc(2): jz 0xfffffff4(%rip)
113de(4): movzx %r10b,%r9d
113e2(3): cmp %r9d,%ecx
113e5(2): jz 0xffffffeb(%rip)
113e7(3): cmp %r10b,%r8b
113ea(6): jnz 0x1dc(%rip)
113f0(4): sub $0x30,%r9d
113f4(4): cmp $0x9,%r9d
113f8(6): jnbe 0x358(%rip)
113fe(2): nop 
11400(4): add $0x1,%rdi
11404(3): movzx (%rdi),%eax
11407(2): cmp %eax,%ecx
11409(3): mov %eax,%r8d
1140c(3): mov %eax,%r11d
1140f(2): jz 0xfffffff1(%rip)
11411(7): nop 0x0(%rax)
11418(4): add $0x1,%rsi
1141c(4): movzx (%rsi),%r9d
11420(3): cmp %r9d,%ecx
11423(3): mov %r9d,%r10d
11426(2): jz 0xfffffff2(%rip)
11428(3): cmp %r9b,%r8b
1142b(6): jnz 0x19b(%rip)
11431(4): sub $0x30,%r9d
11435(4): cmp $0x9,%r9d
11439(2): jbe 0xffffffc7(%rip)
1143b(2): cmp %eax,%edx
1143d(6): jz 0x1e4(%rip)
11443(4): movzx %r10b,%eax
11447(4): movzx %r8b,%r9d
1144b(3): cmp %r9d,%edx
1144e(4): lea 0xffffffd0(%rax),%r8d
11452(6): jz 0x26e(%rip)
11458(3): mov %r9d,%eax
1145b(4): lea 0xffffffd0(%r9),%edx
1145f(3): sub %r11d,%eax
11462(4): cmp $0x9,%r8d
11466(6): jnbe 0x279(%rip)
1146c(3): xor %r9d,%r9d
1146f(1): nop 
11470(4): add $0x1,%rdi
11474(4): movzx (%rdi),%r8d
11478(3): cmp %r8d,%ecx
1147b(2): jz 0xfffffff5(%rip)
1147d(4): sub $0x30,%r8d
11481(4): add $0x1,%r9
11485(4): cmp $0x9,%r8d
11489(2): jbe 0xffffffe7(%rip)
1148b(3): cmp $0x9,%edx
1148e(6): jnbe 0x1b7(%rip)
11494(2): xor %edi,%edi
11496(a): nop 0x0(%rax,%rax,1)
114a0(4): add $0x1,%rsi
114a4(3): movzx (%rsi),%edx
114a7(2): cmp %edx,%ecx
114a9(2): jz 0xfffffff7(%rip)
114ab(3): sub $0x30,%edx
114ae(4): add $0x1,%rdi
114b2(3): cmp $0x9,%edx
114b5(2): jbe 0xffffffeb(%rip)
114b7(3): cmp %r9,%rdi
114ba(6): jz 0xda(%rip)
114c0(3): cmp %rdi,%r9
114c3(2): sbb %eax,%eax
114c5(3): and $0x2,%eax
114c8(3): sub $0x1,%eax
114cb(1): ret near (%rsp)
114cc(4): nop 0x0(%rax)
114d0(4): add $0x1,%rdi
114d4(4): movzx (%rdi),%r8d
114d8(4): cmp $0x30,%r8b
114dc(2): jz 0xfffffff4(%rip)
114de(4): movzx %r8b,%eax
114e2(5): jmp 0xfffffead(%rip)
114e7(9): nop 0x0(%rax,%rax,1)
114f0(4): add $0x1,%rsi
114f4(3): movzx (%rsi),%eax
114f7(2): cmp $0x30,%al
114f9(6): jnz 0xfffffd3e(%rip)
114ff(4): add $0x1,%rsi
11503(3): movzx (%rsi),%eax
11506(2): cmp $0x30,%al
11508(2): jz 0xffffffe8(%rip)
1150a(5): jmp 0xfffffd2d(%rip)
1150f(1): nop 
11510(4): add $0x1,%rdi
11514(4): movzx (%rdi),%r10d
11518(4): cmp $0x30,%r10b
1151c(2): jz 0xfffffff4(%rip)
1151e(4): movzx %r10b,%r8d
11522(3): cmp %r8d,%ecx
11525(2): jz 0xffffffeb(%rip)
11527(3): cmp %r8d,%edx
1152a(2): jz 0x56(%rip)
1152c(4): sub $0x30,%r8d
11530(2): xor %eax,%eax
11532(4): cmp $0x9,%r8d
11536(3): setbe %al
11539(1): ret near (%rsp)
1153a(6): nop 0x0(%rax,%rax,1)
11540(4): add $0x1,%rsi
11544(4): movzx (%rsi),%r9d
11548(4): cmp $0x30,%r9b
1154c(2): jz 0xfffffff4(%rip)
1154e(4): movzx %r9b,%r11d
11552(5): jmp 0xfffffe6e(%rip)
11557(9): nop 0x0(%rax,%rax,1)
11560(3): cmp %r8d,%edx
11563(6): jnz 0xfffffd89(%rip)
11569(4): lea 0xffffffd0(%r11),%eax
1156d(3): cmp $0x9,%eax
11570(2): jnbe 0x30(%rip)
11572(2): mov %edx,%eax
11574(5): jmp 0xfffffd78(%rip)
11579(7): nop 0x0(%rax)
11580(4): add $0x1,%rdi
11584(4): movzx (%rdi),%r10d
11588(4): cmp $0x30,%r10b
1158c(2): jz 0xfffffff4(%rip)
1158e(4): movzx %r10b,%r8d
11592(2): jmp 0xffffff9a(%rip)
11594(3): test %rdi,%rdi
11597(5): mov $0x0,%edx
1159c(3): cmove %edx,%eax
1159f(1): ret near (%rsp)
115a0(2): cmp (%rdi),%dl
115a2(4): movzx (%rsi),%r8d
115a6(6): jz 0xaa(%rip)
115ac(2): xor %eax,%eax
115ae(3): cmp %r8b,%dl
115b1(2): jz 0x48(%rip)
115b3(2): REP ret near (%rsp)
115b5(4): cmp $0x9,%r8d
115b9(2): jnbe 0xffffffe7(%rip)
115bb(2): sub %edx,%eax
115bd(4): lea 0xffffffd0(%rdx),%r11d
115c1(5): jmp 0xfffffd49(%rip)
115c6(2): cmp %eax,%edx
115c8(6): jnz 0xfffffe83(%rip)
115ce(4): lea 0xffffffd0(%r9),%r8d
115d2(4): cmp $0x9,%r8d
115d6(2): jnbe 0x4b(%rip)
115d8(3): mov %edx,%r11d
115db(5): jmp 0xfffffe70(%rip)
115e0(3): xor %r8d,%r8d
115e3(4): cmp $0x9,%r11d
115e7(6): jbe 0xfffffd4a(%rip)
115ed(2): xor %eax,%eax
115ef(1): ret near (%rsp)
115f0(2): xor %eax,%eax
115f2(3): test %r8,%r8
115f5(3): setnz %al
115f8(1): ret near (%rsp)
115f9(4): lea 0x1(%rsi),%rax
115fd(4): movzx 0x1(%rsi),%edx
11601(2): jmp 0x9(%rip)
11603(4): add $0x1,%rax
11607(3): movzx (%rax),%edx
1160a(3): cmp $0x30,%dl
1160d(2): jz 0xfffffff6(%rip)
1160f(3): movsx %dl,%eax
11612(3): sub $0x30,%eax
11615(3): cmp $0x9,%eax
11618(3): setbe %al
1161b(3): movzx %al,%eax
1161e(2): neg %eax
11620(1): ret near (%rsp)
11621(2): cmp (%rsi),%dl
11623(4): movzx (%rdi),%r8d
11627(6): jz 0xc9(%rip)
1162d(2): xor %eax,%eax
1162f(3): cmp %r8b,%dl
11632(6): jnz 0xffffff81(%rip)
11638(4): add $0x1,%rdi
1163c(3): movsx (%rdi),%eax
1163f(2): cmp $0x30,%al
11641(2): jz 0xfffffff7(%rip)
11643(2): jmp 0xffffffcf(%rip)
11645(2): xor %eax,%eax
11647(3): test %r9,%r9
1164a(3): setnz %al
1164d(2): neg %eax
1164f(1): ret near (%rsp)
11650(3): cmp %r8b,%dl
11653(4): movzx 0x1(%rdi),%ecx
11657(2): jz 0x33(%rip)
11659(4): add $0x1,%rdi
1165d(2): jmp 0xa(%rip)
1165f(1): nop 
11660(4): add $0x1,%rdi
11664(3): movzx (%rdi),%ecx
11667(3): cmp $0x30,%cl
1166a(2): jz 0xfffffff6(%rip)
1166c(3): movsx %cl,%eax
1166f(3): sub $0x30,%eax
11672(3): cmp $0x9,%eax
11675(3): setbe %al
11678(3): movzx %al,%eax
1167b(1): ret near (%rsp)
1167c(4): cmp $0x9,%r8d
11680(6): jnbe 0xffffff6d(%rip)
11686(4): movzx 0x1(%rdi),%ecx
1168a(4): add $0x1,%rsi
1168e(4): movsx (%rsi),%r9d
11692(4): add $0x1,%rdi
11696(3): cmp %cl,%r9b
11699(3): mov %r9d,%edx
1169c(4): lea 0xffffffd0(%r9),%r8d
116a0(2): jz 0xffffffdc(%rip)
116a2(3): movsx %cl,%eax
116a5(4): lea 0xffffffd0(%rax),%r10d
116a9(4): cmp $0x9,%r10d
116ad(6): jnbe 0xb1(%rip)
116b3(4): cmp $0x9,%r8d
116b7(2): jnbe 0xffffffb0(%rip)
116b9(3): sub %r9d,%eax
116bc(1): ret near (%rsp)
116bd(3): nop (%rax)
116c0(4): cmp $0x9,%r8d
116c4(6): jnbe 0xffffff5d(%rip)
116ca(2): mov %edx,%eax
116cc(3): sub $0x30,%edx
116cf(3): sub %r11d,%eax
116d2(5): jmp 0xfffffd9a(%rip)
116d7(3): mov %r10d,%r9d
116da(5): jmp 0xfffffc01(%rip)
116df(3): xor %r9d,%r9d
116e2(3): cmp $0x9,%edx
116e5(6): jbe 0xfffffdaf(%rip)
116eb(5): jmp 0xffffff02(%rip)
116f0(3): cmp %r8b,%dl
116f3(4): movzx 0x1(%rsi),%ecx
116f7(2): jz 0x26(%rip)
116f9(4): add $0x1,%rsi
116fd(2): jmp 0x9(%rip)
116ff(4): add $0x1,%rsi
11703(3): movzx (%rsi),%ecx
11706(3): cmp $0x30,%cl
11709(2): jz 0xfffffff6(%rip)
1170b(5): jmp 0xffffff61(%rip)
11710(3): cmp $0x9,%edx
11713(6): jnbe 0xfffffeda(%rip)
11719(4): movzx 0x1(%rsi),%ecx
1171d(4): add $0x1,%rdi
11721(4): movsx (%rdi),%r8d
11725(4): add $0x1,%rsi
11729(3): cmp %cl,%r8b
1172c(4): lea 0xffffffd0(%r8),%edx
11730(2): jz 0xffffffe0(%rip)
11732(3): movsx %cl,%eax
11735(4): lea 0xffffffd0(%rax),%r9d
11739(4): cmp $0x9,%r9d
1173d(2): jbe 0x35(%rip)
1173f(2): xor %eax,%eax
11741(3): cmp $0x9,%edx
11744(6): jbe 0xfffffef8(%rip)
1174a(1): ret near (%rsp)
1174b(5): nop 0x0(%rax,%rax,1)
11750(3): mov %r8d,%r10d
11753(5): jmp 0xfffffce8(%rip)
11758(5): mov $0xffffffff,%eax
1175d(1): ret near (%rsp)
1175e(2): xor %eax,%eax
11760(4): cmp $0x9,%r8d
11764(6): jnbe 0xfffffe4f(%rip)
1176a(3): mov %rsi,%rax
1176d(5): jmp 0xfffffe9d(%rip)
11772(3): cmp $0x9,%edx
11775(2): jnbe 0xffffff91(%rip)
11777(3): sub %r8d,%eax
1177a(1): ret near (%rsp)

"fd_safer" :
11780(2): push %r13
11782(2): push %r12
11784(1): push %rbp
11785(1): push %rbx
11786(2): mov %edi,%ebx
11788(4): sub $0x8,%rsp
1178c(3): cmp $0x2,%edi
1178f(2): jnbe 0x23(%rip)
11791(5): call 0x201f(%rip)
11796(3): mov %eax,%r12d
11799(5): call 0xffff1377(%rip)
1179e(3): mov (%rax),%r13d
117a1(3): mov %rax,%rbp
117a4(2): mov %ebx,%edi
117a6(5): call 0xffff160a(%rip)
117ab(3): mov %r12d,%ebx
117ae(4): mov %r13d,0x0(%rbp)
117b2(4): add $0x8,%rsp
117b6(2): mov %ebx,%eax
117b8(1): pop %rbx
117b9(1): pop %rbp
117ba(2): pop %r12
117bc(2): pop %r13
117be(1): ret near (%rsp)

"version_etc_arn" :
117c0(2): push %r15
117c2(2): push %r14
117c4(2): push %r13
117c6(2): push %r12
117c8(3): mov %r9,%r12
117cb(1): push %rbp
117cc(1): push %rbx
117cd(3): mov %rdi,%rbp
117d0(3): mov %r8,%rbx
117d3(4): sub $0x28,%rsp
117d7(3): test %rsi,%rsi
117da(6): jz 0x11e(%rip)
117e0(3): mov %rdx,%r8
117e3(7): lea 0x490d(%rip),%rdx
117ea(3): mov %rcx,%r9
117ed(2): xor %eax,%eax
117ef(3): mov %rsi,%rcx
117f2(5): mov $0x1,%esi
117f7(5): call 0xffff1909(%rip)
117fc(7): lea 0x4907(%rip),%rsi
11803(2): xor %edi,%edi
11805(5): mov $0x5,%edx
1180a(5): call 0xffff1466(%rip)
1180f(7): lea 0x4c0a(%rip),%rdx
11816(3): mov %rax,%rcx
11819(6): mov $0x7e3,%r8d
1181f(5): mov $0x1,%esi
11824(3): mov %rbp,%rdi
11827(2): xor %eax,%eax
11829(5): call 0xffff18d7(%rip)
1182e(7): lea 0x495b(%rip),%rsi
11835(2): xor %edi,%edi
11837(5): mov $0x5,%edx
1183c(5): call 0xffff1434(%rip)
11841(3): mov %rbp,%rsi
11844(3): mov %rax,%rdi
11847(5): call 0xffff15c9(%rip)
1184c(4): cmp $0x9,%r12
11850(6): jnbe 0x340(%rip)
11856(7): lea 0x4b8f(%rip),%rdx
1185d(4): movsxd 0x0(%rdx,%r12,4),%rax
11861(3): add %rdx,%rax
11864(2): jmp %rax
11866(a): nop 0x0(%rax,%rax,1)
11870(4): mov 0x38(%rbx),%r9
11874(4): mov 0x10(%rbx),%rax
11878(7): lea 0x4a81(%rip),%rsi
1187f(4): mov 0x8(%rbx),%r8
11883(5): mov $0x5,%edx
11888(2): xor %edi,%edi
1188a(4): mov 0x30(%rbx),%r13
1188e(4): mov 0x28(%rbx),%r12
11892(5): mov %r9,0x10(%rsp)
11897(4): mov 0x20(%rbx),%r15
1189b(4): mov 0x18(%rbx),%r14
1189f(4): mov %rax,(%rsp)
118a3(5): mov %r8,0x8(%rsp)
118a8(3): mov (%rbx),%rbx
118ab(5): call 0xffff13c5(%rip)
118b0(4): sub $0x8,%rsp
118b4(5): mov 0x18(%rsp),%r9
118b9(3): mov %rax,%rdx
118bc(3): mov %rbx,%rcx
118bf(5): mov $0x1,%esi
118c4(3): mov %rbp,%rdi
118c7(2): xor %eax,%eax
118c9(2): push %r9
118cb(2): push %r13
118cd(2): push %r12
118cf(2): push %r15
118d1(2): push %r14
118d3(5): mov 0x30(%rsp),%r9
118d8(5): mov 0x38(%rsp),%r8
118dd(5): call 0xffff1823(%rip)
118e2(4): add $0x30,%rsp
118e6(4): add $0x28,%rsp
118ea(1): pop %rbx
118eb(1): pop %rbp
118ec(2): pop %r12
118ee(2): pop %r13
118f0(2): pop %r14
118f2(2): pop %r15
118f4(1): ret near (%rsp)
118f5(3): nop (%rax)
118f8(3): mov %rcx,%r8
118fb(3): mov %rdx,%rcx
118fe(7): lea 0x47fe(%rip),%rdx
11905(5): mov $0x1,%esi
1190a(2): xor %eax,%eax
1190c(5): call 0xffff17f4(%rip)
11911(5): jmp 0xfffffeeb(%rip)
11916(a): nop 0x0(%rax,%rax,1)
11920(4): mov 0x40(%rbx),%r10
11924(4): mov 0x38(%rbx),%r9
11928(7): lea 0x4a01(%rip),%rsi
1192f(4): mov 0x10(%rbx),%rax
11933(4): mov 0x8(%rbx),%r8
11937(5): mov $0x5,%edx
1193c(4): mov 0x30(%rbx),%r13
11940(4): mov 0x28(%rbx),%r12
11944(4): mov 0x20(%rbx),%r15
11948(4): mov 0x18(%rbx),%r14
1194c(3): mov (%rbx),%rbx
1194f(5): mov %r10,0x18(%rsp)
11954(5): mov %r9,0x10(%rsp)
11959(4): mov %rax,(%rsp)
1195d(5): mov %r8,0x8(%rsp)
11962(2): xor %edi,%edi
11964(5): call 0xffff130c(%rip)
11969(5): mov 0x18(%rsp),%r10
1196e(2): push %r10
11970(5): jmp 0xffffff44(%rip)
11975(3): nop (%rax)
11978(3): mov (%rbx),%rbx
1197b(7): lea 0x478c(%rip),%rsi
11982(5): mov $0x5,%edx
11987(2): xor %edi,%edi
11989(5): call 0xffff12e7(%rip)
1198e(4): add $0x28,%rsp
11992(3): mov %rbx,%rcx
11995(3): mov %rbp,%rdi
11998(1): pop %rbx
11999(1): pop %rbp
1199a(2): pop %r12
1199c(2): pop %r13
1199e(2): pop %r14
119a0(2): pop %r15
119a2(3): mov %rax,%rdx
119a5(5): mov $0x1,%esi
119aa(2): xor %eax,%eax
119ac(5): jmp 0xffff1754(%rip)
119b1(7): nop 0x0(%rax)
119b8(4): mov 0x8(%rbx),%r12
119bc(7): lea 0x475b(%rip),%rsi
119c3(3): mov (%rbx),%rbx
119c6(5): mov $0x5,%edx
119cb(2): xor %edi,%edi
119cd(5): call 0xffff12a3(%rip)
119d2(4): add $0x28,%rsp
119d6(3): mov %r12,%r8
119d9(3): mov %rbx,%rcx
119dc(3): mov %rbp,%rdi
119df(3): mov %rax,%rdx
119e2(5): mov $0x1,%esi
119e7(1): pop %rbx
119e8(1): pop %rbp
119e9(2): pop %r12
119eb(2): pop %r13
119ed(2): pop %r14
119ef(2): pop %r15
119f1(2): xor %eax,%eax
119f3(5): jmp 0xffff170d(%rip)
119f8(8): nop 0x0(%rax,%rax,1)
11a00(4): mov 0x10(%rbx),%r13
11a04(4): mov 0x8(%rbx),%r12
11a08(7): lea 0x4726(%rip),%rsi
11a0f(3): mov (%rbx),%rbx
11a12(5): mov $0x5,%edx
11a17(2): xor %edi,%edi
11a19(5): call 0xffff1257(%rip)
11a1e(4): add $0x28,%rsp
11a22(3): mov %r13,%r9
11a25(3): mov %r12,%r8
11a28(3): mov %rbx,%rcx
11a2b(3): mov %rbp,%rdi
11a2e(3): mov %rax,%rdx
11a31(1): pop %rbx
11a32(1): pop %rbp
11a33(2): pop %r12
11a35(2): pop %r13
11a37(2): pop %r14
11a39(2): pop %r15
11a3b(5): mov $0x1,%esi
11a40(2): xor %eax,%eax
11a42(5): jmp 0xffff16be(%rip)
11a47(9): nop 0x0(%rax,%rax,1)
11a50(7): lea 0x4809(%rip),%rsi
11a57(5): mov $0x5,%edx
11a5c(2): xor %edi,%edi
11a5e(4): mov 0x18(%rbx),%r14
11a62(4): mov 0x10(%rbx),%r13
11a66(4): mov 0x8(%rbx),%r12
11a6a(3): mov (%rbx),%rbx
11a6d(5): call 0xffff1203(%rip)
11a72(4): sub $0x8,%rsp
11a76(2): push %r14
11a78(3): mov %rax,%rdx
11a7b(3): mov %r13,%r9
11a7e(3): mov %r12,%r8
11a81(3): mov %rbx,%rcx
11a84(3): mov %rbp,%rdi
11a87(5): mov $0x1,%esi
11a8c(2): xor %eax,%eax
11a8e(5): call 0xffff1672(%rip)
11a93(1): pop %rax
11a94(1): pop %rdx
11a95(4): add $0x28,%rsp
11a99(1): pop %rbx
11a9a(1): pop %rbp
11a9b(2): pop %r12
11a9d(2): pop %r13
11a9f(2): pop %r14
11aa1(2): pop %r15
11aa3(1): ret near (%rsp)
11aa4(4): nop 0x0(%rax)
11aa8(4): mov 0x20(%rbx),%r15
11aac(7): lea 0x47cd(%rip),%rsi
11ab3(5): mov $0x5,%edx
11ab8(2): xor %edi,%edi
11aba(4): mov 0x18(%rbx),%r14
11abe(4): mov 0x10(%rbx),%r13
11ac2(4): mov 0x8(%rbx),%r12
11ac6(3): mov (%rbx),%rbx
11ac9(5): call 0xffff11a7(%rip)
11ace(2): push %r15
11ad0(2): jmp 0xffffffa6(%rip)
11ad2(6): nop 0x0(%rax,%rax,1)
11ad8(4): mov 0x8(%rbx),%r8
11adc(4): mov 0x28(%rbx),%r12
11ae0(7): lea 0x47c1(%rip),%rsi
11ae7(4): mov 0x20(%rbx),%r15
11aeb(4): mov 0x18(%rbx),%r14
11aef(5): mov $0x5,%edx
11af4(4): mov 0x10(%rbx),%r13
11af8(2): xor %edi,%edi
11afa(3): mov (%rbx),%rbx
11afd(4): mov %r8,(%rsp)
11b01(5): call 0xffff116f(%rip)
11b06(4): sub $0x8,%rsp
11b0a(3): mov %r13,%r9
11b0d(2): push %r12
11b0f(2): push %r15
11b11(2): push %r14
11b13(5): mov 0x20(%rsp),%r8
11b18(3): mov %rbx,%rcx
11b1b(3): mov %rax,%rdx
11b1e(3): mov %rbp,%rdi
11b21(5): mov $0x1,%esi
11b26(2): xor %eax,%eax
11b28(5): call 0xffff15d8(%rip)
11b2d(4): add $0x20,%rsp
11b31(4): add $0x28,%rsp
11b35(1): pop %rbx
11b36(1): pop %rbp
11b37(2): pop %r12
11b39(2): pop %r13
11b3b(2): pop %r14
11b3d(2): pop %r15
11b3f(1): ret near (%rsp)
11b40(4): mov 0x10(%rbx),%r9
11b44(4): mov 0x30(%rbx),%r13
11b48(7): lea 0x4781(%rip),%rsi
11b4f(4): mov 0x28(%rbx),%r12
11b53(4): mov 0x20(%rbx),%r15
11b57(5): mov $0x5,%edx
11b5c(4): mov 0x18(%rbx),%r14
11b60(4): mov 0x8(%rbx),%r8
11b64(2): xor %edi,%edi
11b66(5): mov %r9,0x8(%rsp)
11b6b(3): mov (%rbx),%rbx
11b6e(4): mov %r8,(%rsp)
11b72(5): call 0xffff10fe(%rip)
11b77(2): push %r13
11b79(2): push %r12
11b7b(2): push %r15
11b7d(2): push %r14
11b7f(5): mov 0x28(%rsp),%r9
11b84(2): jmp 0xffffff8f(%rip)
11b86(a): nop 0x0(%rax,%rax,1)
11b90(4): mov 0x40(%rbx),%r10
11b94(4): mov 0x38(%rbx),%r9
11b98(5): mov $0x5,%edx
11b9d(4): mov 0x10(%rbx),%rax
11ba1(4): mov 0x8(%rbx),%r8
11ba5(7): lea 0x47bc(%rip),%rsi
11bac(4): mov 0x30(%rbx),%r13
11bb0(4): mov 0x28(%rbx),%r12
11bb4(4): mov 0x20(%rbx),%r15
11bb8(4): mov 0x18(%rbx),%r14
11bbc(5): mov %r10,0x18(%rsp)
11bc1(5): mov %r9,0x10(%rsp)
11bc6(4): mov %rax,(%rsp)
11bca(5): mov %r8,0x8(%rsp)
11bcf(3): mov (%rbx),%rbx
11bd2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
11be0(3): xor %r9d,%r9d
11be3(4): cmp $0x0,(%r8)
11be7(2): jz 0x14(%rip)
11be9(7): nop 0x0(%rax)
11bf0(4): add $0x1,%r9
11bf4(5): cmp $0x0,0x0(%r8,%r9,8)
11bf9(2): jnz 0xfffffff7(%rip)
11bfb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
11c00(4): sub $0x68,%rsp
11c04(3): mov %r8,%r10
11c07(3): xor %r9d,%r9d
11c0a(9): mov $0x28,%rax
11c13(5): mov %rax,0x58(%rsp)
11c18(2): xor %eax,%eax
11c1a(3): mov %rsp,%r8
11c1d(3): nop (%rax)
11c20(3): mov (%r10),%eax
11c23(3): cmp $0x2f,%eax
11c26(2): jnbe 0x44(%rip)
11c28(3): mov %eax,%r11d
11c2b(4): add 0x10(%r10),%r11
11c2f(3): add $0x8,%eax
11c32(3): mov %eax,(%r10)
11c35(3): mov (%r11),%rax
11c38(3): test %rax,%rax
11c3b(4): mov %rax,0x0(%r8,%r9,8)
11c3f(2): jz 0xc(%rip)
11c41(4): add $0x1,%r9
11c45(4): cmp $0xa,%r9
11c49(2): jnz 0xffffffd7(%rip)
11c4b(5): call 0xfffffb75(%rip)
11c50(5): mov 0x58(%rsp),%rax
11c55(9): xor $0x28,%rax
11c5e(2): jnz 0x7(%rip)
11c60(4): add $0x68,%rsp
11c64(1): ret near (%rsp)
11c65(5): call 0xffff103b(%rip)
11c6a(4): mov 0x8(%r10),%r11
11c6e(4): lea 0x8(%r11),%rax
11c72(4): mov %rax,0x8(%r10)
11c76(2): jmp 0xffffffbf(%rip)

"version_etc" :
11c80(1): push %rbp
11c81(1): push %rbx
11c82(6): mov $0x20,%r10d
11c88(3): xor %r11d,%r11d
11c8b(7): sub $0xb8,%rsp
11c92(9): mov $0x28,%rax
11c9b(5): mov %rax,0x78(%rsp)
11ca0(2): xor %eax,%eax
11ca2(8): lea 0xd0(%rsp),%rax
11caa(8): mov %r8,0xa0(%rsp)
11cb2(8): lea 0xd0(%rsp),%rbx
11cba(5): lea 0x20(%rsp),%r8
11cbf(8): mov %r9,0xa8(%rsp)
11cc7(8): mov $0x20,0x8(%rsp)
11ccf(5): mov %rax,0x10(%rsp)
11cd4(8): lea 0x80(%rsp),%rax
11cdc(3): xor %r9d,%r9d
11cdf(5): mov %rax,0x18(%rsp)
11ce4(3): mov %rax,%rbp
11ce7(9): nop 0x0(%rax,%rax,1)
11cf0(4): cmp $0x2f,%r10d
11cf4(2): jnbe 0x58(%rip)
11cf6(3): mov %r10d,%eax
11cf9(6): mov $0x1,%r11d
11cff(4): add $0x8,%r10d
11d03(3): add %rbp,%rax
11d06(3): mov (%rax),%rax
11d09(3): test %rax,%rax
11d0c(4): mov %rax,0x0(%r8,%r9,8)
11d10(2): jz 0xc(%rip)
11d12(4): add $0x1,%r9
11d16(4): cmp $0xa,%r9
11d1a(2): jnz 0xffffffd6(%rip)
11d1c(3): test %r11b,%r11b
11d1f(2): jnz 0x26(%rip)
11d21(5): call 0xfffffa9f(%rip)
11d26(5): mov 0x78(%rsp),%rax
11d2b(9): xor $0x28,%rax
11d34(2): jnz 0xc(%rip)
11d36(7): add $0xb8,%rsp
11d3d(1): pop %rbx
11d3e(1): pop %rbp
11d3f(1): ret near (%rsp)
11d40(5): call 0xffff0f60(%rip)
11d45(5): mov %r10d,0x8(%rsp)
11d4a(2): jmp 0xffffffd7(%rip)
11d4c(3): mov %rbx,%rax
11d4f(4): add $0x8,%rbx
11d53(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
11d60(1): push %rbx
11d61(7): lea 0x43e9(%rip),%rsi
11d68(5): mov $0x5,%edx
11d6d(2): xor %edi,%edi
11d6f(5): call 0xffff0f01(%rip)
11d74(7): lea 0x43eb(%rip),%rdx
11d7b(3): mov %rax,%rsi
11d7e(5): mov $0x1,%edi
11d83(2): xor %eax,%eax
11d85(5): call 0xffff121b(%rip)
11d8a(7): lea 0x43eb(%rip),%rsi
11d91(5): mov $0x5,%edx
11d96(2): xor %edi,%edi
11d98(5): call 0xffff0ed8(%rip)
11d9d(7): lea 0x3274(%rip),%rcx
11da4(7): lea 0x37ed(%rip),%rdx
11dab(3): mov %rax,%rsi
11dae(5): mov $0x1,%edi
11db3(2): xor %eax,%eax
11db5(5): call 0xffff11eb(%rip)
11dba(7): mov 0x208407(%rip),%rbx
11dc1(7): lea 0x45e0(%rip),%rsi
11dc8(2): xor %edi,%edi
11dca(5): mov $0x5,%edx
11dcf(5): call 0xffff0ea1(%rip)
11dd4(3): mov %rbx,%rsi
11dd7(3): mov %rax,%rdi
11dda(1): pop %rbx
11ddb(5): jmp 0xffff1035(%rip)

"xmalloc" :
11de0(1): push %rbx
11de1(3): mov %rdi,%rbx
11de4(5): call 0xffff13e4(%rip)
11de9(3): test %rax,%rax
11dec(2): jnz 0x7(%rip)
11dee(3): test %rbx,%rbx
11df1(2): jnz 0x4(%rip)
11df3(1): pop %rbx
11df4(1): ret near (%rsp)
11df5(5): call 0x23b(%rip)

"xnmalloc" :
11e00(3): mov %rdi,%rax
11e03(3): mul %rax,%rsi,%rdx
11e06(3): mov %rax,%rdi
11e09(3): seto %al
11e0c(3): test %rdi,%rdi
11e0f(2): js 0xc(%rip)
11e11(3): movzx %al,%eax
11e14(3): test %rax,%rax
11e17(2): jnz 0x4(%rip)
11e19(2): jmp 0xffffffc7(%rip)
11e1b(4): sub $0x8,%rsp
11e1f(5): call 0x211(%rip)

"xrealloc" :
11e40(3): test %rsi,%rsi
11e43(1): push %rbx
11e44(3): mov %rsi,%rbx
11e47(2): jnz 0x7(%rip)
11e49(3): test %rdi,%rdi
11e4c(2): jnz 0x1c(%rip)
11e4e(3): mov %rbx,%rsi
11e51(5): call 0xffff111f(%rip)
11e56(3): test %rax,%rax
11e59(2): jnz 0x7(%rip)
11e5b(3): test %rbx,%rbx
11e5e(2): jnz 0x13(%rip)
11e60(1): pop %rbx
11e61(1): ret near (%rsp)
11e62(6): nop 0x0(%rax,%rax,1)
11e68(5): call 0xffff1358(%rip)
11e6d(2): xor %eax,%eax
11e6f(1): pop %rbx
11e70(1): ret near (%rsp)
11e71(5): call 0x1bf(%rip)

"xnrealloc" :
11e80(3): mov %rsi,%rax
11e83(3): mul %rax,%rdx,%rdx
11e86(3): mov %rax,%rsi
11e89(3): seto %al
11e8c(3): test %rsi,%rsi
11e8f(2): js 0xc(%rip)
11e91(3): movzx %al,%eax
11e94(3): test %rax,%rax
11e97(2): jnz 0x4(%rip)
11e99(2): jmp 0xffffffa7(%rip)
11e9b(4): sub $0x8,%rsp
11e9f(5): call 0x191(%rip)

"x2nrealloc" :
11eb0(3): test %rdi,%rdi
11eb3(3): mov %rdx,%r9
11eb6(3): mov (%rsi),%rcx
11eb9(2): jz 0x37(%rip)
11ebb(2): xor %edx,%edx
11ebd(a): mov $0x6148914691236517204,%rax
11ec7(3): div %r9,%rax
11eca(3): cmp %rcx,%rax
11ecd(2): jbe 0x3e(%rip)
11ecf(3): mov %rcx,%rax
11ed2(3): shr $0x1,%rax
11ed5(5): lea 0x1(%rax,%rcx,1),%rcx
11eda(3): mov %rcx,(%rsi)
11edd(4): imul %r9,%rcx
11ee1(3): mov %rcx,%rsi
11ee4(5): jmp 0xffffff5c(%rip)
11ee9(7): nop 0x0(%rax)
11ef0(3): test %rcx,%rcx
11ef3(2): jz 0x25(%rip)
11ef5(3): mov %rcx,%rax
11ef8(3): mul %rax,%r9,%rdx
11efb(3): seto %dl
11efe(3): test %rax,%rax
11f01(3): movzx %dl,%edx
11f04(2): js 0x7(%rip)
11f06(3): test %rdx,%rdx
11f09(2): jz 0xffffffd1(%rip)
11f0b(4): sub $0x8,%rsp
11f0f(5): call 0x121(%rip)
11f14(4): nop 0x0(%rax)
11f18(2): xor %edx,%edx
11f1a(5): mov $0x80,%eax
11f1f(3): xor %r8d,%r8d
11f22(3): div %r9,%rax
11f25(3): test %rax,%rax
11f28(4): setz %r8b
11f2c(4): lea 0x0(%r8,%rax,1),%rcx
11f30(2): jmp 0xffffffc5(%rip)

"x2realloc" :
11f40(3): test %rdi,%rdi
11f43(3): mov (%rsi),%rax
11f46(2): jz 0x2a(%rip)
11f48(a): mov $0x6148914691236517203,%rdx
11f52(3): cmp %rdx,%rax
11f55(2): jnbe 0x2c(%rip)
11f57(3): mov %rax,%rdx
11f5a(3): shr $0x1,%rdx
11f5d(5): lea 0x1(%rdx,%rax,1),%rax
11f62(3): mov %rax,(%rsi)
11f65(3): mov %rax,%rsi
11f68(5): jmp 0xfffffed8(%rip)
11f6d(3): nop (%rax)
11f70(3): test %rax,%rax
11f73(5): mov $0x80,%edx
11f78(4): cmove %rdx,%rax
11f7c(3): test %rax,%rax
11f7f(2): jns 0xffffffe3(%rip)
11f81(4): sub $0x8,%rsp
11f85(5): call 0xab(%rip)

"xzalloc" :
11f90(1): push %rbx
11f91(3): mov %rdi,%rbx
11f94(5): call 0xfffffe4c(%rip)
11f99(3): mov %rbx,%rdx
11f9c(2): xor %esi,%esi
11f9e(3): mov %rax,%rdi
11fa1(1): pop %rbx
11fa2(5): jmp 0xffff0dee(%rip)

"xcalloc" :
11fb0(3): mov %rdi,%rax
11fb3(4): sub $0x8,%rsp
11fb7(3): mul %rax,%rsi,%rdx
11fba(3): seto %dl
11fbd(3): test %rax,%rax
11fc0(2): js 0x19(%rip)
11fc2(3): movzx %dl,%edx
11fc5(3): test %rdx,%rdx
11fc8(2): jnz 0x11(%rip)
11fca(5): call 0xffff0e56(%rip)
11fcf(3): test %rax,%rax
11fd2(2): jz 0x7(%rip)
11fd4(4): add $0x8,%rsp
11fd8(1): ret near (%rsp)
11fd9(5): call 0x57(%rip)

"xmemdup" :
11fe0(1): push %rbp
11fe1(1): push %rbx
11fe2(3): mov %rdi,%rbp
11fe5(3): mov %rsi,%rdi
11fe8(3): mov %rsi,%rbx
11feb(4): sub $0x8,%rsp
11fef(5): call 0xfffffdf1(%rip)
11ff4(4): add $0x8,%rsp
11ff8(3): mov %rbx,%rdx
11ffb(3): mov %rbp,%rsi
11ffe(1): pop %rbx
11fff(1): pop %rbp
12000(3): mov %rax,%rdi
12003(5): jmp 0xffff0e7d(%rip)

"xstrdup" :
12010(1): push %rbx
12011(3): mov %rdi,%rbx
12014(5): call 0xffff0c7c(%rip)
12019(3): mov %rbx,%rdi
1201c(4): lea 0x1(%rax),%rsi
12020(1): pop %rbx
12021(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
12030(7): lea 0x4418(%rip),%rsi
12037(4): sub $0x8,%rsp
1203b(5): mov $0x5,%edx
12040(2): xor %edi,%edi
12042(5): call 0xffff0c2e(%rip)
12047(6): mov 0x2080e3(%rip),%edi
1204d(7): lea 0x3a00(%rip),%rdx
12054(3): mov %rax,%rcx
12057(2): xor %esi,%esi
12059(2): xor %eax,%eax
1205b(5): call 0xffff0f85(%rip)
12060(5): call 0xffff0aa0(%rip)

"collate_error" :
12070(2): push %r14
12072(2): push %r13
12074(3): mov %edi,%r14d
12077(2): push %r12
12079(1): push %rbp
1207a(3): mov %rdx,%r12
1207d(1): push %rbx
1207e(3): mov %rsi,%rbx
12081(7): lea 0x43d8(%rip),%rsi
12088(5): mov $0x5,%edx
1208d(2): xor %edi,%edi
1208f(3): mov %r8,%r13
12092(3): mov %rcx,%rbp
12095(5): call 0xffff0bdb(%rip)
1209a(3): mov %r14d,%esi
1209d(3): mov %rax,%rdx
120a0(2): xor %edi,%edi
120a2(2): xor %eax,%eax
120a4(5): call 0xffff0f3c(%rip)
120a9(7): lea 0x43d0(%rip),%rsi
120b0(5): mov $0x5,%edx
120b5(2): xor %edi,%edi
120b7(5): call 0xffff0bb9(%rip)
120bc(2): xor %esi,%esi
120be(3): mov %rax,%rdx
120c1(2): xor %edi,%edi
120c3(2): xor %eax,%eax
120c5(5): call 0xffff0f1b(%rip)
120ca(3): mov %r13,%rcx
120cd(3): mov %rbp,%rdx
120d0(5): mov $0x8,%esi
120d5(5): mov $0x1,%edi
120da(5): call 0xffffdf56(%rip)
120df(3): mov %r12,%rcx
120e2(3): mov %rbx,%rdx
120e5(5): mov $0x8,%esi
120ea(2): xor %edi,%edi
120ec(3): mov %rax,%rbp
120ef(5): call 0xffffdf41(%rip)
120f4(7): lea 0x43b5(%rip),%rsi
120fb(3): mov %rax,%rbx
120fe(5): mov $0x5,%edx
12103(2): xor %edi,%edi
12105(5): call 0xffff0b6b(%rip)
1210a(3): mov %rbp,%r8
1210d(3): mov %rbx,%rcx
12110(6): mov 0x20801a(%rip),%edi
12116(1): pop %rbx
12117(1): pop %rbp
12118(2): pop %r12
1211a(2): pop %r13
1211c(2): pop %r14
1211e(3): mov %rax,%rdx
12121(2): xor %esi,%esi
12123(2): xor %eax,%eax
12125(5): jmp 0xffff0ebb(%rip)

"xmemcoll" :
12130(2): push %r14
12132(2): push %r13
12134(3): mov %rcx,%r13
12137(2): push %r12
12139(1): push %rbp
1213a(3): mov %rdx,%r12
1213d(1): push %rbx
1213e(3): mov %rsi,%rbp
12141(3): mov %rdi,%rbx
12144(5): call 0x155c(%rip)
12149(3): mov %eax,%r14d
1214c(5): call 0xffff09c4(%rip)
12151(2): mov (%rax),%edi
12153(2): test %edi,%edi
12155(2): jz 0x13(%rip)
12157(3): mov %r13,%r8
1215a(3): mov %r12,%rcx
1215d(3): mov %rbp,%rdx
12160(3): mov %rbx,%rsi
12163(5): call 0xffffff0d(%rip)
12168(1): pop %rbx
12169(3): mov %r14d,%eax
1216c(1): pop %rbp
1216d(2): pop %r12
1216f(2): pop %r13
12171(2): pop %r14
12173(1): ret near (%rsp)

"xmemcoll0" :
12180(2): push %r14
12182(2): push %r13
12184(3): mov %rcx,%r14
12187(2): push %r12
12189(1): push %rbp
1218a(3): mov %rdx,%r12
1218d(1): push %rbx
1218e(3): mov %rdi,%rbp
12191(3): mov %rsi,%rbx
12194(5): call 0x15bc(%rip)
12199(3): mov %eax,%r13d
1219c(5): call 0xffff0974(%rip)
121a1(2): mov (%rax),%edi
121a3(2): test %edi,%edi
121a5(2): jz 0x15(%rip)
121a7(4): lea 0xffffffff(%rbx),%rdx
121ab(4): lea 0xffffffff(%r14),%r8
121af(3): mov %r12,%rcx
121b2(3): mov %rbp,%rsi
121b5(5): call 0xfffffebb(%rip)
121ba(1): pop %rbx
121bb(3): mov %r13d,%eax
121be(1): pop %rbp
121bf(2): pop %r12
121c1(2): pop %r13
121c3(2): pop %r14
121c5(1): ret near (%rsp)

"xnanosleep" :
121d0(1): push %rbp
121d1(1): push %rbx
121d2(4): sub $0x28,%rsp
121d6(9): mov $0x28,%rax
121df(5): mov %rax,0x18(%rsp)
121e4(2): xor %eax,%eax
121e6(3): mov %rsp,%rbp
121e9(5): call 0x11f7(%rip)
121ee(4): mov %rax,(%rsp)
121f2(5): mov %rdx,0x8(%rsp)
121f7(5): call 0xffff0919(%rip)
121fc(3): mov %rax,%rbx
121ff(2): jmp 0x11(%rip)
12201(7): nop 0x0(%rax)
12208(6): test $0xfffffffb,(%rbx)
1220e(2): jnz 0x32(%rip)
12210(2): xor %esi,%esi
12212(6): mov $0x0,(%rbx)
12218(3): mov %rbp,%rdi
1221b(5): call 0xd55(%rip)
12220(2): test %eax,%eax
12222(2): jnz 0xffffffe6(%rip)
12224(5): mov 0x18(%rsp),%rdx
12229(9): xor $0x28,%rdx
12232(2): jnz 0x15(%rip)
12234(4): add $0x28,%rsp
12238(1): pop %rbx
12239(1): pop %rbp
1223a(1): ret near (%rsp)
1223b(5): nop 0x0(%rax,%rax,1)
12240(5): mov $0xffffffff,%eax
12245(2): jmp 0xffffffdf(%rip)
12247(5): call 0xffff0a59(%rip)

"xstrtoul" :
12250(2): push %r15
12252(2): push %r14
12254(2): push %r13
12256(2): push %r12
12258(1): push %rbp
12259(1): push %rbx
1225a(4): sub $0x28,%rsp
1225e(9): mov $0x28,%rax
12267(5): mov %rax,0x18(%rsp)
1226c(2): xor %eax,%eax
1226e(3): cmp $0x24,%edx
12271(6): jnbe 0x364(%rip)
12277(5): lea 0x10(%rsp),%rax
1227c(3): mov %rsi,%r15
1227f(3): test %rsi,%rsi
12282(3): mov %rdi,%rbp
12285(4): mov %edx,0x8(%rsp)
12289(3): mov %rcx,%r14
1228c(3): mov %r8,%r13
1228f(4): cmove %rax,%r15
12293(5): call 0xffff087d(%rip)
12298(6): mov $0x0,(%rax)
1229e(3): mov %rax,%r12
122a1(4): movzx 0x0(%rbp),%ebx
122a5(5): call 0xffff0f0b(%rip)
122aa(4): mov 0x8(%rsp),%edx
122ae(3): mov (%rax),%rsi
122b1(3): mov %rbp,%rax
122b4(2): jmp 0x13(%rip)
122b6(a): nop 0x0(%rax,%rax,1)
122c0(4): add $0x1,%rax
122c4(3): movzx (%rax),%ebx
122c7(3): movzx %bl,%ecx
122ca(5): test $0x20,0x1(%rsi,%rcx,2)
122cf(2): jnz 0xfffffff1(%rip)
122d1(3): cmp $0x2d,%bl
122d4(2): jz 0x54(%rip)
122d6(3): mov %r15,%rsi
122d9(3): mov %rbp,%rdi
122dc(5): call 0xffff0da4(%rip)
122e1(3): mov (%r15),%rcx
122e4(3): mov %rax,%rbx
122e7(3): cmp %rbp,%rcx
122ea(2): jz 0x2e(%rip)
122ec(4): mov (%r12),%eax
122f0(2): test %eax,%eax
122f2(2): jz 0x66(%rip)
122f4(3): cmp $0x22,%eax
122f7(5): mov $0x1,%ebp
122fc(2): jnz 0x2c(%rip)
122fe(3): test %r13,%r13
12301(2): jz 0xb(%rip)
12303(4): movzx (%rcx),%r12d
12307(3): test %r12b,%r12b
1230a(2): jnz 0x7d(%rip)
1230c(3): mov %rbx,(%r14)
1230f(2): jmp 0x1e(%rip)
12311(7): nop 0x0(%rax)
12318(3): test %r13,%r13
1231b(5): mov %rcx,0x8(%rsp)
12320(2): jnz 0x40(%rip)
12322(6): nop 0x0(%rax,%rax,1)
12328(5): mov $0x4,%ebp
1232d(5): mov 0x18(%rsp),%rdi
12332(9): xor $0x28,%rdi
1233b(2): mov %ebp,%eax
1233d(6): jnz 0x293(%rip)
12343(4): add $0x28,%rsp
12347(1): pop %rbx
12348(1): pop %rbp
12349(2): pop %r12
1234b(2): pop %r13
1234d(2): pop %r14
1234f(2): pop %r15
12351(1): ret near (%rsp)
12352(6): nop 0x0(%rax,%rax,1)
12358(2): xor %ebp,%ebp
1235a(2): jmp 0xffffffa4(%rip)
1235c(4): nop 0x0(%rax)
12360(5): movzx 0x0(%rbp),%r12d
12365(3): test %r12b,%r12b
12368(2): jz 0xffffffc0(%rip)
1236a(4): movsx %r12b,%esi
1236e(3): mov %r13,%rdi
12371(2): xor %ebp,%ebp
12373(5): call 0xffff097d(%rip)
12378(3): test %rax,%rax
1237b(5): mov $0x1,%ebx
12380(5): mov 0x8(%rsp),%rcx
12385(2): jz 0xffffffa3(%rip)
12387(4): movsx %r12b,%esi
1238b(3): mov %r13,%rdi
1238e(5): mov %rcx,0x8(%rsp)
12393(5): call 0xffff095d(%rip)
12398(3): test %rax,%rax
1239b(5): mov 0x8(%rsp),%rcx
123a0(6): jz 0xcc(%rip)
123a6(5): lea 0xffffffbb(%r12),%eax
123ab(2): cmp $0x2f,%al
123ad(2): jnbe 0x53(%rip)
123af(a): mov $0x142129060940101,%rdx
123b9(4): bt %rax,%rdx
123bd(2): jnb 0x43(%rip)
123bf(5): mov $0x30,%esi
123c4(3): mov %r13,%rdi
123c7(5): mov %rcx,0x8(%rsp)
123cc(5): call 0xffff0924(%rip)
123d1(3): test %rax,%rax
123d4(5): mov 0x8(%rsp),%rcx
123d9(2): jz 0x27(%rip)
123db(4): movzx 0x1(%rcx),%eax
123df(2): cmp $0x44,%al
123e1(2): jz 0xe(%rip)
123e3(2): cmp $0x69,%al
123e5(6): jz 0x1d3(%rip)
123eb(2): cmp $0x42,%al
123ed(2): jnz 0x13(%rip)
123ef(5): mov $0x2,%edi
123f4(5): mov $0x3e8,%esi
123f9(2): jmp 0x11(%rip)
123fb(5): nop 0x0(%rax,%rax,1)
12400(5): mov $0x1,%edi
12405(5): mov $0x400,%esi
1240a(4): sub $0x42,%r12d
1240e(4): cmp $0x35,%r12b
12412(2): jnbe 0x5a(%rip)
12414(7): lea 0x4105(%rip),%rdx
1241b(4): movzx %r12b,%r12d
1241f(4): movsxd 0x0(%rdx,%r12,4),%rax
12423(3): add %rdx,%rax
12426(2): jmp %rax
12428(3): mov %rbx,%rax
1242b(3): mul %rax,%rsi,%rdx
1242e(6): jo 0x1f3(%rip)
12434(3): xor %r8d,%r8d
12437(3): mul %rax,%rsi,%rdx
1243a(6): jo 0x1d8(%rip)
12440(3): mov %rax,%rbx
12443(3): or %r8d,%ebp
12446(a): nop 0x0(%rax,%rax,1)
12450(3): movsxd %edi,%rdi
12453(2): mov %ebp,%eax
12455(3): add %rdi,%rcx
12458(3): or $0x2,%eax
1245b(3): mov %rcx,(%r15)
1245e(3): cmp $0x0,(%rcx)
12461(3): mov %rbx,(%r14)
12464(3): cmovne %eax,%ebp
12467(5): jmp 0xfffffec6(%rip)
1246c(3): mov %rbx,(%r14)
1246f(3): or $0x2,%ebp
12472(5): jmp 0xfffffebb(%rip)
12477(5): mov $0x2,%edx
1247c(3): mov %rdx,%rax
1247f(3): mul %rax,%rbx,%rdx
12482(6): jo 0x9c(%rip)
12488(3): add %rbx,%rbx
1248b(2): jmp 0xffffffc5(%rip)
1248d(5): mov $0x200,%edx
12492(3): mov %rdx,%rax
12495(3): mul %rax,%rbx,%rdx
12498(6): jo 0x86(%rip)
1249e(4): shl/sal $0x9,%rbx
124a2(2): jmp 0xffffffae(%rip)
124a4(6): mov $0x7,%r8d
124aa(3): xor %r9d,%r9d
124ad(3): nop (%rax)
124b0(3): mov %rbx,%rax
124b3(3): mul %rax,%rsi,%rdx
124b6(3): mov %rax,%rbx
124b9(6): jo 0x195(%rip)
124bf(4): sub $0x1,%r8d
124c3(2): jnz 0xffffffed(%rip)
124c5(3): or %r9d,%ebp
124c8(2): jmp 0xffffff88(%rip)
124ca(6): mov $0x8,%r8d
124d0(3): xor %r9d,%r9d
124d3(5): nop 0x0(%rax,%rax,1)
124d8(3): mov %rbx,%rax
124db(3): mul %rax,%rsi,%rdx
124de(3): mov %rax,%rbx
124e1(6): jo 0x14f(%rip)
124e7(4): sub $0x1,%r8d
124eb(2): jnz 0xffffffed(%rip)
124ed(2): jmp 0xffffffd8(%rip)
124ef(6): mov $0x4,%r8d
124f5(3): xor %r9d,%r9d
124f8(3): mov %rbx,%rax
124fb(3): mul %rax,%rsi,%rdx
124fe(3): mov %rax,%rbx
12501(6): jo 0x102(%rip)
12507(4): sub $0x1,%r8d
1250b(2): jnz 0xffffffed(%rip)
1250d(2): jmp 0xffffffb8(%rip)
1250f(3): mov %rbx,%rax
12512(3): mul %rax,%rsi,%rdx
12515(3): mov %rax,%rbx
12518(6): jno 0xffffff38(%rip)
1251e(5): mov $0x1,%ebp
12523(4): or $0xffffffff,%rbx
12527(5): jmp 0xffffff29(%rip)
1252c(4): nop 0x0(%rax)
12530(6): mov $0x5,%r8d
12536(3): xor %r9d,%r9d
12539(3): mov %rbx,%rax
1253c(3): mul %rax,%rsi,%rdx
1253f(3): mov %rax,%rbx
12542(6): jo 0xfd(%rip)
12548(4): sub $0x1,%r8d
1254c(2): jnz 0xffffffed(%rip)
1254e(5): jmp 0xffffff77(%rip)
12553(6): mov $0x6,%r8d
12559(3): xor %r9d,%r9d
1255c(3): mov %rbx,%rax
1255f(3): mul %rax,%rsi,%rdx
12562(3): mov %rax,%rbx
12565(6): jo 0x8f(%rip)
1256b(4): sub $0x1,%r8d
1256f(2): jnz 0xffffffed(%rip)
12571(5): jmp 0xffffff54(%rip)
12576(5): mov $0x400,%edx
1257b(3): mov %rdx,%rax
1257e(3): mul %rax,%rbx,%rdx
12581(2): jo 0xffffff9d(%rip)
12583(4): shl/sal $0xa,%rbx
12587(5): jmp 0xfffffec9(%rip)
1258c(3): mov %rbx,%rax
1258f(3): mul %rax,%rsi,%rdx
12592(6): jo 0xcb(%rip)
12598(3): xor %r8d,%r8d
1259b(3): mul %rax,%rsi,%rdx
1259e(6): jno 0xfffffe99(%rip)
125a4(6): mov $0x1,%r8d
125aa(4): or $0xffffffff,%rax
125ae(5): jmp 0xfffffe89(%rip)
125b3(5): nop 0x0(%rax,%rax,1)
125b8(2): xor %edi,%edi
125ba(4): cmp $0x42,0x2(%rcx)
125be(5): mov $0x400,%esi
125c3(4): setz %dil
125c7(4): lea 0x1(%rdi,%rdi,1),%edi
125cb(5): jmp 0xfffffe3f(%rip)
125d0(5): call 0xffff06d0(%rip)
125d5(7): lea 0x401c(%rip),%rcx
125dc(7): lea 0x3ef5(%rip),%rsi
125e3(7): lea 0x3f0e(%rip),%rdi
125ea(5): mov $0x54,%edx
125ef(5): call 0xffff0781(%rip)
125f4(6): mov $0x1,%r9d
125fa(4): or $0xffffffff,%rbx
125fe(5): jmp 0xffffff6d(%rip)
12603(6): mov $0x1,%r9d
12609(4): or $0xffffffff,%rbx
1260d(5): jmp 0xfffffefa(%rip)
12612(6): mov $0x1,%r8d
12618(4): or $0xffffffff,%rbx
1261c(5): jmp 0xfffffe27(%rip)
12621(4): or $0xffffffff,%rax
12625(6): mov $0x1,%r8d
1262b(5): jmp 0xfffffe0c(%rip)
12630(6): mov $0x1,%r9d
12636(4): or $0xffffffff,%rbx
1263a(5): jmp 0xfffffead(%rip)
1263f(6): mov $0x1,%r9d
12645(4): or $0xffffffff,%rbx
12649(5): jmp 0xfffffeff(%rip)
1264e(6): mov $0x1,%r9d
12654(4): or $0xffffffff,%rbx
12658(5): jmp 0xfffffe67(%rip)
1265d(6): mov $0x1,%r8d
12663(4): or $0xffffffff,%rax
12667(5): jmp 0xffffff34(%rip)

"xstrtol_fatal" :
12670(2): push %r13
12672(2): push %r12
12674(3): mov %esi,%r10d
12677(1): push %rbp
12678(1): push %rbx
12679(3): mov %r8,%r12
1267c(4): sub $0x18,%rsp
12680(9): mov $0x28,%rax
12689(5): mov %rax,0x8(%rsp)
1268e(2): xor %eax,%eax
12690(3): cmp $0x3,%edi
12693(6): mov 0x207a97(%rip),%ebp
12699(2): jnbe 0x5b(%rip)
1269b(3): cmp $0x2,%edi
1269e(2): jnb 0x4d(%rip)
126a0(3): sub $0x1,%edi
126a3(7): lea 0x3f72(%rip),%rsi
126aa(2): jnz 0x3c(%rip)
126ac(3): test %r10d,%r10d
126af(3): movsxd %r10d,%rax
126b2(2): js 0x50(%rip)
126b4(4): shl/sal $0x5,%rax
126b8(7): lea 0x3f7a(%rip),%rbx
126bf(4): mov 0x0(%rcx,%rax,1),%r13
126c3(5): mov $0x5,%edx
126c8(2): xor %edi,%edi
126ca(5): call 0xffff05a6(%rip)
126cf(3): mov %r12,%r9
126d2(3): mov %rax,%rdx
126d5(3): mov %r13,%r8
126d8(3): mov %rbx,%rcx
126db(2): xor %esi,%esi
126dd(2): mov %ebp,%edi
126df(2): xor %eax,%eax
126e1(5): call 0xffff08ff(%rip)
126e6(5): call 0xffff041a(%rip)
126eb(7): lea 0x3f4e(%rip),%rsi
126f2(2): jmp 0xffffffba(%rip)
126f4(3): cmp $0x4,%edi
126f7(7): lea 0x3f03(%rip),%rsi
126fe(2): jz 0xffffffae(%rip)
12700(2): jmp 0xffffffe6(%rip)
12702(7): lea 0x3f30(%rip),%rbx
12709(4): mov %dl,0x6(%rsp)
1270d(5): mov $0x0,0x7(%rsp)
12712(5): lea 0x6(%rsp),%r13
12717(3): sub %rax,%rbx
1271a(2): jmp 0xffffffa9(%rip)

"xstrtoumax" :
12720(2): push %r15
12722(2): push %r14
12724(2): push %r13
12726(2): push %r12
12728(1): push %rbp
12729(1): push %rbx
1272a(4): sub $0x28,%rsp
1272e(9): mov $0x28,%rax
12737(5): mov %rax,0x18(%rsp)
1273c(2): xor %eax,%eax
1273e(3): cmp $0x24,%edx
12741(6): jnbe 0x364(%rip)
12747(5): lea 0x10(%rsp),%rax
1274c(3): mov %rsi,%r15
1274f(3): test %rsi,%rsi
12752(3): mov %rdi,%rbp
12755(4): mov %edx,0x8(%rsp)
12759(3): mov %rcx,%r14
1275c(3): mov %r8,%r13
1275f(4): cmove %rax,%r15
12763(5): call 0xffff03ad(%rip)
12768(6): mov $0x0,(%rax)
1276e(3): mov %rax,%r12
12771(4): movzx 0x0(%rbp),%ebx
12775(5): call 0xffff0a3b(%rip)
1277a(4): mov 0x8(%rsp),%edx
1277e(3): mov (%rax),%rsi
12781(3): mov %rbp,%rax
12784(2): jmp 0x13(%rip)
12786(a): nop 0x0(%rax,%rax,1)
12790(4): add $0x1,%rax
12794(3): movzx (%rax),%ebx
12797(3): movzx %bl,%ecx
1279a(5): test $0x20,0x1(%rsi,%rcx,2)
1279f(2): jnz 0xfffffff1(%rip)
127a1(3): cmp $0x2d,%bl
127a4(2): jz 0x54(%rip)
127a6(2): xor %ecx,%ecx
127a8(3): mov %r15,%rsi
127ab(3): mov %rbp,%rdi
127ae(5): call 0xffff05d2(%rip)
127b3(3): mov (%r15),%rcx
127b6(3): mov %rax,%rbx
127b9(3): cmp %rbp,%rcx
127bc(2): jz 0x2c(%rip)
127be(4): mov (%r12),%eax
127c2(2): test %eax,%eax
127c4(2): jz 0x64(%rip)
127c6(3): cmp $0x22,%eax
127c9(5): mov $0x1,%ebp
127ce(2): jnz 0x2a(%rip)
127d0(3): test %r13,%r13
127d3(2): jz 0xb(%rip)
127d5(4): movzx (%rcx),%r12d
127d9(3): test %r12b,%r12b
127dc(2): jnz 0x7b(%rip)
127de(3): mov %rbx,(%r14)
127e1(2): jmp 0x1c(%rip)
127e3(5): nop 0x0(%rax,%rax,1)
127e8(3): test %r13,%r13
127eb(5): mov %rcx,0x8(%rsp)
127f0(2): jnz 0x40(%rip)
127f2(6): nop 0x0(%rax,%rax,1)
127f8(5): mov $0x4,%ebp
127fd(5): mov 0x18(%rsp),%rdi
12802(9): xor $0x28,%rdi
1280b(2): mov %ebp,%eax
1280d(6): jnz 0x293(%rip)
12813(4): add $0x28,%rsp
12817(1): pop %rbx
12818(1): pop %rbp
12819(2): pop %r12
1281b(2): pop %r13
1281d(2): pop %r14
1281f(2): pop %r15
12821(1): ret near (%rsp)
12822(6): nop 0x0(%rax,%rax,1)
12828(2): xor %ebp,%ebp
1282a(2): jmp 0xffffffa6(%rip)
1282c(4): nop 0x0(%rax)
12830(5): movzx 0x0(%rbp),%r12d
12835(3): test %r12b,%r12b
12838(2): jz 0xffffffc0(%rip)
1283a(4): movsx %r12b,%esi
1283e(3): mov %r13,%rdi
12841(2): xor %ebp,%ebp
12843(5): call 0xffff04ad(%rip)
12848(3): test %rax,%rax
1284b(5): mov $0x1,%ebx
12850(5): mov 0x8(%rsp),%rcx
12855(2): jz 0xffffffa3(%rip)
12857(4): movsx %r12b,%esi
1285b(3): mov %r13,%rdi
1285e(5): mov %rcx,0x8(%rsp)
12863(5): call 0xffff048d(%rip)
12868(3): test %rax,%rax
1286b(5): mov 0x8(%rsp),%rcx
12870(6): jz 0xcc(%rip)
12876(5): lea 0xffffffbb(%r12),%eax
1287b(2): cmp $0x2f,%al
1287d(2): jnbe 0x53(%rip)
1287f(a): mov $0x142129060940101,%rdx
12889(4): bt %rax,%rdx
1288d(2): jnb 0x43(%rip)
1288f(5): mov $0x30,%esi
12894(3): mov %r13,%rdi
12897(5): mov %rcx,0x8(%rsp)
1289c(5): call 0xffff0454(%rip)
128a1(3): test %rax,%rax
128a4(5): mov 0x8(%rsp),%rcx
128a9(2): jz 0x27(%rip)
128ab(4): movzx 0x1(%rcx),%eax
128af(2): cmp $0x44,%al
128b1(2): jz 0xe(%rip)
128b3(2): cmp $0x69,%al
128b5(6): jz 0x1d3(%rip)
128bb(2): cmp $0x42,%al
128bd(2): jnz 0x13(%rip)
128bf(5): mov $0x2,%edi
128c4(5): mov $0x3e8,%esi
128c9(2): jmp 0x11(%rip)
128cb(5): nop 0x0(%rax,%rax,1)
128d0(5): mov $0x1,%edi
128d5(5): mov $0x400,%esi
128da(4): sub $0x42,%r12d
128de(4): cmp $0x35,%r12b
128e2(2): jnbe 0x5a(%rip)
128e4(7): lea 0x3d7d(%rip),%rdx
128eb(4): movzx %r12b,%r12d
128ef(4): movsxd 0x0(%rdx,%r12,4),%rax
128f3(3): add %rdx,%rax
128f6(2): jmp %rax
128f8(3): mov %rbx,%rax
128fb(3): mul %rax,%rsi,%rdx
128fe(6): jo 0x1f3(%rip)
12904(3): xor %r8d,%r8d
12907(3): mul %rax,%rsi,%rdx
1290a(6): jo 0x1d8(%rip)
12910(3): mov %rax,%rbx
12913(3): or %r8d,%ebp
12916(a): nop 0x0(%rax,%rax,1)
12920(3): movsxd %edi,%rdi
12923(2): mov %ebp,%eax
12925(3): add %rdi,%rcx
12928(3): or $0x2,%eax
1292b(3): mov %rcx,(%r15)
1292e(3): cmp $0x0,(%rcx)
12931(3): mov %rbx,(%r14)
12934(3): cmovne %eax,%ebp
12937(5): jmp 0xfffffec6(%rip)
1293c(3): mov %rbx,(%r14)
1293f(3): or $0x2,%ebp
12942(5): jmp 0xfffffebb(%rip)
12947(5): mov $0x2,%edx
1294c(3): mov %rdx,%rax
1294f(3): mul %rax,%rbx,%rdx
12952(6): jo 0x9c(%rip)
12958(3): add %rbx,%rbx
1295b(2): jmp 0xffffffc5(%rip)
1295d(5): mov $0x200,%edx
12962(3): mov %rdx,%rax
12965(3): mul %rax,%rbx,%rdx
12968(6): jo 0x86(%rip)
1296e(4): shl/sal $0x9,%rbx
12972(2): jmp 0xffffffae(%rip)
12974(6): mov $0x7,%r8d
1297a(3): xor %r9d,%r9d
1297d(3): nop (%rax)
12980(3): mov %rbx,%rax
12983(3): mul %rax,%rsi,%rdx
12986(3): mov %rax,%rbx
12989(6): jo 0x195(%rip)
1298f(4): sub $0x1,%r8d
12993(2): jnz 0xffffffed(%rip)
12995(3): or %r9d,%ebp
12998(2): jmp 0xffffff88(%rip)
1299a(6): mov $0x8,%r8d
129a0(3): xor %r9d,%r9d
129a3(5): nop 0x0(%rax,%rax,1)
129a8(3): mov %rbx,%rax
129ab(3): mul %rax,%rsi,%rdx
129ae(3): mov %rax,%rbx
129b1(6): jo 0x14f(%rip)
129b7(4): sub $0x1,%r8d
129bb(2): jnz 0xffffffed(%rip)
129bd(2): jmp 0xffffffd8(%rip)
129bf(6): mov $0x4,%r8d
129c5(3): xor %r9d,%r9d
129c8(3): mov %rbx,%rax
129cb(3): mul %rax,%rsi,%rdx
129ce(3): mov %rax,%rbx
129d1(6): jo 0x102(%rip)
129d7(4): sub $0x1,%r8d
129db(2): jnz 0xffffffed(%rip)
129dd(2): jmp 0xffffffb8(%rip)
129df(3): mov %rbx,%rax
129e2(3): mul %rax,%rsi,%rdx
129e5(3): mov %rax,%rbx
129e8(6): jno 0xffffff38(%rip)
129ee(5): mov $0x1,%ebp
129f3(4): or $0xffffffff,%rbx
129f7(5): jmp 0xffffff29(%rip)
129fc(4): nop 0x0(%rax)
12a00(6): mov $0x5,%r8d
12a06(3): xor %r9d,%r9d
12a09(3): mov %rbx,%rax
12a0c(3): mul %rax,%rsi,%rdx
12a0f(3): mov %rax,%rbx
12a12(6): jo 0xfd(%rip)
12a18(4): sub $0x1,%r8d
12a1c(2): jnz 0xffffffed(%rip)
12a1e(5): jmp 0xffffff77(%rip)
12a23(6): mov $0x6,%r8d
12a29(3): xor %r9d,%r9d
12a2c(3): mov %rbx,%rax
12a2f(3): mul %rax,%rsi,%rdx
12a32(3): mov %rax,%rbx
12a35(6): jo 0x8f(%rip)
12a3b(4): sub $0x1,%r8d
12a3f(2): jnz 0xffffffed(%rip)
12a41(5): jmp 0xffffff54(%rip)
12a46(5): mov $0x400,%edx
12a4b(3): mov %rdx,%rax
12a4e(3): mul %rax,%rbx,%rdx
12a51(2): jo 0xffffff9d(%rip)
12a53(4): shl/sal $0xa,%rbx
12a57(5): jmp 0xfffffec9(%rip)
12a5c(3): mov %rbx,%rax
12a5f(3): mul %rax,%rsi,%rdx
12a62(6): jo 0xcb(%rip)
12a68(3): xor %r8d,%r8d
12a6b(3): mul %rax,%rsi,%rdx
12a6e(6): jno 0xfffffe99(%rip)
12a74(6): mov $0x1,%r8d
12a7a(4): or $0xffffffff,%rax
12a7e(5): jmp 0xfffffe89(%rip)
12a83(5): nop 0x0(%rax,%rax,1)
12a88(2): xor %edi,%edi
12a8a(4): cmp $0x42,0x2(%rcx)
12a8e(5): mov $0x400,%esi
12a93(4): setz %dil
12a97(4): lea 0x1(%rdi,%rdi,1),%edi
12a9b(5): jmp 0xfffffe3f(%rip)
12aa0(5): call 0xffff0200(%rip)
12aa5(7): lea 0x3c94(%rip),%rcx
12aac(7): lea 0x3a25(%rip),%rsi
12ab3(7): lea 0x3a3e(%rip),%rdi
12aba(5): mov $0x54,%edx
12abf(5): call 0xffff02b1(%rip)
12ac4(6): mov $0x1,%r9d
12aca(4): or $0xffffffff,%rbx
12ace(5): jmp 0xffffff6d(%rip)
12ad3(6): mov $0x1,%r9d
12ad9(4): or $0xffffffff,%rbx
12add(5): jmp 0xfffffefa(%rip)
12ae2(6): mov $0x1,%r8d
12ae8(4): or $0xffffffff,%rbx
12aec(5): jmp 0xfffffe27(%rip)
12af1(4): or $0xffffffff,%rax
12af5(6): mov $0x1,%r8d
12afb(5): jmp 0xfffffe0c(%rip)
12b00(6): mov $0x1,%r9d
12b06(4): or $0xffffffff,%rbx
12b0a(5): jmp 0xfffffead(%rip)
12b0f(6): mov $0x1,%r9d
12b15(4): or $0xffffffff,%rbx
12b19(5): jmp 0xfffffeff(%rip)
12b1e(6): mov $0x1,%r9d
12b24(4): or $0xffffffff,%rbx
12b28(5): jmp 0xfffffe67(%rip)
12b2d(6): mov $0x1,%r8d
12b33(4): or $0xffffffff,%rax
12b37(5): jmp 0xffffff34(%rip)

"rpl_fclose" :
12b40(2): push %r12
12b42(1): push %rbp
12b43(1): push %rbx
12b44(3): mov %rdi,%rbx
12b47(5): call 0xffff0349(%rip)
12b4c(2): test %eax,%eax
12b4e(3): mov %rbx,%rdi
12b51(2): js 0x56(%rip)
12b53(5): call 0xffff03fd(%rip)
12b58(2): test %eax,%eax
12b5a(2): jnz 0x2e(%rip)
12b5c(3): mov %rbx,%rdi
12b5f(5): call 0x2e1(%rip)
12b64(2): test %eax,%eax
12b66(2): jz 0x3e(%rip)
12b68(5): call 0xfffeffa8(%rip)
12b6d(3): mov (%rax),%r12d
12b70(3): mov %rbx,%rdi
12b73(3): mov %rax,%rbp
12b76(5): call 0xffff00ca(%rip)
12b7b(3): test %r12d,%r12d
12b7e(2): jnz 0x32(%rip)
12b80(1): pop %rbx
12b81(1): pop %rbp
12b82(2): pop %r12
12b84(1): ret near (%rsp)
12b85(3): nop (%rax)
12b88(3): mov %rbx,%rdi
12b8b(5): call 0xffff0305(%rip)
12b90(2): xor %esi,%esi
12b92(5): mov $0x1,%edx
12b97(2): mov %eax,%edi
12b99(5): call 0xffff01b7(%rip)
12b9e(4): cmp $0xffffffff,%rax
12ba2(2): jnz 0xffffffba(%rip)
12ba4(3): mov %rbx,%rdi
12ba7(1): pop %rbx
12ba8(1): pop %rbp
12ba9(2): pop %r12
12bab(5): jmp 0xffff0095(%rip)
12bb0(4): mov %r12d,0x0(%rbp)
12bb4(5): mov $0xffffffff,%eax
12bb9(2): jmp 0xffffffc7(%rip)

"rpl_fcntl" :
12bc0(2): push %r12
12bc2(1): push %rbp
12bc3(2): mov %edi,%ebp
12bc5(1): push %rbx
12bc6(4): sub $0x50,%rsp
12bca(9): mov $0x28,%rax
12bd3(5): mov %rax,0x18(%rsp)
12bd8(2): xor %eax,%eax
12bda(5): lea 0x70(%rsp),%rax
12bdf(2): test %esi,%esi
12be1(5): mov %rdx,0x30(%rsp)
12be6(5): mov %rcx,0x38(%rsp)
12beb(5): mov %r8,0x40(%rsp)
12bf0(5): mov %rax,0x8(%rsp)
12bf5(5): lea 0x20(%rsp),%rax
12bfa(5): mov %r9,0x48(%rsp)
12bff(7): mov $0x10,(%rsp)
12c06(5): mov %rax,0x10(%rsp)
12c0b(6): jz 0x207(%rip)
12c11(6): cmp $0x406,%esi
12c17(2): jnz 0x49(%rip)
12c19(5): mov 0x10(%rsp),%rax
12c1e(7): cmp $0x0,0x207dd3(%rip)
12c25(7): mov $0x18,(%rsp)
12c2c(4): mov 0x10(%rax),%r12d
12c30(3): mov %r12d,%edx
12c33(6): js 0x130(%rip)
12c39(2): xor %eax,%eax
12c3b(5): mov $0x406,%esi
12c40(5): call 0xfffeff90(%rip)
12c45(2): test %eax,%eax
12c47(2): mov %eax,%ebx
12c49(6): js 0x18f(%rip)
12c4f(a): mov $0x1,0x207d9f(%rip)
12c59(2): jmp 0x47(%rip)
12c5b(5): nop 0x0(%rax,%rax,1)
12c60(3): cmp $0xb,%esi
12c63(2): jz 0x2d(%rip)
12c65(2): jnle 0x5b(%rip)
12c67(3): cmp $0x4,%esi
12c6a(6): jz 0xd6(%rip)
12c70(6): jnle 0xc0(%rip)
12c76(3): cmp $0x2,%esi
12c79(6): jz 0xc7(%rip)
12c7f(2): jnle 0x11(%rip)
12c81(3): cmp $0x1,%esi
12c84(2): jnz 0x64(%rip)
12c86(a): nop 0x0(%rax,%rax,1)
12c90(2): mov %ebp,%edi
12c92(2): xor %eax,%eax
12c94(5): call 0xfffeff3c(%rip)
12c99(2): mov %eax,%ebx
12c9b(5): nop 0x0(%rax,%rax,1)
12ca0(5): mov 0x18(%rsp),%rcx
12ca5(9): xor $0x28,%rcx
12cae(2): mov %ebx,%eax
12cb0(6): jnz 0x15d(%rip)
12cb6(4): add $0x50,%rsp
12cba(1): pop %rbx
12cbb(1): pop %rbp
12cbc(2): pop %r12
12cbe(1): ret near (%rsp)
12cbf(1): nop 
12cc0(6): cmp $0x407,%esi
12cc6(2): jnle 0x4a(%rip)
12cc8(6): cmp $0x406,%esi
12cce(2): jnl 0x72(%rip)
12cd0(6): cmp $0x401,%esi
12cd6(2): jz 0xffffffba(%rip)
12cd8(6): cmp $0x402,%esi
12cde(2): jz 0x62(%rip)
12ce0(6): cmp $0x400,%esi
12ce6(2): jz 0x5a(%rip)
12ce8(3): mov (%rsp),%eax
12ceb(3): cmp $0x2f,%eax
12cee(6): jnbe 0x13c(%rip)
12cf4(5): add 0x10(%rsp),%rax
12cf9(3): mov (%rax),%rdx
12cfc(2): mov %ebp,%edi
12cfe(2): xor %eax,%eax
12d00(5): call 0xfffefed0(%rip)
12d05(2): mov %eax,%ebx
12d07(2): jmp 0xffffff99(%rip)
12d09(7): nop 0x0(%rax)
12d10(6): cmp $0x409,%esi
12d16(2): jz 0x2a(%rip)
12d18(6): jl 0xffffff78(%rip)
12d1e(6): cmp $0x40a,%esi
12d24(2): jnz 0xffffffc4(%rip)
12d26(5): jmp 0xffffff6a(%rip)
12d2b(5): nop 0x0(%rax,%rax,1)
12d30(3): cmp $0x9,%esi
12d33(6): jz 0xffffff5d(%rip)
12d39(2): jnle 0x7(%rip)
12d3b(3): cmp $0x8,%esi
12d3e(2): jnz 0xffffffaa(%rip)
12d40(3): mov (%rsp),%eax
12d43(3): cmp $0x2f,%eax
12d46(6): jnbe 0xee(%rip)
12d4c(5): add 0x10(%rsp),%rax
12d51(2): mov (%rax),%edx
12d53(2): mov %ebp,%edi
12d55(2): xor %eax,%eax
12d57(5): call 0xfffefe79(%rip)
12d5c(2): mov %eax,%ebx
12d5e(5): jmp 0xffffff42(%rip)
12d63(2): xor %esi,%esi
12d65(2): xor %eax,%eax
12d67(5): call 0xfffefe69(%rip)
12d6c(2): test %eax,%eax
12d6e(2): mov %eax,%ebx
12d70(6): js 0xffffff30(%rip)
12d76(7): cmp $0xff,0x207c7b(%rip)
12d7d(6): jnz 0xffffff23(%rip)
12d83(2): xor %eax,%eax
12d85(5): mov $0x1,%esi
12d8a(2): mov %ebx,%edi
12d8c(5): call 0xfffefe44(%rip)
12d91(2): test %eax,%eax
12d93(2): js 0x1e(%rip)
12d95(3): or $0x1,%eax
12d98(5): mov $0x2,%esi
12d9d(2): mov %ebx,%edi
12d9f(2): mov %eax,%edx
12da1(2): xor %eax,%eax
12da3(5): call 0xfffefe2d(%rip)
12da8(3): cmp $0xff,%eax
12dab(6): jnz 0xfffffef5(%rip)
12db1(5): call 0xfffefd5f(%rip)
12db6(3): mov (%rax),%r12d
12db9(3): mov %rax,%rbp
12dbc(2): mov %ebx,%edi
12dbe(5): call 0xfffefff2(%rip)
12dc3(5): mov $0xffffffff,%ebx
12dc8(4): mov %r12d,0x0(%rbp)
12dcc(5): jmp 0xfffffed4(%rip)
12dd1(7): nop 0x0(%rax)
12dd8(5): call 0xfffefd38(%rip)
12ddd(3): cmp $0x16,(%rax)
12de0(6): jnz 0xfffffe6f(%rip)
12de6(2): xor %esi,%esi
12de8(2): xor %eax,%eax
12dea(3): mov %r12d,%edx
12ded(2): mov %ebp,%edi
12def(5): call 0xfffefde1(%rip)
12df4(2): test %eax,%eax
12df6(2): mov %eax,%ebx
12df8(6): js 0xfffffea8(%rip)
12dfe(a): mov $0xffffffff,0x207bf0(%rip)
12e08(5): jmp 0xffffff7b(%rip)
12e0d(5): call 0xfffefe93(%rip)
12e12(5): mov 0x10(%rsp),%rax
12e17(2): xor %esi,%esi
12e19(3): mov 0x10(%rax),%edx
12e1c(2): xor %eax,%eax
12e1e(5): call 0xfffefdb2(%rip)
12e23(2): mov %eax,%ebx
12e25(5): jmp 0xfffffe7b(%rip)
12e2a(5): mov 0x8(%rsp),%rax
12e2f(5): jmp 0xfffffeca(%rip)
12e34(5): mov 0x8(%rsp),%rax
12e39(5): jmp 0xffffff18(%rip)

"rpl_fflush" :
12e40(3): test %rdi,%rdi
12e43(1): push %rbx
12e44(3): mov %rdi,%rbx
12e47(2): jz 0x13(%rip)
12e49(5): call 0xffff0107(%rip)
12e4e(2): test %eax,%eax
12e50(2): jz 0xa(%rip)
12e52(6): test $0x100,(%rbx)
12e58(2): jnz 0x10(%rip)
12e5a(3): mov %rbx,%rdi
12e5d(1): pop %rbx
12e5e(5): jmp 0xffff00a2(%rip)
12e63(5): nop 0x0(%rax,%rax,1)
12e68(3): mov %rbx,%rdi
12e6b(5): mov $0x1,%edx
12e70(2): xor %esi,%esi
12e72(5): call 0xe(%rip)
12e77(3): mov %rbx,%rdi
12e7a(1): pop %rbx
12e7b(5): jmp 0xffff0085(%rip)

"rpl_fseeko" :
12e80(4): mov 0x8(%rdi),%rax
12e84(4): cmp %rax,0x10(%rdi)
12e88(2): jz 0x8(%rip)
12e8a(5): jmp 0xffff0196(%rip)
12e8f(1): nop 
12e90(4): mov 0x20(%rdi),%rax
12e94(4): cmp %rax,0x28(%rdi)
12e98(2): jnz 0xfffffff2(%rip)
12e9a(5): cmp $0x0,0x48(%rdi)
12e9f(2): jnz 0xffffffeb(%rip)
12ea1(2): push %r12
12ea3(1): push %rbp
12ea4(3): mov %edx,%r12d
12ea7(1): push %rbx
12ea8(3): mov %rsi,%rbp
12eab(3): mov %rdi,%rbx
12eae(5): call 0xfffeffe2(%rip)
12eb3(3): mov %r12d,%edx
12eb6(3): mov %rbp,%rsi
12eb9(2): mov %eax,%edi
12ebb(5): call 0xfffefe95(%rip)
12ec0(4): cmp $0xffffffff,%rax
12ec4(2): jz 0xe(%rip)
12ec6(3): and $0xef,(%rbx)
12ec9(7): mov %rax,0x90(%rbx)
12ed0(2): xor %eax,%eax
12ed2(1): pop %rbx
12ed3(1): pop %rbp
12ed4(2): pop %r12
12ed6(1): ret near (%rsp)

"rpl_mbrtowc" :
12ee0(2): push %r13
12ee2(2): push %r12
12ee4(3): mov %rsi,%r13
12ee7(1): push %rbp
12ee8(1): push %rbx
12ee9(3): mov %rdi,%rbx
12eec(3): mov %rdx,%r12
12eef(4): sub $0x18,%rsp
12ef3(9): mov $0x28,%rax
12efc(5): mov %rax,0x8(%rsp)
12f01(2): xor %eax,%eax
12f03(5): lea 0x4(%rsp),%rax
12f08(3): test %rdi,%rdi
12f0b(4): cmove %rax,%rbx
12f0f(3): mov %rbx,%rdi
12f12(5): call 0xfffefdbe(%rip)
12f17(4): cmp $0xfffffffd,%rax
12f1b(3): mov %rax,%rbp
12f1e(2): jbe 0x22(%rip)
12f20(3): test %r12,%r12
12f23(2): jz 0x1d(%rip)
12f25(2): xor %edi,%edi
12f27(5): call 0xffff96b9(%rip)
12f2c(2): test %al,%al
12f2e(2): jnz 0x12(%rip)
12f30(5): movzx 0x0(%r13),%eax
12f35(5): mov $0x1,%ebp
12f3a(2): mov %eax,(%rbx)
12f3c(4): nop 0x0(%rax)
12f40(5): mov 0x8(%rsp),%rdx
12f45(9): xor $0x28,%rdx
12f4e(3): mov %rbp,%rax
12f51(2): jnz 0xd(%rip)
12f53(4): add $0x18,%rsp
12f57(1): pop %rbx
12f58(1): pop %rbp
12f59(2): pop %r12
12f5b(2): pop %r13
12f5d(1): ret near (%rsp)
12f5e(5): call 0xfffefd42(%rip)

"rpl_nanosleep" :
12f70(2): push %r12
12f72(1): push %rbp
12f73(1): push %rbx
12f74(4): sub $0x20,%rsp
12f78(9): mov $0x28,%rax
12f81(5): mov %rax,0x18(%rsp)
12f86(2): xor %eax,%eax
12f88(4): mov 0x8(%rdi),%rax
12f8c(6): cmp $0x3b9ac9ff,%rax
12f92(6): jnbe 0x8e(%rip)
12f98(3): mov (%rdi),%rbx
12f9b(3): mov %rsi,%rbp
12f9e(5): mov %rax,0x8(%rsp)
12fa3(3): mov %rsp,%r12
12fa6(7): cmp $0x1fa400,%rbx
12fad(2): jnle 0x1d(%rip)
12faf(2): jmp 0x49(%rip)
12fb1(7): nop 0x0(%rax)
12fb8(7): cmp $0x1fa400,%rbx
12fbf(9): mov $0x0,0x8(%rsp)
12fc8(2): jle 0x30(%rip)
12fca(3): mov %rbp,%rsi
12fcd(3): mov %r12,%rdi
12fd0(8): mov $0x1fa400,(%rsp)
12fd8(7): sub $0x1fa400,%rbx
12fdf(5): call 0xfffefd21(%rip)
12fe4(2): test %eax,%eax
12fe6(2): jz 0xffffffd2(%rip)
12fe8(3): test %rbp,%rbp
12feb(2): jz 0x1c(%rip)
12fed(4): add %rbx,0x0(%rbp)
12ff1(2): jmp 0x16(%rip)
12ff3(5): nop 0x0(%rax,%rax,1)
12ff8(3): mov %rbp,%rsi
12ffb(3): mov %r12,%rdi
12ffe(4): mov %rbx,(%rsp)
13002(5): call 0xfffefcfe(%rip)
13007(5): mov 0x18(%rsp),%rdx
1300c(9): xor $0x28,%rdx
13015(2): jnz 0x1d(%rip)
13017(4): add $0x20,%rsp
1301b(1): pop %rbx
1301c(1): pop %rbp
1301d(2): pop %r12
1301f(1): ret near (%rsp)
13020(5): call 0xfffefaf0(%rip)
13025(6): mov $0x16,(%rax)
1302b(5): mov $0xffffffff,%eax
13030(2): jmp 0xffffffd7(%rip)
13032(5): call 0xfffefc6e(%rip)

"print_and_abort" :
13040(7): lea 0x3408(%rip),%rsi
13047(4): sub $0x8,%rsp
1304b(5): mov $0x5,%edx
13050(2): xor %edi,%edi
13052(5): call 0xfffefc1e(%rip)
13057(7): mov 0x2071a2(%rip),%rdi
1305e(7): lea 0x309a(%rip),%rdx
13065(3): mov %rax,%rcx
13068(5): mov $0x1,%esi
1306d(2): xor %eax,%eax
1306f(5): call 0xffff0091(%rip)
13074(6): mov 0x2070b6(%rip),%edi
1307a(5): call 0xffff0066(%rip)

"call_chunkfun" :
13080(4): test $0x1,0x50(%rdi)
13084(4): mov 0x38(%rdi),%rax
13088(2): jnz 0x8(%rip)
1308a(3): mov %rsi,%rdi
1308d(2): jmp %rax
1308f(1): nop 
13090(4): mov 0x48(%rdi),%rdi
13094(2): jmp %rax

"call_freefun" :
130a0(4): test $0x1,0x50(%rdi)
130a4(4): mov 0x40(%rdi),%rax
130a8(2): jnz 0x8(%rip)
130aa(3): mov %rsi,%rdi
130ad(2): jmp %rax
130af(1): nop 
130b0(4): mov 0x48(%rdi),%rdi
130b4(2): jmp %rax

"_obstack_begin_worker" :
130c0(3): test %rdx,%rdx
130c3(2): push %r12
130c5(1): push %rbp
130c6(1): push %rbx
130c7(3): mov %rdi,%rbx
130ca(2): jz 0x66(%rip)
130cc(4): lea 0xffffffff(%rdx),%r12
130d0(3): mov %rdx,%rbp
130d3(3): test %rsi,%rsi
130d6(5): mov $0xfe0,%eax
130db(4): mov %r12,0x30(%rbx)
130df(4): cmove %rax,%rsi
130e3(3): mov %rbx,%rdi
130e6(3): mov %rsi,(%rbx)
130e9(5): call 0xffffff97(%rip)
130ee(3): test %rax,%rax
130f1(4): mov %rax,0x8(%rbx)
130f5(2): jz 0x48(%rip)
130f7(5): lea 0x10(%rax,%r12,1),%rdx
130fc(3): neg %rbp
130ff(3): and %rdx,%rbp
13102(3): mov (%rbx),%rdx
13105(4): mov %rbp,0x10(%rbx)
13109(4): mov %rbp,0x18(%rbx)
1310d(3): add %rax,%rdx
13110(3): mov %rdx,(%rax)
13113(4): mov %rdx,0x20(%rbx)
13117(8): mov $0x0,0x8(%rax)
1311f(5): mov $0x1,%eax
13124(4): and $0xf9,0x50(%rbx)
13128(1): pop %rbx
13129(1): pop %rbp
1312a(2): pop %r12
1312c(1): ret near (%rsp)
1312d(3): nop (%rax)
13130(6): mov $0xf,%r12d
13136(5): mov $0x10,%ebp
1313b(2): jmp 0xffffff98(%rip)
1313d(6): call 0x20705d(%rip)
13143(3): nop (%rax)
13146(a): nop 0x0(%rax,%rax,1)
13150(4): and $0xfe,0x50(%rdi)
13154(4): mov %rcx,0x38(%rdi)
13158(4): mov %r8,0x40(%rdi)
1315c(5): jmp 0xffffff64(%rip)

"_obstack_begin" :
13150(4): and $0xfe,0x50(%rdi)
13154(4): mov %rcx,0x38(%rdi)
13158(4): mov %r8,0x40(%rdi)
1315c(5): jmp 0xffffff64(%rip)

"_obstack_begin_1" :
13170(4): or $0x1,0x50(%rdi)
13174(4): mov %rcx,0x38(%rdi)
13178(4): mov %r8,0x40(%rdi)
1317c(4): mov %r9,0x48(%rdi)
13180(5): jmp 0xffffff40(%rip)

"_obstack_newchunk" :
13190(2): push %r14
13192(2): push %r13
13194(2): xor %edx,%edx
13196(2): push %r12
13198(1): push %rbp
13199(1): push %rbx
1319a(4): mov 0x18(%rdi),%rbx
1319e(4): sub 0x10(%rdi),%rbx
131a2(4): mov 0x8(%rdi),%rbp
131a6(3): add %rbx,%rsi
131a9(3): mov %rbx,%rcx
131ac(3): setb %dl
131af(4): add 0x30(%rdi),%rsi
131b3(3): setb %al
131b6(4): shr $0x3,%rcx
131ba(3): cmp %rsi,(%rdi)
131bd(5): lea 0x64(%rsi,%rcx,1),%r12
131c2(4): cmovnb (%rdi),%rsi
131c6(3): cmp %r12,%rsi
131c9(4): cmovnb %rsi,%r12
131cd(3): test %rdx,%rdx
131d0(6): jnz 0xa5(%rip)
131d6(3): movzx %al,%eax
131d9(3): test %rax,%rax
131dc(6): jnz 0x99(%rip)
131e2(3): mov %r12,%rsi
131e5(3): mov %rdi,%r13
131e8(5): call 0xfffffe98(%rip)
131ed(3): test %rax,%rax
131f0(3): mov %rax,%r14
131f3(6): jz 0x82(%rip)
131f9(4): lea 0x0(%rax,%r12,1),%rsi
131fd(4): mov %rax,0x8(%r13)
13201(4): mov %rbp,0x8(%rax)
13205(3): mov %rbx,%rdx
13208(4): mov %rsi,0x20(%r13)
1320c(3): mov %rsi,(%rax)
1320f(4): mov 0x30(%r13),%rax
13213(4): mov 0x10(%r13),%rsi
13217(5): lea 0x10(%r14,%rax,1),%r12
1321c(3): not %rax
1321f(3): and %rax,%r12
13222(3): mov %r12,%rdi
13225(5): call 0xfffefc5b(%rip)
1322a(5): test $0x2,0x50(%r13)
1322f(2): jnz 0x17(%rip)
13231(4): mov 0x30(%r13),%rax
13235(5): lea 0x10(%rbp,%rax,1),%rdx
1323a(3): not %rax
1323d(3): and %rdx,%rax
13240(4): cmp %rax,0x10(%r13)
13244(2): jz 0x1c(%rip)
13246(5): and $0xfd,0x50(%r13)
1324b(3): add %r12,%rbx
1324e(4): mov %r12,0x10(%r13)
13252(4): mov %rbx,0x18(%r13)
13256(1): pop %rbx
13257(1): pop %rbp
13258(2): pop %r12
1325a(2): pop %r13
1325c(2): pop %r14
1325e(1): ret near (%rsp)
1325f(1): nop 
13260(4): mov 0x8(%rbp),%rax
13264(3): mov %rbp,%rsi
13267(3): mov %r13,%rdi
1326a(4): mov %rax,0x8(%r14)
1326e(5): call 0xfffffe32(%rip)
13273(2): jmp 0xffffffd3(%rip)
13275(6): call 0x206f25(%rip)
1327b(5): nop 0x0(%rax,%rax,1)
13280(4): mov 0x8(%rdi),%rax
13284(3): test %rax,%rax
13287(2): jz 0x2f(%rip)
13289(7): nop 0x0(%rax)
13290(3): cmp %rax,%rsi
13293(2): jbe 0x7(%rip)
13295(3): cmp %rsi,(%rax)
13298(2): jnb 0x18(%rip)
1329a(4): mov 0x8(%rax),%rax
1329e(3): test %rax,%rax
132a1(2): jnz 0xffffffef(%rip)
132a3(2): xor %eax,%eax
132a5(1): ret near (%rsp)
132a6(a): nop 0x0(%rax,%rax,1)
132b0(5): mov $0x1,%eax
132b5(1): ret near (%rsp)
132b6(2): REP ret near (%rsp)

"_obstack_allocated_p" :
13280(4): mov 0x8(%rdi),%rax
13284(3): test %rax,%rax
13287(2): jz 0x2f(%rip)
13289(7): nop 0x0(%rax)
13290(3): cmp %rax,%rsi
13293(2): jbe 0x7(%rip)
13295(3): cmp %rsi,(%rax)
13298(2): jnb 0x18(%rip)
1329a(4): mov 0x8(%rax),%rax
1329e(3): test %rax,%rax
132a1(2): jnz 0xffffffef(%rip)
132a3(2): xor %eax,%eax
132a5(1): ret near (%rsp)
132a6(a): nop 0x0(%rax,%rax,1)
132b0(5): mov $0x1,%eax
132b5(1): ret near (%rsp)
132b6(2): REP ret near (%rsp)

"_obstack_free" :
132c0(2): push %r12
132c2(1): push %rbp
132c3(3): mov %rsi,%rbp
132c6(1): push %rbx
132c7(4): mov 0x8(%rdi),%rsi
132cb(3): mov %rdi,%rbx
132ce(3): test %rsi,%rsi
132d1(2): jz 0x2c(%rip)
132d3(5): nop 0x0(%rax,%rax,1)
132d8(3): cmp %rbp,%rsi
132db(2): jnb 0xa(%rip)
132dd(3): mov (%rsi),%rax
132e0(3): cmp %rbp,%rax
132e3(2): jnb 0x2d(%rip)
132e5(4): mov 0x8(%rsi),%r12
132e9(3): mov %rbx,%rdi
132ec(5): call 0xfffffdb4(%rip)
132f1(4): or $0x2,0x50(%rbx)
132f5(3): test %r12,%r12
132f8(3): mov %r12,%rsi
132fb(2): jnz 0xffffffdd(%rip)
132fd(3): test %rbp,%rbp
13300(2): jnz 0x25(%rip)
13302(1): pop %rbx
13303(1): pop %rbp
13304(2): pop %r12
13306(1): ret near (%rsp)
13307(9): nop 0x0(%rax,%rax,1)
13310(4): mov %rbp,0x18(%rbx)
13314(4): mov %rbp,0x10(%rbx)
13318(4): mov %rax,0x20(%rbx)
1331c(4): mov %rsi,0x8(%rbx)
13320(1): pop %rbx
13321(1): pop %rbp
13322(2): pop %r12
13324(1): ret near (%rsp)
13325(5): call 0xfffef7db(%rip)

"_obstack_memory_used" :
13330(4): mov 0x8(%rdi),%rdx
13334(2): xor %eax,%eax
13336(3): test %rdx,%rdx
13339(2): jz 0x1f(%rip)
1333b(5): nop 0x0(%rax,%rax,1)
13340(3): mov (%rdx),%rcx
13343(3): sub %rdx,%rcx
13346(4): mov 0x8(%rdx),%rdx
1334a(3): add %rcx,%rax
1334d(3): test %rdx,%rdx
13350(2): jnz 0xfffffff0(%rip)
13352(2): REP ret near (%rsp)
13354(4): nop 0x0(%rax)
13358(2): REP ret near (%rsp)

"close_stream" :
13360(2): push %r12
13362(1): push %rbp
13363(3): mov %rdi,%rbp
13366(1): push %rbx
13367(5): call 0xfffef7f9(%rip)
1336c(3): mov 0x0(%rbp),%ebx
1336f(3): mov %rbp,%rdi
13372(3): mov %rax,%r12
13375(5): call 0xfffff7cb(%rip)
1337a(3): and $0x20,%ebx
1337d(2): test %ebx,%ebx
1337f(2): jnz 0x19(%rip)
13381(2): test %eax,%eax
13383(2): jz 0xc(%rip)
13385(3): test %r12,%r12
13388(5): mov $0xffffffff,%eax
1338d(2): jz 0x3b(%rip)
1338f(1): pop %rbx
13390(1): pop %rbp
13391(2): pop %r12
13393(1): ret near (%rsp)
13394(4): nop 0x0(%rax)
13398(2): test %eax,%eax
1339a(2): jnz 0x1e(%rip)
1339c(5): call 0xfffef774(%rip)
133a1(6): mov $0x0,(%rax)
133a7(5): mov $0xffffffff,%eax
133ac(1): pop %rbx
133ad(1): pop %rbp
133ae(2): pop %r12
133b0(1): ret near (%rsp)
133b1(7): nop 0x0(%rax)
133b8(1): pop %rbx
133b9(5): mov $0xffffffff,%eax
133be(1): pop %rbp
133bf(2): pop %r12
133c1(1): ret near (%rsp)
133c2(6): nop 0x0(%rax,%rax,1)
133c8(5): call 0xfffef748(%rip)
133cd(3): cmp $0x9,(%rax)
133d0(1): pop %rbx
133d1(1): pop %rbp
133d2(2): pop %r12
133d4(3): setnz %al
133d7(3): movzx %al,%eax
133da(2): neg %eax
133dc(1): ret near (%rsp)

"dtotimespec" :
133e0(8): ucomisd 0x3368(%rip),%xmm0
133e8(6): jbe 0x98(%rip)
133ee(8): movsd 0x25ea(%rip),%xmm1
133f6(4): ucomisd %xmm0,%xmm1
133fa(2): jbe 0x6e(%rip)
133fc(5): cvttsd2si %xmm0,%rsi
13401(4): pxor %xmm1,%xmm1
13405(2): xor %ecx,%ecx
13407(5): cvtsi2sd %rsi,%xmm1
1340c(4): subsd %xmm1,%xmm0
13410(4): pxor %xmm1,%xmm1
13414(8): mulsd 0x333c(%rip),%xmm0
1341c(5): cvttsd2si %xmm0,%rdx
13421(5): cvtsi2sd %rdx,%xmm1
13426(4): ucomisd %xmm1,%xmm0
1342a(3): setnbe %cl
1342d(3): add %rdx,%rcx
13430(a): mov $0x1237940039285380275,%rdx
1343a(3): mov %rcx,%rax
1343d(3): imul %rax,%rdx,%rdx
13440(3): mov %rcx,%rax
13443(4): sar $0x3f,%rax
13447(4): sar $0x1a,%rdx
1344b(3): sub %rax,%rdx
1344e(4): lea 0x0(%rdx,%rsi,1),%rax
13452(7): imul %rdx,$0x3b9aca00,%rdx
13459(3): sub %rdx,%rcx
1345c(3): mov %rcx,%rdx
1345f(2): js 0x31(%rip)
13461(2): REP ret near (%rsp)
13463(5): nop 0x0(%rax,%rax,1)
13468(a): mov $0x9223372036854775807,%rax
13472(5): mov $0x3b9ac9ff,%edx
13477(1): ret near (%rsp)
13478(8): nop 0x0(%rax,%rax,1)
13480(a): mov $0x-9223372036854775808,%rax
1348a(2): xor %edx,%edx
1348c(1): ret near (%rsp)
1348d(3): nop (%rax)
13490(4): sub $0x1,%rax
13494(7): add $0x3b9aca00,%rdx
1349b(1): ret near (%rsp)

"fd_safer_flag" :
134a0(2): push %r13
134a2(2): push %r12
134a4(1): push %rbp
134a5(1): push %rbx
134a6(2): mov %edi,%ebx
134a8(4): sub $0x8,%rsp
134ac(3): cmp $0x2,%edi
134af(2): jnbe 0x23(%rip)
134b1(5): call 0x2f(%rip)
134b6(3): mov %eax,%r12d
134b9(5): call 0xfffef657(%rip)
134be(3): mov (%rax),%r13d
134c1(3): mov %rax,%rbp
134c4(2): mov %ebx,%edi
134c6(5): call 0xfffef8ea(%rip)
134cb(3): mov %r12d,%ebx
134ce(4): mov %r13d,0x0(%rbp)
134d2(4): add $0x8,%rsp
134d6(2): mov %ebx,%eax
134d8(1): pop %rbx
134d9(1): pop %rbp
134da(2): pop %r12
134dc(2): pop %r13
134de(1): ret near (%rsp)

"dup_safer_flag" :
134e0(6): and $0x80000,%esi
134e6(5): mov $0x406,%eax
134eb(5): mov $0x3,%edx
134f0(3): cmovne %eax,%esi
134f3(2): xor %eax,%eax
134f5(5): jmp 0xfffff6cb(%rip)

"fopen_safer" :
13500(2): push %r12
13502(1): push %rbp
13503(3): mov %rsi,%rbp
13506(1): push %rbx
13507(5): call 0xfffefb29(%rip)
1350c(3): test %rax,%rax
1350f(3): mov %rax,%rbx
13512(2): jz 0xf(%rip)
13514(3): mov %rax,%rdi
13517(5): call 0xfffef979(%rip)
1351c(3): cmp $0x2,%eax
1351f(2): jbe 0x11(%rip)
13521(3): mov %rbx,%rax
13524(1): pop %rbx
13525(1): pop %rbp
13526(2): pop %r12
13528(1): ret near (%rsp)
13529(7): nop 0x0(%rax)
13530(2): mov %eax,%edi
13532(5): call 0x27e(%rip)
13537(2): test %eax,%eax
13539(3): mov %eax,%r12d
1353c(2): js 0x3c(%rip)
1353e(3): mov %rbx,%rdi
13541(5): call 0xfffff5ff(%rip)
13546(2): test %eax,%eax
13548(2): jnz 0x15(%rip)
1354a(3): mov %rbp,%rsi
1354d(3): mov %r12d,%edi
13550(5): call 0xfffefa30(%rip)
13555(3): test %rax,%rax
13558(3): mov %rax,%rbx
1355b(2): jnz 0xffffffc6(%rip)
1355d(5): call 0xfffef5b3(%rip)
13562(2): mov (%rax),%ebp
13564(3): mov %rax,%rbx
13567(3): mov %r12d,%edi
1356a(5): call 0xfffef846(%rip)
1356f(2): mov %ebp,(%rbx)
13571(2): xor %ebx,%ebx
13573(2): jmp 0xffffffae(%rip)
13575(3): nop (%rax)
13578(5): call 0xfffef598(%rip)
1357d(3): mov (%rax),%r12d
13580(3): mov %rax,%rbp
13583(3): mov %rbx,%rdi
13586(5): call 0xfffff5ba(%rip)
1358b(2): xor %ebx,%ebx
1358d(4): mov %r12d,0x0(%rbp)
13591(2): jmp 0xffffff90(%rip)

"locale_charset" :
135a0(4): sub $0x8,%rsp
135a4(5): mov $0xe,%edi
135a9(5): call 0xfffef967(%rip)
135ae(3): test %rax,%rax
135b1(2): jz 0x1f(%rip)
135b3(3): cmp $0x0,(%rax)
135b6(7): lea 0x31a3(%rip),%rdx
135bd(4): cmove %rdx,%rax
135c1(4): add $0x8,%rsp
135c5(1): ret near (%rsp)
135c6(a): nop 0x0(%rax,%rax,1)
135d0(7): lea 0x3189(%rip),%rax
135d7(4): add $0x8,%rsp
135db(1): ret near (%rsp)

"strcoll_loop" :
135e0(2): push %r15
135e2(2): push %r14
135e4(3): mov %rcx,%r14
135e7(2): push %r13
135e9(2): push %r12
135eb(3): mov %rsi,%r13
135ee(1): push %rbp
135ef(1): push %rbx
135f0(3): mov %rdi,%r12
135f3(3): mov %rdx,%rbp
135f6(4): sub $0x8,%rsp
135fa(5): call 0xfffef516(%rip)
135ff(3): mov %rax,%r15
13602(2): jmp 0x31(%rip)
13604(4): nop 0x0(%rax)
13608(3): mov %r12,%rdi
1360b(5): call 0xfffef685(%rip)
13610(3): mov %rbp,%rdi
13613(4): lea 0x1(%rax),%rbx
13617(5): call 0xfffef679(%rip)
1361c(4): add $0x1,%rax
13620(3): add %rbx,%r12
13623(3): add %rax,%rbp
13626(3): sub %rax,%r14
13629(3): sub %rbx,%r13
1362c(2): jz 0x34(%rip)
1362e(3): test %r14,%r14
13631(2): jz 0x4f(%rip)
13633(7): mov $0x0,(%r15)
1363a(3): mov %rbp,%rsi
1363d(3): mov %r12,%rdi
13640(5): call 0xfffef8f0(%rip)
13645(2): test %eax,%eax
13647(2): jz 0xffffffc1(%rip)
13649(4): add $0x8,%rsp
1364d(1): pop %rbx
1364e(1): pop %rbp
1364f(2): pop %r12
13651(2): pop %r13
13653(2): pop %r14
13655(2): pop %r15
13657(1): ret near (%rsp)
13658(8): nop 0x0(%rax,%rax,1)
13660(2): xor %eax,%eax
13662(3): test %r14,%r14
13665(3): setnz %al
13668(4): add $0x8,%rsp
1366c(1): pop %rbx
1366d(2): neg %eax
1366f(1): pop %rbp
13670(2): pop %r12
13672(2): pop %r13
13674(2): pop %r14
13676(2): pop %r15
13678(1): ret near (%rsp)
13679(7): nop 0x0(%rax)
13680(4): add $0x8,%rsp
13684(5): mov $0x1,%eax
13689(1): pop %rbx
1368a(1): pop %rbp
1368b(2): pop %r12
1368d(2): pop %r13
1368f(2): pop %r14
13691(2): pop %r15
13693(1): ret near (%rsp)

"memcoll" :
136a0(2): push %r15
136a2(2): push %r14
136a4(3): mov %rdx,%r15
136a7(2): push %r13
136a9(2): push %r12
136ab(3): mov %rdi,%r14
136ae(1): push %rbp
136af(1): push %rbx
136b0(3): mov %rcx,%rbp
136b3(3): mov %rsi,%rbx
136b6(4): sub $0x18,%rsp
136ba(3): cmp %rcx,%rsi
136bd(2): jnz 0x15(%rip)
136bf(3): mov %rsi,%rdx
136c2(3): mov %r15,%rsi
136c5(5): call 0xfffef72b(%rip)
136ca(2): test %eax,%eax
136cc(4): mov %eax,0x8(%rsp)
136d0(2): jz 0x68(%rip)
136d2(4): lea 0x0(%r14,%rbx,1),%r13
136d6(4): lea 0x0(%r15,%rbp,1),%r12
136da(4): lea 0x1(%rbp),%rcx
136de(4): lea 0x1(%rbx),%rsi
136e2(3): mov %r15,%rdx
136e5(3): mov %r14,%rdi
136e8(5): movzx 0x0(%r13),%r9d
136ed(5): movzx (%r12),%r8d
136f2(5): mov $0x0,0x0(%r13)
136f7(5): mov $0x0,(%r12)
136fc(5): mov %r9b,0xf(%rsp)
13701(5): mov %r8b,0x8(%rsp)
13706(5): call 0xfffffeda(%rip)
1370b(6): movzx 0xf(%rsp),%r9d
13711(6): movzx 0x8(%rsp),%r8d
13717(2): mov %eax,%edx
13719(4): mov %r9b,0x0(%r13)
1371d(4): mov %r8b,(%r12)
13721(4): add $0x18,%rsp
13725(2): mov %edx,%eax
13727(1): pop %rbx
13728(1): pop %rbp
13729(2): pop %r12
1372b(2): pop %r13
1372d(2): pop %r14
1372f(2): pop %r15
13731(1): ret near (%rsp)
13732(6): nop 0x0(%rax,%rax,1)
13738(5): call 0xfffef3d8(%rip)
1373d(4): mov 0x8(%rsp),%edx
13741(6): mov $0x0,(%rax)
13747(2): jmp 0xffffffda(%rip)

"memcoll0" :
13750(2): push %r12
13752(1): push %rbp
13753(3): mov %rdx,%r12
13756(1): push %rbx
13757(3): mov %rdi,%rbp
1375a(3): mov %rsi,%rbx
1375d(4): sub $0x10,%rsp
13761(3): cmp %rcx,%rsi
13764(2): jnz 0x1b(%rip)
13766(3): mov %rsi,%rdx
13769(3): mov %r12,%rsi
1376c(5): mov %rcx,0x8(%rsp)
13771(5): call 0xfffef67f(%rip)
13776(2): test %eax,%eax
13778(5): mov 0x8(%rsp),%rcx
1377d(2): jz 0x1b(%rip)
1377f(4): add $0x10,%rsp
13783(3): mov %r12,%rdx
13786(3): mov %rbx,%rsi
13789(3): mov %rbp,%rdi
1378c(1): pop %rbx
1378d(1): pop %rbp
1378e(2): pop %r12
13790(5): jmp 0xfffffe50(%rip)
13795(3): nop (%rax)
13798(5): call 0xfffef378(%rip)
1379d(6): mov $0x0,(%rax)
137a3(4): add $0x10,%rsp
137a7(2): xor %eax,%eax
137a9(1): pop %rbx
137aa(1): pop %rbp
137ab(2): pop %r12
137ad(1): ret near (%rsp)

"dup_safer" :
137b0(5): mov $0x3,%edx
137b5(2): xor %esi,%esi
137b7(2): xor %eax,%eax
137b9(5): jmp 0xfffff407(%rip)

"__libc_csu_init" :
137c0(2): push %r15
137c2(2): push %r14
137c4(3): mov %rdx,%r15
137c7(2): push %r13
137c9(2): push %r12
137cb(7): lea 0x205d9e(%rip),%r12
137d2(1): push %rbp
137d3(7): lea 0x205d9e(%rip),%rbp
137da(1): push %rbx
137db(3): mov %edi,%r13d
137de(3): mov %rsi,%r14
137e1(3): sub %r12,%rbp
137e4(4): sub $0x8,%rsp
137e8(4): sar $0x3,%rbp
137ec(5): call 0xfffef29c(%rip)
137f1(3): test %rbp,%rbp
137f4(2): jz 0x22(%rip)
137f6(2): xor %ebx,%ebx
137f8(8): nop 0x0(%rax,%rax,1)
13800(3): mov %r15,%rdx
13803(3): mov %r14,%rsi
13806(3): mov %r13d,%edi
13809(4): call 0x0(%r12,%rbx,8)
1380d(4): add $0x1,%rbx
13811(3): cmp %rbx,%rbp
13814(2): jnz 0xffffffec(%rip)
13816(4): add $0x8,%rsp
1381a(1): pop %rbx
1381b(1): pop %rbp
1381c(2): pop %r12
1381e(2): pop %r13
13820(2): pop %r14
13822(2): pop %r15
13824(1): ret near (%rsp)

"atexit" :
13840(7): mov 0x2067c1(%rip),%rdx
13847(2): xor %esi,%esi
13849(5): jmp 0xfffef847(%rip)

"_fini" :
13850(4): sub $0x8,%rsp
13854(4): add $0x8,%rsp
13858(1): ret near (%rsp)

