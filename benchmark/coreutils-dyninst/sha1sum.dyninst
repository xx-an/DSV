
"free@plt" :
15b0(6): jmp 0x20986a(%rip)
15b6(5): push $0x0

"abort@plt" :
15c0(6): jmp 0x209862(%rip)
15c6(5): push $0x1

"__errno_location@plt" :
15d0(6): jmp 0x20985a(%rip)
15d6(5): push $0x2

"strncmp@plt" :
15e0(6): jmp 0x209852(%rip)
15e6(5): push $0x3

"_exit@plt" :
15f0(6): jmp 0x20984a(%rip)
15f6(5): push $0x4

"__fpending@plt" :
1600(6): jmp 0x209842(%rip)
1606(5): push $0x5

"fcntl@plt" :
1610(6): jmp 0x20983a(%rip)
1616(5): push $0x6

"fread_unlocked@plt" :
1620(6): jmp 0x209832(%rip)
1626(5): push $0x7

"textdomain@plt" :
1630(6): jmp 0x20982a(%rip)
1636(5): push $0x8

"fclose@plt" :
1640(6): jmp 0x209822(%rip)
1646(5): push $0x9

"bindtextdomain@plt" :
1650(6): jmp 0x20981a(%rip)
1656(5): push $0xa

"dcgettext@plt" :
1660(6): jmp 0x209812(%rip)
1666(5): push $0xb

"__ctype_get_mb_cur_max@plt" :
1670(6): jmp 0x20980a(%rip)
1676(5): push $0xc

"strlen@plt" :
1680(6): jmp 0x209802(%rip)
1686(5): push $0xd

"__stack_chk_fail@plt" :
1690(6): jmp 0x2097fa(%rip)
1696(5): push $0xe

"getopt_long@plt" :
16a0(6): jmp 0x2097f2(%rip)
16a6(5): push $0xf

"mbrtowc@plt" :
16b0(6): jmp 0x2097ea(%rip)
16b6(5): push $0x10

"strchr@plt" :
16c0(6): jmp 0x2097e2(%rip)
16c6(5): push $0x11

"__overflow@plt" :
16d0(6): jmp 0x2097da(%rip)
16d6(5): push $0x12

"strrchr@plt" :
16e0(6): jmp 0x2097d2(%rip)
16e6(5): push $0x13

"lseek@plt" :
16f0(6): jmp 0x2097ca(%rip)
16f6(5): push $0x14

"memset@plt" :
1700(6): jmp 0x2097c2(%rip)
1706(5): push $0x15

"close@plt" :
1710(6): jmp 0x2097ba(%rip)
1716(5): push $0x16

"posix_fadvise@plt" :
1720(6): jmp 0x2097b2(%rip)
1726(5): push $0x17

"memcmp@plt" :
1730(6): jmp 0x2097aa(%rip)
1736(5): push $0x18

"fputs_unlocked@plt" :
1740(6): jmp 0x2097a2(%rip)
1746(5): push $0x19

"calloc@plt" :
1750(6): jmp 0x20979a(%rip)
1756(5): push $0x1a

"__getdelim@plt" :
1760(6): jmp 0x209792(%rip)
1766(5): push $0x1b

"memcpy@plt" :
1770(6): jmp 0x20978a(%rip)
1776(5): push $0x1c

"fileno@plt" :
1780(6): jmp 0x209782(%rip)
1786(5): push $0x1d

"malloc@plt" :
1790(6): jmp 0x20977a(%rip)
1796(5): push $0x1e

"fflush@plt" :
17a0(6): jmp 0x209772(%rip)
17a6(5): push $0x1f

"nl_langinfo@plt" :
17b0(6): jmp 0x20976a(%rip)
17b6(5): push $0x20

"__freading@plt" :
17c0(6): jmp 0x209762(%rip)
17c6(5): push $0x21

"fwrite_unlocked@plt" :
17d0(6): jmp 0x20975a(%rip)
17d6(5): push $0x22

"realloc@plt" :
17e0(6): jmp 0x209752(%rip)
17e6(5): push $0x23

"fdopen@plt" :
17f0(6): jmp 0x20974a(%rip)
17f6(5): push $0x24

"setlocale@plt" :
1800(6): jmp 0x209742(%rip)
1806(5): push $0x25

"__printf_chk@plt" :
1810(6): jmp 0x20973a(%rip)
1816(5): push $0x26

"setvbuf@plt" :
1820(6): jmp 0x209732(%rip)
1826(5): push $0x27

"error@plt" :
1830(6): jmp 0x20972a(%rip)
1836(5): push $0x28

"fseeko@plt" :
1840(6): jmp 0x209722(%rip)
1846(5): push $0x29

"fopen@plt" :
1850(6): jmp 0x20971a(%rip)
1856(5): push $0x2a

"dcngettext@plt" :
1860(6): jmp 0x209712(%rip)
1866(5): push $0x2b

"__cxa_atexit@plt" :
1870(6): jmp 0x20970a(%rip)
1876(5): push $0x2c

"exit@plt" :
1880(6): jmp 0x209702(%rip)
1886(5): push $0x2d

"fwrite@plt" :
1890(6): jmp 0x2096fa(%rip)
1896(5): push $0x2e

"__fprintf_chk@plt" :
18a0(6): jmp 0x2096f2(%rip)
18a6(5): push $0x2f

"mbsinit@plt" :
18b0(6): jmp 0x2096ea(%rip)
18b6(5): push $0x30

"iswprint@plt" :
18c0(6): jmp 0x2096e2(%rip)
18c6(5): push $0x31

"__ctype_tolower_loc@plt" :
18d0(6): jmp 0x2096da(%rip)
18d6(5): push $0x32

"__ctype_b_loc@plt" :
18e0(6): jmp 0x2096d2(%rip)
18e6(5): push $0x33

".plt.got" :
18f0(6): jmp 0x2096ea(%rip)
18f6(2): nop 

"_init" :
1580(4): sub $0x8,%rsp
1584(7): mov 0x209a45(%rip),%rax
158b(3): test %rax,%rax
158e(2): jz 0x4(%rip)
1590(2): call %rax
1592(4): add $0x8,%rsp
1596(1): ret near (%rsp)

"main" :
1900(2): push %r15
1902(2): push %r14
1904(2): push %r13
1906(2): push %r12
1908(3): mov %edi,%r12d
190b(1): push %rbp
190c(1): push %rbx
190d(3): mov %rsi,%rbx
1910(5): mov $0xffffffff,%ebp
1915(7): sub $0xe8,%rsp
191c(3): mov (%rsi),%rdi
191f(9): mov $0x28,%rax
1928(8): mov %rax,0xd8(%rsp)
1930(2): xor %eax,%eax
1932(5): call 0x343e(%rip)
1937(7): lea 0x71c3(%rip),%rsi
193e(5): mov $0x6,%edi
1943(5): call 0xfffffebd(%rip)
1948(7): lea 0x60d6(%rip),%rsi
194f(7): lea 0x60a6(%rip),%rdi
1956(5): call 0xfffffcfa(%rip)
195b(7): lea 0x609a(%rip),%rdi
1962(5): call 0xfffffcce(%rip)
1967(7): lea 0x19b2(%rip),%rdi
196e(5): call 0x5fc2(%rip)
1973(7): mov 0x20972e(%rip),%rdi
197a(2): xor %ecx,%ecx
197c(5): mov $0x1,%edx
1981(2): xor %esi,%esi
1983(5): call 0xfffffe9d(%rip)
1988(5): mov $0x0,0x78(%rsp)
198d(5): mov $0x0,0x2b(%rsp)
1992(6): nop 0x0(%rax,%rax,1)
1998(7): lea 0x209081(%rip),%rcx
199f(7): lea 0x60c0(%rip),%rdx
19a6(3): xor %r8d,%r8d
19a9(3): mov %rbx,%rsi
19ac(3): mov %r12d,%edi
19af(5): call 0xfffffcf1(%rip)
19b4(3): cmp $0xff,%eax
19b7(6): jz 0x185(%rip)
19bd(3): cmp $0x77,%eax
19c0(6): jz 0xe0(%rip)
19c6(2): jle 0x3a(%rip)
19c8(5): cmp $0x81,%eax
19cd(6): jz 0x123(%rip)
19d3(2): jle 0x55(%rip)
19d5(5): cmp $0x83,%eax
19da(6): jz 0x106(%rip)
19e0(6): jl 0xe0(%rip)
19e6(5): cmp $0x84,%eax
19eb(6): jnz 0x1e5(%rip)
19f1(5): mov $0x1,0x78(%rsp)
19f6(5): mov $0x1,%ebp
19fb(2): jmp 0xffffff9d(%rip)
19fd(3): nop (%rax)
1a00(3): cmp $0x62,%eax
1a03(6): jz 0x11d(%rip)
1a09(2): jle 0x47(%rip)
1a0b(3): cmp $0x63,%eax
1a0e(6): jz 0x102(%rip)
1a14(3): cmp $0x74,%eax
1a17(6): jnz 0x1b9(%rip)
1a1d(2): xor %ebp,%ebp
1a1f(5): jmp 0xffffff79(%rip)
1a24(4): nop 0x0(%rax)
1a28(3): cmp $0x7a,%eax
1a2b(6): jz 0x105(%rip)
1a31(3): add $0x80,%eax
1a34(6): jnz 0x19c(%rip)
1a3a(7): mov $0x1,0x2096b1(%rip)
1a41(5): jmp 0xffffff57(%rip)
1a46(a): nop 0x0(%rax,%rax,1)
1a50(5): cmp $0xffffff7d,%eax
1a55(6): jnz 0xf7c(%rip)
1a5b(7): lea 0x5ff7(%rip),%rax
1a62(7): mov 0x20963f(%rip),%rdi
1a69(7): mov 0x2095a8(%rip),%rcx
1a70(2): push $0x0
1a72(7): lea 0x5fc4(%rip),%r9
1a79(7): lea 0x5fca(%rip),%r8
1a80(1): push %rax
1a81(7): lea 0x5f70(%rip),%rdx
1a88(7): lea 0x5edb(%rip),%rsi
1a8f(2): xor %eax,%eax
1a91(5): call 0x54df(%rip)
1a96(2): xor %edi,%edi
1a98(5): call 0xfffffde8(%rip)
1a9d(3): nop (%rax)
1aa0(7): mov $0x0,0x20964d(%rip)
1aa7(7): mov $0x1,0x209645(%rip)
1aae(7): mov $0x0,0x20963c(%rip)
1ab5(5): jmp 0xfffffee3(%rip)
1aba(6): nop 0x0(%rax,%rax,1)
1ac0(7): mov $0x0,0x20962d(%rip)
1ac7(7): mov $0x0,0x209625(%rip)
1ace(7): mov $0x1,0x20961c(%rip)
1ad5(5): jmp 0xfffffec3(%rip)
1ada(6): nop 0x0(%rax,%rax,1)
1ae0(7): mov $0x1,0x209609(%rip)
1ae7(5): jmp 0xfffffeb1(%rip)
1aec(4): nop 0x0(%rax)
1af0(7): mov $0x1,0x2095fd(%rip)
1af7(7): mov $0x0,0x2095f5(%rip)
1afe(7): mov $0x0,0x2095ec(%rip)
1b05(5): jmp 0xfffffe93(%rip)
1b0a(6): nop 0x0(%rax,%rax,1)
1b10(5): mov $0x1,0x2b(%rsp)
1b15(5): jmp 0xfffffe83(%rip)
1b1a(6): nop 0x0(%rax,%rax,1)
1b20(5): mov $0x1,%ebp
1b25(5): jmp 0xfffffe73(%rip)
1b2a(6): nop 0x0(%rax,%rax,1)
1b30(7): mov $0x0,0x2094d9(%rip)
1b37(5): jmp 0xfffffe61(%rip)
1b3c(2): test %ebp,%ebp
1b3e(b): mov $0x2a,0x2095b7(%rip)
1b49(b): mov $0x28,0x2095a4(%rip)
1b54(3): setz %al
1b57(4): test %al,0x78(%rsp)
1b5b(6): jnz 0xec0(%rip)
1b61(7): cmp $0xa,0x2094a8(%rip)
1b68(2): jz 0x72(%rip)
1b6a(5): cmp $0x0,0x2b(%rsp)
1b6f(5): mov $0x5,%edx
1b74(7): lea 0x65f5(%rip),%rsi
1b7b(2): jnz 0x40(%rip)
1b7d(7): cmp $0x0,0x20956e(%rip)
1b84(6): jnz 0xea8(%rip)
1b8a(7): cmp $0x0,0x209563(%rip)
1b91(6): jnz 0xe6f(%rip)
1b97(7): cmp $0x0,0x209555(%rip)
1b9e(6): jz 0x307(%rip)
1ba4(5): cmp $0x0,0x2b(%rsp)
1ba9(5): mov $0x5,%edx
1bae(7): lea 0x6713(%rip),%rsi
1bb5(6): jnz 0x88(%rip)
1bbb(2): xor %edi,%edi
1bbd(5): call 0xfffffaa3(%rip)
1bc2(2): xor %esi,%esi
1bc4(3): mov %rax,%rdx
1bc7(2): xor %edi,%edi
1bc9(2): xor %eax,%eax
1bcb(5): call 0xfffffc65(%rip)
1bd0(5): mov $0x1,%edi
1bd5(5): call 0x12cb(%rip)
1bda(5): cmp $0x0,0x2b(%rsp)
1bdf(2): jz 0x15(%rip)
1be1(5): cmp $0x0,0x78(%rsp)
1be6(5): mov $0x5,%edx
1beb(7): lea 0x65be(%rip),%rsi
1bf2(2): jnz 0xffffffc9(%rip)
1bf4(2): test %ebp,%ebp
1bf6(2): js 0x15(%rip)
1bf8(5): cmp $0x0,0x2b(%rsp)
1bfd(5): mov $0x5,%edx
1c02(7): lea 0x65e7(%rip),%rsi
1c09(2): jnz 0xffffffb2(%rip)
1c0b(7): cmp $0x0,0x2094e0(%rip)
1c12(6): jz 0xdd6(%rip)
1c18(5): cmp $0x0,0x2b(%rsp)
1c1d(6): jz 0xe0f(%rip)
1c23(7): cmp $0x0,0x2094ca(%rip)
1c2a(6): jz 0x983(%rip)
1c30(7): cmp $0x0,0x2094bc(%rip)
1c37(6): jz 0x26e(%rip)
1c3d(3): cmp $0xff,%ebp
1c40(2): jnz 0x4(%rip)
1c42(2): xor %ebp,%ebp
1c44(3): movsxd %r12d,%rax
1c47(4): lea 0x0(%rbx,%rax,8),%rax
1c4b(5): mov %rax,0x48(%rsp)
1c50(7): movsxd 0x209461(%rip),%rax
1c57(3): cmp %r12d,%eax
1c5a(2): jnz 0x1b(%rip)
1c5c(5): mov 0x48(%rsp),%rdi
1c61(7): lea 0x695a(%rip),%rsi
1c68(4): add $0x8,%rdi
1c6c(4): mov %rsi,0xfffffff8(%rdi)
1c70(5): mov %rdi,0x48(%rsp)
1c75(4): lea 0x0(%rbx,%rax,8),%rax
1c79(5): cmp %rax,0x48(%rsp)
1c7e(5): mov %rax,0x18(%rsp)
1c83(6): jbe 0xcb1(%rip)
1c89(3): cmp $0x1,%ebp
1c8c(7): lea 0x687d(%rip),%r14
1c93(5): mov $0x1,0x79(%rsp)
1c98(2): sbb %eax,%eax
1c9a(3): and $0xf6,%eax
1c9d(3): add $0x2a,%eax
1ca0(4): mov %eax,0x7c(%rsp)
1ca4(4): mov %al,0x7b(%rsp)
1ca8(8): nop 0x0(%rax,%rax,1)
1cb0(5): mov 0x18(%rsp),%rax
1cb5(5): cmp $0x0,0x2b(%rsp)
1cba(3): mov (%rax),%rsi
1cbd(5): mov %rsi,0x20(%rsp)
1cc2(6): jz 0x67e(%rip)
1cc8(7): lea 0x68f3(%rip),%rdi
1ccf(5): mov $0x2,%ecx
1cd4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1cd6(3): setnbe %al
1cd9(2): sbb $0x0,%al
1cdb(3): movsx %al,%eax
1cde(2): test %eax,%eax
1ce0(4): mov %eax,0x2c(%rsp)
1ce4(6): jnz 0x731(%rip)
1cea(7): lea 0x5d7b(%rip),%rsi
1cf1(5): mov $0x5,%edx
1cf6(2): xor %edi,%edi
1cf8(7): mov $0x1,0x209409(%rip)
1cff(5): call 0xfffff961(%rip)
1d04(7): mov 0x2093a5(%rip),%r12
1d0b(5): mov %rax,0x20(%rsp)
1d10(8): lea 0x98(%rsp),%rax
1d18(c): mov $0x0,0x90(%rsp)
1d24(c): mov $0x0,0x98(%rsp)
1d30(5): mov $0x0,0x7a(%rsp)
1d35(5): mov $0x0,0x30(%rsp)
1d3a(3): xor %r13d,%r13d
1d3d(5): mov %rax,0x10(%rsp)
1d42(8): lea 0x90(%rsp),%rax
1d4a(9): mov $0x0,0x58(%rsp)
1d53(9): mov $0x0,0x50(%rsp)
1d5c(5): mov $0x1,%ebp
1d61(5): mov %rax,0x8(%rsp)
1d66(8): lea 0x8f(%rsp),%rax
1d6e(5): mov %rax,0x40(%rsp)
1d73(8): lea 0xc0(%rsp),%rax
1d7b(5): mov %rax,0x38(%rsp)
1d80(5): mov 0x10(%rsp),%rsi
1d85(5): mov 0x8(%rsp),%rdi
1d8a(3): mov %r12,%rcx
1d8d(5): mov $0xa,%edx
1d92(5): call 0xfffff9ce(%rip)
1d97(3): test %rax,%rax
1d9a(6): jle 0x302(%rip)
1da0(8): mov 0x90(%rsp),%rbx
1da8(3): movzx (%rbx),%ecx
1dab(3): cmp $0x23,%cl
1dae(6): jz 0xa7(%rip)
1db4(5): cmp $0xa,0xffffffff(%rbx,%rax,1)
1db9(3): mov %rax,%r15
1dbc(2): jnz 0x16(%rip)
1dbe(4): sub $0x1,%r15
1dc2(5): mov $0x0,0x0(%rbx,%r15,1)
1dc7(8): mov 0x90(%rsp),%rbx
1dcf(3): movzx (%rbx),%ecx
1dd2(3): cmp $0x9,%cl
1dd5(2): jz 0x9(%rip)
1dd7(2): xor %edx,%edx
1dd9(3): cmp $0x20,%cl
1ddc(2): jnz 0x16(%rip)
1dde(2): xor %edx,%edx
1de0(4): add $0x1,%rdx
1de4(4): movzx 0x0(%rbx,%rdx,1),%ecx
1de8(3): cmp $0x20,%cl
1deb(2): jz 0xfffffff5(%rip)
1ded(3): cmp $0x9,%cl
1df0(2): jz 0xfffffff0(%rip)
1df2(3): xor %r9d,%r9d
1df5(3): cmp $0x5c,%cl
1df8(2): jnz 0xc(%rip)
1dfa(6): movzx 0x2b(%rsp),%r9d
1e00(4): add $0x1,%rdx
1e04(4): lea 0x0(%rbx,%rdx,1),%r8
1e08(7): lea 0x5b63(%rip),%rdi
1e0f(5): mov $0x4,%ecx
1e14(3): mov %r8,%rsi
1e17(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1e19(3): setnbe %al
1e1c(2): sbb $0x0,%al
1e1e(2): test %al,%al
1e20(6): jnz 0xd0(%rip)
1e26(5): movzx 0x4(%rbx,%rdx,1),%eax
1e2b(4): lea 0x4(%rdx),%rcx
1e2f(2): cmp $0x20,%al
1e31(2): jnz 0xb(%rip)
1e33(5): movzx 0x5(%rbx,%rdx,1),%eax
1e38(4): lea 0x5(%rdx),%rcx
1e3c(2): cmp $0x28,%al
1e3e(6): jz 0x586(%rip)
1e44(4): add $0x1,%r13
1e48(7): cmp $0x0,0x2092a4(%rip)
1e4f(6): jnz 0x381(%rip)
1e55(5): test $0x30,(%r12)
1e5a(6): jnz 0x242(%rip)
1e60(4): add $0x1,%rbp
1e64(6): jnz 0xffffff1c(%rip)
1e6a(5): mov 0x20(%rsp),%rdx
1e6f(5): mov $0x3,%esi
1e74(2): xor %edi,%edi
1e76(5): call 0x4a3a(%rip)
1e7b(7): lea 0x5bf9(%rip),%rsi
1e82(3): mov %rax,%rbx
1e85(5): mov $0x5,%edx
1e8a(2): xor %edi,%edi
1e8c(5): call 0xfffff7d4(%rip)
1e91(3): mov %rbx,%rcx
1e94(3): mov %rax,%rdx
1e97(2): xor %esi,%esi
1e99(5): mov $0x1,%edi
1e9e(2): xor %eax,%eax
1ea0(5): call 0xfffff990(%rip)
1ea5(7): cmp $0x1,0x209245(%rip)
1eac(2): jnz 0x19(%rip)
1eae(5): cmp $0x0,0x2b(%rsp)
1eb3(5): mov $0x5,%edx
1eb8(7): lea 0x6449(%rip),%rsi
1ebf(6): jz 0xfffffcfc(%rip)
1ec5(7): cmp $0x0,0x209224(%rip)
1ecc(6): jz 0xfffffd71(%rip)
1ed2(5): cmp $0x0,0x2b(%rsp)
1ed7(5): mov $0x5,%edx
1edc(7): lea 0x6465(%rip),%rsi
1ee3(6): jnz 0xfffffd5a(%rip)
1ee9(5): jmp 0xfffffcd2(%rip)
1eee(2): nop 
1ef0(3): mov %r15,%rcx
1ef3(2): xor %eax,%eax
1ef5(3): sub %rdx,%rcx
1ef8(4): cmp $0x5c,(%r8)
1efc(3): setz %al
1eff(7): add 0x2091fa(%rip),%rax
1f06(3): cmp %rax,%rcx
1f09(6): jb 0xffffff3b(%rip)
1f0f(7): add 0x2091e2(%rip),%rdx
1f16(4): lea 0x0(%rbx,%rdx,1),%rcx
1f1a(3): movzx (%rcx),%eax
1f1d(2): cmp $0x20,%al
1f1f(2): jz 0xa(%rip)
1f21(2): cmp $0x9,%al
1f23(6): jnz 0xffffff21(%rip)
1f29(3): mov $0x0,(%rcx)
1f2c(3): mov %r8,%rdi
1f2f(5): mov %rdx,0x70(%rsp)
1f34(5): mov %r9b,0x68(%rsp)
1f39(5): mov %r8,0x60(%rsp)
1f3e(5): call 0xc92(%rip)
1f43(2): test %al,%al
1f45(6): jz 0xfffffeff(%rip)
1f4b(5): mov 0x70(%rsp),%rdx
1f50(3): mov %r15,%rcx
1f53(6): mov 0x2090bb(%rip),%esi
1f59(5): mov 0x60(%rsp),%r8
1f5e(6): movzx 0x68(%rsp),%r9d
1f64(4): lea 0x1(%rdx),%rax
1f68(3): sub %rax,%rcx
1f6b(4): sub $0x1,%rcx
1f6f(2): jz 0x19(%rip)
1f71(5): movzx 0x1(%rbx,%rdx,1),%ecx
1f76(3): cmp $0x20,%cl
1f79(6): jz 0x76b(%rip)
1f7f(3): cmp $0x2a,%cl
1f82(6): jz 0x762(%rip)
1f88(2): test %esi,%esi
1f8a(6): jz 0xfffffeba(%rip)
1f90(a): mov $0x1,0x20907a(%rip)
1f9a(3): add %rax,%rbx
1f9d(3): test %r9b,%r9b
1fa0(6): jnz 0x7a1(%rip)
1fa6(4): mov 0x2c(%rsp),%eax
1faa(2): test %eax,%eax
1fac(2): jnz 0x20(%rip)
1fae(7): lea 0x660d(%rip),%rdi
1fb5(5): mov $0x2,%ecx
1fba(3): mov %rbx,%rsi
1fbd(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1fbf(3): setnbe %al
1fc2(2): sbb $0x0,%al
1fc4(2): test %al,%al
1fc6(6): jz 0xfffffe7e(%rip)
1fcc(3): xor %r15d,%r15d
1fcf(7): cmp $0x0,0x20911e(%rip)
1fd6(2): jnz 0x23(%rip)
1fd8(5): mov $0xa,%esi
1fdd(3): mov %rbx,%rdi
1fe0(5): mov %r8,0x30(%rsp)
1fe5(5): call 0xfffff6db(%rip)
1fea(5): mov 0x30(%rsp),%r8
1fef(3): xor %r15d,%r15d
1ff2(3): test %rax,%rax
1ff5(4): setnz %r15b
1ff9(5): mov 0x40(%rsp),%rdx
1ffe(5): mov 0x38(%rsp),%rsi
2003(3): mov %rbx,%rdi
2006(5): mov %r8,0x30(%rsp)
200b(5): call 0xcf5(%rip)
2010(2): test %al,%al
2012(3): mov %eax,%r9d
2015(5): mov 0x30(%rsp),%r8
201a(6): jnz 0x206(%rip)
2020(6): add $0x1,0x50(%rsp)
2026(7): cmp $0x0,0x2090c7(%rip)
202d(2): jnz 0x5b(%rip)
202f(3): test %r15d,%r15d
2032(2): jz 0x22(%rip)
2034(7): mov 0x20906d(%rip),%rdi
203b(4): mov 0x28(%rdi),%rax
203f(4): cmp 0x30(%rdi),%rax
2043(6): jnb 0x921(%rip)
2049(4): lea 0x1(%rax),%rdx
204d(4): mov %rdx,0x28(%rdi)
2051(3): mov $0x5c,(%rax)
2054(3): mov %r15d,%esi
2057(3): mov %rbx,%rdi
205a(5): call 0xbd6(%rip)
205f(7): lea 0x5a31(%rip),%rsi
2066(5): mov $0x5,%edx
206b(2): xor %edi,%edi
206d(5): call 0xfffff5f3(%rip)
2072(7): lea 0x6a98(%rip),%rsi
2079(3): mov %rax,%rdx
207c(5): mov $0x1,%edi
2081(2): xor %eax,%eax
2083(5): call 0xfffff78d(%rip)
2088(5): movzx 0x2b(%rsp),%eax
208d(5): test $0x30,(%r12)
2092(4): mov %al,0x30(%rsp)
2096(6): jz 0xfffffdca(%rip)
209c(8): mov 0x90(%rsp),%rdi
20a4(5): call 0xfffff50c(%rip)
20a9(4): mov (%r12),%ebx
20ad(3): and $0x20,%ebx
20b0(6): jnz 0x4be(%rip)
20b6(5): cmp $0x0,0x2c(%rsp)
20bb(6): jnz 0x56d(%rip)
20c1(5): cmp $0x0,0x30(%rsp)
20c6(6): jz 0x57f(%rip)
20cc(7): cmp $0x0,0x209021(%rip)
20d3(6): jnz 0x48b(%rip)
20d9(3): test %r13,%r13
20dc(2): jz 0x31(%rip)
20de(7): lea 0x630b(%rip),%rdx
20e5(7): lea 0x6334(%rip),%rsi
20ec(3): mov %r13,%rcx
20ef(2): xor %edi,%edi
20f1(6): mov $0x5,%r8d
20f7(5): call 0xfffff769(%rip)
20fc(3): mov %r13,%rcx
20ff(3): mov %rax,%rdx
2102(2): xor %esi,%esi
2104(2): xor %edi,%edi
2106(2): xor %eax,%eax
2108(5): call 0xfffff728(%rip)
210d(6): cmp $0x0,0x50(%rsp)
2113(2): jz 0x36(%rip)
2115(5): mov 0x50(%rsp),%r15
211a(7): lea 0x632f(%rip),%rdx
2121(7): lea 0x6358(%rip),%rsi
2128(2): xor %edi,%edi
212a(6): mov $0x5,%r8d
2130(3): mov %r15,%rcx
2133(5): call 0xfffff72d(%rip)
2138(3): mov %r15,%rcx
213b(3): mov %rax,%rdx
213e(2): xor %esi,%esi
2140(2): xor %edi,%edi
2142(2): xor %eax,%eax
2144(5): call 0xfffff6ec(%rip)
2149(6): cmp $0x0,0x58(%rsp)
214f(2): jz 0x36(%rip)
2151(5): mov 0x58(%rsp),%r15
2156(7): lea 0x6353(%rip),%rdx
215d(7): lea 0x637c(%rip),%rsi
2164(2): xor %edi,%edi
2166(6): mov $0x5,%r8d
216c(3): mov %r15,%rcx
216f(5): call 0xfffff6f1(%rip)
2174(3): mov %r15,%rcx
2177(3): mov %rax,%rdx
217a(2): xor %esi,%esi
217c(2): xor %edi,%edi
217e(2): xor %eax,%eax
2180(5): call 0xfffff6b0(%rip)
2185(7): cmp $0x0,0x208f66(%rip)
218c(6): jz 0x3d2(%rip)
2192(5): cmp $0x0,0x7a(%rsp)
2197(6): jz 0x760(%rip)
219d(5): mov 0x50(%rsp),%rax
21a2(5): or 0x58(%rsp),%rax
21a7(2): jnz 0x17(%rip)
21a9(7): movzx 0x208f40(%rip),%eax
21b0(3): xor $0x1,%eax
21b3(3): test %r13,%r13
21b6(3): setz %bl
21b9(2): or %ebx,%eax
21bb(3): movzx %al,%ebx
21be(2): mov %ebx,%eax
21c0(3): and $0x1,%eax
21c3(4): and %al,0x79(%rsp)
21c7(5): jmp 0x1a6(%rip)
21cc(4): nop 0x0(%rax)
21d0(5): mov 0x20(%rsp),%rdx
21d5(2): xor %edi,%edi
21d7(5): mov $0x3,%esi
21dc(5): call 0x46d4(%rip)
21e1(7): lea 0x61a0(%rip),%rsi
21e8(2): xor %edi,%edi
21ea(5): mov $0x5,%edx
21ef(3): mov %rax,%rbx
21f2(5): call 0xfffff46e(%rip)
21f7(7): lea 0x5774(%rip),%r9
21fe(3): mov %rax,%rdx
2201(3): mov %rbp,%r8
2204(3): mov %rbx,%rcx
2207(2): xor %esi,%esi
2209(2): xor %edi,%edi
220b(2): xor %eax,%eax
220d(5): call 0xfffff623(%rip)
2212(5): jmp 0xfffffc43(%rip)
2217(9): nop 0x0(%rax,%rax,1)
2220(7): cmp $0x0,0x208ecb(%rip)
2227(2): jz 0x10(%rip)
2229(8): cmp $0x0,0x8f(%rsp)
2231(6): jnz 0xfffffe57(%rip)
2237(7): mov 0x208eba(%rip),%rcx
223e(5): mov %r8,0x68(%rsp)
2243(3): shr $0x1,%rcx
2246(6): jz 0x379(%rip)
224c(5): mov %rcx,0x60(%rsp)
2251(5): mov %r9b,0x30(%rsp)
2256(5): call 0xfffff67a(%rip)
225b(2): xor %edx,%edx
225d(3): mov (%rax),%rdi
2260(6): movzx 0x30(%rsp),%r9d
2266(5): mov 0x60(%rsp),%rcx
226b(5): mov 0x68(%rsp),%r8
2270(5): mov 0x38(%rsp),%r10
2275(2): jmp 0x2b(%rip)
2277(9): nop 0x0(%rax,%rax,1)
2280(6): movzx 0x1(%r8,%rdx,2),%esi
2286(3): and $0xf,%eax
2289(5): movsx 0x0(%r14,%rax,1),%eax
228e(3): cmp %eax,0x0(%rdi,%rsi,4)
2291(2): jnz 0x2d(%rip)
2293(4): add $0x1,%rdx
2297(3): cmp %rdx,%rcx
229a(6): jz 0x3a3(%rip)
22a0(5): movzx 0x0(%r10,%rdx,1),%eax
22a5(5): movzx 0x0(%r8,%rdx,2),%r11d
22aa(2): mov %eax,%esi
22ac(4): shr $0x4,%sil
22b0(3): and $0xf,%esi
22b3(5): movsx 0x0(%r14,%rsi,1),%esi
22b8(4): cmp %esi,0x0(%rdi,%r11,4)
22bc(2): jz 0xffffffc4(%rip)
22be(3): cmp %rdx,%rcx
22c1(6): jz 0x300(%rip)
22c7(6): add $0x1,0x58(%rsp)
22cd(7): cmp $0x0,0x208e20(%rip)
22d4(6): jnz 0xfffffdb4(%rip)
22da(3): test %r15d,%r15d
22dd(6): jz 0x60b(%rip)
22e3(7): mov 0x208dbe(%rip),%rdi
22ea(4): mov 0x28(%rdi),%rax
22ee(4): cmp 0x30(%rdi),%rax
22f2(6): jnb 0x6ad(%rip)
22f8(4): lea 0x1(%rax),%rsi
22fc(4): mov %rsi,0x28(%rdi)
2300(3): mov $0x5c,(%rax)
2303(5): mov $0x1,%esi
2308(3): mov %rbx,%rdi
230b(5): mov %rcx,0x60(%rsp)
2310(5): mov %rdx,0x30(%rsp)
2315(5): call 0x91b(%rip)
231a(5): mov 0x30(%rsp),%rdx
231f(5): mov 0x60(%rsp),%rcx
2324(3): cmp %rcx,%rdx
2327(6): jz 0x2e3(%rip)
232d(5): mov $0x5,%edx
2332(7): lea 0x5772(%rip),%rsi
2339(5): jmp 0xfffffd32(%rip)
233e(2): nop 
2340(8): lea 0x98(%rsp),%rax
2348(8): lea 0xa0(%rsp),%rbx
2350(5): mov 0x20(%rsp),%rdi
2355(3): mov %rax,%rdx
2358(3): mov %rbx,%rsi
235b(5): call 0x9a5(%rip)
2360(2): test %al,%al
2362(6): jnz 0x105(%rip)
2368(5): mov $0x0,0x79(%rsp)
236d(6): add $0x8,0x18(%rsp)
2373(5): mov 0x18(%rsp),%rax
2378(5): cmp %rax,0x48(%rsp)
237d(6): jnbe 0xfffff933(%rip)
2383(7): cmp $0x0,0x208d7e(%rip)
238a(6): jnz 0x376(%rip)
2390(5): movzx 0x79(%rsp),%eax
2395(3): xor $0x1,%eax
2398(8): mov 0xd8(%rsp),%rdi
23a0(9): xor $0x28,%rdi
23a9(3): movzx %al,%eax
23ac(6): jnz 0x637(%rip)
23b2(7): add $0xe8,%rsp
23b9(1): pop %rbx
23ba(1): pop %rbp
23bb(2): pop %r12
23bd(2): pop %r13
23bf(2): pop %r14
23c1(2): pop %r15
23c3(1): ret near (%rsp)
23c4(4): add $0x1,%rcx
23c8(3): sub %rcx,%r15
23cb(6): jz 0xfffffa79(%rip)
23d1(3): mov %r15,%r10
23d4(3): add %rcx,%rbx
23d7(4): sub $0x1,%r10
23db(2): jz 0x26(%rip)
23dd(6): cmp $0x29,0xffffffff(%rbx,%r15,1)
23e3(2): jnz 0x18(%rip)
23e5(5): jmp 0x2a4(%rip)
23ea(6): nop 0x0(%rax,%rax,1)
23f0(5): cmp $0x29,0x0(%rbx,%r10,1)
23f5(6): jz 0x294(%rip)
23fb(4): sub $0x1,%r10
23ff(2): jnz 0xfffffff1(%rip)
2401(3): cmp $0x29,(%rbx)
2404(6): jnz 0xfffffa40(%rip)
240a(3): mov %rbx,%r11
240d(3): xor %r10d,%r10d
2410(5): jmp 0x27d(%rip)
2415(5): mov 0x20(%rsp),%rdi
241a(7): lea 0x5627(%rip),%rsi
2421(5): call 0x28af(%rip)
2426(3): test %rax,%rax
2429(3): mov %rax,%r12
242c(6): jnz 0xfffff8e4(%rip)
2432(5): mov 0x20(%rsp),%rdx
2437(5): mov $0x3,%esi
243c(2): xor %edi,%edi
243e(5): call 0x4472(%rip)
2443(3): mov %rax,%rbx
2446(5): call 0xfffff18a(%rip)
244b(2): mov (%rax),%esi
244d(7): lea 0x60e1(%rip),%rdx
2454(2): xor %eax,%eax
2456(3): mov %rbx,%rcx
2459(2): xor %edi,%edi
245b(5): call 0xfffff3d5(%rip)
2460(2): xor %eax,%eax
2462(5): jmp 0xfffffd61(%rip)
2467(5): mov 0x20(%rsp),%rdi
246c(5): mov $0x5c,%esi
2471(5): call 0xfffff24f(%rip)
2476(3): test %rax,%rax
2479(6): jz 0x3d8(%rip)
247f(7): cmp $0xa,0x208b8a(%rip)
2486(6): jz 0x2e6(%rip)
248c(5): cmp $0x0,0x78(%rsp)
2491(6): jnz 0x3dd(%rip)
2497(7): mov 0x208c5a(%rip),%rax
249e(2): xor %ebp,%ebp
24a0(3): shr $0x1,%rax
24a3(2): jz 0x3f(%rip)
24a5(3): xor %r12d,%r12d
24a8(8): nop 0x0(%rax,%rax,1)
24b0(5): movzx 0x0(%rbx,%r12,1),%edx
24b5(7): lea 0x5621(%rip),%rsi
24bc(2): xor %eax,%eax
24be(5): mov $0x1,%edi
24c3(4): add $0x1,%r12
24c7(5): call 0xfffff349(%rip)
24cc(7): mov 0x208c25(%rip),%rax
24d3(3): shr $0x1,%rax
24d6(3): cmp %r12,%rax
24d9(2): jnbe 0xffffffd7(%rip)
24db(5): cmp $0x0,0x78(%rsp)
24e0(2): jnz 0x53(%rip)
24e2(7): mov 0x208bbf(%rip),%rdi
24e9(4): mov 0x28(%rdi),%rax
24ed(4): cmp %rax,0x30(%rdi)
24f1(6): jbe 0x49f(%rip)
24f7(4): lea 0x1(%rax),%rdx
24fb(4): mov %rdx,0x28(%rdi)
24ff(3): mov $0x20,(%rax)
2502(7): mov 0x208b9f(%rip),%rdi
2509(4): mov 0x28(%rdi),%rax
250d(4): cmp 0x30(%rdi),%rax
2511(6): jnb 0x471(%rip)
2517(4): lea 0x1(%rax),%rdx
251b(4): mov %rdx,0x28(%rdi)
251f(5): movzx 0x7b(%rsp),%edi
2524(3): mov %dil,(%rax)
2527(5): mov 0x20(%rsp),%rdi
252c(2): mov %ebp,%esi
252e(5): call 0x702(%rip)
2533(7): mov 0x208b6e(%rip),%rdi
253a(7): movzx 0x208acf(%rip),%edx
2541(4): mov 0x28(%rdi),%rax
2545(4): cmp 0x30(%rdi),%rax
2549(6): jnb 0x40e(%rip)
254f(4): lea 0x1(%rax),%rcx
2553(4): mov %rcx,0x28(%rdi)
2557(2): mov %dl,(%rax)
2559(5): jmp 0xfffffe14(%rip)
255e(5): cmp $0x0,0x7a(%rsp)
2563(6): jnz 0xfffffc3a(%rip)
2569(5): jmp 0xfffffc55(%rip)
256e(5): mov 0x20(%rsp),%rdx
2573(5): mov $0x3,%esi
2578(2): xor %edi,%edi
257a(5): call 0x4336(%rip)
257f(7): lea 0x552f(%rip),%rsi
2586(3): mov %rax,%rbx
2589(5): mov $0x5,%edx
258e(2): xor %edi,%edi
2590(5): call 0xfffff0d0(%rip)
2595(3): mov %rbx,%rcx
2598(3): mov %rax,%rdx
259b(2): xor %esi,%esi
259d(2): xor %eax,%eax
259f(2): xor %edi,%edi
25a1(5): call 0xfffff28f(%rip)
25a6(2): xor %eax,%eax
25a8(5): jmp 0xfffffc1b(%rip)
25ad(7): cmp $0x0,0x208b3f(%rip)
25b4(6): jnz 0xfffff689(%rip)
25ba(5): jmp 0xfffff90b(%rip)
25bf(2): xor %edx,%edx
25c1(7): movzx 0x208b2c(%rip),%eax
25c8(2): test %al,%al
25ca(4): mov %al,0x7a(%rsp)
25ce(6): jnz 0xfffffaba(%rip)
25d4(7): movzx 0x208b16(%rip),%eax
25db(2): test %al,%al
25dd(4): mov %al,0x7a(%rsp)
25e1(6): jnz 0xfffffaa7(%rip)
25e7(3): test %r15d,%r15d
25ea(6): jnz 0x427(%rip)
25f0(2): xor %esi,%esi
25f2(3): mov %rbx,%rdi
25f5(5): mov %r9b,0x30(%rsp)
25fa(5): call 0x636(%rip)
25ff(6): movzx 0x30(%rsp),%r9d
2605(5): mov %r9b,0x7a(%rsp)
260a(7): cmp $0x0,0x208ae0(%rip)
2611(6): jnz 0xfffffa77(%rip)
2617(5): mov $0x5,%edx
261c(7): lea 0x548f(%rip),%rsi
2623(5): jmp 0xfffffa48(%rip)
2628(3): mov %r12,%rdi
262b(5): call 0x4d35(%rip)
2630(2): test %eax,%eax
2632(6): jz 0xfffffa8f(%rip)
2638(5): jmp 0xfffffdfa(%rip)
263d(3): mov %rcx,%rdx
2640(5): jmp 0xffffff81(%rip)
2645(5): mov 0x20(%rsp),%rdx
264a(2): xor %edi,%edi
264c(5): mov $0x3,%esi
2651(5): call 0x425f(%rip)
2656(7): lea 0x5d5b(%rip),%rsi
265d(2): xor %edi,%edi
265f(5): mov $0x5,%edx
2664(3): mov %rax,%rbp
2667(5): call 0xffffeff9(%rip)
266c(7): lea 0x52ff(%rip),%r8
2673(3): mov %rax,%rdx
2676(3): mov %rbp,%rcx
2679(2): xor %esi,%esi
267b(2): xor %edi,%edi
267d(2): xor %eax,%eax
267f(5): call 0xfffff1b1(%rip)
2684(5): jmp 0xfffffb3a(%rip)
2689(4): lea 0x0(%rbx,%r10,1),%r11
268d(3): test %r9b,%r9b
2690(6): jnz 0x2ae(%rip)
2696(4): add $0x1,%r10
269a(4): mov $0x0,(%r11)
269e(2): jmp 0x6(%rip)
26a0(4): add $0x1,%r10
26a4(5): movzx 0x0(%rbx,%r10,1),%eax
26a9(2): cmp $0x20,%al
26ab(2): jz 0xfffffff5(%rip)
26ad(2): cmp $0x9,%al
26af(2): jz 0xfffffff1(%rip)
26b1(2): cmp $0x3d,%al
26b3(6): jnz 0xfffff791(%rip)
26b9(5): lea 0x1(%rbx,%r10,1),%rdx
26be(3): movzx (%rdx),%eax
26c1(3): mov %rdx,%r8
26c4(4): lea 0x1(%rdx),%rdx
26c8(2): cmp $0x20,%al
26ca(2): jz 0xfffffff4(%rip)
26cc(2): cmp $0x9,%al
26ce(2): jz 0xfffffff0(%rip)
26d0(3): mov %r8,%rdi
26d3(5): mov %r8,0x60(%rsp)
26d8(5): call 0x4f8(%rip)
26dd(5): mov 0x60(%rsp),%r8
26e2(2): jmp 0x7d(%rip)
26e4(3): sub $0x1,%esi
26e7(6): jz 0xfffff8b3(%rip)
26ed(a): mov $0x0,0x20891d(%rip)
26f7(4): lea 0x2(%rdx),%rax
26fb(5): jmp 0xfffff89f(%rip)
2700(7): mov 0x2089a9(%rip),%rdi
2707(5): call 0x4c59(%rip)
270c(3): add $0x1,%eax
270f(6): jnz 0xfffffc81(%rip)
2715(7): lea 0x5350(%rip),%rsi
271c(5): mov $0x5,%edx
2721(2): xor %edi,%edi
2723(5): call 0xffffef3d(%rip)
2728(3): mov %rax,%rbx
272b(5): call 0xffffeea5(%rip)
2730(2): mov (%rax),%esi
2732(3): mov %rbx,%rdx
2735(5): mov $0x1,%edi
273a(2): xor %eax,%eax
273c(5): call 0xfffff0f4(%rip)
2741(3): mov %r15,%rsi
2744(3): mov %rbx,%rdi
2747(5): mov %r8,0x60(%rsp)
274c(3): sub %rax,%rsi
274f(5): call 0x401(%rip)
2754(5): mov 0x60(%rsp),%r8
2759(3): test %rax,%rax
275c(3): setnz %al
275f(2): test %al,%al
2761(6): jnz 0xfffff845(%rip)
2767(5): jmp 0xfffff6dd(%rip)
276c(5): cmp $0x0,0x78(%rsp)
2771(6): jz 0xa6(%rip)
2777(7): mov 0x20892a(%rip),%rdi
277e(4): mov 0x28(%rdi),%rax
2782(4): cmp 0x30(%rdi),%rax
2786(6): jnb 0x23c(%rip)
278c(4): lea 0x1(%rax),%rdx
2790(4): mov %rdx,0x28(%rdi)
2794(3): mov $0x5c,(%rax)
2797(7): mov 0x20890a(%rip),%rcx
279e(7): lea 0x51cd(%rip),%rdi
27a5(5): mov $0x4,%edx
27aa(5): mov $0x1,%esi
27af(5): call 0xfffff021(%rip)
27b4(7): mov 0x2088ed(%rip),%rcx
27bb(7): lea 0x5320(%rip),%rdi
27c2(5): mov $0x2,%edx
27c7(5): mov $0x1,%esi
27cc(5): call 0xfffff004(%rip)
27d1(5): mov 0x20(%rsp),%rdi
27d6(5): mov $0x1,%esi
27db(5): call 0x455(%rip)
27e0(7): mov 0x2088c1(%rip),%rcx
27e7(7): lea 0x52f7(%rip),%rdi
27ee(5): mov $0x4,%edx
27f3(5): mov $0x1,%esi
27f8(5): call 0xffffefd8(%rip)
27fd(7): mov 0x2088f4(%rip),%rax
2804(5): mov $0x1,%ebp
2809(3): shr $0x1,%rax
280c(6): jnz 0xfffffc99(%rip)
2812(5): jmp 0xfffffcc9(%rip)
2817(7): mov 0x20888a(%rip),%rdi
281e(4): mov 0x28(%rdi),%rax
2822(4): cmp 0x30(%rdi),%rax
2826(6): jnb 0x14d(%rip)
282c(4): lea 0x1(%rax),%rdx
2830(5): mov $0x1,%ebp
2835(4): mov %rdx,0x28(%rdi)
2839(3): mov $0x5c,(%rax)
283c(7): mov 0x2088b5(%rip),%rax
2843(3): shr $0x1,%rax
2846(6): jnz 0xfffffc5f(%rip)
284c(5): jmp 0xfffffc96(%rip)
2851(5): mov 0x20(%rsp),%rdi
2856(5): mov $0xa,%esi
285b(5): call 0xffffee65(%rip)
2860(3): test %rax,%rax
2863(6): jnz 0xfffffc1c(%rip)
2869(5): jmp 0xfffffc23(%rip)
286e(7): mov 0x208833(%rip),%rcx
2875(7): lea 0x50f6(%rip),%rdi
287c(5): mov $0x4,%edx
2881(5): mov $0x1,%esi
2886(2): xor %ebp,%ebp
2888(5): call 0xffffef48(%rip)
288d(7): mov 0x208814(%rip),%rcx
2894(7): lea 0x5247(%rip),%rdi
289b(5): mov $0x2,%edx
28a0(5): mov $0x1,%esi
28a5(5): call 0xffffef2b(%rip)
28aa(5): mov 0x20(%rsp),%rdi
28af(2): xor %esi,%esi
28b1(5): call 0x37f(%rip)
28b6(7): mov 0x2087eb(%rip),%rcx
28bd(7): lea 0x5221(%rip),%rdi
28c4(5): mov $0x4,%edx
28c9(5): mov $0x1,%esi
28ce(5): call 0xffffef02(%rip)
28d3(7): mov 0x20881e(%rip),%rax
28da(3): shr $0x1,%rax
28dd(6): jnz 0xfffffbc8(%rip)
28e3(5): jmp 0xfffffc50(%rip)
28e8(2): xor %esi,%esi
28ea(3): mov %rbx,%rdi
28ed(5): call 0x343(%rip)
28f2(5): jmp 0xfffffa3b(%rip)
28f7(5): mov 0x20(%rsp),%rdx
28fc(2): xor %edi,%edi
28fe(5): mov $0x3,%esi
2903(5): call 0x3fad(%rip)
2908(7): lea 0x51b5(%rip),%rsi
290f(3): mov %rax,%rbp
2912(2): xor %edi,%edi
2914(5): mov $0x5,%edx
2919(5): call 0xffffed47(%rip)
291e(3): mov %rbp,%rcx
2921(3): mov %rax,%rdx
2924(2): xor %esi,%esi
2926(2): xor %edi,%edi
2928(2): xor %eax,%eax
292a(5): call 0xffffef06(%rip)
292f(5): jmp 0xfffff88f(%rip)
2934(5): mov $0x1,0x79(%rsp)
2939(5): jmp 0xfffffa4a(%rip)
293e(3): mov %r10,%rsi
2941(3): mov %rbx,%rdi
2944(5): call 0x20c(%rip)
2949(3): test %rax,%rax
294c(6): jnz 0xfffffd4a(%rip)
2952(5): jmp 0xfffff4f2(%rip)
2957(3): movzx %dl,%esi
295a(5): call 0xffffed76(%rip)
295f(5): jmp 0xfffffa0e(%rip)
2964(5): mov $0x5c,%esi
2969(5): call 0xffffed67(%rip)
296e(5): jmp 0xfffff6e6(%rip)
2973(5): mov $0x5c,%esi
2978(5): call 0xffffed58(%rip)
297d(5): jmp 0xfffffe80(%rip)
2982(4): mov 0x7c(%rsp),%esi
2986(5): call 0xffffed4a(%rip)
298b(5): jmp 0xfffffb9c(%rip)
2990(5): mov $0x20,%esi
2995(5): call 0xffffed3b(%rip)
299a(5): jmp 0xfffffb68(%rip)
299f(5): mov $0x5c,%esi
29a4(5): mov %rcx,0x60(%rsp)
29a9(5): mov %rdx,0x30(%rsp)
29ae(5): call 0xffffed22(%rip)
29b3(5): mov 0x30(%rsp),%rdx
29b8(5): mov 0x60(%rsp),%rcx
29bd(5): jmp 0xfffff946(%rip)
29c2(5): mov $0x5c,%esi
29c7(5): call 0xffffed09(%rip)
29cc(5): jmp 0xfffffdcb(%rip)
29d1(5): cmp $0xffffff7e,%eax
29d6(6): jnz 0xfffff1fa(%rip)
29dc(2): xor %edi,%edi
29de(5): call 0x4c2(%rip)
29e3(5): call 0xffffecad(%rip)
29e8(7): cmp $0x0,0x208705(%rip)
29ef(6): jz 0xfffff1a8(%rip)
29f5(5): cmp $0x0,0x2b(%rsp)
29fa(6): jnz 0xfffffbb3(%rip)
2a00(5): mov $0x5,%edx
2a05(7): lea 0x587c(%rip),%rsi
2a0c(5): jmp 0xfffff1af(%rip)
2a11(5): mov %r9b,0x7a(%rsp)
2a16(5): jmp 0xfffff8cd(%rip)
2a1b(5): mov $0x5,%edx
2a20(7): lea 0x5721(%rip),%rsi
2a27(5): jmp 0xfffff194(%rip)
2a2c(5): mov $0x5,%edx
2a31(7): lea 0x5808(%rip),%rsi
2a38(5): jmp 0xfffff183(%rip)

"_start" :
2a40(2): xor %ebp,%ebp
2a42(3): mov %rdx,%r9
2a45(1): pop %rsi
2a46(3): mov %rsp,%rdx
2a49(4): and $0xfffffff0,%rsp
2a4d(1): push %rax
2a4e(1): push %rsp
2a4f(7): lea 0x4eca(%rip),%r8
2a56(7): lea 0x4e53(%rip),%rcx
2a5d(7): lea 0xffffee9c(%rip),%rdi
2a64(6): call 0x20855e(%rip)
2a6a(1): hlt 

"deregister_tm_clones" :
2a70(7): lea 0x208629(%rip),%rdi
2a77(1): push %rbp
2a78(7): lea 0x208621(%rip),%rax
2a7f(3): cmp %rdi,%rax
2a82(3): mov %rsp,%rbp
2a85(2): jz 0x1b(%rip)
2a87(7): mov 0x208532(%rip),%rax
2a8e(3): test %rax,%rax
2a91(2): jz 0xf(%rip)
2a93(1): pop %rbp
2a94(2): jmp %rax
2a96(a): nop 0x0(%rax,%rax,1)
2aa0(1): pop %rbp
2aa1(1): ret near (%rsp)

"register_tm_clones" :
2ab0(7): lea 0x2085e9(%rip),%rdi
2ab7(7): lea 0x2085e2(%rip),%rsi
2abe(1): push %rbp
2abf(3): sub %rdi,%rsi
2ac2(3): mov %rsp,%rbp
2ac5(4): sar $0x3,%rsi
2ac9(3): mov %rsi,%rax
2acc(4): shr $0x3f,%rax
2ad0(3): add %rax,%rsi
2ad3(3): sar $0x1,%rsi
2ad6(2): jz 0x1a(%rip)
2ad8(7): mov 0x2084f9(%rip),%rax
2adf(3): test %rax,%rax
2ae2(2): jz 0xe(%rip)
2ae4(1): pop %rbp
2ae5(2): jmp %rax
2ae7(9): nop 0x0(%rax,%rax,1)
2af0(1): pop %rbp
2af1(1): ret near (%rsp)

"__do_global_dtors_aux" :
2b00(7): cmp $0x0,0x2085e1(%rip)
2b07(2): jnz 0x31(%rip)
2b09(8): cmp $0x0,0x2084cf(%rip)
2b11(1): push %rbp
2b12(3): mov %rsp,%rbp
2b15(2): jz 0xe(%rip)
2b17(7): mov 0x2084ea(%rip),%rdi
2b1e(5): call 0xffffedd2(%rip)
2b23(5): call 0xffffff4d(%rip)
2b28(7): mov $0x1,0x2085b9(%rip)
2b2f(1): pop %rbp
2b30(1): ret near (%rsp)
2b31(7): nop 0x0(%rax)
2b38(2): REP ret near (%rsp)

"frame_dummy" :
2b40(1): push %rbp
2b41(3): mov %rsp,%rbp
2b44(1): pop %rbp
2b45(5): jmp 0xffffff6b(%rip)

"filename_unescape" :
2b50(2): xor %edx,%edx
2b52(3): test %rsi,%rsi
2b55(4): lea 0x1(%rdi),%rcx
2b59(4): lea 0xffffffff(%rsi),%r8
2b5d(2): jz 0x5a(%rip)
2b5f(4): movzx 0x0(%rdi,%rdx,1),%eax
2b63(2): test %al,%al
2b65(2): jz 0x2b(%rip)
2b67(2): cmp $0x5c,%al
2b69(2): jnz 0x2f(%rip)
2b6b(3): cmp %rdx,%r8
2b6e(2): jz 0x22(%rip)
2b70(4): add $0x1,%rdx
2b74(4): movzx 0x0(%rdi,%rdx,1),%eax
2b78(2): cmp $0x5c,%al
2b7a(2): jz 0x46(%rip)
2b7c(2): cmp $0x6e,%al
2b7e(2): jnz 0x12(%rip)
2b80(3): mov %rcx,%r9
2b83(4): mov $0xa,0xffffffff(%rcx)
2b87(2): jmp 0x17(%rip)
2b89(7): nop 0x0(%rax)
2b90(2): xor %eax,%eax
2b92(1): ret near (%rsp)
2b93(5): nop 0x0(%rax,%rax,1)
2b98(3): mov %rcx,%r9
2b9b(3): mov %al,0xffffffff(%rcx)
2b9e(4): add $0x1,%rdx
2ba2(4): add $0x1,%rcx
2ba6(3): cmp %rdx,%rsi
2ba9(2): jnbe 0xffffffb6(%rip)
2bab(3): add %rdi,%rsi
2bae(3): cmp %rsi,%r9
2bb1(2): jnb 0x6(%rip)
2bb3(4): mov $0x0,(%r9)
2bb7(3): mov %rdi,%rax
2bba(1): ret near (%rsp)
2bbb(5): nop 0x0(%rax,%rax,1)
2bc0(3): mov %rcx,%r9
2bc3(4): mov $0x5c,0xffffffff(%rcx)
2bc7(2): jmp 0xffffffd7(%rip)

"hex_digits" :
2bd0(1): push %rbp
2bd1(1): push %rbx
2bd2(4): sub $0x8,%rsp
2bd6(7): mov 0x20851b(%rip),%rbp
2bdd(3): test %rbp,%rbp
2be0(2): jz 0x40(%rip)
2be2(3): mov %rdi,%rbx
2be5(5): call 0xffffecfb(%rip)
2bea(3): mov (%rax),%rcx
2bed(3): mov %rbx,%rax
2bf0(2): jmp 0x15(%rip)
2bf2(6): nop 0x0(%rax,%rax,1)
2bf8(4): add $0x1,%rax
2bfc(2): mov %eax,%edx
2bfe(2): sub %ebx,%edx
2c00(3): cmp %rbp,%rdx
2c03(2): jnb 0x20(%rip)
2c05(3): movzx (%rax),%edx
2c08(5): test $0x10,0x1(%rcx,%rdx,2)
2c0d(2): jnz 0xffffffeb(%rip)
2c0f(4): add $0x8,%rsp
2c13(2): xor %eax,%eax
2c15(1): pop %rbx
2c16(1): pop %rbp
2c17(1): ret near (%rsp)
2c18(8): nop 0x0(%rax,%rax,1)
2c20(3): mov %rdi,%rax
2c23(3): cmp $0x0,(%rax)
2c26(3): setz %al
2c29(4): add $0x8,%rsp
2c2d(1): pop %rbx
2c2e(1): pop %rbp
2c2f(1): ret near (%rsp)

"print_filename" :
2c30(1): push %rbp
2c31(1): push %rbx
2c32(3): mov %rdi,%rbx
2c35(4): sub $0x8,%rsp
2c39(3): test %sil,%sil
2c3c(6): jz 0x94(%rip)
2c42(3): movzx (%rdi),%esi
2c45(7): lea 0x4d18(%rip),%rbp
2c4c(3): test %sil,%sil
2c4f(2): jnz 0x2b(%rip)
2c51(2): jmp 0x5d(%rip)
2c53(5): nop 0x0(%rax,%rax,1)
2c58(7): lea 0x4d08(%rip),%rdi
2c5f(5): mov $0x2,%edx
2c64(5): mov $0x1,%esi
2c69(5): call 0xffffeb67(%rip)
2c6e(4): add $0x1,%rbx
2c72(3): movzx (%rbx),%esi
2c75(3): test %sil,%sil
2c78(2): jz 0x36(%rip)
2c7a(4): cmp $0xa,%sil
2c7e(7): mov 0x208423(%rip),%rcx
2c85(2): jz 0x33(%rip)
2c87(4): cmp $0x5c,%sil
2c8b(2): jz 0xffffffcd(%rip)
2c8d(4): mov 0x28(%rcx),%rax
2c91(4): cmp 0x30(%rcx),%rax
2c95(2): jnb 0x53(%rip)
2c97(4): lea 0x1(%rax),%rdx
2c9b(4): add $0x1,%rbx
2c9f(4): mov %rdx,0x28(%rcx)
2ca3(3): mov %sil,(%rax)
2ca6(3): movzx (%rbx),%esi
2ca9(3): test %sil,%sil
2cac(2): jnz 0xffffffce(%rip)
2cae(4): add $0x8,%rsp
2cb2(1): pop %rbx
2cb3(1): pop %rbp
2cb4(1): ret near (%rsp)
2cb5(3): nop (%rax)
2cb8(5): mov $0x2,%edx
2cbd(5): mov $0x1,%esi
2cc2(3): mov %rbp,%rdi
2cc5(5): call 0xffffeb0b(%rip)
2cca(2): jmp 0xffffffa4(%rip)
2ccc(4): nop 0x0(%rax)
2cd0(7): mov 0x2083d1(%rip),%rsi
2cd7(4): add $0x8,%rsp
2cdb(1): pop %rbx
2cdc(1): pop %rbp
2cdd(5): jmp 0xffffea63(%rip)
2ce2(6): nop 0x0(%rax,%rax,1)
2ce8(3): mov %rcx,%rdi
2ceb(5): call 0xffffe9e5(%rip)
2cf0(5): jmp 0xffffff7e(%rip)

"digest_file.isra.1" :
2d00(2): push %r13
2d02(2): push %r12
2d04(5): mov $0x2,%ecx
2d09(1): push %rbp
2d0a(1): push %rbx
2d0b(3): mov %rdi,%rbp
2d0e(7): lea 0x58ad(%rip),%rdi
2d15(3): mov %rsi,%r12
2d18(3): mov %rbp,%rsi
2d1b(4): sub $0x8,%rsp
2d1f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2d21(3): mov $0x0,(%rdx)
2d24(3): setnbe %al
2d27(2): sbb $0x0,%al
2d29(2): test %al,%al
2d2b(6): jnz 0x95(%rip)
2d31(7): mov 0x208378(%rip),%rbx
2d38(5): mov $0x2,%esi
2d3d(7): mov $0x1,0x2083c4(%rip)
2d44(3): mov %rbx,%rdi
2d47(5): call 0x1f59(%rip)
2d4c(3): mov %r12,%rsi
2d4f(3): mov %rbx,%rdi
2d52(5): call 0x1dee(%rip)
2d57(2): test %eax,%eax
2d59(2): jnz 0x17(%rip)
2d5b(6): mov $0x1,%r12d
2d61(4): add $0x8,%rsp
2d65(3): mov %r12d,%eax
2d68(1): pop %rbx
2d69(1): pop %rbp
2d6a(2): pop %r12
2d6c(2): pop %r13
2d6e(1): ret near (%rsp)
2d6f(1): nop 
2d70(3): mov %rbp,%rdx
2d73(2): xor %edi,%edi
2d75(5): mov $0x3,%esi
2d7a(5): call 0x3b36(%rip)
2d7f(3): mov %rax,%rbp
2d82(3): xor %r12d,%r12d
2d85(5): call 0xffffe84b(%rip)
2d8a(2): mov (%rax),%esi
2d8c(7): lea 0x57a2(%rip),%rdx
2d93(2): xor %edi,%edi
2d95(2): xor %eax,%eax
2d97(3): mov %rbp,%rcx
2d9a(5): call 0xffffea96(%rip)
2d9f(7): cmp %rbx,0x20830a(%rip)
2da6(2): jz 0xffffffbb(%rip)
2da8(3): mov %rbx,%rdi
2dab(5): call 0x45b5(%rip)
2db0(4): add $0x8,%rsp
2db4(3): mov %r12d,%eax
2db7(1): pop %rbx
2db8(1): pop %rbp
2db9(2): pop %r12
2dbb(2): pop %r13
2dbd(1): ret near (%rsp)
2dbe(2): nop 
2dc0(7): lea 0x4c81(%rip),%rsi
2dc7(3): mov %rbp,%rdi
2dca(3): mov %rdx,%r13
2dcd(5): call 0x1f03(%rip)
2dd2(3): test %rax,%rax
2dd5(3): mov %rax,%rbx
2dd8(2): jz 0x68(%rip)
2dda(3): mov %rax,%rdi
2ddd(5): mov $0x2,%esi
2de2(5): call 0x1ebe(%rip)
2de7(3): mov %r12,%rsi
2dea(3): mov %rbx,%rdi
2ded(5): call 0x1d53(%rip)
2df2(2): test %eax,%eax
2df4(6): jnz 0xffffff7c(%rip)
2dfa(3): mov %rbx,%rdi
2dfd(5): call 0x4563(%rip)
2e02(2): test %eax,%eax
2e04(6): jz 0xffffff57(%rip)
2e0a(3): mov %rbp,%rdx
2e0d(5): mov $0x3,%esi
2e12(2): xor %edi,%edi
2e14(5): call 0x3a9c(%rip)
2e19(3): mov %rax,%rbx
2e1c(3): xor %r12d,%r12d
2e1f(5): call 0xffffe7b1(%rip)
2e24(2): mov (%rax),%esi
2e26(7): lea 0x5708(%rip),%rdx
2e2d(3): mov %rbx,%rcx
2e30(2): xor %edi,%edi
2e32(2): xor %eax,%eax
2e34(5): call 0xffffe9fc(%rip)
2e39(5): jmp 0xffffff28(%rip)
2e3e(2): nop 
2e40(8): movzx 0x2082aa(%rip),%r12d
2e48(5): call 0xffffe788(%rip)
2e4d(3): mov %rax,%rbx
2e50(3): test %r12b,%r12b
2e53(2): jz 0x7(%rip)
2e55(3): cmp $0x2,(%rax)
2e58(2): jz 0x38(%rip)
2e5a(3): mov %rbp,%rdx
2e5d(5): mov $0x3,%esi
2e62(2): xor %edi,%edi
2e64(5): call 0x3a4c(%rip)
2e69(2): mov (%rbx),%esi
2e6b(7): lea 0x56c3(%rip),%rdx
2e72(3): mov %rax,%rcx
2e75(2): xor %edi,%edi
2e77(2): xor %eax,%eax
2e79(3): xor %r12d,%r12d
2e7c(5): call 0xffffe9b4(%rip)
2e81(5): jmp 0xfffffee0(%rip)
2e86(a): nop 0x0(%rax,%rax,1)
2e90(5): mov $0x1,0x0(%r13)
2e95(5): jmp 0xfffffecc(%rip)

"usage" :
2ea0(2): push %r13
2ea2(2): push %r12
2ea4(5): mov $0x5,%edx
2ea9(1): push %rbp
2eaa(1): push %rbx
2eab(2): mov %edi,%ebp
2ead(7): sub $0x88,%rsp
2eb4(7): mov 0x208265(%rip),%rbx
2ebb(9): mov $0x28,%rax
2ec4(5): mov %rax,0x78(%rsp)
2ec9(2): xor %eax,%eax
2ecb(2): test %edi,%edi
2ecd(2): jz 0x30(%rip)
2ecf(7): lea 0x4c6a(%rip),%rsi
2ed6(2): xor %edi,%edi
2ed8(5): call 0xffffe788(%rip)
2edd(7): mov 0x2081fc(%rip),%rdi
2ee4(3): mov %rax,%rdx
2ee7(3): mov %rbx,%rcx
2eea(5): mov $0x1,%esi
2eef(2): xor %eax,%eax
2ef1(5): call 0xffffe9af(%rip)
2ef6(2): mov %ebp,%edi
2ef8(5): call 0xffffe988(%rip)
2efd(7): lea 0x4c64(%rip),%rsi
2f04(2): xor %edi,%edi
2f06(5): call 0xffffe75a(%rip)
2f0b(7): lea 0x4a60(%rip),%rcx
2f12(6): mov $0xa0,%r8d
2f18(3): mov %rbx,%rdx
2f1b(3): mov %rax,%rsi
2f1e(5): mov $0x1,%edi
2f23(2): xor %eax,%eax
2f25(5): call 0xffffe8eb(%rip)
2f2a(7): mov 0x208177(%rip),%rbx
2f31(7): lea 0x4c78(%rip),%rsi
2f38(5): mov $0x5,%edx
2f3d(2): xor %edi,%edi
2f3f(5): call 0xffffe721(%rip)
2f44(3): mov %rbx,%rsi
2f47(3): mov %rax,%rdi
2f4a(5): call 0xffffe7f6(%rip)
2f4f(7): mov 0x208152(%rip),%rbx
2f56(7): lea 0x4c8b(%rip),%rsi
2f5d(5): mov $0x5,%edx
2f62(2): xor %edi,%edi
2f64(5): call 0xffffe6fc(%rip)
2f69(3): mov %rbx,%rsi
2f6c(3): mov %rax,%rdi
2f6f(5): call 0xffffe7d1(%rip)
2f74(7): lea 0x4c9d(%rip),%rsi
2f7b(2): xor %edi,%edi
2f7d(5): mov $0x5,%edx
2f82(5): call 0xffffe6de(%rip)
2f87(7): lea 0x49e4(%rip),%rdx
2f8e(3): mov %rax,%rsi
2f91(5): mov $0x1,%edi
2f96(2): xor %eax,%eax
2f98(5): call 0xffffe878(%rip)
2f9d(7): mov 0x208104(%rip),%rbx
2fa4(7): lea 0x4cb5(%rip),%rsi
2fab(5): mov $0x5,%edx
2fb0(2): xor %edi,%edi
2fb2(5): call 0xffffe6ae(%rip)
2fb7(3): mov %rbx,%rsi
2fba(3): mov %rax,%rdi
2fbd(5): call 0xffffe783(%rip)
2fc2(7): mov 0x2080df(%rip),%rbx
2fc9(7): lea 0x4cc8(%rip),%rsi
2fd0(5): mov $0x5,%edx
2fd5(2): xor %edi,%edi
2fd7(5): call 0xffffe689(%rip)
2fdc(3): mov %rbx,%rsi
2fdf(3): mov %rax,%rdi
2fe2(5): call 0xffffe75e(%rip)
2fe7(7): mov 0x2080ba(%rip),%rbx
2fee(7): lea 0x4cdb(%rip),%rsi
2ff5(5): mov $0x5,%edx
2ffa(2): xor %edi,%edi
2ffc(5): call 0xffffe664(%rip)
3001(3): mov %rbx,%rsi
3004(3): mov %rax,%rdi
3007(5): call 0xffffe739(%rip)
300c(7): mov 0x208095(%rip),%rbx
3013(7): lea 0x4d36(%rip),%rsi
301a(5): mov $0x5,%edx
301f(2): xor %edi,%edi
3021(5): call 0xffffe63f(%rip)
3026(3): mov %rbx,%rsi
3029(3): mov %rax,%rdi
302c(5): call 0xffffe714(%rip)
3031(7): mov 0x208070(%rip),%rbx
3038(7): lea 0x4ec9(%rip),%rsi
303f(5): mov $0x5,%edx
3044(2): xor %edi,%edi
3046(5): call 0xffffe61a(%rip)
304b(3): mov %rbx,%rsi
304e(3): mov %rax,%rdi
3051(5): call 0xffffe6ef(%rip)
3056(7): mov 0x20804b(%rip),%rbx
305d(7): lea 0x4ed4(%rip),%rsi
3064(5): mov $0x5,%edx
3069(2): xor %edi,%edi
306b(5): call 0xffffe5f5(%rip)
3070(3): mov %rbx,%rsi
3073(3): mov %rax,%rdi
3076(7): lea 0x48ed(%rip),%rbx
307d(5): call 0xffffe6c3(%rip)
3082(7): lea 0x4ee7(%rip),%rsi
3089(2): xor %edi,%edi
308b(5): mov $0x5,%edx
3090(5): call 0xffffe5d0(%rip)
3095(7): lea 0x48db(%rip),%rdx
309c(3): mov %rax,%rsi
309f(5): mov $0x1,%edi
30a4(2): xor %eax,%eax
30a6(5): call 0xffffe76a(%rip)
30ab(7): lea 0x48d0(%rip),%rax
30b2(7): lea 0x490a(%rip),%rcx
30b9(9): mov $0x0,0x60(%rsp)
30c2(9): mov $0x0,0x68(%rsp)
30cb(3): mov %rsp,%rdx
30ce(4): mov %rax,(%rsp)
30d2(7): lea 0x48ab(%rip),%rax
30d9(5): mov %rcx,0x30(%rsp)
30de(7): lea 0x48e8(%rip),%rcx
30e5(5): mov %rax,0x8(%rsp)
30ea(7): lea 0x490b(%rip),%rax
30f1(5): mov %rcx,0x40(%rsp)
30f6(7): lea 0x48da(%rip),%rcx
30fd(5): mov %rax,0x10(%rsp)
3102(7): lea 0x488b(%rip),%rax
3109(5): mov %rcx,0x50(%rsp)
310e(5): mov %rax,0x18(%rsp)
3113(7): lea 0x4890(%rip),%rax
311a(5): mov %rax,0x20(%rsp)
311f(7): lea 0x488e(%rip),%rax
3126(5): mov %rax,0x28(%rsp)
312b(5): mov %rax,0x38(%rsp)
3130(5): mov %rax,0x48(%rsp)
3135(5): mov %rax,0x58(%rsp)
313a(6): nop 0x0(%rax,%rax,1)
3140(4): add $0x10,%rdx
3144(3): mov (%rdx),%rdi
3147(3): test %rdi,%rdi
314a(2): jz 0x15(%rip)
314c(5): mov $0x8,%ecx
3151(3): mov %rbx,%rsi
3154(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3156(3): setnbe %al
3159(2): sbb $0x0,%al
315b(2): test %al,%al
315d(2): jnz 0xffffffe3(%rip)
315f(4): mov 0x8(%rdx),%r12
3163(2): xor %edi,%edi
3165(5): mov $0x5,%edx
316a(7): lea 0x4870(%rip),%rsi
3171(3): test %r12,%r12
3174(6): jz 0xc7(%rip)
317a(5): call 0xffffe4e6(%rip)
317f(7): lea 0x4f1a(%rip),%rcx
3186(7): lea 0x486b(%rip),%rdx
318d(3): mov %rax,%rsi
3190(5): mov $0x1,%edi
3195(2): xor %eax,%eax
3197(5): call 0xffffe679(%rip)
319c(2): xor %esi,%esi
319e(5): mov $0x5,%edi
31a3(5): call 0xffffe65d(%rip)
31a8(3): test %rax,%rax
31ab(2): jz 0x1e(%rip)
31ad(7): lea 0x4852(%rip),%rsi
31b4(5): mov $0x3,%edx
31b9(3): mov %rax,%rdi
31bc(5): call 0xffffe424(%rip)
31c1(2): test %eax,%eax
31c3(6): jnz 0x10d(%rip)
31c9(7): lea 0x483a(%rip),%rsi
31d0(2): xor %edi,%edi
31d2(5): mov $0x5,%edx
31d7(5): call 0xffffe489(%rip)
31dc(7): lea 0x4787(%rip),%rcx
31e3(7): lea 0x4eb6(%rip),%rdx
31ea(3): mov %rax,%rsi
31ed(5): mov $0x1,%edi
31f2(2): xor %eax,%eax
31f4(5): call 0xffffe61c(%rip)
31f9(3): cmp %rbx,%r12
31fc(7): lea 0x479b(%rip),%rcx
3203(7): lea 0x58f7(%rip),%rbx
320a(4): cmove %rcx,%rbx
320e(7): lea 0x4efb(%rip),%rsi
3215(2): xor %edi,%edi
3217(5): mov $0x5,%edx
321c(5): call 0xffffe444(%rip)
3221(3): mov %rbx,%rcx
3224(3): mov %rax,%rsi
3227(3): mov %r12,%rdx
322a(5): mov $0x1,%edi
322f(2): xor %eax,%eax
3231(5): call 0xffffe5df(%rip)
3236(5): jmp 0xfffffcc0(%rip)
323b(5): call 0xffffe425(%rip)
3240(7): lea 0x4e59(%rip),%rcx
3247(7): lea 0x47aa(%rip),%rdx
324e(3): mov %rax,%rsi
3251(5): mov $0x1,%edi
3256(2): xor %eax,%eax
3258(5): call 0xffffe5b8(%rip)
325d(2): xor %esi,%esi
325f(5): mov $0x5,%edi
3264(5): call 0xffffe59c(%rip)
3269(3): test %rax,%rax
326c(2): jz 0x1a(%rip)
326e(7): lea 0x4791(%rip),%rsi
3275(5): mov $0x3,%edx
327a(3): mov %rax,%rdi
327d(5): call 0xffffe363(%rip)
3282(2): test %eax,%eax
3284(2): jnz 0x45(%rip)
3286(7): lea 0x477d(%rip),%rsi
328d(5): mov $0x5,%edx
3292(2): xor %edi,%edi
3294(7): lea 0x46cf(%rip),%r12
329b(7): lea 0x46fc(%rip),%rbx
32a2(5): call 0xffffe3be(%rip)
32a7(7): lea 0x46bc(%rip),%rcx
32ae(7): lea 0x4deb(%rip),%rdx
32b5(3): mov %rax,%rsi
32b8(5): mov $0x1,%edi
32bd(2): xor %eax,%eax
32bf(5): call 0xffffe551(%rip)
32c4(5): jmp 0xffffff4a(%rip)
32c9(7): lea 0x469a(%rip),%r12
32d0(7): mov 0x207dd1(%rip),%r13
32d7(7): lea 0x4dea(%rip),%rsi
32de(2): xor %edi,%edi
32e0(5): mov $0x5,%edx
32e5(5): call 0xffffe37b(%rip)
32ea(3): mov %r13,%rsi
32ed(3): mov %rax,%rdi
32f0(5): call 0xffffe450(%rip)
32f5(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
3300(7): mov %rdi,0x207e11(%rip)
3307(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
3310(7): mov %dil,0x207df9(%rip)
3317(1): ret near (%rsp)

"close_stdout" :
3320(1): push %rbp
3321(1): push %rbx
3322(4): sub $0x8,%rsp
3326(7): mov 0x207d7b(%rip),%rdi
332d(5): call 0x4463(%rip)
3332(2): test %eax,%eax
3334(2): jz 0x18(%rip)
3336(5): call 0xffffe29a(%rip)
333b(7): cmp $0x0,0x207dce(%rip)
3342(3): mov %rax,%rbx
3345(2): jz 0x1e(%rip)
3347(3): cmp $0x20,(%rax)
334a(2): jnz 0x19(%rip)
334c(7): mov 0x207d8d(%rip),%rdi
3353(5): call 0x443d(%rip)
3358(2): test %eax,%eax
335a(2): jnz 0x48(%rip)
335c(4): add $0x8,%rsp
3360(1): pop %rbx
3361(1): pop %rbp
3362(1): ret near (%rsp)
3363(7): lea 0x51bb(%rip),%rsi
336a(2): xor %edi,%edi
336c(5): mov $0x5,%edx
3371(5): call 0xffffe2ef(%rip)
3376(7): mov 0x207d9b(%rip),%rdi
337d(3): mov %rax,%rbp
3380(3): test %rdi,%rdi
3383(2): jz 0x2a(%rip)
3385(5): call 0x34fb(%rip)
338a(2): mov (%rbx),%esi
338c(7): lea 0x519e(%rip),%rdx
3393(3): mov %rax,%rcx
3396(3): mov %rbp,%r8
3399(2): xor %edi,%edi
339b(2): xor %eax,%eax
339d(5): call 0xffffe493(%rip)
33a2(6): mov 0x207c78(%rip),%edi
33a8(5): call 0xffffe248(%rip)
33ad(2): mov (%rbx),%esi
33af(7): lea 0x517f(%rip),%rdx
33b6(3): mov %rax,%rcx
33b9(2): xor %edi,%edi
33bb(2): xor %eax,%eax
33bd(5): call 0xffffe473(%rip)
33c2(2): jmp 0xffffffe0(%rip)

"sha1_init_ctx" :
33d0(a): mov $0x-1167088121787636991,%rax
33da(8): mov $0x0,0x18(%rdi)
33e2(3): mov %rax,(%rdi)
33e5(a): mov $0x1167088121787636990,%rax
33ef(4): mov %rax,0x8(%rdi)
33f3(5): mov $0xc3d2e1f0,%eax
33f8(4): mov %rax,0x10(%rdi)
33fc(1): ret near (%rsp)

"sha1_read_ctx" :
3400(2): mov (%rdi),%edx
3402(3): mov %rsi,%rax
3405(2): bswap %edx
3407(2): mov %edx,(%rsi)
3409(3): mov 0x4(%rdi),%edx
340c(2): bswap %edx
340e(3): mov %edx,0x4(%rsi)
3411(3): mov 0x8(%rdi),%edx
3414(2): bswap %edx
3416(3): mov %edx,0x8(%rsi)
3419(3): mov 0xc(%rdi),%edx
341c(2): bswap %edx
341e(3): mov %edx,0xc(%rsi)
3421(3): mov 0x10(%rdi),%edx
3424(2): bswap %edx
3426(3): mov %edx,0x10(%rsi)
3429(1): ret near (%rsp)

"sha1_process_block" :
3430(2): push %r15
3432(2): push %r14
3434(2): mov %esi,%ecx
3436(2): push %r13
3438(2): push %r12
343a(3): xor %r10d,%r10d
343d(1): push %rbp
343e(1): push %rbx
343f(3): mov %rdx,%rbx
3442(3): mov %rdi,%r15
3445(7): sub $0xc8,%rsp
344c(4): mov 0x8(%rbx),%r9d
3450(4): mov 0x10(%rbx),%r8d
3454(9): mov $0x28,%rax
345d(8): mov %rax,0xb8(%rsp)
3465(2): xor %eax,%eax
3467(3): mov %rsi,%rax
346a(5): mov %rdx,0x60(%rsp)
346f(4): and $0xfffffffc,%rax
3473(3): add %rdi,%rax
3476(3): add 0x14(%rbx),%ecx
3479(3): mov 0xc(%rbx),%edi
347c(3): mov %rax,%r14
347f(5): mov %rax,0x58(%rsp)
3484(2): mov (%rdx),%eax
3486(3): mov 0x4(%rdx),%edx
3489(3): mov %ecx,0x14(%rbx)
348c(3): mov 0x18(%rbx),%ecx
348f(4): setb %r10b
3493(4): shr $0x20,%rsi
3497(2): add %esi,%ecx
3499(3): add %r10d,%ecx
349c(3): cmp %r14,%r15
349f(3): mov %ecx,0x18(%rbx)
34a2(6): jnb 0x11db(%rip)
34a8(5): lea 0x70(%rsp),%rcx
34ad(5): mov %r8d,0x50(%rsp)
34b2(4): mov %edi,0x4c(%rsp)
34b6(5): mov %r9d,0x48(%rsp)
34bb(4): mov %edx,0x44(%rsp)
34bf(3): mov %r9d,%esi
34c2(5): mov %rcx,0x68(%rsp)
34c7(4): mov %eax,0x54(%rsp)
34cb(3): mov %r15,%rcx
34ce(2): nop 
34d0(5): mov 0x68(%rsp),%r11
34d5(3): xor %r9d,%r9d
34d8(8): nop 0x0(%rax,%rax,1)
34e0(4): mov 0x0(%rcx,%r9,1),%r10d
34e4(3): bswap %edx
34e7(4): mov %r10d,0x0(%r11,%r9,1)
34eb(4): add $0x4,%r9
34ef(4): cmp $0x40,%r9
34f3(2): jnz 0xffffffed(%rip)
34f5(5): mov 0x70(%rsp),%r11d
34fa(5): mov 0x74(%rsp),%r10d
34ff(4): add $0x40,%rcx
3503(4): mov 0x78(%rsp),%ebx
3507(4): mov 0x7c(%rsp),%ebp
350b(8): mov 0x80(%rsp),%r13d
3513(8): mov 0x84(%rsp),%r14d
351b(8): lea 0x5a827999(%r11,%r8,1),%r9d
3523(3): mov %eax,%r8d
3526(8): mov 0x88(%rsp),%r15d
352e(4): rol $0x5,%r8d
3532(3): add %r9d,%r8d
3535(3): mov %esi,%r9d
3538(3): xor %edi,%r9d
353b(3): and %edx,%r9d
353e(3): ror $0x2,%edx
3541(3): xor %edi,%r9d
3544(8): lea 0x5a827999(%r10,%rdi,1),%edi
354c(3): add %r8d,%r9d
354f(3): mov %edx,%r8d
3552(3): xor %esi,%r8d
3555(3): and %eax,%r8d
3558(3): ror $0x2,%eax
355b(3): xor %esi,%r8d
355e(7): lea 0x5a827999(%rbx,%rsi,1),%esi
3565(3): add %edi,%r8d
3568(3): mov %r9d,%edi
356b(3): rol $0x5,%edi
356e(3): add %edi,%r8d
3571(2): mov %edx,%edi
3573(2): xor %eax,%edi
3575(3): and %r9d,%edi
3578(4): ror $0x2,%r9d
357c(2): xor %edx,%edi
357e(7): lea 0x5a827999(%rbp,%rdx,1),%edx
3585(2): add %esi,%edi
3587(3): mov %r8d,%esi
358a(3): rol $0x5,%esi
358d(2): add %esi,%edi
358f(2): mov %eax,%esi
3591(3): xor %r9d,%esi
3594(3): and %r8d,%esi
3597(4): ror $0x2,%r8d
359b(2): xor %eax,%esi
359d(8): lea 0x5a827999(%r13,%rax,1),%eax
35a5(2): add %edx,%esi
35a7(2): mov %edi,%edx
35a9(3): rol $0x5,%edx
35ac(2): add %edx,%esi
35ae(3): mov %r9d,%edx
35b1(3): xor %r8d,%edx
35b4(2): and %edi,%edx
35b6(3): xor %r9d,%edx
35b9(8): lea 0x5a827999(%r14,%r9,1),%r9d
35c1(2): add %eax,%edx
35c3(2): mov %esi,%eax
35c5(3): ror $0x2,%edi
35c8(3): rol $0x5,%eax
35cb(2): add %eax,%edx
35cd(3): mov %r8d,%eax
35d0(2): xor %edi,%eax
35d2(2): and %esi,%eax
35d4(3): ror $0x2,%esi
35d7(3): xor %r8d,%eax
35da(8): lea 0x5a827999(%r15,%r8,1),%r8d
35e2(8): mov 0x8c(%rsp),%r15d
35ea(3): add %r9d,%eax
35ed(3): mov %edx,%r9d
35f0(4): rol $0x5,%r9d
35f4(3): add %r9d,%eax
35f7(3): mov %edi,%r9d
35fa(3): xor %esi,%r9d
35fd(3): and %edx,%r9d
3600(3): ror $0x2,%edx
3603(3): xor %edi,%r9d
3606(8): lea 0x5a827999(%r15,%rdi,1),%edi
360e(8): mov 0x90(%rsp),%r15d
3616(3): add %r8d,%r9d
3619(3): mov %eax,%r8d
361c(4): rol $0x5,%r8d
3620(3): add %r8d,%r9d
3623(3): mov %esi,%r8d
3626(3): xor %edx,%r8d
3629(3): and %eax,%r8d
362c(3): ror $0x2,%eax
362f(3): xor %esi,%r8d
3632(8): lea 0x5a827999(%r15,%rsi,1),%esi
363a(8): mov 0x94(%rsp),%r15d
3642(3): add %edi,%r8d
3645(3): mov %r9d,%edi
3648(3): rol $0x5,%edi
364b(3): add %edi,%r8d
364e(2): mov %edx,%edi
3650(2): xor %eax,%edi
3652(3): and %r9d,%edi
3655(4): ror $0x2,%r9d
3659(2): xor %edx,%edi
365b(8): lea 0x5a827999(%r15,%rdx,1),%edx
3663(8): mov 0x98(%rsp),%r15d
366b(2): add %esi,%edi
366d(3): mov %r8d,%esi
3670(3): rol $0x5,%esi
3673(2): add %esi,%edi
3675(2): mov %eax,%esi
3677(3): xor %r9d,%esi
367a(3): and %r8d,%esi
367d(4): ror $0x2,%r8d
3681(2): xor %eax,%esi
3683(8): lea 0x5a827999(%r15,%rax,1),%eax
368b(8): mov 0x9c(%rsp),%r15d
3693(2): add %edx,%esi
3695(2): mov %edi,%edx
3697(3): rol $0x5,%edx
369a(2): add %edx,%esi
369c(3): mov %r9d,%edx
369f(3): xor %r8d,%edx
36a2(2): and %edi,%edx
36a4(3): ror $0x2,%edi
36a7(3): xor %r9d,%edx
36aa(8): lea 0x5a827999(%r15,%r9,1),%r9d
36b2(8): mov 0xa0(%rsp),%r15d
36ba(2): add %eax,%edx
36bc(2): mov %esi,%eax
36be(3): rol $0x5,%eax
36c1(2): add %eax,%edx
36c3(3): mov %r8d,%eax
36c6(2): xor %edi,%eax
36c8(2): and %esi,%eax
36ca(3): ror $0x2,%esi
36cd(3): xor %r8d,%eax
36d0(8): lea 0x5a827999(%r15,%r8,1),%r8d
36d8(8): mov 0xa4(%rsp),%r15d
36e0(3): add %r9d,%eax
36e3(3): mov %edx,%r9d
36e6(4): rol $0x5,%r9d
36ea(3): add %r9d,%eax
36ed(3): mov %edi,%r9d
36f0(3): xor %esi,%r9d
36f3(3): and %edx,%r9d
36f6(3): ror $0x2,%edx
36f9(3): xor %edi,%r9d
36fc(8): lea 0x5a827999(%r15,%rdi,1),%edi
3704(8): mov 0xa8(%rsp),%r15d
370c(3): add %r8d,%r9d
370f(3): mov %eax,%r8d
3712(4): rol $0x5,%r8d
3716(3): add %r8d,%r9d
3719(3): mov %esi,%r8d
371c(3): xor %edx,%r8d
371f(3): and %eax,%r8d
3722(3): xor %esi,%r8d
3725(8): lea 0x5a827999(%r15,%rsi,1),%esi
372d(8): mov 0xac(%rsp),%r15d
3735(3): add %edi,%r8d
3738(3): mov %r9d,%edi
373b(3): rol $0x5,%edi
373e(3): ror $0x2,%eax
3741(3): xor %ebx,%r11d
3744(3): add %edi,%r8d
3747(2): mov %edx,%edi
3749(8): xor 0x90(%rsp),%r11d
3751(2): xor %eax,%edi
3753(8): xor 0xa4(%rsp),%r11d
375b(3): xor %ebp,%r10d
375e(3): and %r9d,%edi
3761(4): ror $0x2,%r9d
3765(8): xor 0x94(%rsp),%r10d
376d(2): xor %edx,%edi
376f(8): lea 0x5a827999(%r15,%rdx,1),%edx
3777(8): xor 0xa8(%rsp),%r10d
377f(2): add %esi,%edi
3781(3): mov %r8d,%esi
3784(3): rol $0x5,%esi
3787(3): rol $0x1,%r11d
378a(2): add %esi,%edi
378c(2): mov %eax,%esi
378e(3): xor %r9d,%esi
3791(3): rol $0x1,%r10d
3794(3): and %r8d,%esi
3797(4): ror $0x2,%r8d
379b(2): xor %eax,%esi
379d(8): lea 0x5a827999(%r11,%rax,1),%eax
37a5(2): add %edx,%esi
37a7(2): mov %edi,%edx
37a9(3): rol $0x5,%edx
37ac(2): add %edx,%esi
37ae(3): mov %r9d,%edx
37b1(3): xor %r8d,%edx
37b4(2): and %edi,%edx
37b6(3): ror $0x2,%edi
37b9(3): xor %r9d,%edx
37bc(8): lea 0x5a827999(%r10,%r9,1),%r9d
37c4(3): mov %edi,%r12d
37c7(2): add %eax,%edx
37c9(2): mov %esi,%eax
37cb(3): rol $0x5,%eax
37ce(2): add %eax,%edx
37d0(3): mov %r8d,%eax
37d3(2): xor %edi,%eax
37d5(3): xor %r13d,%ebx
37d8(2): and %esi,%eax
37da(3): ror $0x2,%esi
37dd(3): xor %r8d,%eax
37e0(3): xor %esi,%r12d
37e3(3): add %r9d,%eax
37e6(3): mov %edx,%r9d
37e9(3): and %edx,%r12d
37ec(4): rol $0x5,%r9d
37f0(3): xor %edi,%r12d
37f3(3): ror $0x2,%edx
37f6(3): add %r9d,%eax
37f9(8): mov 0x98(%rsp),%r9d
3801(3): xor %ebx,%r9d
3804(2): mov %esi,%ebx
3806(3): xor %r15d,%r9d
3809(2): xor %edx,%ebx
380b(3): mov %edx,%r15d
380e(3): rol $0x1,%r9d
3811(2): and %eax,%ebx
3813(8): lea 0x5a827999(%r9,%r8,1),%r8d
381b(2): xor %esi,%ebx
381d(3): add %r8d,%r12d
3820(3): mov %eax,%r8d
3823(3): ror $0x2,%eax
3826(4): rol $0x5,%r8d
382a(3): add %r8d,%r12d
382d(3): mov %ebp,%r8d
3830(2): mov %eax,%ebp
3832(3): xor %r14d,%r8d
3835(8): xor 0x9c(%rsp),%r8d
383d(3): xor %r11d,%r8d
3840(3): rol $0x1,%r8d
3843(8): lea 0x5a827999(%r8,%rdi,1),%edi
384b(2): add %edi,%ebx
384d(3): mov %r12d,%edi
3850(3): rol $0x5,%edi
3853(2): add %edi,%ebx
3855(7): mov 0x88(%rsp),%edi
385c(3): xor %r13d,%edi
385f(7): xor 0xa0(%rsp),%edi
3866(3): xor %r10d,%edi
3869(2): rol $0x1,%edi
386b(3): xor %eax,%r15d
386e(7): lea 0x6ed9eba1(%rdi,%rsi,1),%esi
3875(3): xor %r12d,%r15d
3878(4): ror $0x2,%r12d
387c(3): xor %r12d,%ebp
387f(3): add %r15d,%esi
3882(3): mov %ebx,%r15d
3885(2): xor %ebx,%ebp
3887(4): rol $0x5,%r15d
388b(3): ror $0x2,%ebx
388e(3): add %esi,%r15d
3891(7): mov 0x8c(%rsp),%esi
3898(3): mov %ebx,%r13d
389b(3): xor %r14d,%esi
389e(7): xor 0xa4(%rsp),%esi
38a5(3): mov %r12d,%r14d
38a8(3): xor %ebx,%r14d
38ab(3): xor %r15d,%r14d
38ae(3): xor %r9d,%esi
38b1(2): rol $0x1,%esi
38b3(7): lea 0x6ed9eba1(%rsi,%rdx,1),%edx
38ba(2): add %ebp,%edx
38bc(3): mov %r15d,%ebp
38bf(4): ror $0x2,%r15d
38c3(3): rol $0x5,%ebp
38c6(3): xor %r15d,%r13d
38c9(2): add %edx,%ebp
38cb(7): mov 0x88(%rsp),%edx
38d2(7): xor 0x90(%rsp),%edx
38d9(7): xor 0xa8(%rsp),%edx
38e0(3): xor %r8d,%edx
38e3(2): rol $0x1,%edx
38e5(7): lea 0x6ed9eba1(%rdx,%rax,1),%eax
38ec(3): add %r14d,%eax
38ef(3): mov %ebp,%r14d
38f2(4): rol $0x5,%r14d
38f6(3): add %eax,%r14d
38f9(7): mov 0x8c(%rsp),%eax
3900(7): xor 0x94(%rsp),%eax
3907(7): xor 0xac(%rsp),%eax
390e(2): xor %edi,%eax
3910(2): rol $0x1,%eax
3912(3): xor %ebp,%r13d
3915(3): ror $0x2,%ebp
3918(8): lea 0x6ed9eba1(%rax,%r12,1),%r12d
3920(3): add %r13d,%r12d
3923(3): mov %r14d,%r13d
3926(4): rol $0x5,%r13d
392a(3): add %r12d,%r13d
392d(8): mov 0x90(%rsp),%r12d
3935(8): xor 0x98(%rsp),%r12d
393d(5): mov %r11d,0x1c(%rsp)
3942(3): xor %r11d,%r12d
3945(3): xor %esi,%r12d
3948(3): rol $0x1,%r12d
394b(3): mov %r12d,%r11d
394e(3): mov %r15d,%r12d
3951(3): xor %ebp,%r12d
3954(8): lea 0x6ed9eba1(%r11,%rbx,1),%ebx
395c(5): mov %r11d,0x24(%rsp)
3961(3): xor %r14d,%r12d
3964(4): ror $0x2,%r14d
3968(3): add %r12d,%ebx
396b(3): mov %r13d,%r12d
396e(4): rol $0x5,%r12d
3972(3): add %ebx,%r12d
3975(7): mov 0x94(%rsp),%ebx
397c(7): xor 0x9c(%rsp),%ebx
3983(3): xor %r10d,%ebx
3986(2): xor %edx,%ebx
3988(2): rol $0x1,%ebx
398a(3): mov %ebx,%r11d
398d(2): mov %ebp,%ebx
398f(3): xor %r14d,%ebx
3992(8): lea 0x6ed9eba1(%r11,%r15,1),%r15d
399a(5): mov %r11d,0x28(%rsp)
399f(3): xor %r13d,%ebx
39a2(4): ror $0x2,%r13d
39a6(3): add %r15d,%ebx
39a9(3): mov %r12d,%r15d
39ac(4): rol $0x5,%r15d
39b0(3): add %ebx,%r15d
39b3(7): mov 0x98(%rsp),%ebx
39ba(7): xor 0xa0(%rsp),%ebx
39c1(3): xor %r9d,%ebx
39c4(2): xor %eax,%ebx
39c6(2): rol $0x1,%ebx
39c8(3): mov %ebx,%r11d
39cb(3): mov %r14d,%ebx
39ce(3): xor %r13d,%ebx
39d1(8): lea 0x6ed9eba1(%r11,%rbp,1),%ebp
39d9(5): mov %r11d,0x2c(%rsp)
39de(3): xor %r12d,%ebx
39e1(2): add %ebp,%ebx
39e3(3): mov %r15d,%ebp
39e6(3): rol $0x5,%ebp
39e9(4): ror $0x2,%r12d
39ed(2): add %ebp,%ebx
39ef(7): mov 0x9c(%rsp),%ebp
39f6(7): xor 0xa4(%rsp),%ebp
39fd(3): xor %r8d,%ebp
3a00(4): xor 0x24(%rsp),%ebp
3a04(2): rol $0x1,%ebp
3a06(3): mov %ebp,%r11d
3a09(3): mov %r13d,%ebp
3a0c(3): xor %r12d,%ebp
3a0f(8): lea 0x6ed9eba1(%r11,%r14,1),%r14d
3a17(5): mov %r11d,0xc(%rsp)
3a1c(3): xor %r15d,%ebp
3a1f(4): ror $0x2,%r15d
3a23(3): add %r14d,%ebp
3a26(3): mov %ebx,%r14d
3a29(4): rol $0x5,%r14d
3a2d(3): add %ebp,%r14d
3a30(7): mov 0xa0(%rsp),%ebp
3a37(7): xor 0xa8(%rsp),%ebp
3a3e(2): xor %edi,%ebp
3a40(4): xor 0x28(%rsp),%ebp
3a44(2): rol $0x1,%ebp
3a46(3): mov %ebp,%r11d
3a49(3): mov %r12d,%ebp
3a4c(3): xor %r15d,%ebp
3a4f(8): lea 0x6ed9eba1(%r11,%r13,1),%r13d
3a57(5): mov %r11d,0x10(%rsp)
3a5c(2): xor %ebx,%ebp
3a5e(3): ror $0x2,%ebx
3a61(3): add %r13d,%ebp
3a64(3): mov %r14d,%r13d
3a67(4): rol $0x5,%r13d
3a6b(3): add %ebp,%r13d
3a6e(7): mov 0xa4(%rsp),%ebp
3a75(7): xor 0xac(%rsp),%ebp
3a7c(2): xor %esi,%ebp
3a7e(4): xor 0x2c(%rsp),%ebp
3a82(2): rol $0x1,%ebp
3a84(3): mov %ebp,%r11d
3a87(3): mov %r15d,%ebp
3a8a(2): xor %ebx,%ebp
3a8c(8): lea 0x6ed9eba1(%r11,%r12,1),%r12d
3a94(5): mov %r11d,0x34(%rsp)
3a99(3): xor %r14d,%ebp
3a9c(3): add %r12d,%ebp
3a9f(3): mov %r13d,%r12d
3aa2(4): rol $0x5,%r12d
3aa6(3): add %ebp,%r12d
3aa9(4): ror $0x2,%r14d
3aad(4): mov 0x1c(%rsp),%ebp
3ab1(7): xor 0xa8(%rsp),%ebp
3ab8(2): xor %edx,%ebp
3aba(4): xor 0xc(%rsp),%ebp
3abe(2): rol $0x1,%ebp
3ac0(3): mov %ebp,%r11d
3ac3(2): mov %ebx,%ebp
3ac5(3): xor %r14d,%ebp
3ac8(8): lea 0x6ed9eba1(%r11,%r15,1),%r15d
3ad0(5): mov %r11d,0x14(%rsp)
3ad5(3): xor %r13d,%ebp
3ad8(4): ror $0x2,%r13d
3adc(3): add %r15d,%ebp
3adf(3): mov %r12d,%r15d
3ae2(4): rol $0x5,%r15d
3ae6(3): add %r15d,%ebp
3ae9(8): mov 0xac(%rsp),%r15d
3af1(3): xor %r10d,%r15d
3af4(3): xor %r8d,%r10d
3af7(3): xor %eax,%r15d
3afa(5): xor 0x10(%rsp),%r15d
3aff(3): rol $0x1,%r15d
3b02(3): mov %r15d,%r11d
3b05(3): mov %r14d,%r15d
3b08(5): mov %r11d,0x18(%rsp)
3b0d(8): lea 0x6ed9eba1(%r11,%rbx,1),%ebx
3b15(5): mov 0x1c(%rsp),%r11d
3b1a(3): xor %r13d,%r15d
3b1d(3): xor %r12d,%r15d
3b20(4): ror $0x2,%r12d
3b24(3): xor %r9d,%r11d
3b27(5): xor 0x24(%rsp),%r11d
3b2c(3): add %r15d,%ebx
3b2f(5): xor 0x34(%rsp),%r11d
3b34(3): mov %ebp,%r15d
3b37(4): rol $0x5,%r15d
3b3b(3): add %r15d,%ebx
3b3e(3): mov %r11d,%r15d
3b41(3): mov %r13d,%r11d
3b44(3): rol $0x1,%r15d
3b47(3): xor %r12d,%r11d
3b4a(8): lea 0x6ed9eba1(%r15,%r14,1),%r14d
3b52(3): xor %ebp,%r11d
3b55(3): ror $0x2,%ebp
3b58(3): add %r14d,%r11d
3b5b(3): mov %ebx,%r14d
3b5e(4): rol $0x5,%r14d
3b62(3): add %r14d,%r11d
3b65(5): xor 0x28(%rsp),%r10d
3b6a(3): xor %edi,%r9d
3b6d(5): xor 0x14(%rsp),%r10d
3b72(5): xor 0x2c(%rsp),%r9d
3b77(3): xor %esi,%r8d
3b7a(5): xor 0x18(%rsp),%r9d
3b7f(5): xor 0xc(%rsp),%r8d
3b84(2): xor %edx,%edi
3b86(4): xor 0x10(%rsp),%edi
3b8a(3): rol $0x1,%r10d
3b8d(3): mov %r10d,%r14d
3b90(3): mov %r12d,%r10d
3b93(3): rol $0x1,%r9d
3b96(3): xor %ebp,%r10d
3b99(8): lea 0x6ed9eba1(%r14,%r13,1),%r13d
3ba1(3): xor %r15d,%r8d
3ba4(3): xor %ebx,%r10d
3ba7(3): ror $0x2,%ebx
3baa(3): rol $0x1,%r8d
3bad(3): add %r13d,%r10d
3bb0(3): mov %r11d,%r13d
3bb3(3): xor %r14d,%edi
3bb6(4): rol $0x5,%r13d
3bba(3): add %r13d,%r10d
3bbd(3): mov %r9d,%r13d
3bc0(3): mov %ebp,%r9d
3bc3(3): xor %ebx,%r9d
3bc6(8): lea 0x6ed9eba1(%r13,%r12,1),%r12d
3bce(3): xor %r11d,%r9d
3bd1(4): ror $0x2,%r11d
3bd5(3): add %r12d,%r9d
3bd8(3): mov %r10d,%r12d
3bdb(4): rol $0x5,%r12d
3bdf(3): add %r12d,%r9d
3be2(3): mov %r8d,%r12d
3be5(3): mov %ebx,%r8d
3be8(3): xor %r11d,%r8d
3beb(8): lea 0x6ed9eba1(%r12,%rbp,1),%ebp
3bf3(3): xor %r10d,%r8d
3bf6(4): ror $0x2,%r10d
3bfa(3): add %ebp,%r8d
3bfd(3): mov %r9d,%ebp
3c00(3): rol $0x5,%ebp
3c03(3): add %ebp,%r8d
3c06(2): rol $0x1,%edi
3c08(2): xor %eax,%esi
3c0a(4): xor 0x34(%rsp),%esi
3c0e(2): mov %edi,%ebp
3c10(3): mov %r11d,%edi
3c13(3): xor %r10d,%edi
3c16(7): lea 0x6ed9eba1(%rbp,%rbx,1),%ebx
3c1d(4): mov %ebp,0x1c(%rsp)
3c21(3): xor %r9d,%edi
3c24(4): ror $0x2,%r9d
3c28(2): add %ebx,%edi
3c2a(3): mov %r8d,%ebx
3c2d(3): xor %r13d,%esi
3c30(3): rol $0x5,%ebx
3c33(2): rol $0x1,%esi
3c35(2): add %ebx,%edi
3c37(2): mov %esi,%ebx
3c39(3): mov %r10d,%esi
3c3c(2): mov %edi,%ebp
3c3e(4): mov %ebx,0x20(%rsp)
3c42(8): lea 0x6ed9eba1(%rbx,%r11,1),%r11d
3c4a(4): mov 0x24(%rsp),%ebx
3c4e(3): xor %r9d,%esi
3c51(3): rol $0x5,%ebp
3c54(3): xor %r8d,%esi
3c57(4): ror $0x2,%r8d
3c5b(2): xor %ebx,%edx
3c5d(4): xor 0x14(%rsp),%edx
3c61(3): add %r11d,%esi
3c64(2): add %ebp,%esi
3c66(4): mov 0x2c(%rsp),%ebp
3c6a(3): xor %r12d,%edx
3c6d(2): rol $0x1,%edx
3c6f(3): mov %edx,%r11d
3c72(3): mov %r9d,%edx
3c75(5): mov %r11d,0x24(%rsp)
3c7a(8): lea 0x6ed9eba1(%r11,%r10,1),%r10d
3c82(5): mov 0x28(%rsp),%r11d
3c87(3): xor %r8d,%edx
3c8a(2): xor %edi,%edx
3c8c(3): ror $0x2,%edi
3c8f(3): xor %r11d,%eax
3c92(4): xor 0x18(%rsp),%eax
3c96(3): add %r10d,%edx
3c99(4): xor 0x1c(%rsp),%eax
3c9d(3): mov %esi,%r10d
3ca0(4): rol $0x5,%r10d
3ca4(3): add %r10d,%edx
3ca7(2): rol $0x1,%eax
3ca9(3): mov %eax,%r10d
3cac(3): mov %r8d,%eax
3caf(8): lea 0x6ed9eba1(%r10,%r9,1),%r9d
3cb7(2): xor %edi,%eax
3cb9(5): mov %r10d,0x28(%rsp)
3cbe(2): xor %esi,%eax
3cc0(3): ror $0x2,%esi
3cc3(3): mov %edx,%r10d
3cc6(3): add %r9d,%eax
3cc9(3): mov %edx,%r9d
3ccc(3): and %esi,%r10d
3ccf(4): rol $0x5,%r9d
3cd3(3): add %eax,%r9d
3cd6(2): mov %ebx,%eax
3cd8(4): mov 0xc(%rsp),%ebx
3cdc(2): xor %ebp,%eax
3cde(3): xor %r15d,%eax
3ce1(4): xor 0x20(%rsp),%eax
3ce5(3): xor %r11d,%ebx
3ce8(3): xor %r14d,%ebx
3ceb(4): xor 0x24(%rsp),%ebx
3cef(2): rol $0x1,%eax
3cf1(4): mov %eax,0x2c(%rsp)
3cf5(8): lea 0x8f1bbcdc(%rax,%r8,1),%r8d
3cfd(3): mov %r9d,%eax
3d00(3): rol $0x5,%eax
3d03(3): mov %ebx,%r11d
3d06(4): mov 0x10(%rsp),%ebx
3d0a(3): add %eax,%r8d
3d0d(2): mov %edx,%eax
3d0f(3): ror $0x2,%edx
3d12(2): or %esi,%eax
3d14(3): rol $0x1,%r11d
3d17(2): and %edi,%eax
3d19(2): xor %ebp,%ebx
3d1b(8): lea 0x8f1bbcdc(%r11,%rdi,1),%edi
3d23(3): or %r10d,%eax
3d26(3): mov %r9d,%r10d
3d29(3): xor %r13d,%ebx
3d2c(3): add %eax,%r8d
3d2f(3): or %edx,%r10d
3d32(3): mov %r9d,%eax
3d35(3): and %esi,%r10d
3d38(2): and %edx,%eax
3d3a(4): xor 0x28(%rsp),%ebx
3d3e(3): or %r10d,%eax
3d41(4): ror $0x2,%r9d
3d45(4): mov 0xc(%rsp),%ebp
3d49(2): add %edi,%eax
3d4b(3): mov %r8d,%edi
3d4e(3): mov %r8d,%r10d
3d51(3): rol $0x5,%edi
3d54(2): add %eax,%edi
3d56(2): rol $0x1,%ebx
3d58(3): and %r9d,%r10d
3d5b(4): mov %ebx,0x30(%rsp)
3d5f(7): lea 0x8f1bbcdc(%rbx,%rsi,1),%esi
3d66(4): mov 0x34(%rsp),%ebx
3d6a(2): mov %edi,%eax
3d6c(3): rol $0x5,%eax
3d6f(2): xor %ebx,%ebp
3d71(2): add %eax,%esi
3d73(3): mov %r8d,%eax
3d76(3): xor %r12d,%ebp
3d79(4): xor 0x2c(%rsp),%ebp
3d7d(3): or %r9d,%eax
3d80(2): and %edx,%eax
3d82(4): ror $0x2,%r8d
3d86(3): or %r10d,%eax
3d89(2): add %eax,%esi
3d8b(2): mov %edi,%eax
3d8d(2): rol $0x1,%ebp
3d8f(3): or %r8d,%eax
3d92(7): lea 0x8f1bbcdc(%rbp,%rdx,1),%edx
3d99(4): mov %ebp,0xc(%rsp)
3d9d(4): mov 0x10(%rsp),%ebp
3da1(4): xor 0x14(%rsp),%ebp
3da5(3): mov %eax,%r10d
3da8(2): mov %edi,%eax
3daa(4): xor 0x1c(%rsp),%ebp
3dae(3): and %r9d,%r10d
3db1(3): and %r8d,%eax
3db4(3): or %r10d,%eax
3db7(3): ror $0x2,%edi
3dba(2): add %edx,%eax
3dbc(2): mov %esi,%edx
3dbe(3): rol $0x5,%edx
3dc1(3): xor %r11d,%ebp
3dc4(2): add %eax,%edx
3dc6(2): rol $0x1,%ebp
3dc8(3): mov %edx,%r10d
3dcb(8): lea 0x8f1bbcdc(%rbp,%r9,1),%r9d
3dd3(4): rol $0x5,%r10d
3dd7(4): mov %ebp,0x34(%rsp)
3ddb(3): add %r10d,%r9d
3dde(3): mov %esi,%r10d
3de1(3): or %edi,%r10d
3de4(3): mov %r10d,%eax
3de7(3): mov %esi,%r10d
3dea(3): and %edi,%r10d
3ded(3): and %r8d,%eax
3df0(3): or %r10d,%eax
3df3(3): mov %edx,%r10d
3df6(3): add %eax,%r9d
3df9(3): ror $0x2,%esi
3dfc(4): xor 0x18(%rsp),%ebx
3e00(4): mov 0x20(%rsp),%ebp
3e04(3): or %esi,%r10d
3e07(2): mov %edx,%eax
3e09(3): and %edi,%r10d
3e0c(2): and %esi,%eax
3e0e(3): ror $0x2,%edx
3e11(3): or %r10d,%eax
3e14(3): mov %r9d,%r10d
3e17(2): xor %ebx,%ebp
3e19(4): xor 0x30(%rsp),%ebp
3e1d(3): and %edx,%r10d
3e20(2): mov %ebp,%ebx
3e22(4): mov 0x14(%rsp),%ebp
3e26(2): rol $0x1,%ebx
3e28(8): lea 0x8f1bbcdc(%rbx,%r8,1),%r8d
3e30(4): mov %ebx,0x38(%rsp)
3e34(3): xor %r15d,%ebp
3e37(4): xor 0x24(%rsp),%ebp
3e3b(4): xor 0xc(%rsp),%ebp
3e3f(3): add %r8d,%eax
3e42(3): mov %r9d,%r8d
3e45(4): rol $0x5,%r8d
3e49(3): add %eax,%r8d
3e4c(3): mov %r8d,%eax
3e4f(2): rol $0x1,%ebp
3e51(3): rol $0x5,%eax
3e54(7): lea 0x8f1bbcdc(%rbp,%rdi,1),%edi
3e5b(2): add %eax,%edi
3e5d(3): mov %r9d,%eax
3e60(4): ror $0x2,%r9d
3e64(2): or %edx,%eax
3e66(2): and %esi,%eax
3e68(3): or %r10d,%eax
3e6b(3): mov %r8d,%r10d
3e6e(2): add %eax,%edi
3e70(4): mov 0x18(%rsp),%eax
3e74(3): or %r9d,%r10d
3e77(3): and %edx,%r10d
3e7a(3): xor %r14d,%eax
3e7d(4): xor 0x28(%rsp),%eax
3e81(4): xor 0x34(%rsp),%eax
3e85(2): rol $0x1,%eax
3e87(2): mov %eax,%ebx
3e89(3): mov %r8d,%eax
3e8c(3): and %r9d,%eax
3e8f(7): lea 0x8f1bbcdc(%rbx,%rsi,1),%esi
3e96(4): mov %ebx,0x3c(%rsp)
3e9a(3): or %r10d,%eax
3e9d(3): xor %r13d,%r15d
3ea0(5): xor 0x2c(%rsp),%r15d
3ea5(5): xor 0x38(%rsp),%r15d
3eaa(2): add %esi,%eax
3eac(2): mov %edi,%esi
3eae(3): rol $0x5,%esi
3eb1(4): ror $0x2,%r8d
3eb5(3): mov %edi,%r10d
3eb8(2): add %eax,%esi
3eba(3): and %r8d,%r10d
3ebd(3): xor %r12d,%r14d
3ec0(2): mov %esi,%eax
3ec2(3): rol $0x1,%r15d
3ec5(3): rol $0x5,%eax
3ec8(8): lea 0x8f1bbcdc(%r15,%rdx,1),%edx
3ed0(2): add %eax,%edx
3ed2(2): mov %edi,%eax
3ed4(3): ror $0x2,%edi
3ed7(3): or %r8d,%eax
3eda(3): and %r9d,%eax
3edd(3): or %r10d,%eax
3ee0(3): mov %r14d,%r10d
3ee3(3): xor %r11d,%r10d
3ee6(2): add %eax,%edx
3ee8(2): mov %esi,%eax
3eea(3): xor %ebp,%r10d
3eed(2): and %edi,%eax
3eef(3): mov %r10d,%r14d
3ef2(3): mov %esi,%r10d
3ef5(3): ror $0x2,%esi
3ef8(3): rol $0x1,%r14d
3efb(3): or %edi,%r10d
3efe(3): and %r8d,%r10d
3f01(8): lea 0x8f1bbcdc(%r14,%r9,1),%ebx
3f09(3): mov %edx,%r9d
3f0c(3): or %r10d,%eax
3f0f(4): rol $0x5,%r9d
3f13(2): add %ebx,%eax
3f15(3): mov %r9d,%ebx
3f18(5): mov 0x1c(%rsp),%r9d
3f1d(2): add %eax,%ebx
3f1f(3): xor %r13d,%r9d
3f22(5): xor 0x30(%rsp),%r9d
3f27(5): xor 0x3c(%rsp),%r9d
3f2c(3): rol $0x1,%r9d
3f2f(3): mov %r9d,%r13d
3f32(8): lea 0x8f1bbcdc(%r9,%r8,1),%r8d
3f3a(3): mov %ebx,%r9d
3f3d(4): rol $0x5,%r9d
3f41(3): add %r9d,%r8d
3f44(3): mov %edx,%r9d
3f47(3): or %esi,%r9d
3f4a(3): mov %r9d,%eax
3f4d(3): mov %edx,%r9d
3f50(3): ror $0x2,%edx
3f53(3): and %esi,%r9d
3f56(2): and %edi,%eax
3f58(3): or %r9d,%eax
3f5b(4): lea 0x0(%rax,%r8,1),%r9d
3f5f(5): mov 0x20(%rsp),%r8d
3f64(2): mov %ebx,%eax
3f66(2): and %edx,%eax
3f68(3): xor %r12d,%r8d
3f6b(5): xor 0xc(%rsp),%r8d
3f70(3): xor %r15d,%r8d
3f73(3): rol $0x1,%r8d
3f76(3): mov %r8d,%r12d
3f79(3): mov %ebx,%r8d
3f7c(3): ror $0x2,%ebx
3f7f(8): lea 0x8f1bbcdc(%r12,%rdi,1),%r10d
3f87(4): mov 0x1c(%rsp),%edi
3f8b(4): xor 0x24(%rsp),%edi
3f8f(3): or %edx,%r8d
3f92(4): xor 0x34(%rsp),%edi
3f96(3): and %esi,%r8d
3f99(3): or %r8d,%eax
3f9c(3): mov %r9d,%r8d
3f9f(4): rol $0x5,%r8d
3fa3(3): add %r10d,%eax
3fa6(3): xor %r14d,%edi
3fa9(3): mov %r8d,%r10d
3fac(3): add %eax,%r10d
3faf(2): rol $0x1,%edi
3fb1(7): lea 0x8f1bbcdc(%rdi,%rsi,1),%esi
3fb8(3): mov %r10d,%r8d
3fbb(4): mov %edi,0x40(%rsp)
3fbf(4): rol $0x5,%r8d
3fc3(3): add %r8d,%esi
3fc6(3): mov %r9d,%r8d
3fc9(3): or %ebx,%r8d
3fcc(3): mov %r8d,%eax
3fcf(3): mov %r9d,%r8d
3fd2(4): ror $0x2,%r9d
3fd6(3): and %ebx,%r8d
3fd9(2): and %edx,%eax
3fdb(3): or %r8d,%eax
3fde(3): lea 0x0(%rax,%rsi,1),%edi
3fe1(4): mov 0x20(%rsp),%esi
3fe5(4): xor 0x28(%rsp),%esi
3fe9(4): xor 0x38(%rsp),%esi
3fed(3): mov %r10d,%eax
3ff0(3): and %r9d,%eax
3ff3(3): xor %r13d,%esi
3ff6(2): rol $0x1,%esi
3ff8(3): mov %esi,%r8d
3ffb(3): mov %r10d,%esi
3ffe(4): ror $0x2,%r10d
4002(3): or %r9d,%esi
4005(5): mov %r8d,0x1c(%rsp)
400a(8): lea 0x8f1bbcdc(%r8,%rdx,1),%r8d
4012(2): and %ebx,%esi
4014(2): mov %edi,%edx
4016(2): or %esi,%eax
4018(3): rol $0x5,%edx
401b(2): mov %edi,%esi
401d(3): add %r8d,%eax
4020(3): mov %edx,%r8d
4023(4): mov 0x24(%rsp),%edx
4027(4): xor 0x2c(%rsp),%edx
402b(3): add %eax,%r8d
402e(3): and %r10d,%esi
4031(3): mov %r8d,%eax
4034(3): rol $0x5,%eax
4037(2): xor %ebp,%edx
4039(3): xor %r12d,%edx
403c(2): rol $0x1,%edx
403e(4): mov %edx,0x24(%rsp)
4042(7): lea 0x8f1bbcdc(%rdx,%rbx,1),%edx
4049(2): add %eax,%edx
404b(2): mov %edi,%eax
404d(3): ror $0x2,%edi
4050(3): or %r10d,%eax
4053(3): and %r9d,%eax
4056(2): or %esi,%eax
4058(2): add %eax,%edx
405a(4): mov 0x28(%rsp),%eax
405e(3): xor %r11d,%eax
4061(4): xor 0x3c(%rsp),%eax
4065(4): xor 0x40(%rsp),%eax
4069(2): rol $0x1,%eax
406b(2): mov %eax,%ebx
406d(3): mov %r8d,%eax
4070(2): or %edi,%eax
4072(8): lea 0x8f1bbcdc(%rbx,%r9,1),%r9d
407a(4): mov %ebx,0x28(%rsp)
407e(2): mov %eax,%esi
4080(3): mov %r8d,%eax
4083(4): mov 0x2c(%rsp),%ebx
4087(3): and %r10d,%esi
408a(2): and %edi,%eax
408c(2): or %esi,%eax
408e(3): add %r9d,%eax
4091(3): mov %edx,%r9d
4094(4): rol $0x5,%r9d
4098(4): xor 0x30(%rsp),%ebx
409c(5): xor 0xc(%rsp),%r11d
40a1(3): add %eax,%r9d
40a4(4): ror $0x2,%r8d
40a8(3): xor %r15d,%ebx
40ab(4): xor 0x1c(%rsp),%ebx
40af(3): xor %r14d,%r11d
40b2(5): xor 0x24(%rsp),%r11d
40b7(2): mov %ebx,%eax
40b9(4): mov 0x30(%rsp),%ebx
40bd(2): rol $0x1,%eax
40bf(3): rol $0x1,%r11d
40c2(8): lea 0x8f1bbcdc(%rax,%r10,1),%esi
40ca(3): mov %r9d,%r10d
40cd(4): mov %eax,0x2c(%rsp)
40d1(4): rol $0x5,%r10d
40d5(5): mov %r11d,0x10(%rsp)
40da(3): add %r10d,%esi
40dd(3): mov %edx,%r10d
40e0(3): or %r8d,%r10d
40e3(3): mov %r10d,%eax
40e6(3): mov %edx,%r10d
40e9(3): ror $0x2,%edx
40ec(3): and %r8d,%r10d
40ef(2): and %edi,%eax
40f1(8): lea 0x8f1bbcdc(%r11,%rdi,1),%edi
40f9(5): mov 0x34(%rsp),%r11d
40fe(3): or %r10d,%eax
4101(4): lea 0x0(%rax,%rsi,1),%r10d
4105(3): mov %r9d,%esi
4108(3): mov %r9d,%eax
410b(2): or %edx,%esi
410d(2): and %edx,%eax
410f(4): ror $0x2,%r9d
4113(3): xor %r11d,%ebx
4116(3): and %r8d,%esi
4119(3): xor %r13d,%ebx
411c(4): xor 0x28(%rsp),%ebx
4120(2): or %esi,%eax
4122(2): add %edi,%eax
4124(3): mov %r10d,%edi
4127(3): rol $0x5,%edi
412a(2): add %eax,%edi
412c(2): rol $0x1,%ebx
412e(8): lea 0x8f1bbcdc(%rbx,%r8,1),%esi
4136(3): mov %edi,%r8d
4139(4): mov %ebx,0x14(%rsp)
413d(4): rol $0x5,%r8d
4141(4): mov 0x38(%rsp),%ebx
4145(3): add %r8d,%esi
4148(3): mov %r10d,%r8d
414b(3): or %r9d,%r8d
414e(3): xor %ebp,%r11d
4151(5): xor 0x40(%rsp),%r11d
4156(3): mov %r8d,%eax
4159(3): mov %r10d,%r8d
415c(4): ror $0x2,%r10d
4160(3): and %r9d,%r8d
4163(2): and %edx,%eax
4165(5): xor 0x10(%rsp),%r11d
416a(3): or %r8d,%eax
416d(4): lea 0x0(%rax,%rsi,1),%r8d
4171(4): mov 0xc(%rsp),%eax
4175(3): rol $0x1,%r11d
4178(2): xor %ebx,%eax
417a(5): mov %r11d,0x18(%rsp)
417f(3): xor %r12d,%eax
4182(4): xor 0x2c(%rsp),%eax
4186(2): rol $0x1,%eax
4188(4): mov %eax,0xc(%rsp)
418c(2): mov %edi,%eax
418e(3): or %r10d,%eax
4191(2): mov %eax,%esi
4193(2): mov %edi,%eax
4195(3): ror $0x2,%edi
4198(3): and %r9d,%esi
419b(3): and %r10d,%eax
419e(8): lea 0xca62c1d6(%r11,%r9,1),%r9d
41a6(2): or %esi,%eax
41a8(4): mov 0xc(%rsp),%esi
41ac(5): mov 0x1c(%rsp),%r11d
41b1(7): lea 0x8f1bbcdc(%rsi,%rdx,1),%edx
41b8(2): add %edx,%eax
41ba(3): mov %r8d,%edx
41bd(3): rol $0x5,%edx
41c0(2): add %eax,%edx
41c2(3): mov %r10d,%eax
41c5(2): xor %edi,%eax
41c7(3): xor %r8d,%eax
41ca(4): ror $0x2,%r8d
41ce(3): add %r9d,%eax
41d1(3): mov %edx,%r9d
41d4(3): mov %r8d,%esi
41d7(4): rol $0x5,%r9d
41db(3): add %eax,%r9d
41de(2): mov %ebx,%eax
41e0(4): mov 0x3c(%rsp),%ebx
41e4(2): xor %ebx,%eax
41e6(3): xor %r11d,%eax
41e9(4): xor 0x14(%rsp),%eax
41ed(3): mov %eax,%r8d
41f0(3): rol $0x1,%r8d
41f3(3): mov %r8d,%eax
41f6(3): mov %edi,%r8d
41f9(3): xor %esi,%r8d
41fc(4): mov %eax,0x1c(%rsp)
4200(8): lea 0xca62c1d6(%rax,%r10,1),%eax
4208(3): xor %edx,%r8d
420b(3): xor %r15d,%ebp
420e(4): xor 0x24(%rsp),%ebp
4212(4): xor 0xc(%rsp),%ebp
4216(3): mov %edx,%r10d
4219(3): add %r8d,%eax
421c(4): ror $0x2,%r10d
4220(3): mov %r9d,%r8d
4223(2): mov %esi,%edx
4225(3): xor %r10d,%edx
4228(4): rol $0x5,%r8d
422c(3): xor %r13d,%r15d
422f(3): add %eax,%r8d
4232(2): mov %edx,%eax
4234(5): xor 0x2c(%rsp),%r15d
4239(2): rol $0x1,%ebp
423b(3): xor %r9d,%eax
423e(4): ror $0x2,%r9d
4242(7): lea 0xca62c1d6(%rbp,%rdi,1),%edi
4249(5): xor 0x1c(%rsp),%r15d
424e(4): mov %ebp,0x20(%rsp)
4252(2): add %edi,%eax
4254(3): mov %r8d,%edi
4257(3): rol $0x5,%edi
425a(2): add %eax,%edi
425c(2): mov %ebx,%eax
425e(3): rol $0x1,%r15d
4261(3): xor %r14d,%eax
4264(4): xor 0x28(%rsp),%eax
4268(5): mov %r15d,0x70(%rsp)
426d(4): xor 0x18(%rsp),%eax
4271(3): mov %r15d,%ebp
4274(2): mov %eax,%edx
4276(3): mov %r10d,%eax
4279(2): rol $0x1,%edx
427b(3): xor %r9d,%eax
427e(7): lea 0xca62c1d6(%rdx,%rsi,1),%esi
4285(3): xor %r8d,%eax
4288(4): ror $0x2,%r8d
428c(4): mov %edx,0x30(%rsp)
4290(2): add %esi,%eax
4292(2): mov %edi,%esi
4294(3): rol $0x5,%esi
4297(2): add %eax,%esi
4299(3): mov %r9d,%eax
429c(3): xor %r8d,%eax
429f(2): mov %eax,%edx
42a1(8): lea 0xca62c1d6(%r15,%r10,1),%eax
42a9(3): mov %esi,%r10d
42ac(2): xor %edi,%edx
42ae(3): mov %r8d,%r15d
42b1(2): add %edx,%eax
42b3(4): rol $0x5,%r10d
42b7(3): ror $0x2,%edi
42ba(3): mov %r10d,%edx
42bd(3): mov %r14d,%r10d
42c0(3): xor %edi,%r15d
42c3(3): xor %r12d,%r10d
42c6(5): xor 0x10(%rsp),%r10d
42cb(2): add %eax,%edx
42cd(5): xor 0x20(%rsp),%r10d
42d2(3): mov %r15d,%eax
42d5(4): mov 0x40(%rsp),%ebx
42d9(2): xor %esi,%eax
42db(3): ror $0x2,%esi
42de(3): xor %r11d,%r12d
42e1(3): mov %r11d,%r14d
42e4(3): mov %esi,%r11d
42e7(4): mov %ebp,0x38(%rsp)
42eb(3): rol $0x1,%r10d
42ee(8): lea 0xca62c1d6(%r10,%r9,1),%r9d
42f6(5): mov %r10d,0x34(%rsp)
42fb(5): mov %r10d,0x74(%rsp)
4300(3): mov %edi,%r10d
4303(3): add %r9d,%eax
4306(3): mov %edx,%r9d
4309(3): xor %esi,%r10d
430c(4): rol $0x5,%r9d
4310(3): xor %edx,%r10d
4313(3): ror $0x2,%edx
4316(3): add %r9d,%eax
4319(3): mov %r13d,%r9d
431c(3): xor %edx,%r11d
431f(3): xor %ebx,%r9d
4322(5): xor 0x14(%rsp),%r9d
4327(3): xor %eax,%r11d
432a(5): xor 0x30(%rsp),%r9d
432f(3): mov %edx,%r15d
4332(3): rol $0x1,%r9d
4335(8): lea 0xca62c1d6(%r9,%r8,1),%r8d
433d(5): mov %r9d,0x78(%rsp)
4342(3): add %r10d,%r8d
4345(3): mov %eax,%r10d
4348(4): rol $0x5,%r10d
434c(3): add %r8d,%r10d
434f(5): mov 0xc(%rsp),%r8d
4354(3): xor %r12d,%r8d
4357(3): xor %ebp,%r8d
435a(4): mov 0x24(%rsp),%ebp
435e(3): rol $0x1,%r8d
4361(8): lea 0xca62c1d6(%r8,%rdi,1),%edi
4369(5): mov %r8d,0x7c(%rsp)
436e(3): add %r11d,%edi
4371(3): mov %r10d,%r11d
4374(4): rol $0x5,%r11d
4378(3): add %edi,%r11d
437b(4): mov 0x18(%rsp),%edi
437f(3): ror $0x2,%eax
4382(2): xor %ebp,%ebx
4384(3): xor %eax,%r15d
4387(3): xor %r10d,%r15d
438a(4): ror $0x2,%r10d
438e(2): xor %ebx,%edi
4390(4): xor 0x34(%rsp),%edi
4394(4): mov 0x28(%rsp),%ebx
4398(3): mov %r10d,%r13d
439b(2): rol $0x1,%edi
439d(7): lea 0xca62c1d6(%rdi,%rsi,1),%esi
43a4(7): mov %edi,0x80(%rsp)
43ab(3): add %r15d,%esi
43ae(3): mov %r11d,%r15d
43b1(4): rol $0x5,%r15d
43b5(3): add %esi,%r15d
43b8(3): mov %r14d,%esi
43bb(3): mov %eax,%r14d
43be(2): xor %ebx,%esi
43c0(4): xor 0x1c(%rsp),%esi
43c4(3): xor %r10d,%r14d
43c7(3): xor %r11d,%r14d
43ca(4): ror $0x2,%r11d
43ce(3): xor %r11d,%r13d
43d1(3): mov %r11d,%r12d
43d4(3): xor %r15d,%r13d
43d7(3): xor %r9d,%esi
43da(2): rol $0x1,%esi
43dc(7): lea 0xca62c1d6(%rsi,%rdx,1),%edx
43e3(7): mov %esi,0x84(%rsp)
43ea(3): add %r14d,%edx
43ed(3): mov %r15d,%r14d
43f0(4): ror $0x2,%r15d
43f4(4): rol $0x5,%r14d
43f8(3): add %edx,%r14d
43fb(2): mov %ebp,%edx
43fd(4): mov 0x2c(%rsp),%ebp
4401(2): xor %ebp,%edx
4403(4): xor 0x20(%rsp),%edx
4407(3): xor %r8d,%edx
440a(2): rol $0x1,%edx
440c(7): lea 0xca62c1d6(%rdx,%rax,1),%eax
4413(7): mov %edx,0x88(%rsp)
441a(3): add %r13d,%eax
441d(3): mov %r14d,%r13d
4420(4): rol $0x5,%r13d
4424(3): add %eax,%r13d
4427(4): mov 0x10(%rsp),%eax
442b(2): xor %ebx,%eax
442d(4): xor 0x30(%rsp),%eax
4431(4): mov 0x14(%rsp),%ebx
4435(3): xor %r15d,%r12d
4438(3): xor %r14d,%r12d
443b(4): ror $0x2,%r14d
443f(2): xor %ebp,%ebx
4441(4): xor 0x38(%rsp),%ebx
4445(3): mov %r14d,%ebp
4448(2): xor %edi,%eax
444a(2): rol $0x1,%eax
444c(8): lea 0xca62c1d6(%rax,%r10,1),%r10d
4454(7): mov %eax,0x8c(%rsp)
445b(2): xor %esi,%ebx
445d(3): add %r12d,%r10d
4460(3): mov %r13d,%r12d
4463(2): rol $0x1,%ebx
4465(4): rol $0x5,%r12d
4469(8): lea 0xca62c1d6(%rbx,%r11,1),%r11d
4471(7): mov %ebx,0x90(%rsp)
4478(3): add %r10d,%r12d
447b(3): mov %r15d,%r10d
447e(3): xor %r14d,%r10d
4481(3): xor %r13d,%r10d
4484(4): ror $0x2,%r13d
4488(3): add %r11d,%r10d
448b(3): mov %r12d,%r11d
448e(3): xor %r13d,%ebp
4491(4): rol $0x5,%r11d
4495(3): xor %r12d,%ebp
4498(4): ror $0x2,%r12d
449c(3): add %r11d,%r10d
449f(5): mov 0x10(%rsp),%r11d
44a4(5): xor 0xc(%rsp),%r11d
44a9(5): xor 0x34(%rsp),%r11d
44ae(3): xor %edx,%r11d
44b1(3): rol $0x1,%r11d
44b4(8): lea 0xca62c1d6(%r11,%r15,1),%r15d
44bc(8): mov %r11d,0x94(%rsp)
44c4(3): add %r15d,%ebp
44c7(3): mov %r10d,%r15d
44ca(4): rol $0x5,%r15d
44ce(3): add %r15d,%ebp
44d1(5): mov 0x14(%rsp),%r15d
44d6(5): xor 0x18(%rsp),%r15d
44db(3): xor %r15d,%r9d
44de(3): mov %r13d,%r15d
44e1(3): xor %eax,%r9d
44e4(3): rol $0x1,%r9d
44e7(3): xor %r12d,%r15d
44ea(8): lea 0xca62c1d6(%r9,%r14,1),%r14d
44f2(3): xor %r10d,%r15d
44f5(8): mov %r9d,0x98(%rsp)
44fd(3): add %r15d,%r14d
4500(3): mov %ebp,%r15d
4503(4): rol $0x5,%r15d
4507(3): add %r15d,%r14d
450a(3): mov %r10d,%r15d
450d(5): mov 0xc(%rsp),%r10d
4512(5): xor 0x1c(%rsp),%r10d
4517(4): ror $0x2,%r15d
451b(3): xor %r10d,%r8d
451e(3): xor %r8d,%ebx
4521(3): mov %r12d,%r8d
4524(2): rol $0x1,%ebx
4526(3): xor %r15d,%r8d
4529(8): lea 0xca62c1d6(%rbx,%r13,1),%r10d
4531(5): mov 0x18(%rsp),%r13d
4536(5): xor 0x20(%rsp),%r13d
453b(3): xor %ebp,%r8d
453e(3): ror $0x2,%ebp
4541(7): mov %ebx,0x9c(%rsp)
4548(3): add %r10d,%r8d
454b(3): mov %r14d,%r10d
454e(4): rol $0x5,%r10d
4552(3): xor %r13d,%edi
4555(3): add %r10d,%r8d
4558(5): mov 0x30(%rsp),%r13d
455d(3): xor %edi,%r11d
4560(3): mov %r15d,%edi
4563(3): rol $0x1,%r11d
4566(2): xor %ebp,%edi
4568(8): lea 0xca62c1d6(%r11,%r12,1),%r10d
4570(3): xor %r14d,%edi
4573(4): ror $0x2,%r14d
4577(8): mov %r11d,0xa0(%rsp)
457f(3): add %r10d,%edi
4582(3): mov %r8d,%r10d
4585(4): rol $0x5,%r10d
4589(3): add %r10d,%edi
458c(5): mov 0x1c(%rsp),%r10d
4591(3): xor %r13d,%r10d
4594(3): xor %r10d,%esi
4597(3): xor %esi,%r9d
459a(2): mov %ebp,%esi
459c(3): rol $0x1,%r9d
459f(3): xor %r14d,%esi
45a2(8): mov %r9d,0xa4(%rsp)
45aa(8): lea 0xca62c1d6(%r9,%r15,1),%r9d
45b2(3): xor %r8d,%esi
45b5(3): mov %edi,%r15d
45b8(4): ror $0x2,%r8d
45bc(3): add %r9d,%esi
45bf(5): mov 0x20(%rsp),%r9d
45c4(5): xor 0x38(%rsp),%r9d
45c9(4): rol $0x5,%r15d
45cd(3): add %r15d,%esi
45d0(3): xor %r9d,%edx
45d3(2): xor %edx,%ebx
45d5(3): mov %r14d,%edx
45d8(2): rol $0x1,%ebx
45da(3): xor %r8d,%edx
45dd(8): lea 0xca62c1d6(%rbx,%rbp,1),%r9d
45e5(2): xor %edi,%edx
45e7(7): mov %ebx,0xa8(%rsp)
45ee(4): mov 0x54(%rsp),%ebx
45f2(3): ror $0x2,%edi
45f5(4): add %edi,0x4c(%rsp)
45f9(3): add %r9d,%edx
45fc(3): mov %esi,%r9d
45ff(4): rol $0x5,%r9d
4603(3): add %r9d,%edx
4606(5): mov 0x34(%rsp),%r9d
460b(4): add %edx,0x44(%rsp)
460f(3): xor %r13d,%r9d
4612(3): xor %r9d,%eax
4615(3): xor %r11d,%eax
4618(2): rol $0x1,%eax
461a(7): mov %eax,0xac(%rsp)
4621(7): lea 0xca62c1d6(%rbx,%rax,1),%eax
4628(5): mov 0x60(%rsp),%rbx
462d(3): add %eax,%r14d
4630(3): mov %r8d,%eax
4633(2): xor %edi,%eax
4635(4): mov 0x4c(%rsp),%edi
4639(2): xor %esi,%eax
463b(3): ror $0x2,%esi
463e(4): add %esi,0x48(%rsp)
4642(3): add %eax,%r14d
4645(4): mov 0x48(%rsp),%esi
4649(2): mov %edx,%eax
464b(4): mov 0x44(%rsp),%edx
464f(3): rol $0x5,%eax
4652(3): mov %edi,0xc(%rbx)
4655(3): add %r14d,%eax
4658(4): mov %eax,0x54(%rsp)
465c(2): mov %eax,(%rbx)
465e(3): mov %edx,0x4(%rbx)
4661(3): mov %esi,0x8(%rbx)
4664(5): add %r8d,0x50(%rsp)
4669(5): cmp %rcx,0x58(%rsp)
466e(5): mov 0x50(%rsp),%r8d
4673(4): mov %r8d,0x10(%rbx)
4677(6): jnbe 0xffffee59(%rip)
467d(8): mov 0xb8(%rsp),%rax
4685(9): xor $0x28,%rax
468e(2): jnz 0x14(%rip)
4690(7): add $0xc8,%rsp
4697(1): pop %rbx
4698(1): pop %rbp
4699(2): pop %r12
469b(2): pop %r13
469d(2): pop %r14
469f(2): pop %r15
46a1(1): ret near (%rsp)
46a2(5): call 0xffffcfee(%rip)

"sha1_finish_ctx" :
46b0(1): push %rbp
46b1(1): push %rbx
46b2(3): mov %rsi,%rbp
46b5(3): mov %rdi,%rbx
46b8(4): sub $0x8,%rsp
46bc(3): mov 0x1c(%rdi),%eax
46bf(3): mov 0x18(%rbx),%edx
46c2(3): cmp $0x38,%eax
46c5(2): mov %eax,%ecx
46c7(3): sbb %r8,%r8
46ca(4): and $0xffffffc0,%r8
46ce(4): sub $0xffffff80,%r8
46d2(3): cmp $0x38,%eax
46d5(3): sbb %rsi,%rsi
46d8(4): and $0xfffffff0,%rsi
46dc(4): add $0x1f,%rsi
46e0(3): cmp $0x38,%eax
46e3(3): sbb %rdi,%rdi
46e6(3): xor %r9d,%r9d
46e9(4): and $0xfffffff0,%rdi
46ed(4): add $0x1e,%rdi
46f1(3): add 0x14(%rbx),%ecx
46f4(4): setb %r9b
46f8(3): mov %ecx,0x14(%rbx)
46fb(3): test %r9d,%r9d
46fe(2): jz 0x8(%rip)
4700(3): add $0x1,%edx
4703(3): mov %edx,0x18(%rbx)
4706(3): mov %ecx,%r9d
4709(3): shl/sal $0x3,%edx
470c(3): shl/sal $0x3,%ecx
470f(4): shr $0x1d,%r9d
4713(2): bswap %ecx
4715(3): or %r9d,%edx
4718(4): lea 0x20(%rbx),%r9
471c(2): bswap %edx
471e(4): mov %edx,0x20(%rbx,%rdi,4)
4722(3): mov %r8,%rdi
4725(4): mov %ecx,0x20(%rbx,%rsi,4)
4729(3): sub %rax,%rdi
472c(4): lea 0x0(%r9,%rax,1),%rdx
4730(7): lea 0x3e09(%rip),%rsi
4737(4): lea 0xfffffff8(%rdi),%rcx
473b(4): cmp $0x8,%rcx
473f(2): jnb 0x29(%rip)
4741(3): test $0x4,%cl
4744(2): jnz 0x74(%rip)
4746(3): test %rcx,%rcx
4749(2): jz 0x4b(%rip)
474b(7): movzx 0x3dee(%rip),%eax
4752(3): test $0x2,%cl
4755(2): mov %al,(%rdx)
4757(2): jz 0x3d(%rip)
4759(5): movzx 0xfffffffe(%rsi,%rcx,1),%eax
475e(5): mov %ax,0xfffffffe(%rdx,%rcx,1)
4763(2): jmp 0x31(%rip)
4765(3): nop (%rax)
4768(7): mov 0x3dd1(%rip),%rax
476f(4): lea 0x8(%rdx),%rdi
4773(4): and $0xfffffff8,%rdi
4777(3): mov %rax,(%rdx)
477a(5): mov 0xfffffff8(%rsi,%rcx,1),%rax
477f(5): mov %rax,0xfffffff8(%rdx,%rcx,1)
4784(3): sub %rdi,%rdx
4787(3): add %rdx,%rcx
478a(3): sub %rdx,%rsi
478d(4): shr $0x3,%rcx
4791(3): REP movsd rsi(%ds,10),rdi(%es,10)
4794(3): mov %rbx,%rdx
4797(3): mov %r8,%rsi
479a(3): mov %r9,%rdi
479d(5): call 0xffffec93(%rip)
47a2(4): add $0x8,%rsp
47a6(3): mov %rbp,%rsi
47a9(3): mov %rbx,%rdi
47ac(1): pop %rbx
47ad(1): pop %rbp
47ae(5): jmp 0xffffec52(%rip)
47b3(5): nop 0x0(%rax,%rax,1)
47b8(6): mov 0x3d82(%rip),%eax
47be(2): mov %eax,(%rdx)
47c0(4): mov 0xfffffffc(%rsi,%rcx,1),%eax
47c4(4): mov %eax,0xfffffffc(%rdx,%rcx,1)
47c8(2): jmp 0xffffffcc(%rip)

"sha1_process_bytes" :
47d0(2): push %r15
47d2(2): push %r14
47d4(2): push %r13
47d6(2): push %r12
47d8(3): mov %rdx,%r13
47db(1): push %rbp
47dc(1): push %rbx
47dd(3): mov %rsi,%r12
47e0(3): mov %rdi,%rbx
47e3(4): sub $0x8,%rsp
47e7(3): mov 0x1c(%rdx),%eax
47ea(2): test %eax,%eax
47ec(6): jnz 0x134(%rip)
47f2(4): cmp $0x3f,%r12
47f6(6): jbe 0x10e(%rip)
47fc(3): test $0x3,%bl
47ff(6): jz 0xe9(%rip)
4805(4): cmp $0x40,%r12
4809(4): lea 0x20(%r13),%rbp
480d(2): jz 0x63(%rip)
480f(5): lea 0xffffffbf(%r12),%r15
4814(4): shr $0x6,%r15
4818(4): lea 0x1(%r15),%r14
481c(4): shl/sal $0x6,%r14
4820(3): add %rbx,%r14
4823(5): nop 0x0(%rax,%rax,1)
4828(4): movdqu (%rbx),%xmm0
482c(3): mov %r13,%rdx
482f(5): mov $0x40,%esi
4834(3): mov %rbp,%rdi
4837(4): add $0x40,%rbx
483b(4): movups %xmm0,0x0(%rbp)
483f(5): movdqu 0xffffffd0(%rbx),%xmm0
4844(4): movups %xmm0,0x10(%rbp)
4848(5): movdqu 0xffffffe0(%rbx),%xmm0
484d(4): movups %xmm0,0x20(%rbp)
4851(5): movdqu 0xfffffff0(%rbx),%xmm0
4856(4): movups %xmm0,0x30(%rbp)
485a(5): call 0xffffebd6(%rip)
485f(3): cmp %r14,%rbx
4862(2): jnz 0xffffffc6(%rip)
4864(3): neg %r15
4867(4): shl/sal $0x6,%r15
486b(5): lea 0xffffffc0(%r12,%r15,1),%r12
4870(4): mov 0x1c(%r13),%edi
4874(4): cmp $0x8,%r12d
4878(3): mov %r12d,%eax
487b(5): lea 0x0(%rbp,%rdi,1),%rcx
4880(6): jnb 0xe0(%rip)
4886(4): test $0x4,%r12b
488a(6): jnz 0x1f7(%rip)
4890(3): test %r12d,%r12d
4893(2): jz 0xf(%rip)
4895(3): movzx (%rbx),%edx
4898(2): test $0x2,%al
489a(2): mov %dl,(%rcx)
489c(6): jnz 0x1f9(%rip)
48a2(3): add %rdi,%r12
48a5(4): cmp $0x3f,%r12
48a9(2): jbe 0x25(%rip)
48ab(3): mov %r13,%rdx
48ae(5): mov $0x40,%esi
48b3(3): mov %rbp,%rdi
48b6(5): call 0xffffeb7a(%rip)
48bb(4): sub $0x40,%r12
48bf(4): lea 0x60(%r13),%rsi
48c3(3): mov %rbp,%rdi
48c6(3): mov %r12,%rdx
48c9(5): call 0xffffcea7(%rip)
48ce(4): mov %r12d,0x1c(%r13)
48d2(4): add $0x8,%rsp
48d6(1): pop %rbx
48d7(1): pop %rbp
48d8(2): pop %r12
48da(2): pop %r13
48dc(2): pop %r14
48de(2): pop %r15
48e0(1): ret near (%rsp)
48e1(7): nop 0x0(%rax)
48e8(3): mov %r12,%rbp
48eb(3): mov %rbx,%rdi
48ee(3): mov %r13,%rdx
48f1(4): and $0xffffffc0,%rbp
48f5(4): and $0x3f,%r12d
48f9(3): mov %rbp,%rsi
48fc(3): add %rbp,%rbx
48ff(5): call 0xffffeb31(%rip)
4904(3): test %r12,%r12
4907(6): jnz 0x171(%rip)
490d(4): add $0x8,%rsp
4911(1): pop %rbx
4912(1): pop %rbp
4913(2): pop %r12
4915(2): pop %r13
4917(2): pop %r14
4919(2): pop %r15
491b(1): ret near (%rsp)
491c(4): nop 0x0(%rax)
4920(2): mov %eax,%ebp
4922(5): mov $0x80,%edx
4927(4): lea 0x20(%r13),%r15
492b(3): sub %rbp,%rdx
492e(3): cmp %rsi,%rdx
4931(4): lea 0x0(%r15,%rbp,1),%rdi
4935(4): cmovnbe %rsi,%rdx
4939(3): mov %rbx,%rsi
493c(3): mov %rdx,%r14
493f(5): call 0xffffce31(%rip)
4944(4): mov 0x1c(%r13),%esi
4948(3): add %r14d,%esi
494b(3): cmp $0x40,%esi
494e(4): mov %esi,0x1c(%r13)
4952(2): jnbe 0x5e(%rip)
4954(3): add %r14,%rbx
4957(3): sub %r14,%r12
495a(5): jmp 0xfffffe98(%rip)
495f(1): nop 
4960(3): mov (%rbx),%rax
4963(3): mov %r12d,%edx
4966(3): mov %rax,(%rcx)
4969(5): mov 0xfffffff8(%rbx,%rdx,1),%rax
496e(5): mov %rax,0xfffffff8(%rcx,%rdx,1)
4973(4): lea 0x8(%rcx),%rdx
4977(3): mov %rcx,%rax
497a(4): and $0xfffffff8,%rdx
497e(3): sub %rdx,%rax
4981(3): sub %rax,%rbx
4984(3): add %r12d,%eax
4987(3): and $0xf8,%eax
498a(3): cmp $0x8,%eax
498d(6): jb 0xffffff15(%rip)
4993(3): and $0xf8,%eax
4996(2): xor %ecx,%ecx
4998(2): mov %ecx,%esi
499a(3): add $0x8,%ecx
499d(4): mov 0x0(%rbx,%rsi,1),%r8
49a1(2): cmp %eax,%ecx
49a3(4): mov %r8,0x0(%rdx,%rsi,1)
49a7(2): jb 0xfffffff1(%rip)
49a9(5): jmp 0xfffffef9(%rip)
49ae(2): nop 
49b0(3): and $0xc0,%esi
49b3(3): mov %r13,%rdx
49b6(3): mov %r15,%rdi
49b9(5): call 0xffffea77(%rip)
49be(4): mov 0x1c(%r13),%ecx
49c2(5): lea 0x0(%rbp,%r14,1),%rax
49c7(4): and $0xffffffc0,%rax
49cb(2): mov %ecx,%edx
49cd(3): add %r15,%rax
49d0(3): and $0x3f,%edx
49d3(3): cmp $0x8,%edx
49d6(4): mov %edx,0x1c(%r13)
49da(2): jnb 0x36(%rip)
49dc(3): test $0x4,%cl
49df(2): jnz 0x80(%rip)
49e1(2): test %edx,%edx
49e3(6): jz 0xffffff71(%rip)
49e9(3): movzx (%rax),%esi
49ec(3): and $0x2,%ecx
49ef(4): mov %sil,0x20(%r13)
49f3(6): jz 0xffffff61(%rip)
49f9(5): movzx 0xfffffffe(%rax,%rdx,1),%eax
49fe(6): mov %ax,0xfffffffe(%r15,%rdx,1)
4a04(5): jmp 0xffffff50(%rip)
4a09(7): nop 0x0(%rax)
4a10(3): mov (%rax),%rcx
4a13(4): mov %rcx,0x20(%r13)
4a17(2): mov %edx,%ecx
4a19(5): mov 0xfffffff8(%rax,%rcx,1),%rsi
4a1e(5): mov %rsi,0xfffffff8(%r15,%rcx,1)
4a23(4): lea 0x28(%r13),%rcx
4a27(4): and $0xfffffff8,%rcx
4a2b(3): sub %rcx,%r15
4a2e(3): sub %r15,%rax
4a31(3): add %edx,%r15d
4a34(4): and $0xf8,%r15d
4a38(4): cmp $0x8,%r15d
4a3c(6): jb 0xffffff18(%rip)
4a42(4): and $0xf8,%r15d
4a46(2): xor %edx,%edx
4a48(2): mov %edx,%esi
4a4a(3): add $0x8,%edx
4a4d(4): mov 0x0(%rax,%rsi,1),%rdi
4a51(3): cmp %r15d,%edx
4a54(4): mov %rdi,0x0(%rcx,%rsi,1)
4a58(2): jb 0xfffffff0(%rip)
4a5a(5): jmp 0xfffffefa(%rip)
4a5f(2): mov (%rax),%ecx
4a61(4): mov %ecx,0x20(%r13)
4a65(4): mov 0xfffffffc(%rax,%rdx,1),%eax
4a69(5): mov %eax,0xfffffffc(%r15,%rdx,1)
4a6e(5): jmp 0xfffffee6(%rip)
4a73(5): nop 0x0(%rax,%rax,1)
4a78(4): lea 0x20(%r13),%rbp
4a7c(5): jmp 0xfffffdf4(%rip)
4a81(2): mov (%rbx),%edx
4a83(2): mov %edx,(%rcx)
4a85(3): mov %r12d,%edx
4a88(4): mov 0xfffffffc(%rbx,%rdx,1),%eax
4a8c(4): mov %eax,0xfffffffc(%rcx,%rdx,1)
4a90(5): jmp 0xfffffe12(%rip)
4a95(3): mov %r12d,%edx
4a98(5): movzx 0xfffffffe(%rbx,%rdx,1),%eax
4a9d(5): mov %ax,0xfffffffe(%rcx,%rdx,1)
4aa2(5): jmp 0xfffffe00(%rip)

"sha1_buffer" :
4ab0(1): push %rbp
4ab1(1): push %rbx
4ab2(3): mov %rdx,%rbp
4ab5(7): sub $0xb8,%rsp
4abc(9): mov $0x28,%rax
4ac5(8): mov %rax,0xa8(%rsp)
4acd(2): xor %eax,%eax
4acf(a): mov $0x-1167088121787636991,%rax
4ad9(3): mov %rsp,%rbx
4adc(9): mov $0x0,0x18(%rsp)
4ae5(4): mov %rax,(%rsp)
4ae9(a): mov $0x1167088121787636990,%rax
4af3(3): mov %rbx,%rdx
4af6(5): mov %rax,0x8(%rsp)
4afb(5): mov $0xc3d2e1f0,%eax
4b00(5): mov %rax,0x10(%rsp)
4b05(5): call 0xfffffccb(%rip)
4b0a(3): mov %rbp,%rsi
4b0d(3): mov %rbx,%rdi
4b10(5): call 0xfffffba0(%rip)
4b15(8): mov 0xa8(%rsp),%rcx
4b1d(9): xor $0x28,%rcx
4b26(2): jnz 0xc(%rip)
4b28(7): add $0xb8,%rsp
4b2f(1): pop %rbx
4b30(1): pop %rbp
4b31(1): ret near (%rsp)
4b32(5): call 0xffffcb5e(%rip)

"sha1_stream" :
4b40(2): push %r15
4b42(2): push %r14
4b44(3): mov %rsi,%r14
4b47(2): push %r13
4b49(2): push %r12
4b4b(1): push %rbp
4b4c(1): push %rbx
4b4d(3): mov %rdi,%rbp
4b50(5): mov $0x8048,%edi
4b55(7): sub $0xb8,%rsp
4b5c(9): mov $0x28,%rax
4b65(8): mov %rax,0xa8(%rsp)
4b6d(2): xor %eax,%eax
4b6f(5): call 0xffffcc21(%rip)
4b74(3): mov %rax,%r12
4b77(5): mov $0x1,%eax
4b7c(3): test %r12,%r12
4b7f(6): jz 0x94(%rip)
4b85(a): mov $0x-1167088121787636991,%rax
4b8f(9): mov $0x0,0x18(%rsp)
4b98(6): mov $0x8000,%r13d
4b9e(4): mov %rax,(%rsp)
4ba2(a): mov $0x1167088121787636990,%rax
4bac(3): mov %rsp,%r15
4baf(5): mov %rax,0x8(%rsp)
4bb4(5): mov $0xc3d2e1f0,%eax
4bb9(5): mov %rax,0x10(%rsp)
4bbe(2): xor %ebx,%ebx
4bc0(2): jmp 0x30(%rip)
4bc2(6): nop 0x0(%rax,%rax,1)
4bc8(4): lea 0x0(%r12,%rbx,1),%rdi
4bcc(3): mov %r13,%rdx
4bcf(3): mov %rbp,%rcx
4bd2(3): sub %rbx,%rdx
4bd5(5): mov $0x1,%esi
4bda(5): call 0xffffca46(%rip)
4bdf(3): add %rax,%rbx
4be2(7): cmp $0x8000,%rbx
4be9(2): jz 0x67(%rip)
4beb(3): test %rax,%rax
4bee(2): jz 0x7a(%rip)
4bf0(4): test $0x10,0x0(%rbp)
4bf4(2): jz 0xffffffd4(%rip)
4bf6(3): test %rbx,%rbx
4bf9(3): mov %rsp,%rbp
4bfc(2): jnz 0x44(%rip)
4bfe(3): mov %r14,%rsi
4c01(3): mov %rbp,%rdi
4c04(5): call 0xfffffaac(%rip)
4c09(3): mov %r12,%rdi
4c0c(5): call 0xffffc9a4(%rip)
4c11(2): xor %eax,%eax
4c13(8): mov 0xa8(%rsp),%rcx
4c1b(9): xor $0x28,%rcx
4c24(2): jnz 0x59(%rip)
4c26(7): add $0xb8,%rsp
4c2d(1): pop %rbx
4c2e(1): pop %rbp
4c2f(2): pop %r12
4c31(2): pop %r13
4c33(2): pop %r14
4c35(2): pop %r15
4c37(1): ret near (%rsp)
4c38(8): nop 0x0(%rax,%rax,1)
4c40(3): mov %rbp,%rdx
4c43(3): mov %rbx,%rsi
4c46(3): mov %r12,%rdi
4c49(5): call 0xfffffb87(%rip)
4c4e(2): jmp 0xffffffb0(%rip)
4c50(3): mov %r15,%rdx
4c53(5): mov $0x8000,%esi
4c58(3): mov %r12,%rdi
4c5b(5): call 0xffffe7d5(%rip)
4c60(5): jmp 0xffffff5e(%rip)
4c65(3): nop (%rax)
4c68(4): test $0x20,0x0(%rbp)
4c6c(2): jz 0xffffff8a(%rip)
4c6e(3): mov %r12,%rdi
4c71(5): call 0xffffc93f(%rip)
4c76(5): mov $0x1,%eax
4c7b(2): jmp 0xffffff98(%rip)
4c7d(5): call 0xffffca13(%rip)

"fadvise" :
4ca0(3): test %rdi,%rdi
4ca3(2): jz 0x1d(%rip)
4ca5(1): push %rbx
4ca6(2): mov %esi,%ebx
4ca8(5): call 0xffffcad8(%rip)
4cad(2): mov %ebx,%ecx
4caf(2): xor %edx,%edx
4cb1(2): xor %esi,%esi
4cb3(1): pop %rbx
4cb4(2): mov %eax,%edi
4cb6(5): jmp 0xffffca6a(%rip)
4cbb(5): nop 0x0(%rax,%rax,1)
4cc0(2): REP ret near (%rsp)

"fopen_safer" :
4cd0(2): push %r12
4cd2(1): push %rbp
4cd3(3): mov %rsi,%rbp
4cd6(1): push %rbx
4cd7(5): call 0xffffcb79(%rip)
4cdc(3): test %rax,%rax
4cdf(3): mov %rax,%rbx
4ce2(2): jz 0xf(%rip)
4ce4(3): mov %rax,%rdi
4ce7(5): call 0xffffca99(%rip)
4cec(3): cmp $0x2,%eax
4cef(2): jbe 0x11(%rip)
4cf1(3): mov %rbx,%rax
4cf4(1): pop %rbx
4cf5(1): pop %rbp
4cf6(2): pop %r12
4cf8(1): ret near (%rsp)
4cf9(7): nop 0x0(%rax)
4d00(2): mov %eax,%edi
4d02(5): call 0x1d9e(%rip)
4d07(2): test %eax,%eax
4d09(3): mov %eax,%r12d
4d0c(2): js 0x3c(%rip)
4d0e(3): mov %rbx,%rdi
4d11(5): call 0x264f(%rip)
4d16(2): test %eax,%eax
4d18(2): jnz 0x15(%rip)
4d1a(3): mov %rbp,%rsi
4d1d(3): mov %r12d,%edi
4d20(5): call 0xffffcad0(%rip)
4d25(3): test %rax,%rax
4d28(3): mov %rax,%rbx
4d2b(2): jnz 0xffffffc6(%rip)
4d2d(5): call 0xffffc8a3(%rip)
4d32(2): mov (%rax),%ebp
4d34(3): mov %rax,%rbx
4d37(3): mov %r12d,%edi
4d3a(5): call 0xffffc9d6(%rip)
4d3f(2): mov %ebp,(%rbx)
4d41(2): xor %ebx,%ebx
4d43(2): jmp 0xffffffae(%rip)
4d45(3): nop (%rax)
4d48(5): call 0xffffc888(%rip)
4d4d(3): mov (%rax),%r12d
4d50(3): mov %rax,%rbp
4d53(3): mov %rbx,%rdi
4d56(5): call 0x260a(%rip)
4d5b(2): xor %ebx,%ebx
4d5d(4): mov %r12d,0x0(%rbp)
4d61(2): jmp 0xffffff90(%rip)

"set_program_name" :
4d70(3): test %rdi,%rdi
4d73(1): push %rbx
4d74(2): jz 0x79(%rip)
4d76(5): mov $0x2f,%esi
4d7b(3): mov %rdi,%rbx
4d7e(5): call 0xffffc962(%rip)
4d83(3): test %rax,%rax
4d86(2): jz 0x57(%rip)
4d88(4): lea 0x1(%rax),%r8
4d8c(3): mov %r8,%rdx
4d8f(3): sub %rbx,%rdx
4d92(4): cmp $0x6,%rdx
4d96(2): jle 0x47(%rip)
4d98(4): lea 0xfffffffa(%rax),%rsi
4d9c(7): lea 0x3815(%rip),%rdi
4da3(5): mov $0x7,%ecx
4da8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4daa(3): setnbe %dl
4dad(3): sbb $0x0,%dl
4db0(2): test %dl,%dl
4db2(2): jnz 0x2b(%rip)
4db4(7): lea 0x3805(%rip),%rdi
4dbb(5): mov $0x3,%ecx
4dc0(3): mov %r8,%rsi
4dc3(3): mov %r8,%rbx
4dc6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4dc8(3): setnbe %dl
4dcb(3): sbb $0x0,%dl
4dce(2): test %dl,%dl
4dd0(2): jnz 0xd(%rip)
4dd2(4): lea 0x4(%rax),%rbx
4dd6(7): mov %rbx,0x2062c3(%rip)
4ddd(7): mov %rbx,0x20633c(%rip)
4de4(7): mov %rbx,0x2062d5(%rip)
4deb(1): pop %rbx
4dec(1): ret near (%rsp)
4ded(7): mov 0x2062ec(%rip),%rcx
4df4(7): lea 0x3785(%rip),%rdi
4dfb(5): mov $0x37,%edx
4e00(5): mov $0x1,%esi
4e05(5): call 0xffffca8b(%rip)
4e0a(5): call 0xffffc7b6(%rip)

"gettext_quote.part.1" :
4e10(1): push %rbp
4e11(1): push %rbx
4e12(3): mov %rdi,%rbp
4e15(2): mov %esi,%ebx
4e17(4): sub $0x8,%rsp
4e1b(5): call 0x2a55(%rip)
4e20(3): movzx (%rax),%edx
4e23(3): and $0xdf,%edx
4e26(3): cmp $0x55,%dl
4e29(2): jz 0x77(%rip)
4e2b(3): cmp $0x47,%dl
4e2e(2): jz 0x22(%rip)
4e30(7): lea 0x379c(%rip),%rax
4e37(7): lea 0x3797(%rip),%rdx
4e3e(3): cmp $0x9,%ebx
4e41(4): cmovne %rdx,%rax
4e45(4): add $0x8,%rsp
4e49(1): pop %rbx
4e4a(1): pop %rbp
4e4b(1): ret near (%rsp)
4e4c(4): nop 0x0(%rax)
4e50(4): movzx 0x1(%rax),%edx
4e54(3): and $0xdf,%edx
4e57(3): cmp $0x42,%dl
4e5a(2): jnz 0xffffffd6(%rip)
4e5c(4): cmp $0x31,0x2(%rax)
4e60(2): jnz 0xffffffd0(%rip)
4e62(4): cmp $0x38,0x3(%rax)
4e66(2): jnz 0xffffffca(%rip)
4e68(4): cmp $0x30,0x4(%rax)
4e6c(2): jnz 0xffffffc4(%rip)
4e6e(4): cmp $0x33,0x5(%rax)
4e72(2): jnz 0xffffffbe(%rip)
4e74(4): cmp $0x30,0x6(%rax)
4e78(2): jnz 0xffffffb8(%rip)
4e7a(4): cmp $0x0,0x7(%rax)
4e7e(2): jnz 0xffffffb2(%rip)
4e80(4): cmp $0x60,0x0(%rbp)
4e84(7): lea 0x3741(%rip),%rax
4e8b(7): lea 0x373e(%rip),%rdx
4e92(4): cmovne %rdx,%rax
4e96(4): add $0x8,%rsp
4e9a(1): pop %rbx
4e9b(1): pop %rbp
4e9c(1): ret near (%rsp)
4e9d(3): nop (%rax)
4ea0(4): movzx 0x1(%rax),%edx
4ea4(3): and $0xdf,%edx
4ea7(3): cmp $0x54,%dl
4eaa(2): jnz 0xffffff86(%rip)
4eac(4): movzx 0x2(%rax),%edx
4eb0(3): and $0xdf,%edx
4eb3(3): cmp $0x46,%dl
4eb6(6): jnz 0xffffff7a(%rip)
4ebc(4): cmp $0x2d,0x3(%rax)
4ec0(6): jnz 0xffffff70(%rip)
4ec6(4): cmp $0x38,0x4(%rax)
4eca(6): jnz 0xffffff66(%rip)
4ed0(4): cmp $0x0,0x5(%rax)
4ed4(6): jnz 0xffffff5c(%rip)
4eda(4): cmp $0x60,0x0(%rbp)
4ede(7): lea 0x36df(%rip),%rax
4ee5(7): lea 0x36dc(%rip),%rdx
4eec(4): cmovne %rdx,%rax
4ef0(4): add $0x8,%rsp
4ef4(1): pop %rbx
4ef5(1): pop %rbp
4ef6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
4f00(2): push %r15
4f02(2): push %r14
4f04(3): mov %r8d,%r15d
4f07(2): push %r13
4f09(2): push %r12
4f0b(3): mov %rdi,%r14
4f0e(1): push %rbp
4f0f(1): push %rbx
4f10(3): mov %r9d,%ebx
4f13(3): mov %rsi,%r13
4f16(3): mov %rcx,%rbp
4f19(3): and $0x2,%ebx
4f1c(7): sub $0xb8,%rsp
4f23(8): mov 0xf0(%rsp),%rax
4f2b(5): mov %rdx,0x10(%rsp)
4f30(5): mov %r8d,0x8(%rsp)
4f35(5): mov %r9d,0x78(%rsp)
4f3a(5): mov %rax,0x20(%rsp)
4f3f(8): mov 0xf8(%rsp),%rax
4f47(5): mov %rax,0x68(%rsp)
4f4c(8): mov 0x100(%rsp),%rax
4f54(5): mov %rax,0x60(%rsp)
4f59(9): mov $0x28,%rax
4f62(8): mov %rax,0xa8(%rsp)
4f6a(2): xor %eax,%eax
4f6c(5): call 0xffffc704(%rip)
4f71(4): cmp $0xa,%r15d
4f75(5): mov %rax,0x58(%rsp)
4f7a(6): jnbe 0x11b5(%rip)
4f80(7): lea 0x36b9(%rip),%rcx
4f87(3): mov %r15d,%edx
4f8a(4): movsxd 0x0(%rcx,%rdx,4),%rax
4f8e(3): add %rcx,%rax
4f91(2): jmp %rax
4f93(5): mov $0x1,0xe(%rsp)
4f98(5): mov $0x0,0x7c(%rsp)
4f9d(3): xor %r12d,%r12d
4fa0(9): mov $0x0,0x50(%rsp)
4fa9(5): mov $0x1,0xf(%rsp)
4fae(5): mov $0x0,0xd(%rsp)
4fb3(7): lea 0x361b(%rip),%rax
4fba(9): mov $0x1,0x18(%rsp)
4fc3(3): xor %r15d,%r15d
4fc6(8): mov $0x2,0x8(%rsp)
4fce(5): mov %rax,0x48(%rsp)
4fd3(3): xor %r11d,%r11d
4fd6(3): mov %rbp,%rax
4fd9(3): mov %r12d,%r8d
4fdc(3): mov %r11,%rbp
4fdf(3): mov %rax,%r11
4fe2(6): nop 0x0(%rax,%rax,1)
4fe8(3): cmp %rbp,%r11
4feb(4): setnz %r12b
4fef(4): cmp $0xffffffff,%r11
4ff3(2): jnz 0xf(%rip)
4ff5(5): mov 0x10(%rsp),%rax
4ffa(4): cmp $0x0,0x0(%rax,%rbp,1)
4ffe(4): setnz %r12b
5002(3): test %r12b,%r12b
5005(6): jz 0x65b(%rip)
500b(5): cmp $0x2,0x8(%rsp)
5010(5): mov 0x10(%rsp),%rdi
5015(4): lea 0x0(%rdi,%rbp,1),%r9
5019(3): setnz %al
501c(4): and 0xd(%rsp),%al
5020(3): mov %eax,%r10d
5023(6): jz 0xad(%rip)
5029(5): mov 0x18(%rsp),%rax
502e(3): test %rax,%rax
5031(6): jz 0x42f(%rip)
5037(4): cmp $0xffffffff,%r11
503b(5): lea 0x0(%rbp,%rax,1),%rbx
5040(2): jnz 0x30(%rip)
5042(4): cmp $0x1,%rax
5046(2): jbe 0x2a(%rip)
5048(5): mov %r8b,0x38(%rsp)
504d(5): mov %r10b,0x30(%rsp)
5052(5): mov %r9,0x28(%rsp)
5057(5): call 0xffffc629(%rip)
505c(6): movzx 0x38(%rsp),%r8d
5062(6): movzx 0x30(%rsp),%r10d
5068(3): mov %rax,%r11
506b(5): mov 0x28(%rsp),%r9
5070(3): cmp %r11,%rbx
5073(5): mov %r10b,0x28(%rsp)
5078(6): jnbe 0x5b8(%rip)
507e(5): mov 0x18(%rsp),%rdx
5083(5): mov 0x48(%rsp),%rsi
5088(3): mov %r9,%rdi
508b(5): mov %r11,0x40(%rsp)
5090(5): mov %r8b,0x38(%rsp)
5095(5): mov %r9,0x30(%rsp)
509a(5): call 0xffffc696(%rip)
509f(2): test %eax,%eax
50a1(5): mov 0x30(%rsp),%r9
50a6(6): movzx 0x38(%rsp),%r8d
50ac(5): mov 0x40(%rsp),%r11
50b1(6): jnz 0x57f(%rip)
50b7(5): cmp $0x0,0xf(%rsp)
50bc(6): movzx 0x28(%rsp),%r10d
50c2(6): jnz 0xf83(%rip)
50c8(8): nop 0x0(%rax,%rax,1)
50d0(4): movzx (%r9),%ebx
50d4(3): cmp $0x7e,%bl
50d7(6): jnbe 0x321(%rip)
50dd(7): lea 0x3588(%rip),%rcx
50e4(3): movzx %bl,%edx
50e7(4): movsxd 0x0(%rcx,%rdx,4),%rax
50eb(3): add %rcx,%rax
50ee(2): jmp %rax
50f0(3): xor %r10d,%r10d
50f3(4): cmp $0x1,%r11
50f7(3): setnz %al
50fa(4): cmp $0xffffffff,%r11
50fe(2): jnz 0xe(%rip)
5100(5): mov 0x10(%rsp),%rax
5105(4): cmp $0x0,0x1(%rax)
5109(3): setnz %al
510c(5): cmp $0x2,0x8(%rsp)
5111(3): setz %dl
5114(2): test %al,%al
5116(6): jz 0x252(%rip)
511c(3): xor %r12d,%r12d
511f(2): xor %eax,%eax
5121(7): nop 0x0(%rax)
5128(5): cmp $0x1,0xd(%rsp)
512d(6): jnz 0x115(%rip)
5133(2): test %dl,%dl
5135(6): jnz 0x10d(%rip)
513b(5): mov 0x20(%rsp),%rsi
5140(3): test %rsi,%rsi
5143(2): jz 0x16(%rip)
5145(2): mov %ebx,%edx
5147(3): shr $0x5,%dl
514a(3): movzx %dl,%edx
514d(3): mov 0x0(%rsi,%rdx,4),%edx
5150(3): bt %ebx,%edx
5153(6): jb 0x150(%rip)
5159(3): test %r10b,%r10b
515c(6): jnz 0x147(%rip)
5162(3): xor $0x1,%eax
5165(4): add $0x1,%rbp
5169(3): and %r8d,%eax
516c(2): test %al,%al
516e(2): jz 0x22(%rip)
5170(3): cmp %r15,%r13
5173(2): jbe 0x7(%rip)
5175(5): mov $0x27,0x0(%r14,%r15,1)
517a(4): lea 0x1(%r15),%rax
517e(3): cmp %rax,%r13
5181(2): jbe 0x8(%rip)
5183(6): mov $0x27,0x1(%r14,%r15,1)
5189(4): add $0x2,%r15
518d(3): xor %r8d,%r8d
5190(3): cmp %r13,%r15
5193(2): jnb 0x6(%rip)
5195(4): mov %bl,0x0(%r14,%r15,1)
5199(5): movzx 0xe(%rsp),%edi
519e(4): add $0x1,%r15
51a2(5): mov $0x0,%eax
51a7(3): test %r12b,%r12b
51aa(3): cmove %eax,%edi
51ad(5): mov %dil,0xe(%rsp)
51b2(5): jmp 0xfffffe36(%rip)
51b7(9): nop 0x0(%rax,%rax,1)
51c0(3): xor %r10d,%r10d
51c3(4): mov 0x8(%rsp),%eax
51c7(3): cmp $0x2,%eax
51ca(6): jz 0x5be(%rip)
51d0(3): cmp $0x5,%eax
51d3(6): jz 0x575(%rip)
51d9(3): cmp $0x2,%eax
51dc(5): mov $0x3f,%ebx
51e1(3): setz %dl
51e4(3): xor %r12d,%r12d
51e7(2): xor %eax,%eax
51e9(5): jmp 0xffffff3f(%rip)
51ee(2): nop 
51f0(3): xor %r10d,%r10d
51f3(5): cmp $0x2,0x8(%rsp)
51f8(6): jz 0x508(%rip)
51fe(5): mov %r12b,0x7c(%rsp)
5203(2): xor %edx,%edx
5205(2): xor %eax,%eax
5207(5): mov $0x27,%ebx
520c(5): jmp 0xffffff1c(%rip)
5211(7): nop 0x0(%rax)
5218(5): mov $0x9,%edx
521d(5): mov $0x74,%ebx
5222(5): cmp $0x2,0x8(%rsp)
5227(3): setz %al
522a(4): and 0xf(%rsp),%al
522e(6): jnz 0x150(%rip)
5234(5): cmp $0x0,0xd(%rsp)
5239(2): jnz 0x67(%rip)
523b(2): mov %edx,%ebx
523d(3): xor %r12d,%r12d
5240(2): xor %eax,%eax
5242(5): cmp $0x0,0xf(%rsp)
5247(6): jnz 0xfffffef4(%rip)
524d(5): jmp 0xffffff0c(%rip)
5252(6): nop 0x0(%rax,%rax,1)
5258(5): mov $0x8,%edx
525d(5): mov $0x62,%ebx
5262(2): jmp 0xffffffd2(%rip)
5264(4): nop 0x0(%rax)
5268(5): cmp $0x2,0x8(%rsp)
526d(6): jz 0x3d3(%rip)
5273(5): cmp $0x0,0xd(%rsp)
5278(6): jz 0x218(%rip)
527e(5): cmp $0x0,0xf(%rsp)
5283(6): jz 0x20d(%rip)
5289(6): cmp $0x0,0x18(%rsp)
528f(6): jnz 0x3bc(%rip)
5295(5): mov $0x5c,%ebx
529a(6): nop 0x0(%rax,%rax,1)
52a0(3): xor %r12d,%r12d
52a3(5): cmp $0x2,0x8(%rsp)
52a8(3): setz %dl
52ab(5): cmp $0x0,0xf(%rsp)
52b0(2): mov %edx,%eax
52b2(6): jnz 0x856(%rip)
52b8(3): mov %r8d,%eax
52bb(3): xor $0x1,%eax
52be(2): and %dl,%al
52c0(2): jz 0x31(%rip)
52c2(3): cmp %r15,%r13
52c5(2): jbe 0x7(%rip)
52c7(5): mov $0x27,0x0(%r14,%r15,1)
52cc(4): lea 0x1(%r15),%rdx
52d0(3): cmp %rdx,%r13
52d3(2): jbe 0x8(%rip)
52d5(6): mov $0x24,0x1(%r14,%r15,1)
52db(4): lea 0x2(%r15),%rdx
52df(3): cmp %rdx,%r13
52e2(2): jbe 0x8(%rip)
52e4(6): mov $0x27,0x2(%r14,%r15,1)
52ea(4): add $0x3,%r15
52ee(3): mov %eax,%r8d
52f1(3): cmp %r15,%r13
52f4(2): jbe 0x7(%rip)
52f6(5): mov $0x5c,0x0(%r14,%r15,1)
52fb(4): add $0x1,%r15
52ff(4): add $0x1,%rbp
5303(5): jmp 0xfffffe8d(%rip)
5308(8): nop 0x0(%rax,%rax,1)
5310(5): cmp $0x0,0xd(%rsp)
5315(6): jnz 0x1ce(%rip)
531b(2): xor %edx,%edx
531d(5): test $0x1,0x78(%rsp)
5322(6): jz 0xffffff19(%rip)
5328(4): add $0x1,%rbp
532c(5): jmp 0xfffffcbc(%rip)
5331(7): nop 0x0(%rax)
5338(5): cmp $0x2,0x8(%rsp)
533d(3): setz %dl
5340(2): xor %eax,%eax
5342(5): jmp 0xfffffde6(%rip)
5347(9): nop 0x0(%rax,%rax,1)
5350(5): mov $0x7,%edx
5355(5): mov $0x61,%ebx
535a(5): jmp 0xfffffeda(%rip)
535f(1): nop 
5360(5): cmp $0x2,0x8(%rsp)
5365(3): setz %dl
5368(3): test %rbp,%rbp
536b(6): jnz 0xfffffdb1(%rip)
5371(5): movzx 0xf(%rsp),%eax
5376(2): and %dl,%al
5378(6): jz 0xfffffdb0(%rip)
537e(3): mov %r11,%rbp
5381(8): mov $0x2,0x8(%rsp)
5389(5): jmp 0x700(%rip)
538e(2): nop 
5390(5): cmp $0x2,0x8(%rsp)
5395(3): setz %dl
5398(3): xor %r12d,%r12d
539b(2): jmp 0xffffffd6(%rip)
539d(3): nop (%rax)
53a0(5): cmp $0x2,0x8(%rsp)
53a5(5): mov $0x20,%ebx
53aa(3): setz %dl
53ad(2): jmp 0xffffffc4(%rip)
53af(1): nop 
53b0(5): mov $0xd,%edx
53b5(5): mov $0x72,%ebx
53ba(5): jmp 0xfffffe68(%rip)
53bf(1): nop 
53c0(5): mov $0xc,%edx
53c5(5): mov $0x66,%ebx
53ca(5): jmp 0xfffffe6a(%rip)
53cf(1): nop 
53d0(5): mov $0xb,%edx
53d5(5): mov $0x76,%ebx
53da(5): jmp 0xfffffe5a(%rip)
53df(1): nop 
53e0(5): mov $0xa,%edx
53e5(5): mov $0x6e,%ebx
53ea(5): jmp 0xfffffe38(%rip)
53ef(1): nop 
53f0(3): xor %r10d,%r10d
53f3(5): nop 0x0(%rax,%rax,1)
53f8(6): cmp $0x1,0x58(%rsp)
53fe(6): jnz 0x3aa(%rip)
5404(5): mov %r11,0x38(%rsp)
5409(5): mov %r8b,0x30(%rsp)
540e(5): mov %r10b,0x28(%rsp)
5413(5): call 0xffffc4cd(%rip)
5418(3): mov (%rax),%rcx
541b(3): movzx %bl,%edx
541e(6): movzx 0x28(%rsp),%r10d
5424(6): movzx 0x30(%rsp),%r8d
542a(5): mov 0x38(%rsp),%r11
542f(5): mov $0x1,%edi
5434(4): movzx 0x0(%rcx,%rdx,2),%eax
5438(4): and $0x4000,%ax
543c(4): setnz %r12b
5440(3): setz %al
5443(4): and 0xd(%rsp),%al
5447(2): test %al,%al
5449(6): jnz 0x998(%rip)
544f(5): cmp $0x2,0x8(%rsp)
5454(3): setz %dl
5457(5): jmp 0xfffffcd1(%rip)
545c(4): nop 0x0(%rax)
5460(4): movzx (%r9),%ebx
5464(3): cmp $0x7e,%bl
5467(2): jnbe 0xffffff89(%rip)
5469(7): lea 0x33f8(%rip),%rcx
5470(3): movzx %bl,%edx
5473(4): movsxd 0x0(%rcx,%rdx,4),%rax
5477(3): add %rcx,%rax
547a(2): jmp %rax
547c(4): nop 0x0(%rax)
5480(3): xor %r10d,%r10d
5483(5): cmp $0x0,0xd(%rsp)
5488(6): jnz 0xfffffdf6(%rip)
548e(2): nop 
5490(5): mov $0x5c,%edx
5495(5): mov $0x5c,%ebx
549a(5): jmp 0xfffffd9a(%rip)
549f(1): nop 
54a0(5): mov $0xc,%edx
54a5(3): xor %r10d,%r10d
54a8(5): mov $0x66,%ebx
54ad(5): jmp 0xfffffd87(%rip)
54b2(6): nop 0x0(%rax,%rax,1)
54b8(5): mov $0xa,%edx
54bd(3): xor %r10d,%r10d
54c0(5): mov $0x6e,%ebx
54c5(5): jmp 0xfffffd5d(%rip)
54ca(6): nop 0x0(%rax,%rax,1)
54d0(5): mov $0x61,%ebx
54d5(5): jmp 0xfffffdcb(%rip)
54da(6): nop 0x0(%rax,%rax,1)
54e0(3): xor %r10d,%r10d
54e3(5): cmp $0x2,0x8(%rsp)
54e8(3): setz %dl
54eb(5): cmp $0x0,0xf(%rsp)
54f0(6): jnz 0xb9a(%rip)
54f6(3): mov %r8d,%eax
54f9(3): mov %r15,%rcx
54fc(3): xor $0x1,%eax
54ff(2): and %dl,%al
5501(2): jz 0x2f(%rip)
5503(3): cmp %r15,%r13
5506(2): jbe 0x7(%rip)
5508(5): mov $0x27,0x0(%r14,%r15,1)
550d(4): lea 0x1(%r15),%rcx
5511(3): cmp %rcx,%r13
5514(2): jbe 0x8(%rip)
5516(6): mov $0x24,0x1(%r14,%r15,1)
551c(4): lea 0x2(%r15),%rcx
5520(3): cmp %rcx,%r13
5523(6): jnbe 0x636(%rip)
5529(4): lea 0x3(%r15),%rcx
552d(3): mov %eax,%r8d
5530(3): cmp %rcx,%r13
5533(2): jbe 0x7(%rip)
5535(5): mov $0x5c,0x0(%r14,%rcx,1)
553a(5): cmp $0x2,0x8(%rsp)
553f(4): lea 0x1(%rcx),%r15
5543(6): jz 0x606(%rip)
5549(4): lea 0x1(%rbp),%rax
554d(3): cmp %r11,%rax
5550(2): jnb 0x1b(%rip)
5552(5): mov 0x10(%rsp),%rax
5557(5): movzx 0x1(%rax,%rbp,1),%eax
555c(4): mov %al,0x28(%rsp)
5560(3): sub $0x30,%eax
5563(2): cmp $0x9,%al
5565(6): jbe 0x834(%rip)
556b(3): mov %r12d,%eax
556e(5): mov $0x30,%ebx
5573(3): xor %r12d,%r12d
5576(5): jmp 0xfffffbb2(%rip)
557b(5): nop 0x0(%rax,%rax,1)
5580(5): cmp $0x2,0x8(%rsp)
5585(3): mov %r10d,%r12d
5588(3): setz %dl
558b(3): xor %r10d,%r10d
558e(2): xor %eax,%eax
5590(5): jmp 0xfffffb98(%rip)
5595(3): nop (%rax)
5598(5): cmp $0x2,0x8(%rsp)
559d(3): setz %dl
55a0(3): xor %r10d,%r10d
55a3(5): jmp 0xfffffdc5(%rip)
55a8(8): nop 0x0(%rax,%rax,1)
55b0(5): cmp $0x2,0x8(%rsp)
55b5(3): setz %dl
55b8(3): xor %r10d,%r10d
55bb(3): xor %r12d,%r12d
55be(5): jmp 0xfffffdb3(%rip)
55c3(5): nop 0x0(%rax,%rax,1)
55c8(5): cmp $0x2,0x8(%rsp)
55cd(3): mov %r10d,%r12d
55d0(5): mov $0x20,%ebx
55d5(3): setz %dl
55d8(3): xor %r10d,%r10d
55db(5): jmp 0xfffffd96(%rip)
55e0(5): mov $0xd,%edx
55e5(3): xor %r10d,%r10d
55e8(5): mov $0x72,%ebx
55ed(5): jmp 0xfffffc35(%rip)
55f2(6): nop 0x0(%rax,%rax,1)
55f8(5): mov $0x76,%ebx
55fd(5): jmp 0xfffffca3(%rip)
5602(6): nop 0x0(%rax,%rax,1)
5608(5): mov $0x9,%edx
560d(3): xor %r10d,%r10d
5610(5): mov $0x74,%ebx
5615(5): jmp 0xfffffc0d(%rip)
561a(6): nop 0x0(%rax,%rax,1)
5620(5): mov $0x62,%ebx
5625(5): jmp 0xfffffc7b(%rip)
562a(6): nop 0x0(%rax,%rax,1)
5630(3): xor %r10d,%r10d
5633(5): jmp 0xfffffa9d(%rip)
5638(8): nop 0x0(%rax,%rax,1)
5640(5): cmp $0x0,0xf(%rsp)
5645(6): jnz 0x96b(%rip)
564b(4): add $0x1,%rbp
564f(3): mov %r8d,%eax
5652(3): xor %r12d,%r12d
5655(5): mov $0x5c,%ebx
565a(5): jmp 0xfffffb12(%rip)
565f(1): nop 
5660(5): cmp $0x2,0x8(%rsp)
5665(5): movzx 0xf(%rsp),%ebx
566a(3): mov %r8d,%r12d
566d(3): mov %r11,%rbp
5670(3): setz %dl
5673(2): mov %ebx,%eax
5675(3): test %r15,%r15
5678(3): setz %cl
567b(2): and %edx,%eax
567d(2): and %cl,%al
567f(6): jnz 0xa67(%rip)
5685(2): mov %ebx,%eax
5687(3): xor $0x1,%eax
568a(2): and %al,%dl
568c(6): jz 0x970(%rip)
5692(5): cmp $0x0,0x7c(%rsp)
5697(6): jz 0x963(%rip)
569d(5): cmp $0x0,0xe(%rsp)
56a2(6): jnz 0x9fb(%rip)
56a8(3): test %r13,%r13
56ab(3): setz %al
56ae(6): cmp $0x0,0x50(%rsp)
56b4(3): setnz %dl
56b7(2): and %dl,%al
56b9(6): jz 0xa23(%rip)
56bf(5): mov 0x50(%rsp),%r13
56c4(7): lea 0x2f0a(%rip),%rbx
56cb(4): mov $0x27,(%r14)
56cf(8): mov $0x2,0x8(%rsp)
56d7(6): mov $0x1,%r15d
56dd(9): mov $0x1,0x18(%rsp)
56e6(5): mov $0x0,0xf(%rsp)
56eb(5): mov %rbx,0x48(%rsp)
56f0(4): mov %al,0x7c(%rsp)
56f4(5): jmp 0xfffff8df(%rip)
56f9(7): nop 0x0(%rax)
5700(5): cmp $0x0,0xf(%rsp)
5705(6): jnz 0x8ab(%rip)
570b(3): test %r13,%r13
570e(6): jz 0x402(%rip)
5714(2): xor %edx,%edx
5716(6): cmp $0x0,0x50(%rsp)
571c(6): jnz 0x3f4(%rip)
5722(5): mov %r13,0x50(%rsp)
5727(4): add $0x3,%r15
572b(2): xor %eax,%eax
572d(5): mov %r12b,0x7c(%rsp)
5732(3): xor %r8d,%r8d
5735(3): mov %rdx,%r13
5738(5): mov $0x27,%ebx
573d(5): jmp 0xfffffa1c(%rip)
5742(6): nop 0x0(%rax,%rax,1)
5748(5): test $0x4,0x78(%rsp)
574d(2): jz 0x23(%rip)
574f(4): lea 0x2(%rbp),%rcx
5753(3): cmp %r11,%rcx
5756(2): jnb 0x1a(%rip)
5758(5): mov 0x10(%rsp),%rax
575d(5): cmp $0x3f,0x1(%rax,%rbp,1)
5762(6): jz 0x790(%rip)
5768(8): nop 0x0(%rax,%rax,1)
5770(2): xor %edx,%edx
5772(3): xor %r12d,%r12d
5775(2): xor %eax,%eax
5777(5): mov $0x3f,%ebx
577c(5): jmp 0xfffff9ac(%rip)
5781(7): nop 0x0(%rax)
5788(5): cmp $0x0,0xf(%rsp)
578d(6): jnz 0x823(%rip)
5793(3): xor %r12d,%r12d
5796(2): xor %eax,%eax
5798(5): mov $0x3f,%ebx
579d(5): jmp 0xfffff9bc(%rip)
57a2(6): nop 0x0(%rax,%rax,1)
57a8(8): lea 0xa0(%rsp),%rax
57b0(4): cmp $0xffffffff,%r11
57b4(c): mov $0x0,0xa0(%rsp)
57c0(5): mov %rax,0x28(%rsp)
57c5(2): jnz 0x2f(%rip)
57c7(5): mov 0x10(%rsp),%rdi
57cc(5): mov %r8b,0x40(%rsp)
57d1(5): mov %r10b,0x38(%rsp)
57d6(5): mov %r9,0x30(%rsp)
57db(5): call 0xffffbea5(%rip)
57e0(6): movzx 0x40(%rsp),%r8d
57e6(6): movzx 0x38(%rsp),%r10d
57ec(3): mov %rax,%r11
57ef(5): mov 0x30(%rsp),%r9
57f4(8): lea 0x9c(%rsp),%rax
57fc(2): xor %ecx,%ecx
57fe(4): mov %bl,0x7e(%rsp)
5802(5): mov %r8b,0x7d(%rsp)
5807(3): mov %rcx,%rbx
580a(8): mov %r9,0x88(%rsp)
5812(5): mov %rax,0x38(%rsp)
5817(5): mov %r10b,0x7f(%rsp)
581c(8): mov %r15,0x80(%rsp)
5824(5): mov %r14,0x40(%rsp)
5829(5): mov %r13,0x70(%rsp)
582e(5): mov %r11,0x30(%rsp)
5833(5): mov 0x10(%rsp),%rax
5838(5): lea 0x0(%rbp,%rbx,1),%r14
583d(5): mov 0x30(%rsp),%rdx
5842(5): mov 0x28(%rsp),%rcx
5847(5): mov 0x38(%rsp),%rdi
584c(4): lea 0x0(%rax,%r14,1),%r13
5850(3): sub %r14,%rdx
5853(3): mov %r13,%rsi
5856(5): call 0x1eaa(%rip)
585b(3): test %rax,%rax
585e(3): mov %rax,%r15
5861(2): jz 0x50(%rip)
5863(4): cmp $0xffffffff,%rax
5867(6): jz 0x61e(%rip)
586d(4): cmp $0xfffffffe,%rax
5871(6): jz 0x5a0(%rip)
5877(5): cmp $0x2,0x8(%rsp)
587c(3): setz %al
587f(4): and 0xf(%rsp),%al
5883(6): jnz 0x19d(%rip)
5889(7): mov 0x9c(%rsp),%edi
5890(5): call 0xffffc030(%rip)
5895(5): mov 0x28(%rsp),%rdi
589a(2): test %eax,%eax
589c(5): mov $0x0,%eax
58a1(4): cmove %eax,%r12d
58a5(3): add %r15,%rbx
58a8(5): call 0xffffc008(%rip)
58ad(2): test %eax,%eax
58af(2): jz 0xffffff84(%rip)
58b1(3): mov %r12d,%edx
58b4(3): mov %rbx,%rdi
58b7(6): movzx 0x7d(%rsp),%r8d
58bd(3): xor $0x1,%edx
58c0(5): movzx 0x7e(%rsp),%ebx
58c5(6): movzx 0x7f(%rsp),%r10d
58cb(4): and 0xd(%rsp),%dl
58cf(8): mov 0x80(%rsp),%r15
58d7(5): mov 0x40(%rsp),%r14
58dc(5): mov 0x70(%rsp),%r13
58e1(5): mov 0x30(%rsp),%r11
58e6(4): cmp $0x1,%rdi
58ea(6): jbe 0x601(%rip)
58f0(3): mov %rdi,%rcx
58f3(2): xor %esi,%esi
58f5(6): movzx 0xf(%rsp),%r9d
58fb(3): add %rbp,%rcx
58fe(5): mov 0x10(%rsp),%rdi
5903(5): jmp 0xbb(%rip)
5908(8): nop 0x0(%rax,%rax,1)
5910(5): cmp $0x2,0x8(%rsp)
5915(3): setz %al
5918(3): test %r9b,%r9b
591b(6): jnz 0x4b5(%rip)
5921(3): mov %r8d,%esi
5924(3): xor $0x1,%esi
5927(3): and %sil,%al
592a(2): jz 0x31(%rip)
592c(3): cmp %r15,%r13
592f(2): jbe 0x7(%rip)
5931(5): mov $0x27,0x0(%r14,%r15,1)
5936(4): lea 0x1(%r15),%rsi
593a(3): cmp %rsi,%r13
593d(2): jbe 0x8(%rip)
593f(6): mov $0x24,0x1(%r14,%r15,1)
5945(4): lea 0x2(%r15),%rsi
5949(3): cmp %rsi,%r13
594c(2): jbe 0x8(%rip)
594e(6): mov $0x27,0x2(%r14,%r15,1)
5954(4): add $0x3,%r15
5958(3): mov %eax,%r8d
595b(3): cmp %r15,%r13
595e(2): jbe 0x7(%rip)
5960(5): mov $0x5c,0x0(%r14,%r15,1)
5965(4): lea 0x1(%r15),%rax
5969(3): cmp %rax,%r13
596c(2): jbe 0xf(%rip)
596e(2): mov %ebx,%eax
5970(3): shr $0x6,%al
5973(3): add $0x30,%eax
5976(5): mov %al,0x1(%r14,%r15,1)
597b(4): lea 0x2(%r15),%rax
597f(3): cmp %rax,%r13
5982(2): jbe 0x12(%rip)
5984(2): mov %ebx,%eax
5986(3): shr $0x3,%al
5989(3): and $0x7,%eax
598c(3): add $0x30,%eax
598f(5): mov %al,0x2(%r14,%r15,1)
5994(3): and $0x7,%ebx
5997(4): add $0x1,%rbp
599b(4): add $0x3,%r15
599f(3): add $0x30,%ebx
59a2(3): cmp %rcx,%rbp
59a5(6): jnb 0xfffff7eb(%rip)
59ab(2): mov %edx,%esi
59ad(3): cmp %r15,%r13
59b0(2): jbe 0x6(%rip)
59b2(4): mov %bl,0x0(%r14,%r15,1)
59b6(4): movzx 0x0(%rdi,%rbp,1),%ebx
59ba(4): add $0x1,%r15
59be(2): test %dl,%dl
59c0(6): jnz 0xffffff50(%rip)
59c6(2): mov %esi,%eax
59c8(3): xor $0x1,%eax
59cb(3): and %r8d,%eax
59ce(3): test %r10b,%r10b
59d1(2): jz 0x10(%rip)
59d3(3): cmp %r15,%r13
59d6(2): jbe 0x7(%rip)
59d8(5): mov $0x5c,0x0(%r14,%r15,1)
59dd(4): add $0x1,%r15
59e1(4): add $0x1,%rbp
59e5(3): cmp %rcx,%rbp
59e8(6): jnb 0xfffff784(%rip)
59ee(2): test %al,%al
59f0(6): jz 0x3fe(%rip)
59f6(3): cmp %r15,%r13
59f9(2): jbe 0x7(%rip)
59fb(5): mov $0x27,0x0(%r14,%r15,1)
5a00(4): lea 0x1(%r15),%rax
5a04(3): cmp %rax,%r13
5a07(2): jbe 0x8(%rip)
5a09(6): mov $0x27,0x1(%r14,%r15,1)
5a0f(4): add $0x2,%r15
5a13(3): xor %r10d,%r10d
5a16(3): xor %r8d,%r8d
5a19(2): jmp 0xffffff94(%rip)
5a1b(5): nop 0x0(%rax,%rax,1)
5a20(4): cmp $0x1,%r15
5a24(6): jz 0xfffffe65(%rip)
5a2a(5): mov 0x10(%rsp),%rdi
5a2f(4): lea 0x0(%rdi,%r15,1),%rcx
5a33(5): lea 0x1(%rdi,%r14,1),%rdx
5a38(4): lea 0x0(%rcx,%r14,1),%r8
5a3c(2): jmp 0x11(%rip)
5a3e(2): nop 
5a40(4): add $0x1,%rdx
5a44(3): cmp %rdx,%r8
5a47(6): jz 0xfffffe42(%rip)
5a4d(3): movzx (%rdx),%ecx
5a50(3): sub $0x5b,%ecx
5a53(3): cmp $0x21,%cl
5a56(2): jnbe 0xffffffea(%rip)
5a58(5): mov $0x1,%esi
5a5d(3): shl/sal %cl,%rsi
5a60(3): mov %rsi,%rcx
5a63(a): mov $0x8589934635,%rsi
5a6d(3): test %rsi,%rcx
5a70(2): jz 0xffffffd0(%rip)
5a72(5): mov 0x40(%rsp),%r14
5a77(5): mov 0x70(%rsp),%r13
5a7c(5): mov 0x30(%rsp),%rbp
5a81(8): mov $0x2,0x8(%rsp)
5a89(5): cmp $0x0,0xd(%rsp)
5a8e(2): jz 0x12(%rip)
5a90(2): test %al,%al
5a92(5): mov $0x4,%eax
5a97(5): cmove 0x8(%rsp),%eax
5a9c(4): mov %eax,0x8(%rsp)
5aa0(4): sub $0x8,%rsp
5aa4(3): mov %rbp,%rcx
5aa7(3): mov %r13,%rsi
5aaa(4): push 0x68(%rsp)
5aae(4): push 0x78(%rsp)
5ab2(3): mov %r14,%rdi
5ab5(2): push $0x0
5ab7(8): mov 0x98(%rsp),%r9d
5abf(5): mov 0x28(%rsp),%r8d
5ac4(5): mov 0x30(%rsp),%rdx
5ac9(4): and $0xfd,%r9d
5acd(5): call 0xfffff433(%rip)
5ad2(4): add $0x20,%rsp
5ad6(3): mov %rax,%r15
5ad9(8): mov 0xa8(%rsp),%rbx
5ae1(9): xor $0x28,%rbx
5aea(3): mov %r15,%rax
5aed(6): jnz 0x606(%rip)
5af3(7): add $0xb8,%rsp
5afa(1): pop %rbx
5afb(1): pop %rbp
5afc(2): pop %r12
5afe(2): pop %r13
5b00(2): pop %r14
5b02(2): pop %r15
5b04(1): ret near (%rsp)
5b05(3): nop (%rax)
5b08(3): mov %r11,%rbp
5b0b(5): jmp 0xffffff7e(%rip)
5b10(3): cmp %r15,%r13
5b13(2): jbe 0x7(%rip)
5b15(5): mov $0x27,0x0(%r14,%r15,1)
5b1a(4): lea 0x1(%r15),%rax
5b1e(3): cmp %rax,%r13
5b21(2): jbe 0x8(%rip)
5b23(6): mov $0x5c,0x1(%r14,%r15,1)
5b29(4): lea 0x2(%r15),%rax
5b2d(3): cmp %rax,%r13
5b30(6): jbe 0x5f2(%rip)
5b36(3): mov %r13,%rdx
5b39(6): mov $0x27,0x2(%r14,%r15,1)
5b3f(5): mov 0x50(%rsp),%r13
5b44(5): jmp 0xfffffbde(%rip)
5b49(3): mov %r12d,%eax
5b4c(5): mov $0x30,%ebx
5b51(3): xor %r12d,%r12d
5b54(5): jmp 0xfffff605(%rip)
5b59(6): mov $0x27,0x2(%r14,%r15,1)
5b5f(5): jmp 0xfffff9ca(%rip)
5b64(2): test %ebx,%ebx
5b66(6): jnz 0xfffff42d(%rip)
5b6c(5): mov $0x1,0xd(%rsp)
5b71(3): test %r13,%r13
5b74(6): jnz 0x596(%rip)
5b7a(7): lea 0x2a54(%rip),%rax
5b81(9): mov $0x0,0x50(%rsp)
5b8a(5): mov $0x1,0xe(%rsp)
5b8f(5): mov $0x0,0x7c(%rsp)
5b94(3): xor %r12d,%r12d
5b97(5): mov $0x0,0xf(%rsp)
5b9c(9): mov $0x1,0x18(%rsp)
5ba5(5): mov %rax,0x48(%rsp)
5baa(6): mov $0x1,%r15d
5bb0(8): mov $0x2,0x8(%rsp)
5bb8(5): jmp 0xfffff41b(%rip)
5bbd(3): nop (%rax)
5bc0(2): test %ebx,%ebx
5bc2(6): jnz 0x3fb(%rip)
5bc8(3): test %r13,%r13
5bcb(6): jz 0x22b(%rip)
5bd1(4): mov $0x22,(%r14)
5bd5(5): mov $0x1,0xe(%rsp)
5bda(3): xor %r12d,%r12d
5bdd(5): mov $0x0,0x7c(%rsp)
5be2(9): mov $0x0,0x50(%rsp)
5beb(7): lea 0x29e1(%rip),%rax
5bf2(5): mov $0x0,0xf(%rsp)
5bf7(5): mov $0x1,0xd(%rsp)
5bfc(9): mov $0x1,0x18(%rsp)
5c05(6): mov $0x1,%r15d
5c0b(5): mov %rax,0x48(%rsp)
5c10(5): jmp 0xfffff3c3(%rip)
5c15(7): lea 0x29b7(%rip),%rax
5c1c(5): mov $0x1,0xe(%rsp)
5c21(5): mov $0x0,0x7c(%rsp)
5c26(3): xor %r12d,%r12d
5c29(9): mov $0x0,0x50(%rsp)
5c32(5): mov $0x1,0xf(%rsp)
5c37(5): mov $0x1,0xd(%rsp)
5c3c(9): mov $0x1,0x18(%rsp)
5c45(3): xor %r15d,%r15d
5c48(5): mov %rax,0x48(%rsp)
5c4d(8): mov $0x5,0x8(%rsp)
5c55(5): jmp 0xfffff37e(%rip)
5c5a(5): mov $0x1,0xe(%rsp)
5c5f(5): mov $0x0,0x7c(%rsp)
5c64(3): xor %r12d,%r12d
5c67(9): mov $0x0,0x50(%rsp)
5c70(5): mov $0x0,0xf(%rsp)
5c75(3): xor %r15d,%r15d
5c78(5): mov $0x1,0xd(%rsp)
5c7d(9): mov $0x0,0x18(%rsp)
5c86(9): mov $0x0,0x48(%rsp)
5c8f(5): jmp 0xfffff344(%rip)
5c94(5): cmp $0xa,0x8(%rsp)
5c99(2): jz 0x58(%rip)
5c9b(7): lea 0x2935(%rip),%rsi
5ca2(2): xor %edi,%edi
5ca4(5): mov $0x5,%edx
5ca9(5): call 0xffffb9b7(%rip)
5cae(3): mov %rax,%rcx
5cb1(5): mov %rax,0x68(%rsp)
5cb6(7): lea 0x291a(%rip),%rax
5cbd(3): cmp %rax,%rcx
5cc0(6): jz 0x39e(%rip)
5cc6(7): lea 0x2908(%rip),%rsi
5ccd(2): xor %edi,%edi
5ccf(5): mov $0x5,%edx
5cd4(5): call 0xffffb98c(%rip)
5cd9(3): mov %rax,%rcx
5cdc(5): mov %rax,0x60(%rsp)
5ce1(7): lea 0x28ed(%rip),%rax
5ce8(3): cmp %rax,%rcx
5ceb(6): jz 0x389(%rip)
5cf1(3): xor %r15d,%r15d
5cf4(2): test %ebx,%ebx
5cf6(6): jz 0x1c7(%rip)
5cfc(2): test %ebx,%ebx
5cfe(5): mov 0x60(%rsp),%rbx
5d03(5): setnz 0xf(%rsp)
5d08(3): xor %r12d,%r12d
5d0b(3): mov %rbx,%rdi
5d0e(5): call 0xffffb972(%rip)
5d13(5): mov %rbx,0x48(%rsp)
5d18(5): mov %rax,0x18(%rsp)
5d1d(5): mov $0x1,0xe(%rsp)
5d22(5): mov $0x0,0x7c(%rsp)
5d27(9): mov $0x0,0x50(%rsp)
5d30(5): mov $0x1,0xd(%rsp)
5d35(5): jmp 0xfffff29e(%rip)
5d3a(5): mov $0x1,0xe(%rsp)
5d3f(5): mov $0x0,0x7c(%rsp)
5d44(3): xor %r12d,%r12d
5d47(9): mov $0x0,0x50(%rsp)
5d50(5): mov $0x0,0xf(%rsp)
5d55(3): xor %r15d,%r15d
5d58(5): mov $0x0,0xd(%rsp)
5d5d(9): mov $0x0,0x18(%rsp)
5d66(9): mov $0x0,0x48(%rsp)
5d6f(5): jmp 0xfffff264(%rip)
5d74(5): mov $0x1,0xe(%rsp)
5d79(5): mov $0x0,0x7c(%rsp)
5d7e(3): xor %r12d,%r12d
5d81(9): mov $0x0,0x50(%rsp)
5d8a(5): mov $0x1,0xf(%rsp)
5d8f(5): mov $0x1,0xd(%rsp)
5d94(5): jmp 0xfffff21f(%rip)
5d99(3): cmp %r15,%r13
5d9c(2): jbe 0x7(%rip)
5d9e(5): mov $0x30,0x0(%r14,%r15,1)
5da3(4): lea 0x2(%rcx),%rax
5da7(3): cmp %rax,%r13
5daa(2): jbe 0x8(%rip)
5dac(6): mov $0x30,0x2(%r14,%rcx,1)
5db2(3): mov %r12d,%eax
5db5(4): lea 0x3(%rcx),%r15
5db9(3): xor %r12d,%r12d
5dbc(5): mov $0x30,%ebx
5dc1(5): jmp 0xfffff367(%rip)
5dc6(a): nop 0x0(%rax,%rax,1)
5dd0(5): movzx 0xf(%rsp),%ebx
5dd5(3): mov %r11,%rbp
5dd8(4): mov %bl,0xd(%rsp)
5ddc(5): jmp 0xfffffcad(%rip)
5de1(5): movzx 0xd(%rsp),%edx
5de6(3): xor %r12d,%r12d
5de9(5): jmp 0xfffffb07(%rip)
5dee(3): xor %r10d,%r10d
5df1(5): jmp 0xfffffbbc(%rip)
5df6(9): mov $0x0,0x50(%rsp)
5dff(5): mov $0x1,0xe(%rsp)
5e04(3): xor %r12d,%r12d
5e07(5): mov $0x0,0x7c(%rsp)
5e0c(5): jmp 0xfffffddf(%rip)
5e11(5): mov 0x30(%rsp),%r11
5e16(3): mov %r14,%rsi
5e19(3): mov %r13,%rcx
5e1c(3): mov %rbx,%rax
5e1f(3): mov %rbx,%rdi
5e22(6): movzx 0x7d(%rsp),%r8d
5e28(5): movzx 0x7e(%rsp),%ebx
5e2d(8): mov 0x88(%rsp),%r9
5e35(3): cmp %r11,%rsi
5e38(6): movzx 0x7f(%rsp),%r10d
5e3e(8): mov 0x80(%rsp),%r15
5e46(5): mov 0x40(%rsp),%r14
5e4b(5): mov 0x70(%rsp),%r13
5e50(2): jnb 0x28(%rip)
5e52(3): cmp $0x0,(%rcx)
5e55(2): jnz 0x12(%rip)
5e57(2): jmp 0x21(%rip)
5e59(7): nop 0x0(%rax)
5e60(5): cmp $0x0,0x0(%r9,%rax,1)
5e65(2): jz 0x10(%rip)
5e67(4): add $0x1,%rax
5e6b(5): lea 0x0(%rbp,%rax,1),%rdx
5e70(3): cmp %rdx,%r11
5e73(2): jnbe 0xffffffed(%rip)
5e75(3): mov %rax,%rdi
5e78(5): movzx 0xd(%rsp),%edx
5e7d(3): xor %r12d,%r12d
5e80(5): jmp 0xfffffa66(%rip)
5e85(3): mov %rbx,%rdi
5e88(6): movzx 0x7d(%rsp),%r8d
5e8e(5): movzx 0x7e(%rsp),%ebx
5e93(6): movzx 0x7f(%rsp),%r10d
5e99(8): mov 0x80(%rsp),%r15
5ea1(3): xor %r12d,%r12d
5ea4(5): mov 0x40(%rsp),%r14
5ea9(5): mov 0x70(%rsp),%r13
5eae(5): mov 0x30(%rsp),%r11
5eb3(5): movzx 0xd(%rsp),%edx
5eb8(5): jmp 0xfffffa2e(%rip)
5ebd(5): mov 0x68(%rsp),%rdx
5ec2(3): movzx (%rdx),%eax
5ec5(2): test %al,%al
5ec7(6): jz 0xfffffe35(%rip)
5ecd(3): nop (%rax)
5ed0(3): cmp %r15,%r13
5ed3(2): jbe 0x6(%rip)
5ed5(4): mov %al,0x0(%r14,%r15,1)
5ed9(4): add $0x1,%r15
5edd(5): movzx 0x0(%rdx,%r15,1),%eax
5ee2(2): test %al,%al
5ee4(2): jnz 0xffffffec(%rip)
5ee6(5): jmp 0xfffffe16(%rip)
5eeb(2): mov %edx,%eax
5eed(5): jmp 0xfffff55a(%rip)
5ef2(4): movzx 0x0(%rax,%rcx,1),%ebx
5ef6(3): cmp $0x3e,%bl
5ef9(6): jnbe 0xfffff877(%rip)
5eff(a): mov $0x8070630310989004800,%rax
5f09(4): bt %rbx,%rax
5f0d(6): jnb 0xfffff863(%rip)
5f13(5): cmp $0x0,0xf(%rsp)
5f18(6): jnz 0x1ea(%rip)
5f1e(3): cmp %r15,%r13
5f21(2): jbe 0x7(%rip)
5f23(5): mov $0x3f,0x0(%r14,%r15,1)
5f28(4): lea 0x1(%r15),%rax
5f2c(3): cmp %rax,%r13
5f2f(2): jbe 0x8(%rip)
5f31(6): mov $0x22,0x1(%r14,%r15,1)
5f37(4): lea 0x2(%r15),%rax
5f3b(3): cmp %rax,%r13
5f3e(2): jbe 0x8(%rip)
5f40(6): mov $0x22,0x2(%r14,%r15,1)
5f46(4): lea 0x3(%r15),%rax
5f4a(3): cmp %rax,%r13
5f4d(2): jbe 0x8(%rip)
5f4f(6): mov $0x3f,0x3(%r14,%r15,1)
5f55(4): add $0x4,%r15
5f59(2): xor %edx,%edx
5f5b(3): xor %r12d,%r12d
5f5e(2): xor %eax,%eax
5f60(3): mov %rcx,%rbp
5f63(5): jmp 0xfffff1c5(%rip)
5f68(2): test %ebx,%ebx
5f6a(6): jz 0x18e(%rip)
5f70(7): lea 0x265e(%rip),%rax
5f77(5): mov $0x1,0xe(%rsp)
5f7c(5): mov $0x0,0x7c(%rsp)
5f81(3): xor %r12d,%r12d
5f84(9): mov $0x0,0x50(%rsp)
5f8d(5): mov $0x1,0xf(%rsp)
5f92(5): mov $0x0,0xd(%rsp)
5f97(9): mov $0x1,0x18(%rsp)
5fa0(3): xor %r15d,%r15d
5fa3(5): mov %rax,0x48(%rsp)
5fa8(5): jmp 0xfffff02b(%rip)
5fad(3): nop (%rax)
5fb0(3): mov %r11,%rbp
5fb3(5): movzx 0xf(%rsp),%eax
5fb8(5): jmp 0xfffffad1(%rip)
5fbd(7): lea 0x260f(%rip),%rax
5fc4(5): mov $0x1,0xe(%rsp)
5fc9(5): mov $0x0,0x7c(%rsp)
5fce(3): xor %r12d,%r12d
5fd1(9): mov $0x0,0x50(%rsp)
5fda(5): mov $0x1,0xf(%rsp)
5fdf(5): mov $0x1,0xd(%rsp)
5fe4(9): mov $0x1,0x18(%rsp)
5fed(3): xor %r15d,%r15d
5ff0(5): mov %rax,0x48(%rsp)
5ff5(5): jmp 0xffffefde(%rip)
5ffa(2): mov %edx,%eax
5ffc(5): mov 0x48(%rsp),%rbx
6001(3): test %rbx,%rbx
6004(2): jz 0x2e(%rip)
6006(2): test %al,%al
6008(2): jz 0x2a(%rip)
600a(3): movzx (%rbx),%ecx
600d(3): mov %rbx,%rax
6010(2): test %cl,%cl
6012(2): jz 0x20(%rip)
6014(3): mov %r15,%rdx
6017(3): sub %r15,%rax
601a(3): cmp %rdx,%r13
601d(2): jbe 0x6(%rip)
601f(4): mov %cl,0x0(%r14,%rdx,1)
6023(4): add $0x1,%rdx
6027(4): movzx 0x0(%rax,%rdx,1),%ecx
602b(2): test %cl,%cl
602d(2): jnz 0xffffffed(%rip)
602f(3): mov %rdx,%r15
6032(3): cmp %r15,%r13
6035(6): jbe 0xfffffaa4(%rip)
603b(5): mov $0x0,0x0(%r14,%r15,1)
6040(5): jmp 0xfffffa99(%rip)
6045(5): cmp $0x2,0x8(%rsp)
604a(5): movzx 0xf(%rsp),%ebx
604f(3): mov %r11,%rbp
6052(3): setz %al
6055(4): mov %bl,0xd(%rsp)
6059(5): jmp 0xfffffa30(%rip)
605e(4): mov 0x8(%rsp),%esi
6062(3): mov %rcx,%rdi
6065(5): call 0xffffedab(%rip)
606a(5): mov %rax,0x68(%rsp)
606f(5): jmp 0xfffffc57(%rip)
6074(4): mov 0x8(%rsp),%esi
6078(3): mov %rcx,%rdi
607b(5): call 0xffffed95(%rip)
6080(5): mov %rax,0x60(%rsp)
6085(5): jmp 0xfffffc6c(%rip)
608a(5): movzx 0xf(%rsp),%ebx
608f(3): mov %r11,%rbp
6092(2): mov %edx,%eax
6094(4): mov %bl,0xd(%rsp)
6098(5): jmp 0xfffff9f1(%rip)
609d(4): sub $0x8,%rsp
60a1(6): mov $0x5,%r8d
60a7(3): mov %r11,%rcx
60aa(4): push 0x68(%rsp)
60ae(4): push 0x78(%rsp)
60b2(3): mov %r14,%rdi
60b5(4): push 0x38(%rsp)
60b9(8): mov 0x98(%rsp),%r9d
60c1(5): mov 0x30(%rsp),%rdx
60c6(5): mov 0x70(%rsp),%rsi
60cb(5): call 0xffffee35(%rip)
60d0(4): add $0x20,%rsp
60d4(3): mov %rax,%r15
60d7(5): jmp 0xfffffa02(%rip)
60dc(5): movzx 0x7c(%rsp),%eax
60e1(5): jmp 0xffffff1b(%rip)
60e6(8): mov $0x2,0x8(%rsp)
60ee(5): jmp 0xfffff99b(%rip)
60f3(5): call 0xffffb59d(%rip)
60f8(5): mov $0x0,0xd(%rsp)
60fd(5): jmp 0xfffffa74(%rip)
6102(3): mov %r11,%rbp
6105(5): jmp 0xfffff99b(%rip)
610a(5): mov $0x1,0xe(%rsp)
610f(2): xor %eax,%eax
6111(3): xor %r12d,%r12d
6114(9): mov $0x0,0x50(%rsp)
611d(5): jmp 0xfffff5a7(%rip)
6122(3): mov %r13,%rdx
6125(5): mov 0x50(%rsp),%r13
612a(5): jmp 0xfffff5f8(%rip)
612f(5): call 0xffffb491(%rip)

"quotearg_n_options" :
6140(2): push %r15
6142(2): push %r14
6144(3): movsxd %edi,%r15
6147(2): push %r13
6149(2): push %r12
614b(3): mov %rdx,%r14
614e(1): push %rbp
614f(1): push %rbx
6150(3): mov %rcx,%rbp
6153(4): sub $0x28,%rsp
6157(5): mov %rsi,0x8(%rsp)
615c(5): call 0xffffb474(%rip)
6161(3): mov %rax,%r13
6164(2): mov (%rax),%eax
6166(3): test %r15d,%r15d
6169(7): mov 0x204f10(%rip),%rbx
6170(4): mov %eax,0x18(%rsp)
6174(6): js 0x16d(%rip)
617a(7): cmp %r15d,0x204ef7(%rip)
6181(2): jnle 0x64(%rip)
6183(7): cmp $0x7fffffff,%r15d
618a(6): jz 0x15c(%rip)
6190(4): lea 0x1(%r15),%r12d
6194(7): lea 0x204ef5(%rip),%rax
619b(3): movsxd %r12d,%rsi
619e(4): shl/sal $0x4,%rsi
61a2(3): cmp %rax,%rbx
61a5(6): jz 0x11b(%rip)
61ab(3): mov %rbx,%rdi
61ae(5): call 0xf82(%rip)
61b3(3): mov %rax,%rbx
61b6(7): mov %rax,0x204ec3(%rip)
61bd(7): movsxd 0x204eb4(%rip),%rdi
61c4(3): mov %r12d,%edx
61c7(2): xor %esi,%esi
61c9(2): sub %edi,%edx
61cb(4): shl/sal $0x4,%rdi
61cf(3): movsxd %edx,%rdx
61d2(3): add %rbx,%rdi
61d5(4): shl/sal $0x4,%rdx
61d9(5): call 0xffffb527(%rip)
61de(7): mov %r12d,0x204e93(%rip)
61e5(3): mov 0x4(%rbp),%eax
61e8(4): shl/sal $0x4,%r15
61ec(4): sub $0x8,%rsp
61f0(3): add %r15,%rbx
61f3(4): lea 0x8(%rbp),%r15
61f7(4): mov 0x0(%rbp),%r8d
61fb(3): mov (%rbx),%r11
61fe(4): mov 0x8(%rbx),%r12
6202(3): mov %r14,%rcx
6205(3): or $0x1,%eax
6208(4): mov %eax,0x24(%rsp)
620c(3): push 0x30(%rbp)
620f(3): mov %eax,%r9d
6212(3): push 0x28(%rbp)
6215(2): push %r15
6217(3): mov %r11,%rsi
621a(5): mov 0x28(%rsp),%rdx
621f(3): mov %r12,%rdi
6222(5): mov %r11,0x30(%rsp)
6227(5): call 0xffffecd9(%rip)
622c(4): add $0x20,%rsp
6230(5): mov 0x10(%rsp),%r11
6235(3): cmp %rax,%r11
6238(2): jnbe 0x69(%rip)
623a(4): lea 0x1(%rax),%rsi
623e(7): lea 0x204efb(%rip),%rax
6245(3): cmp %rax,%r12
6248(3): mov %rsi,(%rbx)
624b(2): jz 0x14(%rip)
624d(3): mov %r12,%rdi
6250(5): mov %rsi,0x10(%rsp)
6255(5): call 0xffffb35b(%rip)
625a(5): mov 0x10(%rsp),%rsi
625f(3): mov %rsi,%rdi
6262(5): mov %rsi,0x10(%rsp)
6267(5): call 0xe69(%rip)
626c(4): sub $0x8,%rsp
6270(4): mov %rax,0x8(%rbx)
6274(4): mov 0x0(%rbp),%r8d
6278(3): push 0x30(%rbp)
627b(3): push 0x28(%rbp)
627e(3): mov %r14,%rcx
6281(2): push %r15
6283(5): mov 0x3c(%rsp),%r9d
6288(3): mov %rax,%rdi
628b(5): mov 0x28(%rsp),%rdx
6290(5): mov 0x30(%rsp),%rsi
6295(3): mov %rax,%r12
6298(5): call 0xffffec68(%rip)
629d(4): add $0x20,%rsp
62a1(4): mov 0x18(%rsp),%eax
62a5(4): mov %eax,0x0(%r13)
62a9(4): add $0x28,%rsp
62ad(3): mov %r12,%rax
62b0(1): pop %rbx
62b1(1): pop %rbp
62b2(2): pop %r12
62b4(2): pop %r13
62b6(2): pop %r14
62b8(2): pop %r15
62ba(1): ret near (%rsp)
62bb(5): nop 0x0(%rax,%rax,1)
62c0(2): xor %edi,%edi
62c2(5): call 0xe6e(%rip)
62c7(8): movdqa 0x204dc1(%rip),%xmm0
62cf(3): mov %rax,%rbx
62d2(7): mov %rax,0x204da7(%rip)
62d9(3): movups %xmm0,(%rax)
62dc(5): jmp 0xfffffee1(%rip)
62e1(5): call 0xffffb2df(%rip)
62e6(5): call 0x103a(%rip)

"clone_quoting_options" :
62f0(2): push %r12
62f2(1): push %rbp
62f3(1): push %rbx
62f4(3): mov %rdi,%rbx
62f7(5): call 0xffffb2d9(%rip)
62fc(3): mov (%rax),%r12d
62ff(3): mov %rax,%rbp
6302(7): lea 0x204f37(%rip),%rax
6309(3): test %rbx,%rbx
630c(5): mov $0x38,%esi
6311(4): cmove %rax,%rbx
6315(3): mov %rbx,%rdi
6318(5): call 0xfb8(%rip)
631d(4): mov %r12d,0x0(%rbp)
6321(1): pop %rbx
6322(1): pop %rbp
6323(2): pop %r12
6325(1): ret near (%rsp)

"get_quoting_style" :
6330(7): lea 0x204f09(%rip),%rax
6337(3): test %rdi,%rdi
633a(4): cmove %rax,%rdi
633e(2): mov (%rdi),%eax
6340(1): ret near (%rsp)

"set_quoting_style" :
6350(7): lea 0x204ee9(%rip),%rax
6357(3): test %rdi,%rdi
635a(4): cmove %rax,%rdi
635e(2): mov %esi,(%rdi)
6360(1): ret near (%rsp)

"set_char_quoting" :
6370(7): lea 0x204ec9(%rip),%rax
6377(3): test %rdi,%rdi
637a(2): mov %esi,%ecx
637c(4): cmove %rax,%rdi
6380(2): mov %esi,%eax
6382(3): and $0x1f,%ecx
6385(3): shr $0x5,%al
6388(3): movzx %al,%eax
638b(5): lea 0x8(%rdi,%rax,4),%rdi
6390(2): mov (%rdi),%esi
6392(2): mov %esi,%eax
6394(2): shr %cl,%eax
6396(2): xor %eax,%edx
6398(3): and $0x1,%eax
639b(3): and $0x1,%edx
639e(2): shl/sal %cl,%edx
63a0(2): xor %esi,%edx
63a2(2): mov %edx,(%rdi)
63a4(1): ret near (%rsp)

"set_quoting_flags" :
63b0(7): lea 0x204e89(%rip),%rax
63b7(3): test %rdi,%rdi
63ba(4): cmove %rax,%rdi
63be(3): mov 0x4(%rdi),%eax
63c1(3): mov %esi,0x4(%rdi)
63c4(1): ret near (%rsp)

"set_custom_quoting" :
63d0(7): lea 0x204e69(%rip),%rax
63d7(3): test %rdi,%rdi
63da(4): cmove %rax,%rdi
63de(3): test %rsi,%rsi
63e1(6): mov $0xa,(%rdi)
63e7(2): jz 0x10(%rip)
63e9(3): test %rdx,%rdx
63ec(2): jz 0xb(%rip)
63ee(4): mov %rsi,0x28(%rdi)
63f2(4): mov %rdx,0x30(%rdi)
63f6(1): ret near (%rsp)
63f7(4): sub $0x8,%rsp
63fb(5): call 0xffffb1c5(%rip)

"quotearg_buffer" :
6400(2): push %r15
6402(2): push %r14
6404(7): lea 0x204e35(%rip),%rax
640b(2): push %r13
640d(2): push %r12
640f(3): mov %rdi,%r13
6412(1): push %rbp
6413(1): push %rbx
6414(3): mov %r8,%rbx
6417(3): mov %rsi,%r14
641a(3): mov %rdx,%r15
641d(4): sub $0x18,%rsp
6421(3): test %r8,%r8
6424(4): cmove %rax,%rbx
6428(5): mov %rcx,0x8(%rsp)
642d(5): call 0xffffb1a3(%rip)
6432(3): mov (%rax),%r12d
6435(3): mov %rax,%rbp
6438(4): lea 0x8(%rbx),%rax
643c(4): sub $0x8,%rsp
6440(4): mov 0x4(%rbx),%r9d
6444(3): push 0x30(%rbx)
6447(3): mov (%rbx),%r8d
644a(3): push 0x28(%rbx)
644d(3): mov %r15,%rdx
6450(1): push %rax
6451(5): mov 0x28(%rsp),%rcx
6456(3): mov %r14,%rsi
6459(3): mov %r13,%rdi
645c(5): call 0xffffeaa4(%rip)
6461(4): mov %r12d,0x0(%rbp)
6465(4): add $0x38,%rsp
6469(1): pop %rbx
646a(1): pop %rbp
646b(2): pop %r12
646d(2): pop %r13
646f(2): pop %r14
6471(2): pop %r15
6473(1): ret near (%rsp)

"quotearg_alloc_mem" :
6480(2): push %r15
6482(2): push %r14
6484(7): lea 0x204db5(%rip),%rax
648b(2): push %r13
648d(2): push %r12
648f(3): mov %rdx,%r12
6492(1): push %rbp
6493(1): push %rbx
6494(3): mov %rcx,%rbx
6497(3): mov %rdi,%r14
649a(3): mov %rsi,%r15
649d(4): sub $0x38,%rsp
64a1(3): test %rcx,%rcx
64a4(4): cmove %rax,%rbx
64a8(2): xor %ebp,%ebp
64aa(5): call 0xffffb126(%rip)
64af(3): test %r12,%r12
64b2(3): mov %rax,%r13
64b5(2): mov (%rax),%eax
64b7(4): setz %bpl
64bb(3): or 0x4(%rbx),%ebp
64be(4): lea 0x8(%rbx),%r10
64c2(4): sub $0x8,%rsp
64c6(3): mov (%rbx),%r8d
64c9(3): mov %r15,%rcx
64cc(4): mov %eax,0x14(%rsp)
64d0(3): push 0x30(%rbx)
64d3(3): mov %r14,%rdx
64d6(3): push 0x28(%rbx)
64d9(2): push %r10
64db(2): xor %esi,%esi
64dd(3): mov %ebp,%r9d
64e0(2): xor %edi,%edi
64e2(5): mov %r10,0x40(%rsp)
64e7(5): call 0xffffea19(%rip)
64ec(4): lea 0x1(%rax),%rsi
64f0(5): mov %rax,0x48(%rsp)
64f5(4): add $0x20,%rsp
64f9(3): mov %rsi,%rdi
64fc(5): mov %rsi,0x18(%rsp)
6501(5): call 0xbcf(%rip)
6506(5): mov %rax,0x10(%rsp)
650b(4): sub $0x8,%rsp
650f(3): push 0x30(%rbx)
6512(3): push 0x28(%rbx)
6515(5): mov 0x38(%rsp),%r10
651a(3): mov %ebp,%r9d
651d(3): mov (%rbx),%r8d
6520(3): mov %r15,%rcx
6523(3): mov %r14,%rdx
6526(3): mov %rax,%rdi
6529(2): push %r10
652b(5): mov 0x38(%rsp),%rsi
6530(5): call 0xffffe9d0(%rip)
6535(4): mov 0x2c(%rsp),%eax
6539(4): add $0x20,%rsp
653d(3): test %r12,%r12
6540(4): mov %eax,0x0(%r13)
6544(2): jz 0xb(%rip)
6546(5): mov 0x28(%rsp),%r11
654b(4): mov %r11,(%r12)
654f(5): mov 0x10(%rsp),%rax
6554(4): add $0x38,%rsp
6558(1): pop %rbx
6559(1): pop %rbp
655a(2): pop %r12
655c(2): pop %r13
655e(2): pop %r14
6560(2): pop %r15
6562(1): ret near (%rsp)

"quotearg_alloc" :
6570(3): mov %rdx,%rcx
6573(2): xor %edx,%edx
6575(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
6580(6): mov 0x204af2(%rip),%eax
6586(2): push %r12
6588(7): mov 0x204af1(%rip),%r12
658f(1): push %rbp
6590(1): push %rbx
6591(3): cmp $0x1,%eax
6594(2): jle 0x2d(%rip)
6596(3): sub $0x2,%eax
6599(5): lea 0x18(%r12),%rbx
659e(4): shl/sal $0x4,%rax
65a2(5): lea 0x28(%r12,%rax,1),%rbp
65a7(9): nop 0x0(%rax,%rax,1)
65b0(3): mov (%rbx),%rdi
65b3(4): add $0x10,%rbx
65b7(5): call 0xffffaff9(%rip)
65bc(3): cmp %rbp,%rbx
65bf(2): jnz 0xfffffff1(%rip)
65c1(5): mov 0x8(%r12),%rdi
65c6(7): lea 0x204b73(%rip),%rbx
65cd(3): cmp %rbx,%rdi
65d0(2): jz 0x19(%rip)
65d2(5): call 0xffffafde(%rip)
65d7(b): mov $0x100,0x204aae(%rip)
65e2(7): mov %rbx,0x204aaf(%rip)
65e9(7): lea 0x204aa0(%rip),%rbx
65f0(3): cmp %rbx,%r12
65f3(2): jz 0x11(%rip)
65f5(3): mov %r12,%rdi
65f8(5): call 0xffffafb8(%rip)
65fd(7): mov %rbx,0x204a7c(%rip)
6604(1): pop %rbx
6605(a): mov $0x1,0x204a69(%rip)
660f(1): pop %rbp
6610(2): pop %r12
6612(1): ret near (%rsp)

"quotearg_n" :
6620(7): lea 0x204c19(%rip),%rcx
6627(7): mov $0xffffffff,%rdx
662e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
6640(7): lea 0x204bf9(%rip),%rcx
6647(5): jmp 0xfffffaf9(%rip)

"quotearg" :
6650(7): lea 0x204be9(%rip),%rcx
6657(3): mov %rdi,%rsi
665a(7): mov $0xffffffff,%rdx
6661(2): xor %edi,%edi
6663(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
6670(7): lea 0x204bc9(%rip),%rcx
6677(3): mov %rsi,%rdx
667a(3): mov %rdi,%rsi
667d(2): xor %edi,%edi
667f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
6690(4): sub $0x48,%rsp
6694(3): mov %rdx,%rax
6697(9): mov $0x28,%rdx
66a0(5): mov %rdx,0x38(%rsp)
66a5(2): xor %edx,%edx
66a7(3): cmp $0xa,%esi
66aa(2): jz 0x6a(%rip)
66ac(3): mov %esi,(%rsp)
66af(3): mov %rsp,%rcx
66b2(7): mov $0xffffffff,%rdx
66b9(3): mov %rax,%rsi
66bc(9): mov $0x0,0x4(%rsp)
66c5(9): mov $0x0,0xc(%rsp)
66ce(9): mov $0x0,0x14(%rsp)
66d7(9): mov $0x0,0x1c(%rsp)
66e0(9): mov $0x0,0x24(%rsp)
66e9(9): mov $0x0,0x2c(%rsp)
66f2(8): mov $0x0,0x34(%rsp)
66fa(5): call 0xfffffa46(%rip)
66ff(5): mov 0x38(%rsp),%rcx
6704(9): xor $0x28,%rcx
670d(2): jnz 0xc(%rip)
670f(4): add $0x48,%rsp
6713(1): ret near (%rsp)
6714(5): call 0xffffaeac(%rip)
6719(5): call 0xffffaf77(%rip)

"quotearg_n_style_mem" :
6720(4): sub $0x48,%rsp
6724(3): mov %rdx,%rax
6727(3): mov %rcx,%rdx
672a(9): mov $0x28,%rcx
6733(5): mov %rcx,0x38(%rsp)
6738(2): xor %ecx,%ecx
673a(3): cmp $0xa,%esi
673d(2): jz 0x63(%rip)
673f(3): mov %esi,(%rsp)
6742(3): mov %rsp,%rcx
6745(3): mov %rax,%rsi
6748(9): mov $0x0,0x4(%rsp)
6751(9): mov $0x0,0xc(%rsp)
675a(9): mov $0x0,0x14(%rsp)
6763(9): mov $0x0,0x1c(%rsp)
676c(9): mov $0x0,0x24(%rsp)
6775(9): mov $0x0,0x2c(%rsp)
677e(8): mov $0x0,0x34(%rsp)
6786(5): call 0xfffff9ba(%rip)
678b(5): mov 0x38(%rsp),%rdx
6790(9): xor $0x28,%rdx
6799(2): jnz 0xc(%rip)
679b(4): add $0x48,%rsp
679f(1): ret near (%rsp)
67a0(5): call 0xffffae20(%rip)
67a5(5): call 0xffffaeeb(%rip)

"quotearg_style" :
67b0(3): mov %rsi,%rdx
67b3(2): mov %edi,%esi
67b5(2): xor %edi,%edi
67b7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
67c0(3): mov %rdx,%rcx
67c3(3): mov %rsi,%rdx
67c6(2): mov %edi,%esi
67c8(2): xor %edi,%edi
67ca(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
67d0(4): sub $0x48,%rsp
67d4(2): mov %edx,%ecx
67d6(9): mov $0x28,%rax
67df(5): mov %rax,0x38(%rsp)
67e4(2): xor %eax,%eax
67e6(7): mov 0x204a83(%rip),%rax
67ed(3): mov %rsp,%r8
67f0(3): and $0x1f,%ecx
67f3(8): movdqa 0x204a45(%rip),%xmm0
67fb(5): mov %rax,0x30(%rsp)
6800(2): mov %edx,%eax
6802(4): movaps %xmm0,(%rsp)
6806(3): shr $0x5,%al
6809(3): movzx %al,%eax
680c(5): lea 0x8(%r8,%rax,4),%r9
6811(8): movdqa 0x204a37(%rip),%xmm0
6819(5): movaps %xmm0,0x10(%rsp)
681e(8): movdqa 0x204a3a(%rip),%xmm0
6826(5): movaps %xmm0,0x20(%rsp)
682b(3): mov (%r9),%edx
682e(2): mov %edx,%eax
6830(2): shr %cl,%eax
6832(2): not %eax
6834(3): and $0x1,%eax
6837(2): shl/sal %cl,%eax
6839(3): mov %r8,%rcx
683c(2): xor %edx,%eax
683e(3): mov %rsi,%rdx
6841(3): mov %rdi,%rsi
6844(3): mov %eax,(%r9)
6847(2): xor %edi,%edi
6849(5): call 0xfffff8f7(%rip)
684e(5): mov 0x38(%rsp),%rsi
6853(9): xor $0x28,%rsi
685c(2): jnz 0x7(%rip)
685e(4): add $0x48,%rsp
6862(1): ret near (%rsp)
6863(5): call 0xffffae2d(%rip)

"quotearg_char" :
6870(4): movsx %sil,%edx
6874(7): mov $0xffffffff,%rsi
687b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
6880(5): mov $0x3a,%edx
6885(7): mov $0xffffffff,%rsi
688c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
68a0(5): mov $0x3a,%edx
68a5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
68b0(4): sub $0x48,%rsp
68b4(3): mov %rdx,%rax
68b7(9): mov $0x28,%rdx
68c0(5): mov %rdx,0x38(%rsp)
68c5(2): xor %edx,%edx
68c7(3): cmp $0xa,%esi
68ca(2): jz 0x6a(%rip)
68cc(3): mov %esi,(%rsp)
68cf(3): mov %rsp,%rcx
68d2(7): mov $0xffffffff,%rdx
68d9(3): mov %rax,%rsi
68dc(9): mov $0x0,0x4(%rsp)
68e5(9): mov $0x4000000,0xc(%rsp)
68ee(9): mov $0x0,0x14(%rsp)
68f7(9): mov $0x0,0x1c(%rsp)
6900(9): mov $0x0,0x24(%rsp)
6909(9): mov $0x0,0x2c(%rsp)
6912(8): mov $0x0,0x34(%rsp)
691a(5): call 0xfffff826(%rip)
691f(5): mov 0x38(%rsp),%rcx
6924(9): xor $0x28,%rcx
692d(2): jnz 0xc(%rip)
692f(4): add $0x48,%rsp
6933(1): ret near (%rsp)
6934(5): call 0xffffac8c(%rip)
6939(5): call 0xffffad57(%rip)

"quotearg_n_custom_mem" :
6940(4): sub $0x48,%rsp
6944(3): mov %rcx,%r9
6947(7): mov 0x204922(%rip),%rcx
694e(8): movdqa 0x2048ea(%rip),%xmm0
6956(9): mov $0x28,%rax
695f(5): mov %rax,0x38(%rsp)
6964(2): xor %eax,%eax
6966(4): movaps %xmm0,(%rsp)
696a(3): test %rsi,%rsi
696d(5): mov %rcx,0x30(%rsp)
6972(7): mov $0xa,(%rsp)
6979(8): movdqa 0x2048cf(%rip),%xmm0
6981(5): movaps %xmm0,0x10(%rsp)
6986(8): movdqa 0x2048d2(%rip),%xmm0
698e(5): movaps %xmm0,0x20(%rsp)
6993(2): jz 0x34(%rip)
6995(3): test %rdx,%rdx
6998(2): jz 0x2f(%rip)
699a(5): mov %rsi,0x28(%rsp)
699f(5): mov %rdx,0x30(%rsp)
69a4(3): mov %rsp,%rcx
69a7(3): mov %r8,%rdx
69aa(3): mov %r9,%rsi
69ad(5): call 0xfffff793(%rip)
69b2(5): mov 0x38(%rsp),%rdi
69b7(9): xor $0x28,%rdi
69c0(2): jnz 0xc(%rip)
69c2(4): add $0x48,%rsp
69c6(1): ret near (%rsp)
69c7(5): call 0xffffabf9(%rip)
69cc(5): call 0xffffacc4(%rip)

"quotearg_n_custom" :
69e0(7): mov $0xffffffff,%r8
69e7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
69f0(3): mov %rdx,%rcx
69f3(7): mov $0xffffffff,%r8
69fa(3): mov %rsi,%rdx
69fd(3): mov %rdi,%rsi
6a00(2): xor %edi,%edi
6a02(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
6a10(3): mov %rcx,%r8
6a13(3): mov %rdx,%rcx
6a16(3): mov %rsi,%rdx
6a19(3): mov %rdi,%rsi
6a1c(2): xor %edi,%edi
6a1e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
6a30(7): lea 0x204609(%rip),%rcx
6a37(5): jmp 0xfffff709(%rip)

"quote_mem" :
6a40(7): lea 0x2045f9(%rip),%rcx
6a47(3): mov %rsi,%rdx
6a4a(3): mov %rdi,%rsi
6a4d(2): xor %edi,%edi
6a4f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
6a60(7): lea 0x2045d9(%rip),%rcx
6a67(7): mov $0xffffffff,%rdx
6a6e(5): jmp 0xfffff6d2(%rip)

"quote" :
6a80(7): lea 0x2045b9(%rip),%rcx
6a87(3): mov %rdi,%rsi
6a8a(7): mov $0xffffffff,%rdx
6a91(2): xor %edi,%edi
6a93(5): jmp 0xfffff6ad(%rip)

"dup_safer" :
6aa0(5): mov $0x3,%edx
6aa5(2): xor %esi,%esi
6aa7(2): xor %eax,%eax
6aa9(5): jmp 0x937(%rip)

"version_etc_arn" :
6ab0(2): push %r15
6ab2(2): push %r14
6ab4(2): push %r13
6ab6(2): push %r12
6ab8(3): mov %r9,%r12
6abb(1): push %rbp
6abc(1): push %rbx
6abd(3): mov %rdi,%rbp
6ac0(3): mov %r8,%rbx
6ac3(4): sub $0x28,%rsp
6ac7(3): test %rsi,%rsi
6aca(6): jz 0x11e(%rip)
6ad0(3): mov %rdx,%r8
6ad3(7): lea 0x1fce(%rip),%rdx
6ada(3): mov %rcx,%r9
6add(2): xor %eax,%eax
6adf(3): mov %rsi,%rcx
6ae2(5): mov $0x1,%esi
6ae7(5): call 0xffffadb9(%rip)
6aec(7): lea 0x1fc8(%rip),%rsi
6af3(2): xor %edi,%edi
6af5(5): mov $0x5,%edx
6afa(5): call 0xffffab66(%rip)
6aff(7): lea 0x22da(%rip),%rdx
6b06(3): mov %rax,%rcx
6b09(6): mov $0x7e3,%r8d
6b0f(5): mov $0x1,%esi
6b14(3): mov %rbp,%rdi
6b17(2): xor %eax,%eax
6b19(5): call 0xffffad87(%rip)
6b1e(7): lea 0x2023(%rip),%rsi
6b25(2): xor %edi,%edi
6b27(5): mov $0x5,%edx
6b2c(5): call 0xffffab34(%rip)
6b31(3): mov %rbp,%rsi
6b34(3): mov %rax,%rdi
6b37(5): call 0xffffac09(%rip)
6b3c(4): cmp $0x9,%r12
6b40(6): jnbe 0x340(%rip)
6b46(7): lea 0x225b(%rip),%rdx
6b4d(4): movsxd 0x0(%rdx,%r12,4),%rax
6b51(3): add %rdx,%rax
6b54(2): jmp %rax
6b56(a): nop 0x0(%rax,%rax,1)
6b60(4): mov 0x38(%rbx),%r9
6b64(4): mov 0x10(%rbx),%rax
6b68(7): lea 0x2149(%rip),%rsi
6b6f(4): mov 0x8(%rbx),%r8
6b73(5): mov $0x5,%edx
6b78(2): xor %edi,%edi
6b7a(4): mov 0x30(%rbx),%r13
6b7e(4): mov 0x28(%rbx),%r12
6b82(5): mov %r9,0x10(%rsp)
6b87(4): mov 0x20(%rbx),%r15
6b8b(4): mov 0x18(%rbx),%r14
6b8f(4): mov %rax,(%rsp)
6b93(5): mov %r8,0x8(%rsp)
6b98(3): mov (%rbx),%rbx
6b9b(5): call 0xffffaac5(%rip)
6ba0(4): sub $0x8,%rsp
6ba4(5): mov 0x18(%rsp),%r9
6ba9(3): mov %rax,%rdx
6bac(3): mov %rbx,%rcx
6baf(5): mov $0x1,%esi
6bb4(3): mov %rbp,%rdi
6bb7(2): xor %eax,%eax
6bb9(2): push %r9
6bbb(2): push %r13
6bbd(2): push %r12
6bbf(2): push %r15
6bc1(2): push %r14
6bc3(5): mov 0x30(%rsp),%r9
6bc8(5): mov 0x38(%rsp),%r8
6bcd(5): call 0xffffacd3(%rip)
6bd2(4): add $0x30,%rsp
6bd6(4): add $0x28,%rsp
6bda(1): pop %rbx
6bdb(1): pop %rbp
6bdc(2): pop %r12
6bde(2): pop %r13
6be0(2): pop %r14
6be2(2): pop %r15
6be4(1): ret near (%rsp)
6be5(3): nop (%rax)
6be8(3): mov %rcx,%r8
6beb(3): mov %rdx,%rcx
6bee(7): lea 0x1ebf(%rip),%rdx
6bf5(5): mov $0x1,%esi
6bfa(2): xor %eax,%eax
6bfc(5): call 0xffffaca4(%rip)
6c01(5): jmp 0xfffffeeb(%rip)
6c06(a): nop 0x0(%rax,%rax,1)
6c10(4): mov 0x40(%rbx),%r10
6c14(4): mov 0x38(%rbx),%r9
6c18(7): lea 0x20c9(%rip),%rsi
6c1f(4): mov 0x10(%rbx),%rax
6c23(4): mov 0x8(%rbx),%r8
6c27(5): mov $0x5,%edx
6c2c(4): mov 0x30(%rbx),%r13
6c30(4): mov 0x28(%rbx),%r12
6c34(4): mov 0x20(%rbx),%r15
6c38(4): mov 0x18(%rbx),%r14
6c3c(3): mov (%rbx),%rbx
6c3f(5): mov %r10,0x18(%rsp)
6c44(5): mov %r9,0x10(%rsp)
6c49(4): mov %rax,(%rsp)
6c4d(5): mov %r8,0x8(%rsp)
6c52(2): xor %edi,%edi
6c54(5): call 0xffffaa0c(%rip)
6c59(5): mov 0x18(%rsp),%r10
6c5e(2): push %r10
6c60(5): jmp 0xffffff44(%rip)
6c65(3): nop (%rax)
6c68(3): mov (%rbx),%rbx
6c6b(7): lea 0x1e4d(%rip),%rsi
6c72(5): mov $0x5,%edx
6c77(2): xor %edi,%edi
6c79(5): call 0xffffa9e7(%rip)
6c7e(4): add $0x28,%rsp
6c82(3): mov %rbx,%rcx
6c85(3): mov %rbp,%rdi
6c88(1): pop %rbx
6c89(1): pop %rbp
6c8a(2): pop %r12
6c8c(2): pop %r13
6c8e(2): pop %r14
6c90(2): pop %r15
6c92(3): mov %rax,%rdx
6c95(5): mov $0x1,%esi
6c9a(2): xor %eax,%eax
6c9c(5): jmp 0xffffac04(%rip)
6ca1(7): nop 0x0(%rax)
6ca8(4): mov 0x8(%rbx),%r12
6cac(7): lea 0x1e1c(%rip),%rsi
6cb3(3): mov (%rbx),%rbx
6cb6(5): mov $0x5,%edx
6cbb(2): xor %edi,%edi
6cbd(5): call 0xffffa9a3(%rip)
6cc2(4): add $0x28,%rsp
6cc6(3): mov %r12,%r8
6cc9(3): mov %rbx,%rcx
6ccc(3): mov %rbp,%rdi
6ccf(3): mov %rax,%rdx
6cd2(5): mov $0x1,%esi
6cd7(1): pop %rbx
6cd8(1): pop %rbp
6cd9(2): pop %r12
6cdb(2): pop %r13
6cdd(2): pop %r14
6cdf(2): pop %r15
6ce1(2): xor %eax,%eax
6ce3(5): jmp 0xffffabbd(%rip)
6ce8(8): nop 0x0(%rax,%rax,1)
6cf0(4): mov 0x10(%rbx),%r13
6cf4(4): mov 0x8(%rbx),%r12
6cf8(7): lea 0x1de7(%rip),%rsi
6cff(3): mov (%rbx),%rbx
6d02(5): mov $0x5,%edx
6d07(2): xor %edi,%edi
6d09(5): call 0xffffa957(%rip)
6d0e(4): add $0x28,%rsp
6d12(3): mov %r13,%r9
6d15(3): mov %r12,%r8
6d18(3): mov %rbx,%rcx
6d1b(3): mov %rbp,%rdi
6d1e(3): mov %rax,%rdx
6d21(1): pop %rbx
6d22(1): pop %rbp
6d23(2): pop %r12
6d25(2): pop %r13
6d27(2): pop %r14
6d29(2): pop %r15
6d2b(5): mov $0x1,%esi
6d30(2): xor %eax,%eax
6d32(5): jmp 0xffffab6e(%rip)
6d37(9): nop 0x0(%rax,%rax,1)
6d40(7): lea 0x1ed1(%rip),%rsi
6d47(5): mov $0x5,%edx
6d4c(2): xor %edi,%edi
6d4e(4): mov 0x18(%rbx),%r14
6d52(4): mov 0x10(%rbx),%r13
6d56(4): mov 0x8(%rbx),%r12
6d5a(3): mov (%rbx),%rbx
6d5d(5): call 0xffffa903(%rip)
6d62(4): sub $0x8,%rsp
6d66(2): push %r14
6d68(3): mov %rax,%rdx
6d6b(3): mov %r13,%r9
6d6e(3): mov %r12,%r8
6d71(3): mov %rbx,%rcx
6d74(3): mov %rbp,%rdi
6d77(5): mov $0x1,%esi
6d7c(2): xor %eax,%eax
6d7e(5): call 0xffffab22(%rip)
6d83(1): pop %rax
6d84(1): pop %rdx
6d85(4): add $0x28,%rsp
6d89(1): pop %rbx
6d8a(1): pop %rbp
6d8b(2): pop %r12
6d8d(2): pop %r13
6d8f(2): pop %r14
6d91(2): pop %r15
6d93(1): ret near (%rsp)
6d94(4): nop 0x0(%rax)
6d98(4): mov 0x20(%rbx),%r15
6d9c(7): lea 0x1e95(%rip),%rsi
6da3(5): mov $0x5,%edx
6da8(2): xor %edi,%edi
6daa(4): mov 0x18(%rbx),%r14
6dae(4): mov 0x10(%rbx),%r13
6db2(4): mov 0x8(%rbx),%r12
6db6(3): mov (%rbx),%rbx
6db9(5): call 0xffffa8a7(%rip)
6dbe(2): push %r15
6dc0(2): jmp 0xffffffa6(%rip)
6dc2(6): nop 0x0(%rax,%rax,1)
6dc8(4): mov 0x8(%rbx),%r8
6dcc(4): mov 0x28(%rbx),%r12
6dd0(7): lea 0x1e89(%rip),%rsi
6dd7(4): mov 0x20(%rbx),%r15
6ddb(4): mov 0x18(%rbx),%r14
6ddf(5): mov $0x5,%edx
6de4(4): mov 0x10(%rbx),%r13
6de8(2): xor %edi,%edi
6dea(3): mov (%rbx),%rbx
6ded(4): mov %r8,(%rsp)
6df1(5): call 0xffffa86f(%rip)
6df6(4): sub $0x8,%rsp
6dfa(3): mov %r13,%r9
6dfd(2): push %r12
6dff(2): push %r15
6e01(2): push %r14
6e03(5): mov 0x20(%rsp),%r8
6e08(3): mov %rbx,%rcx
6e0b(3): mov %rax,%rdx
6e0e(3): mov %rbp,%rdi
6e11(5): mov $0x1,%esi
6e16(2): xor %eax,%eax
6e18(5): call 0xffffaa88(%rip)
6e1d(4): add $0x20,%rsp
6e21(4): add $0x28,%rsp
6e25(1): pop %rbx
6e26(1): pop %rbp
6e27(2): pop %r12
6e29(2): pop %r13
6e2b(2): pop %r14
6e2d(2): pop %r15
6e2f(1): ret near (%rsp)
6e30(4): mov 0x10(%rbx),%r9
6e34(4): mov 0x30(%rbx),%r13
6e38(7): lea 0x1e49(%rip),%rsi
6e3f(4): mov 0x28(%rbx),%r12
6e43(4): mov 0x20(%rbx),%r15
6e47(5): mov $0x5,%edx
6e4c(4): mov 0x18(%rbx),%r14
6e50(4): mov 0x8(%rbx),%r8
6e54(2): xor %edi,%edi
6e56(5): mov %r9,0x8(%rsp)
6e5b(3): mov (%rbx),%rbx
6e5e(4): mov %r8,(%rsp)
6e62(5): call 0xffffa7fe(%rip)
6e67(2): push %r13
6e69(2): push %r12
6e6b(2): push %r15
6e6d(2): push %r14
6e6f(5): mov 0x28(%rsp),%r9
6e74(2): jmp 0xffffff8f(%rip)
6e76(a): nop 0x0(%rax,%rax,1)
6e80(4): mov 0x40(%rbx),%r10
6e84(4): mov 0x38(%rbx),%r9
6e88(5): mov $0x5,%edx
6e8d(4): mov 0x10(%rbx),%rax
6e91(4): mov 0x8(%rbx),%r8
6e95(7): lea 0x1e84(%rip),%rsi
6e9c(4): mov 0x30(%rbx),%r13
6ea0(4): mov 0x28(%rbx),%r12
6ea4(4): mov 0x20(%rbx),%r15
6ea8(4): mov 0x18(%rbx),%r14
6eac(5): mov %r10,0x18(%rsp)
6eb1(5): mov %r9,0x10(%rsp)
6eb6(4): mov %rax,(%rsp)
6eba(5): mov %r8,0x8(%rsp)
6ebf(3): mov (%rbx),%rbx
6ec2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
6ed0(3): xor %r9d,%r9d
6ed3(4): cmp $0x0,(%r8)
6ed7(2): jz 0x14(%rip)
6ed9(7): nop 0x0(%rax)
6ee0(4): add $0x1,%r9
6ee4(5): cmp $0x0,0x0(%r8,%r9,8)
6ee9(2): jnz 0xfffffff7(%rip)
6eeb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
6ef0(4): sub $0x68,%rsp
6ef4(3): mov %r8,%r10
6ef7(3): xor %r9d,%r9d
6efa(9): mov $0x28,%rax
6f03(5): mov %rax,0x58(%rsp)
6f08(2): xor %eax,%eax
6f0a(3): mov %rsp,%r8
6f0d(3): nop (%rax)
6f10(3): mov (%r10),%eax
6f13(3): cmp $0x2f,%eax
6f16(2): jnbe 0x44(%rip)
6f18(3): mov %eax,%r11d
6f1b(4): add 0x10(%r10),%r11
6f1f(3): add $0x8,%eax
6f22(3): mov %eax,(%r10)
6f25(3): mov (%r11),%rax
6f28(3): test %rax,%rax
6f2b(4): mov %rax,0x0(%r8,%r9,8)
6f2f(2): jz 0xc(%rip)
6f31(4): add $0x1,%r9
6f35(4): cmp $0xa,%r9
6f39(2): jnz 0xffffffd7(%rip)
6f3b(5): call 0xfffffb75(%rip)
6f40(5): mov 0x58(%rsp),%rax
6f45(9): xor $0x28,%rax
6f4e(2): jnz 0x7(%rip)
6f50(4): add $0x68,%rsp
6f54(1): ret near (%rsp)
6f55(5): call 0xffffa73b(%rip)
6f5a(4): mov 0x8(%r10),%r11
6f5e(4): lea 0x8(%r11),%rax
6f62(4): mov %rax,0x8(%r10)
6f66(2): jmp 0xffffffbf(%rip)

"version_etc" :
6f70(1): push %rbp
6f71(1): push %rbx
6f72(6): mov $0x20,%r10d
6f78(3): xor %r11d,%r11d
6f7b(7): sub $0xb8,%rsp
6f82(9): mov $0x28,%rax
6f8b(5): mov %rax,0x78(%rsp)
6f90(2): xor %eax,%eax
6f92(8): lea 0xd0(%rsp),%rax
6f9a(8): mov %r8,0xa0(%rsp)
6fa2(8): lea 0xd0(%rsp),%rbx
6faa(5): lea 0x20(%rsp),%r8
6faf(8): mov %r9,0xa8(%rsp)
6fb7(8): mov $0x20,0x8(%rsp)
6fbf(5): mov %rax,0x10(%rsp)
6fc4(8): lea 0x80(%rsp),%rax
6fcc(3): xor %r9d,%r9d
6fcf(5): mov %rax,0x18(%rsp)
6fd4(3): mov %rax,%rbp
6fd7(9): nop 0x0(%rax,%rax,1)
6fe0(4): cmp $0x2f,%r10d
6fe4(2): jnbe 0x58(%rip)
6fe6(3): mov %r10d,%eax
6fe9(6): mov $0x1,%r11d
6fef(4): add $0x8,%r10d
6ff3(3): add %rbp,%rax
6ff6(3): mov (%rax),%rax
6ff9(3): test %rax,%rax
6ffc(4): mov %rax,0x0(%r8,%r9,8)
7000(2): jz 0xc(%rip)
7002(4): add $0x1,%r9
7006(4): cmp $0xa,%r9
700a(2): jnz 0xffffffd6(%rip)
700c(3): test %r11b,%r11b
700f(2): jnz 0x26(%rip)
7011(5): call 0xfffffa9f(%rip)
7016(5): mov 0x78(%rsp),%rax
701b(9): xor $0x28,%rax
7024(2): jnz 0xc(%rip)
7026(7): add $0xb8,%rsp
702d(1): pop %rbx
702e(1): pop %rbp
702f(1): ret near (%rsp)
7030(5): call 0xffffa660(%rip)
7035(5): mov %r10d,0x8(%rsp)
703a(2): jmp 0xffffffd7(%rip)
703c(3): mov %rbx,%rax
703f(4): add $0x8,%rbx
7043(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
7050(1): push %rbx
7051(7): lea 0x1aaa(%rip),%rsi
7058(5): mov $0x5,%edx
705d(2): xor %edi,%edi
705f(5): call 0xffffa601(%rip)
7064(7): lea 0x1aac(%rip),%rdx
706b(3): mov %rax,%rsi
706e(5): mov $0x1,%edi
7073(2): xor %eax,%eax
7075(5): call 0xffffa79b(%rip)
707a(7): lea 0x1aac(%rip),%rsi
7081(5): mov $0x5,%edx
7086(2): xor %edi,%edi
7088(5): call 0xffffa5d8(%rip)
708d(7): lea 0x100c(%rip),%rcx
7094(7): lea 0x95d(%rip),%rdx
709b(3): mov %rax,%rsi
709e(5): mov $0x1,%edi
70a3(2): xor %eax,%eax
70a5(5): call 0xffffa76b(%rip)
70aa(7): mov 0x203ff7(%rip),%rbx
70b1(7): lea 0x1ca8(%rip),%rsi
70b8(2): xor %edi,%edi
70ba(5): mov $0x5,%edx
70bf(5): call 0xffffa5a1(%rip)
70c4(3): mov %rbx,%rsi
70c7(3): mov %rax,%rdi
70ca(1): pop %rbx
70cb(5): jmp 0xffffa675(%rip)

"xmalloc" :
70d0(1): push %rbx
70d1(3): mov %rdi,%rbx
70d4(5): call 0xffffa6bc(%rip)
70d9(3): test %rax,%rax
70dc(2): jnz 0x7(%rip)
70de(3): test %rbx,%rbx
70e1(2): jnz 0x4(%rip)
70e3(1): pop %rbx
70e4(1): ret near (%rsp)
70e5(5): call 0x23b(%rip)

"xnmalloc" :
70f0(3): mov %rdi,%rax
70f3(3): mul %rax,%rsi,%rdx
70f6(3): mov %rax,%rdi
70f9(3): seto %al
70fc(3): test %rdi,%rdi
70ff(2): js 0xc(%rip)
7101(3): movzx %al,%eax
7104(3): test %rax,%rax
7107(2): jnz 0x4(%rip)
7109(2): jmp 0xffffffc7(%rip)
710b(4): sub $0x8,%rsp
710f(5): call 0x211(%rip)

"xrealloc" :
7130(3): test %rsi,%rsi
7133(1): push %rbx
7134(3): mov %rsi,%rbx
7137(2): jnz 0x7(%rip)
7139(3): test %rdi,%rdi
713c(2): jnz 0x1c(%rip)
713e(3): mov %rbx,%rsi
7141(5): call 0xffffa69f(%rip)
7146(3): test %rax,%rax
7149(2): jnz 0x7(%rip)
714b(3): test %rbx,%rbx
714e(2): jnz 0x13(%rip)
7150(1): pop %rbx
7151(1): ret near (%rsp)
7152(6): nop 0x0(%rax,%rax,1)
7158(5): call 0xffffa458(%rip)
715d(2): xor %eax,%eax
715f(1): pop %rbx
7160(1): ret near (%rsp)
7161(5): call 0x1bf(%rip)

"xnrealloc" :
7170(3): mov %rsi,%rax
7173(3): mul %rax,%rdx,%rdx
7176(3): mov %rax,%rsi
7179(3): seto %al
717c(3): test %rsi,%rsi
717f(2): js 0xc(%rip)
7181(3): movzx %al,%eax
7184(3): test %rax,%rax
7187(2): jnz 0x4(%rip)
7189(2): jmp 0xffffffa7(%rip)
718b(4): sub $0x8,%rsp
718f(5): call 0x191(%rip)

"x2nrealloc" :
71a0(3): test %rdi,%rdi
71a3(3): mov %rdx,%r9
71a6(3): mov (%rsi),%rcx
71a9(2): jz 0x37(%rip)
71ab(2): xor %edx,%edx
71ad(a): mov $0x6148914691236517204,%rax
71b7(3): div %r9,%rax
71ba(3): cmp %rcx,%rax
71bd(2): jbe 0x3e(%rip)
71bf(3): mov %rcx,%rax
71c2(3): shr $0x1,%rax
71c5(5): lea 0x1(%rax,%rcx,1),%rcx
71ca(3): mov %rcx,(%rsi)
71cd(4): imul %r9,%rcx
71d1(3): mov %rcx,%rsi
71d4(5): jmp 0xffffff5c(%rip)
71d9(7): nop 0x0(%rax)
71e0(3): test %rcx,%rcx
71e3(2): jz 0x25(%rip)
71e5(3): mov %rcx,%rax
71e8(3): mul %rax,%r9,%rdx
71eb(3): seto %dl
71ee(3): test %rax,%rax
71f1(3): movzx %dl,%edx
71f4(2): js 0x7(%rip)
71f6(3): test %rdx,%rdx
71f9(2): jz 0xffffffd1(%rip)
71fb(4): sub $0x8,%rsp
71ff(5): call 0x121(%rip)
7204(4): nop 0x0(%rax)
7208(2): xor %edx,%edx
720a(5): mov $0x80,%eax
720f(3): xor %r8d,%r8d
7212(3): div %r9,%rax
7215(3): test %rax,%rax
7218(4): setz %r8b
721c(4): lea 0x0(%r8,%rax,1),%rcx
7220(2): jmp 0xffffffc5(%rip)

"x2realloc" :
7230(3): test %rdi,%rdi
7233(3): mov (%rsi),%rax
7236(2): jz 0x2a(%rip)
7238(a): mov $0x6148914691236517203,%rdx
7242(3): cmp %rdx,%rax
7245(2): jnbe 0x2c(%rip)
7247(3): mov %rax,%rdx
724a(3): shr $0x1,%rdx
724d(5): lea 0x1(%rdx,%rax,1),%rax
7252(3): mov %rax,(%rsi)
7255(3): mov %rax,%rsi
7258(5): jmp 0xfffffed8(%rip)
725d(3): nop (%rax)
7260(3): test %rax,%rax
7263(5): mov $0x80,%edx
7268(4): cmove %rdx,%rax
726c(3): test %rax,%rax
726f(2): jns 0xffffffe3(%rip)
7271(4): sub $0x8,%rsp
7275(5): call 0xab(%rip)

"xzalloc" :
7280(1): push %rbx
7281(3): mov %rdi,%rbx
7284(5): call 0xfffffe4c(%rip)
7289(3): mov %rbx,%rdx
728c(2): xor %esi,%esi
728e(3): mov %rax,%rdi
7291(1): pop %rbx
7292(5): jmp 0xffffa46e(%rip)

"xcalloc" :
72a0(3): mov %rdi,%rax
72a3(4): sub $0x8,%rsp
72a7(3): mul %rax,%rsi,%rdx
72aa(3): seto %dl
72ad(3): test %rax,%rax
72b0(2): js 0x19(%rip)
72b2(3): movzx %dl,%edx
72b5(3): test %rdx,%rdx
72b8(2): jnz 0x11(%rip)
72ba(5): call 0xffffa496(%rip)
72bf(3): test %rax,%rax
72c2(2): jz 0x7(%rip)
72c4(4): add $0x8,%rsp
72c8(1): ret near (%rsp)
72c9(5): call 0x57(%rip)

"xmemdup" :
72d0(1): push %rbp
72d1(1): push %rbx
72d2(3): mov %rdi,%rbp
72d5(3): mov %rsi,%rdi
72d8(3): mov %rsi,%rbx
72db(4): sub $0x8,%rsp
72df(5): call 0xfffffdf1(%rip)
72e4(4): add $0x8,%rsp
72e8(3): mov %rbx,%rdx
72eb(3): mov %rbp,%rsi
72ee(1): pop %rbx
72ef(1): pop %rbp
72f0(3): mov %rax,%rdi
72f3(5): jmp 0xffffa47d(%rip)

"xstrdup" :
7300(1): push %rbx
7301(3): mov %rdi,%rbx
7304(5): call 0xffffa37c(%rip)
7309(3): mov %rbx,%rdi
730c(4): lea 0x1(%rax),%rsi
7310(1): pop %rbx
7311(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
7320(7): lea 0x1ae8(%rip),%rsi
7327(4): sub $0x8,%rsp
732b(5): mov $0x5,%edx
7330(2): xor %edi,%edi
7332(5): call 0xffffa32e(%rip)
7337(6): mov 0x203ce3(%rip),%edi
733d(7): lea 0x11f1(%rip),%rdx
7344(3): mov %rax,%rcx
7347(2): xor %esi,%esi
7349(2): xor %eax,%eax
734b(5): call 0xffffa4e5(%rip)
7350(5): call 0xffffa270(%rip)

"rpl_fclose" :
7360(2): push %r12
7362(1): push %rbp
7363(1): push %rbx
7364(3): mov %rdi,%rbx
7367(5): call 0xffffa419(%rip)
736c(2): test %eax,%eax
736e(3): mov %rbx,%rdi
7371(2): js 0x56(%rip)
7373(5): call 0xffffa44d(%rip)
7378(2): test %eax,%eax
737a(2): jnz 0x2e(%rip)
737c(3): mov %rbx,%rdi
737f(5): call 0x2e1(%rip)
7384(2): test %eax,%eax
7386(2): jz 0x3e(%rip)
7388(5): call 0xffffa248(%rip)
738d(3): mov (%rax),%r12d
7390(3): mov %rbx,%rdi
7393(3): mov %rax,%rbp
7396(5): call 0xffffa2aa(%rip)
739b(3): test %r12d,%r12d
739e(2): jnz 0x32(%rip)
73a0(1): pop %rbx
73a1(1): pop %rbp
73a2(2): pop %r12
73a4(1): ret near (%rsp)
73a5(3): nop (%rax)
73a8(3): mov %rbx,%rdi
73ab(5): call 0xffffa3d5(%rip)
73b0(2): xor %esi,%esi
73b2(5): mov $0x1,%edx
73b7(2): mov %eax,%edi
73b9(5): call 0xffffa337(%rip)
73be(4): cmp $0xffffffff,%rax
73c2(2): jnz 0xffffffba(%rip)
73c4(3): mov %rbx,%rdi
73c7(1): pop %rbx
73c8(1): pop %rbp
73c9(2): pop %r12
73cb(5): jmp 0xffffa275(%rip)
73d0(4): mov %r12d,0x0(%rbp)
73d4(5): mov $0xffffffff,%eax
73d9(2): jmp 0xffffffc7(%rip)

"rpl_fcntl" :
73e0(2): push %r12
73e2(1): push %rbp
73e3(2): mov %edi,%ebp
73e5(1): push %rbx
73e6(4): sub $0x50,%rsp
73ea(9): mov $0x28,%rax
73f3(5): mov %rax,0x18(%rsp)
73f8(2): xor %eax,%eax
73fa(5): lea 0x70(%rsp),%rax
73ff(2): test %esi,%esi
7401(5): mov %rdx,0x30(%rsp)
7406(5): mov %rcx,0x38(%rsp)
740b(5): mov %r8,0x40(%rsp)
7410(5): mov %rax,0x8(%rsp)
7415(5): lea 0x20(%rsp),%rax
741a(5): mov %r9,0x48(%rsp)
741f(7): mov $0x10,(%rsp)
7426(5): mov %rax,0x10(%rsp)
742b(6): jz 0x207(%rip)
7431(6): cmp $0x406,%esi
7437(2): jnz 0x49(%rip)
7439(5): mov 0x10(%rsp),%rax
743e(7): cmp $0x0,0x203e33(%rip)
7445(7): mov $0x18,(%rsp)
744c(4): mov 0x10(%rax),%r12d
7450(3): mov %r12d,%edx
7453(6): js 0x130(%rip)
7459(2): xor %eax,%eax
745b(5): mov $0x406,%esi
7460(5): call 0xffffa1b0(%rip)
7465(2): test %eax,%eax
7467(2): mov %eax,%ebx
7469(6): js 0x18f(%rip)
746f(a): mov $0x1,0x203dff(%rip)
7479(2): jmp 0x47(%rip)
747b(5): nop 0x0(%rax,%rax,1)
7480(3): cmp $0xb,%esi
7483(2): jz 0x2d(%rip)
7485(2): jnle 0x5b(%rip)
7487(3): cmp $0x4,%esi
748a(6): jz 0xd6(%rip)
7490(6): jnle 0xc0(%rip)
7496(3): cmp $0x2,%esi
7499(6): jz 0xc7(%rip)
749f(2): jnle 0x11(%rip)
74a1(3): cmp $0x1,%esi
74a4(2): jnz 0x64(%rip)
74a6(a): nop 0x0(%rax,%rax,1)
74b0(2): mov %ebp,%edi
74b2(2): xor %eax,%eax
74b4(5): call 0xffffa15c(%rip)
74b9(2): mov %eax,%ebx
74bb(5): nop 0x0(%rax,%rax,1)
74c0(5): mov 0x18(%rsp),%rcx
74c5(9): xor $0x28,%rcx
74ce(2): mov %ebx,%eax
74d0(6): jnz 0x15d(%rip)
74d6(4): add $0x50,%rsp
74da(1): pop %rbx
74db(1): pop %rbp
74dc(2): pop %r12
74de(1): ret near (%rsp)
74df(1): nop 
74e0(6): cmp $0x407,%esi
74e6(2): jnle 0x4a(%rip)
74e8(6): cmp $0x406,%esi
74ee(2): jnl 0x72(%rip)
74f0(6): cmp $0x401,%esi
74f6(2): jz 0xffffffba(%rip)
74f8(6): cmp $0x402,%esi
74fe(2): jz 0x62(%rip)
7500(6): cmp $0x400,%esi
7506(2): jz 0x5a(%rip)
7508(3): mov (%rsp),%eax
750b(3): cmp $0x2f,%eax
750e(6): jnbe 0x13c(%rip)
7514(5): add 0x10(%rsp),%rax
7519(3): mov (%rax),%rdx
751c(2): mov %ebp,%edi
751e(2): xor %eax,%eax
7520(5): call 0xffffa0f0(%rip)
7525(2): mov %eax,%ebx
7527(2): jmp 0xffffff99(%rip)
7529(7): nop 0x0(%rax)
7530(6): cmp $0x409,%esi
7536(2): jz 0x2a(%rip)
7538(6): jl 0xffffff78(%rip)
753e(6): cmp $0x40a,%esi
7544(2): jnz 0xffffffc4(%rip)
7546(5): jmp 0xffffff6a(%rip)
754b(5): nop 0x0(%rax,%rax,1)
7550(3): cmp $0x9,%esi
7553(6): jz 0xffffff5d(%rip)
7559(2): jnle 0x7(%rip)
755b(3): cmp $0x8,%esi
755e(2): jnz 0xffffffaa(%rip)
7560(3): mov (%rsp),%eax
7563(3): cmp $0x2f,%eax
7566(6): jnbe 0xee(%rip)
756c(5): add 0x10(%rsp),%rax
7571(2): mov (%rax),%edx
7573(2): mov %ebp,%edi
7575(2): xor %eax,%eax
7577(5): call 0xffffa099(%rip)
757c(2): mov %eax,%ebx
757e(5): jmp 0xffffff42(%rip)
7583(2): xor %esi,%esi
7585(2): xor %eax,%eax
7587(5): call 0xffffa089(%rip)
758c(2): test %eax,%eax
758e(2): mov %eax,%ebx
7590(6): js 0xffffff30(%rip)
7596(7): cmp $0xff,0x203cdb(%rip)
759d(6): jnz 0xffffff23(%rip)
75a3(2): xor %eax,%eax
75a5(5): mov $0x1,%esi
75aa(2): mov %ebx,%edi
75ac(5): call 0xffffa064(%rip)
75b1(2): test %eax,%eax
75b3(2): js 0x1e(%rip)
75b5(3): or $0x1,%eax
75b8(5): mov $0x2,%esi
75bd(2): mov %ebx,%edi
75bf(2): mov %eax,%edx
75c1(2): xor %eax,%eax
75c3(5): call 0xffffa04d(%rip)
75c8(3): cmp $0xff,%eax
75cb(6): jnz 0xfffffef5(%rip)
75d1(5): call 0xffff9fff(%rip)
75d6(3): mov (%rax),%r12d
75d9(3): mov %rax,%rbp
75dc(2): mov %ebx,%edi
75de(5): call 0xffffa132(%rip)
75e3(5): mov $0xffffffff,%ebx
75e8(4): mov %r12d,0x0(%rbp)
75ec(5): jmp 0xfffffed4(%rip)
75f1(7): nop 0x0(%rax)
75f8(5): call 0xffff9fd8(%rip)
75fd(3): cmp $0x16,(%rax)
7600(6): jnz 0xfffffe6f(%rip)
7606(2): xor %esi,%esi
7608(2): xor %eax,%eax
760a(3): mov %r12d,%edx
760d(2): mov %ebp,%edi
760f(5): call 0xffffa001(%rip)
7614(2): test %eax,%eax
7616(2): mov %eax,%ebx
7618(6): js 0xfffffea8(%rip)
761e(a): mov $0xffffffff,0x203c50(%rip)
7628(5): jmp 0xffffff7b(%rip)
762d(5): call 0xffffa063(%rip)
7632(5): mov 0x10(%rsp),%rax
7637(2): xor %esi,%esi
7639(3): mov 0x10(%rax),%edx
763c(2): xor %eax,%eax
763e(5): call 0xffff9fd2(%rip)
7643(2): mov %eax,%ebx
7645(5): jmp 0xfffffe7b(%rip)
764a(5): mov 0x8(%rsp),%rax
764f(5): jmp 0xfffffeca(%rip)
7654(5): mov 0x8(%rsp),%rax
7659(5): jmp 0xffffff18(%rip)

"rpl_fflush" :
7660(3): test %rdi,%rdi
7663(1): push %rbx
7664(3): mov %rdi,%rbx
7667(2): jz 0x13(%rip)
7669(5): call 0xffffa157(%rip)
766e(2): test %eax,%eax
7670(2): jz 0xa(%rip)
7672(6): test $0x100,(%rbx)
7678(2): jnz 0x10(%rip)
767a(3): mov %rbx,%rdi
767d(1): pop %rbx
767e(5): jmp 0xffffa122(%rip)
7683(5): nop 0x0(%rax,%rax,1)
7688(3): mov %rbx,%rdi
768b(5): mov $0x1,%edx
7690(2): xor %esi,%esi
7692(5): call 0xe(%rip)
7697(3): mov %rbx,%rdi
769a(1): pop %rbx
769b(5): jmp 0xffffa105(%rip)

"rpl_fseeko" :
76a0(4): mov 0x8(%rdi),%rax
76a4(4): cmp %rax,0x10(%rdi)
76a8(2): jz 0x8(%rip)
76aa(5): jmp 0xffffa196(%rip)
76af(1): nop 
76b0(4): mov 0x20(%rdi),%rax
76b4(4): cmp %rax,0x28(%rdi)
76b8(2): jnz 0xfffffff2(%rip)
76ba(5): cmp $0x0,0x48(%rdi)
76bf(2): jnz 0xffffffeb(%rip)
76c1(2): push %r12
76c3(1): push %rbp
76c4(3): mov %edx,%r12d
76c7(1): push %rbx
76c8(3): mov %rsi,%rbp
76cb(3): mov %rdi,%rbx
76ce(5): call 0xffffa0b2(%rip)
76d3(3): mov %r12d,%edx
76d6(3): mov %rbp,%rsi
76d9(2): mov %eax,%edi
76db(5): call 0xffffa015(%rip)
76e0(4): cmp $0xffffffff,%rax
76e4(2): jz 0xe(%rip)
76e6(3): and $0xef,(%rbx)
76e9(7): mov %rax,0x90(%rbx)
76f0(2): xor %eax,%eax
76f2(1): pop %rbx
76f3(1): pop %rbp
76f4(2): pop %r12
76f6(1): ret near (%rsp)

"rpl_mbrtowc" :
7700(2): push %r13
7702(2): push %r12
7704(3): mov %rsi,%r13
7707(1): push %rbp
7708(1): push %rbx
7709(3): mov %rdi,%rbx
770c(3): mov %rdx,%r12
770f(4): sub $0x18,%rsp
7713(9): mov $0x28,%rax
771c(5): mov %rax,0x8(%rsp)
7721(2): xor %eax,%eax
7723(5): lea 0x4(%rsp),%rax
7728(3): test %rdi,%rdi
772b(4): cmove %rax,%rbx
772f(3): mov %rbx,%rdi
7732(5): call 0xffff9f7e(%rip)
7737(4): cmp $0xfffffffd,%rax
773b(3): mov %rax,%rbp
773e(2): jbe 0x22(%rip)
7740(3): test %r12,%r12
7743(2): jz 0x1d(%rip)
7745(2): xor %edi,%edi
7747(5): call 0xc9(%rip)
774c(2): test %al,%al
774e(2): jnz 0x12(%rip)
7750(5): movzx 0x0(%r13),%eax
7755(5): mov $0x1,%ebp
775a(2): mov %eax,(%rbx)
775c(4): nop 0x0(%rax)
7760(5): mov 0x8(%rsp),%rdx
7765(9): xor $0x28,%rdx
776e(3): mov %rbp,%rax
7771(2): jnz 0xd(%rip)
7773(4): add $0x18,%rsp
7777(1): pop %rbx
7778(1): pop %rbp
7779(2): pop %r12
777b(2): pop %r13
777d(1): ret near (%rsp)
777e(5): call 0xffff9f12(%rip)

"close_stream" :
7790(2): push %r12
7792(1): push %rbp
7793(3): mov %rdi,%rbp
7796(1): push %rbx
7797(5): call 0xffff9e69(%rip)
779c(3): mov 0x0(%rbp),%ebx
779f(3): mov %rbp,%rdi
77a2(3): mov %rax,%r12
77a5(5): call 0xfffffbbb(%rip)
77aa(3): and $0x20,%ebx
77ad(2): test %ebx,%ebx
77af(2): jnz 0x19(%rip)
77b1(2): test %eax,%eax
77b3(2): jz 0xc(%rip)
77b5(3): test %r12,%r12
77b8(5): mov $0xffffffff,%eax
77bd(2): jz 0x3b(%rip)
77bf(1): pop %rbx
77c0(1): pop %rbp
77c1(2): pop %r12
77c3(1): ret near (%rsp)
77c4(4): nop 0x0(%rax)
77c8(2): test %eax,%eax
77ca(2): jnz 0x1e(%rip)
77cc(5): call 0xffff9e04(%rip)
77d1(6): mov $0x0,(%rax)
77d7(5): mov $0xffffffff,%eax
77dc(1): pop %rbx
77dd(1): pop %rbp
77de(2): pop %r12
77e0(1): ret near (%rsp)
77e1(7): nop 0x0(%rax)
77e8(1): pop %rbx
77e9(5): mov $0xffffffff,%eax
77ee(1): pop %rbp
77ef(2): pop %r12
77f1(1): ret near (%rsp)
77f2(6): nop 0x0(%rax,%rax,1)
77f8(5): call 0xffff9dd8(%rip)
77fd(3): cmp $0x9,(%rax)
7800(1): pop %rbx
7801(1): pop %rbp
7802(2): pop %r12
7804(3): setnz %al
7807(3): movzx %al,%eax
780a(2): neg %eax
780c(1): ret near (%rsp)

"hard_locale" :
7810(4): sub $0x8,%rsp
7814(2): xor %esi,%esi
7816(5): call 0xffff9fea(%rip)
781b(3): mov %rax,%rdx
781e(5): mov $0x1,%eax
7823(3): test %rdx,%rdx
7826(2): jz 0x1f(%rip)
7828(7): lea 0x15f1(%rip),%rdi
782f(5): mov $0x2,%ecx
7834(3): mov %rdx,%rsi
7837(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
7839(3): setnbe %cl
783c(3): sbb $0x0,%cl
783f(2): xor %eax,%eax
7841(2): test %cl,%cl
7843(2): jnz 0xd(%rip)
7845(4): add $0x8,%rsp
7849(1): ret near (%rsp)
784a(6): nop 0x0(%rax,%rax,1)
7850(7): lea 0x15cb(%rip),%rdi
7857(5): mov $0x6,%ecx
785c(3): mov %rdx,%rsi
785f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
7861(3): setnbe %al
7864(2): sbb $0x0,%al
7866(2): test %al,%al
7868(3): setnz %al
786b(4): add $0x8,%rsp
786f(1): ret near (%rsp)

"locale_charset" :
7870(4): sub $0x8,%rsp
7874(5): mov $0xe,%edi
7879(5): call 0xffff9f37(%rip)
787e(3): test %rax,%rax
7881(2): jz 0x1f(%rip)
7883(3): cmp $0x0,(%rax)
7886(7): lea 0x159b(%rip),%rdx
788d(4): cmove %rdx,%rax
7891(4): add $0x8,%rsp
7895(1): ret near (%rsp)
7896(a): nop 0x0(%rax,%rax,1)
78a0(7): lea 0x1581(%rip),%rax
78a7(4): add $0x8,%rsp
78ab(1): ret near (%rsp)

"__libc_csu_init" :
78b0(2): push %r15
78b2(2): push %r14
78b4(3): mov %rdx,%r15
78b7(2): push %r13
78b9(2): push %r12
78bb(7): lea 0x20314e(%rip),%r12
78c2(1): push %rbp
78c3(7): lea 0x20314e(%rip),%rbp
78ca(1): push %rbx
78cb(3): mov %edi,%r13d
78ce(3): mov %rsi,%r14
78d1(3): sub %r12,%rbp
78d4(4): sub $0x8,%rsp
78d8(4): sar $0x3,%rbp
78dc(5): call 0xffff9ca4(%rip)
78e1(3): test %rbp,%rbp
78e4(2): jz 0x22(%rip)
78e6(2): xor %ebx,%ebx
78e8(8): nop 0x0(%rax,%rax,1)
78f0(3): mov %r15,%rdx
78f3(3): mov %r14,%rsi
78f6(3): mov %r13d,%edi
78f9(4): call 0x0(%r12,%rbx,8)
78fd(4): add $0x1,%rbx
7901(3): cmp %rbx,%rbp
7904(2): jnz 0xffffffec(%rip)
7906(4): add $0x8,%rsp
790a(1): pop %rbx
790b(1): pop %rbp
790c(2): pop %r12
790e(2): pop %r13
7910(2): pop %r14
7912(2): pop %r15
7914(1): ret near (%rsp)

"atexit" :
7930(7): mov 0x2036d1(%rip),%rdx
7937(2): xor %esi,%esi
7939(5): jmp 0xffff9f37(%rip)

"_fini" :
7940(4): sub $0x8,%rsp
7944(4): add $0x8,%rsp
7948(1): ret near (%rsp)

