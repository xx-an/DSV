0x1220: sub rsp,0x8
0x1224: mov rax,qword ptr [rip+0x205db5]
0x122b: test rax,rax
0x122e: jz 0x1232
0x1230: call rax
0x1232: add rsp,0x8
0x1236: ret
0x1250: jmp qword ptr [rip+0x205c2a]
0x1256: push 0x0
0x1266: push 0x1
0x1276: push 0x2
0x1286: push 0x3
0x1290: jmp qword ptr [rip+0x205c0a]
0x1296: push 0x4
0x12a0: jmp qword ptr [rip+0x205c02]
0x12a6: push 0x5
0x12b6: push 0x6
0x12c6: push 0x7
0x12d6: push 0x8
0x12e0: jmp qword ptr [rip+0x205be2]
0x12e6: push 0x9
0x12f6: push 0xa
0x1306: push 0xb
0x1316: push 0xc
0x1326: push 0xd
0x1330: jmp qword ptr [rip+0x205bba]
0x1336: push 0xe
0x1346: push 0xf
0x1356: push 0x10
0x1366: push 0x11
0x1370: jmp qword ptr [rip+0x205b9a]
0x1376: push 0x12
0x1386: push 0x13
0x1396: push 0x14
0x13a6: push 0x15
0x13b0: jmp qword ptr [rip+0x205b7a]
0x13b6: push 0x16
0x13c0: jmp qword ptr [rip+0x205b72]
0x13c6: push 0x17
0x13d0: jmp qword ptr [rip+0x205b6a]
0x13d6: push 0x18
0x13e0: jmp qword ptr [rip+0x205b62]
0x13e6: push 0x19
0x13f0: jmp qword ptr [rip+0x205b5a]
0x13f6: push 0x1a
0x1406: push 0x1b
0x1410: jmp qword ptr [rip+0x205b4a]
0x1416: push 0x1c
0x1426: push 0x1d
0x1436: push 0x1e
0x1446: push 0x1f
0x1456: push 0x20
0x1466: push 0x21
0x1470: jmp qword ptr [rip+0x205b1a]
0x1476: push 0x22
0x1486: push 0x23
0x1496: push 0x24
0x14a6: push 0x25
0x14b6: push 0x26
0x14c6: push 0x27
0x14d6: push 0x28
0x14e6: push 0x29
0x14f0: jmp qword ptr [rip+0x205afa]
0x14f6: nop 
0x15a2: nop qword ptr [rax+rax*1+0x0]
0x15dc: nop qword ptr [rax+0x0]
0x1660: lea rsi,[rip+0x2f9f]
0x1667: mov rbx,rax
0x166a: xor edi,edi
0x166c: mov edx,0x5
0x1671: call 0x1300
0x1676: mov rcx,rbx
0x1679: mov rdx,rax
0x167c: xor esi,esi
0x167e: xor edi,edi
0x1680: xor eax,eax
0x1682: call 0x1460
0x1687: jmp 0x1598
0x16ba: hlt 
0x16c0: lea rdi,[rip+0x2059b9]
0x16c7: push rbp
0x16c8: lea rax,[rip+0x2059b1]
0x16cf: cmp rax,rdi
0x16d2: mov rbp,rsp
0x16d5: jz 0x16f0
0x16d7: mov rax,qword ptr [rip+0x2058f2]
0x16de: test rax,rax
0x16e1: jz 0x16f0
0x16e3: pop rbp
0x16e4: jmp rax
0x16e6: nop qword ptr [rax+rax*1+0x0]
0x16f0: pop rbp
0x16f1: ret
0x1700: lea rdi,[rip+0x205979]
0x1707: lea rsi,[rip+0x205972]
0x170e: push rbp
0x170f: sub rsi,rdi
0x1712: mov rbp,rsp
0x1715: sar rsi,0x3
0x1719: mov rax,rsi
0x171c: shr rax,0x3f
0x1720: add rsi,rax
0x1723: sar rsi,0x1
0x1726: jz 0x1740
0x1728: mov rax,qword ptr [rip+0x2058b9]
0x172f: test rax,rax
0x1732: jz 0x1740
0x1734: pop rbp
0x1735: jmp rax
0x1737: nop qword ptr [rax+rax*1+0x0]
0x1740: pop rbp
0x1741: ret
0x1750: cmp [rip+0x205951],0x0
0x1757: jnz 0x1788
0x1759: cmp [rip+0x20588f],0x0
0x1761: push rbp
0x1762: mov rbp,rsp
0x1765: jz 0x1773
0x1767: mov rdi,qword ptr [rip+0x20589a]
0x176e: call 0x14f0
0x1773: call 0x16c0
0x1778: mov [rip+0x205929],0x1
0x177f: pop rbp
0x1780: ret
0x1781: nop qword ptr [rax+0x0]
0x1788: rep ret
0x1790: push rbp
0x1791: mov rbp,rsp
0x1794: pop rbp
0x1795: jmp 0x1700
0x1af0: mov qword ptr [rip+0x2055c1],rdi
0x1af7: ret
0x1b00: mov byte ptr [rip+0x2055a9],dil
0x1b07: ret
0x1b10: push rbp
0x1b11: push rbx
0x1b12: sub rsp,0x8
0x1b16: mov rdi,qword ptr [rip+0x20556b]
0x1b1d: call 0x4230
0x1b22: test eax,eax
0x1b24: jz 0x1b3c
0x1b26: call 0x1270
0x1b2b: cmp [rip+0x20557e],0x0
0x1b32: mov rbx,rax
0x1b35: jz 0x1b53
0x1b37: cmp [rax],0x20
0x1b3a: jnz 0x1b53
0x1b3c: mov rdi,qword ptr [rip+0x20555d]
0x1b43: call 0x4230
0x1b48: test eax,eax
0x1b4a: jnz 0x1b92
0x1b4c: add rsp,0x8
0x1b50: pop rbx
0x1b51: pop rbp
0x1b52: ret
0x1b53: lea rsi,[rip+0x2ca6]
0x1b5a: xor edi,edi
0x1b5c: mov edx,0x5
0x1b61: call 0x1300
0x1b66: mov rdi,qword ptr [rip+0x20554b]
0x1b6d: mov rbp,rax
0x1b70: test rdi,rdi
0x1b73: jz 0x1b9d
0x1b75: call 0x36d0
0x1b7a: mov esi,dword ptr [rbx]
0x1b7c: lea rdx,[rip+0x2c89]
0x1b83: mov rcx,rax
0x1b86: mov r8,rbp
0x1b89: xor edi,edi
0x1b8b: xor eax,eax
0x1b8d: call 0x1460
0x1b92: mov edi,dword ptr [rip+0x205480]
0x1b98: call 0x1290
0x1b9d: mov esi,dword ptr [rbx]
0x1b9f: lea rdx,[rip+0x2c6a]
0x1ba6: mov rcx,rax
0x1ba9: xor edi,edi
0x1bab: xor eax,eax
0x1bad: call 0x1460
0x1bb2: jmp 0x1b92
0x1c9c: nop qword ptr [rax+0x0]
0x1ced: nop qword ptr [rax]
0x2007: nop qword ptr [rax+rax*1+0x0]
0x203e: nop 
0x2061: nop qword ptr [rax+0x0]
0x20a2: nop qword ptr [rax+rax*1+0x0]
0x20b4: nop qword ptr [rax+0x0]
0x2158: nop qword ptr [rax+rax*1+0x0]
0x2181: nop qword ptr [rax+0x0]
0x2197: nop qword ptr [rax+rax*1+0x0]
0x21af: nop 
0x21de: nop 
0x21ed: nop qword ptr [rax]
0x21ff: nop 
0x220f: nop 
0x221f: nop 
0x222f: nop 
0x223f: nop 
0x22ac: nop qword ptr [rax+0x0]
0x22cc: nop qword ptr [rax+0x0]
0x22ef: nop 
0x2302: nop qword ptr [rax+rax*1+0x0]
0x231a: nop qword ptr [rax+rax*1+0x0]
0x232a: nop qword ptr [rax+rax*1+0x0]
0x23cb: nop qword ptr [rax+rax*1+0x0]
0x23e5: nop qword ptr [rax]
0x23f8: nop qword ptr [rax+rax*1+0x0]
0x2413: nop qword ptr [rax+rax*1+0x0]
0x2442: nop qword ptr [rax+rax*1+0x0]
0x2452: nop qword ptr [rax+rax*1+0x0]
0x246a: nop qword ptr [rax+rax*1+0x0]
0x247a: nop qword ptr [rax+rax*1+0x0]
0x2488: nop qword ptr [rax+rax*1+0x0]
0x24af: nop 
0x24ed: cmp [rsp+0xe],0x0
0x24f2: jnz 0x2eed
0x24f8: test r13,r13
0x24fb: setz al
0x24fe: cmp [rsp+0x50],0x0
0x2504: setnz dl
0x2507: and al,dl
0x2509: jz 0x2f2c
0x250f: mov r13,qword ptr [rsp+0x50]
0x2549: nop qword ptr [rax+0x0]
0x2592: nop qword ptr [rax+rax*1+0x0]
0x25d1: nop qword ptr [rax+0x0]
0x25f2: nop qword ptr [rax+rax*1+0x0]
0x2758: nop qword ptr [rax+rax*1+0x0]
0x286b: nop qword ptr [rax+rax*1+0x0]
0x288e: nop 
0x2955: nop qword ptr [rax]
0x2a0d: nop qword ptr [rax]
0x2c16: nop qword ptr [rax+rax*1+0x0]
0x2ca9: nop qword ptr [rax+0x0]
0x2dfd: nop qword ptr [rax]
0x2eed: sub rsp,0x8
0x2ef1: mov r8d,0x5
0x2ef7: mov rcx,r11
0x2efa: push qword ptr [rsp+0x68]
0x2efe: push qword ptr [rsp+0x78]
0x2f02: mov rdi,r14
0x2f05: push qword ptr [rsp+0x38]
0x2f09: mov r9d,dword ptr [rsp+0x98]
0x2f11: mov rdx,qword ptr [rsp+0x30]
0x2f16: mov rsi,qword ptr [rsp+0x70]
0x2f1b: call 0x1d50
0x2f20: add rsp,0x20
0x2f24: mov r15,rax
0x2f27: jmp 0x2929
0x2f2c: movzx eax,byte ptr [rsp+0x7c]
0x2f31: jmp 0x2e4c
0x2f43: call 0x1330
0x307c: add rsp,0x20
0x3080: mov r11,qword ptr [rsp+0x10]
0x3085: cmp r11,rax
0x3088: jnbe 0x30f1
0x308a: lea rsi,[rax+0x1]
0x308e: lea rax,[rip+0x20404b]
0x3095: cmp r12,rax
0x3098: mov qword ptr [rbx],rsi
0x309b: jz 0x30af
0x309d: mov rdi,r12
0x30a0: mov qword ptr [rsp+0x10],rsi
0x30a5: call 0x1250
0x30aa: mov rsi,qword ptr [rsp+0x10]
0x30af: mov rdi,rsi
0x30b2: mov qword ptr [rsp+0x10],rsi
0x30b7: call 0x3f10
0x30bc: sub rsp,0x8
0x30c0: mov qword ptr [rbx+0x8],rax
0x30c4: mov r8d,dword ptr [rbp+0x0]
0x30c8: push qword ptr [rbp+0x30]
0x30cb: push qword ptr [rbp+0x28]
0x30ce: mov rcx,r14
0x30d1: push r15
0x30d3: mov r9d,dword ptr [rsp+0x3c]
0x30d8: mov rdi,rax
0x30db: mov rdx,qword ptr [rsp+0x28]
0x30e0: mov rsi,qword ptr [rsp+0x30]
0x30e5: mov r12,rax
0x30e8: call 0x1d50
0x30ed: add rsp,0x20
0x30f1: mov eax,dword ptr [rsp+0x18]
0x30f5: mov dword ptr [r13+0x0],eax
0x30f9: add rsp,0x28
0x30fd: mov rax,r12
0x3100: pop rbx
0x3101: pop rbp
0x3102: pop r12
0x3104: pop r13
0x3106: pop r14
0x3108: pop r15
0x310a: ret
0x310b: nop qword ptr [rax+rax*1+0x0]
0x3131: call 0x1260
0x3136: call 0x4160
0x3140: push r12
0x3142: push rbp
0x3143: push rbx
0x3144: mov rbx,rdi
0x3147: call 0x1270
0x314c: mov r12d,dword ptr [rax]
0x314f: mov rbp,rax
0x3152: lea rax,[rip+0x204087]
0x3159: test rbx,rbx
0x315c: mov esi,0x38
0x3161: cmove rbx,rax
0x3165: mov rdi,rbx
0x3168: call 0x4110
0x316d: mov dword ptr [rbp+0x0],r12d
0x3171: pop rbx
0x3172: pop rbp
0x3173: pop r12
0x3175: ret
0x3180: lea rax,[rip+0x204059]
0x3187: test rdi,rdi
0x318a: cmove rdi,rax
0x318e: mov eax,dword ptr [rdi]
0x3190: ret
0x31a0: lea rax,[rip+0x204039]
0x31a7: test rdi,rdi
0x31aa: cmove rdi,rax
0x31ae: mov dword ptr [rdi],esi
0x31b0: ret
0x31c0: lea rax,[rip+0x204019]
0x31c7: test rdi,rdi
0x31ca: mov ecx,esi
0x31cc: cmove rdi,rax
0x31d0: mov eax,esi
0x31d2: and ecx,0x1f
0x31d5: shr al,0x5
0x31d8: movzx eax,al
0x31db: lea rdi,[rdi+rax*4+0x8]
0x31e0: mov esi,dword ptr [rdi]
0x31e2: mov eax,esi
0x31e4: shr eax,cl
0x31e6: xor edx,eax
0x31e8: and eax,0x1
0x31eb: and edx,0x1
0x31ee: shl edx,cl
0x31f0: xor edx,esi
0x31f2: mov dword ptr [rdi],edx
0x31f4: ret
0x3200: lea rax,[rip+0x203fd9]
0x3207: test rdi,rdi
0x320a: cmove rdi,rax
0x320e: mov eax,dword ptr [rdi+0x4]
0x3211: mov dword ptr [rdi+0x4],esi
0x3214: ret
0x3220: lea rax,[rip+0x203fb9]
0x3227: test rdi,rdi
0x322a: cmove rdi,rax
0x322e: test rsi,rsi
0x3231: mov [rdi],0xa
0x3237: jz 0x3247
0x3239: test rdx,rdx
0x323c: jz 0x3247
0x323e: mov qword ptr [rdi+0x28],rsi
0x3242: mov qword ptr [rdi+0x30],rdx
0x3246: ret
0x3247: sub rsp,0x8
0x324b: call 0x1260
0x3250: push r15
0x3252: push r14
0x3254: lea rax,[rip+0x203f85]
0x325b: push r13
0x325d: push r12
0x325f: mov r13,rdi
0x3262: push rbp
0x3263: push rbx
0x3264: mov rbx,r8
0x3267: mov r14,rsi
0x326a: mov r15,rdx
0x326d: sub rsp,0x18
0x3271: test r8,r8
0x3274: cmove rbx,rax
0x3278: mov qword ptr [rsp+0x8],rcx
0x327d: call 0x1270
0x3282: mov r12d,dword ptr [rax]
0x3285: mov rbp,rax
0x3288: lea rax,[rbx+0x8]
0x328c: sub rsp,0x8
0x3290: mov r9d,dword ptr [rbx+0x4]
0x3294: push qword ptr [rbx+0x30]
0x3297: mov r8d,dword ptr [rbx]
0x329a: push qword ptr [rbx+0x28]
0x329d: mov rdx,r15
0x32a0: push rax
0x32a1: mov rcx,qword ptr [rsp+0x28]
0x32a6: mov rsi,r14
0x32a9: mov rdi,r13
0x32ac: call 0x1d50
0x32b1: mov dword ptr [rbp+0x0],r12d
0x32b5: add rsp,0x38
0x32b9: pop rbx
0x32ba: pop rbp
0x32bb: pop r12
0x32bd: pop r13
0x32bf: pop r14
0x32c1: pop r15
0x32c3: ret
0x32d0: push r15
0x32d2: push r14
0x32d4: lea rax,[rip+0x203f05]
0x32db: push r13
0x32dd: push r12
0x32df: mov r12,rdx
0x32e2: push rbp
0x32e3: push rbx
0x32e4: mov rbx,rcx
0x32e7: mov r14,rdi
0x32ea: mov r15,rsi
0x32ed: sub rsp,0x38
0x32f1: test rcx,rcx
0x32f4: cmove rbx,rax
0x32f8: xor ebp,ebp
0x32fa: call 0x1270
0x32ff: test r12,r12
0x3302: mov r13,rax
0x3305: mov eax,dword ptr [rax]
0x3307: setz bpl
0x330b: or ebp,dword ptr [rbx+0x4]
0x330e: lea r10,[rbx+0x8]
0x3312: sub rsp,0x8
0x3316: mov r8d,dword ptr [rbx]
0x3319: mov rcx,r15
0x331c: mov dword ptr [rsp+0x14],eax
0x3320: push qword ptr [rbx+0x30]
0x3323: mov rdx,r14
0x3326: push qword ptr [rbx+0x28]
0x3329: push r10
0x332b: xor esi,esi
0x332d: mov r9d,ebp
0x3330: xor edi,edi
0x3332: mov qword ptr [rsp+0x40],r10
0x3337: call 0x1d50
0x333c: lea rsi,[rax+0x1]
0x3340: mov qword ptr [rsp+0x48],rax
0x3345: add rsp,0x20
0x3349: mov rdi,rsi
0x334c: mov qword ptr [rsp+0x18],rsi
0x3351: call 0x3f10
0x3356: mov qword ptr [rsp+0x10],rax
0x335b: sub rsp,0x8
0x335f: push qword ptr [rbx+0x30]
0x3362: push qword ptr [rbx+0x28]
0x3365: mov r10,qword ptr [rsp+0x38]
0x336a: mov r9d,ebp
0x336d: mov r8d,dword ptr [rbx]
0x3370: mov rcx,r15
0x3373: mov rdx,r14
0x3376: mov rdi,rax
0x3379: push r10
0x337b: mov rsi,qword ptr [rsp+0x38]
0x3380: call 0x1d50
0x3385: mov eax,dword ptr [rsp+0x2c]
0x3389: add rsp,0x20
0x338d: test r12,r12
0x3390: mov dword ptr [r13+0x0],eax
0x3394: jz 0x339f
0x3396: mov r11,qword ptr [rsp+0x28]
0x339b: mov qword ptr [r12],r11
0x339f: mov rax,qword ptr [rsp+0x10]
0x33a4: add rsp,0x38
0x33a8: pop rbx
0x33a9: pop rbp
0x33aa: pop r12
0x33ac: pop r13
0x33ae: pop r14
0x33b0: pop r15
0x33b2: ret
0x33c0: mov rcx,rdx
0x33c3: xor edx,edx
0x33c5: jmp 0x32d0
0x33d0: mov eax,dword ptr [rip+0x203c82]
0x33d6: push r12
0x33d8: mov r12,qword ptr [rip+0x203c81]
0x33df: push rbp
0x33e0: push rbx
0x33e1: cmp eax,0x1
0x33e4: jle 0x3411
0x33e6: sub eax,0x2
0x33e9: lea rbx,[r12+0x18]
0x33ee: shl rax,0x4
0x33f2: lea rbp,[r12+rax*1+0x28]
0x33f7: nop qword ptr [rax+rax*1+0x0]
0x3400: mov rdi,qword ptr [rbx]
0x3403: add rbx,0x10
0x3407: call 0x1250
0x340c: cmp rbx,rbp
0x340f: jnz 0x3400
0x3411: mov rdi,qword ptr [r12+0x8]
0x3416: lea rbx,[rip+0x203cc3]
0x341d: cmp rdi,rbx
0x3420: jz 0x3439
0x3422: call 0x1250
0x3427: mov [rip+0x203c3e],0x100
0x3432: mov qword ptr [rip+0x203c3f],rbx
0x3439: lea rbx,[rip+0x203c30]
0x3440: cmp r12,rbx
0x3443: jz 0x3454
0x3445: mov rdi,r12
0x3448: call 0x1250
0x344d: mov qword ptr [rip+0x203c0c],rbx
0x3454: pop rbx
0x3455: mov [rip+0x203bf9],0x1
0x345f: pop rbp
0x3460: pop r12
0x3462: ret
0x3470: lea rcx,[rip+0x203d69]
0x3477: mov rdx,0xffffffff
0x347e: jmp 0x2f90
0x3490: lea rcx,[rip+0x203d49]
0x3497: jmp 0x2f90
0x34a0: lea rcx,[rip+0x203d39]
0x34a7: mov rsi,rdi
0x34aa: mov rdx,0xffffffff
0x34b1: xor edi,edi
0x34b3: jmp 0x2f90
0x34c0: lea rcx,[rip+0x203d19]
0x34c7: mov rdx,rsi
0x34ca: mov rsi,rdi
0x34cd: xor edi,edi
0x34cf: jmp 0x2f90
0x34e0: sub rsp,0x48
0x34e4: mov rax,rdx
0x34e7: mov rdx,0x28
0x34f0: mov qword ptr [rsp+0x38],rdx
0x34f5: xor edx,edx
0x34f7: cmp esi,0xa
0x34fa: jz 0x3564
0x34fc: mov dword ptr [rsp],esi
0x34ff: mov rcx,rsp
0x3502: mov rdx,0xffffffff
0x3509: mov rsi,rax
0x350c: mov [rsp+0x4],0x0
0x3515: mov [rsp+0xc],0x0
0x351e: mov [rsp+0x14],0x0
0x3527: mov [rsp+0x1c],0x0
0x3530: mov [rsp+0x24],0x0
0x3539: mov [rsp+0x2c],0x0
0x3542: mov [rsp+0x34],0x0
0x354a: call 0x2f90
0x354f: mov rcx,qword ptr [rsp+0x38]
0x3554: xor rcx,0x28
0x355d: jnz 0x3569
0x355f: add rsp,0x48
0x3563: ret
0x3564: call 0x1260
0x3569: call 0x1330
0x3570: sub rsp,0x48
0x3574: mov rax,rdx
0x3577: mov rdx,rcx
0x357a: mov rcx,0x28
0x3583: mov qword ptr [rsp+0x38],rcx
0x3588: xor ecx,ecx
0x358a: cmp esi,0xa
0x358d: jz 0x35f0
0x358f: mov dword ptr [rsp],esi
0x3592: mov rcx,rsp
0x3595: mov rsi,rax
0x3598: mov [rsp+0x4],0x0
0x35a1: mov [rsp+0xc],0x0
0x35aa: mov [rsp+0x14],0x0
0x35b3: mov [rsp+0x1c],0x0
0x35bc: mov [rsp+0x24],0x0
0x35c5: mov [rsp+0x2c],0x0
0x35ce: mov [rsp+0x34],0x0
0x35d6: call 0x2f90
0x35db: mov rdx,qword ptr [rsp+0x38]
0x35e0: xor rdx,0x28
0x35e9: jnz 0x35f5
0x35eb: add rsp,0x48
0x35ef: ret
0x35f0: call 0x1260
0x35f5: call 0x1330
0x3600: mov rdx,rsi
0x3603: mov esi,edi
0x3605: xor edi,edi
0x3607: jmp 0x34e0
0x3610: mov rcx,rdx
0x3613: mov rdx,rsi
0x3616: mov esi,edi
0x3618: xor edi,edi
0x361a: jmp 0x3570
0x3620: sub rsp,0x48
0x3624: mov ecx,edx
0x3626: mov rax,0x28
0x362f: mov qword ptr [rsp+0x38],rax
0x3634: xor eax,eax
0x3636: mov rax,qword ptr [rip+0x203bd3]
0x363d: mov r8,rsp
0x3640: and ecx,0x1f
0x3643: movdqa xmm0,[rip+0x203b95]
0x364b: mov qword ptr [rsp+0x30],rax
0x3650: mov eax,edx
0x3652: movaps [rsp],xmm0
0x3656: shr al,0x5
0x3659: movzx eax,al
0x365c: lea r9,[r8+rax*4+0x8]
0x3661: movdqa xmm0,[rip+0x203b87]
0x3669: movaps [rsp+0x10],xmm0
0x366e: movdqa xmm0,[rip+0x203b8a]
0x3676: movaps [rsp+0x20],xmm0
0x367b: mov edx,dword ptr [r9]
0x367e: mov eax,edx
0x3680: shr eax,cl
0x3682: not eax
0x3684: and eax,0x1
0x3687: shl eax,cl
0x3689: mov rcx,r8
0x368c: xor eax,edx
0x368e: mov rdx,rsi
0x3691: mov rsi,rdi
0x3694: mov dword ptr [r9],eax
0x3697: xor edi,edi
0x3699: call 0x2f90
0x369e: mov rsi,qword ptr [rsp+0x38]
0x36a3: xor rsi,0x28
0x36ac: jnz 0x36b3
0x36ae: add rsp,0x48
0x36b2: ret
0x36b3: call 0x1330
0x36c0: movsx edx,sil
0x36c4: mov rsi,0xffffffff
0x36cb: jmp 0x3620
0x36d0: mov edx,0x3a
0x36d5: mov rsi,0xffffffff
0x36dc: jmp 0x3620
0x36f0: mov edx,0x3a
0x36f5: jmp 0x3620
0x3700: sub rsp,0x48
0x3704: mov rax,rdx
0x3707: mov rdx,0x28
0x3710: mov qword ptr [rsp+0x38],rdx
0x3715: xor edx,edx
0x3717: cmp esi,0xa
0x371a: jz 0x3784
0x371c: mov dword ptr [rsp],esi
0x371f: mov rcx,rsp
0x3722: mov rdx,0xffffffff
0x3729: mov rsi,rax
0x372c: mov [rsp+0x4],0x0
0x3735: mov [rsp+0xc],0x4000000
0x373e: mov [rsp+0x14],0x0
0x3747: mov [rsp+0x1c],0x0
0x3750: mov [rsp+0x24],0x0
0x3759: mov [rsp+0x2c],0x0
0x3762: mov [rsp+0x34],0x0
0x376a: call 0x2f90
0x376f: mov rcx,qword ptr [rsp+0x38]
0x3774: xor rcx,0x28
0x377d: jnz 0x3789
0x377f: add rsp,0x48
0x3783: ret
0x3784: call 0x1260
0x3789: call 0x1330
0x3790: sub rsp,0x48
0x3794: mov r9,rcx
0x3797: mov rcx,qword ptr [rip+0x203a72]
0x379e: movdqa xmm0,[rip+0x203a3a]
0x37a6: mov rax,0x28
0x37af: mov qword ptr [rsp+0x38],rax
0x37b4: xor eax,eax
0x37b6: movaps [rsp],xmm0
0x37ba: test rsi,rsi
0x37bd: mov qword ptr [rsp+0x30],rcx
0x37c2: mov [rsp],0xa
0x37c9: movdqa xmm0,[rip+0x203a1f]
0x37d1: movaps [rsp+0x10],xmm0
0x37d6: movdqa xmm0,[rip+0x203a22]
0x37de: movaps [rsp+0x20],xmm0
0x37e3: jz 0x3817
0x37e5: test rdx,rdx
0x37e8: jz 0x3817
0x37ea: mov qword ptr [rsp+0x28],rsi
0x37ef: mov qword ptr [rsp+0x30],rdx
0x37f4: mov rcx,rsp
0x37f7: mov rdx,r8
0x37fa: mov rsi,r9
0x37fd: call 0x2f90
0x3802: mov rdi,qword ptr [rsp+0x38]
0x3807: xor rdi,0x28
0x3810: jnz 0x381c
0x3812: add rsp,0x48
0x3816: ret
0x3817: call 0x1260
0x381c: call 0x1330
0x3830: mov r8,0xffffffff
0x3837: jmp 0x3790
0x3840: mov rcx,rdx
0x3843: mov r8,0xffffffff
0x384a: mov rdx,rsi
0x384d: mov rsi,rdi
0x3850: xor edi,edi
0x3852: jmp 0x3790
0x3860: mov r8,rcx
0x3863: mov rcx,rdx
0x3866: mov rdx,rsi
0x3869: mov rsi,rdi
0x386c: xor edi,edi
0x386e: jmp 0x3790
0x3880: lea rcx,[rip+0x203799]
0x3887: jmp 0x2f90
0x3890: lea rcx,[rip+0x203789]
0x3897: mov rdx,rsi
0x389a: mov rsi,rdi
0x389d: xor edi,edi
0x389f: jmp 0x2f90
0x38b0: lea rcx,[rip+0x203769]
0x38b7: mov rdx,0xffffffff
0x38be: jmp 0x2f90
0x3996: nop qword ptr [rax+rax*1+0x0]
0x3a25: nop qword ptr [rax]
0x3a28: mov r8,rcx
0x3a2b: mov rcx,rdx
0x3a2e: lea rdx,[rip+0x12ff]
0x3a35: mov esi,0x1
0x3a3a: xor eax,eax
0x3a3c: call 0x14b0
0x3a41: jmp 0x392c
0x3a46: nop qword ptr [rax+rax*1+0x0]
0x3aa5: nop qword ptr [rax]
0x3ae1: nop qword ptr [rax+0x0]
0x3b28: nop qword ptr [rax+rax*1+0x0]
0x3b77: nop qword ptr [rax+rax*1+0x0]
0x3bd4: nop qword ptr [rax+0x0]
0x3c02: nop qword ptr [rax+rax*1+0x0]
0x3cb6: nop qword ptr [rax+rax*1+0x0]
0x3d10: xor r9d,r9d
0x3d13: cmp [r8],0x0
0x3d17: jz 0x3d2b
0x3d19: nop qword ptr [rax+0x0]
0x3d20: add r9,0x1
0x3d24: cmp [r8+r9*8+0x0],0x0
0x3d29: jnz 0x3d20
0x3d2b: jmp 0x38f0
0x3d30: sub rsp,0x68
0x3d34: mov r10,r8
0x3d37: xor r9d,r9d
0x3d3a: mov rax,0x28
0x3d43: mov qword ptr [rsp+0x58],rax
0x3d48: xor eax,eax
0x3d4a: mov r8,rsp
0x3d4d: nop qword ptr [rax]
0x3d50: mov eax,dword ptr [r10]
0x3d53: cmp eax,0x2f
0x3d56: jnbe 0x3d9a
0x3d58: mov r11d,eax
0x3d5b: add r11,qword ptr [r10+0x10]
0x3d5f: add eax,0x8
0x3d62: mov dword ptr [r10],eax
0x3d65: mov rax,qword ptr [r11]
0x3d68: test rax,rax
0x3d6b: mov qword ptr [r8+r9*8+0x0],rax
0x3d6f: jz 0x3d7b
0x3d71: add r9,0x1
0x3d75: cmp r9,0xa
0x3d79: jnz 0x3d50
0x3d7b: call 0x38f0
0x3d80: mov rax,qword ptr [rsp+0x58]
0x3d85: xor rax,0x28
0x3d8e: jnz 0x3d95
0x3d90: add rsp,0x68
0x3d94: ret
0x3d95: call 0x1330
0x3d9a: mov r11,qword ptr [r10+0x8]
0x3d9e: lea rax,[r11+0x8]
0x3da2: mov qword ptr [r10+0x8],rax
0x3da6: jmp 0x3d65
0x3e70: call 0x1330
0x3e7c: mov rax,rbx
0x3e7f: add rbx,0x8
0x3e83: jmp 0x3e36
0x3e90: push rbx
0x3e91: lea rsi,[rip+0xeea]
0x3e98: mov edx,0x5
0x3e9d: xor edi,edi
0x3e9f: call 0x1300
0x3ea4: lea rdx,[rip+0xeec]
0x3eab: mov rsi,rax
0x3eae: mov edi,0x1
0x3eb3: xor eax,eax
0x3eb5: call 0x1450
0x3eba: lea rsi,[rip+0xeec]
0x3ec1: mov edx,0x5
0x3ec6: xor edi,edi
0x3ec8: call 0x1300
0x3ecd: lea rcx,[rip+0x884]
0x3ed4: lea rdx,[rip+0x6d6]
0x3edb: mov rsi,rax
0x3ede: mov edi,0x1
0x3ee3: xor eax,eax
0x3ee5: call 0x1450
0x3eea: mov rbx,qword ptr [rip+0x203197]
0x3ef1: lea rsi,[rip+0x10e8]
0x3ef8: xor edi,edi
0x3efa: mov edx,0x5
0x3eff: call 0x1300
0x3f04: mov rsi,rbx
0x3f07: mov rdi,rax
0x3f0a: pop rbx
0x3f0b: jmp 0x13a0
0x3f10: push rbx
0x3f11: mov rbx,rdi
0x3f14: call 0x13e0
0x3f19: test rax,rax
0x3f1c: jnz 0x3f23
0x3f1e: test rbx,rbx
0x3f21: jnz 0x3f25
0x3f23: pop rbx
0x3f24: ret
0x3f25: call 0x4160
0x3f30: mov rax,rdi
0x3f33: mul rsi
0x3f36: mov rdi,rax
0x3f39: seto al
0x3f3c: test rdi,rdi
0x3f3f: js 0x3f4b
0x3f41: movzx eax,al
0x3f44: test rax,rax
0x3f47: jnz 0x3f4b
0x3f49: jmp 0x3f10
0x3f4b: sub rsp,0x8
0x3f4f: call 0x4160
0x3f79: test rdi,rdi
0x3f7c: jnz 0x3f98
0x3f92: nop qword ptr [rax+rax*1+0x0]
0x3f98: call 0x1250
0x3f9d: xor eax,eax
0x3f9f: pop rbx
0x3fa0: ret
0x3fb0: mov rax,rsi
0x3fb3: mul rdx
0x3fb6: mov rsi,rax
0x3fb9: seto al
0x3fbc: test rsi,rsi
0x3fbf: js 0x3fcb
0x3fc1: movzx eax,al
0x3fc4: test rax,rax
0x3fc7: jnz 0x3fcb
0x3fc9: jmp 0x3f70
0x3fcb: sub rsp,0x8
0x3fcf: call 0x4160
0x3fe0: test rdi,rdi
0x3fe3: mov r9,rdx
0x3fe6: mov rcx,qword ptr [rsi]
0x3fe9: jz 0x4020
0x3feb: xor edx,edx
0x3fed: mov rax,0x6148914691236517204
0x3ff7: div r9
0x3ffa: cmp rax,rcx
0x3ffd: jbe 0x403b
0x3fff: mov rax,rcx
0x4002: shr rax,0x1
0x4005: lea rcx,[rax+rcx*1+0x1]
0x400a: mov qword ptr [rsi],rcx
0x400d: imul rcx,r9
0x4011: mov rsi,rcx
0x4014: jmp 0x3f70
0x4019: nop qword ptr [rax+0x0]
0x4020: test rcx,rcx
0x4023: jz 0x4048
0x4025: mov rax,rcx
0x4028: mul r9
0x402b: seto dl
0x402e: test rax,rax
0x4031: movzx edx,dl
0x4034: js 0x403b
0x4036: test rdx,rdx
0x4039: jz 0x400a
0x403b: sub rsp,0x8
0x403f: call 0x4160
0x4044: nop qword ptr [rax+0x0]
0x4048: xor edx,edx
0x404a: mov eax,0x80
0x404f: xor r8d,r8d
0x4052: div r9
0x4055: test rax,rax
0x4058: setz r8b
0x405c: lea rcx,[r8+rax*1+0x0]
0x4060: jmp 0x4025
0x4070: test rdi,rdi
0x4073: mov rax,qword ptr [rsi]
0x4076: jz 0x40a0
0x4078: mov rdx,0x6148914691236517203
0x4082: cmp rax,rdx
0x4085: jnbe 0x40b1
0x4087: mov rdx,rax
0x408a: shr rdx,0x1
0x408d: lea rax,[rdx+rax*1+0x1]
0x4092: mov qword ptr [rsi],rax
0x4095: mov rsi,rax
0x4098: jmp 0x3f70
0x409d: nop qword ptr [rax]
0x40a0: test rax,rax
0x40a3: mov edx,0x80
0x40a8: cmove rax,rdx
0x40ac: test rax,rax
0x40af: jns 0x4092
0x40b1: sub rsp,0x8
0x40b5: call 0x4160
0x40c0: push rbx
0x40c1: mov rbx,rdi
0x40c4: call 0x3f10
0x40c9: mov rdx,rbx
0x40cc: xor esi,esi
0x40ce: mov rdi,rax
0x40d1: pop rbx
0x40d2: jmp 0x1380
0x40e0: mov rax,rdi
0x40e3: sub rsp,0x8
0x40e7: mul rsi
0x40ea: seto dl
0x40ed: test rax,rax
0x40f0: js 0x4109
0x40f2: movzx edx,dl
0x40f5: test rdx,rdx
0x40f8: jnz 0x4109
0x40fa: call 0x13b0
0x40ff: test rax,rax
0x4102: jz 0x4109
0x4104: add rsp,0x8
0x4108: ret
0x4109: call 0x4160
0x4110: push rbp
0x4111: push rbx
0x4112: mov rbp,rdi
0x4115: mov rdi,rsi
0x4118: mov rbx,rsi
0x411b: sub rsp,0x8
0x411f: call 0x3f10
0x4124: add rsp,0x8
0x4128: mov rdx,rbx
0x412b: mov rsi,rbp
0x412e: pop rbx
0x412f: pop rbp
0x4130: mov rdi,rax
0x4133: jmp 0x13c0
0x4140: push rbx
0x4141: mov rbx,rdi
0x4144: call 0x1320
0x4149: mov rdi,rbx
0x414c: lea rsi,[rax+0x1]
0x4150: pop rbx
0x4151: jmp 0x4110
0x4190: call 0x1260
0x421e: call 0x1330
0x4230: push r12
0x4232: push rbp
0x4233: mov rbp,rdi
0x4236: push rbx
0x4237: call 0x12a0
0x423c: mov ebx,dword ptr [rbp+0x0]
0x423f: mov rdi,rbp
0x4242: mov r12,rax
0x4245: call 0x4350
0x424a: and ebx,0x20
0x424d: test ebx,ebx
0x424f: jnz 0x4268
0x4251: test eax,eax
0x4253: jz 0x425f
0x4255: test r12,r12
0x4258: mov eax,0xffffffff
0x425d: jz 0x4298
0x425f: pop rbx
0x4260: pop rbp
0x4261: pop r12
0x4263: ret
0x4264: nop qword ptr [rax+0x0]
0x4268: test eax,eax
0x426a: jnz 0x4288
0x426c: call 0x1270
0x4271: mov [rax],0x0
0x4277: mov eax,0xffffffff
0x427c: pop rbx
0x427d: pop rbp
0x427e: pop r12
0x4280: ret
0x4281: nop qword ptr [rax+0x0]
0x4288: pop rbx
0x4289: mov eax,0xffffffff
0x428e: pop rbp
0x428f: pop r12
0x4291: ret
0x4292: nop qword ptr [rax+rax*1+0x0]
0x4298: call 0x1270
0x429d: cmp [rax],0x9
0x42a0: pop rbx
0x42a1: pop rbp
0x42a2: pop r12
0x42a4: setnz al
0x42a7: movzx eax,al
0x42aa: neg eax
0x42ac: ret
0x42ea: nop qword ptr [rax+rax*1+0x0]
0x4336: nop qword ptr [rax+rax*1+0x0]
0x4350: push r12
0x4352: push rbp
0x4353: push rbx
0x4354: mov rbx,rdi
0x4357: call 0x13d0
0x435c: test eax,eax
0x435e: mov rdi,rbx
0x4361: js 0x43b7
0x4363: call 0x1410
0x4368: test eax,eax
0x436a: jnz 0x4398
0x436c: mov rdi,rbx
0x436f: call 0x43d0
0x4374: test eax,eax
0x4376: jz 0x43b4
0x4378: call 0x1270
0x437d: mov r12d,dword ptr [rax]
0x4380: mov rdi,rbx
0x4383: mov rbp,rax
0x4386: call 0x12e0
0x438b: test r12d,r12d
0x438e: jnz 0x43c0
0x4390: pop rbx
0x4391: pop rbp
0x4392: pop r12
0x4394: ret
0x4395: nop qword ptr [rax]
0x4398: mov rdi,rbx
0x439b: call 0x13d0
0x43a0: xor esi,esi
0x43a2: mov edx,0x1
0x43a7: mov edi,eax
0x43a9: call 0x1370
0x43ae: cmp rax,0xffffffff
0x43b2: jnz 0x436c
0x43b4: mov rdi,rbx
0x43b7: pop rbx
0x43b8: pop rbp
0x43b9: pop r12
0x43bb: jmp 0x12e0
0x43c0: mov dword ptr [rbp+0x0],r12d
0x43c4: mov eax,0xffffffff
0x43c9: jmp 0x4390
0x43d0: test rdi,rdi
0x43d3: push rbx
0x43d4: mov rbx,rdi
0x43d7: jz 0x43ea
0x43d9: call 0x1410
0x43de: test eax,eax
0x43e0: jz 0x43ea
0x43e2: test [rbx],0x100
0x43e8: jnz 0x43f8
0x43ea: mov rdi,rbx
0x43ed: pop rbx
0x43ee: jmp 0x13f0
0x43f3: nop qword ptr [rax+rax*1+0x0]
0x43f8: mov rdi,rbx
0x43fb: mov edx,0x1
0x4400: xor esi,esi
0x4402: call 0x4410
0x4407: mov rdi,rbx
0x440a: pop rbx
0x440b: jmp 0x13f0
0x4410: mov rax,qword ptr [rdi+0x8]
0x4414: cmp qword ptr [rdi+0x10],rax
0x4418: jz 0x4420
0x441a: jmp 0x1470
0x441f: nop 
0x4420: mov rax,qword ptr [rdi+0x20]
0x4424: cmp qword ptr [rdi+0x28],rax
0x4428: jnz 0x441a
0x442a: cmp [rdi+0x48],0x0
0x442f: jnz 0x441a
0x4431: push r12
0x4433: push rbp
0x4434: mov r12d,edx
0x4437: push rbx
0x4438: mov rbp,rsi
0x443b: mov rbx,rdi
0x443e: call 0x13d0
0x4443: mov edx,r12d
0x4446: mov rsi,rbp
0x4449: mov edi,eax
0x444b: call 0x1370
0x4450: cmp rax,0xffffffff
0x4454: jz 0x4462
0x4456: and [rbx],0xef
0x4459: mov qword ptr [rbx+0x90],rax
0x4460: xor eax,eax
0x4462: pop rbx
0x4463: pop rbp
0x4464: pop r12
0x4466: ret
0x4470: push r15
0x4472: push r14
0x4474: mov r15,rdx
0x4477: push r13
0x4479: push r12
0x447b: lea r12,[rip+0x2026ee]
0x4482: push rbp
0x4483: lea rbp,[rip+0x2026ee]
0x448a: push rbx
0x448b: mov r13d,edi
0x448e: mov r14,rsi
0x4491: sub rbp,r12
0x4494: sub rsp,0x8
0x4498: sar rbp,0x3
0x449c: call 0x1220
0x44a1: test rbp,rbp
0x44a4: jz 0x44c6
0x44a6: xor ebx,ebx
0x44a8: nop qword ptr [rax+rax*1+0x0]
0x44b0: mov rdx,r15
0x44b3: mov rsi,r14
0x44b6: mov edi,r13d
0x44b9: call qword ptr [r12+rbx*8+0x0]
0x44bd: add rbx,0x1
0x44c1: cmp rbp,rbx
0x44c4: jnz 0x44b0
0x44c6: add rsp,0x8
0x44ca: pop rbx
0x44cb: pop rbp
0x44cc: pop r12
0x44ce: pop r13
0x44d0: pop r14
0x44d2: pop r15
0x44d4: ret
0x4500: sub rsp,0x8
0x4504: add rsp,0x8
0x4508: ret
