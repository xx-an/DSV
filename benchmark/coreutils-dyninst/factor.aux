0x1d88: sub rsp,0x8
0x1d8c: mov rax,qword ptr [rip+0x211255]
0x1d93: test rax,rax
0x1d96: jz 0x1d9a
0x1d98: call rax
0x1d9a: add rsp,0x8
0x1d9e: ret
0x1db6: push 0x0
0x1dc6: push 0x1
0x1dd6: push 0x2
0x1de6: push 0x3
0x1df6: push 0x4
0x1e06: push 0x5
0x1e10: jmp qword ptr [rip+0x210f4a]
0x1e16: push 0x6
0x1e20: jmp qword ptr [rip+0x210f42]
0x1e26: push 0x7
0x1e36: push 0x8
0x1e46: push 0x9
0x1e56: push 0xa
0x1e60: jmp qword ptr [rip+0x210f22]
0x1e66: push 0xb
0x1e76: push 0xc
0x1e80: jmp qword ptr [rip+0x210f12]
0x1e86: push 0xd
0x1e90: jmp qword ptr [rip+0x210f0a]
0x1e96: push 0xe
0x1ea6: push 0xf
0x1eb6: push 0x10
0x1ec0: jmp qword ptr [rip+0x210ef2]
0x1ec6: push 0x11
0x1ed6: push 0x12
0x1ee6: push 0x13
0x1ef6: push 0x14
0x1f06: push 0x15
0x1f16: push 0x16
0x1f26: push 0x17
0x1f36: push 0x18
0x1f46: push 0x19
0x1f56: push 0x1a
0x1f66: push 0x1b
0x1f76: push 0x1c
0x1f86: push 0x1d
0x1f96: push 0x1e
0x1fa6: push 0x1f
0x1fb6: push 0x20
0x1fc6: push 0x21
0x1fd0: jmp qword ptr [rip+0x210e6a]
0x1fd6: push 0x22
0x1fe0: jmp qword ptr [rip+0x210e62]
0x1fe6: push 0x23
0x1ff6: push 0x24
0x2000: jmp qword ptr [rip+0x210e52]
0x2006: push 0x25
0x2016: push 0x26
0x2020: jmp qword ptr [rip+0x210e42]
0x2026: push 0x27
0x2036: push 0x28
0x2046: push 0x29
0x2056: push 0x2a
0x2060: jmp qword ptr [rip+0x210e22]
0x2066: push 0x2b
0x2076: push 0x2c
0x2086: push 0x2d
0x2096: push 0x2e
0x20a6: push 0x2f
0x20b0: jmp qword ptr [rip+0x210dfa]
0x20b6: push 0x30
0x20c6: push 0x31
0x20d0: jmp qword ptr [rip+0x210dea]
0x20d6: push 0x32
0x20e0: jmp qword ptr [rip+0x210de2]
0x20e6: push 0x33
0x20f6: push 0x34
0x2100: jmp qword ptr [rip+0x210dd2]
0x2106: push 0x35
0x2116: push 0x36
0x2126: push 0x37
0x2136: push 0x38
0x2140: jmp qword ptr [rip+0x210db2]
0x2146: push 0x39
0x2156: push 0x3a
0x2166: push 0x3b
0x2176: push 0x3c
0x2186: push 0x3d
0x2196: push 0x3e
0x21a0: jmp qword ptr [rip+0x210d82]
0x21a6: push 0x3f
0x21b6: push 0x40
0x21c6: push 0x41
0x21d6: push 0x42
0x21e6: push 0x43
0x21f0: jmp qword ptr [rip+0x210d5a]
0x21f6: push 0x44
0x2206: push 0x45
0x2216: push 0x46
0x2226: push 0x47
0x2236: push 0x48
0x2246: push 0x49
0x2256: push 0x4a
0x2266: push 0x4b
0x2276: push 0x4c
0x2286: push 0x4d
0x2296: push 0x4e
0x22a6: push 0x4f
0x22b6: push 0x50
0x22c6: push 0x51
0x22d6: push 0x52
0x22e6: push 0x53
0x22f0: jmp qword ptr [rip+0x210cda]
0x22f6: push 0x54
0x2300: jmp qword ptr [rip+0x210cf2]
0x2306: nop 
0x2310: lea rcx,[rip+0xddb9]
0x2317: lea rsi,[rip+0xdd3a]
0x231e: lea rdi,[rip+0xdd53]
0x2325: sub rsp,0x8
0x2329: mov edx,0xb3
0x232e: call 0x1fe0
0x2333: lea rcx,[rip+0xe2b6]
0x233a: lea rsi,[rip+0xe287]
0x2341: lea rdi,[rip+0xdd30]
0x2348: sub rsp,0x8
0x234c: mov edx,0xaa
0x2351: call 0x1fe0
0x2356: lea rcx,[rip+0xe663]
0x235d: lea rsi,[rip+0xdcf4]
0x2364: lea rdi,[rip+0xdd0d]
0x236b: sub rsp,0x8
0x236f: mov edx,0xb3
0x2374: call 0x1fe0
0x2449: nop qword ptr [rax+0x0]
0x257d: call 0x1f20
0x25ba: hlt 
0x25c0: lea rdi,[rip+0x210ad9]
0x25c7: push rbp
0x25c8: lea rax,[rip+0x210ad1]
0x25cf: cmp rax,rdi
0x25d2: mov rbp,rsp
0x25d5: jz 0x25f0
0x25d7: mov rax,qword ptr [rip+0x2109fa]
0x25de: test rax,rax
0x25e1: jz 0x25f0
0x25e3: pop rbp
0x25e4: jmp rax
0x25e6: nop qword ptr [rax+rax*1+0x0]
0x25f0: pop rbp
0x25f1: ret
0x2600: lea rdi,[rip+0x210a99]
0x2607: lea rsi,[rip+0x210a92]
0x260e: push rbp
0x260f: sub rsi,rdi
0x2612: mov rbp,rsp
0x2615: sar rsi,0x3
0x2619: mov rax,rsi
0x261c: shr rax,0x3f
0x2620: add rsi,rax
0x2623: sar rsi,0x1
0x2626: jz 0x2640
0x2628: mov rax,qword ptr [rip+0x2109c1]
0x262f: test rax,rax
0x2632: jz 0x2640
0x2634: pop rbp
0x2635: jmp rax
0x2637: nop qword ptr [rax+rax*1+0x0]
0x2640: pop rbp
0x2641: ret
0x2650: cmp [rip+0x210a91],0x0
0x2657: jnz 0x2688
0x2659: cmp [rip+0x210997],0x0
0x2661: push rbp
0x2662: mov rbp,rsp
0x2665: jz 0x2673
0x2667: mov rdi,qword ptr [rip+0x21099a]
0x266e: call 0x2300
0x2673: call 0x25c0
0x2678: mov [rip+0x210a69],0x1
0x267f: pop rbp
0x2680: ret
0x2681: nop qword ptr [rax+0x0]
0x2688: rep ret
0x2690: push rbp
0x2691: mov rbp,rsp
0x2694: pop rbp
0x2695: jmp 0x2600
0x26a0: test sil,0x1
0x26a4: jz 0x26af
0x26a6: mov rax,rsi
0x26a9: mov rsi,rdi
0x26ac: mov rdi,rax
0x26af: mov rax,rdi
0x26b2: shr rdi,0x1
0x26b5: test rsi,rsi
0x26b8: jnz 0x26d4
0x26ba: jmp 0x26f0
0x26bc: nop qword ptr [rax+0x0]
0x26c0: cqo
0x26c2: mov rcx,rax
0x26c5: and rcx,rdx
0x26c8: xor rax,rdx
0x26cb: add rdi,rcx
0x26ce: sub rax,rdx
0x26d1: mov rsi,rax
0x26d4: mov rax,rsi
0x26d7: shr rax,0x1
0x26da: test sil,0x1
0x26de: jz 0x26d1
0x26e0: sub rax,rdi
0x26e3: jnz 0x26c0
0x26e5: mov rax,rsi
0x26e8: or rax,0x1
0x26ec: ret
0x26ed: nop qword ptr [rax]
0x26f0: rep ret
0x2700: push r14
0x2702: push r13
0x2704: lea r11,[rdi+0x10]
0x2708: movzx r13d,byte ptr [rdi+0xfa]
0x2710: push r12
0x2712: push rbp
0x2713: push rbx
0x2714: lea rbx,[rdi+0xe0]
0x271b: mov r12d,r13d
0x271e: sub r13d,0x1
0x2722: cmp r13d,0xff
0x2726: jz 0x27f8
0x272c: movsxd rcx,r13d
0x272f: lea rax,[rcx*8+0x0]
0x2737: mov rbp,qword ptr [rdi+rax*1+0x10]
0x273c: cmp rsi,rbp
0x273f: jnb 0x27e0
0x2745: mov r9d,r13d
0x2748: lea rax,[rcx-0x1]
0x274c: mov r14,rcx
0x274f: sub r14,r9
0x2752: mov r9d,r13d
0x2755: mov r8,rax
0x2758: sub r14,0x1
0x275c: jmp 0x276e
0x275e: nop 
0x2760: lea r10,[r8-0x1]
0x2764: cmp qword ptr [r11+r10*8+0x8],rsi
0x2769: jbe 0x27c8
0x276b: mov r8,r10
0x276e: sub r9d,0x1
0x2772: cmp r14,r8
0x2775: jnz 0x2760
0x2777: mov r8,rbx
0x277a: mov r14,r11
0x277d: mov r9d,0xffffffff
0x2783: jmp 0x2790
0x2785: nop qword ptr [rax]
0x2788: mov rbp,qword ptr [r11+rax*8+0x0]
0x278c: sub rax,0x1
0x2790: mov qword ptr [r11+rcx*8+0x8],rbp
0x2795: movzx r10d,byte ptr [rbx+rcx*1+0x0]
0x279a: cmp r9d,eax
0x279d: mov byte ptr [rbx+rcx*1+0x1],r10b
0x27a2: mov rcx,rax
0x27a5: jl 0x2788
0x27a7: add r12d,0x1
0x27ab: mov qword ptr [r14],rsi
0x27ae: mov byte ptr [r8],dl
0x27b1: mov byte ptr [rdi+0xfa],r12b
0x27b8: pop rbx
0x27b9: pop rbp
0x27ba: pop r12
0x27bc: pop r13
0x27be: pop r14
0x27c0: ret
0x27c1: nop qword ptr [rax+0x0]
0x27c8: jz 0x27e5
0x27ca: add r8,0x1
0x27ce: lea r14,[r11+r8*8+0x0]
0x27d2: add r8,rbx
0x27d5: cmp r13d,r9d
0x27d8: jnle 0x2790
0x27da: jmp 0x27a7
0x27dc: nop qword ptr [rax+0x0]
0x27e0: jnz 0x2800
0x27e2: mov r8,rcx
0x27e5: add byte ptr [rbx+r8*1+0x0],dl
0x27e9: pop rbx
0x27ea: pop rbp
0x27eb: pop r12
0x27ed: pop r13
0x27ef: pop r14
0x27f1: ret
0x27f2: nop qword ptr [rax+rax*1+0x0]
0x27f8: mov r8,rbx
0x27fb: mov r14,r11
0x27fe: jmp 0x27a7
0x2800: lea r14,[r11+rax*1+0x8]
0x2805: lea r8,[rbx+rcx*1+0x1]
0x280a: jmp 0x27a7
0x2810: test sil,0x1
0x2814: mov r9,rdx
0x2817: jz 0x2870
0x2819: mov r8,rdi
0x281c: nop qword ptr [rax+0x0]
0x2820: mov rax,rdi
0x2823: mul rdi
0x2826: mov r10,rdx
0x2829: mov rdi,r10
0x282c: imul rax,rcx
0x2830: mul r9
0x2833: sub rdi,rdx
0x2836: cmp r10,rdx
0x2839: lea rax,[rdi+r9*1+0x0]
0x283d: cmovnae rdi,rax
0x2841: shr rsi,0x1
0x2844: test sil,0x1
0x2848: jz 0x2870
0x284a: mov rax,r8
0x284d: mul rdi
0x2850: mov r10,rdx
0x2853: mov r8,r10
0x2856: imul rax,rcx
0x285a: mul r9
0x285d: sub r8,rdx
0x2860: cmp r10,rdx
0x2863: lea rax,[r8+r9*1+0x0]
0x2867: cmovnae r8,rax
0x286b: jmp 0x2820
0x286d: nop qword ptr [rax]
0x2870: test rsi,rsi
0x2873: jnz 0x2820
0x2875: mov rax,r8
0x2878: ret
0x2880: push r12
0x2882: mov r11,rdi
0x2885: push rbp
0x2886: push rbx
0x2887: mov rbx,rsi
0x288a: mov rdi,rdx
0x288d: mov rsi,rcx
0x2890: mov rdx,r11
0x2893: mov ebp,r8d
0x2896: mov rcx,rbx
0x2899: mov r8,r9
0x289c: mov r12,r9
0x289f: call 0x2810
0x28a4: mov rdi,r11
0x28a7: sub rdi,r12
0x28aa: cmp r12,rax
0x28ad: setz r8b
0x28b1: cmp rax,rdi
0x28b4: setz dl
0x28b7: or r8b,dl
0x28ba: jnz 0x2905
0x28bc: cmp ebp,0x1
0x28bf: jbe 0x2905
0x28c1: mov esi,0x1
0x28c6: jmp 0x28dc
0x28c8: nop qword ptr [rax+rax*1+0x0]
0x28d0: cmp r12,rax
0x28d3: jz 0x2905
0x28d5: add esi,0x1
0x28d8: cmp ebp,esi
0x28da: jz 0x2905
0x28dc: mul rax
0x28df: mov rcx,rdx
0x28e2: imul rax,rbx
0x28e6: mul r11
0x28e9: mov rax,rcx
0x28ec: sub rax,rdx
0x28ef: cmp rcx,rdx
0x28f2: lea r9,[rax+r11*1+0x0]
0x28f6: cmovnae rax,r9
0x28fa: cmp rdi,rax
0x28fd: jnz 0x28d0
0x28ff: mov r8d,0x1
0x2905: pop rbx
0x2906: mov eax,r8d
0x2909: pop rbp
0x290a: pop r12
0x290c: ret
0x2960: push r15
0x2962: push r14
0x2964: push r13
0x2966: push r12
0x2968: push rbp
0x2969: push rbx
0x296a: sub rsp,0x8
0x296e: mov rbx,qword ptr [rsp+0x48]
0x2973: mov r10,qword ptr [rsp+0x40]
0x2978: neg rbx
0x297b: test rsi,rsi
0x297e: js 0x2ab7
0x2984: test rcx,rcx
0x2987: js 0x2a98
0x298d: test r9,r9
0x2990: js 0x2a79
0x2996: mov rbp,rdx
0x2999: mov r15,rbx
0x299c: mov rax,rbp
0x299f: mul r8
0x29a2: mov r12,rax
0x29a5: mov r13,rdx
0x29a8: mov rax,rbp
0x29ab: imul r15,r12
0x29af: mul rcx
0x29b2: mov r11,rdx
0x29b5: mov rbp,rax
0x29b8: mov rax,r15
0x29bb: mul r10
0x29be: mov rax,r15
0x29c1: mov r14,rdx
0x29c4: mul r9
0x29c7: test r12,r12
0x29ca: setnz r12b
0x29ce: movzx r12d,r12b
0x29d2: add rbp,r12
0x29d5: add rbp,r14
0x29d8: adc r11,0x0
0x29dc: add rbp,r13
0x29df: adc r11,0x0
0x29e3: add rbp,rax
0x29e6: adc r11,rdx
0x29e9: mov rax,rsi
0x29ec: mul r8
0x29ef: mov r8,rdx
0x29f2: mov r12,rax
0x29f5: mov rax,rsi
0x29f8: add r12,rbp
0x29fb: adc r8,0x0
0x29ff: imul rbx,r12
0x2a03: xor esi,esi
0x2a05: mul rcx
0x2a08: mov rcx,rdx
0x2a0b: mov rbp,rax
0x2a0e: add rbp,r11
0x2a11: adc rcx,0x0
0x2a15: mov rax,rbx
0x2a18: mul r10
0x2a1b: mov rax,rbx
0x2a1e: mov r11,rdx
0x2a21: mul r9
0x2a24: test r12,r12
0x2a27: setnz sil
0x2a2b: add rsi,rbp
0x2a2e: add rsi,r11
0x2a31: adc rcx,0x0
0x2a35: add rsi,r8
0x2a38: adc rcx,0x0
0x2a3c: add rsi,rax
0x2a3f: adc rcx,rdx
0x2a42: cmp r9,rcx
0x2a45: mov rdx,rcx
0x2a48: mov rax,rsi
0x2a4b: jnb 0x2a70
0x2a4d: sub rsi,r10
0x2a50: sbb rcx,r9
0x2a53: mov rdx,rcx
0x2a56: mov rax,rsi
0x2a59: mov qword ptr [rdi],rdx
0x2a5c: add rsp,0x8
0x2a60: pop rbx
0x2a61: pop rbp
0x2a62: pop r12
0x2a64: pop r13
0x2a66: pop r14
0x2a68: pop r15
0x2a6a: ret
0x2a6b: nop qword ptr [rax+rax*1+0x0]
0x2a70: jnz 0x2a59
0x2a72: cmp r10,rsi
0x2a75: jbe 0x2a4d
0x2a77: jmp 0x2a59
0x2a79: lea rcx,[rip+0xa538]
0x2a80: lea rsi,[rip+0x9fc1]
0x2a87: lea rdi,[rip+0xa01a]
0x2a8e: mov edx,0x3e9
0x2a93: call 0x1fe0
0x2a98: lea rcx,[rip+0xa519]
0x2a9f: lea rsi,[rip+0x9fa2]
0x2aa6: lea rdi,[rip+0x9fdb]
0x2aad: mov edx,0x3e8
0x2ab2: call 0x1fe0
0x2ab7: lea rcx,[rip+0xa4fa]
0x2abe: lea rsi,[rip+0x9f83]
0x2ac5: lea rdi,[rip+0x9f9c]
0x2acc: mov edx,0x3e7
0x2ad1: call 0x1fe0
0x2ae0: push r15
0x2ae2: push r14
0x2ae4: mov r15,r8
0x2ae7: push r13
0x2ae9: push r12
0x2aeb: mov r12,rdi
0x2aee: push rbp
0x2aef: push rbx
0x2af0: mov ebx,0x40
0x2af5: sub rsp,0x38
0x2af9: mov rax,qword ptr [r9]
0x2afc: mov r10,qword ptr [rsi]
0x2aff: mov qword ptr [rsp+0x28],rdx
0x2b04: mov r11,qword ptr [rsi+0x8]
0x2b08: mov r13,qword ptr [rcx]
0x2b0b: mov r14,qword ptr [rcx+0x8]
0x2b0f: mov qword ptr [rsp+0x10],rax
0x2b14: mov rax,qword ptr [r9+0x8]
0x2b18: mov rbp,qword ptr [rdx]
0x2b1b: mov qword ptr [rsp+0x8],rax
0x2b20: jmp 0x2b55
0x2b22: nop qword ptr [rax+rax*1+0x0]
0x2b28: push r15
0x2b2a: push r13
0x2b2c: mov r8,r10
0x2b2f: mov rcx,r11
0x2b32: mov rdx,r10
0x2b35: mov rsi,r11
0x2b38: mov rdi,r12
0x2b3b: mov r9,r14
0x2b3e: shr rbp,0x1
0x2b41: call 0x2960
0x2b46: sub ebx,0x1
0x2b49: mov r10,rax
0x2b4c: mov r11,qword ptr [r12]
0x2b50: pop rdi
0x2b51: pop r8
0x2b53: jz 0x2ba8
0x2b55: test bpl,0x1
0x2b59: jz 0x2b28
0x2b5b: push r15
0x2b5d: push r13
0x2b5f: mov r9,r14
0x2b62: mov rdx,qword ptr [rsp+0x20]
0x2b67: mov rsi,qword ptr [rsp+0x18]
0x2b6c: mov r8,r10
0x2b6f: mov rcx,r11
0x2b72: mov rdi,r12
0x2b75: mov qword ptr [rsp+0x28],r11
0x2b7a: mov qword ptr [rsp+0x30],r10
0x2b7f: call 0x2960
0x2b84: mov qword ptr [rsp+0x20],rax
0x2b89: mov rax,qword ptr [r12]
0x2b8d: mov qword ptr [rsp+0x18],rax
0x2b92: pop r9
0x2b94: pop r10
0x2b96: mov r10,qword ptr [rsp+0x20]
0x2b9b: mov r11,qword ptr [rsp+0x18]
0x2ba0: jmp 0x2b28
0x2ba2: nop qword ptr [rax+rax*1+0x0]
0x2ba8: mov rax,qword ptr [rsp+0x28]
0x2bad: mov rbx,qword ptr [rax+0x8]
0x2bb1: test rbx,rbx
0x2bb4: jnz 0x2be9
0x2bb6: jmp 0x2c38
0x2bbb: nop qword ptr [rax+rax*1+0x0]
0x2bc0: push r15
0x2bc2: push r13
0x2bc4: mov rdx,r10
0x2bc7: mov r8,r10
0x2bca: mov rcx,r11
0x2bcd: mov rsi,r11
0x2bd0: mov r9,r14
0x2bd3: mov rdi,r12
0x2bd6: call 0x2960
0x2bdb: shr rbx,0x1
0x2bde: mov r10,rax
0x2be1: mov r11,qword ptr [r12]
0x2be5: pop rax
0x2be6: pop rdx
0x2be7: jz 0x2c38
0x2be9: test bl,0x1
0x2bec: jz 0x2bc0
0x2bee: push r15
0x2bf0: push r13
0x2bf2: mov rcx,r11
0x2bf5: mov rdx,qword ptr [rsp+0x20]
0x2bfa: mov rsi,qword ptr [rsp+0x18]
0x2bff: mov r8,r10
0x2c02: mov r9,r14
0x2c05: mov rdi,r12
0x2c08: mov qword ptr [rsp+0x30],r10
0x2c0d: mov qword ptr [rsp+0x28],r11
0x2c12: call 0x2960
0x2c17: mov qword ptr [rsp+0x20],rax
0x2c1c: mov rax,qword ptr [r12]
0x2c20: mov qword ptr [rsp+0x18],rax
0x2c25: pop rcx
0x2c26: pop rsi
0x2c27: mov r10,qword ptr [rsp+0x20]
0x2c2c: mov r11,qword ptr [rsp+0x18]
0x2c31: jmp 0x2bc0
0x2c33: nop qword ptr [rax+rax*1+0x0]
0x2c38: mov rax,qword ptr [rsp+0x8]
0x2c3d: mov qword ptr [r12],rax
0x2c41: mov rax,qword ptr [rsp+0x10]
0x2c46: add rsp,0x38
0x2c4a: pop rbx
0x2c4b: pop rbp
0x2c4c: pop r12
0x2c4e: pop r13
0x2c50: pop r14
0x2c52: pop r15
0x2c54: ret
0x2c60: push r15
0x2c62: push r14
0x2c64: mov r14,rdi
0x2c67: push r13
0x2c69: push r12
0x2c6b: mov r13,rsi
0x2c6e: push rbp
0x2c6f: push rbx
0x2c70: mov rsi,rdx
0x2c73: mov rbx,r9
0x2c76: mov rdx,rcx
0x2c79: mov rcx,r14
0x2c7c: sub rsp,0x28
0x2c80: lea rdi,[rsp+0x10]
0x2c85: mov dword ptr [rsp+0x8],r8d
0x2c8a: mov r8,r13
0x2c8d: mov rax,0x28
0x2c96: mov qword ptr [rsp+0x18],rax
0x2c9b: xor eax,eax
0x2c9d: mov qword ptr [rsp],rdi
0x2ca1: call 0x2ae0
0x2ca6: mov rcx,qword ptr [rbx]
0x2ca9: mov rsi,qword ptr [rsp+0x10]
0x2cae: mov rdi,qword ptr [rbx+0x8]
0x2cb2: cmp rcx,rax
0x2cb5: jz 0x2d40
0x2cbb: mov r9,qword ptr [r14+0x8]
0x2cbf: mov rdx,qword ptr [r14]
0x2cc2: mov r12,r9
0x2cc5: mov rbp,rdx
0x2cc8: sub rbp,rcx
0x2ccb: sbb r12,rdi
0x2cce: cmp rax,rbp
0x2cd1: setz dil
0x2cd5: cmp rsi,r12
0x2cd8: setz cl
0x2cdb: and dil,cl
0x2cde: mov byte ptr [rsp+0xf],dil
0x2ce3: jnz 0x2d50
0x2ce5: cmp [rsp+0x8],0x1
0x2cea: mov r15d,0x1
0x2cf0: jnbe 0x2d0a
0x2cf2: jmp 0x2d55
0x2cf4: nop qword ptr [rax+0x0]
0x2cf8: add r15d,0x1
0x2cfc: cmp dword ptr [rsp+0x8],r15d
0x2d01: jz 0x2d55
0x2d03: mov rdx,qword ptr [r14]
0x2d06: mov r9,qword ptr [r14+0x8]
0x2d0a: push r13
0x2d0c: push rdx
0x2d0d: mov rcx,rsi
0x2d10: mov rdi,qword ptr [rsp+0x10]
0x2d15: mov rdx,rax
0x2d18: mov r8,rax
0x2d1b: call 0x2960
0x2d20: cmp rbp,rax
0x2d23: mov rsi,qword ptr [rsp+0x20]
0x2d28: pop rdx
0x2d29: pop rcx
0x2d2a: jnz 0x2d31
0x2d2c: cmp r12,rsi
0x2d2f: jz 0x2d50
0x2d31: cmp qword ptr [rbx],rax
0x2d34: jnz 0x2cf8
0x2d36: cmp qword ptr [rbx+0x8],rsi
0x2d3a: jnz 0x2cf8
0x2d3c: jmp 0x2d55
0x2d3e: nop 
0x2d40: cmp rdi,rsi
0x2d43: jnz 0x2cbb
0x2d49: nop qword ptr [rax+0x0]
0x2d50: mov [rsp+0xf],0x1
0x2d55: mov rbx,qword ptr [rsp+0x18]
0x2d5a: xor rbx,0x28
0x2d63: movzx eax,byte ptr [rsp+0xf]
0x2d68: jnz 0x2d79
0x2d6a: add rsp,0x28
0x2d6e: pop rbx
0x2d6f: pop rbp
0x2d70: pop r12
0x2d72: pop r13
0x2d74: pop r14
0x2d76: pop r15
0x2d78: ret
0x2d79: call 0x1f20
0x2db7: lea rcx,[rbp+r8*1+0x0]
0x2dbc: mov rdx,r8
0x2dbf: sub rcx,rbx
0x2dc2: nop qword ptr [rax+rax*1+0x0]
0x2dc8: mov [rdx],0x30
0x2dcb: add rdx,0x1
0x2dcf: cmp rdx,rcx
0x2dd2: jnz 0x2dc8
0x2dd4: sub rbp,rbx
0x2dd7: add r8,rbp
0x2dda: nop qword ptr [rax+rax*1+0x0]
0x2e0b: add rsp,0x28
0x2e0f: pop rbx
0x2e10: pop rbp
0x2e11: ret
0x2e71: nop qword ptr [rax+0x0]
0x2eb8: nop qword ptr [rax+rax*1+0x0]
0x2f78: nop qword ptr [rax+rax*1+0x0]
0x2fd1: nop qword ptr [rax+0x0]
0x3030: push rbx
0x3031: mov rsi,qword ptr [rip+0x2100b8]
0x3038: mov edi,0x1
0x303d: mov rbx,qword ptr [rip+0x2100b4]
0x3044: sub rbx,rsi
0x3047: mov rdx,rbx
0x304a: call 0x60e0
0x304f: cmp rax,rbx
0x3052: jnz 0x3064
0x3054: mov rax,qword ptr [rip+0x210095]
0x305b: pop rbx
0x305c: mov qword ptr [rip+0x210095],rax
0x3063: ret
0x3064: lea rsi,[rip+0x9d20]
0x306b: mov edx,0x5
0x3070: xor edi,edi
0x3072: call 0x1ee0
0x3077: mov rbx,rax
0x307a: call 0x1df0
0x307f: mov esi,dword ptr [rax]
0x3081: lea rdx,[rip+0xcf84]
0x3088: mov rcx,rbx
0x308b: mov edi,0x1
0x3090: xor eax,eax
0x3092: call 0x21e0
0x3097: nop qword ptr [rax+rax*1+0x0]
0x30a0: test rsi,rsi
0x30a3: mov rax,rdx
0x30a6: jz 0x30c0
0x30a8: cmp [rdi+0x8],0x0
0x30ad: jnz 0x30cd
0x30af: mov qword ptr [rdi],rdx
0x30b2: mov qword ptr [rdi+0x8],rsi
0x30b6: ret
0x30b7: nop qword ptr [rax+rax*1+0x0]
0x30c0: mov edx,0x1
0x30c5: mov rsi,rax
0x30c8: jmp 0x2700
0x30cd: lea rcx,[rip+0x9ecc]
0x30d4: lea rsi,[rip+0x996d]
0x30db: lea rdi,[rip+0x9cb5]
0x30e2: sub rsp,0x8
0x30e6: mov edx,0x235
0x30eb: call 0x1fe0
0x30f0: test r8b,0x1
0x30f4: jz 0x31ce
0x30fa: mov rax,rdx
0x30fd: mov r9,rsi
0x3100: or rax,rsi
0x3103: jnz 0x3120
0x3105: jmp 0x31c0
0x310a: nop qword ptr [rax+rax*1+0x0]
0x3110: mov rax,r9
0x3113: shr rdx,0x1
0x3116: shr r9,0x1
0x3119: shl rax,0x3f
0x311d: or rdx,rax
0x3120: test dl,0x1
0x3123: jz 0x3110
0x3125: nop qword ptr [rax]
0x3128: mov rax,r9
0x312b: or rax,rcx
0x312e: jz 0x3176
0x3130: cmp r9,rcx
0x3133: jnbe 0x3190
0x3135: setz al
0x3138: cmp rdx,r8
0x313b: jbe 0x3141
0x313d: test al,al
0x313f: jnz 0x3190
0x3141: cmp r9,rcx
0x3144: jb 0x314f
0x3146: cmp rdx,r8
0x3149: jnb 0x31c7
0x314b: test al,al
0x314d: jz 0x31c7
0x314f: sub r8,rdx
0x3152: sbb rcx,r9
0x3155: nop qword ptr [rax]
0x3158: mov rax,rcx
0x315b: shr r8,0x1
0x315e: shr rcx,0x1
0x3161: shl rax,0x3f
0x3165: or r8,rax
0x3168: test r8b,0x1
0x316c: jz 0x3158
0x316e: mov rax,r9
0x3171: or rax,rcx
0x3174: jnz 0x3130
0x3176: mov [rdi],0x0
0x317d: mov rsi,rdx
0x3180: mov rdi,r8
0x3183: jmp 0x26a0
0x3188: nop qword ptr [rax+rax*1+0x0]
0x3190: sub rdx,r8
0x3193: sbb r9,rcx
0x3196: nop qword ptr [rax+rax*1+0x0]
0x31a0: mov rax,r9
0x31a3: shr rdx,0x1
0x31a6: shr r9,0x1
0x31a9: shl rax,0x3f
0x31ad: or rdx,rax
0x31b0: test dl,0x1
0x31b3: jz 0x31a0
0x31b5: jmp 0x3128
0x31ba: nop qword ptr [rax+rax*1+0x0]
0x31c0: mov qword ptr [rdi],rcx
0x31c3: mov rax,r8
0x31c6: ret
0x31c7: mov qword ptr [rdi],r9
0x31ca: mov rax,rdx
0x31cd: ret
0x31ce: lea rcx,[rip+0x9d93]
0x31d5: lea rsi,[rip+0x986c]
0x31dc: lea rdi,[rip+0x9bcc]
0x31e3: sub rsp,0x8
0x31e7: mov edx,0x1e3
0x31ec: call 0x1fe0
0x3200: test rcx,rcx
0x3203: jz 0x3288
0x3209: test rsi,rsi
0x320c: mov rax,rdx
0x320f: jz 0x3280
0x3211: bsr r10,rcx
0x3215: bsr rdx,rsi
0x3219: xor r10d,0x3f
0x321d: xor edx,0x3f
0x3220: mov r9,r8
0x3223: sub r10d,edx
0x3226: mov rdx,rcx
0x3229: mov ecx,r10d
0x322c: shl rdx,cl
0x322f: mov ecx,0x40
0x3234: sub ecx,r10d
0x3237: shr r9,cl
0x323a: mov ecx,r10d
0x323d: or r9,rdx
0x3240: shl r8,cl
0x3243: test r10d,r10d
0x3246: jle 0x327a
0x3248: xor edx,edx
0x324a: nop qword ptr [rax+rax*1+0x0]
0x3250: cmp r9,rsi
0x3253: jb 0x325c
0x3255: jnz 0x3262
0x3257: cmp rax,r8
0x325a: jb 0x3262
0x325c: sub rax,r8
0x325f: sbb rsi,r9
0x3262: mov rcx,r9
0x3265: shr r8,0x1
0x3268: add edx,0x1
0x326b: shl rcx,0x3f
0x326f: shr r9,0x1
0x3272: or r8,rcx
0x3275: cmp r10d,edx
0x3278: jnz 0x3250
0x327a: mov qword ptr [rdi],rsi
0x327d: ret
0x327e: nop 
0x3280: mov [rdi],0x0
0x3287: ret
0x3288: lea rcx,[rip+0x9cd1]
0x328f: lea rsi,[rip+0x97b2]
0x3296: lea rdi,[rip+0x9b19]
0x329d: sub rsp,0x8
0x32a1: mov edx,0x1a3
0x32a6: call 0x1fe0
0x32c2: nop qword ptr [rax+rax*1+0x0]
0x333c: mov r8,qword ptr [rsp+0x8]
0x3341: mov esi,0x9
0x3346: add rsp,0x18
0x334a: mov rdi,r8
0x334d: jmp 0x2d80
0x3360: push rbp
0x3361: push rbx
0x3362: sub rsp,0x8
0x3366: mov rax,qword ptr [rip+0x20fd8b]
0x336d: cmp dil,0xa
0x3371: lea rbp,[rax+0x1]
0x3375: mov byte ptr [rax],dil
0x3378: mov qword ptr [rip+0x20fd79],rbp
0x337f: jz 0x3390
0x3381: add rsp,0x8
0x3385: pop rbx
0x3386: pop rbp
0x3387: ret
0x3388: nop qword ptr [rax+rax*1+0x0]
0x3390: mov eax,dword ptr [rip+0x20fc7a]
0x3396: mov rbx,qword ptr [rip+0x20fd53]
0x339d: cmp eax,0xff
0x33a0: jz 0x3420
0x33a2: test eax,eax
0x33a4: jnz 0x3410
0x33a6: mov rax,rbp
0x33a9: sub rax,rbx
0x33ac: add rbx,0x200
0x33b3: cmp rax,0x1ff
0x33b9: jbe 0x3381
0x33bb: cmp [rbx-0x1],0xa
0x33bf: lea rax,[rbx-0x1]
0x33c3: jz 0x33d5
0x33c5: nop qword ptr [rax]
0x33c8: mov rbx,rax
0x33cb: cmp [rbx-0x1],0xa
0x33cf: lea rax,[rbx-0x1]
0x33d3: jnz 0x33c8
0x33d5: mov qword ptr [rip+0x20fd1c],rbx
0x33dc: sub rbp,rbx
0x33df: call 0x3030
0x33e4: mov rcx,qword ptr [rip+0x20fd05]
0x33eb: mov rdx,rbp
0x33ee: mov rsi,rbx
0x33f1: mov rdi,rcx
0x33f4: call 0x20a0
0x33f9: add rbp,rax
0x33fc: mov qword ptr [rip+0x20fcf5],rbp
0x3403: add rsp,0x8
0x3407: pop rbx
0x3408: pop rbp
0x3409: ret
0x340a: nop qword ptr [rax+rax*1+0x0]
0x3410: add rsp,0x8
0x3414: pop rbx
0x3415: pop rbp
0x3416: jmp 0x3030
0x341b: nop qword ptr [rax+rax*1+0x0]
0x3420: xor edi,edi
0x3422: call 0x1e60
0x3427: mov dword ptr [rip+0x20fbe3],eax
0x342d: jmp 0x33a2
0x3492: nop qword ptr [rax+rax*1+0x0]
0x34e2: nop qword ptr [rax+rax*1+0x0]
0x355f: nop 
0x35e7: nop qword ptr [rax+rax*1+0x0]
0x36ac: nop qword ptr [rax+0x0]
0x36d2: nop qword ptr [rax+rax*1+0x0]
0x36e8: nop qword ptr [rax+rax*1+0x0]
0x382c: xor r15d,r15d
0x382f: mov rdx,r15
0x3832: mov rsi,r13
0x3835: mov rdi,rbx
0x3838: shl rdx,0x4
0x383c: add rdx,qword ptr [rsp+0x20]
0x3841: add r15,0x1
0x3845: call 0x1f40
0x384a: mov rcx,r12
0x384d: mov rdx,rbx
0x3850: mov rsi,rbp
0x3853: mov rdi,rbx
0x3856: call 0x1f10
0x385b: mov esi,0x1
0x3860: mov rdi,rbx
0x3863: call 0x2260
0x3868: cmp r15,qword ptr [rsp+0x30]
0x386d: jnb 0x3920
0x3873: test eax,eax
0x3875: jnz 0x382f
0x3877: nop qword ptr [rax+rax*1+0x0]
0x3880: movzx edx,byte ptr [r14]
0x3884: mov rsi,rbp
0x3887: mov rdi,rbp
0x388a: call 0x2090
0x388f: mov r9,qword ptr [rsp+0x8]
0x3894: mov r8,qword ptr [rsp]
0x3898: mov rcx,rbx
0x389b: mov rdx,rbp
0x389e: mov rsi,r13
0x38a1: mov rdi,r12
0x38a4: call 0x3440
0x38a9: test al,al
0x38ab: jz 0x3960
0x38b1: lea rax,[rip+0xc744]
0x38b8: add r14,0x1
0x38bc: cmp r14,rax
0x38bf: jnz 0x3820
0x38c5: lea rsi,[rip+0x91fc]
0x38cc: mov edx,0x5
0x38d1: xor edi,edi
0x38d3: call 0x1ee0
0x38d8: xor esi,esi
0x38da: mov rdx,rax
0x38dd: xor edi,edi
0x38df: xor eax,eax
0x38e1: call 0x21e0
0x38e6: call 0x1de0
0x38eb: nop qword ptr [rax+rax*1+0x0]
0x391f: nop 
0x3920: test eax,eax
0x3922: jz 0x3880
0x3928: nop qword ptr [rax+rax*1+0x0]
0x3953: nop qword ptr [rax+rax*1+0x0]
0x395f: nop 
0x3960: mov [rsp+0x17],0x0
0x3965: jmp 0x3930
0x3a55: nop qword ptr [rax]
0x3b96: nop qword ptr [rax+rax*1+0x0]
0x3c9b: nop qword ptr [rax+rax*1+0x0]
0x3d70: push r15
0x3d72: push r14
0x3d74: push r13
0x3d76: push r12
0x3d78: push rbp
0x3d79: push rbx
0x3d7a: sub rsp,0x38
0x3d7e: cmp rdi,0x1
0x3d82: mov qword ptr [rsp+0x8],rdx
0x3d87: jbe 0x4151
0x3d8d: lea rax,[rsi+0x1]
0x3d91: mov r13,rdi
0x3d94: mov qword ptr [rsp+0x20],rax
0x3d99: mov rax,qword ptr [rsp+0x20]
0x3d9e: mov ecx,0x1
0x3da3: mov rsi,r13
0x3da6: mov edi,0x40
0x3dab: xor r12d,r12d
0x3dae: mov rdx,rcx
0x3db1: sub rax,0x1
0x3db5: mov qword ptr [rsp],rax
0x3db9: xor eax,eax
0x3dbb: nop qword ptr [rax+rax*1+0x0]
0x3dc0: mov rcx,rsi
0x3dc3: shr rax,0x1
0x3dc6: shr rsi,0x1
0x3dc9: shl rcx,0x3f
0x3dcd: or rax,rcx
0x3dd0: cmp rsi,rdx
0x3dd3: jb 0x3ddc
0x3dd5: jnz 0x3de2
0x3dd7: cmp rax,r12
0x3dda: jnbe 0x3de2
0x3ddc: sub r12,rax
0x3ddf: sbb rdx,rsi
0x3de2: sub edi,0x1
0x3de5: jnz 0x3dc0
0x3de7: mov rax,r13
0x3dea: xor ebp,ebp
0x3dec: sub rax,r12
0x3def: cmp rax,r12
0x3df2: setnbe bpl
0x3df6: neg rbp
0x3df9: mov rax,rbp
0x3dfc: lea rbp,[r12+r12*1+0x0]
0x3e00: and rax,r13
0x3e03: sub rbp,r13
0x3e06: add rbp,rax
0x3e09: cmp r13,qword ptr [rsp]
0x3e0d: jbe 0x40ab
0x3e13: mov rbx,rbp
0x3e16: mov r15,rbp
0x3e19: mov ecx,0x1
0x3e1e: mov r14d,0x1
0x3e24: mov rax,r13
0x3e27: lea rsi,[rip+0x91b2]
0x3e2e: mov r10,r13
0x3e31: shr rax,0x1
0x3e34: mov r11,rcx
0x3e37: and eax,0x7f
0x3e3a: movzx eax,byte ptr [rsi+rax*1+0x0]
0x3e3e: lea rdx,[rax+rax*1+0x0]
0x3e42: imul rax,rax
0x3e46: imul rax,r13
0x3e4a: sub rdx,rax
0x3e4d: lea rax,[rdx+rdx*1+0x0]
0x3e51: imul rdx,rdx
0x3e55: imul rdx,r13
0x3e59: sub rax,rdx
0x3e5c: lea r8,[rax+rax*1+0x0]
0x3e60: imul rax,rax
0x3e64: imul rax,r13
0x3e68: sub r8,rax
0x3e6b: mov rax,qword ptr [rsp]
0x3e6f: sub r10,rax
0x3e72: sub rax,r13
0x3e75: mov r9,rax
0x3e78: nop qword ptr [rax+rax*1+0x0]
0x3e80: mov rax,rbp
0x3e83: mul rbp
0x3e86: mov rcx,rdx
0x3e89: mov rsi,rcx
0x3e8c: imul rax,r8
0x3e90: mul r13
0x3e93: sub rsi,rdx
0x3e96: cmp rcx,rdx
0x3e99: lea rax,[rsi+r13*1+0x0]
0x3e9d: cmovnae rsi,rax
0x3ea1: mov rax,r15
0x3ea4: cmp rsi,r10
0x3ea7: sbb rbp,rbp
0x3eaa: add rsi,r9
0x3ead: and rbp,r13
0x3eb0: add rbp,rsi
0x3eb3: cmp r15,rbp
0x3eb6: sbb rcx,rcx
0x3eb9: sub rax,rbp
0x3ebc: and rcx,r13
0x3ebf: add rcx,rax
0x3ec2: mov rax,r12
0x3ec5: mul rcx
0x3ec8: mov rcx,rdx
0x3ecb: mov r12,rcx
0x3ece: imul rax,r8
0x3ed2: mul r13
0x3ed5: sub r12,rdx
0x3ed8: cmp rcx,rdx
0x3edb: lea rax,[r12+r13*1+0x0]
0x3edf: cmovnae r12,rax
0x3ee3: mov rax,r14
0x3ee6: and eax,0x1f
0x3ee9: cmp rax,0x1
0x3eed: jz 0x3f50
0x3eef: sub r14,0x1
0x3ef3: jnz 0x3e80
0x3ef5: test r11,r11
0x3ef8: lea rsi,[r11+r11*1+0x0]
0x3efc: jz 0x40d0
0x3f02: mov rax,rbp
0x3f05: nop qword ptr [rax]
0x3f08: mul rax
0x3f0b: mov rcx,rdx
0x3f0e: mov rdi,rcx
0x3f11: imul rax,r8
0x3f15: mul r13
0x3f18: sub rdi,rdx
0x3f1b: cmp rcx,rdx
0x3f1e: lea rax,[rdi+r13*1+0x0]
0x3f22: cmovnae rdi,rax
0x3f26: cmp rdi,r10
0x3f29: sbb rax,rax
0x3f2c: add rdi,r9
0x3f2f: add r14,0x1
0x3f33: and rax,r13
0x3f36: add rax,rdi
0x3f39: cmp r11,r14
0x3f3c: jnz 0x3f08
0x3f3e: mov r15,rbp
0x3f41: mov rbx,rax
0x3f44: mov r11,rsi
0x3f47: mov rbp,rax
0x3f4a: jmp 0x3e80
0x3f4f: nop 
0x3f50: mov rsi,r13
0x3f53: mov rdi,r12
0x3f56: call 0x26a0
0x3f5b: cmp rax,0x1
0x3f5f: jnz 0x3f70
0x3f61: mov rbx,rbp
0x3f64: jmp 0x3eef
0x3f66: nop qword ptr [rax+rax*1+0x0]
0x3f70: mov rax,rbx
0x3f73: mul rbx
0x3f76: mov rcx,rdx
0x3f79: mov rsi,rcx
0x3f7c: imul rax,r8
0x3f80: mul r13
0x3f83: sub rsi,rdx
0x3f86: cmp rcx,rdx
0x3f89: lea rax,[rsi+r13*1+0x0]
0x3f8d: cmovnae rsi,rax
0x3f91: cmp rsi,r10
0x3f94: sbb rax,rax
0x3f97: add rsi,r9
0x3f9a: and rax,r13
0x3f9d: lea rbx,[rax+rsi*1+0x0]
0x3fa1: mov rax,r15
0x3fa4: mov rsi,r13
0x3fa7: cmp r15,rbx
0x3faa: sbb rdi,rdi
0x3fad: sub rax,rbx
0x3fb0: and rdi,r13
0x3fb3: add rdi,rax
0x3fb6: call 0x26a0
0x3fbb: cmp rax,0x1
0x3fbf: jz 0x3f70
0x3fc1: cmp r13,rax
0x3fc4: mov rcx,r11
0x3fc7: mov r11,rax
0x3fca: jz 0x4146
0x3fd0: mov rax,r13
0x3fd3: xor edx,edx
0x3fd5: div r11
0x3fd8: cmp r11,0x1
0x3fdc: mov r8,rax
0x3fdf: mov r13,rax
0x3fe2: jbe 0x401f
0x3fe4: cmp r11,0x17ded78
0x3feb: jbe 0x40e8
0x3ff1: mov rdi,r11
0x3ff4: mov qword ptr [rsp+0x18],rcx
0x3ff9: mov qword ptr [rsp+0x10],r11
0x3ffe: mov qword ptr [rsp+0x28],rax
0x4003: call 0x4f80
0x4008: test al,al
0x400a: mov r11,qword ptr [rsp+0x10]
0x400f: mov rcx,qword ptr [rsp+0x18]
0x4014: mov r8,qword ptr [rsp+0x28]
0x4019: jnz 0x40e8
0x401f: mov rdx,qword ptr [rsp+0x8]
0x4024: mov rsi,qword ptr [rsp+0x20]
0x4029: mov rdi,r11
0x402c: mov qword ptr [rsp+0x18],r8
0x4031: mov qword ptr [rsp+0x10],rcx
0x4036: call 0x3d70
0x403b: mov r8,qword ptr [rsp+0x18]
0x4040: mov rcx,qword ptr [rsp+0x10]
0x4045: cmp r8,0x1
0x4049: jbe 0x4118
0x404f: cmp r8,0x17ded78
0x4056: jbe 0x4126
0x405c: mov rdi,r8
0x405f: mov qword ptr [rsp+0x18],rcx
0x4064: mov qword ptr [rsp+0x10],r8
0x4069: call 0x4f80
0x406e: test al,al
0x4070: mov r8,qword ptr [rsp+0x10]
0x4075: mov rcx,qword ptr [rsp+0x18]
0x407a: jnz 0x4126
0x4080: mov rax,rbp
0x4083: xor edx,edx
0x4085: div r8
0x4088: mov rax,r15
0x408b: mov rbp,rdx
0x408e: xor edx,edx
0x4090: div r8
0x4093: mov rax,rbx
0x4096: mov r15,rdx
0x4099: xor edx,edx
0x409b: div r8
0x409e: mov rbx,rdx
0x40a1: cmp r8,qword ptr [rsp]
0x40a5: jnbe 0x3e24
0x40ab: lea rcx,[rip+0x8ece]
0x40b2: lea rsi,[rip+0x898f]
0x40b9: lea rdi,[rip+0x8d43]
0x40c0: mov edx,0x5c8
0x40c5: call 0x1fe0
0x40ca: nop qword ptr [rax+rax*1+0x0]
0x40d0: mov r14,r11
0x40d3: mov rbx,rbp
0x40d6: mov r11,rsi
0x40d9: mov r15,rbp
0x40dc: jmp 0x3e80
0x40e1: nop qword ptr [rax+0x0]
0x40e8: mov rdi,qword ptr [rsp+0x8]
0x40ed: mov edx,0x1
0x40f2: mov rsi,r11
0x40f5: mov qword ptr [rsp+0x18],r8
0x40fa: mov qword ptr [rsp+0x10],rcx
0x40ff: call 0x2700
0x4104: mov r8,qword ptr [rsp+0x18]
0x4109: mov rcx,qword ptr [rsp+0x10]
0x410e: cmp r8,0x1
0x4112: jnbe 0x404f
0x4118: jz 0x4170
0x411a: xor ebx,ebx
0x411c: xor r15d,r15d
0x411f: xor ebp,ebp
0x4121: jmp 0x40a1
0x4126: mov rdi,qword ptr [rsp+0x8]
0x412b: add rsp,0x38
0x412f: mov edx,0x1
0x4134: pop rbx
0x4135: pop rbp
0x4136: pop r12
0x4138: pop r13
0x413a: pop r14
0x413c: pop r15
0x413e: mov rsi,r8
0x4141: jmp 0x2700
0x4146: add [rsp+0x20],0x1
0x414c: jmp 0x3d99
0x4151: lea rcx,[rip+0x8e28]
0x4158: lea rsi,[rip+0x88e9]
0x415f: lea rdi,[rip+0x8c93]
0x4166: mov edx,0x5c2
0x416b: call 0x1fe0
0x4170: add rsp,0x38
0x4174: pop rbx
0x4175: pop rbp
0x4176: pop r12
0x4178: pop r13
0x417a: pop r14
0x417c: pop r15
0x417e: ret
0x4180: push r15
0x4182: push r14
0x4184: push r13
0x4186: push r12
0x4188: mov r12,rsi
0x418b: push rbp
0x418c: push rbx
0x418d: mov rbp,rdi
0x4190: sub rsp,0xa8
0x4197: mov rax,0x28
0x41a0: mov qword ptr [rsp+0x98],rax
0x41a8: xor eax,eax
0x41aa: cmp rdi,0x2
0x41ae: mov qword ptr [rsp+0x50],rcx
0x41b3: mov qword ptr [rsp+0x28],rdx
0x41b8: sbb rax,rax
0x41bb: xor ecx,ecx
0x41bd: and eax,0x40
0x41c0: add rax,0x40
0x41c4: cmp rdi,0x2
0x41c8: setb cl
0x41cb: sbb rbx,rbx
0x41ce: add rbx,0x1
0x41d2: mov rdx,rbx
0x41d5: sub rax,0x1
0x41d9: cmp rax,0xffffffff
0x41dd: jz 0x420b
0x41df: mov rsi,rcx
0x41e2: add rdx,rdx
0x41e5: add rcx,rcx
0x41e8: shr rsi,0x3f
0x41ec: or rdx,rsi
0x41ef: cmp rbp,rdx
0x41f2: jb 0x41fb
0x41f4: jnz 0x41d5
0x41f6: cmp r12,rcx
0x41f9: jnbe 0x41d5
0x41fb: sub rax,0x1
0x41ff: sub rcx,r12
0x4202: sbb rdx,rbp
0x4205: cmp rax,0xffffffff
0x4209: jnz 0x41df
0x420b: mov rax,rdx
0x420e: mov qword ptr [rsp+0x18],rdx
0x4213: mov rdx,rcx
0x4216: add rdx,rcx
0x4219: adc rax,rax
0x421c: cmp rax,rbp
0x421f: mov qword ptr [rsp+0x20],rcx
0x4224: mov qword ptr [rsp+0x70],rax
0x4229: mov rbx,rdx
0x422c: mov rsi,rax
0x422f: jnbe 0x4238
0x4231: jnz 0x4249
0x4233: cmp rdx,r12
0x4236: jb 0x4249
0x4238: mov rsi,rax
0x423b: mov rbx,rdx
0x423e: sub rbx,r12
0x4241: sbb rsi,rbp
0x4244: mov qword ptr [rsp+0x70],rsi
0x4249: cmp r12,0x1
0x424d: mov qword ptr [rsp+0x78],rsi
0x4252: mov qword ptr [rsp+0x80],rsi
0x425a: jnz 0x4265
0x425c: test rbp,rbp
0x425f: jz 0x465a
0x4265: lea rax,[rsp+0x90]
0x426d: mov r15,rbx
0x4270: mov qword ptr [rsp+0x30],rbx
0x4275: mov [rsp+0x8],0x1
0x427e: mov r13d,0x1
0x4284: mov qword ptr [rsp+0x10],rax
0x4289: lea rax,[rsp+0x88]
0x4291: mov qword ptr [rsp+0x38],rax
0x4296: lea rax,[rsp+0x70]
0x429b: mov qword ptr [rsp+0x58],rax
0x42a0: lea rax,[rsp+0x78]
0x42a5: mov qword ptr [rsp+0x60],rax
0x42aa: lea rax,[rsp+0x80]
0x42b2: mov qword ptr [rsp+0x68],rax
0x42b7: nop qword ptr [rax+rax*1+0x0]
0x42c0: mov rax,r12
0x42c3: lea rdi,[rip+0x8d16]
0x42ca: shr rax,0x1
0x42cd: and eax,0x7f
0x42d0: movzx eax,byte ptr [rdi+rax*1+0x0]
0x42d4: lea rdx,[rax+rax*1+0x0]
0x42d8: imul rax,rax
0x42dc: imul rax,r12
0x42e0: sub rdx,rax
0x42e3: lea rax,[rdx+rdx*1+0x0]
0x42e7: imul rdx,rdx
0x42eb: imul rdx,r12
0x42ef: sub rax,rdx
0x42f2: lea r14,[rax+rax*1+0x0]
0x42f6: imul rax,rax
0x42fa: imul rax,r12
0x42fe: sub r14,rax
0x4301: mov rax,r15
0x4304: mov r15,rbx
0x4307: mov rbx,rax
0x430a: nop qword ptr [rax+rax*1+0x0]
0x4310: push r14
0x4312: push r12
0x4314: mov rcx,rsi
0x4317: mov rdi,qword ptr [rsp+0x20]
0x431c: mov rdx,r15
0x431f: mov r8,r15
0x4322: mov r9,rbp
0x4325: call 0x2960
0x432a: mov rdx,qword ptr [rsp+0xa0]
0x4332: add rax,qword ptr [rsp+0x38]
0x4337: adc rdx,0x0
0x433b: cmp rbp,rdx
0x433e: mov qword ptr [rsp+0x80],rdx
0x4346: mov r15,rax
0x4349: pop rcx
0x434a: mov rsi,rdx
0x434d: pop rdi
0x434e: jb 0x4357
0x4350: jnz 0x4368
0x4352: cmp r12,rax
0x4355: jnbe 0x4368
0x4357: sub rax,r12
0x435a: sbb rdx,rbp
0x435d: mov qword ptr [rsp+0x70],rdx
0x4362: mov r15,rax
0x4365: mov rsi,rdx
0x4368: mov rcx,qword ptr [rsp+0x78]
0x436d: mov r8,qword ptr [rsp+0x30]
0x4372: sub r8,r15
0x4375: sbb rcx,rsi
0x4378: test rcx,rcx
0x437b: jns 0x4383
0x437d: add r8,r12
0x4380: adc rcx,rbp
0x4383: push r14
0x4385: push r12
0x4387: mov r9,rbp
0x438a: mov rdx,qword ptr [rsp+0x30]
0x438f: mov rsi,qword ptr [rsp+0x28]
0x4394: mov rdi,qword ptr [rsp+0x20]
0x4399: call 0x2960
0x439e: mov qword ptr [rsp+0x30],rax
0x43a3: mov rax,qword ptr [rsp+0xa0]
0x43ab: mov qword ptr [rsp+0x28],rax
0x43b0: mov rax,r13
0x43b3: and eax,0x1f
0x43b6: cmp rax,0x1
0x43ba: pop r10
0x43bc: pop r11
0x43be: jz 0x44a0
0x43c4: mov rsi,qword ptr [rsp+0x70]
0x43c9: sub r13,0x1
0x43cd: jnz 0x4310
0x43d3: mov rax,qword ptr [rsp+0x8]
0x43d8: mov qword ptr [rsp+0x78],rsi
0x43dd: lea rbx,[rax+rax*1+0x0]
0x43e1: test rax,rax
0x43e4: mov qword ptr [rsp+0x30],rbx
0x43e9: mov rbx,r15
0x43ec: jz 0x4476
0x43f2: mov qword ptr [rsp+0x40],r15
0x43f7: mov rdx,r15
0x43fa: mov rbx,r13
0x43fd: mov r15,qword ptr [rsp+0x10]
0x4402: mov r13,qword ptr [rsp+0x28]
0x4407: nop qword ptr [rax+rax*1+0x0]
0x4410: push r14
0x4412: push r12
0x4414: mov r8,rdx
0x4417: mov rcx,rsi
0x441a: mov r9,rbp
0x441d: mov rdi,r15
0x4420: call 0x2960
0x4425: mov rcx,qword ptr [rsp+0xa0]
0x442d: add rax,r13
0x4430: adc rcx,0x0
0x4434: cmp rbp,rcx
0x4437: mov qword ptr [rsp+0x80],rcx
0x443f: mov rdx,rax
0x4442: pop r8
0x4444: mov rsi,rcx
0x4447: pop r9
0x4449: jb 0x4452
0x444b: jnz 0x4463
0x444d: cmp r12,rax
0x4450: jnbe 0x4463
0x4452: mov rsi,rcx
0x4455: sub rax,r12
0x4458: sbb rsi,rbp
0x445b: mov qword ptr [rsp+0x70],rsi
0x4460: mov rdx,rax
0x4463: add rbx,0x1
0x4467: cmp qword ptr [rsp+0x8],rbx
0x446c: jnz 0x4410
0x446e: mov r15,qword ptr [rsp+0x40]
0x4473: mov rbx,rdx
0x4476: mov rax,qword ptr [rsp+0x30]
0x447b: mov r13,qword ptr [rsp+0x8]
0x4480: mov qword ptr [rsp+0x30],r15
0x4485: mov qword ptr [rsp+0x80],rsi
0x448d: mov r15,rbx
0x4490: mov qword ptr [rsp+0x8],rax
0x4495: jmp 0x4310
0x449a: nop qword ptr [rax+rax*1+0x0]
0x44a0: mov rdx,qword ptr [rsp+0x20]
0x44a5: mov rsi,qword ptr [rsp+0x18]
0x44aa: mov r8,r12
0x44ad: mov rdi,qword ptr [rsp+0x38]
0x44b2: mov rcx,rbp
0x44b5: call 0x30f0
0x44ba: cmp [rsp+0x88],0x0
0x44c3: jnz 0x44e0
0x44c5: cmp rax,0x1
0x44c9: jnz 0x44e0
0x44cb: mov rsi,qword ptr [rsp+0x70]
0x44d0: mov rbx,r15
0x44d3: mov qword ptr [rsp+0x80],rsi
0x44db: jmp 0x43c9
0x44e0: mov qword ptr [rsp+0x40],r13
0x44e5: mov qword ptr [rsp+0x48],r15
0x44ea: mov r13,rbx
0x44ed: mov r15,qword ptr [rsp+0x30]
0x44f2: mov rbx,qword ptr [rsp+0x10]
0x44f7: jmp 0x450a
0x44f9: nop qword ptr [rax+0x0]
0x4500: cmp rax,0x1
0x4504: jnz 0x4688
0x450a: mov rsi,qword ptr [rsp+0x80]
0x4512: push r14
0x4514: mov rdx,r13
0x4517: push r12
0x4519: mov r8,r13
0x451c: mov rdi,rbx
0x451f: mov r9,rbp
0x4522: mov rcx,rsi
0x4525: call 0x2960
0x452a: mov rdx,qword ptr [rsp+0xa0]
0x4532: add rax,qword ptr [rsp+0x38]
0x4537: adc rdx,0x0
0x453b: cmp rbp,rdx
0x453e: mov qword ptr [rsp+0x90],rdx
0x4546: mov r13,rax
0x4549: pop rsi
0x454a: mov rcx,rdx
0x454d: pop rdi
0x454e: jb 0x4557
0x4550: jnz 0x456b
0x4552: cmp r12,rax
0x4555: jnbe 0x456b
0x4557: sub rax,r12
0x455a: sbb rdx,rbp
0x455d: mov qword ptr [rsp+0x80],rdx
0x4565: mov r13,rax
0x4568: mov rcx,rdx
0x456b: mov rsi,qword ptr [rsp+0x78]
0x4570: mov rdx,r15
0x4573: sub rdx,r13
0x4576: sbb rsi,rcx
0x4579: test rsi,rsi
0x457c: jns 0x4584
0x457e: add rdx,r12
0x4581: adc rsi,rbp
0x4584: mov rdi,qword ptr [rsp+0x38]
0x4589: mov r8,r12
0x458c: mov rcx,rbp
0x458f: call 0x30f0
0x4594: mov rdi,qword ptr [rsp+0x88]
0x459c: test rdi,rdi
0x459f: jz 0x4500
0x45a5: cmp r12,rax
0x45a8: mov r8,rax
0x45ab: jz 0x47d7
0x45b1: mov rax,r8
0x45b4: lea rbx,[rip+0x8a25]
0x45bb: mov rsi,r8
0x45be: shr rax,0x1
0x45c1: mov qword ptr [rsp+0x8],r8
0x45c6: and eax,0x7f
0x45c9: movzx eax,byte ptr [rbx+rax*1+0x0]
0x45cd: lea rdx,[rax+rax*1+0x0]
0x45d1: imul rax,rax
0x45d5: imul rax,r8
0x45d9: sub rdx,rax
0x45dc: lea rax,[rdx+rdx*1+0x0]
0x45e0: imul rdx,rdx
0x45e4: imul rdx,r8
0x45e8: sub rax,rdx
0x45eb: lea rdx,[rax+rax*1+0x0]
0x45ef: imul rax,rax
0x45f3: imul rax,r8
0x45f7: sub rdx,rax
0x45fa: imul r12,rdx
0x45fe: call 0x58f0
0x4603: test al,al
0x4605: mov r8,qword ptr [rsp+0x8]
0x460a: jz 0x4833
0x4610: mov rsi,qword ptr [rsp+0x88]
0x4618: mov rdi,qword ptr [rsp+0x50]
0x461d: mov rdx,r8
0x4620: call 0x30a0
0x4625: cmp r12,0x1
0x4629: jbe 0x4807
0x462f: cmp r12,0x17ded78
0x4636: jbe 0x4648
0x4638: mov rdi,r12
0x463b: call 0x4f80
0x4640: test al,al
0x4642: jz 0x4807
0x4648: mov rdi,qword ptr [rsp+0x50]
0x464d: mov edx,0x1
0x4652: mov rsi,r12
0x4655: call 0x2700
0x465a: mov rax,qword ptr [rsp+0x98]
0x4662: xor rax,0x28
0x466b: jnz 0x4856
0x4671: add rsp,0xa8
0x4678: pop rbx
0x4679: pop rbp
0x467a: pop r12
0x467c: pop r13
0x467e: pop r14
0x4680: pop r15
0x4682: ret
0x4683: nop qword ptr [rax+rax*1+0x0]
0x4688: mov r8,rax
0x468b: lea rdi,[rip+0x894e]
0x4692: shr rax,0x1
0x4695: and eax,0x7f
0x4698: mov qword ptr [rsp+0x30],r15
0x469d: mov qword ptr [rsp+0x10],rbx
0x46a2: movzx eax,byte ptr [rdi+rax*1+0x0]
0x46a6: mov r15,r13
0x46a9: mov rbx,qword ptr [rsp+0x48]
0x46ae: mov r13,qword ptr [rsp+0x40]
0x46b3: lea rdx,[rax+rax*1+0x0]
0x46b7: imul rax,rax
0x46bb: imul rax,r8
0x46bf: sub rdx,rax
0x46c2: lea rax,[rdx+rdx*1+0x0]
0x46c6: imul rdx,rdx
0x46ca: imul rdx,r8
0x46ce: sub rax,rdx
0x46d1: lea rcx,[rax+rax*1+0x0]
0x46d5: imul rax,rax
0x46d9: imul rax,r8
0x46dd: sub rcx,rax
0x46e0: imul r12,rcx
0x46e4: cmp rbp,r8
0x46e7: jb 0x4800
0x46ed: mov rax,r12
0x46f0: mul r8
0x46f3: sub rbp,rdx
0x46f6: imul rbp,rcx
0x46fa: cmp r8,0x1
0x46fe: jbe 0x4727
0x4700: cmp r8,0x17ded78
0x4707: jbe 0x47c0
0x470d: mov rdi,r8
0x4710: mov qword ptr [rsp+0x40],r8
0x4715: call 0x4f80
0x471a: test al,al
0x471c: mov r8,qword ptr [rsp+0x40]
0x4721: jnz 0x47c0
0x4727: mov rax,qword ptr [rsp+0x28]
0x472c: mov rdx,qword ptr [rsp+0x50]
0x4731: mov rdi,r8
0x4734: lea rsi,[rax+0x1]
0x4738: call 0x3d70
0x473d: test rbp,rbp
0x4740: jz 0x4625
0x4746: mov rsi,r12
0x4749: mov rdi,rbp
0x474c: call 0x58f0
0x4751: test al,al
0x4753: jnz 0x481e
0x4759: mov rsi,qword ptr [rsp+0x70]
0x475e: mov rdi,qword ptr [rsp+0x58]
0x4763: mov rdx,rbx
0x4766: mov r8,r12
0x4769: mov rcx,rbp
0x476c: call 0x3200
0x4771: mov rdx,qword ptr [rsp+0x30]
0x4776: mov rsi,qword ptr [rsp+0x78]
0x477b: mov r8,r12
0x477e: mov rdi,qword ptr [rsp+0x60]
0x4783: mov rcx,rbp
0x4786: mov rbx,rax
0x4789: call 0x3200
0x478e: mov rsi,qword ptr [rsp+0x80]
0x4796: mov rdi,qword ptr [rsp+0x68]
0x479b: mov rdx,r15
0x479e: mov r8,r12
0x47a1: mov rcx,rbp
0x47a4: mov qword ptr [rsp+0x30],rax
0x47a9: call 0x3200
0x47ae: mov rsi,qword ptr [rsp+0x70]
0x47b3: mov r15,rax
0x47b6: jmp 0x42c0
0x47bb: nop qword ptr [rax+rax*1+0x0]
0x47c0: mov rdi,qword ptr [rsp+0x50]
0x47c5: mov edx,0x1
0x47ca: mov rsi,r8
0x47cd: call 0x2700
0x47d2: jmp 0x473d
0x47d7: cmp rbp,rdi
0x47da: jnz 0x45b1
0x47e0: mov rdx,qword ptr [rsp+0x28]
0x47e5: mov rcx,qword ptr [rsp+0x50]
0x47ea: mov rsi,r12
0x47ed: mov rdi,rbp
0x47f0: add rdx,0x1
0x47f4: call 0x4180
0x47f9: jmp 0x465a
0x47fe: nop 
0x4800: xor ebp,ebp
0x4802: jmp 0x46fa
0x4807: mov rdx,qword ptr [rsp+0x50]
0x480c: mov rsi,qword ptr [rsp+0x28]
0x4811: mov rdi,r12
0x4814: call 0x3d70
0x4819: jmp 0x465a
0x481e: mov rdi,qword ptr [rsp+0x50]
0x4823: mov rdx,r12
0x4826: mov rsi,rbp
0x4829: call 0x30a0
0x482e: jmp 0x465a
0x4833: mov rax,qword ptr [rsp+0x28]
0x4838: mov rcx,qword ptr [rsp+0x50]
0x483d: mov rsi,r8
0x4840: mov rdi,qword ptr [rsp+0x88]
0x4848: lea rdx,[rax+0x1]
0x484c: call 0x4180
0x4851: jmp 0x4625
0x4856: call 0x1f20
0x4860: push r15
0x4862: push r14
0x4864: mov r8,rdi
0x4867: push r13
0x4869: push r12
0x486b: mov r13,rdx
0x486e: push rbp
0x486f: push rbx
0x4870: mov rbx,rsi
0x4873: sub rsp,0x38
0x4877: test rdi,rdi
0x487a: mov [rdx+0xfa],0x0
0x4881: mov [rdx+0x8],0x0
0x4889: jnz 0x48a0
0x488b: cmp rsi,0x1
0x488f: jnbe 0x48a0
0x4891: add rsp,0x38
0x4895: pop rbx
0x4896: pop rbp
0x4897: pop r12
0x4899: pop r13
0x489b: pop r14
0x489d: pop r15
0x489f: ret
0x48a0: test bl,0x1
0x48a3: jz 0x4e70
0x48a9: test r8,r8
0x48ac: jz 0x4e96
0x48b2: lea rcx,[rip+0x87af]
0x48b9: mov r14d,0x1
0x48bf: mov r9,-0x6148914691236517205
0x48c9: mov r12d,0x2
0x48cf: mov ebp,0x3
0x48d4: jmp 0x4912
0x48d6: nop qword ptr [rax+rax*1+0x0]
0x48e0: mov eax,r14d
0x48e3: add rbp,r12
0x48e6: add r14,0x1
0x48ea: add rcx,0x10
0x48ee: test r8,r8
0x48f1: jz 0x49a0
0x48f7: cmp eax,0x29b
0x48fc: jnbe 0x49a0
0x4902: lea rax,[rip+0xb457]
0x4909: mov r9,qword ptr [rcx-0x8]
0x490d: movzx r12d,byte ptr [rax+r14*1+0x0]
0x4912: mov r10,r9
0x4915: imul r10,rbx
0x4919: mov rax,r10
0x491c: mul rbp
0x491f: cmp r8,rdx
0x4922: jb 0x48e0
0x4924: mov r15,r8
0x4927: mov r11,qword ptr [rcx]
0x492a: sub r15,rdx
0x492d: imul r15,r9
0x4931: cmp r15,r11
0x4934: jnbe 0x48e0
0x4936: mov edx,0x1
0x493b: mov rsi,rbp
0x493e: mov rdi,r13
0x4941: mov qword ptr [rsp+0x20],r11
0x4946: mov qword ptr [rsp+0x18],r10
0x494b: mov qword ptr [rsp+0x10],rcx
0x4950: mov qword ptr [rsp+0x8],r9
0x4955: call 0x2700
0x495a: mov r9,qword ptr [rsp+0x8]
0x495f: mov r10,qword ptr [rsp+0x18]
0x4964: mov rcx,qword ptr [rsp+0x10]
0x4969: mov r11,qword ptr [rsp+0x20]
0x496e: mov rsi,r9
0x4971: imul rsi,r10
0x4975: mov rax,rsi
0x4978: mul rbp
0x497b: cmp rdx,r15
0x497e: jnbe 0x4993
0x4980: mov rax,r15
0x4983: sub rax,rdx
0x4986: imul rax,r9
0x498a: cmp rax,r11
0x498d: jbe 0x4f6c
0x4993: mov r8,r15
0x4996: mov rbx,r10
0x4999: jmp 0x48e0
0x499e: nop 
0x49a0: cmp eax,0x29b
0x49a5: jnbe 0x4cd0
0x49ab: mov ecx,eax
0x49ad: lea rsi,[rip+0x86ac]
0x49b4: mov rdx,rcx
0x49b7: shl rdx,0x4
0x49bb: mov qword ptr [rsp+0x8],rsi
0x49c0: add rdx,rsi
0x49c3: mov r10,qword ptr [rdx]
0x49c6: mov r11,qword ptr [rdx+0x8]
0x49ca: lea rdx,[rip+0xb0cf]
0x49d1: movzx r12d,byte ptr [rdx+rcx*1+0x0]
0x49d6: lea r15,[rip+0xb383]
0x49dd: jmp 0x4aa8
0x49e2: nop qword ptr [rax+rax*1+0x0]
0x49e8: mov rdx,qword ptr [r14+0x10]
0x49ec: imul rdx,rbx
0x49f0: cmp rdx,qword ptr [r14+0x18]
0x49f4: jbe 0x4b20
0x49fa: mov rdx,qword ptr [r14+0x20]
0x49fe: imul rdx,rbx
0x4a02: cmp rdx,qword ptr [r14+0x28]
0x4a06: jbe 0x4b80
0x4a0c: mov rdx,qword ptr [r14+0x30]
0x4a10: imul rdx,rbx
0x4a14: cmp qword ptr [r14+0x38],rdx
0x4a18: jnb 0x4be8
0x4a1e: mov rdx,qword ptr [r14+0x40]
0x4a22: imul rdx,rbx
0x4a26: cmp qword ptr [r14+0x48],rdx
0x4a2a: jnb 0x4c60
0x4a30: mov rdx,qword ptr [r14+0x50]
0x4a34: imul rdx,rbx
0x4a38: cmp rdx,qword ptr [r14+0x58]
0x4a3c: jbe 0x4e00
0x4a42: mov rdx,qword ptr [r14+0x60]
0x4a46: imul rdx,rbx
0x4a4a: cmp qword ptr [r14+0x68],rdx
0x4a4e: jnb 0x4d90
0x4a54: mov rdx,qword ptr [r14+0x70]
0x4a58: imul rdx,rbx
0x4a5c: cmp rdx,qword ptr [r14+0x78]
0x4a60: jbe 0x4d20
0x4a66: add rbp,r12
0x4a69: mov rdx,rbp
0x4a6c: imul rdx,rbp
0x4a70: cmp rbx,rdx
0x4a73: jb 0x4cd0
0x4a79: add eax,0x8
0x4a7c: cmp eax,0x29b
0x4a81: jnbe 0x4cd0
0x4a87: mov ecx,eax
0x4a89: lea rsi,[rip+0xb010]
0x4a90: mov rdx,rcx
0x4a93: shl rdx,0x4
0x4a97: add rdx,qword ptr [rsp+0x8]
0x4a9c: movzx r12d,byte ptr [rsi+rcx*1+0x0]
0x4aa1: mov r10,qword ptr [rdx]
0x4aa4: mov r11,qword ptr [rdx+0x8]
0x4aa8: mov rdx,rbx
0x4aab: mov rsi,qword ptr [rsp+0x8]
0x4ab0: shl rcx,0x4
0x4ab4: imul rdx,r10
0x4ab8: lea r14,[rsi+rcx*1+0x0]
0x4abc: cmp rdx,r11
0x4abf: jnbe 0x49e8
0x4ac5: mov rbx,rdx
0x4ac8: mov rsi,rbp
0x4acb: mov edx,0x1
0x4ad0: mov rdi,r13
0x4ad3: mov qword ptr [rsp+0x28],r8
0x4ad8: mov qword ptr [rsp+0x20],r11
0x4add: mov qword ptr [rsp+0x18],r10
0x4ae2: mov dword ptr [rsp+0x10],eax
0x4ae6: call 0x2700
0x4aeb: mov r10,qword ptr [rsp+0x18]
0x4af0: mov rdx,rbx
0x4af3: mov r11,qword ptr [rsp+0x20]
0x4af8: mov eax,dword ptr [rsp+0x10]
0x4afc: mov r8,qword ptr [rsp+0x28]
0x4b01: imul rdx,r10
0x4b05: cmp rdx,r11
0x4b08: jbe 0x4ac5
0x4b0a: mov rdx,qword ptr [r14+0x10]
0x4b0e: imul rdx,rbx
0x4b12: cmp rdx,qword ptr [r14+0x18]
0x4b16: jnbe 0x49fa
0x4b1c: nop qword ptr [rax+0x0]
0x4b20: lea esi,[rax+0x1]
0x4b23: movzx esi,byte ptr [r15+rsi*1+0x0]
0x4b28: lea rcx,[rsi+rbp*1+0x0]
0x4b2c: mov qword ptr [rsp+0x20],rcx
0x4b31: mov rsi,qword ptr [rsp+0x20]
0x4b36: mov rbx,rdx
0x4b39: mov rdi,r13
0x4b3c: mov edx,0x1
0x4b41: mov qword ptr [rsp+0x18],r8
0x4b46: mov dword ptr [rsp+0x10],eax
0x4b4a: call 0x2700
0x4b4f: mov rdx,qword ptr [r14+0x10]
0x4b53: mov eax,dword ptr [rsp+0x10]
0x4b57: mov r8,qword ptr [rsp+0x18]
0x4b5c: imul rdx,rbx
0x4b60: cmp rdx,qword ptr [r14+0x18]
0x4b64: jbe 0x4b31
0x4b66: mov rdx,qword ptr [r14+0x20]
0x4b6a: imul rdx,rbx
0x4b6e: cmp rdx,qword ptr [r14+0x28]
0x4b72: jnbe 0x4a0c
0x4b78: nop qword ptr [rax+rax*1+0x0]
0x4b80: lea esi,[rax+0x1]
0x4b83: lea edi,[rax+0x2]
0x4b86: movzx esi,byte ptr [r15+rsi*1+0x0]
0x4b8b: movzx edi,byte ptr [r15+rdi*1+0x0]
0x4b90: add rsi,rdi
0x4b93: lea rcx,[rsi+rbp*1+0x0]
0x4b97: mov qword ptr [rsp+0x20],rcx
0x4b9c: mov rsi,qword ptr [rsp+0x20]
0x4ba1: mov rbx,rdx
0x4ba4: mov rdi,r13
0x4ba7: mov edx,0x1
0x4bac: mov qword ptr [rsp+0x18],r8
0x4bb1: mov dword ptr [rsp+0x10],eax
0x4bb5: call 0x2700
0x4bba: mov rdx,qword ptr [r14+0x20]
0x4bbe: mov eax,dword ptr [rsp+0x10]
0x4bc2: mov r8,qword ptr [rsp+0x18]
0x4bc7: imul rdx,rbx
0x4bcb: cmp rdx,qword ptr [r14+0x28]
0x4bcf: jbe 0x4b9c
0x4bd1: mov rdx,qword ptr [r14+0x30]
0x4bd5: imul rdx,rbx
0x4bd9: cmp qword ptr [r14+0x38],rdx
0x4bdd: jb 0x4a1e
0x4be3: nop qword ptr [rax+rax*1+0x0]
0x4be8: lea esi,[rax+0x1]
0x4beb: lea edi,[rax+0x3]
0x4bee: movzx esi,byte ptr [r15+rsi*1+0x0]
0x4bf3: movzx edi,byte ptr [r15+rdi*1+0x0]
0x4bf8: add rsi,rdi
0x4bfb: lea edi,[rax+0x2]
0x4bfe: add rsi,rbp
0x4c01: movzx edi,byte ptr [r15+rdi*1+0x0]
0x4c06: lea rcx,[rsi+rdi*1+0x0]
0x4c0a: mov qword ptr [rsp+0x20],rcx
0x4c0f: mov rsi,qword ptr [rsp+0x20]
0x4c14: mov rbx,rdx
0x4c17: mov rdi,r13
0x4c1a: mov edx,0x1
0x4c1f: mov qword ptr [rsp+0x18],r8
0x4c24: mov dword ptr [rsp+0x10],eax
0x4c28: call 0x2700
0x4c2d: mov rdx,qword ptr [r14+0x30]
0x4c31: mov eax,dword ptr [rsp+0x10]
0x4c35: mov r8,qword ptr [rsp+0x18]
0x4c3a: imul rdx,rbx
0x4c3e: cmp rdx,qword ptr [r14+0x38]
0x4c42: jbe 0x4c0f
0x4c44: mov rdx,qword ptr [r14+0x40]
0x4c48: imul rdx,rbx
0x4c4c: cmp qword ptr [r14+0x48],rdx
0x4c50: jb 0x4a30
0x4c56: nop qword ptr [rax+rax*1+0x0]
0x4c60: lea ecx,[rax+0x1]
0x4c63: lea r10d,[rax+0x5]
0x4c67: mov rbx,rdx
0x4c6a: mov dword ptr [rsp+0x10],ecx
0x4c6e: mov edx,dword ptr [rsp+0x10]
0x4c72: mov rsi,rbp
0x4c75: mov edi,edx
0x4c77: add edx,0x1
0x4c7a: movzx edi,byte ptr [r15+rdi*1+0x0]
0x4c7f: add rsi,rdi
0x4c82: cmp r10d,edx
0x4c85: jnz 0x4c75
0x4c87: mov edx,0x1
0x4c8c: mov rdi,r13
0x4c8f: mov dword ptr [rsp+0x28],r10d
0x4c94: mov qword ptr [rsp+0x20],r8
0x4c99: mov dword ptr [rsp+0x18],eax
0x4c9d: call 0x2700
0x4ca2: mov rdx,qword ptr [r14+0x40]
0x4ca6: mov eax,dword ptr [rsp+0x18]
0x4caa: mov r8,qword ptr [rsp+0x20]
0x4caf: mov r10d,dword ptr [rsp+0x28]
0x4cb4: imul rdx,rbx
0x4cb8: cmp rdx,qword ptr [r14+0x48]
0x4cbc: jnbe 0x4a30
0x4cc2: mov rbx,rdx
0x4cc5: jmp 0x4c6e
0x4cc7: nop qword ptr [rax+rax*1+0x0]
0x4cd0: test r8,r8
0x4cd3: jnz 0x4ed0
0x4cd9: cmp rbx,0x1
0x4cdd: jbe 0x4891
0x4ce3: xor edi,edi
0x4ce5: mov rsi,rbx
0x4ce8: mov qword ptr [rsp+0x8],r8
0x4ced: call 0x58f0
0x4cf2: test al,al
0x4cf4: mov r8,qword ptr [rsp+0x8]
0x4cf9: jnz 0x4f50
0x4cff: add rsp,0x38
0x4d03: mov rdx,r13
0x4d06: mov rdi,rbx
0x4d09: pop rbx
0x4d0a: pop rbp
0x4d0b: pop r12
0x4d0d: pop r13
0x4d0f: pop r14
0x4d11: pop r15
0x4d13: mov esi,0x1
0x4d18: jmp 0x3d70
0x4d1d: nop qword ptr [rax]
0x4d20: lea ecx,[rax+0x1]
0x4d23: lea r10d,[rax+0x8]
0x4d27: mov rbx,rdx
0x4d2a: mov dword ptr [rsp+0x10],ecx
0x4d2e: mov edx,dword ptr [rsp+0x10]
0x4d32: mov rsi,rbp
0x4d35: nop qword ptr [rax]
0x4d38: mov edi,edx
0x4d3a: add edx,0x1
0x4d3d: movzx edi,byte ptr [r15+rdi*1+0x0]
0x4d42: add rsi,rdi
0x4d45: cmp r10d,edx
0x4d48: jnz 0x4d38
0x4d4a: mov edx,0x1
0x4d4f: mov rdi,r13
0x4d52: mov dword ptr [rsp+0x28],r10d
0x4d57: mov qword ptr [rsp+0x20],r8
0x4d5c: mov dword ptr [rsp+0x18],eax
0x4d60: call 0x2700
0x4d65: mov rdx,qword ptr [r14+0x70]
0x4d69: mov eax,dword ptr [rsp+0x18]
0x4d6d: mov r8,qword ptr [rsp+0x20]
0x4d72: mov r10d,dword ptr [rsp+0x28]
0x4d77: imul rdx,rbx
0x4d7b: cmp rdx,qword ptr [r14+0x78]
0x4d7f: jnbe 0x4a66
0x4d85: mov rbx,rdx
0x4d88: jmp 0x4d2e
0x4d8a: nop qword ptr [rax+rax*1+0x0]
0x4d90: lea ecx,[rax+0x1]
0x4d93: lea r10d,[rax+0x7]
0x4d97: mov rbx,rdx
0x4d9a: mov dword ptr [rsp+0x10],ecx
0x4d9e: mov edx,dword ptr [rsp+0x10]
0x4da2: mov rsi,rbp
0x4da5: nop qword ptr [rax]
0x4da8: mov edi,edx
0x4daa: add edx,0x1
0x4dad: movzx edi,byte ptr [r15+rdi*1+0x0]
0x4db2: add rsi,rdi
0x4db5: cmp r10d,edx
0x4db8: jnz 0x4da8
0x4dba: mov edx,0x1
0x4dbf: mov rdi,r13
0x4dc2: mov dword ptr [rsp+0x28],r10d
0x4dc7: mov qword ptr [rsp+0x20],r8
0x4dcc: mov dword ptr [rsp+0x18],eax
0x4dd0: call 0x2700
0x4dd5: mov rdx,qword ptr [r14+0x60]
0x4dd9: mov eax,dword ptr [rsp+0x18]
0x4ddd: mov r8,qword ptr [rsp+0x20]
0x4de2: mov r10d,dword ptr [rsp+0x28]
0x4de7: imul rdx,rbx
0x4deb: cmp rdx,qword ptr [r14+0x68]
0x4def: jnbe 0x4a54
0x4df5: mov rbx,rdx
0x4df8: jmp 0x4d9e
0x4dfa: nop qword ptr [rax+rax*1+0x0]
0x4e00: lea ecx,[rax+0x1]
0x4e03: lea r10d,[rax+0x6]
0x4e07: mov rbx,rdx
0x4e0a: mov dword ptr [rsp+0x10],ecx
0x4e0e: mov edx,dword ptr [rsp+0x10]
0x4e12: mov rsi,rbp
0x4e15: mov edi,edx
0x4e17: add edx,0x1
0x4e1a: movzx edi,byte ptr [r15+rdi*1+0x0]
0x4e1f: add rsi,rdi
0x4e22: cmp r10d,edx
0x4e25: jnz 0x4e15
0x4e27: mov edx,0x1
0x4e2c: mov rdi,r13
0x4e2f: mov dword ptr [rsp+0x28],r10d
0x4e34: mov qword ptr [rsp+0x20],r8
0x4e39: mov dword ptr [rsp+0x18],eax
0x4e3d: call 0x2700
0x4e42: mov rdx,qword ptr [r14+0x50]
0x4e46: mov eax,dword ptr [rsp+0x18]
0x4e4a: mov r8,qword ptr [rsp+0x20]
0x4e4f: mov r10d,dword ptr [rsp+0x28]
0x4e54: imul rdx,rbx
0x4e58: cmp rdx,qword ptr [r14+0x58]
0x4e5c: jnbe 0x4a42
0x4e62: mov rbx,rdx
0x4e65: jmp 0x4e0e
0x4e67: nop qword ptr [rax+rax*1+0x0]
0x4e70: test rbx,rbx
0x4e73: jnz 0x4f10
0x4e79: bsf rcx,r8
0x4e7d: lea edx,[rcx+0x40]
0x4e80: mov rbx,r8
0x4e83: mov esi,0x2
0x4e88: mov rdi,r13
0x4e8b: shr rbx,cl
0x4e8e: call 0x2700
0x4e93: xor r8d,r8d
0x4e96: lea rcx,[rip+0x81c3]
0x4e9d: mov r12d,0x1a
0x4ea3: mov r11,0x6148914691236517205
0x4ead: mov r10,-0x6148914691236517205
0x4eb7: mov ebp,0x3
0x4ebc: xor eax,eax
0x4ebe: mov qword ptr [rsp+0x8],rcx
0x4ec3: xor ecx,ecx
0x4ec5: jmp 0x49d6
0x4eca: nop qword ptr [rax+rax*1+0x0]
0x4ed0: mov rdi,r8
0x4ed3: mov rsi,rbx
0x4ed6: mov qword ptr [rsp+0x8],r8
0x4edb: call 0x58f0
0x4ee0: test al,al
0x4ee2: mov r8,qword ptr [rsp+0x8]
0x4ee7: jnz 0x4f50
0x4ee9: add rsp,0x38
0x4eed: mov rcx,r13
0x4ef0: mov rsi,rbx
0x4ef3: pop rbx
0x4ef4: pop rbp
0x4ef5: pop r12
0x4ef7: pop r13
0x4ef9: pop r14
0x4efb: pop r15
0x4efd: mov edx,0x1
0x4f02: mov rdi,r8
0x4f05: jmp 0x4180
0x4f0a: nop qword ptr [rax+rax*1+0x0]
0x4f10: mov ecx,0x40
0x4f15: mov rax,r8
0x4f18: mov esi,0x2
0x4f1d: bsf rdx,rbx
0x4f21: sub ecx,edx
0x4f23: mov rdi,r13
0x4f26: shl rax,cl
0x4f29: mov ecx,edx
0x4f2b: shr r8,cl
0x4f2e: shr rbx,cl
0x4f31: mov qword ptr [rsp+0x8],r8
0x4f36: or rbx,rax
0x4f39: call 0x2700
0x4f3e: mov r8,qword ptr [rsp+0x8]
0x4f43: jmp 0x48a9
0x4f48: nop qword ptr [rax+rax*1+0x0]
0x4f50: add rsp,0x38
0x4f54: mov rdx,rbx
0x4f57: mov rdi,r13
0x4f5a: pop rbx
0x4f5b: pop rbp
0x4f5c: pop r12
0x4f5e: pop r13
0x4f60: pop r14
0x4f62: pop r15
0x4f64: mov rsi,r8
0x4f67: jmp 0x30a0
0x4f6c: mov r15,rax
0x4f6f: mov r10,rsi
0x4f72: jmp 0x4936
0x4f80: push r15
0x4f82: push r14
0x4f84: push r13
0x4f86: push r12
0x4f88: lea r12,[rdi-0x1]
0x4f8c: push rbp
0x4f8d: push rbx
0x4f8e: mov rbx,rdi
0x4f91: sub rsp,0x148
0x4f98: mov rax,0x28
0x4fa1: mov qword ptr [rsp+0x138],rax
0x4fa9: xor eax,eax
0x4fab: test r12b,0x1
0x4faf: mov qword ptr [rsp],r12
0x4fb3: jnz 0x526c
0x4fb9: nop qword ptr [rax+0x0]
0x4fc0: shr r12,0x1
0x4fc3: add eax,0x1
0x4fc6: test r12b,0x1
0x4fca: jz 0x4fc0
0x4fcc: mov dword ptr [rsp+0x14],eax
0x4fd0: mov rax,rbx
0x4fd3: lea rdx,[rip+0x8006]
0x4fda: mov rsi,rbx
0x4fdd: shr rax,0x1
0x4fe0: mov edi,0x40
0x4fe5: xor r10d,r10d
0x4fe8: and eax,0x7f
0x4feb: mov ecx,0x1
0x4ff0: movzx eax,byte ptr [rdx+rax*1+0x0]
0x4ff4: lea rdx,[rax+rax*1+0x0]
0x4ff8: imul rax,rax
0x4ffc: imul rax,rbx
0x5000: sub rdx,rax
0x5003: lea rax,[rdx+rdx*1+0x0]
0x5007: imul rdx,rdx
0x500b: imul rdx,rbx
0x500f: sub rax,rdx
0x5012: lea r14,[rax+rax*1+0x0]
0x5016: imul rax,rax
0x501a: imul rax,rbx
0x501e: sub r14,rax
0x5021: xor eax,eax
0x5023: nop qword ptr [rax+rax*1+0x0]
0x5028: mov rdx,rsi
0x502b: shr rax,0x1
0x502e: shr rsi,0x1
0x5031: shl rdx,0x3f
0x5035: or rax,rdx
0x5038: cmp rsi,rcx
0x503b: jb 0x5044
0x503d: jnz 0x504a
0x503f: cmp rax,r10
0x5042: jnbe 0x504a
0x5044: sub r10,rax
0x5047: sbb rcx,rsi
0x504a: sub edi,0x1
0x504d: jnz 0x5028
0x504f: mov rax,rbx
0x5052: xor r11d,r11d
0x5055: mov r8d,dword ptr [rsp+0x14]
0x505a: sub rax,r10
0x505d: mov r9,r10
0x5060: mov rcx,r12
0x5063: cmp rax,r10
0x5066: mov rsi,r14
0x5069: mov rdi,rbx
0x506c: setnbe r11b
0x5070: mov qword ptr [rsp+0x8],r10
0x5075: neg r11
0x5078: mov rax,r11
0x507b: lea r11,[r10+r10*1+0x0]
0x507f: and rax,rbx
0x5082: sub r11,rbx
0x5085: lea r15,[rax+r11*1+0x0]
0x5089: mov rdx,r15
0x508c: call 0x2880
0x5091: test al,al
0x5093: mov byte ptr [rsp+0x2f],al
0x5097: jz 0x5220
0x509d: lea rbp,[rsp+0x30]
0x50a2: mov rsi,qword ptr [rsp]
0x50a6: xor edi,edi
0x50a8: lea r13,[rip+0xacb1]
0x50af: mov rdx,rbp
0x50b2: mov qword ptr [rsp+0x20],rbp
0x50b7: call 0x4860
0x50bc: movzx eax,byte ptr [rsp+0x12a]
0x50c4: mov r10,qword ptr [rsp+0x8]
0x50c9: mov qword ptr [rsp+0x18],r12
0x50ce: mov r12,r10
0x50d1: mov r10,r15
0x50d4: mov dword ptr [rsp+0x28],eax
0x50d8: sub eax,0x1
0x50db: lea rax,[rbp+rax*8+0x10]
0x50e0: mov ebp,0x2
0x50e5: mov r15,rax
0x50e8: nop qword ptr [rax+rax*1+0x0]
0x50f0: mov eax,dword ptr [rsp+0x28]
0x50f4: test eax,eax
0x50f6: jz 0x51f0
0x50fc: mov rax,qword ptr [rsp+0x20]
0x5101: mov qword ptr [rsp+0x8],rbp
0x5106: lea r11,[rax+0x10]
0x510a: mov rbp,r11
0x510d: mov r11,r10
0x5110: mov rax,qword ptr [rsp]
0x5114: xor edx,edx
0x5116: mov r8,r12
0x5119: mov rcx,r14
0x511c: mov rdi,r11
0x511f: div qword ptr [rbp+0x0]
0x5123: mov rdx,rbx
0x5126: mov rsi,rax
0x5129: call 0x2810
0x512e: cmp r15,rbp
0x5131: jz 0x51d8
0x5137: add rbp,0x8
0x513b: cmp rax,r12
0x513e: jnz 0x5110
0x5140: mov rbp,qword ptr [rsp+0x8]
0x5145: nop qword ptr [rax]
0x5148: movzx eax,byte ptr [r13+0x0]
0x514d: add rbp,rax
0x5150: mov rax,r12
0x5153: mul rbp
0x5156: test rdx,rdx
0x5159: mov r10,rax
0x515c: jnz 0x5227
0x5162: xor edx,edx
0x5164: div rbx
0x5167: mov r10,rdx
0x516a: mov r8d,dword ptr [rsp+0x14]
0x516f: mov rcx,qword ptr [rsp+0x18]
0x5174: mov r9,r12
0x5177: mov rdx,r10
0x517a: mov rsi,r14
0x517d: mov rdi,rbx
0x5180: mov qword ptr [rsp+0x8],r10
0x5185: call 0x2880
0x518a: test al,al
0x518c: jz 0x5220
0x5192: lea rax,[rip+0xae63]
0x5199: add r13,0x1
0x519d: mov r10,qword ptr [rsp+0x8]
0x51a2: cmp rax,r13
0x51a5: jnz 0x50f0
0x51ab: lea rsi,[rip+0x7916]
0x51b2: mov edx,0x5
0x51b7: xor edi,edi
0x51b9: call 0x1ee0
0x51be: xor esi,esi
0x51c0: mov rdx,rax
0x51c3: xor edi,edi
0x51c5: xor eax,eax
0x51c7: call 0x21e0
0x51cc: call 0x1de0
0x51d1: nop qword ptr [rax+0x0]
0x51d8: cmp rax,r12
0x51db: mov rbp,qword ptr [rsp+0x8]
0x51e0: jz 0x5148
0x51e6: nop qword ptr [rax+rax*1+0x0]
0x51f0: mov rbx,qword ptr [rsp+0x138]
0x51f8: xor rbx,0x28
0x5201: movzx eax,byte ptr [rsp+0x2f]
0x5206: jnz 0x527d
0x5208: add rsp,0x148
0x520f: pop rbx
0x5210: pop rbp
0x5211: pop r12
0x5213: pop r13
0x5215: pop r14
0x5217: pop r15
0x5219: ret
0x521a: nop qword ptr [rax+rax*1+0x0]
0x5220: mov [rsp+0x2f],0x0
0x5225: jmp 0x51f0
0x5227: cmp rbx,rdx
0x522a: jbe 0x5282
0x522c: mov rsi,rbx
0x522f: mov edi,0x40
0x5234: xor ecx,ecx
0x5236: nop qword ptr [rax+rax*1+0x0]
0x5240: mov rax,rsi
0x5243: shr rcx,0x1
0x5246: shr rsi,0x1
0x5249: shl rax,0x3f
0x524d: or rcx,rax
0x5250: cmp rsi,rdx
0x5253: jb 0x525c
0x5255: jnz 0x5262
0x5257: cmp rcx,r10
0x525a: jnbe 0x5262
0x525c: sub r10,rcx
0x525f: sbb rdx,rsi
0x5262: sub edi,0x1
0x5265: jnz 0x5240
0x5267: jmp 0x516a
0x526c: mov r12,qword ptr [rsp]
0x5270: mov [rsp+0x14],0x0
0x5278: jmp 0x4fd0
0x527d: call 0x1f20
0x5282: lea rcx,[rip+0x7d3f]
0x5289: lea rsi,[rip+0x77b8]
0x5290: lea rdi,[rip+0x7b72]
0x5297: mov edx,0x4f4
0x529c: call 0x1fe0
0x52b0: push r15
0x52b2: push r14
0x52b4: mov r15,rsi
0x52b7: push r13
0x52b9: push r12
0x52bb: push rbp
0x52bc: push rbx
0x52bd: mov rbx,rdi
0x52c0: sub rsp,0x208
0x52c7: mov rax,0x28
0x52d0: mov qword ptr [rsp+0x1f8],rax
0x52d8: xor eax,eax
0x52da: xor eax,eax
0x52dc: test rsi,rsi
0x52df: setz al
0x52e2: sub rdi,rax
0x52e5: mov rax,rdi
0x52e8: mov qword ptr [rsp+0x28],rdi
0x52ed: mov rdi,rsi
0x52f0: sub rdi,0x1
0x52f4: mov qword ptr [rsp+0x18],rdi
0x52f9: jnz 0x5880
0x52ff: bsf rcx,rax
0x5303: shr rax,cl
0x5306: mov [rsp+0x98],0x0
0x5312: mov qword ptr [rsp+0x90],rax
0x531a: lea eax,[rcx+0x40]
0x531d: mov dword ptr [rsp+0x70],eax
0x5321: mov rax,r15
0x5324: lea rdi,[rip+0x7cb5]
0x532b: shr rax,0x1
0x532e: and eax,0x7f
0x5331: movzx eax,byte ptr [rdi+rax*1+0x0]
0x5335: lea rdx,[rax+rax*1+0x0]
0x5339: imul rax,rax
0x533d: imul rax,r15
0x5341: sub rdx,rax
0x5344: lea rax,[rdx+rdx*1+0x0]
0x5348: imul rdx,rdx
0x534c: imul rdx,r15
0x5350: sub rax,rdx
0x5353: lea rdx,[rax+rax*1+0x0]
0x5357: imul rax,rax
0x535b: imul rax,r15
0x535f: sub rdx,rax
0x5362: cmp rbx,0x2
0x5366: sbb rsi,rsi
0x5369: xor ecx,ecx
0x536b: mov qword ptr [rsp+0x20],rdx
0x5370: and esi,0x40
0x5373: add rsi,0x40
0x5377: cmp rbx,0x2
0x537b: setb cl
0x537e: sbb rax,rax
0x5381: add rax,0x1
0x5385: sub rsi,0x1
0x5389: cmp rsi,0xffffffff
0x538d: jz 0x53bb
0x538f: mov rdx,rcx
0x5392: add rax,rax
0x5395: add rcx,rcx
0x5398: shr rdx,0x3f
0x539c: or rax,rdx
0x539f: cmp rbx,rax
0x53a2: jb 0x53ab
0x53a4: jnz 0x5385
0x53a6: cmp r15,rcx
0x53a9: jnbe 0x5385
0x53ab: sub rsi,0x1
0x53af: sub rcx,r15
0x53b2: sbb rax,rbx
0x53b5: cmp rsi,0xffffffff
0x53b9: jnz 0x538f
0x53bb: mov qword ptr [rsp+0xb8],rax
0x53c3: mov qword ptr [rsp+0xb0],rcx
0x53cb: mov rdi,rcx
0x53ce: add rcx,rdi
0x53d1: adc rax,rax
0x53d4: cmp rbx,rax
0x53d7: mov qword ptr [rsp+0xa8],rax
0x53df: mov qword ptr [rsp+0xa0],rcx
0x53e7: jb 0x5790
0x53ed: jz 0x577e
0x53f3: lea rax,[rsp+0xa0]
0x53fb: lea r14,[rsp+0xc0]
0x5403: mov r8d,dword ptr [rsp+0x70]
0x5408: mov rsi,qword ptr [rsp+0x20]
0x540d: lea r9,[rsp+0xb0]
0x5415: lea rcx,[rsp+0x90]
0x541d: mov rdx,rax
0x5420: mov rdi,r14
0x5423: mov qword ptr [rsp+0xc0],r15
0x542b: mov qword ptr [rsp+0xc8],rbx
0x5433: mov qword ptr [rsp+0x8],r9
0x5438: mov qword ptr [rsp+0x38],rcx
0x543d: mov qword ptr [rsp+0x30],rax
0x5442: call 0x2c60
0x5447: test al,al
0x5449: mov byte ptr [rsp+0x77],al
0x544d: jz 0x5750
0x5453: mov rbp,qword ptr [rsp+0x28]
0x5458: mov r13,qword ptr [rsp+0x18]
0x545d: lea rax,[rsp+0xf0]
0x5465: lea r12,[rip+0xa8f4]
0x546c: mov rdx,rax
0x546f: mov qword ptr [rsp+0x78],rax
0x5474: mov rdi,rbp
0x5477: mov rsi,r13
0x547a: call 0x4860
0x547f: mov rdx,rbp
0x5482: mov rax,r13
0x5485: mov rdi,rbp
0x5488: shr rax,0x1
0x548b: shl rdx,0x3f
0x548f: shr rdi,0x1
0x5492: or rdx,rax
0x5495: lea rax,[rsp+0xd0]
0x549d: mov qword ptr [rsp+0x48],rdi
0x54a2: mov qword ptr [rsp+0x40],rdx
0x54a7: mov ebp,0x2
0x54ac: mov qword ptr [rsp+0x10],rax
0x54b1: lea rax,[rsp+0xe0]
0x54b9: mov qword ptr [rsp+0x80],rax
0x54c1: lea rax,[rsp+0xe8]
0x54c9: mov qword ptr [rsp+0x88],rax
0x54d1: nop qword ptr [rax+0x0]
0x54d8: cmp [rsp+0xf8],0x0
0x54e1: jnz 0x57b0
0x54e7: cmp [rsp+0x1ea],0x0
0x54ef: jz 0x5750
0x54f5: mov rax,qword ptr [rsp+0x80]
0x54fd: mov r13d,0x1
0x5503: mov qword ptr [rsp+0x50],rbp
0x5508: mov qword ptr [rsp+0x58],r12
0x550d: mov qword ptr [rsp+0x60],rbx
0x5512: mov qword ptr [rsp+0x68],r15
0x5517: mov r12,qword ptr [rsp+0x20]
0x551c: mov r15,r13
0x551f: add rax,0x8
0x5523: mov r13,qword ptr [rsp+0x78]
0x5528: mov rbx,qword ptr [rsp+0x30]
0x552d: mov rbp,rax
0x5530: jmp 0x55f2
0x5535: nop qword ptr [rax]
0x5538: mov rax,rdx
0x553b: lea rdi,[rip+0x7a9e]
0x5542: mov rsi,qword ptr [rsp+0x18]
0x5547: shr rax,0x1
0x554a: and eax,0x7f
0x554d: movzx eax,byte ptr [rdi+rax*1+0x0]
0x5551: mov rdi,qword ptr [rsp+0x28]
0x5556: lea rcx,[rax+rax*1+0x0]
0x555a: imul rax,rax
0x555e: imul rax,rdx
0x5562: sub rcx,rax
0x5565: lea rax,[rcx+rcx*1+0x0]
0x5569: imul rcx,rcx
0x556d: imul rcx,rdx
0x5571: sub rax,rcx
0x5574: lea rcx,[rax+rax*1+0x0]
0x5578: imul rax,rax
0x557c: imul rax,rdx
0x5580: sub rcx,rax
0x5583: imul rsi,rcx
0x5587: cmp rdi,rdx
0x558a: jb 0x5730
0x5590: mov rax,rsi
0x5593: mov qword ptr [rsp+0xd0],rsi
0x559b: mul rdx
0x559e: mov rax,rdi
0x55a1: sub rax,rdx
0x55a4: imul rcx,rax
0x55a8: mov qword ptr [rsp+0xd8],rcx
0x55b0: mov r9,qword ptr [rsp+0x8]
0x55b5: mov rdx,qword ptr [rsp+0x10]
0x55ba: mov r8,r12
0x55bd: mov rcx,r14
0x55c0: mov rsi,rbx
0x55c3: mov rdi,rbp
0x55c6: call 0x2ae0
0x55cb: cmp rax,qword ptr [rsp+0xb0]
0x55d3: mov qword ptr [rsp+0xe0],rax
0x55db: jz 0x5620
0x55dd: movzx eax,byte ptr [rsp+0x1ea]
0x55e5: cmp eax,r15d
0x55e8: jbe 0x5750
0x55ee: add r15,0x1
0x55f2: mov rdx,qword ptr [r13+r15*8+0x8]
0x55f7: cmp rdx,0x2
0x55fb: jnz 0x5538
0x5601: mov rax,qword ptr [rsp+0x40]
0x5606: mov qword ptr [rsp+0xd0],rax
0x560e: mov rax,qword ptr [rsp+0x48]
0x5613: mov qword ptr [rsp+0xd8],rax
0x561b: jmp 0x55b0
0x561d: nop qword ptr [rax]
0x5620: mov rdx,qword ptr [rsp+0xe8]
0x5628: mov rax,qword ptr [rsp+0xb8]
0x5630: movzx esi,byte ptr [rsp+0x1ea]
0x5638: cmp rdx,rax
0x563b: setnz cl
0x563e: cmp esi,r15d
0x5641: jbe 0x58c4
0x5647: cmp rdx,rax
0x564a: jnz 0x55ee
0x564c: mov rbp,qword ptr [rsp+0x50]
0x5651: mov r12,qword ptr [rsp+0x58]
0x5656: mov rbx,qword ptr [rsp+0x60]
0x565b: mov r15,qword ptr [rsp+0x68]
0x5660: movzx eax,byte ptr [r12]
0x5665: xor ecx,ecx
0x5667: add rbp,rax
0x566a: mov rax,rcx
0x566d: cmp rbx,rbp
0x5670: cmovnbe rax,rbp
0x5674: cmp rbp,rbx
0x5677: sbb rsi,rsi
0x567a: and rsi,0xffffffc0
0x567e: sub rsi,0xffffff80
0x5682: cmp rbx,rbp
0x5685: cmovbe rcx,rbp
0x5689: sub rsi,0x1
0x568d: cmp rsi,0xffffffff
0x5691: jz 0x56bf
0x5693: mov rdx,rcx
0x5696: add rax,rax
0x5699: add rcx,rcx
0x569c: shr rdx,0x3f
0x56a0: or rax,rdx
0x56a3: cmp rbx,rax
0x56a6: jb 0x56af
0x56a8: jnz 0x5689
0x56aa: cmp r15,rcx
0x56ad: jnbe 0x5689
0x56af: sub rsi,0x1
0x56b3: sub rcx,r15
0x56b6: sbb rax,rbx
0x56b9: cmp rsi,0xffffffff
0x56bd: jnz 0x5693
0x56bf: mov qword ptr [rsp+0xa0],rcx
0x56c7: mov r9,qword ptr [rsp+0x8]
0x56cc: mov rdi,r14
0x56cf: mov r8d,dword ptr [rsp+0x70]
0x56d4: mov rcx,qword ptr [rsp+0x38]
0x56d9: mov rdx,qword ptr [rsp+0x30]
0x56de: mov rsi,qword ptr [rsp+0x20]
0x56e3: mov qword ptr [rsp+0xa8],rax
0x56eb: call 0x2c60
0x56f0: test al,al
0x56f2: jz 0x5749
0x56f4: lea rax,[rip+0xa901]
0x56fb: add r12,0x1
0x56ff: cmp rax,r12
0x5702: jnz 0x54d8
0x5708: lea rsi,[rip+0x73b9]
0x570f: mov edx,0x5
0x5714: xor edi,edi
0x5716: call 0x1ee0
0x571b: xor esi,esi
0x571d: mov rdx,rax
0x5720: xor edi,edi
0x5722: xor eax,eax
0x5724: call 0x21e0
0x5729: call 0x1de0
0x572e: nop 
0x5730: mov qword ptr [rsp+0xd0],rsi
0x5738: mov [rsp+0xd8],0x0
0x5744: jmp 0x55b0
0x5749: mov [rsp+0x77],0x0
0x574e: nop 
0x5750: mov rdi,qword ptr [rsp+0x1f8]
0x5758: xor rdi,0x28
0x5761: movzx eax,byte ptr [rsp+0x77]
0x5766: jnz 0x58e5
0x576c: add rsp,0x208
0x5773: pop rbx
0x5774: pop rbp
0x5775: pop r12
0x5777: pop r13
0x5779: pop r14
0x577b: pop r15
0x577d: ret
0x577e: cmp r15,rcx
0x5781: jnbe 0x53f3
0x5787: nop qword ptr [rax+rax*1+0x0]
0x5790: sub rcx,r15
0x5793: sbb rax,rbx
0x5796: mov qword ptr [rsp+0xa8],rax
0x579e: mov qword ptr [rsp+0xa0],rcx
0x57a6: jmp 0x53f3
0x57ab: nop qword ptr [rax+rax*1+0x0]
0x57b0: mov rcx,qword ptr [rsp+0xf0]
0x57b8: lea rdi,[rip+0x7821]
0x57bf: mov r9,qword ptr [rsp+0x8]
0x57c4: mov r8,qword ptr [rsp+0x20]
0x57c9: mov rsi,qword ptr [rsp+0x30]
0x57ce: mov [rsp+0xd8],0x0
0x57da: mov rax,rcx
0x57dd: shr rax,0x1
0x57e0: and eax,0x7f
0x57e3: movzx eax,byte ptr [rdi+rax*1+0x0]
0x57e7: mov rdi,qword ptr [rsp+0x88]
0x57ef: lea rdx,[rax+rax*1+0x0]
0x57f3: imul rax,rax
0x57f7: imul rax,rcx
0x57fb: sub rdx,rax
0x57fe: lea rax,[rdx+rdx*1+0x0]
0x5802: imul rdx,rdx
0x5806: imul rdx,rcx
0x580a: sub rax,rdx
0x580d: lea rdx,[rax+rax*1+0x0]
0x5811: imul rax,rax
0x5815: imul rax,rcx
0x5819: mov rcx,r14
0x581c: sub rdx,rax
0x581f: mov rax,qword ptr [rsp+0x18]
0x5824: imul rax,rdx
0x5828: mov rdx,qword ptr [rsp+0x10]
0x582d: mov qword ptr [rsp+0xd0],rax
0x5835: call 0x2ae0
0x583a: cmp rax,qword ptr [rsp+0xb0]
0x5842: mov qword ptr [rsp+0xe0],rax
0x584a: jnz 0x54e7
0x5850: mov rdx,qword ptr [rsp+0xe8]
0x5858: mov rax,qword ptr [rsp+0xb8]
0x5860: cmp rdx,rax
0x5863: setnz cl
0x5866: cmp [rsp+0x1ea],0x0
0x586e: jz 0x58d8
0x5870: cmp rdx,rax
0x5873: jz 0x5660
0x5879: jmp 0x54f5
0x587e: nop 
0x5880: mov rsi,qword ptr [rsp+0x28]
0x5885: mov rdx,qword ptr [rsp+0x18]
0x588a: mov ecx,0x40
0x588f: bsf rax,rdx
0x5893: sub ecx,eax
0x5895: mov edi,eax
0x5897: mov dword ptr [rsp+0x70],eax
0x589b: mov rax,rsi
0x589e: shl rax,cl
0x58a1: mov ecx,edi
0x58a3: shr rdx,cl
0x58a6: or rax,rdx
0x58a9: mov qword ptr [rsp+0x90],rax
0x58b1: mov rax,rsi
0x58b4: shr rax,cl
0x58b7: mov qword ptr [rsp+0x98],rax
0x58bf: jmp 0x5321
0x58c4: mov rbp,qword ptr [rsp+0x50]
0x58c9: mov r12,qword ptr [rsp+0x58]
0x58ce: mov rbx,qword ptr [rsp+0x60]
0x58d3: mov r15,qword ptr [rsp+0x68]
0x58d8: test cl,cl
0x58da: jz 0x5660
0x58e0: jmp 0x5750
0x58e5: call 0x1f20
0x58f0: test rdi,rdi
0x58f3: jnz 0x5910
0x58f5: cmp rsi,0x1
0x58f9: jbe 0x5918
0x58fb: cmp rsi,0x17ded78
0x5902: mov eax,0x1
0x5907: jnbe 0x5920
0x5909: rep ret
0x590b: nop qword ptr [rax+rax*1+0x0]
0x5910: jmp 0x52b0
0x5915: nop qword ptr [rax]
0x5918: xor eax,eax
0x591a: ret
0x591b: nop qword ptr [rax+rax*1+0x0]
0x5920: mov rdi,rsi
0x5923: jmp 0x4f80
0x59d5: xor eax,eax
0x5a27: nop qword ptr [rax+rax*1+0x0]
0x5bb9: mov edi,0x3a
0x5bbe: call 0x3360
0x5bc3: mov rdx,r13
0x5bc6: mov rsi,r12
0x5bc9: mov rdi,rbx
0x5bcc: call 0x4860
0x5bd1: cmp [rsp+0x12a],0x0
0x5bd9: jz 0x5c39
0x5bdb: lea rbp,[r13+0xe0]
0x5be2: lea r12,[r13+0x10]
0x5be6: xor r13d,r13d
0x5be9: nop qword ptr [rax+0x0]
0x5bf0: xor ebx,ebx
0x5bf2: cmp [rbp+0x0],0x0
0x5bf6: jz 0x5c20
0x5bf8: nop qword ptr [rax+rax*1+0x0]
0x5c00: mov edi,0x20
0x5c05: add ebx,0x1
0x5c08: call 0x3360
0x5c0d: mov rdi,qword ptr [r12]
0x5c11: xor esi,esi
0x5c13: call 0x2d80
0x5c18: movzx eax,byte ptr [rbp+0x0]
0x5c1c: cmp ebx,eax
0x5c1e: jb 0x5c00
0x5c20: movzx eax,byte ptr [rsp+0x12a]
0x5c28: add r13d,0x1
0x5c2c: add rbp,0x1
0x5c30: add r12,0x8
0x5c34: cmp r13d,eax
0x5c37: jb 0x5bf0
0x5c39: cmp [rsp+0x38],0x0
0x5c3f: jz 0x5c5a
0x5c41: mov edi,0x20
0x5c46: call 0x3360
0x5c4b: mov rsi,qword ptr [rsp+0x30]
0x5c50: mov rdi,qword ptr [rsp+0x38]
0x5c55: call 0x32b0
0x5c5a: mov edi,0xa
0x5c5f: call 0x3360
0x5c64: mov eax,0x1
0x5c69: jmp 0x59d7
0x5c6e: nop 
0x5c9c: jmp 0x5b64
0x5cab: call 0x1f20
0x6010: mov qword ptr [rip+0x20d0f9],rdi
0x6017: ret
0x6020: mov byte ptr [rip+0x20d0e1],dil
0x6027: ret
0x6030: push rbp
0x6031: push rbx
0x6032: sub rsp,0x8
0x6036: mov rdi,qword ptr [rip+0x20d06b]
0x603d: call 0xa0d0
0x6042: test eax,eax
0x6044: jz 0x605c
0x6046: call 0x1df0
0x604b: cmp [rip+0x20d0b6],0x0
0x6052: mov rbx,rax
0x6055: jz 0x6073
0x6057: cmp [rax],0x20
0x605a: jnz 0x6073
0x605c: mov rdi,qword ptr [rip+0x20d07d]
0x6063: call 0xa0d0
0x6068: test eax,eax
0x606a: jnz 0x60b2
0x606c: add rsp,0x8
0x6070: pop rbx
0x6071: pop rbp
0x6072: ret
0x6073: lea rsi,[rip+0x6d11]
0x607a: xor edi,edi
0x607c: mov edx,0x5
0x6081: call 0x1ee0
0x6086: mov rdi,qword ptr [rip+0x20d083]
0x608d: mov rbp,rax
0x6090: test rdi,rdi
0x6093: jz 0x60bd
0x6095: call 0x89b0
0x609a: mov esi,dword ptr [rbx]
0x609c: lea rdx,[rip+0x9f65]
0x60a3: mov rcx,rax
0x60a6: mov r8,rbp
0x60a9: xor edi,edi
0x60ab: xor eax,eax
0x60ad: call 0x21e0
0x60b2: mov edi,dword ptr [rip+0x20cf68]
0x60b8: call 0x1e10
0x60bd: mov esi,dword ptr [rbx]
0x60bf: lea rdx,[rip+0x9f46]
0x60c6: mov rcx,rax
0x60c9: xor edi,edi
0x60cb: xor eax,eax
0x60cd: call 0x21e0
0x60d2: jmp 0x60b2
0x60e0: push r13
0x60e2: push r12
0x60e4: push rbp
0x60e5: push rbx
0x60e6: sub rsp,0x8
0x60ea: test rdx,rdx
0x60ed: jz 0x6151
0x60ef: mov r13d,edi
0x60f2: mov rbp,rsi
0x60f5: mov rbx,rdx
0x60f8: xor r12d,r12d
0x60fb: jmp 0x6110
0x60fd: nop qword ptr [rax]
0x6100: test rax,rax
0x6103: jz 0x6138
0x6105: add r12,rax
0x6108: add rbp,rax
0x610b: sub rbx,rax
0x610e: jz 0x6124
0x6110: mov rdx,rbx
0x6113: mov rsi,rbp
0x6116: mov edi,r13d
0x6119: call 0x8ff0
0x611e: cmp rax,0xffffffff
0x6122: jnz 0x6100
0x6124: add rsp,0x8
0x6128: mov rax,r12
0x612b: pop rbx
0x612c: pop rbp
0x612d: pop r12
0x612f: pop r13
0x6131: ret
0x6132: nop qword ptr [rax+rax*1+0x0]
0x6138: call 0x1df0
0x613d: mov [rax],0x1c
0x6143: add rsp,0x8
0x6147: mov rax,r12
0x614a: pop rbx
0x614b: pop rbp
0x614c: pop r12
0x614e: pop r13
0x6150: ret
0x6151: xor r12d,r12d
0x6154: jmp 0x6124
0x6299: mov qword ptr [rsp+0x8],rax
0x629e: nop 
0x62a0: cmp [r15],0x0
0x62a4: jz 0x6325
0x62a6: mov rsi,qword ptr [rsp+0x8]
0x62ab: mov rdi,r15
0x62ae: call 0xaed0
0x62b3: test rax,rax
0x62b6: mov rbp,rax
0x62b9: jz 0x6325
0x62bb: call 0x1ef0
0x62c0: cmp rax,0x1
0x62c4: jnbe 0x6368
0x62ca: cmp r15,rbp
0x62cd: jnb 0x6938
0x62d3: call 0x22d0
0x62d8: movzx edx,byte ptr [rbp-0x1]
0x62dc: mov rax,qword ptr [rax]
0x62df: mov rdi,qword ptr [rsp+0x8]
0x62e4: movzx r15d,byte ptr [rax+rdx*2+0x0]
0x62e9: shr r15w,0x3
0x62ee: xor r15d,0x1
0x62f2: mov eax,r15d
0x62f5: and eax,0x1
0x62f8: mov byte ptr [rsp+0x10],al
0x62fc: call 0x1f00
0x6301: movzx edx,byte ptr [rbp+rax*1+0x0]
0x6306: test dl,dl
0x6308: jnz 0x6954
0x630e: cmp [rsp+0x10],0x0
0x6313: jnz 0x632a
0x6315: cmp [rbp+0x0],0x0
0x6319: jz 0x6325
0x631b: lea r15,[rbp+0x1]
0x631f: cmp [r15],0x0
0x6323: jnz 0x62a6
0x6325: mov [rsp+0x10],0x0
0x632a: mov rdi,qword ptr [rsp+0x8]
0x632f: call 0x1dd0
0x6334: mov rbx,qword ptr [rsp+0xa8]
0x633c: xor rbx,0x28
0x6345: movzx eax,byte ptr [rsp+0x10]
0x634a: jnz 0x6b96
0x6350: add rsp,0xb8
0x6357: pop rbx
0x6358: pop rbp
0x6359: pop r12
0x635b: pop r13
0x635d: pop r14
0x635f: pop r15
0x6361: ret
0x6362: nop qword ptr [rax+rax*1+0x0]
0x6368: cmp r15,rbp
0x636b: mov qword ptr [rsp+0x30],r15
0x6370: mov [rsp+0x20],0x0
0x6375: mov [rbx+0x4],0x0
0x637d: mov [rsp+0x2c],0x0
0x6382: jb 0x63f7
0x6384: jmp 0x6928
0x6389: nop qword ptr [rax+0x0]
0x6390: mov r15,qword ptr [rsp+0x30]
0x6395: movzx edx,byte ptr [r15]
0x6399: mov eax,edx
0x639b: shr al,0x5
0x639e: and eax,0x7
0x63a1: mov eax,dword ptr [r13+rax*4+0x0]
0x63a6: bt eax,edx
0x63a9: jnb 0x6498
0x63af: mov [rsp+0x38],0x1
0x63b8: movsx edx,byte ptr [r15]
0x63bc: mov [rsp+0x40],0x1
0x63c1: mov [rsp+0x2c],0x1
0x63c6: mov dword ptr [rsp+0x44],edx
0x63ca: test edx,edx
0x63cc: jz 0x6b72
0x63d2: mov r15,qword ptr [rsp+0x30]
0x63d7: mov rax,qword ptr [rsp+0x38]
0x63dc: movzx ecx,byte ptr [rsp+0x40]
0x63e1: mov [rsp+0x2c],0x0
0x63e6: add rax,r15
0x63e9: cmp rax,rbp
0x63ec: mov qword ptr [rsp+0x30],rax
0x63f1: jnb 0x6520
0x63f7: cmp [rsp+0x20],0x0
0x63fc: jz 0x6390
0x63fe: call 0x1ef0
0x6403: mov r15,qword ptr [rsp+0x30]
0x6408: mov rsi,rax
0x640b: mov rdi,r15
0x640e: call 0x9050
0x6413: lea rcx,[rbx+0x4]
0x6417: mov rdx,rax
0x641a: mov rsi,r15
0x641d: mov rdi,r14
0x6420: call 0x9ff0
0x6425: cmp rax,0xffffffff
0x6429: mov qword ptr [rsp+0x38],rax
0x642e: jz 0x64b8
0x6434: cmp rax,0xfffffffe
0x6438: jz 0x64d8
0x643e: test rax,rax
0x6441: jnz 0x6510
0x6447: mov r15,qword ptr [rsp+0x30]
0x644c: mov [rsp+0x38],0x1
0x6455: cmp [r15],0x0
0x6459: jnz 0x6b9b
0x645f: mov edx,dword ptr [rsp+0x44]
0x6463: test edx,edx
0x6465: jnz 0x6b1c
0x646b: lea rdi,[rbx+0x4]
0x646f: mov dword ptr [rsp+0x10],edx
0x6473: mov [rsp+0x40],0x1
0x6478: call 0x22b0
0x647d: test eax,eax
0x647f: mov edx,dword ptr [rsp+0x10]
0x6483: jz 0x6500
0x6485: mov [rsp+0x20],0x0
0x648a: mov [rsp+0x2c],0x1
0x648f: jmp 0x63ca
0x6494: nop qword ptr [rax+0x0]
0x6498: lea rdi,[rbx+0x4]
0x649c: call 0x22b0
0x64a1: test eax,eax
0x64a3: jz 0x6b77
0x64a9: mov [rsp+0x20],0x1
0x64ae: jmp 0x63fe
0x64b3: nop qword ptr [rax+rax*1+0x0]
0x64b8: mov [rsp+0x38],0x1
0x64c1: mov [rsp+0x40],0x0
0x64c6: mov edx,dword ptr [rsp+0x44]
0x64ca: mov r15,qword ptr [rsp+0x30]
0x64cf: jmp 0x63d7
0x64d4: nop qword ptr [rax+0x0]
0x64d8: mov r15,qword ptr [rsp+0x30]
0x64dd: mov rdi,r15
0x64e0: call 0x1f00
0x64e5: mov [rsp+0x40],0x0
0x64ea: mov qword ptr [rsp+0x38],rax
0x64ef: mov edx,dword ptr [rsp+0x44]
0x64f3: jmp 0x63d7
0x64f8: nop qword ptr [rax+rax*1+0x0]
0x6500: mov [rsp+0x2c],0x1
0x6505: jmp 0x63ca
0x650a: nop qword ptr [rax+rax*1+0x0]
0x6510: mov edx,dword ptr [rsp+0x44]
0x6514: jmp 0x646b
0x6519: nop qword ptr [rax+0x0]
0x6520: test cl,cl
0x6522: jz 0x6928
0x6528: mov edi,edx
0x652a: call 0x20e0
0x652f: test eax,eax
0x6531: setz qword ptr [rsp+0x10]
0x6536: mov rax,qword ptr [rsp+0x8]
0x653b: mov qword ptr [rsp+0x30],rbp
0x6540: mov [rsp+0x20],0x0
0x6545: mov [rbx+0x4],0x0
0x654d: mov [rsp+0x2c],0x0
0x6552: mov [rsp+0x60],0x0
0x6557: mov qword ptr [rsp+0x70],rax
0x655c: mov [r12+0x4],0x0
0x6565: mov [rsp+0x6c],0x0
0x656a: jmp 0x65dd
0x656c: nop qword ptr [rax+0x0]
0x6570: cmp [rsp+0x20],0x0
0x6575: jnz 0x67f6
0x657b: mov rcx,qword ptr [rsp+0x30]
0x6580: movzx edx,byte ptr [rcx]
0x6583: mov eax,edx
0x6585: shr al,0x5
0x6588: and eax,0x7
0x658b: mov eax,dword ptr [r13+rax*4+0x0]
0x6590: bt eax,edx
0x6593: jnb 0x67e0
0x6599: mov [rsp+0x38],0x1
0x65a2: movsx eax,byte ptr [rcx]
0x65a5: mov [rsp+0x40],0x1
0x65aa: mov [rsp+0x2c],0x1
0x65af: mov dword ptr [rsp+0x44],eax
0x65b3: mov edi,dword ptr [rsp+0x44]
0x65b7: test edi,edi
0x65b9: jz 0x6b72
0x65bf: mov rax,qword ptr [rsp+0x38]
0x65c4: add qword ptr [rsp+0x30],rax
0x65c9: mov rax,qword ptr [rsp+0x78]
0x65ce: add qword ptr [rsp+0x70],rax
0x65d3: mov [rsp+0x2c],0x0
0x65d8: mov [rsp+0x6c],0x0
0x65dd: cmp [rsp+0x60],0x0
0x65e2: jnz 0x665f
0x65e4: mov rcx,qword ptr [rsp+0x70]
0x65e9: movzx edx,byte ptr [rcx]
0x65ec: mov eax,edx
0x65ee: shr al,0x5
0x65f1: and eax,0x7
0x65f4: mov eax,dword ptr [r13+rax*4+0x0]
0x65f9: bt eax,edx
0x65fc: jnb 0x6648
0x65fe: mov [rsp+0x78],0x1
0x6607: movsx eax,byte ptr [rcx]
0x660a: mov [rsp+0x80],0x1
0x6612: mov [rsp+0x6c],0x1
0x6617: mov dword ptr [rsp+0x84],eax
0x661e: mov ecx,dword ptr [rsp+0x84]
0x6625: test ecx,ecx
0x6627: jz 0x6700
0x662d: cmp [rsp+0x2c],0x0
0x6632: jz 0x6570
0x6638: cmp [rsp+0x40],0x0
0x663d: jz 0x65bf
0x663f: jmp 0x65b3
0x6644: nop qword ptr [rax+0x0]
0x6648: lea rdi,[r12+0x4]
0x664d: call 0x22b0
0x6652: test eax,eax
0x6654: jz 0x6b77
0x665a: mov [rsp+0x60],0x1
0x665f: call 0x1ef0
0x6664: mov r15,qword ptr [rsp+0x70]
0x6669: mov rsi,rax
0x666c: mov rdi,r15
0x666f: call 0x9050
0x6674: lea rcx,[r12+0x4]
0x6679: lea rdi,[r12+0x24]
0x667e: mov rdx,rax
0x6681: mov rsi,r15
0x6684: call 0x9ff0
0x6689: cmp rax,0xffffffff
0x668d: mov qword ptr [rsp+0x78],rax
0x6692: jz 0x6888
0x6698: cmp rax,0xfffffffe
0x669c: jz 0x68c0
0x66a2: test rax,rax
0x66a5: jnz 0x66cd
0x66a7: mov rax,qword ptr [rsp+0x70]
0x66ac: mov [rsp+0x78],0x1
0x66b5: cmp [rax],0x0
0x66b8: jnz 0x6b9b
0x66be: mov esi,dword ptr [rsp+0x84]
0x66c5: test esi,esi
0x66c7: jnz 0x6b1c
0x66cd: lea rdi,[r12+0x4]
0x66d2: mov [rsp+0x80],0x1
0x66da: call 0x22b0
0x66df: test eax,eax
0x66e1: jz 0x68e8
0x66e7: mov ecx,dword ptr [rsp+0x84]
0x66ee: mov [rsp+0x60],0x0
0x66f3: mov [rsp+0x6c],0x1
0x66f8: test ecx,ecx
0x66fa: jnz 0x662d
0x6700: cmp [rsp+0x2c],0x0
0x6705: jnz 0x6978
0x670b: cmp [rsp+0x20],0x0
0x6710: jnz 0x69a2
0x6716: mov rcx,qword ptr [rsp+0x30]
0x671b: movzx edx,byte ptr [rcx]
0x671e: mov eax,edx
0x6720: shr al,0x5
0x6723: and eax,0x7
0x6726: mov eax,dword ptr [r13+rax*4+0x0]
0x672b: bt eax,edx
0x672e: jnb 0x698c
0x6734: mov [rsp+0x38],0x1
0x673d: movsx edx,byte ptr [rcx]
0x6740: mov [rsp+0x40],0x1
0x6745: mov [rsp+0x2c],0x1
0x674a: mov dword ptr [rsp+0x44],edx
0x674e: test edx,edx
0x6750: jz 0x6764
0x6752: cmp [rsp+0x40],0x0
0x6757: jz 0x6764
0x6759: mov edi,edx
0x675b: call 0x20e0
0x6760: test eax,eax
0x6762: jnz 0x676f
0x6764: cmp [rsp+0x10],0x0
0x6769: jnz 0x632a
0x676f: mov qword ptr [rsp+0x30],rbp
0x6774: mov [rsp+0x20],0x0
0x6779: lea r15,[rbx+0x4]
0x677d: mov [rbx+0x4],0x0
0x6785: mov [rsp+0x2c],0x0
0x678a: movzx edx,byte ptr [rbp+0x0]
0x678e: mov eax,edx
0x6790: shr al,0x5
0x6793: and eax,0x7
0x6796: mov eax,dword ptr [r13+rax*4+0x0]
0x679b: bt eax,edx
0x679e: jnb 0x6a30
0x67a4: mov [rsp+0x38],0x1
0x67ad: movsx eax,byte ptr [rbp+0x0]
0x67b1: mov [rsp+0x40],0x1
0x67b6: mov [rsp+0x2c],0x1
0x67bb: mov dword ptr [rsp+0x44],eax
0x67bf: mov eax,dword ptr [rsp+0x44]
0x67c3: test eax,eax
0x67c5: jz 0x6325
0x67cb: mov r15,qword ptr [rsp+0x38]
0x67d0: add r15,rbp
0x67d3: jmp 0x62a0
0x67d8: nop qword ptr [rax+rax*1+0x0]
0x67e0: lea rdi,[rbx+0x4]
0x67e4: call 0x22b0
0x67e9: test eax,eax
0x67eb: jz 0x6b77
0x67f1: mov [rsp+0x20],0x1
0x67f6: call 0x1ef0
0x67fb: mov r15,qword ptr [rsp+0x30]
0x6800: mov rsi,rax
0x6803: mov rdi,r15
0x6806: call 0x9050
0x680b: lea rcx,[rbx+0x4]
0x680f: mov rdx,rax
0x6812: mov rsi,r15
0x6815: mov rdi,r14
0x6818: call 0x9ff0
0x681d: cmp rax,0xffffffff
0x6821: mov qword ptr [rsp+0x38],rax
0x6826: jz 0x68a8
0x682c: cmp rax,0xfffffffe
0x6830: jz 0x68f8
0x6836: test rax,rax
0x6839: jnz 0x6860
0x683b: mov rax,qword ptr [rsp+0x30]
0x6840: mov [rsp+0x38],0x1
0x6849: cmp [rax],0x0
0x684c: jnz 0x6b9b
0x6852: mov r8d,dword ptr [rsp+0x44]
0x6857: test r8d,r8d
0x685a: jnz 0x6b1c
0x6860: lea rdi,[rbx+0x4]
0x6864: mov [rsp+0x40],0x1
0x6869: call 0x22b0
0x686e: test eax,eax
0x6870: jz 0x6918
0x6876: mov [rsp+0x20],0x0
0x687b: mov [rsp+0x2c],0x1
0x6880: jmp 0x65b3
0x6885: nop qword ptr [rax]
0x6888: mov [rsp+0x78],0x1
0x6891: mov [rsp+0x80],0x0
0x6899: mov [rsp+0x6c],0x1
0x689e: jmp 0x662d
0x68a3: nop qword ptr [rax+rax*1+0x0]
0x68a8: mov [rsp+0x38],0x1
0x68b1: mov [rsp+0x40],0x0
0x68b6: jmp 0x65bf
0x68bb: nop qword ptr [rax+rax*1+0x0]
0x68c0: mov rdi,qword ptr [rsp+0x70]
0x68c5: call 0x1f00
0x68ca: mov [rsp+0x80],0x0
0x68d2: mov qword ptr [rsp+0x78],rax
0x68d7: mov [rsp+0x6c],0x1
0x68dc: jmp 0x662d
0x68e1: nop qword ptr [rax+0x0]
0x68e8: mov [rsp+0x6c],0x1
0x68ed: jmp 0x661e
0x68f2: nop qword ptr [rax+rax*1+0x0]
0x68f8: mov rdi,qword ptr [rsp+0x30]
0x68fd: call 0x1f00
0x6902: mov [rsp+0x40],0x0
0x6907: mov qword ptr [rsp+0x38],rax
0x690c: jmp 0x65bf
0x6911: nop qword ptr [rax+0x0]
0x6918: mov [rsp+0x2c],0x1
0x691d: jmp 0x65b3
0x6922: nop qword ptr [rax+rax*1+0x0]
0x6928: mov [rsp+0x10],0x1
0x692d: jmp 0x6536
0x6932: nop qword ptr [rax+rax*1+0x0]
0x6938: mov rdi,qword ptr [rsp+0x8]
0x693d: call 0x1f00
0x6942: movzx edx,byte ptr [rbp+rax*1+0x0]
0x6947: mov [rsp+0x10],0x1
0x694c: test dl,dl
0x694e: jz 0x632a
0x6954: mov byte ptr [rsp+0x18],dl
0x6958: call 0x22d0
0x695d: movzx edx,byte ptr [rsp+0x18]
0x6962: mov rax,qword ptr [rax]
0x6965: test [rax+rdx*2+0x0],0x8
0x6969: jnz 0x6315
0x696f: jmp 0x630e
0x6974: nop qword ptr [rax+0x0]
0x6978: cmp [rsp+0x40],0x0
0x697d: mov edx,dword ptr [rsp+0x44]
0x6981: jz 0x6752
0x6987: jmp 0x674e
0x698c: lea rdi,[rbx+0x4]
0x6990: call 0x22b0
0x6995: test eax,eax
0x6997: jz 0x6b77
0x699d: mov [rsp+0x20],0x1
0x69a2: call 0x1ef0
0x69a7: mov r8,qword ptr [rsp+0x30]
0x69ac: mov rsi,rax
0x69af: mov rdi,r8
0x69b2: mov qword ptr [rsp+0x18],r8
0x69b7: call 0x9050
0x69bc: mov r8,qword ptr [rsp+0x18]
0x69c1: lea rcx,[rbx+0x4]
0x69c5: mov rdx,rax
0x69c8: mov rdi,r14
0x69cb: mov rsi,r8
0x69ce: call 0x9ff0
0x69d3: cmp rax,0xffffffff
0x69d7: mov qword ptr [rsp+0x38],rax
0x69dc: jz 0x6acf
0x69e2: cmp rax,0xfffffffe
0x69e6: jz 0x6b50
0x69ec: test rax,rax
0x69ef: jz 0x6af9
0x69f5: mov edx,dword ptr [rsp+0x44]
0x69f9: lea rdi,[rbx+0x4]
0x69fd: mov dword ptr [rsp+0x18],edx
0x6a01: mov [rsp+0x40],0x1
0x6a06: call 0x22b0
0x6a0b: test eax,eax
0x6a0d: mov edx,dword ptr [rsp+0x18]
0x6a11: jz 0x6b32
0x6a17: mov [rsp+0x20],0x0
0x6a1c: mov [rsp+0x2c],0x1
0x6a21: jmp 0x674e
0x6a26: nop qword ptr [rax+rax*1+0x0]
0x6a30: mov rdi,r15
0x6a33: call 0x22b0
0x6a38: test eax,eax
0x6a3a: jz 0x6b77
0x6a40: mov [rsp+0x20],0x1
0x6a45: call 0x1ef0
0x6a4a: mov r8,qword ptr [rsp+0x30]
0x6a4f: mov rsi,rax
0x6a52: mov rdi,r8
0x6a55: mov qword ptr [rsp+0x10],r8
0x6a5a: call 0x9050
0x6a5f: mov r8,qword ptr [rsp+0x10]
0x6a64: mov rcx,r15
0x6a67: mov rdx,rax
0x6a6a: mov rdi,r14
0x6a6d: mov rsi,r8
0x6a70: call 0x9ff0
0x6a75: cmp rax,0xffffffff
0x6a79: mov qword ptr [rsp+0x38],rax
0x6a7e: jz 0x6aeb
0x6a80: cmp rax,0xfffffffe
0x6a84: jz 0x6b3c
0x6a8a: test rax,rax
0x6a8d: jnz 0x6aae
0x6a8f: mov rax,qword ptr [rsp+0x30]
0x6a94: mov [rsp+0x38],0x1
0x6a9d: cmp [rax],0x0
0x6aa0: jnz 0x6b9b
0x6aa6: mov edx,dword ptr [rsp+0x44]
0x6aaa: test edx,edx
0x6aac: jnz 0x6b1c
0x6aae: lea rdi,[rbx+0x4]
0x6ab2: mov [rsp+0x40],0x1
0x6ab7: call 0x22b0
0x6abc: test eax,eax
0x6abe: jz 0x6b28
0x6ac0: mov [rsp+0x20],0x0
0x6ac5: mov [rsp+0x2c],0x1
0x6aca: jmp 0x67bf
0x6acf: mov [rsp+0x38],0x1
0x6ad8: mov [rsp+0x40],0x0
0x6add: mov edx,dword ptr [rsp+0x44]
0x6ae1: mov [rsp+0x2c],0x1
0x6ae6: jmp 0x6752
0x6aeb: mov [rsp+0x38],0x1
0x6af4: jmp 0x67cb
0x6af9: mov rax,qword ptr [rsp+0x30]
0x6afe: mov [rsp+0x38],0x1
0x6b07: cmp [rax],0x0
0x6b0a: jnz 0x6b9b
0x6b10: mov edx,dword ptr [rsp+0x44]
0x6b14: test edx,edx
0x6b16: jz 0x69f9
0x6b1c: call 0x2310
0x6b21: nop qword ptr [rax+0x0]
0x6b28: mov [rsp+0x2c],0x1
0x6b2d: jmp 0x67bf
0x6b32: mov [rsp+0x2c],0x1
0x6b37: jmp 0x674e
0x6b3c: mov rdi,qword ptr [rsp+0x30]
0x6b41: call 0x1f00
0x6b46: mov qword ptr [rsp+0x38],rax
0x6b4b: jmp 0x67cb
0x6b50: mov rdi,qword ptr [rsp+0x30]
0x6b55: call 0x1f00
0x6b5a: mov [rsp+0x40],0x0
0x6b5f: mov qword ptr [rsp+0x38],rax
0x6b64: mov edx,dword ptr [rsp+0x44]
0x6b68: mov [rsp+0x2c],0x1
0x6b6d: jmp 0x6752
0x6b72: call 0x1de0
0x6b77: lea rcx,[rip+0x9552]
0x6b7e: lea rsi,[rip+0x94d3]
0x6b85: lea rdi,[rip+0x94fe]
0x6b8c: mov edx,0x96
0x6b91: call 0x1fe0
0x6b96: call 0x1f20
0x6b9b: lea rcx,[rip+0x952e]
0x6ba2: lea rsi,[rip+0x94af]
0x6ba9: lea rdi,[rip+0x94f1]
0x6bb0: mov edx,0xb2
0x6bb5: call 0x1fe0
0x6bc0: push r12
0x6bc2: push rbp
0x6bc3: mov rsi,rdi
0x6bc6: push rbx
0x6bc7: mov rbp,rdi
0x6bca: mov edx,0x5
0x6bcf: xor edi,edi
0x6bd1: call 0x1ee0
0x6bd6: cmp rbp,rax
0x6bd9: mov rbx,rax
0x6bdc: jz 0x6bed
0x6bde: mov rsi,rbp
0x6be1: mov rdi,rax
0x6be4: call 0x6250
0x6be9: test al,al
0x6beb: jz 0x6bf8
0x6bed: mov rax,rbx
0x6bf0: pop rbx
0x6bf1: pop rbp
0x6bf2: pop r12
0x6bf4: ret
0x6bf5: nop qword ptr [rax]
0x6bf8: mov rdi,rbx
0x6bfb: call 0x1f00
0x6c00: mov rdi,rbp
0x6c03: mov r12,rax
0x6c06: call 0x1f00
0x6c0b: lea rdi,[r12+rax*1+0x4]
0x6c10: call 0x9ce0
0x6c15: lea rcx,[rip+0x949c]
0x6c1c: mov r12,rax
0x6c1f: mov r9,rbp
0x6c22: mov r8,rbx
0x6c25: mov rdi,rax
0x6c28: mov rbx,r12
0x6c2b: mov rdx,0xffffffff
0x6c32: mov esi,0x1
0x6c37: xor eax,eax
0x6c39: call 0x22f0
0x6c3e: mov rax,rbx
0x6c41: pop rbx
0x6c42: pop rbp
0x6c43: pop r12
0x6c45: ret
0x6ced: nop qword ptr [rax]
0x6d1c: test al,al
0x6d1e: jnz 0x6d58
0x6d20: test rbp,rbp
0x6d23: jz 0x6d34
0x6d25: mov rsi,rbp
0x6d28: mov rdi,r14
0x6d2b: call 0x6250
0x6d30: test al,al
0x6d32: jnz 0x6d58
0x6d34: cmp [rsp+0x8],0x0
0x6d3a: jz 0x6eb0
0x6d40: mov rsi,qword ptr [rsp+0x8]
0x6d45: mov rdi,r14
0x6d48: call 0x6250
0x6d4d: test al,al
0x6d4f: jz 0x6eb0
0x6d55: nop qword ptr [rax]
0x6d58: test r15,r15
0x6d5b: jnz 0x6e50
0x6d61: test r12,r12
0x6d64: mov rbx,r14
0x6d67: jnz 0x6cd3
0x6d6d: jmp 0x6cdb
0x6d72: nop qword ptr [rax+rax*1+0x0]
0x6e3a: test al,al
0x6e3c: jz 0x6f18
0x6e42: mov r15,rbx
0x6e45: xor r12d,r12d
0x6e48: nop qword ptr [rax+rax*1+0x0]
0x6e50: mov rdi,r15
0x6e53: mov rbx,r14
0x6e56: call 0x1dd0
0x6e5b: test r12,r12
0x6e5e: jnz 0x6cd3
0x6e64: jmp 0x6cdb
0x6e69: nop qword ptr [rax+0x0]
0x6e89: nop qword ptr [rax+0x0]
0x6ea9: nop qword ptr [rax+0x0]
0x6eb0: mov rdi,r14
0x6eb3: call 0x1f00
0x6eb8: mov rdi,rbx
0x6ebb: mov rbp,rax
0x6ebe: call 0x1f00
0x6ec3: lea rdi,[rbp+rax*1+0x4]
0x6ec8: call 0x9ce0
0x6ecd: lea rcx,[rip+0x91e4]
0x6ed4: mov rdi,rax
0x6ed7: mov rbp,rax
0x6eda: mov r9,rbx
0x6edd: xor eax,eax
0x6edf: mov r8,r14
0x6ee2: mov rdx,0xffffffff
0x6ee9: mov esi,0x1
0x6eee: call 0x22f0
0x6ef3: test r15,r15
0x6ef6: jz 0x6f00
0x6ef8: mov rdi,r15
0x6efb: call 0x1dd0
0x6f00: test r12,r12
0x6f03: mov rbx,rbp
0x6f06: jnz 0x6cd3
0x6f0c: jmp 0x6cdb
0x6f11: nop qword ptr [rax+0x0]
0x6f18: mov rbp,rbx
0x6f1b: mov r15,rbx
0x6f1e: mov [rsp+0x8],0x0
0x6f27: xor r12d,r12d
0x6f2a: jmp 0x6d20
0x6f2f: nop 
0x6f7c: nop qword ptr [rax+0x0]
0x6fcd: nop qword ptr [rax]
0x72e7: nop qword ptr [rax+rax*1+0x0]
0x731e: nop 
0x7341: nop qword ptr [rax+0x0]
0x7382: nop qword ptr [rax+rax*1+0x0]
0x7394: nop qword ptr [rax+0x0]
0x7438: nop qword ptr [rax+rax*1+0x0]
0x7461: nop qword ptr [rax+0x0]
0x7477: nop qword ptr [rax+rax*1+0x0]
0x748f: nop 
0x74be: nop 
0x74cd: nop qword ptr [rax]
0x74df: nop 
0x74ef: nop 
0x74ff: nop 
0x750f: nop 
0x751f: nop 
0x758c: nop qword ptr [rax+0x0]
0x75ac: nop qword ptr [rax+0x0]
0x75cf: nop 
0x75e2: nop qword ptr [rax+rax*1+0x0]
0x75fa: nop qword ptr [rax+rax*1+0x0]
0x760a: nop qword ptr [rax+rax*1+0x0]
0x76ab: nop qword ptr [rax+rax*1+0x0]
0x76c5: nop qword ptr [rax]
0x76d8: nop qword ptr [rax+rax*1+0x0]
0x76f3: nop qword ptr [rax+rax*1+0x0]
0x7722: nop qword ptr [rax+rax*1+0x0]
0x7732: nop qword ptr [rax+rax*1+0x0]
0x774a: nop qword ptr [rax+rax*1+0x0]
0x775a: nop qword ptr [rax+rax*1+0x0]
0x7768: nop qword ptr [rax+rax*1+0x0]
0x778f: nop 
0x77cd: cmp [rsp+0xe],0x0
0x77d2: jnz 0x81cd
0x77d8: test r13,r13
0x77db: setz al
0x77de: cmp [rsp+0x50],0x0
0x77e4: setnz dl
0x77e7: and al,dl
0x77e9: jz 0x820c
0x77ef: mov r13,qword ptr [rsp+0x50]
0x7829: nop qword ptr [rax+0x0]
0x7872: nop qword ptr [rax+rax*1+0x0]
0x78b1: nop qword ptr [rax+0x0]
0x78d2: nop qword ptr [rax+rax*1+0x0]
0x7a38: nop qword ptr [rax+rax*1+0x0]
0x7b4b: nop qword ptr [rax+rax*1+0x0]
0x7b6e: nop 
0x7c35: nop qword ptr [rax]
0x7ced: nop qword ptr [rax]
0x7ef6: nop qword ptr [rax+rax*1+0x0]
0x7f89: nop qword ptr [rax+0x0]
0x80dd: nop qword ptr [rax]
0x81cd: sub rsp,0x8
0x81d1: mov r8d,0x5
0x81d7: mov rcx,r11
0x81da: push qword ptr [rsp+0x68]
0x81de: push qword ptr [rsp+0x78]
0x81e2: mov rdi,r14
0x81e5: push qword ptr [rsp+0x38]
0x81e9: mov r9d,dword ptr [rsp+0x98]
0x81f1: mov rdx,qword ptr [rsp+0x30]
0x81f6: mov rsi,qword ptr [rsp+0x70]
0x81fb: call 0x7030
0x8200: add rsp,0x20
0x8204: mov r15,rax
0x8207: jmp 0x7c09
0x820c: movzx eax,byte ptr [rsp+0x7c]
0x8211: jmp 0x812c
0x8223: call 0x1f20
0x83eb: nop qword ptr [rax+rax*1+0x0]
0x8411: call 0x1de0
0x8416: call 0x9f30
0x8420: push r12
0x8422: push rbp
0x8423: push rbx
0x8424: mov rbx,rdi
0x8427: call 0x1df0
0x842c: mov r12d,dword ptr [rax]
0x842f: mov rbp,rax
0x8432: lea rax,[rip+0x20ade7]
0x8439: test rbx,rbx
0x843c: mov esi,0x38
0x8441: cmove rbx,rax
0x8445: mov rdi,rbx
0x8448: call 0x9ee0
0x844d: mov dword ptr [rbp+0x0],r12d
0x8451: pop rbx
0x8452: pop rbp
0x8453: pop r12
0x8455: ret
0x8460: lea rax,[rip+0x20adb9]
0x8467: test rdi,rdi
0x846a: cmove rdi,rax
0x846e: mov eax,dword ptr [rdi]
0x8470: ret
0x8480: lea rax,[rip+0x20ad99]
0x8487: test rdi,rdi
0x848a: cmove rdi,rax
0x848e: mov dword ptr [rdi],esi
0x8490: ret
0x84a0: lea rax,[rip+0x20ad79]
0x84a7: test rdi,rdi
0x84aa: mov ecx,esi
0x84ac: cmove rdi,rax
0x84b0: mov eax,esi
0x84b2: and ecx,0x1f
0x84b5: shr al,0x5
0x84b8: movzx eax,al
0x84bb: lea rdi,[rdi+rax*4+0x8]
0x84c0: mov esi,dword ptr [rdi]
0x84c2: mov eax,esi
0x84c4: shr eax,cl
0x84c6: xor edx,eax
0x84c8: and eax,0x1
0x84cb: and edx,0x1
0x84ce: shl edx,cl
0x84d0: xor edx,esi
0x84d2: mov dword ptr [rdi],edx
0x84d4: ret
0x84e0: lea rax,[rip+0x20ad39]
0x84e7: test rdi,rdi
0x84ea: cmove rdi,rax
0x84ee: mov eax,dword ptr [rdi+0x4]
0x84f1: mov dword ptr [rdi+0x4],esi
0x84f4: ret
0x8500: lea rax,[rip+0x20ad19]
0x8507: test rdi,rdi
0x850a: cmove rdi,rax
0x850e: test rsi,rsi
0x8511: mov [rdi],0xa
0x8517: jz 0x8527
0x8519: test rdx,rdx
0x851c: jz 0x8527
0x851e: mov qword ptr [rdi+0x28],rsi
0x8522: mov qword ptr [rdi+0x30],rdx
0x8526: ret
0x8527: sub rsp,0x8
0x852b: call 0x1de0
0x8530: push r15
0x8532: push r14
0x8534: lea rax,[rip+0x20ace5]
0x853b: push r13
0x853d: push r12
0x853f: mov r13,rdi
0x8542: push rbp
0x8543: push rbx
0x8544: mov rbx,r8
0x8547: mov r14,rsi
0x854a: mov r15,rdx
0x854d: sub rsp,0x18
0x8551: test r8,r8
0x8554: cmove rbx,rax
0x8558: mov qword ptr [rsp+0x8],rcx
0x855d: call 0x1df0
0x8562: mov r12d,dword ptr [rax]
0x8565: mov rbp,rax
0x8568: lea rax,[rbx+0x8]
0x856c: sub rsp,0x8
0x8570: mov r9d,dword ptr [rbx+0x4]
0x8574: push qword ptr [rbx+0x30]
0x8577: mov r8d,dword ptr [rbx]
0x857a: push qword ptr [rbx+0x28]
0x857d: mov rdx,r15
0x8580: push rax
0x8581: mov rcx,qword ptr [rsp+0x28]
0x8586: mov rsi,r14
0x8589: mov rdi,r13
0x858c: call 0x7030
0x8591: mov dword ptr [rbp+0x0],r12d
0x8595: add rsp,0x38
0x8599: pop rbx
0x859a: pop rbp
0x859b: pop r12
0x859d: pop r13
0x859f: pop r14
0x85a1: pop r15
0x85a3: ret
0x85b0: push r15
0x85b2: push r14
0x85b4: lea rax,[rip+0x20ac65]
0x85bb: push r13
0x85bd: push r12
0x85bf: mov r12,rdx
0x85c2: push rbp
0x85c3: push rbx
0x85c4: mov rbx,rcx
0x85c7: mov r14,rdi
0x85ca: mov r15,rsi
0x85cd: sub rsp,0x38
0x85d1: test rcx,rcx
0x85d4: cmove rbx,rax
0x85d8: xor ebp,ebp
0x85da: call 0x1df0
0x85df: test r12,r12
0x85e2: mov r13,rax
0x85e5: mov eax,dword ptr [rax]
0x85e7: setz bpl
0x85eb: or ebp,dword ptr [rbx+0x4]
0x85ee: lea r10,[rbx+0x8]
0x85f2: sub rsp,0x8
0x85f6: mov r8d,dword ptr [rbx]
0x85f9: mov rcx,r15
0x85fc: mov dword ptr [rsp+0x14],eax
0x8600: push qword ptr [rbx+0x30]
0x8603: mov rdx,r14
0x8606: push qword ptr [rbx+0x28]
0x8609: push r10
0x860b: xor esi,esi
0x860d: mov r9d,ebp
0x8610: xor edi,edi
0x8612: mov qword ptr [rsp+0x40],r10
0x8617: call 0x7030
0x861c: lea rsi,[rax+0x1]
0x8620: mov qword ptr [rsp+0x48],rax
0x8625: add rsp,0x20
0x8629: mov rdi,rsi
0x862c: mov qword ptr [rsp+0x18],rsi
0x8631: call 0x9ce0
0x8636: mov qword ptr [rsp+0x10],rax
0x863b: sub rsp,0x8
0x863f: push qword ptr [rbx+0x30]
0x8642: push qword ptr [rbx+0x28]
0x8645: mov r10,qword ptr [rsp+0x38]
0x864a: mov r9d,ebp
0x864d: mov r8d,dword ptr [rbx]
0x8650: mov rcx,r15
0x8653: mov rdx,r14
0x8656: mov rdi,rax
0x8659: push r10
0x865b: mov rsi,qword ptr [rsp+0x38]
0x8660: call 0x7030
0x8665: mov eax,dword ptr [rsp+0x2c]
0x8669: add rsp,0x20
0x866d: test r12,r12
0x8670: mov dword ptr [r13+0x0],eax
0x8674: jz 0x867f
0x8676: mov r11,qword ptr [rsp+0x28]
0x867b: mov qword ptr [r12],r11
0x867f: mov rax,qword ptr [rsp+0x10]
0x8684: add rsp,0x38
0x8688: pop rbx
0x8689: pop rbp
0x868a: pop r12
0x868c: pop r13
0x868e: pop r14
0x8690: pop r15
0x8692: ret
0x86a0: mov rcx,rdx
0x86a3: xor edx,edx
0x86a5: jmp 0x85b0
0x86b0: mov eax,dword ptr [rip+0x20a9c2]
0x86b6: push r12
0x86b8: mov r12,qword ptr [rip+0x20a9c1]
0x86bf: push rbp
0x86c0: push rbx
0x86c1: cmp eax,0x1
0x86c4: jle 0x86f1
0x86c6: sub eax,0x2
0x86c9: lea rbx,[r12+0x18]
0x86ce: shl rax,0x4
0x86d2: lea rbp,[r12+rax*1+0x28]
0x86d7: nop qword ptr [rax+rax*1+0x0]
0x86e0: mov rdi,qword ptr [rbx]
0x86e3: add rbx,0x10
0x86e7: call 0x1dd0
0x86ec: cmp rbx,rbp
0x86ef: jnz 0x86e0
0x86f1: mov rdi,qword ptr [r12+0x8]
0x86f6: lea rbx,[rip+0x20aa23]
0x86fd: cmp rdi,rbx
0x8700: jz 0x8719
0x8702: call 0x1dd0
0x8707: mov [rip+0x20a97e],0x100
0x8712: mov qword ptr [rip+0x20a97f],rbx
0x8719: lea rbx,[rip+0x20a970]
0x8720: cmp r12,rbx
0x8723: jz 0x8734
0x8725: mov rdi,r12
0x8728: call 0x1dd0
0x872d: mov qword ptr [rip+0x20a94c],rbx
0x8734: pop rbx
0x8735: mov [rip+0x20a939],0x1
0x873f: pop rbp
0x8740: pop r12
0x8742: ret
0x8750: lea rcx,[rip+0x20aac9]
0x8757: mov rdx,0xffffffff
0x875e: jmp 0x8270
0x8770: lea rcx,[rip+0x20aaa9]
0x8777: jmp 0x8270
0x8780: lea rcx,[rip+0x20aa99]
0x8787: mov rsi,rdi
0x878a: mov rdx,0xffffffff
0x8791: xor edi,edi
0x8793: jmp 0x8270
0x87a0: lea rcx,[rip+0x20aa79]
0x87a7: mov rdx,rsi
0x87aa: mov rsi,rdi
0x87ad: xor edi,edi
0x87af: jmp 0x8270
0x87c0: sub rsp,0x48
0x87c4: mov rax,rdx
0x87c7: mov rdx,0x28
0x87d0: mov qword ptr [rsp+0x38],rdx
0x87d5: xor edx,edx
0x87d7: cmp esi,0xa
0x87da: jz 0x8844
0x87dc: mov dword ptr [rsp],esi
0x87df: mov rcx,rsp
0x87e2: mov rdx,0xffffffff
0x87e9: mov rsi,rax
0x87ec: mov [rsp+0x4],0x0
0x87f5: mov [rsp+0xc],0x0
0x87fe: mov [rsp+0x14],0x0
0x8807: mov [rsp+0x1c],0x0
0x8810: mov [rsp+0x24],0x0
0x8819: mov [rsp+0x2c],0x0
0x8822: mov [rsp+0x34],0x0
0x882a: call 0x8270
0x882f: mov rcx,qword ptr [rsp+0x38]
0x8834: xor rcx,0x28
0x883d: jnz 0x8849
0x883f: add rsp,0x48
0x8843: ret
0x8844: call 0x1de0
0x8849: call 0x1f20
0x8850: sub rsp,0x48
0x8854: mov rax,rdx
0x8857: mov rdx,rcx
0x885a: mov rcx,0x28
0x8863: mov qword ptr [rsp+0x38],rcx
0x8868: xor ecx,ecx
0x886a: cmp esi,0xa
0x886d: jz 0x88d0
0x886f: mov dword ptr [rsp],esi
0x8872: mov rcx,rsp
0x8875: mov rsi,rax
0x8878: mov [rsp+0x4],0x0
0x8881: mov [rsp+0xc],0x0
0x888a: mov [rsp+0x14],0x0
0x8893: mov [rsp+0x1c],0x0
0x889c: mov [rsp+0x24],0x0
0x88a5: mov [rsp+0x2c],0x0
0x88ae: mov [rsp+0x34],0x0
0x88b6: call 0x8270
0x88bb: mov rdx,qword ptr [rsp+0x38]
0x88c0: xor rdx,0x28
0x88c9: jnz 0x88d5
0x88cb: add rsp,0x48
0x88cf: ret
0x88d0: call 0x1de0
0x88d5: call 0x1f20
0x88e0: mov rdx,rsi
0x88e3: mov esi,edi
0x88e5: xor edi,edi
0x88e7: jmp 0x87c0
0x88f0: mov rcx,rdx
0x88f3: mov rdx,rsi
0x88f6: mov esi,edi
0x88f8: xor edi,edi
0x88fa: jmp 0x8850
0x8900: sub rsp,0x48
0x8904: mov ecx,edx
0x8906: mov rax,0x28
0x890f: mov qword ptr [rsp+0x38],rax
0x8914: xor eax,eax
0x8916: mov rax,qword ptr [rip+0x20a933]
0x891d: mov r8,rsp
0x8920: and ecx,0x1f
0x8923: movdqa xmm0,[rip+0x20a8f5]
0x892b: mov qword ptr [rsp+0x30],rax
0x8930: mov eax,edx
0x8932: movaps [rsp],xmm0
0x8936: shr al,0x5
0x8939: movzx eax,al
0x893c: lea r9,[r8+rax*4+0x8]
0x8941: movdqa xmm0,[rip+0x20a8e7]
0x8949: movaps [rsp+0x10],xmm0
0x894e: movdqa xmm0,[rip+0x20a8ea]
0x8956: movaps [rsp+0x20],xmm0
0x895b: mov edx,dword ptr [r9]
0x895e: mov eax,edx
0x8960: shr eax,cl
0x8962: not eax
0x8964: and eax,0x1
0x8967: shl eax,cl
0x8969: mov rcx,r8
0x896c: xor eax,edx
0x896e: mov rdx,rsi
0x8971: mov rsi,rdi
0x8974: mov dword ptr [r9],eax
0x8977: xor edi,edi
0x8979: call 0x8270
0x897e: mov rsi,qword ptr [rsp+0x38]
0x8983: xor rsi,0x28
0x898c: jnz 0x8993
0x898e: add rsp,0x48
0x8992: ret
0x8993: call 0x1f20
0x89a0: movsx edx,sil
0x89a4: mov rsi,0xffffffff
0x89ab: jmp 0x8900
0x89b0: mov edx,0x3a
0x89b5: mov rsi,0xffffffff
0x89bc: jmp 0x8900
0x89d0: mov edx,0x3a
0x89d5: jmp 0x8900
0x89e0: sub rsp,0x48
0x89e4: mov rax,rdx
0x89e7: mov rdx,0x28
0x89f0: mov qword ptr [rsp+0x38],rdx
0x89f5: xor edx,edx
0x89f7: cmp esi,0xa
0x89fa: jz 0x8a64
0x89fc: mov dword ptr [rsp],esi
0x89ff: mov rcx,rsp
0x8a02: mov rdx,0xffffffff
0x8a09: mov rsi,rax
0x8a0c: mov [rsp+0x4],0x0
0x8a15: mov [rsp+0xc],0x4000000
0x8a1e: mov [rsp+0x14],0x0
0x8a27: mov [rsp+0x1c],0x0
0x8a30: mov [rsp+0x24],0x0
0x8a39: mov [rsp+0x2c],0x0
0x8a42: mov [rsp+0x34],0x0
0x8a4a: call 0x8270
0x8a4f: mov rcx,qword ptr [rsp+0x38]
0x8a54: xor rcx,0x28
0x8a5d: jnz 0x8a69
0x8a5f: add rsp,0x48
0x8a63: ret
0x8a64: call 0x1de0
0x8a69: call 0x1f20
0x8a70: sub rsp,0x48
0x8a74: mov r9,rcx
0x8a77: mov rcx,qword ptr [rip+0x20a7d2]
0x8a7e: movdqa xmm0,[rip+0x20a79a]
0x8a86: mov rax,0x28
0x8a8f: mov qword ptr [rsp+0x38],rax
0x8a94: xor eax,eax
0x8a96: movaps [rsp],xmm0
0x8a9a: test rsi,rsi
0x8a9d: mov qword ptr [rsp+0x30],rcx
0x8aa2: mov [rsp],0xa
0x8aa9: movdqa xmm0,[rip+0x20a77f]
0x8ab1: movaps [rsp+0x10],xmm0
0x8ab6: movdqa xmm0,[rip+0x20a782]
0x8abe: movaps [rsp+0x20],xmm0
0x8ac3: jz 0x8af7
0x8ac5: test rdx,rdx
0x8ac8: jz 0x8af7
0x8aca: mov qword ptr [rsp+0x28],rsi
0x8acf: mov qword ptr [rsp+0x30],rdx
0x8ad4: mov rcx,rsp
0x8ad7: mov rdx,r8
0x8ada: mov rsi,r9
0x8add: call 0x8270
0x8ae2: mov rdi,qword ptr [rsp+0x38]
0x8ae7: xor rdi,0x28
0x8af0: jnz 0x8afc
0x8af2: add rsp,0x48
0x8af6: ret
0x8af7: call 0x1de0
0x8afc: call 0x1f20
0x8b10: mov r8,0xffffffff
0x8b17: jmp 0x8a70
0x8b20: mov rcx,rdx
0x8b23: mov r8,0xffffffff
0x8b2a: mov rdx,rsi
0x8b2d: mov rsi,rdi
0x8b30: xor edi,edi
0x8b32: jmp 0x8a70
0x8b40: mov r8,rcx
0x8b43: mov rcx,rdx
0x8b46: mov rdx,rsi
0x8b49: mov rsi,rdi
0x8b4c: xor edi,edi
0x8b4e: jmp 0x8a70
0x8b60: lea rcx,[rip+0x20a4d9]
0x8b67: jmp 0x8270
0x8b70: lea rcx,[rip+0x20a4c9]
0x8b77: mov rdx,rsi
0x8b7a: mov rsi,rdi
0x8b7d: xor edi,edi
0x8b7f: jmp 0x8270
0x8b90: lea rcx,[rip+0x20a4a9]
0x8b97: mov rdx,0xffffffff
0x8b9e: jmp 0x8270
0x8cf5: test r12,r12
0x8cf8: jnz 0x8cb0
0x8d03: nop qword ptr [rax+rax*1+0x0]
0x8d49: nop qword ptr [rax+0x0]
0x8d7d: nop qword ptr [rax]
0x8d8f: nop 
0x8da9: call 0x1f20
0x8db0: push r15
0x8db2: push r14
0x8db4: push r13
0x8db6: push r12
0x8db8: push rbp
0x8db9: push rbx
0x8dba: lea rbp,[rsi+0x1]
0x8dbe: sub rsp,0x68
0x8dc2: mov rax,0x28
0x8dcb: mov qword ptr [rsp+0x58],rax
0x8dd0: xor eax,eax
0x8dd2: mov qword ptr [rsp+0x10],rdx
0x8dd7: test rsi,rsi
0x8dda: mov eax,0x40
0x8ddf: mov edx,0x8
0x8de4: cmove rbp,rax
0x8de8: mov qword ptr [rsp+0x8],rdi
0x8ded: mov rax,rdx
0x8df0: mov qword ptr [rsp+0x18],rcx
0x8df5: mov qword ptr [rsp+0x38],r8
0x8dfa: mul rbp
0x8dfd: mov qword ptr [rsp+0x30],r9
0x8e02: jo 0x8fd0
0x8e08: xor ecx,ecx
0x8e0a: test rax,rax
0x8e0d: js 0x8fcb
0x8e13: test rcx,rcx
0x8e16: jnz 0x8fcb
0x8e1c: lea rbx,[rbp*8+0x0]
0x8e24: mov rdi,rbx
0x8e27: call 0x9ce0
0x8e2c: mov rdi,rbx
0x8e2f: mov r12,rax
0x8e32: xor ebx,ebx
0x8e34: call 0x9ce0
0x8e39: mov r13,rax
0x8e3c: lea rax,[rsp+0x40]
0x8e41: mov [rsp+0x40],0x0
0x8e4a: mov [rsp+0x48],0x0
0x8e53: mov qword ptr [rsp+0x20],rax
0x8e58: jmp 0x8e9c
0x8e5a: nop qword ptr [rax+rax*1+0x0]
0x8e60: cmp r14,0xffffffff
0x8e64: jz 0x8f1c
0x8e6a: mov r15,r14
0x8e6d: add r15,0x1
0x8e71: js 0x8fcb
0x8e77: mov rdi,r15
0x8e7a: call 0x9ce0
0x8e7f: mov rsi,qword ptr [rsp+0x48]
0x8e84: mov qword ptr [r13+rbx*8+0x0],r14
0x8e89: mov rdx,r15
0x8e8c: mov rdi,rax
0x8e8f: call 0x20a0
0x8e94: mov qword ptr [r12+rbx*8+0x0],rax
0x8e98: add rbx,0x1
0x8e9c: mov rcx,qword ptr [rsp+0x20]
0x8ea1: mov rdx,qword ptr [rsp+0x18]
0x8ea6: mov rsi,qword ptr [rsp+0x10]
0x8eab: mov rdi,qword ptr [rsp+0x8]
0x8eb0: call 0x8be0
0x8eb5: cmp rbx,rbp
0x8eb8: mov r14,rax
0x8ebb: jb 0x8e60
0x8ebd: test r12,r12
0x8ec0: jz 0x8f78
0x8ec6: mov rax,0x768614336404564649
0x8ed0: cmp rbp,rax
0x8ed3: jnbe 0x8fcb
0x8ed9: mov rax,rbp
0x8edc: mov rdi,r12
0x8edf: shr rax,0x1
0x8ee2: lea rbp,[rbp+rax*1+0x1]
0x8ee7: lea rdx,[rbp*8+0x0]
0x8eef: mov rsi,rdx
0x8ef2: mov qword ptr [rsp+0x28],rdx
0x8ef7: call 0x9d40
0x8efc: mov rdx,qword ptr [rsp+0x28]
0x8f01: mov r12,rax
0x8f04: mov rdi,r13
0x8f07: mov rsi,rdx
0x8f0a: call 0x9d40
0x8f0f: cmp r14,0xffffffff
0x8f13: mov r13,rax
0x8f16: jnz 0x8e6a
0x8f1c: mov [r12+rbx*8+0x0],0x0
0x8f24: mov rdi,qword ptr [rsp+0x48]
0x8f29: mov [r13+rbx*8+0x0],0x0
0x8f32: call 0x1dd0
0x8f37: cmp [rsp+0x30],0x0
0x8f3d: mov rax,qword ptr [rsp+0x38]
0x8f42: mov qword ptr [rax],r12
0x8f45: jz 0x8fc1
0x8f47: mov rax,qword ptr [rsp+0x30]
0x8f4c: mov qword ptr [rax],r13
0x8f4f: mov rcx,qword ptr [rsp+0x58]
0x8f54: xor rcx,0x28
0x8f5d: mov rax,rbx
0x8f60: jnz 0x8fda
0x8f62: add rsp,0x68
0x8f66: pop rbx
0x8f67: pop rbp
0x8f68: pop r12
0x8f6a: pop r13
0x8f6c: pop r14
0x8f6e: pop r15
0x8f70: ret
0x8f71: nop qword ptr [rax+0x0]
0x8f78: test rbp,rbp
0x8f7b: mov eax,0x10
0x8f80: mov edx,0x8
0x8f85: cmove rbp,rax
0x8f89: mov rax,rdx
0x8f8c: xor esi,esi
0x8f8e: mul rbp
0x8f91: jo 0x8fdf
0x8f93: test rax,rax
0x8f96: js 0x8fcb
0x8f98: test rsi,rsi
0x8f9b: jnz 0x8fcb
0x8f9d: lea rdx,[rbp*8+0x0]
0x8fa5: xor edi,edi
0x8fa7: mov rsi,rdx
0x8faa: mov qword ptr [rsp+0x28],rdx
0x8faf: call 0x9d40
0x8fb4: mov rdx,qword ptr [rsp+0x28]
0x8fb9: mov r12,rax
0x8fbc: jmp 0x8f04
0x8fc1: mov rdi,r13
0x8fc4: call 0x1dd0
0x8fc9: jmp 0x8f4f
0x8fcb: call 0x9f30
0x8fd0: mov ecx,0x1
0x8fd5: jmp 0x8e0a
0x8fda: call 0x1f20
0x8fdf: mov esi,0x1
0x8fe4: jmp 0x8f93
0x8ff0: push r13
0x8ff2: push r12
0x8ff4: mov r13d,edi
0x8ff7: push rbp
0x8ff8: push rbx
0x8ff9: mov r12,rsi
0x8ffc: mov rbx,rdx
0x8fff: sub rsp,0x8
0x9003: nop qword ptr [rax+rax*1+0x0]
0x9008: mov rdx,rbx
0x900b: mov rsi,r12
0x900e: mov edi,r13d
0x9011: call 0x1e90
0x9016: test rax,rax
0x9019: mov rbp,rax
0x901c: jns 0x9040
0x901e: call 0x1df0
0x9023: mov eax,dword ptr [rax]
0x9025: cmp eax,0x4
0x9028: jz 0x9008
0x902a: cmp eax,0x16
0x902d: jnz 0x9040
0x902f: cmp rbx,0x7ff00000
0x9036: jbe 0x9040
0x9038: mov ebx,0x7ff00000
0x903d: jmp 0x9008
0x903f: nop 
0x9040: add rsp,0x8
0x9044: mov rax,rbp
0x9047: pop rbx
0x9048: pop rbp
0x9049: pop r12
0x904b: pop r13
0x904d: ret
0x9050: push rbp
0x9051: push rbx
0x9052: mov rdx,rsi
0x9055: mov rbx,rsi
0x9058: xor esi,esi
0x905a: mov rbp,rdi
0x905d: sub rsp,0x8
0x9061: call 0x2020
0x9066: mov rdx,rax
0x9069: sub rdx,rbp
0x906c: add rdx,0x1
0x9070: test rax,rax
0x9073: mov rax,rbx
0x9076: cmovne rax,rdx
0x907a: add rsp,0x8
0x907e: pop rbx
0x907f: pop rbp
0x9080: ret
0x90da: mov qword ptr [rsp+0x38],rbx
0x90df: mov rdx,rbx
0x90e2: mov ecx,dword ptr [rdx]
0x90e4: add rdx,0x4
0x90e8: lea eax,[rcx-0x1010101]
0x90ee: not ecx
0x90f0: and eax,ecx
0x90f2: and eax,0x80808080
0x90f7: jz 0x90e2
0x90f9: mov ecx,eax
0x90fb: mov [rsp+0x28],0x0
0x9100: mov [rsp+0x2c],0x0
0x9109: shr ecx,0x10
0x910c: test eax,0x8080
0x9111: mov [rsp+0x34],0x0
0x9116: cmove eax,ecx
0x9119: lea rcx,[rdx+0x2]
0x911d: mov esi,eax
0x911f: cmove rdx,rcx
0x9123: add sil,al
0x9126: mov rsi,rbx
0x9129: sbb rdx,0x3
0x912d: xor r15d,r15d
0x9130: cmp rdx,rbx
0x9133: mov r14,rdx
0x9136: mov qword ptr [rsp+0x20],rdx
0x913b: jbe 0x93a0
0x9141: lea rbp,[rsp+0x20]
0x9146: lea rax,[rbp+0xc]
0x914a: mov qword ptr [rsp+0x18],rax
0x914f: jmp 0x918e
0x9151: nop qword ptr [rax+0x0]
0x9158: cmp [rsp+0x48],0x0
0x915d: mov r15d,0x1
0x9163: jz 0x9177
0x9165: mov edi,dword ptr [rsp+0x4c]
0x9169: xor r15d,r15d
0x916c: call 0x21a0
0x9171: test eax,eax
0x9173: setz r15b
0x9177: lea rsi,[r12+r13*1+0x0]
0x917b: mov [rsp+0x34],0x0
0x9180: cmp rsi,r14
0x9183: mov qword ptr [rsp+0x38],rsi
0x9188: jnb 0x9390
0x918e: cmp [rsp+0x28],0x0
0x9193: jnz 0x94c1
0x9199: movzx ecx,byte ptr [rsi]
0x919c: lea rdi,[rip+0x77fd]
0x91a3: mov eax,ecx
0x91a5: shr al,0x5
0x91a8: and eax,0x7
0x91ab: mov eax,dword ptr [rdi+rax*4+0x0]
0x91ae: bt eax,ecx
0x91b1: jnb 0x94a0
0x91b7: mov [rsp+0x40],0x1
0x91c0: movsx eax,byte ptr [rsi]
0x91c3: mov r13d,0x1
0x91c9: mov r12,qword ptr [rsp+0x38]
0x91ce: mov r14,qword ptr [rsp+0x20]
0x91d3: mov [rsp+0x48],0x1
0x91d8: mov dword ptr [rsp+0x4c],eax
0x91dc: test r15d,r15d
0x91df: mov [rsp+0x34],0x1
0x91e4: jz 0x9158
0x91ea: cmp r15d,0x1
0x91ee: jz 0x9540
0x91f4: cmp r15d,0x2
0x91f8: jnz 0x9610
0x91fe: cmp [rsp+0x48],0x0
0x9203: jz 0x9610
0x9209: mov edi,dword ptr [rsp+0x4c]
0x920d: call 0x21a0
0x9212: test eax,eax
0x9214: mov eax,0x1
0x9219: cmove r15d,eax
0x921d: jmp 0x9177
0x9222: nop qword ptr [rax+rax*1+0x0]
0x9247: mov ecx,eax
0x9249: mov [rsp+0x28],0x0
0x924e: mov [rsp+0x2c],0x0
0x9257: shr ecx,0x10
0x925a: test eax,0x8080
0x925f: mov [rsp+0x34],0x0
0x9264: cmove eax,ecx
0x9267: lea rcx,[rdx+0x2]
0x926b: mov r15,rbx
0x926e: mov esi,eax
0x9270: cmove rdx,rcx
0x9274: add sil,al
0x9277: sbb rdx,0x3
0x927b: cmp rdx,rbx
0x927e: mov qword ptr [rsp+0x20],rdx
0x9283: jbe 0x95e0
0x9289: lea rbp,[rsp+0x20]
0x928e: lea r14,[rip+0x770b]
0x9295: lea r13,[rbp+0xc]
0x9299: jmp 0x9307
0x929b: nop qword ptr [rax+rax*1+0x0]
0x92a0: movzx ecx,byte ptr [r15]
0x92a4: mov eax,ecx
0x92a6: shr al,0x5
0x92a9: and eax,0x7
0x92ac: mov eax,dword ptr [r14+rax*4+0x0]
0x92b0: bt eax,ecx
0x92b3: jnb 0x9578
0x92b9: mov [rsp+0x40],0x1
0x92c2: movsx eax,byte ptr [r15]
0x92c6: mov r15,qword ptr [rsp+0x38]
0x92cb: mov [rsp+0x48],0x1
0x92d0: mov [rsp+0x34],0x1
0x92d5: mov dword ptr [rsp+0x4c],eax
0x92d9: mov edi,dword ptr [rsp+0x4c]
0x92dd: call 0x21a0
0x92e2: test eax,eax
0x92e4: jz 0x95e0
0x92ea: add r15,qword ptr [rsp+0x40]
0x92ef: mov rdx,qword ptr [rsp+0x20]
0x92f4: mov [rsp+0x34],0x0
0x92f9: cmp r15,rdx
0x92fc: mov qword ptr [rsp+0x38],r15
0x9301: jnb 0x95e0
0x9307: cmp [rsp+0x28],0x0
0x930c: jz 0x92a0
0x930e: lea rcx,[rbp+0xc]
0x9312: lea rdi,[rbp+0x2c]
0x9316: sub rdx,r15
0x9319: mov rsi,r15
0x931c: call 0x9ff0
0x9321: cmp rax,0xffffffff
0x9325: mov qword ptr [rsp+0x40],rax
0x932a: jz 0x95c8
0x9330: cmp rax,0xfffffffe
0x9334: mov r15,qword ptr [rsp+0x38]
0x9339: jz 0x9640
0x933f: test rax,rax
0x9342: jnz 0x9363
0x9344: mov [rsp+0x40],0x1
0x934d: cmp [r15],0x0
0x9351: jnz 0x96a0
0x9357: mov edx,dword ptr [rsp+0x4c]
0x935b: test edx,edx
0x935d: jnz 0x969b
0x9363: lea rdi,[rbp+0xc]
0x9367: mov [rsp+0x48],0x1
0x936c: call 0x22b0
0x9371: test eax,eax
0x9373: jz 0x9660
0x9379: mov [rsp+0x28],0x0
0x937e: mov [rsp+0x34],0x1
0x9383: jmp 0x92d9
0x9388: nop qword ptr [rax+rax*1+0x0]
0x9390: cmp r15d,0x2
0x9394: jnz 0x93a0
0x9396: mov rax,qword ptr [rsp+0x8]
0x939b: mov [rax],0x0
0x939e: nop 
0x93a0: mov rax,rbx
0x93a3: mov rbx,qword ptr [rsp+0x68]
0x93a8: xor rbx,0x28
0x93b1: jnz 0x9672
0x93b7: add rsp,0x78
0x93bb: pop rbx
0x93bc: pop rbp
0x93bd: pop r12
0x93bf: pop r13
0x93c1: pop r14
0x93c3: pop r15
0x93c5: ret
0x93c6: nop qword ptr [rax+rax*1+0x0]
0x93ee: nop 
0x9440: mov ecx,eax
0x9442: shr ecx,0x10
0x9445: test eax,0x8080
0x944a: cmove eax,ecx
0x944d: lea rcx,[rdx+0x2]
0x9451: mov esi,eax
0x9453: cmove rdx,rcx
0x9457: add sil,al
0x945a: sbb rdx,0x3
0x945e: lea rbp,[rdx-0x1]
0x9462: cmp rbx,rbp
0x9465: jnbe 0x93a0
0x946b: call 0x22d0
0x9470: mov rdx,qword ptr [rax]
0x9473: jmp 0x9489
0x9475: nop qword ptr [rax]
0x9478: mov [rbp+0x0],0x0
0x947c: sub rbp,0x1
0x9480: cmp rbx,rbp
0x9483: jnbe 0x93a0
0x9489: movzx eax,byte ptr [rbp+0x0]
0x948d: test [rdx+rax*2+0x1],0x20
0x9492: jnz 0x9478
0x9494: jmp 0x93a0
0x9499: nop qword ptr [rax+0x0]
0x94a0: mov rdi,qword ptr [rsp+0x18]
0x94a5: mov qword ptr [rsp+0x10],rsi
0x94aa: call 0x22b0
0x94af: test eax,eax
0x94b1: jz 0x967c
0x94b7: mov rsi,qword ptr [rsp+0x10]
0x94bc: mov [rsp+0x28],0x1
0x94c1: lea rcx,[rbp+0xc]
0x94c5: mov rdx,r14
0x94c8: lea rdi,[rbp+0x2c]
0x94cc: sub rdx,rsi
0x94cf: call 0x9ff0
0x94d4: cmp rax,0xffffffff
0x94d8: mov qword ptr [rsp+0x40],rax
0x94dd: jz 0x95a0
0x94e3: cmp rax,0xfffffffe
0x94e7: mov r12,qword ptr [rsp+0x38]
0x94ec: jz 0x9620
0x94f2: test rax,rax
0x94f5: jnz 0x9517
0x94f7: mov [rsp+0x40],0x1
0x9500: cmp [r12],0x0
0x9505: jnz 0x96a0
0x950b: mov eax,dword ptr [rsp+0x4c]
0x950f: test eax,eax
0x9511: jnz 0x969b
0x9517: lea rdi,[rbp+0xc]
0x951b: mov [rsp+0x48],0x1
0x9520: call 0x22b0
0x9525: test eax,eax
0x9527: mov r14,qword ptr [rsp+0x20]
0x952c: jz 0x9533
0x952e: mov [rsp+0x28],0x0
0x9533: mov r13,qword ptr [rsp+0x40]
0x9538: jmp 0x91dc
0x953d: nop qword ptr [rax]
0x9540: cmp [rsp+0x48],0x0
0x9545: jz 0x9177
0x954b: mov edi,dword ptr [rsp+0x4c]
0x954f: call 0x21a0
0x9554: mov rsi,qword ptr [rsp+0x8]
0x9559: test eax,eax
0x955b: mov eax,0x2
0x9560: cmovne r15d,eax
0x9564: cmovne rsi,r12
0x9568: mov qword ptr [rsp+0x8],rsi
0x956d: jmp 0x9177
0x9572: nop qword ptr [rax+rax*1+0x0]
0x9578: mov rdi,r13
0x957b: mov qword ptr [rsp+0x10],rdx
0x9580: call 0x22b0
0x9585: test eax,eax
0x9587: mov rdx,qword ptr [rsp+0x10]
0x958c: jz 0x967c
0x9592: mov [rsp+0x28],0x1
0x9597: jmp 0x930e
0x959c: nop qword ptr [rax+0x0]
0x95a0: mov [rsp+0x40],0x1
0x95a9: mov [rsp+0x48],0x0
0x95ae: mov r13d,0x1
0x95b4: mov r12,qword ptr [rsp+0x38]
0x95b9: mov r14,qword ptr [rsp+0x20]
0x95be: jmp 0x91dc
0x95c3: nop qword ptr [rax+rax*1+0x0]
0x95c8: mov r15,qword ptr [rsp+0x38]
0x95cd: mov [rsp+0x40],0x1
0x95d6: mov [rsp+0x48],0x0
0x95db: mov [rsp+0x34],0x1
0x95e0: mov rdi,r15
0x95e3: call 0x1f00
0x95e8: lea rdx,[rax+0x1]
0x95ec: mov rsi,r15
0x95ef: mov rdi,rbx
0x95f2: call 0x21d0
0x95f7: cmp r12d,0x1
0x95fb: jz 0x93a0
0x9601: jmp 0x90da
0x9606: nop qword ptr [rax+rax*1+0x0]
0x9610: mov r15d,0x1
0x9616: jmp 0x9177
0x961b: nop qword ptr [rax+rax*1+0x0]
0x9620: mov r14,qword ptr [rsp+0x20]
0x9625: mov [rsp+0x48],0x0
0x962a: mov r13,r14
0x962d: sub r13,r12
0x9630: mov qword ptr [rsp+0x40],r13
0x9635: jmp 0x91dc
0x963a: nop qword ptr [rax+rax*1+0x0]
0x9640: mov rax,qword ptr [rsp+0x20]
0x9645: mov [rsp+0x48],0x0
0x964a: mov [rsp+0x34],0x1
0x964f: sub rax,r15
0x9652: mov qword ptr [rsp+0x40],rax
0x9657: jmp 0x95e0
0x9659: nop qword ptr [rax+0x0]
0x9660: mov [rsp+0x34],0x1
0x9665: jmp 0x92d9
0x9672: call 0x1f20
0x967c: lea rcx,[rip+0x6f6d]
0x9683: lea rsi,[rip+0x6f3e]
0x968a: lea rdi,[rip+0x69f9]
0x9691: mov edx,0x8e
0x9696: call 0x1fe0
0x969b: call 0x2333
0x96a0: lea rcx,[rip+0x6f49]
0x96a7: lea rsi,[rip+0x6f1a]
0x96ae: lea rdi,[rip+0x69ec]
0x96b5: mov edx,0xa9
0x96ba: call 0x1fe0
0x9766: nop qword ptr [rax+rax*1+0x0]
0x97f5: nop qword ptr [rax]
0x97f8: mov r8,rcx
0x97fb: mov rcx,rdx
0x97fe: lea rdx,[rip+0x6e09]
0x9805: mov esi,0x1
0x980a: xor eax,eax
0x980c: call 0x2250
0x9811: jmp 0x96fc
0x9816: nop qword ptr [rax+rax*1+0x0]
0x9875: nop qword ptr [rax]
0x98b1: nop qword ptr [rax+0x0]
0x98f8: nop qword ptr [rax+rax*1+0x0]
0x9947: nop qword ptr [rax+rax*1+0x0]
0x99a4: nop qword ptr [rax+0x0]
0x99d2: nop qword ptr [rax+rax*1+0x0]
0x9a86: nop qword ptr [rax+rax*1+0x0]
0x9ae0: xor r9d,r9d
0x9ae3: cmp [r8],0x0
0x9ae7: jz 0x9afb
0x9ae9: nop qword ptr [rax+0x0]
0x9af0: add r9,0x1
0x9af4: cmp [r8+r9*8+0x0],0x0
0x9af9: jnz 0x9af0
0x9afb: jmp 0x96c0
0x9b00: sub rsp,0x68
0x9b04: mov r10,r8
0x9b07: xor r9d,r9d
0x9b0a: mov rax,0x28
0x9b13: mov qword ptr [rsp+0x58],rax
0x9b18: xor eax,eax
0x9b1a: mov r8,rsp
0x9b1d: nop qword ptr [rax]
0x9b20: mov eax,dword ptr [r10]
0x9b23: cmp eax,0x2f
0x9b26: jnbe 0x9b6a
0x9b28: mov r11d,eax
0x9b2b: add r11,qword ptr [r10+0x10]
0x9b2f: add eax,0x8
0x9b32: mov dword ptr [r10],eax
0x9b35: mov rax,qword ptr [r11]
0x9b38: test rax,rax
0x9b3b: mov qword ptr [r8+r9*8+0x0],rax
0x9b3f: jz 0x9b4b
0x9b41: add r9,0x1
0x9b45: cmp r9,0xa
0x9b49: jnz 0x9b20
0x9b4b: call 0x96c0
0x9b50: mov rax,qword ptr [rsp+0x58]
0x9b55: xor rax,0x28
0x9b5e: jnz 0x9b65
0x9b60: add rsp,0x68
0x9b64: ret
0x9b65: call 0x1f20
0x9b6a: mov r11,qword ptr [r10+0x8]
0x9b6e: lea rax,[r11+0x8]
0x9b72: mov qword ptr [r10+0x8],rax
0x9b76: jmp 0x9b35
0x9c40: call 0x1f20
0x9c4c: mov rax,rbx
0x9c4f: add rbx,0x8
0x9c53: jmp 0x9c06
0x9c60: push rbx
0x9c61: lea rsi,[rip+0x69f4]
0x9c68: mov edx,0x5
0x9c6d: xor edi,edi
0x9c6f: call 0x1ee0
0x9c74: lea rdx,[rip+0x69f6]
0x9c7b: mov rsi,rax
0x9c7e: mov edi,0x1
0x9c83: xor eax,eax
0x9c85: call 0x2170
0x9c8a: lea rsi,[rip+0x69f6]
0x9c91: mov edx,0x5
0x9c96: xor edi,edi
0x9c98: call 0x1ee0
0x9c9d: lea rcx,[rip+0x3044]
0x9ca4: lea rdx,[rip+0x31f0]
0x9cab: mov rsi,rax
0x9cae: mov edi,0x1
0x9cb3: xor eax,eax
0x9cb5: call 0x2170
0x9cba: mov rbx,qword ptr [rip+0x2093e7]
0x9cc1: lea rsi,[rip+0x6bf0]
0x9cc8: xor edi,edi
0x9cca: mov edx,0x5
0x9ccf: call 0x1ee0
0x9cd4: mov rsi,rbx
0x9cd7: mov rdi,rax
0x9cda: pop rbx
0x9cdb: jmp 0x2050
0x9d00: mov rax,rdi
0x9d03: mul rsi
0x9d06: mov rdi,rax
0x9d09: seto al
0x9d0c: test rdi,rdi
0x9d0f: js 0x9d1b
0x9d11: movzx eax,al
0x9d14: test rax,rax
0x9d17: jnz 0x9d1b
0x9d19: jmp 0x9ce0
0x9d1b: sub rsp,0x8
0x9d1f: call 0x9f30
0x9d62: nop qword ptr [rax+rax*1+0x0]
0x9d80: mov rax,rsi
0x9d83: mul rdx
0x9d86: mov rsi,rax
0x9d89: seto al
0x9d8c: test rsi,rsi
0x9d8f: js 0x9d9b
0x9d91: movzx eax,al
0x9d94: test rax,rax
0x9d97: jnz 0x9d9b
0x9d99: jmp 0x9d40
0x9d9b: sub rsp,0x8
0x9d9f: call 0x9f30
0x9db0: test rdi,rdi
0x9db3: mov r9,rdx
0x9db6: mov rcx,qword ptr [rsi]
0x9db9: jz 0x9df0
0x9dbb: xor edx,edx
0x9dbd: mov rax,0x6148914691236517204
0x9dc7: div r9
0x9dca: cmp rax,rcx
0x9dcd: jbe 0x9e0b
0x9dcf: mov rax,rcx
0x9dd2: shr rax,0x1
0x9dd5: lea rcx,[rax+rcx*1+0x1]
0x9dda: mov qword ptr [rsi],rcx
0x9ddd: imul rcx,r9
0x9de1: mov rsi,rcx
0x9de4: jmp 0x9d40
0x9de9: nop qword ptr [rax+0x0]
0x9df0: test rcx,rcx
0x9df3: jz 0x9e18
0x9df5: mov rax,rcx
0x9df8: mul r9
0x9dfb: seto dl
0x9dfe: test rax,rax
0x9e01: movzx edx,dl
0x9e04: js 0x9e0b
0x9e06: test rdx,rdx
0x9e09: jz 0x9dda
0x9e0b: sub rsp,0x8
0x9e0f: call 0x9f30
0x9e14: nop qword ptr [rax+0x0]
0x9e18: xor edx,edx
0x9e1a: mov eax,0x80
0x9e1f: xor r8d,r8d
0x9e22: div r9
0x9e25: test rax,rax
0x9e28: setz r8b
0x9e2c: lea rcx,[r8+rax*1+0x0]
0x9e30: jmp 0x9df5
0x9e40: test rdi,rdi
0x9e43: mov rax,qword ptr [rsi]
0x9e46: jz 0x9e70
0x9e48: mov rdx,0x6148914691236517203
0x9e52: cmp rax,rdx
0x9e55: jnbe 0x9e81
0x9e57: mov rdx,rax
0x9e5a: shr rdx,0x1
0x9e5d: lea rax,[rdx+rax*1+0x1]
0x9e62: mov qword ptr [rsi],rax
0x9e65: mov rsi,rax
0x9e68: jmp 0x9d40
0x9e6d: nop qword ptr [rax]
0x9e70: test rax,rax
0x9e73: mov edx,0x80
0x9e78: cmove rax,rdx
0x9e7c: test rax,rax
0x9e7f: jns 0x9e62
0x9e81: sub rsp,0x8
0x9e85: call 0x9f30
0x9e90: push rbx
0x9e91: mov rbx,rdi
0x9e94: call 0x9ce0
0x9e99: mov rdx,rbx
0x9e9c: xor esi,esi
0x9e9e: mov rdi,rax
0x9ea1: pop rbx
0x9ea2: jmp 0x1ff0
0x9eb0: mov rax,rdi
0x9eb3: sub rsp,0x8
0x9eb7: mul rsi
0x9eba: seto dl
0x9ebd: test rax,rax
0x9ec0: js 0x9ed9
0x9ec2: movzx edx,dl
0x9ec5: test rdx,rdx
0x9ec8: jnz 0x9ed9
0x9eca: call 0x2060
0x9ecf: test rax,rax
0x9ed2: jz 0x9ed9
0x9ed4: add rsp,0x8
0x9ed8: ret
0x9ed9: call 0x9f30
0x9ee0: push rbp
0x9ee1: push rbx
0x9ee2: mov rbp,rdi
0x9ee5: mov rdi,rsi
0x9ee8: mov rbx,rsi
0x9eeb: sub rsp,0x8
0x9eef: call 0x9ce0
0x9ef4: add rsp,0x8
0x9ef8: mov rdx,rbx
0x9efb: mov rsi,rbp
0x9efe: pop rbx
0x9eff: pop rbp
0x9f00: mov rdi,rax
0x9f03: jmp 0x20a0
0x9f10: push rbx
0x9f11: mov rbx,rdi
0x9f14: call 0x1f00
0x9f19: mov rdi,rbx
0x9f1c: lea rsi,[rax+0x1]
0x9f20: pop rbx
0x9f21: jmp 0x9ee0
0x9f60: call 0x1de0
0x9f70: push rbx
0x9f71: call 0xbfe0
0x9f76: test eax,eax
0x9f78: mov ebx,eax
0x9f7a: js 0x9f80
0x9f7c: mov eax,ebx
0x9f7e: pop rbx
0x9f7f: ret
0x9f80: call 0x1df0
0x9f85: cmp [rax],0xc
0x9f88: jnz 0x9f7c
0x9f8a: call 0x9f30
0x9f90: push rbx
0x9f91: call 0xc2a0
0x9f96: test rax,rax
0x9f99: mov rbx,rax
0x9f9c: jz 0x9fa8
0x9f9e: mov rax,rbx
0x9fa1: pop rbx
0x9fa2: ret
0x9fa3: nop qword ptr [rax+rax*1+0x0]
0x9fa8: call 0x1df0
0x9fad: cmp [rax],0xc
0x9fb0: jnz 0x9f9e
0x9fb2: call 0x9f30
0x9fd3: nop qword ptr [rax+rax*1+0x0]
0xa06e: call 0x1f20
0xa089: nop qword ptr [rax+0x0]
0xa0d0: push r12
0xa0d2: push rbp
0xa0d3: mov rbp,rdi
0xa0d6: push rbx
0xa0d7: call 0x1e20
0xa0dc: mov ebx,dword ptr [rbp+0x0]
0xa0df: mov rdi,rbp
0xa0e2: mov r12,rax
0xa0e5: call 0xc5e0
0xa0ea: and ebx,0x20
0xa0ed: test ebx,ebx
0xa0ef: jnz 0xa108
0xa0f1: test eax,eax
0xa0f3: jz 0xa0ff
0xa0f5: test r12,r12
0xa0f8: mov eax,0xffffffff
0xa0fd: jz 0xa138
0xa0ff: pop rbx
0xa100: pop rbp
0xa101: pop r12
0xa103: ret
0xa104: nop qword ptr [rax+0x0]
0xa108: test eax,eax
0xa10a: jnz 0xa128
0xa10c: call 0x1df0
0xa111: mov [rax],0x0
0xa117: mov eax,0xffffffff
0xa11c: pop rbx
0xa11d: pop rbp
0xa11e: pop r12
0xa120: ret
0xa121: nop qword ptr [rax+0x0]
0xa128: pop rbx
0xa129: mov eax,0xffffffff
0xa12e: pop rbp
0xa12f: pop r12
0xa131: ret
0xa132: nop qword ptr [rax+rax*1+0x0]
0xa138: call 0x1df0
0xa13d: cmp [rax],0x9
0xa140: pop rbx
0xa141: pop rbp
0xa142: pop r12
0xa144: setnz al
0xa147: movzx eax,al
0xa14a: neg eax
0xa14c: ret
0xa18a: nop qword ptr [rax+rax*1+0x0]
0xa1d6: nop qword ptr [rax+rax*1+0x0]
0xa1f0: push rbx
0xa1f1: mov ebx,edi
0xa1f3: call 0x20d0
0xa1f8: test eax,eax
0xa1fa: js 0xa200
0xa1fc: pop rbx
0xa1fd: ret
0xa1fe: nop 
0xa200: mov edi,ebx
0xa202: call 0x1e80
0xa207: test eax,eax
0xa209: setz al
0xa20c: movzx eax,al
0xa20f: pop rbx
0xa210: ret
0xa220: push rbp
0xa221: push rbx
0xa222: mov rbx,rsi
0xa225: lea rax,[rbx+0x18]
0xa229: mov rbp,rdi
0xa22c: sub rsp,0x8
0xa230: mov rsi,qword ptr [rsi]
0xa233: mov rdx,qword ptr [rbx+0x8]
0xa237: cmp rsi,rax
0xa23a: jz 0xa260
0xa23c: mov qword ptr [rdi],rsi
0xa23f: movzx eax,byte ptr [rbx+0x10]
0xa243: mov qword ptr [rbp+0x8],rdx
0xa247: test al,al
0xa249: mov byte ptr [rbp+0x10],al
0xa24c: jz 0xa254
0xa24e: mov eax,dword ptr [rbx+0x14]
0xa251: mov dword ptr [rbp+0x14],eax
0xa254: add rsp,0x8
0xa258: pop rbx
0xa259: pop rbp
0xa25a: ret
0xa25b: nop qword ptr [rax+rax*1+0x0]
0xa260: lea rcx,[rdi+0x18]
0xa264: mov rdi,rcx
0xa267: call 0x20a0
0xa26c: mov rdx,qword ptr [rbx+0x8]
0xa270: mov qword ptr [rbp+0x0],rax
0xa274: jmp 0xa23f
0xa280: mov eax,edi
0xa282: lea rdx,[rip+0x6717]
0xa289: mov ecx,edi
0xa28b: shr al,0x5
0xa28e: and ecx,0x1f
0xa291: and eax,0x7
0xa294: mov eax,dword ptr [rdx+rax*4+0x0]
0xa297: shr eax,cl
0xa299: and eax,0x1
0xa29c: ret
0xa2a0: push rbp
0xa2a1: mov rbp,rsp
0xa2a4: push r12
0xa2a6: push rbx
0xa2a7: mov r12,rdx
0xa2aa: mov edx,0x8
0xa2af: mov rbx,rdi
0xa2b2: sub rsp,0x20
0xa2b6: mov rax,0x28
0xa2bf: mov qword ptr [rbp-0x18],rax
0xa2c3: xor eax,eax
0xa2c5: mov rax,rdx
0xa2c8: mul r12
0xa2cb: jo 0xa43d
0xa2d1: xor edi,edi
0xa2d3: test rax,rax
0xa2d6: js 0xa3b0
0xa2dc: test rdi,rdi
0xa2df: jnz 0xa3b0
0xa2e5: lea rdi,[r12*8+0x0]
0xa2ed: cmp rdi,0xfa0
0xa2f4: jnbe 0xa418
0xa2fa: add rdi,0x3d
0xa2fe: and rdi,0xfffffff0
0xa302: sub rsp,rdi
0xa305: lea rdi,[rsp+0xf]
0xa30a: and rdi,0xfffffff0
0xa30e: add rdi,0x1f
0xa312: and rdi,0xffffffe0
0xa316: test rdi,rdi
0xa319: jz 0xa3b0
0xa31f: cmp r12,0x2
0xa323: mov [rdi+0x8],0x1
0xa32b: jbe 0xa371
0xa32d: xor edx,edx
0xa32f: mov r8d,0x2
0xa335: nop qword ptr [rax]
0xa338: movzx eax,byte ptr [rsi+r8*1-0x1]
0xa33e: cmp al,byte ptr [rsi+rdx*1+0x0]
0xa341: jnz 0xa35d
0xa343: jmp 0xa400
0xa348: nop qword ptr [rax+rax*1+0x0]
0xa350: sub rdx,qword ptr [rdi+rdx*8+0x0]
0xa354: cmp byte ptr [rsi+rdx*1+0x0],al
0xa357: jz 0xa400
0xa35d: test rdx,rdx
0xa360: jnz 0xa350
0xa362: mov qword ptr [rdi+r8*8+0x0],r8
0xa366: xor edx,edx
0xa368: add r8,0x1
0xa36c: cmp r12,r8
0xa36f: jnz 0xa338
0xa371: mov [rcx],0x0
0xa378: movzx edx,byte ptr [rbx]
0xa37b: mov r8,rbx
0xa37e: xor eax,eax
0xa380: test dl,dl
0xa382: jz 0xa39c
0xa384: cmp byte ptr [rsi+rax*1+0x0],dl
0xa387: jz 0xa3d0
0xa389: test rax,rax
0xa38c: jz 0xa3f0
0xa38e: mov r9,qword ptr [rdi+rax*8+0x0]
0xa392: add rbx,r9
0xa395: sub rax,r9
0xa398: test dl,dl
0xa39a: jnz 0xa384
0xa39c: call 0xc740
0xa3a1: mov eax,0x1
0xa3a6: jmp 0xa3b2
0xa3a8: nop qword ptr [rax+rax*1+0x0]
0xa3b0: xor eax,eax
0xa3b2: mov rcx,qword ptr [rbp-0x18]
0xa3b6: xor rcx,0x28
0xa3bf: jnz 0xa447
0xa3c5: lea rsp,[rbp-0x10]
0xa3c9: pop rbx
0xa3ca: pop r12
0xa3cc: pop rbp
0xa3cd: ret
0xa3ce: nop 
0xa3d0: add rax,0x1
0xa3d4: lea r9,[r8+0x1]
0xa3d8: cmp r12,rax
0xa3db: jz 0xa435
0xa3dd: movzx edx,byte ptr [r8+0x1]
0xa3e2: mov r8,r9
0xa3e5: jmp 0xa380
0xa3e7: nop qword ptr [rax+rax*1+0x0]
0xa3f0: movzx edx,byte ptr [r8+0x1]
0xa3f5: add rbx,0x1
0xa3f9: add r8,0x1
0xa3fd: jmp 0xa380
0xa3ff: nop 
0xa400: add rdx,0x1
0xa404: mov rax,r8
0xa407: sub rax,rdx
0xa40a: mov qword ptr [rdi+r8*8+0x0],rax
0xa40e: jmp 0xa368
0xa413: nop qword ptr [rax+rax*1+0x0]
0xa418: mov qword ptr [rbp-0x30],rcx
0xa41c: mov qword ptr [rbp-0x28],rsi
0xa420: call 0xc700
0xa425: mov rcx,qword ptr [rbp-0x30]
0xa429: mov rdi,rax
0xa42c: mov rsi,qword ptr [rbp-0x28]
0xa430: jmp 0xa316
0xa435: mov qword ptr [rcx],rbx
0xa438: jmp 0xa39c
0xa43d: mov edi,0x1
0xa442: jmp 0xa2d3
0xa447: call 0x1f20
0xa450: push rbp
0xa451: mov rbp,rsp
0xa454: push r15
0xa456: push r14
0xa458: push r13
0xa45a: push r12
0xa45c: push rbx
0xa45d: mov rbx,rsi
0xa460: sub rsp,0x108
0xa467: mov qword ptr [rbp-0x118],rdi
0xa46e: mov rdi,rsi
0xa471: mov qword ptr [rbp-0x128],rdx
0xa478: mov rax,0x28
0xa481: mov qword ptr [rbp-0x38],rax
0xa485: xor eax,eax
0xa487: call 0xc770
0xa48c: mov edx,0x38
0xa491: mov rsi,rax
0xa494: mov qword ptr [rbp-0x108],rax
0xa49b: mov rax,rdx
0xa49e: mul rsi
0xa4a1: jo 0xaeb7
0xa4a7: xor ecx,ecx
0xa4a9: test rax,rax
0xa4ac: js 0xa8d0
0xa4b2: test rcx,rcx
0xa4b5: jnz 0xa8d0
0xa4bb: mov rax,qword ptr [rbp-0x108]
0xa4c2: lea rdi,[rax*8+0x0]
0xa4ca: sub rdi,rax
0xa4cd: shl rdi,0x3
0xa4d1: cmp rdi,0xfa0
0xa4d8: jnbe 0xae14
0xa4de: add rdi,0x3d
0xa4e2: and rdi,0xfffffff0
0xa4e6: sub rsp,rdi
0xa4e9: lea r12,[rsp+0xf]
0xa4ee: and r12,0xfffffff0
0xa4f2: add r12,0x1f
0xa4f6: and r12,0xffffffe0
0xa4fa: test r12,r12
0xa4fd: jz 0xa8d0
0xa503: mov rax,qword ptr [rbp-0x108]
0xa50a: mov qword ptr [rbp-0xf0],rbx
0xa511: lea rbx,[rbp-0x100]
0xa518: mov [rbp-0x100],0x0
0xa51f: mov [rbp-0xfc],0x0
0xa52a: mov r15,r12
0xa52d: mov [rbp-0xf4],0x0
0xa534: mov r14d,0x1
0xa53a: lea r13,[rax+rax*2+0x0]
0xa53e: lea rax,[rbx+0x4]
0xa542: shl r13,0x4
0xa546: mov qword ptr [rbp-0x120],rax
0xa54d: add r13,r12
0xa550: jmp 0xa601
0xa555: nop qword ptr [rax]
0xa558: mov rcx,qword ptr [rbp-0xf0]
0xa55f: lea rsi,[rip+0x643a]
0xa566: movzx edx,byte ptr [rcx]
0xa569: mov eax,edx
0xa56b: shr al,0x5
0xa56e: and eax,0x7
0xa571: mov eax,dword ptr [rsi+rax*4+0x0]
0xa574: bt eax,edx
0xa577: jnb 0xa8f8
0xa57d: mov [rbp-0xe8],0x1
0xa588: movsx eax,byte ptr [rcx]
0xa58b: mov byte ptr [rbp-0xe0],r14b
0xa592: mov byte ptr [rbp-0xf4],r14b
0xa599: mov dword ptr [rbp-0xdc],eax
0xa59f: mov r8d,dword ptr [rbp-0xdc]
0xa5a6: test r8d,r8d
0xa5a9: jz 0xa6d0
0xa5af: mov eax,0x1
0xa5b4: mov rsi,qword ptr [rbp-0xf0]
0xa5bb: lea rcx,[rbx+0x28]
0xa5bf: mov rdx,qword ptr [rbp-0xe8]
0xa5c6: cmp rsi,rcx
0xa5c9: jz 0xa920
0xa5cf: mov qword ptr [r15],rsi
0xa5d2: test al,al
0xa5d4: mov qword ptr [r15+0x8],rdx
0xa5d8: mov byte ptr [r15+0x10],al
0xa5dc: jz 0xa5e8
0xa5de: mov eax,dword ptr [rbp-0xdc]
0xa5e4: mov dword ptr [r15+0x14],eax
0xa5e8: mov rax,qword ptr [rbp-0xe8]
0xa5ef: add qword ptr [rbp-0xf0],rax
0xa5f6: add r15,0x30
0xa5fa: mov [rbp-0xf4],0x0
0xa601: cmp [rbp-0x100],0x0
0xa608: jz 0xa558
0xa60e: call 0x1ef0
0xa613: mov r9,qword ptr [rbp-0xf0]
0xa61a: mov rsi,rax
0xa61d: mov rdi,r9
0xa620: mov qword ptr [rbp-0x110],r9
0xa627: call 0x9050
0xa62c: mov r9,qword ptr [rbp-0x110]
0xa633: lea rcx,[rbx+0x4]
0xa637: lea rdi,[rbx+0x24]
0xa63b: mov rdx,rax
0xa63e: mov rsi,r9
0xa641: call 0x9ff0
0xa646: cmp rax,0xffffffff
0xa64a: mov qword ptr [rbp-0xe8],rax
0xa651: jz 0xa948
0xa657: cmp rax,0xfffffffe
0xa65b: jz 0xadc9
0xa661: test rax,rax
0xa664: jnz 0xa691
0xa666: mov rax,qword ptr [rbp-0xf0]
0xa66d: mov [rbp-0xe8],0x1
0xa678: cmp [rax],0x0
0xa67b: jnz 0xae93
0xa681: mov r9d,dword ptr [rbp-0xdc]
0xa688: test r9d,r9d
0xa68b: jnz 0xaeb2
0xa691: lea rdi,[rbx+0x4]
0xa695: mov byte ptr [rbp-0xe0],r14b
0xa69c: call 0x22b0
0xa6a1: test eax,eax
0xa6a3: jz 0xadf1
0xa6a9: mov r8d,dword ptr [rbp-0xdc]
0xa6b0: mov [rbp-0x100],0x0
0xa6b7: mov byte ptr [rbp-0xf4],r14b
0xa6be: test r8d,r8d
0xa6c1: jnz 0xa5af
0xa6c7: nop qword ptr [rax+rax*1+0x0]
0xa6d0: cmp [rbp-0x108],0x2
0xa6d8: mov [r13+0x8],0x1
0xa6e0: jbe 0xa776
0xa6e6: lea r14,[r12+0x30]
0xa6eb: xor ebx,ebx
0xa6ed: mov r15d,0x2
0xa6f3: nop qword ptr [rax+rax*1+0x0]
0xa6f8: movzx ecx,byte ptr [r14+0x10]
0xa6fd: jmp 0xa71d
0xa6ff: nop 
0xa700: cmp [rax+0x10],0x0
0xa704: jz 0xa72c
0xa706: mov eax,dword ptr [rax+0x14]
0xa709: cmp dword ptr [r14+0x14],eax
0xa70d: jz 0xa752
0xa70f: test rbx,rbx
0xa712: jz 0xacc8
0xa718: sub rbx,qword ptr [r13+rbx*8+0x0]
0xa71d: lea rax,[rbx+rbx*2+0x0]
0xa721: shl rax,0x4
0xa725: add rax,r12
0xa728: test cl,cl
0xa72a: jnz 0xa700
0xa72c: mov rdx,qword ptr [r14+0x8]
0xa730: cmp rdx,qword ptr [rax+0x8]
0xa734: jnz 0xa70f
0xa736: mov rsi,qword ptr [rax]
0xa739: mov rdi,qword ptr [r14]
0xa73c: mov byte ptr [rbp-0x110],cl
0xa742: call 0x2030
0xa747: test eax,eax
0xa749: movzx ecx,byte ptr [rbp-0x110]
0xa750: jnz 0xa70f
0xa752: add rbx,0x1
0xa756: mov rax,r15
0xa759: sub rax,rbx
0xa75c: mov qword ptr [r13+r15*8+0x0],rax
0xa761: add r15,0x1
0xa765: add r14,0x30
0xa769: cmp qword ptr [rbp-0x108],r15
0xa770: jnz 0xa6f8
0xa776: mov rax,qword ptr [rbp-0x128]
0xa77d: lea rbx,[rbp-0x80]
0xa781: mov [rbp-0xc0],0x0
0xa788: mov [rbp-0xbc],0x0
0xa793: mov [rbp-0xb4],0x0
0xa79a: xor r15d,r15d
0xa79d: mov [rbp-0x80],0x0
0xa7a1: mov [rbp-0x7c],0x0
0xa7a9: mov [rax],0x0
0xa7b0: mov rax,qword ptr [rbp-0x118]
0xa7b7: mov qword ptr [rbp-0x118],rbx
0xa7be: add rbx,0x4
0xa7c2: mov [rbp-0x74],0x0
0xa7c6: mov qword ptr [rbp-0x120],rbx
0xa7cd: lea rbx,[rbp-0xc0]
0xa7d4: mov qword ptr [rbp-0xb0],rax
0xa7db: mov qword ptr [rbp-0x70],rax
0xa7df: xor eax,eax
0xa7e1: nop qword ptr [rax+0x0]
0xa7e8: test al,al
0xa7ea: jz 0xa9cc
0xa7f0: cmp [rbp-0x60],0x0
0xa7f4: jnz 0xa986
0xa7fa: lea rax,[r15+r15*2+0x0]
0xa7fe: shl rax,0x4
0xa802: add rax,r12
0xa805: mov rdx,qword ptr [rax+0x8]
0xa809: cmp rdx,qword ptr [rbp-0x68]
0xa80d: jz 0xaba0
0xa813: test r15,r15
0xa816: jz 0xabf0
0xa81c: mov r14,qword ptr [r13+r15*8+0x0]
0xa821: mov rax,r15
0xa824: sub rax,r14
0xa827: test r14,r14
0xa82a: mov qword ptr [rbp-0x110],rax
0xa831: movzx eax,byte ptr [rbp-0x74]
0xa835: jz 0xa7e8
0xa837: cmp [rbp-0xb4],0x0
0xa83e: jz 0xa868
0xa840: cmp [rbp-0xa0],0x0
0xa847: jnz 0xa8bc
0xa849: mov rax,qword ptr [rbp-0xa8]
0xa850: add qword ptr [rbp-0xb0],rax
0xa857: sub r14,0x1
0xa85b: mov [rbp-0xb4],0x0
0xa862: jz 0xac88
0xa868: cmp [rbp-0xc0],0x0
0xa86f: jnz 0xaae0
0xa875: mov rcx,qword ptr [rbp-0xb0]
0xa87c: lea rsi,[rip+0x611d]
0xa883: movzx edx,byte ptr [rcx]
0xa886: mov eax,edx
0xa888: shr al,0x5
0xa88b: and eax,0x7
0xa88e: mov eax,dword ptr [rsi+rax*4+0x0]
0xa891: bt eax,edx
0xa894: jnb 0xaac8
0xa89a: mov [rbp-0xa8],0x1
0xa8a5: movsx eax,byte ptr [rcx]
0xa8a8: mov [rbp-0xa0],0x1
0xa8af: mov [rbp-0xb4],0x1
0xa8b6: mov dword ptr [rbp-0x9c],eax
0xa8bc: mov esi,dword ptr [rbp-0x9c]
0xa8c2: test esi,esi
0xa8c4: jnz 0xa849
0xa8c6: call 0x1de0
0xa8cb: nop qword ptr [rax+rax*1+0x0]
0xa8d0: xor eax,eax
0xa8d2: mov rbx,qword ptr [rbp-0x38]
0xa8d6: xor rbx,0x28
0xa8df: jnz 0xae8e
0xa8e5: lea rsp,[rbp-0x28]
0xa8e9: pop rbx
0xa8ea: pop r12
0xa8ec: pop r13
0xa8ee: pop r14
0xa8f0: pop r15
0xa8f2: pop rbp
0xa8f3: ret
0xa8f4: nop qword ptr [rax+0x0]
0xa8f8: mov rdi,qword ptr [rbp-0x120]
0xa8ff: call 0x22b0
0xa904: test eax,eax
0xa906: jz 0xae6f
0xa90c: mov byte ptr [rbp-0x100],r14b
0xa913: jmp 0xa60e
0xa918: nop qword ptr [rax+rax*1+0x0]
0xa920: lea rcx,[r15+0x18]
0xa924: mov rdi,rcx
0xa927: call 0x20a0
0xa92c: mov rdx,qword ptr [rbp-0xe8]
0xa933: mov qword ptr [r15],rax
0xa936: movzx eax,byte ptr [rbp-0xe0]
0xa93d: jmp 0xa5d2
0xa942: nop qword ptr [rax+rax*1+0x0]
0xa948: mov [rbp-0xe8],0x1
0xa953: mov [rbp-0xe0],0x0
0xa95a: xor eax,eax
0xa95c: mov byte ptr [rbp-0xf4],r14b
0xa963: jmp 0xa5b4
0xa968: nop qword ptr [rax+rax*1+0x0]
0xa970: mov [rbp-0x68],0x1
0xa978: movsx eax,byte ptr [rcx]
0xa97b: mov [rbp-0x60],0x1
0xa97f: mov [rbp-0x74],0x1
0xa983: mov dword ptr [rbp-0x5c],eax
0xa986: mov edx,dword ptr [rbp-0x5c]
0xa989: test edx,edx
0xa98b: jz 0xaab0
0xa991: lea rax,[r15+r15*2+0x0]
0xa995: shl rax,0x4
0xa999: add rax,r12
0xa99c: cmp [rax+0x10],0x0
0xa9a0: jz 0xa805
0xa9a6: cmp dword ptr [rax+0x14],edx
0xa9a9: jnz 0xa813
0xa9af: add r15,0x1
0xa9b3: mov rax,qword ptr [rbp-0x68]
0xa9b7: add qword ptr [rbp-0x70],rax
0xa9bb: cmp qword ptr [rbp-0x108],r15
0xa9c2: mov [rbp-0x74],0x0
0xa9c6: jz 0xae4c
0xa9cc: cmp [rbp-0x80],0x0
0xa9d0: jnz 0xaa08
0xa9d2: mov rcx,qword ptr [rbp-0x70]
0xa9d6: lea rsi,[rip+0x5fc3]
0xa9dd: movzx edx,byte ptr [rcx]
0xa9e0: mov eax,edx
0xa9e2: shr al,0x5
0xa9e5: and eax,0x7
0xa9e8: mov eax,dword ptr [rsi+rax*4+0x0]
0xa9eb: bt eax,edx
0xa9ee: jb 0xa970
0xa9f0: mov rdi,qword ptr [rbp-0x120]
0xa9f7: call 0x22b0
0xa9fc: test eax,eax
0xa9fe: jz 0xae6f
0xaa04: mov [rbp-0x80],0x1
0xaa08: call 0x1ef0
0xaa0d: mov r8,qword ptr [rbp-0x70]
0xaa11: mov rsi,rax
0xaa14: mov rdi,r8
0xaa17: mov qword ptr [rbp-0x110],r8
0xaa1e: call 0x9050
0xaa23: mov rsi,qword ptr [rbp-0x118]
0xaa2a: mov r8,qword ptr [rbp-0x110]
0xaa31: mov rdx,rax
0xaa34: lea rcx,[rsi+0x4]
0xaa38: lea rdi,[rsi+0x24]
0xaa3c: mov rsi,r8
0xaa3f: call 0x9ff0
0xaa44: cmp rax,0xffffffff
0xaa48: mov qword ptr [rbp-0x68],rax
0xaa4c: jz 0xaca0
0xaa52: cmp rax,0xfffffffe
0xaa56: jz 0xada0
0xaa5c: test rax,rax
0xaa5f: jnz 0xaa81
0xaa61: mov rax,qword ptr [rbp-0x70]
0xaa65: mov [rbp-0x68],0x1
0xaa6d: cmp [rax],0x0
0xaa70: jnz 0xae93
0xaa76: mov eax,dword ptr [rbp-0x5c]
0xaa79: test eax,eax
0xaa7b: jnz 0xaeb2
0xaa81: mov rax,qword ptr [rbp-0x118]
0xaa88: mov [rbp-0x60],0x1
0xaa8c: lea rdi,[rax+0x4]
0xaa90: call 0x22b0
0xaa95: test eax,eax
0xaa97: jz 0xadc0
0xaa9d: mov edx,dword ptr [rbp-0x5c]
0xaaa0: mov [rbp-0x80],0x0
0xaaa4: mov [rbp-0x74],0x1
0xaaa8: test edx,edx
0xaaaa: jnz 0xa991
0xaab0: mov rdi,r12
0xaab3: call 0xc740
0xaab8: mov eax,0x1
0xaabd: jmp 0xa8d2
0xaac2: nop qword ptr [rax+rax*1+0x0]
0xaac8: lea rdi,[rbx+0x4]
0xaacc: call 0x22b0
0xaad1: test eax,eax
0xaad3: jz 0xae6f
0xaad9: mov [rbp-0xc0],0x1
0xaae0: call 0x1ef0
0xaae5: mov r15,qword ptr [rbp-0xb0]
0xaaec: mov rsi,rax
0xaaef: mov rdi,r15
0xaaf2: call 0x9050
0xaaf7: lea rcx,[rbx+0x4]
0xaafb: lea rdi,[rbx+0x24]
0xaaff: mov rdx,rax
0xab02: mov rsi,r15
0xab05: call 0x9ff0
0xab0a: cmp rax,0xffffffff
0xab0e: mov qword ptr [rbp-0xa8],rax
0xab15: jz 0xab80
0xab17: cmp rax,0xfffffffe
0xab1b: jz 0xabc0
0xab21: test rax,rax
0xab24: jnz 0xab4f
0xab26: mov rax,qword ptr [rbp-0xb0]
0xab2d: mov [rbp-0xa8],0x1
0xab38: cmp [rax],0x0
0xab3b: jnz 0xae93
0xab41: mov edi,dword ptr [rbp-0x9c]
0xab47: test edi,edi
0xab49: jnz 0xaeb2
0xab4f: lea rdi,[rbx+0x4]
0xab53: mov [rbp-0xa0],0x1
0xab5a: call 0x22b0
0xab5f: test eax,eax
0xab61: jz 0xabe0
0xab63: mov [rbp-0xc0],0x0
0xab6a: mov [rbp-0xb4],0x1
0xab71: jmp 0xa8bc
0xab76: nop qword ptr [rax+rax*1+0x0]
0xab80: mov [rbp-0xa8],0x1
0xab8b: mov [rbp-0xa0],0x0
0xab92: jmp 0xa849
0xab97: nop qword ptr [rax+rax*1+0x0]
0xaba0: mov rsi,qword ptr [rbp-0x70]
0xaba4: mov rdi,qword ptr [rax]
0xaba7: call 0x2030
0xabac: test eax,eax
0xabae: jnz 0xa813
0xabb4: jmp 0xa9af
0xabb9: nop qword ptr [rax+0x0]
0xabc0: mov rdi,qword ptr [rbp-0xb0]
0xabc7: call 0x1f00
0xabcc: mov [rbp-0xa0],0x0
0xabd3: mov qword ptr [rbp-0xa8],rax
0xabda: jmp 0xa849
0xabdf: nop 
0xabe0: mov [rbp-0xb4],0x1
0xabe7: jmp 0xa8bc
0xabec: nop qword ptr [rax+0x0]
0xabf0: cmp [rbp-0xb4],0x0
0xabf7: jnz 0xacb8
0xabfd: cmp [rbp-0xc0],0x0
0xac04: jnz 0xacf0
0xac0a: mov rcx,qword ptr [rbp-0xb0]
0xac11: lea rsi,[rip+0x5d88]
0xac18: movzx edx,byte ptr [rcx]
0xac1b: mov eax,edx
0xac1d: shr al,0x5
0xac20: and eax,0x7
0xac23: mov eax,dword ptr [rsi+rax*4+0x0]
0xac26: bt eax,edx
0xac29: jnb 0xacd8
0xac2f: mov [rbp-0xa8],0x1
0xac3a: movsx eax,byte ptr [rcx]
0xac3d: mov [rbp-0xa0],0x1
0xac44: mov [rbp-0xb4],0x1
0xac4b: mov dword ptr [rbp-0x9c],eax
0xac51: mov edx,dword ptr [rbp-0x9c]
0xac57: test edx,edx
0xac59: jz 0xa8c6
0xac5f: mov rax,qword ptr [rbp-0xa8]
0xac66: mov [rbp-0xb4],0x0
0xac6d: add qword ptr [rbp-0xb0],rax
0xac74: mov [rbp-0x74],0x0
0xac78: mov rax,qword ptr [rbp-0x68]
0xac7c: add qword ptr [rbp-0x70],rax
0xac80: jmp 0xa9cc
0xac85: nop qword ptr [rax]
0xac88: movzx eax,byte ptr [rbp-0x74]
0xac8c: mov r15,qword ptr [rbp-0x110]
0xac93: jmp 0xa7e8
0xac98: nop qword ptr [rax+rax*1+0x0]
0xaca0: mov [rbp-0x68],0x1
0xaca8: mov [rbp-0x60],0x0
0xacac: mov [rbp-0x74],0x1
0xacb0: jmp 0xa7fa
0xacb5: nop qword ptr [rax]
0xacb8: cmp [rbp-0xa0],0x0
0xacbf: jz 0xac5f
0xacc1: jmp 0xac51
0xacc3: nop qword ptr [rax+rax*1+0x0]
0xacc8: mov qword ptr [r13+r15*8+0x0],r15
0xaccd: jmp 0xa761
0xacd2: nop qword ptr [rax+rax*1+0x0]
0xacd8: lea rdi,[rbx+0x4]
0xacdc: call 0x22b0
0xace1: test eax,eax
0xace3: jz 0xae6f
0xace9: mov [rbp-0xc0],0x1
0xacf0: call 0x1ef0
0xacf5: mov r8,qword ptr [rbp-0xb0]
0xacfc: mov rsi,rax
0xacff: mov rdi,r8
0xad02: mov qword ptr [rbp-0x110],r8
0xad09: call 0x9050
0xad0e: mov r8,qword ptr [rbp-0x110]
0xad15: lea rcx,[rbx+0x4]
0xad19: lea rdi,[rbx+0x24]
0xad1d: mov rdx,rax
0xad20: mov rsi,r8
0xad23: call 0x9ff0
0xad28: cmp rax,0xffffffff
0xad2c: mov qword ptr [rbp-0xa8],rax
0xad33: jz 0xadfd
0xad39: cmp rax,0xfffffffe
0xad3d: jz 0xae2d
0xad43: test rax,rax
0xad46: jnz 0xad71
0xad48: mov rax,qword ptr [rbp-0xb0]
0xad4f: mov [rbp-0xa8],0x1
0xad5a: cmp [rax],0x0
0xad5d: jnz 0xae93
0xad63: mov ecx,dword ptr [rbp-0x9c]
0xad69: test ecx,ecx
0xad6b: jnz 0xaeb2
0xad71: lea rdi,[rbx+0x4]
0xad75: mov [rbp-0xa0],0x1
0xad7c: call 0x22b0
0xad81: test eax,eax
0xad83: jz 0xae21
0xad89: mov [rbp-0xc0],0x0
0xad90: mov [rbp-0xb4],0x1
0xad97: jmp 0xac51
0xad9c: nop qword ptr [rax+0x0]
0xada0: mov rdi,qword ptr [rbp-0x70]
0xada4: call 0x1f00
0xada9: mov [rbp-0x60],0x0
0xadad: mov qword ptr [rbp-0x68],rax
0xadb1: mov [rbp-0x74],0x1
0xadb5: jmp 0xa7fa
0xadba: nop qword ptr [rax+rax*1+0x0]
0xadc0: mov [rbp-0x74],0x1
0xadc4: jmp 0xa986
0xadc9: mov rdi,qword ptr [rbp-0xf0]
0xadd0: call 0x1f00
0xadd5: mov [rbp-0xe0],0x0
0xaddc: mov qword ptr [rbp-0xe8],rax
0xade3: xor eax,eax
0xade5: mov byte ptr [rbp-0xf4],r14b
0xadec: jmp 0xa5b4
0xadf1: mov byte ptr [rbp-0xf4],r14b
0xadf8: jmp 0xa59f
0xadfd: mov [rbp-0xa8],0x1
0xae08: mov [rbp-0xa0],0x0
0xae0f: jmp 0xac5f
0xae14: call 0xc700
0xae19: mov r12,rax
0xae1c: jmp 0xa4fa
0xae21: mov [rbp-0xb4],0x1
0xae28: jmp 0xac51
0xae2d: mov rdi,qword ptr [rbp-0xb0]
0xae34: call 0x1f00
0xae39: mov [rbp-0xa0],0x0
0xae40: mov qword ptr [rbp-0xa8],rax
0xae47: jmp 0xac5f
0xae4c: mov rax,qword ptr [rbp-0xb0]
0xae53: mov rbx,qword ptr [rbp-0x128]
0xae5a: mov rdi,r12
0xae5d: mov qword ptr [rbx],rax
0xae60: call 0xc740
0xae65: mov eax,0x1
0xae6a: jmp 0xa8d2
0xae6f: lea rcx,[rip+0x5b4a]
0xae76: lea rsi,[rip+0x51db]
0xae7d: lea rdi,[rip+0x5206]
0xae84: mov edx,0x96
0xae89: call 0x1fe0
0xae8e: call 0x1f20
0xae93: lea rcx,[rip+0x5b26]
0xae9a: lea rsi,[rip+0x51b7]
0xaea1: lea rdi,[rip+0x51f9]
0xaea8: mov edx,0xb2
0xaead: call 0x1fe0
0xaeb2: call 0x2356
0xaeb7: mov ecx,0x1
0xaebc: jmp 0xa4a9
0xaed0: push r15
0xaed2: push r14
0xaed4: push r13
0xaed6: push r12
0xaed8: mov r12,rdi
0xaedb: push rbp
0xaedc: push rbx
0xaedd: mov rbx,rsi
0xaee0: sub rsp,0x198
0xaee7: mov rax,0x28
0xaef0: mov qword ptr [rsp+0x188],rax
0xaef8: xor eax,eax
0xaefa: mov qword ptr [rsp+0x8],rsi
0xaeff: call 0x1ef0
0xaf04: cmp rax,0x1
0xaf08: jnbe 0xaff0
0xaf0e: mov rax,qword ptr [rsp+0x8]
0xaf13: movzx r15d,byte ptr [rax]
0xaf17: mov rax,r12
0xaf1a: test r15b,r15b
0xaf1d: jz 0xb056
0xaf23: movzx esi,byte ptr [r12]
0xaf28: test sil,sil
0xaf2b: jz 0xb6d0
0xaf31: lea rbx,[rsp+0x38]
0xaf36: mov rbp,qword ptr [rsp+0x8]
0xaf3b: xor r13d,r13d
0xaf3e: xor edx,edx
0xaf40: xor r8d,r8d
0xaf43: mov eax,0x1
0xaf48: mov qword ptr [rsp+0x10],rbx
0xaf4d: nop qword ptr [rax]
0xaf50: add r13,0x1
0xaf54: cmp sil,r15b
0xaf57: lea rbx,[rdx+0x1]
0xaf5b: lea r14,[r12+0x1]
0xaf60: jz 0xb840
0xaf66: cmp [r12+0x1],0x0
0xaf6c: jz 0xb6d0
0xaf72: cmp r13,0x9
0xaf76: setnbe dl
0xaf79: and dl,al
0xaf7b: jz 0xb082
0xaf81: lea rax,[r13+r13*4+0x0]
0xaf86: cmp rax,rbx
0xaf89: jnbe 0xb080
0xaf8f: test rbp,rbp
0xaf92: mov byte ptr [rsp],dl
0xaf95: jz 0xafb9
0xaf97: mov rsi,rbx
0xaf9a: mov rdi,rbp
0xaf9d: sub rsi,r8
0xafa0: call 0x2000
0xafa5: add rbp,rax
0xafa8: mov r8,rbx
0xafab: movzx edx,byte ptr [rsp]
0xafaf: cmp [rbp+0x0],0x0
0xafb3: jnz 0xb080
0xafb9: mov rbp,qword ptr [rsp+0x8]
0xafbe: mov qword ptr [rsp],r8
0xafc2: mov rdi,rbp
0xafc5: call 0x1f00
0xafca: mov rcx,qword ptr [rsp+0x10]
0xafcf: mov rdx,rax
0xafd2: mov rsi,rbp
0xafd5: mov rdi,r14
0xafd8: call 0xa2a0
0xafdd: test al,al
0xafdf: mov r8,qword ptr [rsp]
0xafe3: jnz 0xbecf
0xafe9: xor ebp,ebp
0xafeb: jmp 0xb082
0xaff0: mov rax,rbx
0xaff3: lea r13,[rip+0x59a6]
0xaffa: mov qword ptr [rsp+0x50],rbx
0xafff: movsx edx,byte ptr [rax]
0xb002: lea rbx,[rsp+0x40]
0xb007: mov [rsp+0x40],0x0
0xb00c: mov [rsp+0x44],0x0
0xb015: mov [rsp+0x4c],0x0
0xb01a: lea rbp,[rbx+0x4]
0xb01e: mov eax,edx
0xb020: shr al,0x5
0xb023: and eax,0x7
0xb026: mov eax,dword ptr [r13+rax*4+0x0]
0xb02b: bt eax,edx
0xb02e: jnb 0xbcd0
0xb034: mov [rsp+0x58],0x1
0xb03d: mov dword ptr [rsp+0x64],edx
0xb041: mov [rsp+0x60],0x1
0xb046: mov [rsp+0x4c],0x1
0xb04b: mov eax,dword ptr [rsp+0x64]
0xb04f: test eax,eax
0xb051: jnz 0xb0ab
0xb053: mov rax,r12
0xb056: mov rbx,qword ptr [rsp+0x188]
0xb05e: xor rbx,0x28
0xb067: jnz 0xbfb0
0xb06d: add rsp,0x198
0xb074: pop rbx
0xb075: pop rbp
0xb076: pop r12
0xb078: pop r13
0xb07a: pop r14
0xb07c: pop r15
0xb07e: ret
0xb07f: nop 
0xb080: mov eax,edx
0xb082: movzx esi,byte ptr [r14]
0xb086: mov r12,r14
0xb089: mov rdx,rbx
0xb08c: jmp 0xaf50
0xb091: nop qword ptr [rax+0x0]
0xb098: mov [rsp+0x58],0x1
0xb0a1: mov [rsp+0x60],0x0
0xb0a6: mov [rsp+0x4c],0x1
0xb0ab: mov rax,qword ptr [rsp+0x8]
0xb0b0: mov [rsp+0xc0],0x0
0xb0b8: xor r14d,r14d
0xb0bb: xor ebx,ebx
0xb0bd: cmp [rsp+0xc0],0x0
0xb0c5: mov [rsp+0x80],0x0
0xb0cd: mov [rsp+0x84],0x0
0xb0d9: mov [rsp+0x8c],0x0
0xb0e1: lea rbp,[rsp+0x140]
0xb0e9: mov qword ptr [rsp+0x90],rax
0xb0f1: lea rax,[rsp+0x38]
0xb0f6: mov qword ptr [rsp+0xd0],r12
0xb0fe: mov [rsp+0xc4],0x0
0xb10a: mov [rsp+0xcc],0x0
0xb112: lea r15,[rsp+0x100]
0xb11a: mov [rsp+0x20],0x0
0xb123: mov [rsp+0x10],0x1
0xb128: mov qword ptr [rsp+0x28],rax
0xb12d: jnz 0xb443
0xb133: nop qword ptr [rax+rax*1+0x0]
0xb138: mov rcx,qword ptr [rsp+0xd0]
0xb140: movzx edx,byte ptr [rcx]
0xb143: mov eax,edx
0xb145: shr al,0x5
0xb148: and eax,0x7
0xb14b: mov eax,dword ptr [r13+rax*4+0x0]
0xb150: bt eax,edx
0xb153: jnb 0xb8b0
0xb159: mov [rsp+0xd8],0x1
0xb165: movsx eax,byte ptr [rcx]
0xb168: mov [rsp+0xe0],0x1
0xb170: mov [rsp+0xcc],0x1
0xb178: mov dword ptr [rsp+0xe4],eax
0xb17f: mov eax,dword ptr [rsp+0xe4]
0xb186: test eax,eax
0xb188: jz 0xb6d0
0xb18e: cmp r14,0x9
0xb192: setnbe al
0xb195: and al,byte ptr [rsp+0x10]
0xb199: jz 0xbfa7
0xb19f: lea rdx,[r14+r14*4+0x0]
0xb1a3: cmp rbx,rdx
0xb1a6: jnb 0xb8e0
0xb1ac: add rbx,0x1
0xb1b0: mov byte ptr [rsp+0x10],al
0xb1b4: cmp [rsp+0x60],0x0
0xb1b9: jz 0xb731
0xb1bf: mov eax,dword ptr [rsp+0x64]
0xb1c3: cmp dword ptr [rsp+0xe4],eax
0xb1ca: jnz 0xb419
0xb1d0: movdqa xmm0,[rsp+0xc0]
0xb1d9: lea rcx,[rbp+0x4]
0xb1dd: mov [rsp+0x140],0x0
0xb1e5: mov [rbp+0x4],0x0
0xb1ed: movaps [rsp+0x100],xmm0
0xb1f5: mov [rsp+0x14c],0x0
0xb1fd: mov [rsp+0x10c],0x0
0xb205: movdqa xmm0,[rsp+0xd0]
0xb20e: movaps [rsp+0x110],xmm0
0xb216: mov rax,qword ptr [rsp+0x118]
0xb21e: add qword ptr [rsp+0x110],rax
0xb226: mov rax,qword ptr [rsp+0x8]
0xb22b: movdqa xmm0,[rsp+0xe0]
0xb234: movsx edx,byte ptr [rax]
0xb237: mov qword ptr [rsp+0x150],rax
0xb23f: movaps [rsp+0x120],xmm0
0xb247: mov eax,edx
0xb249: shr al,0x5
0xb24c: movdqa xmm0,[rsp+0xf0]
0xb255: and eax,0x7
0xb258: mov eax,dword ptr [r13+rax*4+0x0]
0xb25d: movaps [rsp+0x130],xmm0
0xb265: bt eax,edx
0xb268: jnb 0xbbf8
0xb26e: mov [rsp+0x158],0x1
0xb27a: mov dword ptr [rsp+0x164],edx
0xb281: mov [rsp+0x160],0x1
0xb289: mov [rsp+0x14c],0x1
0xb291: mov esi,dword ptr [rsp+0x164]
0xb298: test esi,esi
0xb29a: jz 0xbfd4
0xb2a0: mov rax,qword ptr [rsp+0x158]
0xb2a8: mov [rsp+0x14c],0x0
0xb2b0: add rbx,0x1
0xb2b4: add qword ptr [rsp+0x150],rax
0xb2bc: jmp 0xb383
0xb2c1: nop qword ptr [rax+0x0]
0xb2c8: cmp [rsp+0x100],0x0
0xb2d0: jnz 0xb611
0xb2d6: mov rcx,qword ptr [rsp+0x110]
0xb2de: movzx edx,byte ptr [rcx]
0xb2e1: mov eax,edx
0xb2e3: shr al,0x5
0xb2e6: and eax,0x7
0xb2e9: mov eax,dword ptr [r13+rax*4+0x0]
0xb2ee: bt eax,edx
0xb2f1: jnb 0xb5f8
0xb2f7: mov [rsp+0x118],0x1
0xb303: movsx eax,byte ptr [rcx]
0xb306: mov [rsp+0x120],0x1
0xb30e: mov [rsp+0x10c],0x1
0xb316: mov dword ptr [rsp+0x124],eax
0xb31d: mov eax,dword ptr [rsp+0x124]
0xb324: test eax,eax
0xb326: jz 0xb6d0
0xb32c: cmp [rsp+0x160],0x0
0xb334: jz 0xb403
0xb33a: cmp dword ptr [rsp+0x164],eax
0xb341: setnz al
0xb344: test al,al
0xb346: lea rdx,[rbx+0x1]
0xb34a: jnz 0xb419
0xb350: mov rax,qword ptr [rsp+0x118]
0xb358: add qword ptr [rsp+0x110],rax
0xb360: mov rbx,rdx
0xb363: mov rax,qword ptr [rsp+0x158]
0xb36b: add qword ptr [rsp+0x150],rax
0xb373: mov [rsp+0x10c],0x0
0xb37b: mov [rsp+0x14c],0x0
0xb383: cmp [rsp+0x140],0x0
0xb38b: jnz 0xb529
0xb391: mov rcx,qword ptr [rsp+0x150]
0xb399: movzx edx,byte ptr [rcx]
0xb39c: mov eax,edx
0xb39e: shr al,0x5
0xb3a1: and eax,0x7
0xb3a4: mov eax,dword ptr [r13+rax*4+0x0]
0xb3a9: bt eax,edx
0xb3ac: jnb 0xb510
0xb3b2: mov [rsp+0x158],0x1
0xb3be: movsx eax,byte ptr [rcx]
0xb3c1: mov [rsp+0x160],0x1
0xb3c9: mov [rsp+0x14c],0x1
0xb3d1: mov dword ptr [rsp+0x164],eax
0xb3d8: mov edx,dword ptr [rsp+0x164]
0xb3df: test edx,edx
0xb3e1: jz 0xb5e8
0xb3e7: cmp [rsp+0x10c],0x0
0xb3ef: jz 0xb2c8
0xb3f5: cmp [rsp+0x120],0x0
0xb3fd: jnz 0xb31d
0xb403: mov rdx,qword ptr [rsp+0x118]
0xb40b: cmp rdx,qword ptr [rsp+0x158]
0xb413: jz 0xb6e0
0xb419: mov rcx,qword ptr [rsp+0xd8]
0xb421: add qword ptr [rsp+0xd0],rcx
0xb429: add r14,0x1
0xb42d: cmp [rsp+0xc0],0x0
0xb435: mov [rsp+0xcc],0x0
0xb43d: jz 0xb138
0xb443: lea rax,[rsp+0xc0]
0xb44b: mov qword ptr [rsp],rax
0xb44f: call 0x1ef0
0xb454: mov r8,qword ptr [rsp+0xd0]
0xb45c: mov rsi,rax
0xb45f: mov rdi,r8
0xb462: mov qword ptr [rsp+0x18],r8
0xb467: call 0x9050
0xb46c: mov rsi,qword ptr [rsp]
0xb470: mov r8,qword ptr [rsp+0x18]
0xb475: mov rdx,rax
0xb478: lea rcx,[rsi+0x4]
0xb47c: lea rdi,[rsi+0x24]
0xb480: mov rsi,r8
0xb483: call 0x9ff0
0xb488: cmp rax,0xffffffff
0xb48c: mov qword ptr [rsp+0xd8],rax
0xb494: jz 0xb700
0xb49a: cmp rax,0xfffffffe
0xb49e: jz 0xbbc8
0xb4a4: test rax,rax
0xb4a7: jnz 0xb4d5
0xb4a9: mov rax,qword ptr [rsp+0xd0]
0xb4b1: mov [rsp+0xd8],0x1
0xb4bd: cmp [rax],0x0
0xb4c0: jnz 0xbfb5
0xb4c6: mov eax,dword ptr [rsp+0xe4]
0xb4cd: test eax,eax
0xb4cf: jnz 0xbc92
0xb4d5: mov rdi,qword ptr [rsp]
0xb4d9: mov [rsp+0xe0],0x1
0xb4e1: add rdi,0x4
0xb4e5: call 0x22b0
0xb4ea: test eax,eax
0xb4ec: jz 0xbb00
0xb4f2: mov [rsp+0xc0],0x0
0xb4fa: mov [rsp+0xcc],0x1
0xb502: jmp 0xb17f
0xb507: nop qword ptr [rax+rax*1+0x0]
0xb510: lea rdi,[rbp+0x4]
0xb514: call 0x22b0
0xb519: test eax,eax
0xb51b: jz 0xbf88
0xb521: mov [rsp+0x140],0x1
0xb529: call 0x1ef0
0xb52e: mov r8,qword ptr [rsp+0x150]
0xb536: mov rsi,rax
0xb539: mov rdi,r8
0xb53c: mov qword ptr [rsp],r8
0xb540: call 0x9050
0xb545: mov r8,qword ptr [rsp]
0xb549: lea rcx,[rbp+0x4]
0xb54d: lea rdi,[rbp+0x24]
0xb551: mov rdx,rax
0xb554: mov rsi,r8
0xb557: call 0x9ff0
0xb55c: cmp rax,0xffffffff
0xb560: mov qword ptr [rsp+0x158],rax
0xb568: jz 0xb770
0xb56e: cmp rax,0xfffffffe
0xb572: jz 0xb7c0
0xb578: test rax,rax
0xb57b: jnz 0xb5a9
0xb57d: mov rax,qword ptr [rsp+0x150]
0xb585: mov [rsp+0x158],0x1
0xb591: cmp [rax],0x0
0xb594: jnz 0xbfb5
0xb59a: mov ecx,dword ptr [rsp+0x164]
0xb5a1: test ecx,ecx
0xb5a3: jnz 0xbc92
0xb5a9: lea rdi,[rbp+0x4]
0xb5ad: mov [rsp+0x160],0x1
0xb5b5: call 0x22b0
0xb5ba: test eax,eax
0xb5bc: jz 0xb7f0
0xb5c2: mov edx,dword ptr [rsp+0x164]
0xb5c9: mov [rsp+0x140],0x0
0xb5d1: mov [rsp+0x14c],0x1
0xb5d9: test edx,edx
0xb5db: jnz 0xb3e7
0xb5e1: nop qword ptr [rax+0x0]
0xb5e8: mov rax,qword ptr [rsp+0xd0]
0xb5f0: jmp 0xb056
0xb5f5: nop qword ptr [rax]
0xb5f8: lea rdi,[r15+0x4]
0xb5fc: call 0x22b0
0xb601: test eax,eax
0xb603: jz 0xbf88
0xb609: mov [rsp+0x100],0x1
0xb611: call 0x1ef0
0xb616: mov r8,qword ptr [rsp+0x110]
0xb61e: mov rsi,rax
0xb621: mov rdi,r8
0xb624: mov qword ptr [rsp],r8
0xb628: call 0x9050
0xb62d: mov r8,qword ptr [rsp]
0xb631: lea rcx,[r15+0x4]
0xb635: lea rdi,[r15+0x24]
0xb639: mov rdx,rax
0xb63c: mov rsi,r8
0xb63f: call 0x9ff0
0xb644: cmp rax,0xffffffff
0xb648: mov qword ptr [rsp+0x118],rax
0xb650: jz 0xb798
0xb656: cmp rax,0xfffffffe
0xb65a: jz 0xb800
0xb660: test rax,rax
0xb663: jnz 0xb691
0xb665: mov rax,qword ptr [rsp+0x110]
0xb66d: mov [rsp+0x118],0x1
0xb679: cmp [rax],0x0
0xb67c: jnz 0xbfb5
0xb682: mov eax,dword ptr [rsp+0x124]
0xb689: test eax,eax
0xb68b: jnz 0xbc92
0xb691: lea rdi,[r15+0x4]
0xb695: mov [rsp+0x120],0x1
0xb69d: call 0x22b0
0xb6a2: test eax,eax
0xb6a4: jz 0xb830
0xb6aa: mov eax,dword ptr [rsp+0x124]
0xb6b1: mov [rsp+0x100],0x0
0xb6b9: mov [rsp+0x10c],0x1
0xb6c1: test eax,eax
0xb6c3: jnz 0xb32c
0xb6c9: nop qword ptr [rax+0x0]
0xb6d0: xor eax,eax
0xb6d2: jmp 0xb056
0xb6d7: nop qword ptr [rax+rax*1+0x0]
0xb6e0: mov rsi,qword ptr [rsp+0x150]
0xb6e8: mov rdi,qword ptr [rsp+0x110]
0xb6f0: call 0x2030
0xb6f5: test eax,eax
0xb6f7: setnz al
0xb6fa: jmp 0xb344
0xb6ff: nop 
0xb700: mov [rsp+0xd8],0x1
0xb70c: mov [rsp+0xe0],0x0
0xb714: mov [rsp+0xcc],0x1
0xb71c: cmp r14,0x9
0xb720: setnbe al
0xb723: and al,byte ptr [rsp+0x10]
0xb727: jnz 0xbf68
0xb72d: add rbx,0x1
0xb731: mov rcx,qword ptr [rsp+0xd8]
0xb739: cmp rcx,qword ptr [rsp+0x58]
0xb73e: jnz 0xb421
0xb744: mov rsi,qword ptr [rsp+0x50]
0xb749: mov rdi,qword ptr [rsp+0xd0]
0xb751: mov rdx,rcx
0xb754: mov qword ptr [rsp],rcx
0xb758: call 0x2030
0xb75d: test eax,eax
0xb75f: mov rcx,qword ptr [rsp]
0xb763: jnz 0xb421
0xb769: jmp 0xb1d0
0xb76e: nop 
0xb770: mov [rsp+0x158],0x1
0xb77c: mov [rsp+0x160],0x0
0xb784: mov [rsp+0x14c],0x1
0xb78c: jmp 0xb3e7
0xb791: nop qword ptr [rax+0x0]
0xb798: mov [rsp+0x118],0x1
0xb7a4: mov [rsp+0x120],0x0
0xb7ac: mov [rsp+0x10c],0x1
0xb7b4: jmp 0xb403
0xb7b9: nop qword ptr [rax+0x0]
0xb7c0: mov rdi,qword ptr [rsp+0x150]
0xb7c8: call 0x1f00
0xb7cd: mov [rsp+0x160],0x0
0xb7d5: mov qword ptr [rsp+0x158],rax
0xb7dd: mov [rsp+0x14c],0x1
0xb7e5: jmp 0xb3e7
0xb7ea: nop qword ptr [rax+rax*1+0x0]
0xb7f0: mov [rsp+0x14c],0x1
0xb7f8: jmp 0xb3d8
0xb7fd: nop qword ptr [rax]
0xb800: mov rdi,qword ptr [rsp+0x110]
0xb808: call 0x1f00
0xb80d: mov [rsp+0x120],0x0
0xb815: mov qword ptr [rsp+0x118],rax
0xb81d: mov [rsp+0x10c],0x1
0xb825: jmp 0xb403
0xb82a: nop qword ptr [rax+rax*1+0x0]
0xb830: mov [rsp+0x10c],0x1
0xb838: jmp 0xb31d
0xb83d: nop qword ptr [rax]
0xb840: mov rcx,qword ptr [rsp+0x8]
0xb845: movzx esi,byte ptr [rcx+0x1]
0xb849: test sil,sil
0xb84c: jz 0xb053
0xb852: movzx edi,byte ptr [r14]
0xb856: test dil,dil
0xb859: jz 0xb6d0
0xb85f: cmp sil,dil
0xb862: lea rbx,[rdx+0x2]
0xb866: jnz 0xaf72
0xb86c: neg rdx
0xb86f: lea r9,[rcx+rdx*1+0x0]
0xb873: add rdx,r12
0xb876: jmp 0xb89a
0xb878: nop qword ptr [rax+rax*1+0x0]
0xb880: movzx edi,byte ptr [rdx+rbx*1+0x0]
0xb884: test dil,dil
0xb887: jz 0xb6d0
0xb88d: add rbx,0x1
0xb891: cmp sil,dil
0xb894: jnz 0xaf72
0xb89a: movzx esi,byte ptr [r9+rbx*1+0x0]
0xb89f: test sil,sil
0xb8a2: jnz 0xb880
0xb8a4: jmp 0xb053
0xb8a9: nop qword ptr [rax+0x0]
0xb8b0: lea rax,[rsp+0xc0]
0xb8b8: lea rdi,[rsp+0xc4]
0xb8c0: mov qword ptr [rsp],rax
0xb8c4: call 0x22b0
0xb8c9: test eax,eax
0xb8cb: jz 0xbf88
0xb8d1: mov [rsp+0xc0],0x1
0xb8d9: jmp 0xb44f
0xb8de: nop 
0xb8e0: mov rsi,rbx
0xb8e3: sub rsi,qword ptr [rsp+0x20]
0xb8e8: movzx eax,byte ptr [rsp+0x8c]
0xb8f0: mov qword ptr [rsp],rsi
0xb8f4: jz 0xbf47
0xb8fa: test al,al
0xb8fc: jz 0xb92b
0xb8fe: cmp [rsp+0xa0],0x0
0xb906: jnz 0xb97c
0xb908: mov rax,qword ptr [rsp+0x98]
0xb910: add qword ptr [rsp+0x90],rax
0xb918: sub [rsp],0x1
0xb91d: mov [rsp+0x8c],0x0
0xb925: jz 0xbb38
0xb92b: cmp [rsp+0x80],0x0
0xb933: jnz 0xbab8
0xb939: mov rcx,qword ptr [rsp+0x90]
0xb941: movzx edx,byte ptr [rcx]
0xb944: mov eax,edx
0xb946: shr al,0x5
0xb949: and eax,0x7
0xb94c: mov eax,dword ptr [r13+rax*4+0x0]
0xb951: bt eax,edx
0xb954: jnb 0xb9d0
0xb956: mov [rsp+0x98],0x1
0xb962: movsx eax,byte ptr [rcx]
0xb965: mov [rsp+0xa0],0x1
0xb96d: mov [rsp+0x8c],0x1
0xb975: mov dword ptr [rsp+0xa4],eax
0xb97c: mov r10d,dword ptr [rsp+0xa4]
0xb984: test r10d,r10d
0xb987: jnz 0xb908
0xb98d: cmp [rsp+0x8c],0x0
0xb995: jz 0xbb38
0xb99b: mov rdx,qword ptr [rsp+0x28]
0xb9a0: mov rsi,qword ptr [rsp+0x8]
0xb9a5: mov rdi,r12
0xb9a8: call 0xa450
0xb9ad: test al,al
0xb9af: mov byte ptr [rsp+0x10],al
0xb9b3: jnz 0xbecf
0xb9b9: movzx edx,byte ptr [rsp+0xe0]
0xb9c1: jmp 0xbbab
0xb9c6: nop qword ptr [rax+rax*1+0x0]
0xb9d0: lea rax,[rsp+0x80]
0xb9d8: lea rdi,[rsp+0x84]
0xb9e0: mov qword ptr [rsp+0x10],rax
0xb9e5: call 0x22b0
0xb9ea: test eax,eax
0xb9ec: jz 0xbf88
0xb9f2: mov [rsp+0x80],0x1
0xb9fa: call 0x1ef0
0xb9ff: mov r8,qword ptr [rsp+0x90]
0xba07: mov rsi,rax
0xba0a: mov rdi,r8
0xba0d: mov qword ptr [rsp+0x18],r8
0xba12: call 0x9050
0xba17: mov rsi,qword ptr [rsp+0x10]
0xba1c: mov r8,qword ptr [rsp+0x18]
0xba21: mov rdx,rax
0xba24: lea rcx,[rsi+0x4]
0xba28: lea rdi,[rsi+0x24]
0xba2c: mov rsi,r8
0xba2f: call 0x9ff0
0xba34: cmp rax,0xffffffff
0xba38: mov qword ptr [rsp+0x98],rax
0xba40: jz 0xbad0
0xba46: cmp rax,0xfffffffe
0xba4a: jz 0xbb10
0xba50: test rax,rax
0xba53: jnz 0xba83
0xba55: mov rax,qword ptr [rsp+0x90]
0xba5d: mov [rsp+0x98],0x1
0xba69: cmp [rax],0x0
0xba6c: jnz 0xbfb5
0xba72: mov r11d,dword ptr [rsp+0xa4]
0xba7a: test r11d,r11d
0xba7d: jnz 0xbc92
0xba83: mov rdi,qword ptr [rsp+0x10]
0xba88: mov [rsp+0xa0],0x1
0xba90: add rdi,0x4
0xba94: call 0x22b0
0xba99: test eax,eax
0xba9b: jz 0xbaf0
0xba9d: mov [rsp+0x80],0x0
0xbaa5: mov [rsp+0x8c],0x1
0xbaad: jmp 0xb97c
0xbab2: nop qword ptr [rax+rax*1+0x0]
0xbab8: lea rax,[rsp+0x80]
0xbac0: mov qword ptr [rsp+0x10],rax
0xbac5: jmp 0xb9fa
0xbaca: nop qword ptr [rax+rax*1+0x0]
0xbad0: mov [rsp+0x98],0x1
0xbadc: mov [rsp+0xa0],0x0
0xbae4: jmp 0xb908
0xbae9: nop qword ptr [rax+0x0]
0xbaf0: mov [rsp+0x8c],0x1
0xbaf8: jmp 0xb97c
0xbafd: nop qword ptr [rax]
0xbb00: mov [rsp+0xcc],0x1
0xbb08: jmp 0xb17f
0xbb0d: nop qword ptr [rax]
0xbb10: mov rdi,qword ptr [rsp+0x90]
0xbb18: call 0x1f00
0xbb1d: mov [rsp+0xa0],0x0
0xbb25: mov qword ptr [rsp+0x98],rax
0xbb2d: jmp 0xb908
0xbb32: nop qword ptr [rax+rax*1+0x0]
0xbb38: cmp [rsp+0x80],0x0
0xbb40: jnz 0xbd98
0xbb46: mov rcx,qword ptr [rsp+0x90]
0xbb4e: movzx edx,byte ptr [rcx]
0xbb51: mov eax,edx
0xbb53: shr al,0x5
0xbb56: and eax,0x7
0xbb59: mov eax,dword ptr [r13+rax*4+0x0]
0xbb5e: bt eax,edx
0xbb61: jnb 0xbe5f
0xbb67: mov [rsp+0x98],0x1
0xbb73: movsx eax,byte ptr [rcx]
0xbb76: mov [rsp+0xa0],0x1
0xbb7e: mov [rsp+0x8c],0x1
0xbb86: mov dword ptr [rsp+0xa4],eax
0xbb8d: mov r8d,dword ptr [rsp+0xa4]
0xbb95: test r8d,r8d
0xbb98: jz 0xb99b
0xbb9e: movzx edx,byte ptr [rsp+0xe0]
0xbba6: mov [rsp+0x10],0x1
0xbbab: lea rax,[rbx+0x1]
0xbbaf: test dl,dl
0xbbb1: mov qword ptr [rsp+0x20],rbx
0xbbb6: mov rbx,rax
0xbbb9: jnz 0xb1b4
0xbbbf: jmp 0xb731
0xbbc4: nop qword ptr [rax+0x0]
0xbbc8: mov rdi,qword ptr [rsp+0xd0]
0xbbd0: call 0x1f00
0xbbd5: mov [rsp+0xe0],0x0
0xbbdd: mov qword ptr [rsp+0xd8],rax
0xbbe5: mov [rsp+0xcc],0x1
0xbbed: jmp 0xb71c
0xbbf2: nop qword ptr [rax+rax*1+0x0]
0xbbf8: mov rdi,rcx
0xbbfb: mov qword ptr [rsp+0x18],rcx
0xbc00: call 0x22b0
0xbc05: test eax,eax
0xbc07: jz 0xbf88
0xbc0d: mov [rsp+0x140],0x1
0xbc15: call 0x1ef0
0xbc1a: mov r8,qword ptr [rsp+0x150]
0xbc22: mov rsi,rax
0xbc25: mov rdi,r8
0xbc28: mov qword ptr [rsp],r8
0xbc2c: call 0x9050
0xbc31: mov r8,qword ptr [rsp]
0xbc35: mov rcx,qword ptr [rsp+0x18]
0xbc3a: lea rdi,[rbp+0x24]
0xbc3e: mov rdx,rax
0xbc41: mov rsi,r8
0xbc44: call 0x9ff0
0xbc49: cmp rax,0xffffffff
0xbc4d: mov qword ptr [rsp+0x158],rax
0xbc55: jz 0xbd78
0xbc5b: cmp rax,0xfffffffe
0xbc5f: jz 0xbed9
0xbc65: test rax,rax
0xbc68: jnz 0xbca0
0xbc6a: mov rax,qword ptr [rsp+0x150]
0xbc72: mov [rsp+0x158],0x1
0xbc7e: cmp [rax],0x0
0xbc81: jnz 0xbfb5
0xbc87: mov edi,dword ptr [rsp+0x164]
0xbc8e: test edi,edi
0xbc90: jz 0xbca0
0xbc92: call 0x2356
0xbc97: nop qword ptr [rax+rax*1+0x0]
0xbca0: lea rdi,[rbp+0x4]
0xbca4: mov [rsp+0x160],0x1
0xbcac: call 0x22b0
0xbcb1: test eax,eax
0xbcb3: jz 0xbe8e
0xbcb9: mov [rsp+0x140],0x0
0xbcc1: mov [rsp+0x14c],0x1
0xbcc9: jmp 0xb291
0xbcce: nop 
0xbcd0: mov rdi,rbp
0xbcd3: call 0x22b0
0xbcd8: test eax,eax
0xbcda: jz 0xbf88
0xbce0: mov [rsp+0x40],0x1
0xbce5: call 0x1ef0
0xbcea: mov r14,qword ptr [rsp+0x50]
0xbcef: mov rsi,rax
0xbcf2: mov rdi,r14
0xbcf5: call 0x9050
0xbcfa: lea rdi,[rbx+0x24]
0xbcfe: mov rcx,rbp
0xbd01: mov rdx,rax
0xbd04: mov rsi,r14
0xbd07: call 0x9ff0
0xbd0c: cmp rax,0xffffffff
0xbd10: mov qword ptr [rsp+0x58],rax
0xbd15: jz 0xb098
0xbd1b: cmp rax,0xfffffffe
0xbd1f: jz 0xbefb
0xbd25: test rax,rax
0xbd28: jnz 0xbd4d
0xbd2a: mov rax,qword ptr [rsp+0x50]
0xbd2f: mov [rsp+0x58],0x1
0xbd38: cmp [rax],0x0
0xbd3b: jnz 0xbfb5
0xbd41: mov eax,dword ptr [rsp+0x64]
0xbd45: test eax,eax
0xbd47: jnz 0xbc92
0xbd4d: lea rdi,[rbx+0x4]
0xbd51: mov [rsp+0x60],0x1
0xbd56: call 0x22b0
0xbd5b: test eax,eax
0xbd5d: jz 0xbe9b
0xbd63: mov [rsp+0x40],0x0
0xbd68: mov [rsp+0x4c],0x1
0xbd6d: jmp 0xb04b
0xbd72: nop qword ptr [rax+rax*1+0x0]
0xbd78: mov [rsp+0x158],0x1
0xbd84: mov [rsp+0x160],0x0
0xbd8c: jmp 0xb2a0
0xbd91: nop qword ptr [rax+0x0]
0xbd98: lea rax,[rsp+0x80]
0xbda0: mov qword ptr [rsp+0x10],rax
0xbda5: call 0x1ef0
0xbdaa: mov r8,qword ptr [rsp+0x90]
0xbdb2: mov rsi,rax
0xbdb5: mov rdi,r8
0xbdb8: mov qword ptr [rsp],r8
0xbdbc: call 0x9050
0xbdc1: mov rsi,qword ptr [rsp+0x10]
0xbdc6: mov r8,qword ptr [rsp]
0xbdca: mov rdx,rax
0xbdcd: lea rcx,[rsi+0x4]
0xbdd1: lea rdi,[rsi+0x24]
0xbdd5: mov rsi,r8
0xbdd8: call 0x9ff0
0xbddd: cmp rax,0xffffffff
0xbde1: mov qword ptr [rsp+0x98],rax
0xbde9: jz 0xbf19
0xbdef: cmp rax,0xfffffffe
0xbdf3: jz 0xbea5
0xbdf9: test rax,rax
0xbdfc: jnz 0xbe2c
0xbdfe: mov rax,qword ptr [rsp+0x90]
0xbe06: mov [rsp+0x98],0x1
0xbe12: cmp [rax],0x0
0xbe15: jnz 0xbfb5
0xbe1b: mov r9d,dword ptr [rsp+0xa4]
0xbe23: test r9d,r9d
0xbe26: jnz 0xbc92
0xbe2c: mov rdi,qword ptr [rsp+0x10]
0xbe31: mov [rsp+0xa0],0x1
0xbe39: add rdi,0x4
0xbe3d: call 0x22b0
0xbe42: test eax,eax
0xbe44: jz 0xbf3a
0xbe4a: mov [rsp+0x80],0x0
0xbe52: mov [rsp+0x8c],0x1
0xbe5a: jmp 0xbb8d
0xbe5f: lea rax,[rsp+0x80]
0xbe67: lea rdi,[rsp+0x84]
0xbe6f: mov qword ptr [rsp+0x10],rax
0xbe74: call 0x22b0
0xbe79: test eax,eax
0xbe7b: jz 0xbf88
0xbe81: mov [rsp+0x80],0x1
0xbe89: jmp 0xbda5
0xbe8e: mov [rsp+0x14c],0x1
0xbe96: jmp 0xb291
0xbe9b: mov [rsp+0x4c],0x1
0xbea0: jmp 0xb04b
0xbea5: mov rdi,qword ptr [rsp+0x90]
0xbead: call 0x1f00
0xbeb2: mov [rsp+0xa0],0x0
0xbeba: mov qword ptr [rsp+0x98],rax
0xbec2: mov [rsp+0x8c],0x1
0xbeca: jmp 0xbb9e
0xbecf: mov rax,qword ptr [rsp+0x38]
0xbed4: jmp 0xb056
0xbed9: mov rdi,qword ptr [rsp+0x150]
0xbee1: call 0x1f00
0xbee6: mov [rsp+0x160],0x0
0xbeee: mov qword ptr [rsp+0x158],rax
0xbef6: jmp 0xb2a0
0xbefb: mov rdi,qword ptr [rsp+0x50]
0xbf00: call 0x1f00
0xbf05: mov [rsp+0x60],0x0
0xbf0a: mov qword ptr [rsp+0x58],rax
0xbf0f: mov [rsp+0x4c],0x1
0xbf14: jmp 0xb0ab
0xbf19: mov [rsp+0x98],0x1
0xbf25: mov [rsp+0xa0],0x0
0xbf2d: mov [rsp+0x8c],0x1
0xbf35: jmp 0xbb9e
0xbf3a: mov [rsp+0x8c],0x1
0xbf42: jmp 0xbb8d
0xbf47: test al,al
0xbf49: jz 0xbb38
0xbf4f: cmp [rsp+0xa0],0x0
0xbf57: jz 0xbb9e
0xbf5d: jmp 0xbb8d
0xbf62: nop qword ptr [rax+rax*1+0x0]
0xbf68: lea rdx,[r14+r14*4+0x0]
0xbf6c: cmp rbx,rdx
0xbf6f: jnb 0xb8e0
0xbf75: add rbx,0x1
0xbf79: mov byte ptr [rsp+0x10],al
0xbf7d: jmp 0xb731
0xbf82: nop qword ptr [rax+rax*1+0x0]
0xbf88: lea rcx,[rip+0x4a31]
0xbf8f: lea rsi,[rip+0x40c2]
0xbf96: lea rdi,[rip+0x40ed]
0xbf9d: mov edx,0x96
0xbfa2: call 0x1fe0
0xbfa7: add rbx,0x1
0xbfab: jmp 0xb1b4
0xbfb0: call 0x1f20
0xbfb5: lea rcx,[rip+0x4a04]
0xbfbc: lea rsi,[rip+0x4095]
0xbfc3: lea rdi,[rip+0x40d7]
0xbfca: mov edx,0xb2
0xbfcf: call 0x1fe0
0xbfd4: call 0x1de0
0xbfe0: push r15
0xbfe2: push r14
0xbfe4: mov r15,rdi
0xbfe7: push r13
0xbfe9: push r12
0xbfeb: mov r13,rsi
0xbfee: push rbp
0xbfef: push rbx
0xbff0: mov rbx,rdx
0xbff3: xor esi,esi
0xbff5: xor edx,edx
0xbff7: sub rsp,0x1068
0xbffe: mov qword ptr [rsp+0x28],rdi
0xc003: mov qword ptr [rsp+0x18],rcx
0xc008: mov rdi,rbx
0xc00b: mov qword ptr [rsp+0x10],r8
0xc010: xor ecx,ecx
0xc012: xor r8d,r8d
0xc015: mov rax,0x28
0xc01e: mov qword ptr [rsp+0x1058],rax
0xc026: xor eax,eax
0xc028: call 0x1e30
0xc02d: mov qword ptr [rsp+0x30],r15
0xc032: xor r15d,r15d
0xc035: test r13,r13
0xc038: mov qword ptr [rsp+0x38],r13
0xc03d: lea r14,[rsp+0x50]
0xc042: lea r12,[rsp+0x48]
0xc047: lea rbp,[rsp+0x40]
0xc04c: jz 0xc0cb
0xc04e: lea rax,[rsp+0x38]
0xc053: lea rsi,[rsp+0x30]
0xc058: mov qword ptr [rsp+0x20],r13
0xc05d: mov qword ptr [rsp+0x8],rsi
0xc062: mov r13,rax
0xc065: jmp 0xc087
0xc067: nop qword ptr [rax+rax*1+0x0]
0xc070: mov rax,qword ptr [rsp+0x40]
0xc075: sub rax,r14
0xc078: add r15,rax
0xc07b: cmp [rsp+0x38],0x0
0xc081: jz 0xc220
0xc087: mov rsi,qword ptr [rsp+0x8]
0xc08c: mov r8,r12
0xc08f: mov rcx,rbp
0xc092: mov rdx,r13
0xc095: mov rdi,rbx
0xc098: mov qword ptr [rsp+0x40],r14
0xc09d: mov [rsp+0x48],0x1000
0xc0a6: call 0x1e30
0xc0ab: cmp rax,0xffffffff
0xc0af: jnz 0xc070
0xc0b1: call 0x1df0
0xc0b6: mov eax,dword ptr [rax]
0xc0b8: cmp eax,0x7
0xc0bb: jz 0xc070
0xc0bd: cmp eax,0x16
0xc0c0: mov r13,qword ptr [rsp+0x20]
0xc0c5: jnz 0xc289
0xc0cb: xor edx,edx
0xc0cd: xor esi,esi
0xc0cf: mov r8,r12
0xc0d2: mov rcx,rbp
0xc0d5: mov rdi,rbx
0xc0d8: mov qword ptr [rsp+0x40],r14
0xc0dd: mov [rsp+0x48],0x1000
0xc0e6: call 0x1e30
0xc0eb: cmp rax,0xffffffff
0xc0ef: jz 0xc289
0xc0f5: mov rax,qword ptr [rsp+0x40]
0xc0fa: sub rax,r14
0xc0fd: add rax,r15
0xc100: mov qword ptr [rsp+0x8],rax
0xc105: jz 0xc230
0xc10b: mov rax,qword ptr [rsp+0x18]
0xc110: mov rax,qword ptr [rax]
0xc113: test rax,rax
0xc116: mov qword ptr [rsp+0x20],rax
0xc11b: jz 0xc12c
0xc11d: mov rax,qword ptr [rsp+0x10]
0xc122: mov rcx,qword ptr [rsp+0x8]
0xc127: cmp qword ptr [rax],rcx
0xc12a: jnb 0xc144
0xc12c: mov rdi,qword ptr [rsp+0x8]
0xc131: call 0x20f0
0xc136: test rax,rax
0xc139: mov qword ptr [rsp+0x20],rax
0xc13e: jz 0xc27e
0xc144: xor r8d,r8d
0xc147: xor ecx,ecx
0xc149: xor edx,edx
0xc14b: xor esi,esi
0xc14d: mov rdi,rbx
0xc150: lea r15,[rsp+0x38]
0xc155: call 0x1e30
0xc15a: mov rax,qword ptr [rsp+0x28]
0xc15f: mov qword ptr [rsp+0x38],r13
0xc164: lea r14,[rsp+0x30]
0xc169: mov qword ptr [rsp+0x30],rax
0xc16e: mov rax,qword ptr [rsp+0x20]
0xc173: mov qword ptr [rsp+0x40],rax
0xc178: mov rax,qword ptr [rsp+0x8]
0xc17d: mov qword ptr [rsp+0x48],rax
0xc182: jmp 0xc1ab
0xc184: nop qword ptr [rax+0x0]
0xc188: mov r8,r12
0xc18b: mov rcx,rbp
0xc18e: mov rdx,r15
0xc191: mov rsi,r14
0xc194: mov rdi,rbx
0xc197: call 0x1e30
0xc19c: cmp rax,0xffffffff
0xc1a0: jz 0xc240
0xc1a6: mov r13,qword ptr [rsp+0x38]
0xc1ab: test r13,r13
0xc1ae: jnz 0xc188
0xc1b0: xor edx,edx
0xc1b2: xor esi,esi
0xc1b4: mov r8,r12
0xc1b7: mov rcx,rbp
0xc1ba: mov rdi,rbx
0xc1bd: call 0x1e30
0xc1c2: cmp rax,0xffffffff
0xc1c6: jz 0xc24e
0xc1cc: cmp [rsp+0x48],0x0
0xc1d2: jnz 0xc293
0xc1d8: mov rax,qword ptr [rsp+0x18]
0xc1dd: mov rsi,qword ptr [rsp+0x20]
0xc1e2: xor ebx,ebx
0xc1e4: mov rdi,qword ptr [rsp+0x8]
0xc1e9: mov qword ptr [rax],rsi
0xc1ec: mov rax,qword ptr [rsp+0x10]
0xc1f1: mov qword ptr [rax],rdi
0xc1f4: mov rdx,qword ptr [rsp+0x1058]
0xc1fc: xor rdx,0x28
0xc205: mov eax,ebx
0xc207: jnz 0xc298
0xc20d: add rsp,0x1068
0xc214: pop rbx
0xc215: pop rbp
0xc216: pop r12
0xc218: pop r13
0xc21a: pop r14
0xc21c: pop r15
0xc21e: ret
0xc21f: nop 
0xc220: mov r13,qword ptr [rsp+0x20]
0xc225: jmp 0xc0cb
0xc22a: nop qword ptr [rax+rax*1+0x0]
0xc230: mov rax,qword ptr [rsp+0x10]
0xc235: xor ebx,ebx
0xc237: mov [rax],0x0
0xc23e: jmp 0xc1f4
0xc240: call 0x1df0
0xc245: cmp [rax],0x16
0xc248: jz 0xc1b0
0xc24e: mov rax,qword ptr [rsp+0x18]
0xc253: mov r15,qword ptr [rsp+0x20]
0xc258: mov ebx,0xffffffff
0xc25d: cmp qword ptr [rax],r15
0xc260: jz 0xc1f4
0xc262: call 0x1df0
0xc267: mov r12d,dword ptr [rax]
0xc26a: mov rbp,rax
0xc26d: mov rdi,r15
0xc270: call 0x1dd0
0xc275: mov dword ptr [rbp+0x0],r12d
0xc279: jmp 0xc1f4
0xc27e: call 0x1df0
0xc283: mov [rax],0xc
0xc289: mov ebx,0xffffffff
0xc28e: jmp 0xc1f4
0xc293: call 0x1de0
0xc298: call 0x1f20
0xc33d: nop qword ptr [rax]
0xc3cb: nop qword ptr [rax+rax*1+0x0]
0xc484: nop qword ptr [rax+0x0]
0xc4ba: nop qword ptr [rax+rax*1+0x0]
0xc4c9: nop qword ptr [rax+0x0]
0xc4dd: call 0x1f20
0xc535: nop qword ptr [rax]
0xc58a: nop qword ptr [rax+rax*1+0x0]
0xc5a9: nop qword ptr [rax+0x0]
0xc5cc: nop qword ptr [rax+0x0]
0xc5e0: push r12
0xc5e2: push rbp
0xc5e3: push rbx
0xc5e4: mov rbx,rdi
0xc5e7: call 0x20b0
0xc5ec: test eax,eax
0xc5ee: mov rdi,rbx
0xc5f1: js 0xc647
0xc5f3: call 0x2140
0xc5f8: test eax,eax
0xc5fa: jnz 0xc628
0xc5fc: mov rdi,rbx
0xc5ff: call 0xc660
0xc604: test eax,eax
0xc606: jz 0xc644
0xc608: call 0x1df0
0xc60d: mov r12d,dword ptr [rax]
0xc610: mov rdi,rbx
0xc613: mov rbp,rax
0xc616: call 0x1ec0
0xc61b: test r12d,r12d
0xc61e: jnz 0xc650
0xc620: pop rbx
0xc621: pop rbp
0xc622: pop r12
0xc624: ret
0xc625: nop qword ptr [rax]
0xc628: mov rdi,rbx
0xc62b: call 0x20b0
0xc630: xor esi,esi
0xc632: mov edx,0x1
0xc637: mov edi,eax
0xc639: call 0x1fd0
0xc63e: cmp rax,0xffffffff
0xc642: jnz 0xc5fc
0xc644: mov rdi,rbx
0xc647: pop rbx
0xc648: pop rbp
0xc649: pop r12
0xc64b: jmp 0x1ec0
0xc650: mov dword ptr [rbp+0x0],r12d
0xc654: mov eax,0xffffffff
0xc659: jmp 0xc620
0xc660: test rdi,rdi
0xc663: push rbx
0xc664: mov rbx,rdi
0xc667: jz 0xc67a
0xc669: call 0x2140
0xc66e: test eax,eax
0xc670: jz 0xc67a
0xc672: test [rbx],0x100
0xc678: jnz 0xc688
0xc67a: mov rdi,rbx
0xc67d: pop rbx
0xc67e: jmp 0x2100
0xc683: nop qword ptr [rax+rax*1+0x0]
0xc688: mov rdi,rbx
0xc68b: mov edx,0x1
0xc690: xor esi,esi
0xc692: call 0xc6a0
0xc697: mov rdi,rbx
0xc69a: pop rbx
0xc69b: jmp 0x2100
0xc6a0: mov rax,qword ptr [rdi+0x8]
0xc6a4: cmp qword ptr [rdi+0x10],rax
0xc6a8: jz 0xc6b0
0xc6aa: jmp 0x21f0
0xc6af: nop 
0xc6b0: mov rax,qword ptr [rdi+0x20]
0xc6b4: cmp qword ptr [rdi+0x28],rax
0xc6b8: jnz 0xc6aa
0xc6ba: cmp [rdi+0x48],0x0
0xc6bf: jnz 0xc6aa
0xc6c1: push r12
0xc6c3: push rbp
0xc6c4: mov r12d,edx
0xc6c7: push rbx
0xc6c8: mov rbp,rsi
0xc6cb: mov rbx,rdi
0xc6ce: call 0x20b0
0xc6d3: mov edx,r12d
0xc6d6: mov rsi,rbp
0xc6d9: mov edi,eax
0xc6db: call 0x1fd0
0xc6e0: cmp rax,0xffffffff
0xc6e4: jz 0xc6f2
0xc6e6: and [rbx],0xef
0xc6e9: mov qword ptr [rbx+0x90],rax
0xc6f0: xor eax,eax
0xc6f2: pop rbx
0xc6f3: pop rbp
0xc6f4: pop r12
0xc6f6: ret
0xc700: add rdi,0x20
0xc704: jb 0xc733
0xc706: sub rsp,0x8
0xc70a: call 0x20f0
0xc70f: xor edx,edx
0xc711: test rax,rax
0xc714: jz 0xc72b
0xc716: lea rdx,[rax+0x10]
0xc71a: and rdx,0xffffffe0
0xc71e: add rdx,0x10
0xc722: mov rcx,rdx
0xc725: sub rcx,rax
0xc728: mov byte ptr [rdx-0x1],cl
0xc72b: mov rax,rdx
0xc72e: add rsp,0x8
0xc732: ret
0xc733: xor edx,edx
0xc735: mov rax,rdx
0xc738: ret
0xc740: test dil,0xf
0xc744: jnz 0xc75c
0xc746: test dil,0x10
0xc74a: jnz 0xc750
0xc74c: rep ret
0xc74e: nop 
0xc750: movzx eax,byte ptr [rdi-0x1]
0xc754: sub rdi,rax
0xc757: jmp 0x1dd0
0xc75c: sub rsp,0x8
0xc760: call 0x1de0
0xc770: push r14
0xc772: push r13
0xc774: push r12
0xc776: push rbp
0xc777: push rbx
0xc778: mov rbx,rdi
0xc77b: sub rsp,0x50
0xc77f: mov rax,0x28
0xc788: mov qword ptr [rsp+0x48],rax
0xc78d: xor eax,eax
0xc78f: call 0x1ef0
0xc794: cmp rax,0x1
0xc798: jnbe 0xc7d0
0xc79a: mov rdi,rbx
0xc79d: call 0x1f00
0xc7a2: mov rbx,rax
0xc7a5: mov rsi,qword ptr [rsp+0x48]
0xc7aa: xor rsi,0x28
0xc7b3: mov rax,rbx
0xc7b6: jnz 0xc959
0xc7bc: add rsp,0x50
0xc7c0: pop rbx
0xc7c1: pop rbp
0xc7c2: pop r12
0xc7c4: pop r13
0xc7c6: pop r14
0xc7c8: ret
0xc7c9: nop qword ptr [rax+0x0]
0xc7d0: mov rbp,rsp
0xc7d3: mov qword ptr [rsp+0x10],rbx
0xc7d8: mov [rsp],0x0
0xc7dc: mov [rsp+0x4],0x0
0xc7e5: mov [rsp+0xc],0x0
0xc7ea: xor ebx,ebx
0xc7ec: lea r12,[rip+0x41ad]
0xc7f3: lea r13,[rbp+0x4]
0xc7f7: jmp 0xc856
0xc7f9: nop qword ptr [rax+0x0]
0xc800: mov rcx,qword ptr [rsp+0x10]
0xc805: movzx edx,byte ptr [rcx]
0xc808: mov eax,edx
0xc80a: shr al,0x5
0xc80d: and eax,0x7
0xc810: mov eax,dword ptr [r12+rax*4+0x0]
0xc814: bt eax,edx
0xc817: jnb 0xc8e0
0xc81d: mov [rsp+0x18],0x1
0xc826: movsx eax,byte ptr [rcx]
0xc829: mov [rsp+0x20],0x1
0xc82e: mov [rsp+0xc],0x1
0xc833: mov dword ptr [rsp+0x24],eax
0xc837: mov eax,dword ptr [rsp+0x24]
0xc83b: test eax,eax
0xc83d: jz 0xc7a5
0xc843: mov rax,qword ptr [rsp+0x18]
0xc848: add qword ptr [rsp+0x10],rax
0xc84d: add rbx,0x1
0xc851: mov [rsp+0xc],0x0
0xc856: cmp [rsp],0x0
0xc85a: jz 0xc800
0xc85c: call 0x1ef0
0xc861: mov r14,qword ptr [rsp+0x10]
0xc866: mov rsi,rax
0xc869: mov rdi,r14
0xc86c: call 0x9050
0xc871: lea rcx,[rbp+0x4]
0xc875: lea rdi,[rbp+0x24]
0xc879: mov rdx,rax
0xc87c: mov rsi,r14
0xc87f: call 0x9ff0
0xc884: cmp rax,0xffffffff
0xc888: mov qword ptr [rsp+0x18],rax
0xc88d: jz 0xc8f8
0xc88f: cmp rax,0xfffffffe
0xc893: jz 0xc910
0xc895: test rax,rax
0xc898: jnz 0xc8bd
0xc89a: mov rax,qword ptr [rsp+0x10]
0xc89f: mov [rsp+0x18],0x1
0xc8a8: cmp [rax],0x0
0xc8ab: jnz 0xc95e
0xc8b1: mov edx,dword ptr [rsp+0x24]
0xc8b5: test edx,edx
0xc8b7: jnz 0xc97d
0xc8bd: lea rdi,[rbp+0x4]
0xc8c1: mov [rsp+0x20],0x1
0xc8c6: call 0x22b0
0xc8cb: test eax,eax
0xc8cd: jz 0xc930
0xc8cf: mov [rsp],0x0
0xc8d3: mov [rsp+0xc],0x1
0xc8d8: jmp 0xc837
0xc8dd: nop qword ptr [rax]
0xc8e0: mov rdi,r13
0xc8e3: call 0x22b0
0xc8e8: test eax,eax
0xc8ea: jz 0xc93a
0xc8ec: mov [rsp],0x1
0xc8f0: jmp 0xc85c
0xc8f5: nop qword ptr [rax]
0xc8f8: mov [rsp+0x18],0x1
0xc901: mov [rsp+0x20],0x0
0xc906: jmp 0xc843
0xc90b: nop qword ptr [rax+rax*1+0x0]
0xc910: mov rdi,qword ptr [rsp+0x10]
0xc915: call 0x1f00
0xc91a: mov [rsp+0x20],0x0
0xc91f: mov qword ptr [rsp+0x18],rax
0xc924: jmp 0xc843
0xc929: nop qword ptr [rax+0x0]
0xc930: mov [rsp+0xc],0x1
0xc935: jmp 0xc837
0xc93a: lea rcx,[rip+0x409f]
0xc941: lea rsi,[rip+0x3710]
0xc948: lea rdi,[rip+0x373b]
0xc94f: mov edx,0x96
0xc954: call 0x1fe0
0xc959: call 0x1f20
0xc95e: lea rcx,[rip+0x407b]
0xc965: lea rsi,[rip+0x36ec]
0xc96c: lea rdi,[rip+0x372e]
0xc973: mov edx,0xb2
0xc978: call 0x1fe0
0xc97d: lea rcx,[rip+0x405c]
0xc984: lea rsi,[rip+0x36cd]
0xc98b: lea rdi,[rip+0x36e6]
0xc992: mov edx,0xb3
0xc997: call 0x1fe0
0xc9a0: push r15
0xc9a2: push r14
0xc9a4: mov r15,rdx
0xc9a7: push r13
0xc9a9: push r12
0xc9ab: lea r12,[rip+0x20607e]
0xc9b2: push rbp
0xc9b3: lea rbp,[rip+0x20607e]
0xc9ba: push rbx
0xc9bb: mov r13d,edi
0xc9be: mov r14,rsi
0xc9c1: sub rbp,r12
0xc9c4: sub rsp,0x8
0xc9c8: sar rbp,0x3
0xc9cc: call 0x1d88
0xc9d1: test rbp,rbp
0xc9d4: jz 0xc9f6
0xc9d6: xor ebx,ebx
0xc9d8: nop qword ptr [rax+rax*1+0x0]
0xc9e0: mov rdx,r15
0xc9e3: mov rsi,r14
0xc9e6: mov edi,r13d
0xc9e9: call qword ptr [r12+rbx*8+0x0]
0xc9ed: add rbx,0x1
0xc9f1: cmp rbp,rbx
0xc9f4: jnz 0xc9e0
0xc9f6: add rsp,0x8
0xc9fa: pop rbx
0xc9fb: pop rbp
0xc9fc: pop r12
0xc9fe: pop r13
0xca00: pop r14
0xca02: pop r15
0xca04: ret
0xca30: sub rsp,0x8
0xca34: add rsp,0x8
0xca38: ret
