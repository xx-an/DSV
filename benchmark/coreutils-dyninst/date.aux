0x26f0: sub rsp,0x8
0x26f4: mov rax,qword ptr [rip+0x2158d5]
0x26fb: test rax,rax
0x26fe: jz 0x2702
0x2700: call rax
0x2702: add rsp,0x8
0x2706: ret
0x2726: push 0x0
0x2736: push 0x1
0x2746: push 0x2
0x2756: push 0x3
0x2766: push 0x4
0x2776: push 0x5
0x2786: push 0x6
0x2796: push 0x7
0x27a6: push 0x8
0x27b0: jmp qword ptr [rip+0x215632]
0x27b6: push 0x9
0x27c0: jmp qword ptr [rip+0x21562a]
0x27c6: push 0xa
0x27d6: push 0xb
0x27e6: push 0xc
0x27f6: push 0xd
0x2806: push 0xe
0x2816: push 0xf
0x2826: push 0x10
0x2836: push 0x11
0x2846: push 0x12
0x2856: push 0x13
0x2866: push 0x14
0x2876: push 0x15
0x2886: push 0x16
0x2896: push 0x17
0x28a0: jmp qword ptr [rip+0x2155ba]
0x28a6: push 0x18
0x28b6: push 0x19
0x28c6: push 0x1a
0x28d6: push 0x1b
0x28e0: jmp qword ptr [rip+0x21559a]
0x28e6: push 0x1c
0x28f6: push 0x1d
0x2906: push 0x1e
0x2916: push 0x1f
0x2926: push 0x20
0x2930: jmp qword ptr [rip+0x215572]
0x2936: push 0x21
0x2946: push 0x22
0x2956: push 0x23
0x2966: push 0x24
0x2976: push 0x25
0x2986: push 0x26
0x2996: push 0x27
0x29a6: push 0x28
0x29b0: jmp qword ptr [rip+0x215532]
0x29b6: push 0x29
0x29c6: push 0x2a
0x29d6: push 0x2b
0x29e6: push 0x2c
0x29f6: push 0x2d
0x2a06: push 0x2e
0x2a16: push 0x2f
0x2a26: push 0x30
0x2a36: push 0x31
0x2a46: push 0x32
0x2a56: push 0x33
0x2a66: push 0x34
0x2a76: push 0x35
0x2a86: push 0x36
0x2a96: push 0x37
0x2aa6: push 0x38
0x2ab6: push 0x39
0x2ac6: push 0x3a
0x2ad6: push 0x3b
0x2ae6: push 0x3c
0x2af6: push 0x3d
0x2b06: push 0x3e
0x2b16: push 0x3f
0x2b26: push 0x40
0x2b36: push 0x41
0x2b46: push 0x42
0x2b56: push 0x43
0x2b60: jmp qword ptr [rip+0x21547a]
0x2b66: nop 
0x2d0e: nop 
0x2d32: nop qword ptr [rax+rax*1+0x0]
0x2d77: nop qword ptr [rax+rax*1+0x0]
0x2d91: nop qword ptr [rax+0x0]
0x2da9: nop qword ptr [rax+0x0]
0x2dc9: nop qword ptr [rax+0x0]
0x2de8: nop qword ptr [rax+rax*1+0x0]
0x2e2e: nop 
0x2fa3: jmp 0x316b
0x30a3: jmp 0x3018
0x30bf: and eax,ebp
0x30c1: mov ebx,eax
0x30c3: mov ebp,ebx
0x30c5: jmp 0x3018
0x3180: and ebp,eax
0x3182: jmp 0x30e7
0x31b7: mov rbx,rax
0x31ba: call 0x2780
0x31bf: mov esi,dword ptr [rax]
0x31c1: lea rdx,[rip+0xfc18]
0x31c8: mov rcx,rbx
0x31cb: mov edi,0x1
0x31d0: xor eax,eax
0x31d2: call 0x2a90
0x31d7: mov edi,0x2006c
0x31dc: call 0x2a00
0x31e1: cmp [rax],0x0
0x31e4: mov rbx,rax
0x31e7: jnz 0x2eed
0x31ed: lea rbx,[rip+0xe52b]
0x31f4: jmp 0x2eed
0x327d: mov dword ptr [rip+0x214e35],ecx
0x3283: lea rbx,[rdi+0x1]
0x3287: jmp 0x2ee4
0x3333: call 0x2850
0x3349: mov rbx,rax
0x334c: call 0x2780
0x3351: mov esi,dword ptr [rax]
0x3353: lea rdx,[rip+0xfa86]
0x335a: mov rcx,rbx
0x335d: mov edi,0x1
0x3362: xor eax,eax
0x3364: call 0x2a90
0x338a: jmp 0x32cb
0x33ae: mov rbx,rax
0x33b1: call 0x2780
0x33b6: mov esi,dword ptr [rax]
0x33b8: lea rdx,[rip+0xfa21]
0x33bf: mov rcx,rbx
0x33c2: mov edi,0x1
0x33c7: xor eax,eax
0x33c9: call 0x2a90
0x33ce: nop 
0x33fa: hlt 
0x3400: lea rdi,[rip+0x214c99]
0x3407: push rbp
0x3408: lea rax,[rip+0x214c91]
0x340f: cmp rax,rdi
0x3412: mov rbp,rsp
0x3415: jz 0x3430
0x3417: mov rax,qword ptr [rip+0x214ba2]
0x341e: test rax,rax
0x3421: jz 0x3430
0x3423: pop rbp
0x3424: jmp rax
0x3426: nop qword ptr [rax+rax*1+0x0]
0x3430: pop rbp
0x3431: ret
0x3440: lea rdi,[rip+0x214c59]
0x3447: lea rsi,[rip+0x214c52]
0x344e: push rbp
0x344f: sub rsi,rdi
0x3452: mov rbp,rsp
0x3455: sar rsi,0x3
0x3459: mov rax,rsi
0x345c: shr rax,0x3f
0x3460: add rsi,rax
0x3463: sar rsi,0x1
0x3466: jz 0x3480
0x3468: mov rax,qword ptr [rip+0x214b69]
0x346f: test rax,rax
0x3472: jz 0x3480
0x3474: pop rbp
0x3475: jmp rax
0x3477: nop qword ptr [rax+rax*1+0x0]
0x3480: pop rbp
0x3481: ret
0x3490: cmp [rip+0x214c51],0x0
0x3497: jnz 0x34c8
0x3499: cmp [rip+0x214b3f],0x0
0x34a1: push rbp
0x34a2: mov rbp,rsp
0x34a5: jz 0x34b3
0x34a7: mov rdi,qword ptr [rip+0x214b5a]
0x34ae: call 0x2b60
0x34b3: call 0x3400
0x34b8: mov [rip+0x214c29],0x1
0x34bf: pop rbp
0x34c0: ret
0x34c1: nop qword ptr [rax+0x0]
0x34c8: rep ret
0x34d0: push rbp
0x34d1: mov rbp,rsp
0x34d4: pop rbp
0x34d5: jmp 0x3440
0x3549: mov rdi,qword ptr [rip+0x214b58]
0x3550: mov rax,qword ptr [rdi+0x28]
0x3554: cmp rax,qword ptr [rdi+0x30]
0x3558: jnb 0x3620
0x355e: lea rdx,[rax+0x1]
0x3562: mov qword ptr [rdi+0x28],rdx
0x3566: mov [rax],0xa
0x3569: mov eax,0x1
0x356e: mov rcx,qword ptr [rsp+0x68]
0x3573: xor rcx,0x28
0x357c: jnz 0x3634
0x3582: add rsp,0x70
0x3586: pop rbx
0x3587: pop rbp
0x3588: pop r12
0x358a: ret
0x358b: nop qword ptr [rax+rax*1+0x0]
0x35cd: xor eax,eax
0x35cf: jmp 0x356e
0x35d1: nop qword ptr [rax+0x0]
0x3603: lea rsi,[rip+0xfca5]
0x360a: mov edi,0x2
0x360f: call 0x2a50
0x3614: jmp 0x3549
0x3619: nop qword ptr [rax+0x0]
0x3620: mov esi,0xa
0x3625: call 0x28a0
0x362a: mov eax,0x1
0x362f: jmp 0x356e
0x3634: call 0x2850
0x3ce0: mov edi,0x1
0x3ce5: jmp 0x3640
0x3d36: nop qword ptr [rax+rax*1+0x0]
0x3df7: nop qword ptr [rax+rax*1+0x0]
0x3e55: mov r8,rbp
0x3e58: mov rdx,rbx
0x3e5b: mov rcx,rax
0x3e5e: pop rbx
0x3e5f: pop rbp
0x3e60: pop r12
0x3e62: xor esi,esi
0x3e64: xor edi,edi
0x3e66: xor eax,eax
0x3e68: jmp 0x2a90
0x3e6d: nop qword ptr [rax]
0x3e90: push r15
0x3e92: push r14
0x3e94: mov r14,rdi
0x3e97: push r13
0x3e99: push r12
0x3e9b: xor edi,edi
0x3e9d: push rbp
0x3e9e: push rbx
0x3e9f: mov rbp,rsi
0x3ea2: lea rsi,[rip+0xef18]
0x3ea9: mov r12,rdx
0x3eac: mov edx,0x5
0x3eb1: sub rsp,0x8
0x3eb5: mov rbx,qword ptr [rip+0x214224]
0x3ebc: call 0x2820
0x3ec1: mov rdi,rax
0x3ec4: mov rsi,rbx
0x3ec7: call 0x2920
0x3ecc: mov r15,qword ptr [r14]
0x3ecf: test r15,r15
0x3ed2: jz 0x3f68
0x3ed8: xor r13d,r13d
0x3edb: xor ebx,ebx
0x3edd: jmp 0x3f18
0x3edf: nop 
0x3ee0: mov rdi,r15
0x3ee3: add rbx,0x1
0x3ee7: mov r13,rbp
0x3eea: call 0xc730
0x3eef: mov rdi,qword ptr [rip+0x2141ea]
0x3ef6: lea rdx,[rip+0xeed9]
0x3efd: mov rcx,rax
0x3f00: mov esi,0x1
0x3f05: xor eax,eax
0x3f07: add rbp,r12
0x3f0a: call 0x2b00
0x3f0f: mov r15,qword ptr [r14+rbx*8+0x0]
0x3f13: test r15,r15
0x3f16: jz 0x3f68
0x3f18: test rbx,rbx
0x3f1b: jz 0x3ee0
0x3f1d: mov rdx,r12
0x3f20: mov rsi,rbp
0x3f23: mov rdi,r13
0x3f26: call 0x2910
0x3f2b: test eax,eax
0x3f2d: jnz 0x3ee0
0x3f2f: mov rdi,r15
0x3f32: add rbx,0x1
0x3f36: add rbp,r12
0x3f39: call 0xc730
0x3f3e: mov rdi,qword ptr [rip+0x21419b]
0x3f45: lea rdx,[rip+0xee92]
0x3f4c: mov rcx,rax
0x3f4f: mov esi,0x1
0x3f54: xor eax,eax
0x3f56: call 0x2b00
0x3f5b: mov r15,qword ptr [r14+rbx*8+0x0]
0x3f5f: test r15,r15
0x3f62: jnz 0x3f18
0x3f64: nop qword ptr [rax+0x0]
0x3f68: mov rdi,qword ptr [rip+0x214171]
0x3f6f: mov rax,qword ptr [rdi+0x28]
0x3f73: cmp rax,qword ptr [rdi+0x30]
0x3f77: jnb 0x3f98
0x3f79: lea rdx,[rax+0x1]
0x3f7d: mov qword ptr [rdi+0x28],rdx
0x3f81: mov [rax],0xa
0x3f84: add rsp,0x8
0x3f88: pop rbx
0x3f89: pop rbp
0x3f8a: pop r12
0x3f8c: pop r13
0x3f8e: pop r14
0x3f90: pop r15
0x3f92: ret
0x3f93: nop qword ptr [rax+rax*1+0x0]
0x3f98: add rsp,0x8
0x3f9c: mov esi,0xa
0x3fa1: pop rbx
0x3fa2: pop rbp
0x3fa3: pop r12
0x3fa5: pop r13
0x3fa7: pop r14
0x3fa9: pop r15
0x3fab: jmp 0x28a0
0x4003: mov rdx,r15
0x4006: mov rsi,rbp
0x4009: mov rdi,rbx
0x400c: call 0x3e90
0x4011: call r13
0x4014: mov rax,0xffffffff
0x401b: jmp 0x3fe6
0x4020: push r14
0x4022: push r13
0x4024: push r12
0x4026: push rbp
0x4027: push rbx
0x4028: mov r14,qword ptr [rsi]
0x402b: test r14,r14
0x402e: jz 0x4061
0x4030: mov r12,rcx
0x4033: mov r13,rdi
0x4036: mov rbp,rdx
0x4039: lea rbx,[rsi+0x8]
0x403d: jmp 0x404f
0x403f: nop 
0x4040: mov r14,qword ptr [rbx]
0x4043: add rbp,r12
0x4046: add rbx,0x8
0x404a: test r14,r14
0x404d: jz 0x4061
0x404f: mov rdx,r12
0x4052: mov rsi,rbp
0x4055: mov rdi,r13
0x4058: call 0x2910
0x405d: test eax,eax
0x405f: jnz 0x4040
0x4061: pop rbx
0x4062: mov rax,r14
0x4065: pop rbp
0x4066: pop r12
0x4068: pop r13
0x406a: pop r14
0x406c: ret
0x4070: mov qword ptr [rip+0x214081],rdi
0x4077: ret
0x4080: mov byte ptr [rip+0x214069],dil
0x4087: ret
0x4090: push rbp
0x4091: push rbx
0x4092: sub rsp,0x8
0x4096: mov rdi,qword ptr [rip+0x21400b]
0x409d: call 0xd8c0
0x40a2: test eax,eax
0x40a4: jz 0x40bc
0x40a6: call 0x2780
0x40ab: cmp [rip+0x21403e],0x0
0x40b2: mov rbx,rax
0x40b5: jz 0x40d3
0x40b7: cmp [rax],0x20
0x40ba: jnz 0x40d3
0x40bc: mov rdi,qword ptr [rip+0x21401d]
0x40c3: call 0xd8c0
0x40c8: test eax,eax
0x40ca: jnz 0x4112
0x40cc: add rsp,0x8
0x40d0: pop rbx
0x40d1: pop rbp
0x40d2: ret
0x40d3: lea rsi,[rip+0xed09]
0x40da: xor edi,edi
0x40dc: mov edx,0x5
0x40e1: call 0x2820
0x40e6: mov rdi,qword ptr [rip+0x21400b]
0x40ed: mov rbp,rax
0x40f0: test rdi,rdi
0x40f3: jz 0x411d
0x40f5: call 0xc530
0x40fa: mov esi,dword ptr [rbx]
0x40fc: lea rdx,[rip+0xecec]
0x4103: mov rcx,rax
0x4106: mov r8,rbp
0x4109: xor edi,edi
0x410b: xor eax,eax
0x410d: call 0x2a90
0x4112: mov edi,dword ptr [rip+0x213f08]
0x4118: call 0x27b0
0x411d: mov esi,dword ptr [rbx]
0x411f: lea rdx,[rip+0xecba]
0x4126: mov rcx,rax
0x4129: xor edi,edi
0x412b: xor eax,eax
0x412d: call 0x2a90
0x4132: jmp 0x4112
0x418e: nop 
0x41ee: nop 
0x42ee: nop 
0x43c5: nop qword ptr [rax]
0x43d9: nop qword ptr [rax+0x0]
0x43ed: nop qword ptr [rax]
0x43fa: nop qword ptr [rax+rax*1+0x0]
0x44d6: nop qword ptr [rax+rax*1+0x0]
0x450b: nop qword ptr [rax+rax*1+0x0]
0x451a: nop qword ptr [rax+rax*1+0x0]
0x455a: nop qword ptr [rax+rax*1+0x0]
0x4582: nop qword ptr [rax+rax*1+0x0]
0x4599: nop qword ptr [rax+0x0]
0x46cd: nop qword ptr [rax]
0x50f7: mov rax,qword ptr [rsp+0x28]
0x50fc: cmp [rax],0x2d
0x50ff: setz r13b
0x5183: test eax,eax
0x5185: jnz 0x5c0d
0x518b: mov eax,r13d
0x518e: mov ecx,ebp
0x5190: mov r9d,0x1
0x5196: xor eax,0x1
0x5199: mov esi,0x3
0x519e: jmp 0x47e5
0x51a3: nop qword ptr [rax+rax*1+0x0]
0x535f: neg eax
0x5361: add ecx,0x64
0x5364: cmp esi,0xfffff893
0x536a: cmovng ecx,eax
0x536d: jmp 0x4e25
0x54f8: nop qword ptr [rax+rax*1+0x0]
0x550f: nop 
0x55e5: nop qword ptr [rax]
0x5602: nop qword ptr [rax+rax*1+0x0]
0x5626: nop qword ptr [rax+rax*1+0x0]
0x5649: nop qword ptr [rax+0x0]
0x566a: nop qword ptr [rax+rax*1+0x0]
0x5aa6: nop qword ptr [rax+rax*1+0x0]
0x5b5c: nop qword ptr [rax+0x0]
0x5b6f: mov eax,r9d
0x5b72: mov edx,0x51eb851f
0x5b77: imul edx,eax,edx
0x5b79: mov eax,r9d
0x5b7c: sar eax,0x1f
0x5b7f: sar edx,0x5
0x5b82: sub edx,eax
0x5b84: imul eax,edx,0x64
0x5b87: mov edx,0x16e
0x5b8c: cmp r9d,eax
0x5b8f: jnz 0x5ba9
0x5b91: mov eax,r9d
0x5b94: mov ecx,0x190
0x5b99: cdq
0x5b9a: idiv ecx
0x5b9c: cmp edx,0x1
0x5b9f: sbb edx,edx
0x5ba1: not edx
0x5ba3: add edx,0x16e
0x5df8: call 0x2850
0x5e66: add rsp,0x18
0x5e6a: ret
0x5e80: sub rsp,0x28
0x5e84: xor edi,edi
0x5e86: mov rsi,rsp
0x5e89: mov rax,0x28
0x5e92: mov qword ptr [rsp+0x18],rax
0x5e97: xor eax,eax
0x5e99: call 0x27d0
0x5e9e: mov rcx,qword ptr [rsp+0x18]
0x5ea3: xor rcx,0x28
0x5eac: mov rax,qword ptr [rsp]
0x5eb0: mov rdx,qword ptr [rsp+0x8]
0x5eb5: jnz 0x5ebc
0x5eb7: add rsp,0x28
0x5ebb: ret
0x5ebc: call 0x2850
0x5f2a: nop qword ptr [rax+rax*1+0x0]
0x5fc5: nop qword ptr [rax]
0x60c2: nop qword ptr [rax+rax*1+0x0]
0x61ba: nop qword ptr [rax+rax*1+0x0]
0x6218: movaps [rsp+0x50],xmm0
0x621d: movaps [rsp+0x60],xmm1
0x6222: movaps [rsp+0x70],xmm2
0x6227: movaps [rsp+0x80],xmm3
0x622f: movaps [rsp+0x90],xmm4
0x6237: movaps [rsp+0xa0],xmm5
0x623f: movaps [rsp+0xb0],xmm6
0x6247: movaps [rsp+0xc0],xmm7
0x62b4: mov rax,qword ptr [rsp+0x18]
0x62b9: xor rax,0x28
0x62c2: jnz 0x62cd
0x62c4: add rsp,0xd0
0x62cb: pop rbx
0x62cc: ret
0x62cd: call 0x2850
0x62e0: mov r8,rdx
0x62e3: xor edi,0x1
0x62e6: lea rdx,[rip+0xcd27]
0x62ed: movzx edi,dil
0x62f1: sub rsp,0x8
0x62f5: mov rcx,rsi
0x62f8: add rdx,rdi
0x62fb: mov rdi,qword ptr [rip+0x211dde]
0x6302: mov esi,0x1
0x6307: xor eax,eax
0x6309: call 0x2b00
0x630e: mov eax,0x1
0x6313: add rsp,0x8
0x6317: ret
0x636e: nop 
0x63ab: nop qword ptr [rax+rax*1+0x0]
0x63ba: nop qword ptr [rax+rax*1+0x0]
0x6430: push r12
0x6432: mov r12,rdi
0x6435: push rbp
0x6436: mov rbp,rsi
0x6439: push rbx
0x643a: lea rsi,[rip+0xcbdc]
0x6441: lea rbx,[rip+0x211298]
0x6448: jmp 0x645c
0x644a: nop qword ptr [rax+rax*1+0x0]
0x6450: add rbx,0x10
0x6454: mov rsi,qword ptr [rbx]
0x6457: test rsi,rsi
0x645a: jz 0x6470
0x645c: mov rdi,rbp
0x645f: call 0x2960
0x6464: test eax,eax
0x6466: jnz 0x6450
0x6468: mov rax,rbx
0x646b: pop rbx
0x646c: pop rbp
0x646d: pop r12
0x646f: ret
0x6470: mov rsi,qword ptr [r12+0xe8]
0x6478: lea rbx,[r12+0xe8]
0x6480: test rsi,rsi
0x6483: jnz 0x64cc
0x6485: nop qword ptr [rax]
0x6488: lea rbx,[rip+0x210f51]
0x648f: lea rsi,[rip+0xcb8b]
0x6496: jmp 0x64ac
0x6498: nop qword ptr [rax+rax*1+0x0]
0x64a0: add rbx,0x10
0x64a4: mov rsi,qword ptr [rbx]
0x64a7: test rsi,rsi
0x64aa: jz 0x64e0
0x64ac: mov rdi,rbp
0x64af: call 0x2960
0x64b4: test eax,eax
0x64b6: jnz 0x64a0
0x64b8: jmp 0x6468
0x64ba: nop qword ptr [rax+rax*1+0x0]
0x64c0: add rbx,0x10
0x64c4: mov rsi,qword ptr [rbx]
0x64c7: test rsi,rsi
0x64ca: jz 0x6488
0x64cc: mov rdi,rbp
0x64cf: call 0x2960
0x64d4: test eax,eax
0x64d6: jnz 0x64c0
0x64d8: mov rax,rbx
0x64db: pop rbx
0x64dc: pop rbp
0x64dd: pop r12
0x64df: ret
0x64e0: xor ebx,ebx
0x64e2: mov rax,rbx
0x64e5: pop rbx
0x64e6: pop rbp
0x64e7: pop r12
0x64e9: ret
0x651c: mov rsi,qword ptr [rbx+0x68]
0x6520: test rsi,rsi
0x6523: jnz 0x66b0
0x6529: mov rsi,qword ptr [rbx+0x70]
0x652d: test rsi,rsi
0x6530: jz 0x65b0
0x6532: xor edi,edi
0x6534: lea rdx,[rip+0xcb13]
0x653b: call 0x62e0
0x6540: mov rsi,qword ptr [rbx+0x78]
0x6544: movzx edi,al
0x6547: test rsi,rsi
0x654a: jnz 0x6620
0x6550: mov rsi,qword ptr [rbx+0x80]
0x6557: test rsi,rsi
0x655a: jnz 0x663f
0x6560: mov rsi,qword ptr [rbx+0x88]
0x6567: test rsi,rsi
0x656a: jnz 0x665e
0x6570: mov rsi,qword ptr [rbx+0x90]
0x6577: test rsi,rsi
0x657a: jnz 0x667d
0x6580: movsxd rsi,dword ptr [rbx+0x98]
0x6587: test rsi,rsi
0x658a: jnz 0x669c
0x6590: mov rsi,qword ptr [rip+0x211b49]
0x6597: add rsp,0x8
0x659b: mov edi,0xa
0x65a0: pop rbx
0x65a1: pop rbp
0x65a2: jmp 0x2900
0x65a7: nop qword ptr [rax+rax*1+0x0]
0x65b0: mov rsi,qword ptr [rbx+0x78]
0x65b4: xor edi,edi
0x65b6: test rsi,rsi
0x65b9: jnz 0x6620
0x65bb: cmp [rbx+0x80],0x0
0x65c3: jnz 0x6550
0x65c5: cmp [rbx+0x88],0x0
0x65cd: jnz 0x6550
0x65cf: cmp [rbx+0x90],0x0
0x65d7: jnz 0x6550
0x65dd: mov eax,dword ptr [rbx+0x98]
0x65e3: test eax,eax
0x65e5: jnz 0x6550
0x65eb: mov rbx,qword ptr [rip+0x211aee]
0x65f2: lea rsi,[rip+0xca3d]
0x65f9: xor edi,edi
0x65fb: mov edx,0x5
0x6600: call 0x2820
0x6605: add rsp,0x8
0x6609: mov rsi,rbx
0x660c: mov rdi,rax
0x660f: pop rbx
0x6610: pop rbp
0x6611: jmp 0x28e0
0x6616: nop qword ptr [rax+rax*1+0x0]
0x6620: lea rdx,[rip+0xca30]
0x6627: call 0x62e0
0x662c: mov rsi,qword ptr [rbx+0x80]
0x6633: movzx edi,al
0x6636: test rsi,rsi
0x6639: jz 0x6560
0x663f: lea rdx,[rip+0xca18]
0x6646: call 0x62e0
0x664b: mov rsi,qword ptr [rbx+0x88]
0x6652: movzx edi,al
0x6655: test rsi,rsi
0x6658: jz 0x6570
0x665e: lea rdx,[rip+0xb1b4]
0x6665: call 0x62e0
0x666a: mov rsi,qword ptr [rbx+0x90]
0x6671: movzx edi,al
0x6674: test rsi,rsi
0x6677: jz 0x6580
0x667d: lea rdx,[rip+0xcabf]
0x6684: call 0x62e0
0x6689: movsxd rsi,dword ptr [rbx+0x98]
0x6690: movzx edi,al
0x6693: test rsi,rsi
0x6696: jz 0x6590
0x669c: lea rdx,[rip+0xc9c3]
0x66a3: call 0x62e0
0x66a8: jmp 0x6590
0x66ad: nop qword ptr [rax]
0x66b0: lea rdx,[rip+0xc98f]
0x66b7: xor edi,edi
0x66b9: call 0x62e0
0x66be: mov rsi,qword ptr [rbx+0x70]
0x66c2: movzx edi,al
0x66c5: test rsi,rsi
0x66c8: jnz 0x6534
0x66ce: mov rsi,qword ptr [rbx+0x78]
0x66d2: jmp 0x6547
0x671b: test r12,r12
0x671e: jz 0x6733
0x6720: cmp eax,0x63
0x6723: mov rbp,rax
0x6726: jnle 0x6733
0x6728: cmp [r12+0xd0],0x0
0x6731: jnz 0x6750
0x6733: mov rdx,qword ptr [rsp+0x28]
0x6738: xor rdx,0x28
0x6741: mov rax,rbx
0x6744: jnz 0x678c
0x6746: add rsp,0x30
0x674a: pop rbx
0x674b: pop rbp
0x674c: pop r12
0x674e: ret
0x674f: nop 
0x6750: mov edi,dword ptr [r12+0x18]
0x6755: mov rsi,rsp
0x6758: call 0x60f0
0x675d: mov esi,0x64
0x6762: movsxd rdi,ebp
0x6765: lea r8,[rip+0xc920]
0x676c: sub esi,ebp
0x676e: mov r9,rax
0x6771: add rdi,rbx
0x6774: movsxd rsi,esi
0x6777: mov rcx,0xffffffff
0x677e: mov edx,0x1
0x6783: xor eax,eax
0x6785: call 0x2740
0x678a: jmp 0x6733
0x678c: call 0x2850
0x6805: nop qword ptr [rax]
0x6854: nop qword ptr [rax+0x0]
0x68e0: cmp [rbx+0xa8],0x0
0x68e8: jz 0x68f7
0x68ea: cmp [rbx+0xda],0x0
0x68f1: jz 0x6af0
0x68f7: movzx eax,byte ptr [rbx+0xdf]
0x68fe: cmp byte ptr [rbx+0xd8],al
0x6904: jz 0x6ae4
0x690a: lea rsi,[rip+0xc7a8]
0x6911: mov rbp,qword ptr [rbx+0x28]
0x6915: mov edx,0x5
0x691a: xor edi,edi
0x691c: call 0x2820
0x6921: mov rdi,qword ptr [rip+0x2117b8]
0x6928: mov rdx,rax
0x692b: mov rcx,rbp
0x692e: mov esi,0x1
0x6933: xor eax,eax
0x6935: call 0x2b00
0x693a: movzx eax,byte ptr [rbx+0xd8]
0x6941: mov edx,0x1
0x6946: mov byte ptr [rbx+0xdf],al
0x694c: cmp [rbx+0xc8],0x0
0x6954: jz 0x6963
0x6956: cmp [rbx+0xdd],0x0
0x695d: jz 0x6b50
0x6963: cmp [rbx+0xb0],0x0
0x696b: jz 0x69d2
0x696d: cmp [rbx+0xdb],0x0
0x6974: jnz 0x69d2
0x6976: test dl,dl
0x6978: jnz 0x6bbf
0x697e: mov rsi,rsp
0x6981: mov rdi,rbx
0x6984: mov r13d,dword ptr [rbx+0x10]
0x6988: mov r12,qword ptr [rbx+0x8]
0x698c: call 0x67a0
0x6991: lea rsi,[rip+0xcc98]
0x6998: mov edx,0x5
0x699d: xor edi,edi
0x699f: mov rbp,rax
0x69a2: call 0x2820
0x69a7: mov rdi,qword ptr [rip+0x211732]
0x69ae: mov rdx,rax
0x69b1: mov r9d,r13d
0x69b4: mov r8,r12
0x69b7: mov rcx,rbp
0x69ba: mov esi,0x1
0x69bf: xor eax,eax
0x69c1: call 0x2b00
0x69c6: mov [rbx+0xdb],0x1
0x69cd: mov edx,0x1
0x69d2: cmp [rbx+0xb8],0x0
0x69da: jz 0x6a60
0x69e0: cmp [rbx+0xdc],0x0
0x69e7: jnz 0x6a60
0x69e9: cmp [rbx+0xc0],0x0
0x69f1: lea rax,[rip+0xc69b]
0x69f8: lea r8,[rip+0xc8b0]
0x69ff: mov ecx,dword ptr [rbx+0x14]
0x6a02: mov rdi,qword ptr [rip+0x2116d7]
0x6a09: mov esi,0x1
0x6a0e: cmovne r8,rax
0x6a12: xor edx,0x1
0x6a15: lea rax,[rip+0xc6c5]
0x6a1c: movzx edx,dl
0x6a1f: add rdx,rax
0x6a22: xor eax,eax
0x6a24: call 0x2b00
0x6a29: cmp [rbx+0xd0],0x0
0x6a31: mov [rbx+0xdc],0x1
0x6a38: jnz 0x6bd8
0x6a3e: cmp [rbx+0xa0],0x0
0x6a45: jz 0x6ab4
0x6a47: mov rbx,qword ptr [rbx+0x58]
0x6a4b: mov rsi,qword ptr [rip+0x21168e]
0x6a52: mov edi,0x20
0x6a57: call 0x2900
0x6a5c: jmp 0x6a88
0x6a5e: nop 
0x6a60: cmp [rbx+0xd0],0x0
0x6a68: jz 0x6a77
0x6a6a: cmp [rbx+0xde],0x0
0x6a71: jz 0x6bf0
0x6a77: cmp [rbx+0xa0],0x0
0x6a7e: jz 0x6ab4
0x6a80: test dl,dl
0x6a82: mov rbx,qword ptr [rbx+0x58]
0x6a86: jnz 0x6a4b
0x6a88: lea rsi,[rip+0xc65e]
0x6a8f: mov edx,0x5
0x6a94: xor edi,edi
0x6a96: call 0x2820
0x6a9b: mov rdi,qword ptr [rip+0x21163e]
0x6aa2: mov rdx,rax
0x6aa5: mov rcx,rbx
0x6aa8: mov esi,0x1
0x6aad: xor eax,eax
0x6aaf: call 0x2b00
0x6ab4: mov rsi,qword ptr [rip+0x211625]
0x6abb: mov edi,0xa
0x6ac0: call 0x2900
0x6ac5: mov rax,qword ptr [rsp+0x68]
0x6aca: xor rax,0x28
0x6ad3: jnz 0x6c72
0x6ad9: add rsp,0x78
0x6add: pop rbx
0x6ade: pop rbp
0x6adf: pop r12
0x6ae1: pop r13
0x6ae3: ret
0x6ae4: xor edx,edx
0x6ae6: jmp 0x694c
0x6aeb: nop qword ptr [rax+rax*1+0x0]
0x6af0: mov rcx,qword ptr [rbx+0x28]
0x6af4: mov r9,qword ptr [rbx+0x40]
0x6af8: lea rdx,[rip+0xc5a0]
0x6aff: mov r8,qword ptr [rbx+0x38]
0x6b03: mov rdi,qword ptr [rip+0x2115d6]
0x6b0a: xor eax,eax
0x6b0c: mov esi,0x1
0x6b11: call 0x2b00
0x6b16: movzx eax,byte ptr [rbx+0xdf]
0x6b1d: mov [rbx+0xda],0x1
0x6b24: mov edx,0x1
0x6b29: cmp byte ptr [rbx+0xd8],al
0x6b2f: jz 0x694c
0x6b35: mov rsi,qword ptr [rip+0x2115a4]
0x6b3c: mov edi,0x20
0x6b41: call 0x2900
0x6b46: jmp 0x690a
0x6b4b: nop qword ptr [rax+rax*1+0x0]
0x6b50: mov rcx,qword ptr [rbx+0x48]
0x6b54: xor edx,0x1
0x6b57: lea rax,[rip+0xc567]
0x6b5e: mov r9,qword ptr [rbx+0x58]
0x6b62: mov r8,qword ptr [rbx+0x50]
0x6b66: movzx edx,dl
0x6b69: mov rdi,qword ptr [rip+0x211570]
0x6b70: add rdx,rax
0x6b73: mov esi,0x1
0x6b78: xor eax,eax
0x6b7a: call 0x2b00
0x6b7f: mov rcx,qword ptr [rbx+0x60]
0x6b83: test rcx,rcx
0x6b86: jnz 0x6c30
0x6b8c: cmp [rbx+0x1c],0x1
0x6b90: jz 0x6c50
0x6b96: cmp [rbx+0xb0],0x0
0x6b9e: mov [rbx+0xdd],0x1
0x6ba5: mov edx,0x1
0x6baa: jz 0x69d2
0x6bb0: movzx edx,byte ptr [rbx+0xdb]
0x6bb7: test dl,dl
0x6bb9: jnz 0x69d2
0x6bbf: mov rsi,qword ptr [rip+0x21151a]
0x6bc6: mov edi,0x20
0x6bcb: call 0x2900
0x6bd0: jmp 0x697e
0x6bd5: nop qword ptr [rax]
0x6bd8: cmp [rbx+0xde],0x0
0x6bdf: jnz 0x6a3e
0x6be5: lea rbp,[rip+0xc4ac]
0x6bec: jmp 0x6c00
0x6bee: nop 
0x6bf0: xor edx,0x1
0x6bf3: movzx ebp,dl
0x6bf6: lea rdx,[rip+0xc49b]
0x6bfd: add rbp,rdx
0x6c00: mov edi,dword ptr [rbx+0x18]
0x6c03: mov rsi,rsp
0x6c06: call 0x60f0
0x6c0b: mov rdi,qword ptr [rip+0x2114ce]
0x6c12: mov rcx,rax
0x6c15: mov rdx,rbp
0x6c18: mov esi,0x1
0x6c1d: xor eax,eax
0x6c1f: call 0x2b00
0x6c24: mov [rbx+0xde],0x1
0x6c2b: jmp 0x6a3e
0x6c30: mov rdi,qword ptr [rip+0x2114a9]
0x6c37: lea rdx,[rip+0xc49a]
0x6c3e: mov esi,0x1
0x6c43: xor eax,eax
0x6c45: call 0x2b00
0x6c4a: jmp 0x6b8c
0x6c4f: nop 
0x6c50: mov rcx,qword ptr [rip+0x211489]
0x6c57: lea rdi,[rip+0xc480]
0x6c5e: mov edx,0x2
0x6c63: mov esi,0x1
0x6c68: call 0x2af0
0x6c6d: jmp 0x6b96
0x6c72: call 0x2850
0x6f0c: mov r11,qword ptr [rsp+0x48]
0x6f11: mov r10,qword ptr [rsp+0x50]
0x6f16: mov r9d,dword ptr [rsp+0x58]
0x6f1b: nop qword ptr [rax+rax*1+0x0]
0x7041: nop qword ptr [rax+0x0]
0x7076: nop qword ptr [rax+rax*1+0x0]
0x734d: nop qword ptr [rax]
0x7366: nop qword ptr [rax+rax*1+0x0]
0x73af: nop 
0x7444: nop qword ptr [rax+0x0]
0x7472: nop qword ptr [rax+rax*1+0x0]
0x74ac: nop qword ptr [rax+0x0]
0x74cb: nop qword ptr [rax+rax*1+0x0]
0x7543: mov rdx,r14
0x7546: movzx ecx,al
0x7549: sub eax,0x61
0x754c: lea esi,[rcx-0x20]
0x754f: cmp al,0x1a
0x7551: cmovnae ecx,esi
0x7554: add rdx,0x1
0x7558: mov byte ptr [rdx-0x1],cl
0x755b: movzx eax,byte ptr [rdx]
0x755e: test al,al
0x7560: jnz 0x7546
0x75be: nop 
0x792b: mov r11,qword ptr [rsp+0x68]
0x7930: mov r9d,dword ptr [rsp+0x60]
0x7935: mov r10,qword ptr [rsp+0x58]
0x7a28: mov r11,qword ptr [rsp+0x48]
0x7a2d: mov r10,qword ptr [rsp+0x50]
0x7a32: mov r9d,dword ptr [rsp+0x58]
0x7a37: jmp 0x6f20
0x7b86: nop qword ptr [rax+rax*1+0x0]
0x7c1f: nop 
0x7d1a: nop qword ptr [rax+rax*1+0x0]
0x7de2: nop qword ptr [rax+rax*1+0x0]
0x7e1e: nop 
0x7f28: nop qword ptr [rax+rax*1+0x0]
0x7fc6: nop qword ptr [rax+rax*1+0x0]
0x8277: nop qword ptr [rax+rax*1+0x0]
0x8323: nop qword ptr [rax+rax*1+0x0]
0x83a3: nop qword ptr [rax+rax*1+0x0]
0x8479: mov r11,qword ptr [rsp+0x60]
0x847e: mov r9d,dword ptr [rsp+0x58]
0x8483: mov r10,qword ptr [rsp+0x50]
0x8540: mov edx,eax
0x8542: mov r9d,0x1
0x8548: shr edx,0x10
0x854b: test eax,0x8080
0x8550: cmove eax,edx
0x8553: lea rdx,[rbp+0x2]
0x8557: mov edi,eax
0x8559: cmove rbp,rdx
0x855d: add dil,al
0x8560: sbb rbp,0x3
0x8564: sub rbp,r14
0x8567: cmp rbp,0x3
0x856b: jz 0x857a
0x856d: xor r9d,r9d
0x8570: cmp rbp,0x4
0x8574: jz 0x8741
0x857a: lea rcx,[rip+0x20f3bf]
0x8581: lea rsi,[rip+0xab7f]
0x8588: mov dword ptr [rsp+0x8],ebx
0x858c: mov qword ptr [rsp+0x20],rbp
0x8591: mov dword ptr [rsp+0x10],r8d
0x8596: mov ebx,r9d
0x8599: mov rbp,rcx
0x859c: mov qword ptr [rsp+0x18],r11
0x85a1: test ebx,ebx
0x85a3: jz 0x8718
0x85a9: mov edx,0x3
0x85ae: mov rdi,r14
0x85b1: call 0x2790
0x85b6: test eax,eax
0x85b8: setz al
0x85bb: test al,al
0x85bd: jnz 0x872a
0x85c3: add rbp,0x10
0x85c7: mov rsi,qword ptr [rbp+0x0]
0x85cb: test rsi,rsi
0x85ce: jnz 0x85a1
0x85d0: mov r11,qword ptr [rsp+0x18]
0x85d5: mov r8d,dword ptr [rsp+0x10]
0x85da: mov rsi,r14
0x85dd: movsxd rbx,dword ptr [rsp+0x8]
0x85e2: mov byte ptr [rsp+0x8],al
0x85e6: mov rbp,qword ptr [rsp+0x20]
0x85eb: mov rdi,r11
0x85ee: mov dword ptr [rsp+0x28],r8d
0x85f3: mov qword ptr [rsp+0x10],r11
0x85f8: call 0x6430
0x85fd: test rax,rax
0x8600: mov rcx,rax
0x8603: mov r11,qword ptr [rsp+0x10]
0x8608: mov r8d,dword ptr [rsp+0x28]
0x860d: jnz 0x75a9
0x8613: lea rsi,[rip+0xaa7a]
0x861a: mov rdi,r14
0x861d: mov qword ptr [rsp+0x18],r11
0x8622: mov dword ptr [rsp+0x10],r8d
0x8627: call 0x2960
0x862c: test eax,eax
0x862e: mov r8d,dword ptr [rsp+0x10]
0x8633: mov r11,qword ptr [rsp+0x18]
0x8638: jz 0x8765
0x863e: lea rcx,[rip+0x20f23b]
0x8645: lea rsi,[rip+0xaac3]
0x864c: mov rdi,r14
0x864f: mov qword ptr [rsp+0x20],r11
0x8654: mov qword ptr [rsp+0x18],rcx
0x8659: mov dword ptr [rsp+0x10],r8d
0x865e: call 0x2960
0x8663: test eax,eax
0x8665: mov r8d,dword ptr [rsp+0x10]
0x866a: mov rcx,qword ptr [rsp+0x18]
0x866f: mov r11,qword ptr [rsp+0x20]
0x8674: jz 0x75a9
0x867a: add rcx,0x10
0x867e: mov rsi,qword ptr [rcx]
0x8681: test rsi,rsi
0x8684: jnz 0x864c
0x8686: lea rdx,[r14+rbp*1-0x1]
0x868b: cmp [rdx],0x53
0x868e: jz 0x8771
0x8694: lea rcx,[rip+0x20f085]
0x869b: lea rsi,[rip+0xaa72]
0x86a2: mov rdi,r14
0x86a5: mov qword ptr [rsp+0x20],r11
0x86aa: mov qword ptr [rsp+0x18],rcx
0x86af: mov dword ptr [rsp+0x10],r8d
0x86b4: call 0x2960
0x86b9: test eax,eax
0x86bb: mov r8d,dword ptr [rsp+0x10]
0x86c0: mov rcx,qword ptr [rsp+0x18]
0x86c5: mov r11,qword ptr [rsp+0x20]
0x86ca: jz 0x75a9
0x86d0: add rcx,0x10
0x86d4: mov rsi,qword ptr [rcx]
0x86d7: test rsi,rsi
0x86da: jnz 0x86a2
0x86dc: sub rbp,0x1
0x86e0: movzx edx,byte ptr [rsp+0x5a0]
0x86e8: jz 0x885c
0x86ee: mov rax,r14
0x86f1: mov rdx,r14
0x86f4: movzx ecx,byte ptr [rax]
0x86f7: test cl,cl
0x86f9: mov byte ptr [rdx],cl
0x86fb: jz 0x87d8
0x8701: cmp [rax],0x2e
0x8704: jz 0x87ce
0x870a: add rdx,0x1
0x870e: add rax,0x1
0x8712: jmp 0x86f4
0x8714: nop qword ptr [rax+0x0]
0x8718: mov rdi,r14
0x871b: call 0x2960
0x8720: test eax,eax
0x8722: setz al
0x8725: jmp 0x85bb
0x872a: movsxd rbx,dword ptr [rsp+0x8]
0x872f: mov r8d,dword ptr [rsp+0x10]
0x8734: mov rcx,rbp
0x8737: mov r11,qword ptr [rsp+0x18]
0x873c: jmp 0x75a9
0x8741: xor r9d,r9d
0x8744: cmp [rsp+0x5a3],0x2e
0x874c: setz r9b
0x8750: jmp 0x857a
0x8760: call 0x2850
0x8765: lea rcx,[rip+0x20f364]
0x876c: jmp 0x75a9
0x8771: lea rcx,[rip+0x20f108]
0x8778: lea rsi,[rip+0xa990]
0x877f: mov [rdx],0x0
0x8782: mov rdi,r14
0x8785: mov qword ptr [rsp+0x28],r11
0x878a: mov qword ptr [rsp+0x20],rcx
0x878f: mov dword ptr [rsp+0x10],r8d
0x8794: mov qword ptr [rsp+0x18],rdx
0x8799: call 0x2960
0x879e: test eax,eax
0x87a0: mov r8d,dword ptr [rsp+0x10]
0x87a5: mov rcx,qword ptr [rsp+0x20]
0x87aa: mov r11,qword ptr [rsp+0x28]
0x87af: jz 0x75a9
0x87b5: add rcx,0x10
0x87b9: mov rsi,qword ptr [rcx]
0x87bc: mov rdx,qword ptr [rsp+0x18]
0x87c1: test rsi,rsi
0x87c4: jnz 0x8782
0x87c6: mov [rdx],0x53
0x87c9: jmp 0x8694
0x87ce: mov [rsp+0x8],0x1
0x87d3: jmp 0x870e
0x87d8: cmp [rsp+0x8],0x0
0x87dd: jz 0x880a
0x87df: mov rdi,r11
0x87e2: mov rsi,r14
0x87e5: mov dword ptr [rsp+0x10],r8d
0x87ea: mov qword ptr [rsp+0x8],r11
0x87ef: call 0x6430
0x87f4: test rax,rax
0x87f7: mov rcx,rax
0x87fa: mov r11,qword ptr [rsp+0x8]
0x87ff: mov r8d,dword ptr [rsp+0x10]
0x8804: jnz 0x75a9
0x880a: cmp [r11+0xd9],0x0
0x8812: jz 0x82b7
0x8818: lea rsi,[rip+0xa900]
0x881f: mov edx,0x5
0x8824: xor edi,edi
0x8826: mov qword ptr [rsp+0x10],r11
0x882b: mov dword ptr [rsp+0x8],r8d
0x8830: call 0x2820
0x8835: mov rsi,r14
0x8838: mov rdi,rax
0x883b: xor eax,eax
0x883d: call 0x61f0
0x8842: mov eax,0x2
0x8847: mov r9d,0x3f
0x884d: mov r8d,dword ptr [rsp+0x8]
0x8852: mov r11,qword ptr [rsp+0x10]
0x8857: jmp 0x735e
0x885c: lea rcx,[rip+0x20e9dd]
0x8863: lea rax,[rip+0xa8b3]
0x886a: cmp byte ptr [rax],dl
0x886c: jz 0x75a9
0x8872: add rcx,0x10
0x8876: mov rax,qword ptr [rcx]
0x8879: test rax,rax
0x887c: jnz 0x886a
0x887e: jmp 0x86ee
0x8917: nop qword ptr [rax+rax*1+0x0]
0x896e: nop 
0x8d12: nop qword ptr [rax+rax*1+0x0]
0x8d5f: jmp 0x8cce
0x8d64: nop qword ptr [rax+0x0]
0x8da1: nop qword ptr [rax+0x0]
0x8e41: nop qword ptr [rax+0x0]
0x8e85: nop qword ptr [rax]
0x8e9e: nop 
0x8eb2: nop qword ptr [rax+rax*1+0x0]
0x8ed5: cmp [rsp+0x250],0x0
0x8edd: mov edx,0x5
0x8ee2: lea rsi,[rip+0xa2c6]
0x8ee9: jnz 0x8f50
0x8eeb: cmp [rsp+0x280],0x0
0x8ef4: mov edx,0x5
0x8ef9: lea rsi,[rip+0xa2c8]
0x8f00: jnz 0x8f50
0x8f02: mov rbx,qword ptr [rsp+0x10]
0x8f07: test rbx,rbx
0x8f0a: jz 0x8f44
0x8f0c: cmp qword ptr [rsp],r15
0x8f10: jz 0x93af
0x8f16: lea rsi,[rip+0xa2c3]
0x8f1d: mov edx,0x5
0x8f22: xor edi,edi
0x8f24: call 0x2820
0x8f29: mov rcx,rbx
0x8f2c: mov rdi,qword ptr [rip+0x20f1ad]
0x8f33: mov rdx,rax
0x8f36: mov esi,0x1
0x8f3b: xor eax,eax
0x8f3d: call 0x2b00
0x8f42: jmp 0x8f6d
0x8f44: lea rsi,[rip+0xa2c6]
0x8f4b: mov edx,0x5
0x8f50: xor edi,edi
0x8f52: call 0x2820
0x8f57: mov rdi,qword ptr [rip+0x20f182]
0x8f5e: mov rdx,rax
0x8f61: mov esi,0x1
0x8f66: xor eax,eax
0x8f68: call 0x2b00
0x8f6d: cmp [rsp+0x268],0x0
0x8f76: mov rax,qword ptr [rsp+0x280]
0x8f7e: jz 0x8fc0
0x8f80: test rax,rax
0x8f83: jnz 0x9286
0x8f89: mov r8d,dword ptr [rsp+0x1c4]
0x8f91: mov rsi,qword ptr [rip+0x20f148]
0x8f98: test r8d,r8d
0x8f9b: jle 0x8fd0
0x8f9d: lea rdi,[rip+0xa282]
0x8fa4: mov rcx,rsi
0x8fa7: mov edx,0x5
0x8fac: mov esi,0x1
0x8fb1: call 0x2af0
0x8fb6: mov rax,qword ptr [rsp+0x280]
0x8fbe: nop 
0x8fc0: test rax,rax
0x8fc3: jnz 0x9286
0x8fc9: mov rsi,qword ptr [rip+0x20f110]
0x8fd0: mov edi,0xa
0x8fd5: call 0x2900
0x8fda: cmp [rsp+0x250],0x0
0x8fe2: movzx r12d,byte ptr [rsp+0x289]
0x8feb: jz 0x9178
0x8ff1: mov rax,qword ptr [rsp+0x28]
0x8ff6: movdqu xmm0,[rsp+0x208]
0x8fff: movups [rax],xmm0
0x9065: mov r14,qword ptr [rsp+0x28]
0x906a: lea rsi,[rip+0xad5f]
0x9071: xor edi,edi
0x9073: mov edx,0x5
0x9078: mov rbx,qword ptr [r14]
0x907b: mov rbp,qword ptr [r14+0x8]
0x907f: call 0x2820
0x9084: mov rdi,rax
0x9087: xor eax,eax
0x9089: mov rsi,rbx
0x908c: lea rbx,[rsp+0x130]
0x9094: mov edx,ebp
0x9096: call 0x61f0
0x909b: mov rsi,rbx
0x909e: mov rdi,r14
0x90a1: call 0x28c0
0x90a6: test rax,rax
0x90a9: jz 0x90e0
0x90ab: lea rdx,[rsp+0x300]
0x90b3: mov rdi,rbx
0x90b6: xor esi,esi
0x90b8: call 0x66e0
0x90bd: lea rsi,[rip+0xa325]
0x90c4: mov rbx,rax
0x90c7: xor edi,edi
0x90c9: mov edx,0x5
0x90ce: call 0x2820
0x90d3: mov rsi,rbx
0x90d6: mov rdi,rax
0x90d9: xor eax,eax
0x90db: call 0x61f0
0x90e0: lea rbx,[rsp+0x170]
0x90e8: mov rsi,qword ptr [rsp+0x28]
0x90ed: mov rdi,r15
0x90f0: mov rdx,rbx
0x90f3: call 0xd5c0
0x90f8: test rax,rax
0x90fb: jz 0x8cce
0x9101: mov edi,dword ptr [rsp+0x198]
0x9108: lea rsi,[rsp+0x2e0]
0x9110: call 0x60f0
0x9115: lea rdx,[rsp+0x300]
0x911d: xor esi,esi
0x911f: mov rdi,rbx
0x9122: mov rbp,rax
0x9125: call 0x66e0
0x912a: lea rsi,[rip+0xa2c9]
0x9131: mov rbx,rax
0x9134: xor edi,edi
0x9136: mov edx,0x5
0x913b: call 0x2820
0x9140: mov rdx,rbp
0x9143: mov rdi,rax
0x9146: mov rsi,rbx
0x9149: xor eax,eax
0x914b: call 0x61f0
0x9150: jmp 0x8cce
0x9155: nop qword ptr [rax]
0x916e: nop 
0x9178: mov rsi,qword ptr [rsp+0x278]
0x9180: mov rcx,qword ptr [rsp+0x258]
0x9188: mov rdx,qword ptr [rsp+0x280]
0x9190: add rdx,qword ptr [rsp+0x268]
0x9198: mov rax,rsi
0x919b: or rax,rcx
0x919e: or rax,qword ptr [rsp+0x260]
0x91a6: or rax,qword ptr [rsp+0x270]
0x91ae: or rax,rdx
0x91b1: cmp rax,0x1
0x91b5: jle 0x92f9
0x91bb: test r12b,r12b
0x91be: jz 0x8ccb
0x91c4: cmp rsi,0x1
0x91c8: jnle 0x926b
0x91ce: cmp rcx,0x1
0x91d2: jnle 0x9258
0x91d8: cmp [rsp+0x260],0x1
0x91e1: jnle 0x9248
0x91e3: cmp [rsp+0x270],0x1
0x91ec: jnle 0x9238
0x91ee: mov rax,qword ptr [rsp+0x280]
0x91f6: add rax,qword ptr [rsp+0x268]
0x91fe: cmp rax,0x1
0x9202: jle 0x8ccb
0x9208: lea rdi,[rip+0xa5b9]
0x920f: xor eax,eax
0x9211: call 0x61f0
0x9216: jmp 0x8ccb
0x9233: jmp 0x9065
0x9238: lea rdi,[rip+0xa559]
0x923f: xor eax,eax
0x9241: call 0x61f0
0x9246: jmp 0x91ee
0x9248: lea rdi,[rip+0xa521]
0x924f: xor eax,eax
0x9251: call 0x61f0
0x9256: jmp 0x91e3
0x9258: lea rdi,[rip+0xa4e9]
0x925f: xor eax,eax
0x9261: call 0x61f0
0x9266: jmp 0x91d8
0x926b: lea rdi,[rip+0xa4ae]
0x9272: xor eax,eax
0x9274: call 0x61f0
0x9279: mov rcx,qword ptr [rsp+0x258]
0x9281: jmp 0x91ce
0x9286: mov edi,dword ptr [rsp+0x1c8]
0x928d: lea rsi,[rsp+0x2e0]
0x9295: call 0x60f0
0x929a: mov rdi,qword ptr [rip+0x20ee3f]
0x92a1: lea rdx,[rip+0x9f78]
0x92a8: mov rcx,rax
0x92ab: mov esi,0x1
0x92b0: xor eax,eax
0x92b2: call 0x2b00
0x92b7: mov rsi,qword ptr [rip+0x20ee22]
0x92be: jmp 0x8fd0
0x93aa: jmp 0x8ccb
0x93af: mov rsi,qword ptr [rsp+0x10]
0x93b4: lea rdi,[rip+0x83ad]
0x93bb: mov ecx,0x5
0x93c0: mov edx,0x5
0x93c5: rep cmpsb ds:[rsi],es:[rdi]
0x93c7: lea rsi,[rip+0xa32a]
0x93ce: setnbe al
0x93d1: sbb al,0x0
0x93d3: test al,al
0x93d5: jz 0x8f50
0x93db: lea rsi,[rip+0x9e15]
0x93e2: xor edi,edi
0x93e4: call 0x2820
0x93e9: mov rcx,qword ptr [rsp+0x10]
0x93ee: jmp 0x8f2c
0x954d: lea rdi,[rsp+0xb0]
0x9555: mov rsi,rbp
0x9558: call 0x6400
0x955d: test al,al
0x955f: jnz 0x9988
0x964e: lea rdi,[rsp+0xb0]
0x9656: mov rdx,rbx
0x9659: mov rsi,r13
0x965c: call 0x66e0
0x9661: lea rsi,[rip+0x9c2a]
0x9668: mov r12,rax
0x966b: mov edx,0x5
0x9670: xor edi,edi
0x9672: call 0x2820
0x9677: mov rsi,r12
0x967a: mov rdi,rax
0x967d: xor eax,eax
0x967f: call 0x61f0
0x9684: mov rdi,qword ptr [rsp+0x18]
0x9689: mov rdx,rbx
0x968c: mov rsi,r13
0x968f: call 0x66e0
0x9694: lea rsi,[rip+0x9c15]
0x969b: mov r12,rax
0x969e: mov edx,0x5
0x96a3: xor edi,edi
0x96a5: call 0x2820
0x96aa: mov rsi,r12
0x96ad: mov rdi,rax
0x96b0: xor eax,eax
0x96b2: call 0x61f0
0x96b7: lea rsi,[rip+0x9bf1]
0x96be: mov r12d,0x1
0x96c4: mov rax,rsi
0x96c7: mov r11d,dword ptr [rsp+0x40]
0x96cc: cmp dword ptr [rsp+0x38],r11d
0x96d1: lea rcx,[rip+0x9bd7]
0x96d8: lea rdx,[rip+0x9aa0]
0x96df: mov r11d,dword ptr [rsp+0x20]
0x96e4: lea r9,[rip+0x9a92]
0x96eb: mov r8,rcx
0x96ee: mov rdi,rcx
0x96f1: cmovne r8,rdx
0x96f5: cmp dword ptr [rsp+0x10],r11d
0x96fa: mov r11d,dword ptr [rsp+0x28]
0x96ff: cmovne rdi,rdx
0x9703: cmp r14d,ebp
0x9706: cmove rdx,rcx
0x970a: cmp dword ptr [rsp+0x44],r11d
0x970f: cmove r9,rcx
0x9713: sub rsp,0x8
0x9717: mov ecx,0x64
0x971c: push rsi
0x971d: push rax
0x971e: mov esi,0x64
0x9723: push r8
0x9725: lea r8,[rip+0xa1dc]
0x972c: push rdi
0x972d: push rdx
0x972e: mov rdi,rbx
0x9731: mov edx,0x1
0x9736: xor eax,eax
0x9738: call 0x2740
0x973d: add rsp,0x30
0x9741: mov eax,0x34
0x9746: jmp 0x9752
0x9748: sub rax,0x1
0x974c: cmp [rbx+rax*1+0x0],0x20
0x9750: jnz 0x9758
0x9752: test eax,eax
0x9754: mov edx,eax
0x9756: jnz 0x9748
0x9758: movsxd rax,edx
0x975b: lea rdi,[rip+0x9baf]
0x9762: mov rsi,rbx
0x9765: mov [rsp+rax*1+0x3e0],0x0
0x976d: xor eax,eax
0x976f: call 0x61f0
0x9774: lea rsi,[rip+0x9b53]
0x977b: xor edi,edi
0x977d: mov edx,0x5
0x9782: call 0x2820
0x9787: mov rdi,rax
0x978a: xor eax,eax
0x978c: call 0x61f0
0x9791: test r12d,r12d
0x9794: jz 0x97b3
0x9796: lea rsi,[rip+0xa1ab]
0x979d: xor edi,edi
0x979f: mov edx,0x5
0x97a4: call 0x2820
0x97a9: mov rdi,rax
0x97ac: xor eax,eax
0x97ae: call 0x61f0
0x97b3: mov ebx,dword ptr [rsp+0x20]
0x97b7: cmp dword ptr [rsp+0x10],ebx
0x97bb: jz 0x97df
0x97bd: cmp r14d,ebp
0x97c0: jz 0x97df
0x97c2: lea rsi,[rip+0xa1b7]
0x97c9: xor edi,edi
0x97cb: mov edx,0x5
0x97d0: call 0x2820
0x97d5: mov rdi,rax
0x97d8: xor eax,eax
0x97da: call 0x61f0
0x97df: lea rsi,[rip+0xa1c2]
0x97e6: mov edx,0x5
0x97eb: xor edi,edi
0x97ed: call 0x2820
0x97f2: mov rdi,rax
0x97f5: xor eax,eax
0x97f7: call 0x61f0
0x97fc: cmp [rsp+0x30],0x0
0x9802: mov edx,0x5
0x9807: jz 0xa5e6
0x980d: lea rsi,[rip+0x9ad2]
0x9814: xor edi,edi
0x9816: call 0x2820
0x981b: lea rdi,[rip+0x9ae8]
0x9822: mov rsi,rax
0x9825: xor eax,eax
0x9827: call 0x61f0
0x982c: jmp 0x8ccb
0x9831: nop qword ptr [rax+0x0]
0x9854: nop qword ptr [rax+0x0]
0x9863: nop qword ptr [rax+rax*1+0x0]
0x9a3d: lea rsi,[rsp+0x3e0]
0x9a45: mov r14d,dword ptr [rsp+0x1c0]
0x9a4d: mov rbp,qword ptr [rsp+0x1b8]
0x9a55: mov rdi,r13
0x9a58: mov r12,rax
0x9a5b: call 0x67a0
0x9a60: lea rsi,[rip+0x9f69]
0x9a67: mov rbx,rax
0x9a6a: xor edi,edi
0x9a6c: mov edx,0x5
0x9a71: call 0x2820
0x9a76: mov r8,r12
0x9a79: mov rdi,rax
0x9a7c: mov ecx,r14d
0x9a7f: mov rdx,rbp
0x9a82: mov rsi,rbx
0x9a85: xor eax,eax
0x9a87: call 0x61f0
0x9a8c: jmp 0x8ccb
0x9a91: nop qword ptr [rax+0x0]
0x9abe: jmp 0x9319
0x9ba1: jmp 0x9b28
0x9bee: lea rsi,[rsp+0x3e0]
0x9bf6: mov rdi,r13
0x9bf9: mov rbp,rax
0x9bfc: call 0x67a0
0x9c01: lea rsi,[rip+0x970d]
0x9c08: mov r12,rax
0x9c0b: mov edx,0x5
0x9c10: xor edi,edi
0x9c12: call 0x2820
0x9c17: mov rdx,rbp
0x9c1a: mov rdi,rax
0x9c1d: mov rsi,r12
0x9c20: xor eax,eax
0x9c22: call 0x61f0
0x9c6d: lea rsi,[rip+0x96d4]
0x9c74: mov rbx,rax
0x9c77: mov edx,0x5
0x9c7c: xor edi,edi
0x9c7e: call 0x2820
0x9c83: mov rsi,rbx
0x9c86: mov rdi,rax
0x9c89: xor eax,eax
0x9c8b: call 0x61f0
0x9c90: mov rax,qword ptr [rsp+0x218]
0x9c98: mov rdx,qword ptr [rsp+0x220]
0x9ca0: movzx ebx,byte ptr [rsp+0x289]
0x9ca8: or rdx,rax
0x9cab: mov rsi,rdx
0x9cae: or rsi,qword ptr [rsp+0x228]
0x9cb6: jz 0x9d9b
0x9cbc: test bl,bl
0x9cbe: jz 0x9e05
0x9cc4: test rdx,rdx
0x9cc7: jz 0xa5b9
0x9ccd: cmp [rsp+0x7c],0xf
0x9cd2: jz 0x9cf1
0x9cd4: lea rsi,[rip+0x9db5]
0x9cdb: xor edi,edi
0x9cdd: mov edx,0x5
0x9ce2: call 0x2820
0x9ce7: mov rdi,rax
0x9cea: xor eax,eax
0x9cec: call 0x61f0
0x9cf1: cmp [rsp+0x228],0x0
0x9cfa: jnz 0xa5b9
0x9d00: movsxd rdx,dword ptr [rsp+0x84]
0x9d08: xor eax,eax
0x9d0a: mov rcx,rdx
0x9d0d: add rcx,qword ptr [rsp+0x218]
0x9d15: movsxd rdx,ecx
0x9d18: seto al
0x9d1b: mov dword ptr [rsp+0x20],ecx
0x9d1f: cmp rcx,rdx
0x9d22: mov edx,0x1
0x9d27: cmovne eax,edx
0x9d2a: test eax,eax
0x9d2c: jz 0x9e30
0x9d69: jmp 0x8ccb
0x9dfb: jmp 0x8ccb
0x9e00: call 0x2850
0x9f3b: mov rdi,qword ptr [rsp+0x18]
0x9f40: lea rdx,[rsp+0x300]
0x9f48: mov rsi,r13
0x9f4b: call 0x66e0
0x9f50: lea rsi,[rip+0x942a]
0x9f57: xor edi,edi
0x9f59: mov rbx,rax
0x9f5c: mov edx,0x5
0x9f61: call 0x2820
0x9f66: mov rsi,rbx
0x9f69: mov rdi,rax
0x9f6c: xor eax,eax
0x9f6e: call 0x61f0
0x9f73: mov eax,dword ptr [rsp+0xd0]
0x9f7a: cmp eax,0xff
0x9f7d: jz 0x9fa5
0x9f7f: cmp eax,dword ptr [rsp+0x90]
0x9f86: jz 0x9fa5
0x9f88: lea rsi,[rip+0x9c31]
0x9f8f: xor edi,edi
0x9f91: mov edx,0x5
0x9f96: call 0x2820
0x9f9b: mov rdi,rax
0x9f9e: xor eax,eax
0x9fa0: call 0x61f0
0x9fa5: cmp [rsp+0x228],0x0
0x9fae: jnz 0xa082
0x9fb4: cmp ebp,dword ptr [rsp+0x7c]
0x9fb8: jnz 0x9fd7
0x9fba: cmp [rsp+0x220],0x0
0x9fc3: jnz 0xa082
0x9fc9: cmp r12d,dword ptr [rsp+0x80]
0x9fd1: jz 0xa082
0x9fd7: lea rsi,[rip+0x9c22]
0x9fde: mov edx,0x5
0x9fe3: xor edi,edi
0x9fe5: call 0x2820
0x9fea: mov rdi,rax
0x9fed: xor eax,eax
0x9fef: call 0x61f0
0x9ff4: lea r8,[rsp+0x2d3]
0x9ffc: mov edi,dword ptr [rsp+0x20]
0xa000: mov rsi,r8
0xa003: mov qword ptr [rsp+0x30],r8
0xa008: call 0x2b70
0xa00d: lea rsi,[rip+0x9c2c]
0xa014: mov edx,0x5
0xa019: xor edi,edi
0xa01b: mov rbx,rax
0xa01e: call 0x2820
0xa023: lea edx,[r12+0x1]
0xa028: mov ecx,ebp
0xa02a: mov rsi,rbx
0xa02d: mov rdi,rax
0xa030: xor eax,eax
0xa032: call 0x61f0
0xa037: mov r8,qword ptr [rsp+0x30]
0xa03c: mov eax,dword ptr [rsp+0x80]
0xa043: mov edi,dword ptr [rsp+0x84]
0xa04a: mov r12d,dword ptr [rsp+0x7c]
0xa04f: mov rsi,r8
0xa052: lea ebx,[rax+0x1]
0xa055: call 0x2b70
0xa05a: lea rsi,[rip+0x9c07]
0xa061: mov rbp,rax
0xa064: mov edx,0x5
0xa069: xor edi,edi
0xa06b: call 0x2820
0xa070: mov ecx,r12d
0xa073: mov rdi,rax
0xa076: mov edx,ebx
0xa078: mov rsi,rbp
0xa07b: xor eax,eax
0xa07d: call 0x61f0
0xa082: movzx ebx,byte ptr [rsp+0x289]
0xa08a: jmp 0x9d9b
0xa0d3: jmp 0x9c5d
0xa133: jmp 0x9b28
0xa19d: lea rdi,[rsp+0xb0]
0xa1a5: mov rsi,r13
0xa1a8: mov rdx,rbx
0xa1ab: call 0x66e0
0xa1b0: lea rsi,[rip+0x90db]
0xa1b7: mov edx,0x5
0xa1bc: xor edi,edi
0xa1be: mov qword ptr [rsp+0x48],rax
0xa1c3: call 0x2820
0xa1c8: mov rsi,qword ptr [rsp+0x48]
0xa1cd: mov rdi,rax
0xa1d0: xor eax,eax
0xa1d2: call 0x61f0
0xa1d7: mov rdi,qword ptr [rsp+0x18]
0xa1dc: mov rsi,r13
0xa1df: mov rdx,rbx
0xa1e2: call 0x66e0
0xa1e7: lea rsi,[rip+0x90c2]
0xa1ee: mov edx,0x5
0xa1f3: xor edi,edi
0xa1f5: mov r13,rax
0xa1f8: call 0x2820
0xa1fd: mov rsi,r13
0xa200: mov rdi,rax
0xa203: xor eax,eax
0xa205: call 0x61f0
0xa20a: mov r10d,dword ptr [rsp+0x50]
0xa20f: mov r9d,dword ptr [rsp+0x54]
0xa214: lea rdx,[rip+0x9094]
0xa21b: mov r8d,dword ptr [rsp+0x58]
0xa220: mov ecx,dword ptr [rsp+0x5c]
0xa224: lea rax,[rip+0x8f54]
0xa22b: mov rsi,rdx
0xa22e: cmp r10d,r9d
0xa231: cmovne rsi,rax
0xa235: cmp r8d,ecx
0xa238: cmove rax,rdx
0xa23c: jmp 0x96c7
0xa33e: lea rsi,[rip+0x99fb]
0xa345: xor edi,edi
0xa347: mov edx,0x5
0xa34c: call 0x2820
0xa351: mov rsi,rbx
0xa354: mov rdi,rax
0xa357: xor eax,eax
0xa359: call 0x61f0
0xa35e: cmp [rsp+0x90],0xff
0xa366: jz 0xa3af
0xa368: mov rsi,qword ptr [rsp+0x28]
0xa36d: lea rdx,[rsp+0x170]
0xa375: mov rdi,r15
0xa378: call 0xd5c0
0xa37d: test rax,rax
0xa380: jz 0xa3af
0xa382: mov eax,dword ptr [rsp+0x190]
0xa389: cmp dword ptr [rsp+0x90],eax
0xa390: jz 0xa3af
0xa392: lea rsi,[rip+0x99cf]
0xa399: xor edi,edi
0xa39b: mov edx,0x5
0xa3a0: call 0x2820
0xa3a5: mov rdi,rax
0xa3a8: xor eax,eax
0xa3aa: call 0x61f0
0xa3af: movzx r12d,byte ptr [rsp+0x289]
0xa3b8: jmp 0x9002
0xa405: jmp 0x8ccb
0xa444: jmp 0x8ccb
0xa479: lea rsi,[rip+0x8f1b]
0xa480: mov rbx,rax
0xa483: xor edi,edi
0xa485: mov edx,0x5
0xa48a: call 0x2820
0xa48f: mov rdx,r14
0xa492: mov rdi,rax
0xa495: mov rsi,rbx
0xa498: xor eax,eax
0xa49a: call 0x61f0
0xa49f: jmp 0xa249
0xa4a4: mov rdi,rdx
0xa4a7: call 0xd5b0
0xa4ac: jmp 0x957b
0xa522: pop rax
0xa523: pop rdx
0xa524: cmp [rsp+0x260],0x0
0xa52d: jz 0x9c5d
0xa533: cmp [rsp+0x258],0x0
0xa53c: jnz 0xa0a0
0xa542: jmp 0x9c5d
0xa56a: lea rsi,[rip+0x95cf]
0xa571: mov rbx,rax
0xa574: xor edi,edi
0xa576: mov edx,0x5
0xa57b: call 0x2820
0xa580: mov rsi,rbx
0xa583: mov rdi,rax
0xa586: xor eax,eax
0xa588: call 0x61f0
0xa58d: jmp 0x8ccb
0xa5b9: cmp [rsp+0x78],0xc
0xa5be: jz 0x9d00
0xa5c4: lea rsi,[rip+0x952d]
0xa5cb: xor edi,edi
0xa5cd: mov edx,0x5
0xa5d2: call 0x2820
0xa5d7: mov rdi,rax
0xa5da: xor eax,eax
0xa5dc: call 0x61f0
0xa5e1: jmp 0x9d00
0xa5e6: lea rsi,[rip+0x8d0c]
0xa5ed: xor edi,edi
0xa5ef: call 0x2820
0xa5f4: jmp 0x981b
0xa600: push r14
0xa602: push r13
0xa604: mov r14,rdx
0xa607: push r12
0xa609: push rbp
0xa60a: mov r12,rdi
0xa60d: push rbx
0xa60e: lea rdi,[rip+0x7179]
0xa615: mov r13,rsi
0xa618: sub rsp,0x10
0xa61c: call 0x2730
0xa621: mov rdi,rax
0xa624: mov rbp,rax
0xa627: call 0xd300
0xa62c: mov rbx,rax
0xa62f: xor eax,eax
0xa631: test rbx,rbx
0xa634: jz 0xa65d
0xa636: mov r9,rbp
0xa639: mov r8,rbx
0xa63c: xor ecx,ecx
0xa63e: mov rdx,r14
0xa641: mov rsi,r13
0xa644: mov rdi,r12
0xa647: call 0x8890
0xa64c: mov rdi,rbx
0xa64f: mov byte ptr [rsp+0xf],al
0xa653: call 0xd5b0
0xa658: movzx eax,byte ptr [rsp+0xf]
0xa65d: add rsp,0x10
0xa661: pop rbx
0xa662: pop rbp
0xa663: pop r12
0xa665: pop r13
0xa667: pop r14
0xa669: ret
0xa6a0: xor eax,eax
0xa6a2: jmp 0xa6ca
0xa6a4: nop qword ptr [rax+0x0]
0xa6e1: nop qword ptr [rax+0x0]
0xa702: nop qword ptr [rax+rax*1+0x0]
0xa71c: call 0x2850
0xa7bd: nop qword ptr [rax]
0xa803: nop qword ptr [rax+rax*1+0x0]
0xa90e: mov edx,dword ptr [rsp+0x24]
0xa912: mov ecx,dword ptr [rsp+0x20]
0xa916: xor edx,dword ptr [rsp+0x64]
0xa91a: xor ecx,dword ptr [rsp+0x60]
0xa91e: mov esi,dword ptr [rsp+0x10]
0xa922: or edx,ecx
0xa924: mov ecx,dword ptr [rsp+0x1c]
0xa928: xor ecx,dword ptr [rsp+0x5c]
0xa92c: or edx,ecx
0xa92e: mov ecx,dword ptr [rsp+0x18]
0xa932: xor ecx,dword ptr [rsp+0x58]
0xa936: or edx,ecx
0xa938: mov ecx,dword ptr [rsp+0x14]
0xa93c: xor ecx,dword ptr [rsp+0x54]
0xa940: or edx,ecx
0xa942: mov ecx,dword ptr [rsp+0x50]
0xa946: xor ecx,esi
0xa948: or edx,ecx
0xa94a: jz 0xa990
0xa94c: cmp esi,0x3c
0xa94f: jnz 0xa794
0xa955: lea r14,[rsp+0xb0]
0xa95d: mov edx,0x10
0xa962: mov rsi,rbx
0xa965: mov rdi,r14
0xa968: call 0x29b0
0xa96d: mov edx,0x3935
0xa972: lea rdi,[rsp+0x8]
0xa977: mov [rax],0x0
0xa97a: mov word ptr [rax-0x2],dx
0xa97e: mov rsi,r14
0xa981: mov edx,ebp
0xa983: call 0xa730
0xa988: test al,al
0xa98a: jz 0xa794
0xa990: mov qword ptr [r12],r13
0xa994: mov eax,0x1
0xa999: jmp 0xa794
0xa99e: nop 
0xa9a0: lea rax,[r13-0x8]
0xa9a4: xor r14d,r14d
0xa9a7: cmp rax,0x4
0xa9ab: jbe 0xa7cd
0xa9b1: jmp 0xa792
0xa9b6: nop qword ptr [rax+rax*1+0x0]
0xa9c0: lea rdi,[rsp+0x24]
0xa9c5: mov ecx,ebp
0xa9c7: mov rsi,r15
0xa9ca: call 0xa670
0xa9cf: test al,al
0xa9d1: jz 0xa792
0xa9d7: lea rax,[r15+r13*4-0x10]
0xa9dc: mov esi,dword ptr [rax]
0xa9de: lea edx,[rsi-0x1]
0xa9e1: mov dword ptr [rsp+0x20],edx
0xa9e5: mov edx,dword ptr [rax+0x4]
0xa9e8: mov dword ptr [rsp+0x1c],edx
0xa9ec: mov edx,dword ptr [rax+0x8]
0xa9ef: mov eax,dword ptr [rax+0xc]
0xa9f2: mov dword ptr [rsp+0x18],edx
0xa9f6: mov dword ptr [rsp+0x14],eax
0xa9fa: jmp 0xa881
0xa9ff: nop 
0xaa0f: call 0x2850
0xaafc: nop qword ptr [rax+0x0]
0xab4d: nop qword ptr [rax]
0xae67: nop qword ptr [rax+rax*1+0x0]
0xae9e: nop 
0xaec1: nop qword ptr [rax+0x0]
0xaf02: nop qword ptr [rax+rax*1+0x0]
0xaf14: nop qword ptr [rax+0x0]
0xafb8: nop qword ptr [rax+rax*1+0x0]
0xafe1: nop qword ptr [rax+0x0]
0xaff7: nop qword ptr [rax+rax*1+0x0]
0xb00f: nop 
0xb03e: nop 
0xb04d: nop qword ptr [rax]
0xb05f: nop 
0xb06f: nop 
0xb07f: nop 
0xb08f: nop 
0xb09f: nop 
0xb10c: nop qword ptr [rax+0x0]
0xb12c: nop qword ptr [rax+0x0]
0xb14f: nop 
0xb162: nop qword ptr [rax+rax*1+0x0]
0xb17a: nop qword ptr [rax+rax*1+0x0]
0xb18a: nop qword ptr [rax+rax*1+0x0]
0xb22b: nop qword ptr [rax+rax*1+0x0]
0xb245: nop qword ptr [rax]
0xb258: nop qword ptr [rax+rax*1+0x0]
0xb273: nop qword ptr [rax+rax*1+0x0]
0xb2a2: nop qword ptr [rax+rax*1+0x0]
0xb2b2: nop qword ptr [rax+rax*1+0x0]
0xb2ca: nop qword ptr [rax+rax*1+0x0]
0xb2da: nop qword ptr [rax+rax*1+0x0]
0xb2e8: nop qword ptr [rax+rax*1+0x0]
0xb30f: nop 
0xb34d: cmp [rsp+0xe],0x0
0xb352: jnz 0xbd4d
0xb358: test r13,r13
0xb35b: setz al
0xb35e: cmp [rsp+0x50],0x0
0xb364: setnz dl
0xb367: and al,dl
0xb369: jz 0xbd8c
0xb36f: mov r13,qword ptr [rsp+0x50]
0xb3a9: nop qword ptr [rax+0x0]
0xb3f2: nop qword ptr [rax+rax*1+0x0]
0xb431: nop qword ptr [rax+0x0]
0xb452: nop qword ptr [rax+rax*1+0x0]
0xb5b8: nop qword ptr [rax+rax*1+0x0]
0xb6cb: nop qword ptr [rax+rax*1+0x0]
0xb6ee: nop 
0xb7b5: nop qword ptr [rax]
0xb86d: nop qword ptr [rax]
0xba76: nop qword ptr [rax+rax*1+0x0]
0xbb09: nop qword ptr [rax+0x0]
0xbc5d: nop qword ptr [rax]
0xbd4d: sub rsp,0x8
0xbd51: mov r8d,0x5
0xbd57: mov rcx,r11
0xbd5a: push qword ptr [rsp+0x68]
0xbd5e: push qword ptr [rsp+0x78]
0xbd62: mov rdi,r14
0xbd65: push qword ptr [rsp+0x38]
0xbd69: mov r9d,dword ptr [rsp+0x98]
0xbd71: mov rdx,qword ptr [rsp+0x30]
0xbd76: mov rsi,qword ptr [rsp+0x70]
0xbd7b: call 0xabb0
0xbd80: add rsp,0x20
0xbd84: mov r15,rax
0xbd87: jmp 0xb789
0xbd8c: movzx eax,byte ptr [rsp+0x7c]
0xbd91: jmp 0xbcac
0xbda3: call 0x2850
0xbf6b: nop qword ptr [rax+rax*1+0x0]
0xbfa0: push r12
0xbfa2: push rbp
0xbfa3: push rbx
0xbfa4: mov rbx,rdi
0xbfa7: call 0x2780
0xbfac: mov r12d,dword ptr [rax]
0xbfaf: mov rbp,rax
0xbfb2: lea rax,[rip+0x20c267]
0xbfb9: test rbx,rbx
0xbfbc: mov esi,0x38
0xbfc1: cmove rbx,rax
0xbfc5: mov rdi,rbx
0xbfc8: call 0xd000
0xbfcd: mov dword ptr [rbp+0x0],r12d
0xbfd1: pop rbx
0xbfd2: pop rbp
0xbfd3: pop r12
0xbfd5: ret
0xbfe0: lea rax,[rip+0x20c239]
0xbfe7: test rdi,rdi
0xbfea: cmove rdi,rax
0xbfee: mov eax,dword ptr [rdi]
0xbff0: ret
0xc000: lea rax,[rip+0x20c219]
0xc007: test rdi,rdi
0xc00a: cmove rdi,rax
0xc00e: mov dword ptr [rdi],esi
0xc010: ret
0xc020: lea rax,[rip+0x20c1f9]
0xc027: test rdi,rdi
0xc02a: mov ecx,esi
0xc02c: cmove rdi,rax
0xc030: mov eax,esi
0xc032: and ecx,0x1f
0xc035: shr al,0x5
0xc038: movzx eax,al
0xc03b: lea rdi,[rdi+rax*4+0x8]
0xc040: mov esi,dword ptr [rdi]
0xc042: mov eax,esi
0xc044: shr eax,cl
0xc046: xor edx,eax
0xc048: and eax,0x1
0xc04b: and edx,0x1
0xc04e: shl edx,cl
0xc050: xor edx,esi
0xc052: mov dword ptr [rdi],edx
0xc054: ret
0xc060: lea rax,[rip+0x20c1b9]
0xc067: test rdi,rdi
0xc06a: cmove rdi,rax
0xc06e: mov eax,dword ptr [rdi+0x4]
0xc071: mov dword ptr [rdi+0x4],esi
0xc074: ret
0xc080: lea rax,[rip+0x20c199]
0xc087: test rdi,rdi
0xc08a: cmove rdi,rax
0xc08e: test rsi,rsi
0xc091: mov [rdi],0xa
0xc097: jz 0xc0a7
0xc099: test rdx,rdx
0xc09c: jz 0xc0a7
0xc09e: mov qword ptr [rdi+0x28],rsi
0xc0a2: mov qword ptr [rdi+0x30],rdx
0xc0a6: ret
0xc0a7: sub rsp,0x8
0xc0ab: call 0x2770
0xc0b0: push r15
0xc0b2: push r14
0xc0b4: lea rax,[rip+0x20c165]
0xc0bb: push r13
0xc0bd: push r12
0xc0bf: mov r13,rdi
0xc0c2: push rbp
0xc0c3: push rbx
0xc0c4: mov rbx,r8
0xc0c7: mov r14,rsi
0xc0ca: mov r15,rdx
0xc0cd: sub rsp,0x18
0xc0d1: test r8,r8
0xc0d4: cmove rbx,rax
0xc0d8: mov qword ptr [rsp+0x8],rcx
0xc0dd: call 0x2780
0xc0e2: mov r12d,dword ptr [rax]
0xc0e5: mov rbp,rax
0xc0e8: lea rax,[rbx+0x8]
0xc0ec: sub rsp,0x8
0xc0f0: mov r9d,dword ptr [rbx+0x4]
0xc0f4: push qword ptr [rbx+0x30]
0xc0f7: mov r8d,dword ptr [rbx]
0xc0fa: push qword ptr [rbx+0x28]
0xc0fd: mov rdx,r15
0xc100: push rax
0xc101: mov rcx,qword ptr [rsp+0x28]
0xc106: mov rsi,r14
0xc109: mov rdi,r13
0xc10c: call 0xabb0
0xc111: mov dword ptr [rbp+0x0],r12d
0xc115: add rsp,0x38
0xc119: pop rbx
0xc11a: pop rbp
0xc11b: pop r12
0xc11d: pop r13
0xc11f: pop r14
0xc121: pop r15
0xc123: ret
0xc130: push r15
0xc132: push r14
0xc134: lea rax,[rip+0x20c0e5]
0xc13b: push r13
0xc13d: push r12
0xc13f: mov r12,rdx
0xc142: push rbp
0xc143: push rbx
0xc144: mov rbx,rcx
0xc147: mov r14,rdi
0xc14a: mov r15,rsi
0xc14d: sub rsp,0x38
0xc151: test rcx,rcx
0xc154: cmove rbx,rax
0xc158: xor ebp,ebp
0xc15a: call 0x2780
0xc15f: test r12,r12
0xc162: mov r13,rax
0xc165: mov eax,dword ptr [rax]
0xc167: setz bpl
0xc16b: or ebp,dword ptr [rbx+0x4]
0xc16e: lea r10,[rbx+0x8]
0xc172: sub rsp,0x8
0xc176: mov r8d,dword ptr [rbx]
0xc179: mov rcx,r15
0xc17c: mov dword ptr [rsp+0x14],eax
0xc180: push qword ptr [rbx+0x30]
0xc183: mov rdx,r14
0xc186: push qword ptr [rbx+0x28]
0xc189: push r10
0xc18b: xor esi,esi
0xc18d: mov r9d,ebp
0xc190: xor edi,edi
0xc192: mov qword ptr [rsp+0x40],r10
0xc197: call 0xabb0
0xc19c: lea rsi,[rax+0x1]
0xc1a0: mov qword ptr [rsp+0x48],rax
0xc1a5: add rsp,0x20
0xc1a9: mov rdi,rsi
0xc1ac: mov qword ptr [rsp+0x18],rsi
0xc1b1: call 0xce00
0xc1b6: mov qword ptr [rsp+0x10],rax
0xc1bb: sub rsp,0x8
0xc1bf: push qword ptr [rbx+0x30]
0xc1c2: push qword ptr [rbx+0x28]
0xc1c5: mov r10,qword ptr [rsp+0x38]
0xc1ca: mov r9d,ebp
0xc1cd: mov r8d,dword ptr [rbx]
0xc1d0: mov rcx,r15
0xc1d3: mov rdx,r14
0xc1d6: mov rdi,rax
0xc1d9: push r10
0xc1db: mov rsi,qword ptr [rsp+0x38]
0xc1e0: call 0xabb0
0xc1e5: mov eax,dword ptr [rsp+0x2c]
0xc1e9: add rsp,0x20
0xc1ed: test r12,r12
0xc1f0: mov dword ptr [r13+0x0],eax
0xc1f4: jz 0xc1ff
0xc1f6: mov r11,qword ptr [rsp+0x28]
0xc1fb: mov qword ptr [r12],r11
0xc1ff: mov rax,qword ptr [rsp+0x10]
0xc204: add rsp,0x38
0xc208: pop rbx
0xc209: pop rbp
0xc20a: pop r12
0xc20c: pop r13
0xc20e: pop r14
0xc210: pop r15
0xc212: ret
0xc220: mov rcx,rdx
0xc223: xor edx,edx
0xc225: jmp 0xc130
0xc230: mov eax,dword ptr [rip+0x20be42]
0xc236: push r12
0xc238: mov r12,qword ptr [rip+0x20be41]
0xc23f: push rbp
0xc240: push rbx
0xc241: cmp eax,0x1
0xc244: jle 0xc271
0xc246: sub eax,0x2
0xc249: lea rbx,[r12+0x18]
0xc24e: shl rax,0x4
0xc252: lea rbp,[r12+rax*1+0x28]
0xc257: nop qword ptr [rax+rax*1+0x0]
0xc260: mov rdi,qword ptr [rbx]
0xc263: add rbx,0x10
0xc267: call 0x2750
0xc26c: cmp rbx,rbp
0xc26f: jnz 0xc260
0xc271: mov rdi,qword ptr [r12+0x8]
0xc276: lea rbx,[rip+0x20bea3]
0xc27d: cmp rdi,rbx
0xc280: jz 0xc299
0xc282: call 0x2750
0xc287: mov [rip+0x20bdfe],0x100
0xc292: mov qword ptr [rip+0x20bdff],rbx
0xc299: lea rbx,[rip+0x20bdf0]
0xc2a0: cmp r12,rbx
0xc2a3: jz 0xc2b4
0xc2a5: mov rdi,r12
0xc2a8: call 0x2750
0xc2ad: mov qword ptr [rip+0x20bdcc],rbx
0xc2b4: pop rbx
0xc2b5: mov [rip+0x20bdb9],0x1
0xc2bf: pop rbp
0xc2c0: pop r12
0xc2c2: ret
0xc2d0: lea rcx,[rip+0x20bf49]
0xc2d7: mov rdx,0xffffffff
0xc2de: jmp 0xbdf0
0xc2f0: lea rcx,[rip+0x20bf29]
0xc2f7: jmp 0xbdf0
0xc300: lea rcx,[rip+0x20bf19]
0xc307: mov rsi,rdi
0xc30a: mov rdx,0xffffffff
0xc311: xor edi,edi
0xc313: jmp 0xbdf0
0xc320: lea rcx,[rip+0x20bef9]
0xc327: mov rdx,rsi
0xc32a: mov rsi,rdi
0xc32d: xor edi,edi
0xc32f: jmp 0xbdf0
0xc3bf: add rsp,0x48
0xc3c3: ret
0xc3c4: call 0x2770
0xc3d0: sub rsp,0x48
0xc3d4: mov rax,rdx
0xc3d7: mov rdx,rcx
0xc3da: mov rcx,0x28
0xc3e3: mov qword ptr [rsp+0x38],rcx
0xc3e8: xor ecx,ecx
0xc3ea: cmp esi,0xa
0xc3ed: jz 0xc450
0xc3ef: mov dword ptr [rsp],esi
0xc3f2: mov rcx,rsp
0xc3f5: mov rsi,rax
0xc3f8: mov [rsp+0x4],0x0
0xc401: mov [rsp+0xc],0x0
0xc40a: mov [rsp+0x14],0x0
0xc413: mov [rsp+0x1c],0x0
0xc41c: mov [rsp+0x24],0x0
0xc425: mov [rsp+0x2c],0x0
0xc42e: mov [rsp+0x34],0x0
0xc436: call 0xbdf0
0xc43b: mov rdx,qword ptr [rsp+0x38]
0xc440: xor rdx,0x28
0xc449: jnz 0xc455
0xc44b: add rsp,0x48
0xc44f: ret
0xc450: call 0x2770
0xc455: call 0x2850
0xc460: mov rdx,rsi
0xc463: mov esi,edi
0xc465: xor edi,edi
0xc467: jmp 0xc340
0xc470: mov rcx,rdx
0xc473: mov rdx,rsi
0xc476: mov esi,edi
0xc478: xor edi,edi
0xc47a: jmp 0xc3d0
0xc480: sub rsp,0x48
0xc484: mov ecx,edx
0xc486: mov rax,0x28
0xc48f: mov qword ptr [rsp+0x38],rax
0xc494: xor eax,eax
0xc496: mov rax,qword ptr [rip+0x20bdb3]
0xc49d: mov r8,rsp
0xc4a0: and ecx,0x1f
0xc4a3: movdqa xmm0,[rip+0x20bd75]
0xc4ab: mov qword ptr [rsp+0x30],rax
0xc4b0: mov eax,edx
0xc4b2: movaps [rsp],xmm0
0xc4b6: shr al,0x5
0xc4b9: movzx eax,al
0xc4bc: lea r9,[r8+rax*4+0x8]
0xc4c1: movdqa xmm0,[rip+0x20bd67]
0xc4c9: movaps [rsp+0x10],xmm0
0xc4ce: movdqa xmm0,[rip+0x20bd6a]
0xc4d6: movaps [rsp+0x20],xmm0
0xc4db: mov edx,dword ptr [r9]
0xc4de: mov eax,edx
0xc4e0: shr eax,cl
0xc4e2: not eax
0xc4e4: and eax,0x1
0xc4e7: shl eax,cl
0xc4e9: mov rcx,r8
0xc4ec: xor eax,edx
0xc4ee: mov rdx,rsi
0xc4f1: mov rsi,rdi
0xc4f4: mov dword ptr [r9],eax
0xc4f7: xor edi,edi
0xc4f9: call 0xbdf0
0xc4fe: mov rsi,qword ptr [rsp+0x38]
0xc503: xor rsi,0x28
0xc50c: jnz 0xc513
0xc50e: add rsp,0x48
0xc512: ret
0xc513: call 0x2850
0xc520: movsx edx,sil
0xc524: mov rsi,0xffffffff
0xc52b: jmp 0xc480
0xc530: mov edx,0x3a
0xc535: mov rsi,0xffffffff
0xc53c: jmp 0xc480
0xc550: mov edx,0x3a
0xc555: jmp 0xc480
0xc5df: add rsp,0x48
0xc5e3: ret
0xc5e4: call 0x2770
0xc5f0: sub rsp,0x48
0xc5f4: mov r9,rcx
0xc5f7: mov rcx,qword ptr [rip+0x20bc52]
0xc5fe: movdqa xmm0,[rip+0x20bc1a]
0xc606: mov rax,0x28
0xc60f: mov qword ptr [rsp+0x38],rax
0xc614: xor eax,eax
0xc616: movaps [rsp],xmm0
0xc61a: test rsi,rsi
0xc61d: mov qword ptr [rsp+0x30],rcx
0xc622: mov [rsp],0xa
0xc629: movdqa xmm0,[rip+0x20bbff]
0xc631: movaps [rsp+0x10],xmm0
0xc636: movdqa xmm0,[rip+0x20bc02]
0xc63e: movaps [rsp+0x20],xmm0
0xc643: jz 0xc677
0xc645: test rdx,rdx
0xc648: jz 0xc677
0xc64a: mov qword ptr [rsp+0x28],rsi
0xc64f: mov qword ptr [rsp+0x30],rdx
0xc654: mov rcx,rsp
0xc657: mov rdx,r8
0xc65a: mov rsi,r9
0xc65d: call 0xbdf0
0xc662: mov rdi,qword ptr [rsp+0x38]
0xc667: xor rdi,0x28
0xc670: jnz 0xc67c
0xc672: add rsp,0x48
0xc676: ret
0xc677: call 0x2770
0xc67c: call 0x2850
0xc690: mov r8,0xffffffff
0xc697: jmp 0xc5f0
0xc6a0: mov rcx,rdx
0xc6a3: mov r8,0xffffffff
0xc6aa: mov rdx,rsi
0xc6ad: mov rsi,rdi
0xc6b0: xor edi,edi
0xc6b2: jmp 0xc5f0
0xc6c0: mov r8,rcx
0xc6c3: mov rcx,rdx
0xc6c6: mov rdx,rsi
0xc6c9: mov rsi,rdi
0xc6cc: xor edi,edi
0xc6ce: jmp 0xc5f0
0xc6e0: lea rcx,[rip+0x20b959]
0xc6e7: jmp 0xbdf0
0xc6f0: lea rcx,[rip+0x20b949]
0xc6f7: mov rdx,rsi
0xc6fa: mov rsi,rdi
0xc6fd: xor edi,edi
0xc6ff: jmp 0xbdf0
0xc7d4: call 0x2850
0xc886: nop qword ptr [rax+rax*1+0x0]
0xc915: nop qword ptr [rax]
0xc918: mov r8,rcx
0xc91b: mov rcx,rdx
0xc91e: lea rdx,[rip+0x802f]
0xc925: mov esi,0x1
0xc92a: xor eax,eax
0xc92c: call 0x2b00
0xc931: jmp 0xc81c
0xc936: nop qword ptr [rax+rax*1+0x0]
0xc995: nop qword ptr [rax]
0xc9d1: nop qword ptr [rax+0x0]
0xca18: nop qword ptr [rax+rax*1+0x0]
0xca67: nop qword ptr [rax+rax*1+0x0]
0xcac4: nop qword ptr [rax+0x0]
0xcaf2: nop qword ptr [rax+rax*1+0x0]
0xcba6: nop qword ptr [rax+rax*1+0x0]
0xcc00: xor r9d,r9d
0xcc03: cmp [r8],0x0
0xcc07: jz 0xcc1b
0xcc09: nop qword ptr [rax+0x0]
0xcc10: add r9,0x1
0xcc14: cmp [r8+r9*8+0x0],0x0
0xcc19: jnz 0xcc10
0xcc1b: jmp 0xc7e0
0xcc20: sub rsp,0x68
0xcc24: mov r10,r8
0xcc27: xor r9d,r9d
0xcc2a: mov rax,0x28
0xcc33: mov qword ptr [rsp+0x58],rax
0xcc38: xor eax,eax
0xcc3a: mov r8,rsp
0xcc3d: nop qword ptr [rax]
0xcc40: mov eax,dword ptr [r10]
0xcc43: cmp eax,0x2f
0xcc46: jnbe 0xcc8a
0xcc48: mov r11d,eax
0xcc4b: add r11,qword ptr [r10+0x10]
0xcc4f: add eax,0x8
0xcc52: mov dword ptr [r10],eax
0xcc55: mov rax,qword ptr [r11]
0xcc58: test rax,rax
0xcc5b: mov qword ptr [r8+r9*8+0x0],rax
0xcc5f: jz 0xcc6b
0xcc61: add r9,0x1
0xcc65: cmp r9,0xa
0xcc69: jnz 0xcc40
0xcc6b: call 0xc7e0
0xcc70: mov rax,qword ptr [rsp+0x58]
0xcc75: xor rax,0x28
0xcc7e: jnz 0xcc85
0xcc80: add rsp,0x68
0xcc84: ret
0xcc85: call 0x2850
0xcc8a: mov r11,qword ptr [r10+0x8]
0xcc8e: lea rax,[r11+0x8]
0xcc92: mov qword ptr [r10+0x8],rax
0xcc96: jmp 0xcc55
0xcd60: call 0x2850
0xcd6c: mov rax,rbx
0xcd6f: add rbx,0x8
0xcd73: jmp 0xcd26
0xcd80: push rbx
0xcd81: lea rsi,[rip+0x7c1a]
0xcd88: mov edx,0x5
0xcd8d: xor edi,edi
0xcd8f: call 0x2820
0xcd94: lea rdx,[rip+0x7c1c]
0xcd9b: mov rsi,rax
0xcd9e: mov edi,0x1
0xcda3: xor eax,eax
0xcda5: call 0x2a60
0xcdaa: lea rsi,[rip+0x7c1c]
0xcdb1: mov edx,0x5
0xcdb6: xor edi,edi
0xcdb8: call 0x2820
0xcdbd: lea rcx,[rip+0x5c8c]
0xcdc4: lea rdx,[rip+0x4927]
0xcdcb: mov rsi,rax
0xcdce: mov edi,0x1
0xcdd3: xor eax,eax
0xcdd5: call 0x2a60
0xcdda: mov rbx,qword ptr [rip+0x20b2c7]
0xcde1: lea rsi,[rip+0x7e18]
0xcde8: xor edi,edi
0xcdea: mov edx,0x5
0xcdef: call 0x2820
0xcdf4: mov rsi,rbx
0xcdf7: mov rdi,rax
0xcdfa: pop rbx
0xcdfb: jmp 0x2920
0xce20: mov rax,rdi
0xce23: mul rsi
0xce26: mov rdi,rax
0xce29: seto al
0xce2c: test rdi,rdi
0xce2f: js 0xce3b
0xce31: movzx eax,al
0xce34: test rax,rax
0xce37: jnz 0xce3b
0xce39: jmp 0xce00
0xce3b: sub rsp,0x8
0xce3f: call 0xd050
0xce82: nop qword ptr [rax+rax*1+0x0]
0xcea0: mov rax,rsi
0xcea3: mul rdx
0xcea6: mov rsi,rax
0xcea9: seto al
0xceac: test rsi,rsi
0xceaf: js 0xcebb
0xceb1: movzx eax,al
0xceb4: test rax,rax
0xceb7: jnz 0xcebb
0xceb9: jmp 0xce60
0xcebb: sub rsp,0x8
0xcebf: call 0xd050
0xced0: test rdi,rdi
0xced3: mov r9,rdx
0xced6: mov rcx,qword ptr [rsi]
0xced9: jz 0xcf10
0xcedb: xor edx,edx
0xcedd: mov rax,0x6148914691236517204
0xcee7: div r9
0xceea: cmp rax,rcx
0xceed: jbe 0xcf2b
0xceef: mov rax,rcx
0xcef2: shr rax,0x1
0xcef5: lea rcx,[rax+rcx*1+0x1]
0xcefa: mov qword ptr [rsi],rcx
0xcefd: imul rcx,r9
0xcf01: mov rsi,rcx
0xcf04: jmp 0xce60
0xcf09: nop qword ptr [rax+0x0]
0xcf10: test rcx,rcx
0xcf13: jz 0xcf38
0xcf15: mov rax,rcx
0xcf18: mul r9
0xcf1b: seto dl
0xcf1e: test rax,rax
0xcf21: movzx edx,dl
0xcf24: js 0xcf2b
0xcf26: test rdx,rdx
0xcf29: jz 0xcefa
0xcf2b: sub rsp,0x8
0xcf2f: call 0xd050
0xcf34: nop qword ptr [rax+0x0]
0xcf38: xor edx,edx
0xcf3a: mov eax,0x80
0xcf3f: xor r8d,r8d
0xcf42: div r9
0xcf45: test rax,rax
0xcf48: setz r8b
0xcf4c: lea rcx,[r8+rax*1+0x0]
0xcf50: jmp 0xcf15
0xcf60: test rdi,rdi
0xcf63: mov rax,qword ptr [rsi]
0xcf66: jz 0xcf90
0xcf68: mov rdx,0x6148914691236517203
0xcf72: cmp rax,rdx
0xcf75: jnbe 0xcfa1
0xcf77: mov rdx,rax
0xcf7a: shr rdx,0x1
0xcf7d: lea rax,[rdx+rax*1+0x1]
0xcf82: mov qword ptr [rsi],rax
0xcf85: mov rsi,rax
0xcf88: jmp 0xce60
0xcf8d: nop qword ptr [rax]
0xcf90: test rax,rax
0xcf93: mov edx,0x80
0xcf98: cmove rax,rdx
0xcf9c: test rax,rax
0xcf9f: jns 0xcf82
0xcfa1: sub rsp,0x8
0xcfa5: call 0xd050
0xcfb0: push rbx
0xcfb1: mov rbx,rdi
0xcfb4: call 0xce00
0xcfb9: mov rdx,rbx
0xcfbc: xor esi,esi
0xcfbe: mov rdi,rax
0xcfc1: pop rbx
0xcfc2: jmp 0x28f0
0xcfd0: mov rax,rdi
0xcfd3: sub rsp,0x8
0xcfd7: mul rsi
0xcfda: seto dl
0xcfdd: test rax,rax
0xcfe0: js 0xcff9
0xcfe2: movzx edx,dl
0xcfe5: test rdx,rdx
0xcfe8: jnz 0xcff9
0xcfea: call 0x2930
0xcfef: test rax,rax
0xcff2: jz 0xcff9
0xcff4: add rsp,0x8
0xcff8: ret
0xcff9: call 0xd050
0xd000: push rbp
0xd001: push rbx
0xd002: mov rbp,rdi
0xd005: mov rdi,rsi
0xd008: mov rbx,rsi
0xd00b: sub rsp,0x8
0xd00f: call 0xce00
0xd014: add rsp,0x8
0xd018: mov rdx,rbx
0xd01b: mov rsi,rbp
0xd01e: pop rbx
0xd01f: pop rbp
0xd020: mov rdi,rax
0xd023: jmp 0x2970
0xd030: push rbx
0xd031: mov rbx,rdi
0xd034: call 0x2840
0xd039: mov rdi,rbx
0xd03c: lea rsi,[rax+0x1]
0xd040: pop rbx
0xd041: jmp 0xd000
0xd080: call 0x2770
0xd0d5: nop qword ptr [rax]
0xd133: nop qword ptr [rax+rax*1+0x0]
0xd15f: nop 
0xd22e: call 0x2850
0xd259: nop qword ptr [rax+0x0]
0xd292: nop qword ptr [rax+rax*1+0x0]
0xd2ec: nop qword ptr [rax+0x0]
0xd363: nop qword ptr [rax+rax*1+0x0]
0xd429: nop qword ptr [rax+0x0]
0xd44f: nop 
0xd499: nop qword ptr [rax+0x0]
0xd4af: nop 
0xd559: nop qword ptr [rax+0x0]
0xd582: nop qword ptr [rax+rax*1+0x0]
0xd5a4: nop qword ptr [rax+0x0]
0xd618: nop qword ptr [rax+rax*1+0x0]
0xd63b: nop qword ptr [rax+rax*1+0x0]
0xd70b: nop qword ptr [rax+rax*1+0x0]
0xd788: nop qword ptr [rax+rax*1+0x0]
0xd79d: nop qword ptr [rax]
0xd807: test rax,rax
0xd80a: mov rbx,qword ptr [rsp+0x8]
0xd80f: jz 0xd89e
0xd815: mov rcx,r13
0xd818: mov rdx,rbx
0xd81b: mov esi,0x1
0xd820: mov rdi,rax
0xd823: mov rbp,rax
0xd826: call 0x2af0
0xd82b: cmp rax,rbx
0xd82e: jb 0xd870
0xd830: cmp rbp,r12
0xd833: jz 0xd83d
0xd835: mov rdi,rbp
0xd838: call 0x2750
0xd83d: cmp rbx,0x7fffffff
0xd844: jnbe 0xd893
0xd846: mov rcx,qword ptr [rsp+0x7e8]
0xd84e: xor rcx,0x28
0xd857: mov eax,ebx
0xd859: jnz 0xd8ad
0xd85b: add rsp,0x7f8
0xd862: pop rbx
0xd863: pop rbp
0xd864: pop r12
0xd866: pop r13
0xd868: ret
0xd869: nop qword ptr [rax+0x0]
0xd870: cmp rbp,r12
0xd873: mov ebx,0xffffffff
0xd878: jz 0xd846
0xd87a: call 0x2780
0xd87f: mov r13d,dword ptr [rax]
0xd882: mov r12,rax
0xd885: mov rdi,rbp
0xd888: call 0x2750
0xd88d: mov dword ptr [r12],r13d
0xd891: jmp 0xd846
0xd893: call 0x2780
0xd898: mov [rax],0x4b
0xd89e: mov rdi,r13
0xd8a1: mov ebx,0xffffffff
0xd8a6: call 0xf590
0xd8ab: jmp 0xd846
0xd8ad: call 0x2850
0xd8c0: push r12
0xd8c2: push rbp
0xd8c3: mov rbp,rdi
0xd8c6: push rbx
0xd8c7: call 0x27c0
0xd8cc: mov ebx,dword ptr [rbp+0x0]
0xd8cf: mov rdi,rbp
0xd8d2: mov r12,rax
0xd8d5: call 0xd090
0xd8da: and ebx,0x20
0xd8dd: test ebx,ebx
0xd8df: jnz 0xd8f8
0xd8e1: test eax,eax
0xd8e3: jz 0xd8ef
0xd8e5: test r12,r12
0xd8e8: mov eax,0xffffffff
0xd8ed: jz 0xd928
0xd8ef: pop rbx
0xd8f0: pop rbp
0xd8f1: pop r12
0xd8f3: ret
0xd8f4: nop qword ptr [rax+0x0]
0xd8f8: test eax,eax
0xd8fa: jnz 0xd918
0xd8fc: call 0x2780
0xd901: mov [rax],0x0
0xd907: mov eax,0xffffffff
0xd90c: pop rbx
0xd90d: pop rbp
0xd90e: pop r12
0xd910: ret
0xd911: nop qword ptr [rax+0x0]
0xd918: pop rbx
0xd919: mov eax,0xffffffff
0xd91e: pop rbp
0xd91f: pop r12
0xd921: ret
0xd922: nop qword ptr [rax+rax*1+0x0]
0xd928: call 0x2780
0xd92d: cmp [rax],0x9
0xd930: pop rbx
0xd931: pop rbp
0xd932: pop r12
0xd934: setnz al
0xd937: movzx eax,al
0xd93a: neg eax
0xd93c: ret
0xd97a: nop qword ptr [rax+rax*1+0x0]
0xd9c6: nop qword ptr [rax+rax*1+0x0]
0xd9e0: test rdx,rdx
0xd9e3: push r12
0xd9e5: push rbp
0xd9e6: mov rbp,rdi
0xd9e9: push rbx
0xd9ea: jz 0xda19
0xd9ec: mov r12,rsi
0xd9ef: lea rbx,[rdx-0x1]
0xd9f3: call 0x2b30
0xd9f8: nop qword ptr [rax+rax*1+0x0]
0xda00: movzx ecx,byte ptr [r12+rbx*1+0x0]
0xda05: mov rdx,qword ptr [rax]
0xda08: mov edx,dword ptr [rdx+rcx*4+0x0]
0xda0b: mov byte ptr [rbp+rbx*1+0x0],dl
0xda0f: sub rbx,0x1
0xda13: cmp rbx,0xffffffff
0xda17: jnz 0xda00
0xda19: mov rax,rbp
0xda1c: pop rbx
0xda1d: pop rbp
0xda1e: pop r12
0xda20: ret
0xda30: test rdx,rdx
0xda33: push r12
0xda35: push rbp
0xda36: mov rbp,rdi
0xda39: push rbx
0xda3a: jz 0xda69
0xda3c: mov r12,rsi
0xda3f: lea rbx,[rdx-0x1]
0xda43: call 0x2720
0xda48: nop qword ptr [rax+rax*1+0x0]
0xda50: movzx ecx,byte ptr [r12+rbx*1+0x0]
0xda55: mov rdx,qword ptr [rax]
0xda58: mov edx,dword ptr [rdx+rcx*4+0x0]
0xda5b: mov byte ptr [rbp+rbx*1+0x0],dl
0xda5f: sub rbx,0x1
0xda63: cmp rbx,0xffffffff
0xda67: jnz 0xda50
0xda69: mov rax,rbp
0xda6c: pop rbx
0xda6d: pop rbp
0xda6e: pop r12
0xda70: ret
0xdb7b: nop qword ptr [rax+rax*1+0x0]
0xdb80: test rbp,rbp
0xdb83: jz 0xdbac
0xdb85: cmp r10d,0x1
0xdb89: jle 0xdba2
0xdb8b: lea r15,[r10-0x1]
0xdb8f: mov rdi,rbp
0xdb92: mov esi,0x20
0xdb97: mov rdx,r15
0xdb9a: add rbp,r15
0xdb9d: call 0x28f0
0xdba2: movzx eax,byte ptr [rbx]
0xdba5: add rbp,0x1
0xdba9: mov byte ptr [rbp-0x1],al
0xdbac: add r14,r12
0xdbaf: mov r12,rbx
0xdbb2: movzx eax,byte ptr [r12+0x1]
0xdbb8: lea rbx,[r12+0x1]
0xdbbd: mov r10,0xffffffff
0xdbc4: test al,al
0xdbc6: jnz 0xdb1e
0xdbcc: test rbp,rbp
0xdbcf: jz 0xdb4f
0xdbd5: cmp [rsp+0x8],0x0
0xdbdb: jz 0xdb4f
0xdbe1: mov [rbp+0x0],0x0
0xdbe5: jmp 0xdb4f
0xdbea: nop qword ptr [rax+rax*1+0x0]
0xdc01: nop qword ptr [rax+0x0]
0xdc08: movzx eax,byte ptr [rsp+0x2b]
0xdc0d: xor r8d,r8d
0xdc10: xor r15d,r15d
0xdc13: mov edx,0x1
0xdc18: mov byte ptr [rsp+0x30],al
0xdc1c: add rbx,0x1
0xdc20: movsx eax,byte ptr [rbx]
0xdc23: lea ecx,[rax-0x23]
0xdc26: mov esi,eax
0xdc28: mov r9d,eax
0xdc2b: cmp cl,0x3c
0xdc2e: jnbe 0xdc5c
0xdc30: mov rdi,rdx
0xdc33: mov r11,0x1152921504606856448
0xdc3d: shl rdi,cl
0xdc40: test rdi,r11
0xdc43: jnz 0xdcb0
0xdc45: test cl,cl
0xdc47: jz 0xdcc0
0xdc49: mov rcx,0x576460752303423488
0xdc53: test rdi,rcx
0xdc56: jnz 0xddb0
0xdc5c: lea edx,[rax-0x30]
0xdc5f: cmp edx,0x9
0xdc62: jbe 0xddc0
0xdc68: cmp sil,0x45
0xdc6c: jz 0xdc98
0xdc6e: xor r11d,r11d
0xdc71: cmp sil,0x4f
0xdc75: jz 0xdc98
0xdc77: cmp sil,0x7a
0xdc7b: jnbe 0xdcd0
0xdc7d: lea rdx,[rip+0x7048]
0xdc84: movzx eax,sil
0xdc88: movsxd rax,dword ptr [rdx+rax*4+0x0]
0xdc8c: add rax,rdx
0xdc8f: jmp rax
0xdc91: nop qword ptr [rax+0x0]
0xdc98: movsx r9d,byte ptr [rbx+0x1]
0xdc9d: mov r11d,eax
0xdca0: add rbx,0x1
0xdca4: mov esi,r9d
0xdca7: jmp 0xdc77
0xdca9: nop qword ptr [rax+0x0]
0xdcb0: mov r15d,eax
0xdcb3: jmp 0xdc1c
0xdcb8: nop qword ptr [rax+rax*1+0x0]
0xdcc0: mov r8d,0x1
0xdcc6: jmp 0xdc1c
0xdccb: mov rbx,r9
0xdcce: nop 
0xdcd0: lea rax,[rbx-0x1]
0xdcd4: mov r8d,0x1
0xdcda: mov r9,rax
0xdcdd: lea rax,[rax-0x1]
0xdce1: add r8d,0x1
0xdce5: cmp [rax+0x1],0x25
0xdce9: jnz 0xdcda
0xdceb: mov rdx,qword ptr [rsp+0x8]
0xdcf0: mov eax,0x0
0xdcf5: movsxd r8,r8d
0xdcf8: mov rcx,r8
0xdcfb: mov r12,rbx
0xdcfe: sub rdx,r14
0xdd01: test r10d,r10d
0xdd04: cmovns eax,r10d
0xdd08: cwde 
0xdd0a: cmp rax,r8
0xdd0d: cmovnb rcx,rax
0xdd11: cmp rcx,rdx
0xdd14: jnb 0xdb4c
0xdd1a: test rbp,rbp
0xdd1d: jz 0xdda5
0xdd23: cmp rax,r8
0xdd26: jbe 0xdd75
0xdd28: movsxd rdx,r10d
0xdd2b: mov qword ptr [rsp+0x48],r8
0xdd30: mov qword ptr [rsp+0x40],rcx
0xdd35: sub rdx,r8
0xdd38: cmp r15d,0x30
0xdd3c: mov qword ptr [rsp+0x38],r9
0xdd41: lea rbx,[rbp+rdx*1+0x0]
0xdd46: jz 0xefb6
0xdd4c: cmp r15d,0x2b
0xdd50: jz 0xefb6
0xdd56: mov rdi,rbp
0xdd59: mov esi,0x20
0xdd5e: mov rbp,rbx
0xdd61: call 0x28f0
0xdd66: mov r8,qword ptr [rsp+0x48]
0xdd6b: mov rcx,qword ptr [rsp+0x40]
0xdd70: mov r9,qword ptr [rsp+0x38]
0xdd75: cmp [rsp+0x30],0x0
0xdd7a: mov qword ptr [rsp+0x38],rcx
0xdd7f: mov rdx,r8
0xdd82: mov qword ptr [rsp+0x30],r8
0xdd87: mov rsi,r9
0xdd8a: mov rdi,rbp
0xdd8d: jz 0xef60
0xdd93: call 0xda30
0xdd98: mov r8,qword ptr [rsp+0x30]
0xdd9d: mov rcx,qword ptr [rsp+0x38]
0xdda2: add rbp,r8
0xdda5: add r14,rcx
0xdda8: jmp 0xdbb2
0xddad: nop qword ptr [rax]
0xddb0: mov [rsp+0x30],0x1
0xddb5: jmp 0xdc1c
0xddba: nop qword ptr [rax+rax*1+0x0]
0xddc0: xor r10d,r10d
0xddc3: movsx eax,byte ptr [rbx+0x1]
0xddc7: cmp r10d,0xccccccc
0xddce: lea rcx,[rbx+0x1]
0xddd2: mov esi,eax
0xddd4: lea edx,[rax-0x30]
0xddd7: jnle 0xde06
0xddd9: movsx edi,byte ptr [rbx]
0xdddc: jz 0xde00
0xddde: lea r9d,[r10+r10*4+0x0]
0xdde2: mov rbx,rcx
0xdde5: lea r10d,[rdi+r9*2-0x30]
0xddea: cmp edx,0x9
0xdded: jbe 0xddc3
0xddef: mov r9d,eax
0xddf2: jmp 0xdc68
0xddf7: nop qword ptr [rax+rax*1+0x0]
0xde00: cmp dil,0x37
0xde04: jle 0xddde
0xde06: cmp edx,0x9
0xde09: jnbe 0xde20
0xde0b: movsx eax,byte ptr [rbx+0x2]
0xde0f: mov r10d,0x7fffffff
0xde15: add rbx,0x2
0xde19: mov esi,eax
0xde1b: lea edx,[rax-0x30]
0xde1e: jmp 0xddea
0xde20: mov r9d,eax
0xde23: mov rbx,rcx
0xde26: mov r10d,0x7fffffff
0xde2c: jmp 0xdc68
0xde31: nop qword ptr [rax+0x0]
0xde38: cmp r11d,0x4f
0xde3c: jz 0xdcd0
0xde42: xor r8d,r8d
0xde45: mov eax,0x2520
0xde4a: test r11d,r11d
0xde4d: mov word ptr [rsp+0xab],ax
0xde55: jnz 0xf52b
0xde5b: lea rdx,[rsp+0xab]
0xde63: mov r12,rbx
0xde66: lea rax,[rdx+0x2]
0xde6a: lea r9,[rsp+0xb0]
0xde72: mov byte ptr [rax],sil
0xde75: mov [rax+0x1],0x0
0xde79: mov rcx,r13
0xde7c: mov esi,0x400
0xde81: mov dword ptr [rsp+0x38],r10d
0xde86: mov rdi,r9
0xde89: mov byte ptr [rsp+0x50],r8b
0xde8e: mov dword ptr [rsp+0x48],r11d
0xde93: mov qword ptr [rsp+0x40],r9
0xde98: call 0x2a80
0xde9d: test rax,rax
0xdea0: jz 0xdbb2
0xdea6: movsxd r10,dword ptr [rsp+0x38]
0xdeab: lea rcx,[rax-0x1]
0xdeaf: mov rdx,qword ptr [rsp+0x8]
0xdeb4: mov eax,0x0
0xdeb9: test r10d,r10d
0xdebc: cmovns rax,r10
0xdec0: cmp rcx,rax
0xdec3: mov rbx,rax
0xdec6: cmovnb rbx,rcx
0xdeca: sub rdx,r14
0xdecd: cmp rdx,rbx
0xded0: jbe 0xdb4c
0xded6: test rbp,rbp
0xded9: jz 0xdf7e
0xdedf: mov r11d,dword ptr [rsp+0x48]
0xdee4: mov r9,qword ptr [rsp+0x40]
0xdee9: movzx r8d,byte ptr [rsp+0x50]
0xdeef: test r11d,r11d
0xdef2: jnz 0xdf4e
0xdef4: cmp rcx,rax
0xdef7: jnb 0xdf4e
0xdef9: movsxd rdx,r10d
0xdefc: mov qword ptr [rsp+0x50],r9
0xdf01: mov qword ptr [rsp+0x48],rcx
0xdf06: sub rdx,rcx
0xdf09: cmp r15d,0x30
0xdf0d: mov byte ptr [rsp+0x40],r8b
0xdf12: lea rax,[rbp+rdx*1+0x0]
0xdf17: mov qword ptr [rsp+0x38],rax
0xdf1c: jz 0xef8f
0xdf22: cmp r15d,0x2b
0xdf26: jz 0xef8f
0xdf2c: mov rdi,rbp
0xdf2f: mov esi,0x20
0xdf34: call 0x28f0
0xdf39: movzx r8d,byte ptr [rsp+0x40]
0xdf3f: mov rbp,qword ptr [rsp+0x38]
0xdf44: mov r9,qword ptr [rsp+0x50]
0xdf49: mov rcx,qword ptr [rsp+0x48]
0xdf4e: test r8b,r8b
0xdf51: lea rsi,[r9+0x1]
0xdf55: mov rdx,rcx
0xdf58: jnz 0xef78
0xdf5e: cmp [rsp+0x30],0x0
0xdf63: mov rdi,rbp
0xdf66: mov qword ptr [rsp+0x30],rcx
0xdf6b: jz 0xe7e1
0xdf71: call 0xda30
0xdf76: mov rcx,qword ptr [rsp+0x30]
0xdf7b: add rbp,rcx
0xdf7e: add r14,rbx
0xdf81: jmp 0xdbb2
0xdf86: test r11d,r11d
0xdf89: jnz 0xdcd0
0xdf8f: movzx eax,byte ptr [rsp+0x30]
0xdf94: test r8b,r8b
0xdf97: lea rdx,[rsp+0xab]
0xdf9f: mov r12,rbx
0xdfa2: cmovne eax,r8d
0xdfa6: xor r8d,r8d
0xdfa9: xor r11d,r11d
0xdfac: mov byte ptr [rsp+0x30],al
0xdfb0: mov eax,0x2520
0xdfb5: mov word ptr [rsp+0xab],ax
0xdfbd: lea rax,[rdx+0x2]
0xdfc1: jmp 0xde6a
0xdfc6: cmp r11d,0x45
0xdfca: jz 0xdcd0
0xdfd0: mov ecx,dword ptr [r13+0x0]
0xdfd4: mov edi,0x2
0xdfd9: nop qword ptr [rax+0x0]
0xdfe0: mov eax,ecx
0xdfe2: xor esi,esi
0xdfe4: mov [rsp+0x40],0x0
0xdfe9: shr eax,0x1f
0xdfec: mov dword ptr [rsp+0x38],eax
0xdff0: mov eax,ecx
0xdff2: not eax
0xdff4: shr eax,0x1f
0xdff7: cmp r11d,0x4f
0xdffb: jnz 0xee80
0xe001: test al,al
0xe003: jz 0xee80
0xe009: mov esi,r9d
0xe00c: mov edx,0x2520
0xe011: xor r8d,r8d
0xe014: mov word ptr [rsp+0xab],dx
0xe01c: lea rdx,[rsp+0xab]
0xe024: mov byte ptr [rsp+0xad],r11b
0xe02c: mov r12,rbx
0xe02f: mov r11d,edi
0xe032: lea rax,[rdx+0x3]
0xe036: jmp 0xde6a
0xe03b: test r10d,r10d
0xe03e: mov ecx,0x0
0xe043: mov eax,0x1
0xe048: cmovns ecx,r10d
0xe04c: movsxd rcx,ecx
0xe04f: test rcx,rcx
0xe052: cmove rcx,rax
0xe056: mov rax,qword ptr [rsp+0x8]
0xe05b: sub rax,r14
0xe05e: cmp rax,rcx
0xe061: jbe 0xdb4c
0xe067: test rbp,rbp
0xe06a: jz 0xe0b8
0xe06c: cmp r10d,0x1
0xe070: jle 0xe0ac
0xe072: movsxd rdx,r10d
0xe075: mov qword ptr [rsp+0x30],rcx
0xe07a: sub rdx,0x1
0xe07e: cmp r15d,0x30
0xe082: lea r12,[rbp+rdx*1+0x0]
0xe087: jz 0xf3a4
0xe08d: cmp r15d,0x2b
0xe091: jz 0xf3a4
0xe097: mov rdi,rbp
0xe09a: mov esi,0x20
0xe09f: mov rbp,r12
0xe0a2: call 0x28f0
0xe0a7: mov rcx,qword ptr [rsp+0x30]
0xe0ac: mov [rbp+0x0],0x9
0xe0b0: add rbp,0x1
0xe0b4: nop qword ptr [rax+0x0]
0xe0b8: add r14,rcx
0xe0bb: mov r12,rbx
0xe0be: jmp 0xdbb2
0xe0c3: mov eax,0x1
0xe0c8: test r8b,r8b
0xe0cb: jnz 0xeffb
0xe0d1: mov r8d,eax
0xe0d4: mov esi,0x70
0xe0d9: jmp 0xde45
0xe0de: lea rax,[rip+0x4d11]
0xe0e5: mov [rsp+0x38],0xffffffff
0xe0ed: mov qword ptr [rsp+0x40],rax
0xe0f2: movzx r8d,byte ptr [rsp+0x30]
0xe0f8: mov eax,dword ptr [rsp+0x518]
0xe0ff: mov rsi,0xffffffff
0xe106: mov dword ptr [rsp+0x48],r10d
0xe10b: xor edi,edi
0xe10d: mov r9d,r15d
0xe110: mov rcx,r13
0xe113: mov dword ptr [rsp+0x30],r8d
0xe118: push rax
0xe119: push qword ptr [rsp+0x18]
0xe11d: push qword ptr [rsp+0x28]
0xe121: mov eax,dword ptr [rsp+0x50]
0xe125: push rax
0xe126: mov rdx,qword ptr [rsp+0x60]
0xe12b: call 0xda80
0xe130: add rsp,0x20
0xe134: movsxd r10,dword ptr [rsp+0x48]
0xe139: mov r11,rax
0xe13c: mov rsi,qword ptr [rsp+0x8]
0xe141: mov eax,0x0
0xe146: test r10d,r10d
0xe149: cmovns rax,r10
0xe14d: cmp r11,rax
0xe150: mov r12,rax
0xe153: cmovnb r12,r11
0xe157: sub rsi,r14
0xe15a: cmp rsi,r12
0xe15d: mov qword ptr [rsp+0x48],rsi
0xe162: jbe 0xdb4c
0xe168: test rbp,rbp
0xe16b: jz 0xdbac
0xe171: cmp r11,rax
0xe174: jnb 0xe1b6
0xe176: movsxd rdx,r10d
0xe179: mov qword ptr [rsp+0x58],r11
0xe17e: sub rdx,r11
0xe181: cmp r15d,0x30
0xe185: lea rax,[rbp+rdx*1+0x0]
0xe18a: mov qword ptr [rsp+0x50],rax
0xe18f: jz 0xf28c
0xe195: cmp r15d,0x2b
0xe199: jz 0xf28c
0xe19f: mov rdi,rbp
0xe1a2: mov esi,0x20
0xe1a7: call 0x28f0
0xe1ac: mov rbp,qword ptr [rsp+0x50]
0xe1b1: mov r11,qword ptr [rsp+0x58]
0xe1b6: mov eax,dword ptr [rsp+0x518]
0xe1bd: mov qword ptr [rsp+0x50],r11
0xe1c2: mov rdi,rbp
0xe1c5: mov r9d,r15d
0xe1c8: mov rcx,r13
0xe1cb: push rax
0xe1cc: push qword ptr [rsp+0x18]
0xe1d0: push qword ptr [rsp+0x28]
0xe1d4: mov eax,dword ptr [rsp+0x50]
0xe1d8: push rax
0xe1d9: mov r8d,dword ptr [rsp+0x50]
0xe1de: mov rdx,qword ptr [rsp+0x60]
0xe1e3: mov rsi,qword ptr [rsp+0x68]
0xe1e8: call 0xda80
0xe1ed: mov r11,qword ptr [rsp+0x70]
0xe1f2: add rsp,0x20
0xe1f6: add rbp,r11
0xe1f9: jmp 0xdbac
0xe1fe: mov rdx,qword ptr [rsp+0x8]
0xe203: mov eax,0x0
0xe208: mov ecx,0x1
0xe20d: sub rdx,r14
0xe210: test r10d,r10d
0xe213: cmovns eax,r10d
0xe217: cwde 
0xe219: test rax,rax
0xe21c: cmovne rcx,rax
0xe220: test r11d,r11d
0xe223: jnz 0xf258
0xe229: cmp rcx,rdx
0xe22c: jnb 0xdb4c
0xe232: test rbp,rbp
0xe235: jz 0xe0b8
0xe23b: cmp r10d,0x1
0xe23f: jle 0xe27e
0xe241: movsxd rdx,r10d
0xe244: mov qword ptr [rsp+0x30],rcx
0xe249: sub rdx,0x1
0xe24d: cmp r15d,0x30
0xe251: lea r12,[rbp+rdx*1+0x0]
0xe256: jz 0xf4c5
0xe25c: cmp r15d,0x2b
0xe260: mov esi,0x20
0xe265: jz 0xf4c5
0xe26b: mov rdi,rbp
0xe26e: mov rbp,r12
0xe271: call 0x28f0
0xe276: movzx esi,byte ptr [rbx]
0xe279: mov rcx,qword ptr [rsp+0x30]
0xe27e: mov byte ptr [rbp+0x0],sil
0xe282: add rbp,0x1
0xe286: jmp 0xe0b8
0xe28b: lea rax,[rip+0x4df1]
0xe292: mov [rsp+0x38],0xffffffff
0xe29a: mov qword ptr [rsp+0x40],rax
0xe29f: jmp 0xe0f2
0xe2a4: cmp r11d,0x45
0xe2a8: jz 0xdcd0
0xe2ae: mov esi,dword ptr [r13+0x1c]
0xe2b2: sub esi,dword ptr [r13+0x18]
0xe2b6: mov edx,0x92492493
0xe2bb: add esi,0x7
0xe2be: mov eax,esi
0xe2c0: imul edx,eax,edx
0xe2c2: lea ecx,[rdx+rsi*1+0x0]
0xe2c5: sar esi,0x1f
0xe2c8: mov edi,0x2
0xe2cd: sar ecx,0x2
0xe2d0: sub ecx,esi
0xe2d2: jmp 0xdfe0
0xe2d7: cmp r11d,0x45
0xe2db: jz 0xf00a
0xe2e1: cmp r11d,0x4f
0xe2e5: jz 0xdcd0
0xe2eb: mov eax,dword ptr [r13+0x14]
0xe2ef: cmp eax,0xfffff894
0xe2f4: lea ecx,[rax+0x76c]
0xe2fa: setl qword ptr [rsp+0x38]
0xe2ff: cmp eax,0xfffff894
0xe304: setnl al
0xe307: test r15d,r15d
0xe30a: jnz 0xf189
0xe310: mov r15d,dword ptr [rsp+0x2c]
0xe315: cmp r15d,0x2b
0xe319: jz 0xf193
0xe31f: mov [rsp+0x40],0x0
0xe324: mov edi,0x4
0xe329: xor esi,esi
0xe32b: jmp 0xdff7
0xe330: movzx esi,byte ptr [rsp+0x30]
0xe335: mov rdi,qword ptr [rsp+0x20]
0xe33a: test r8b,r8b
0xe33d: mov eax,0x0
0xe342: mov dword ptr [rsp+0x38],r10d
0xe347: mov byte ptr [rsp+0x40],r8b
0xe34c: cmovne esi,eax
0xe34f: mov byte ptr [rsp+0x30],sil
0xe354: call 0x2840
0xe359: movsxd r10,dword ptr [rsp+0x38]
0xe35e: mov r12,rax
0xe361: mov rdx,qword ptr [rsp+0x8]
0xe366: mov eax,0x0
0xe36b: test r10d,r10d
0xe36e: cmovns rax,r10
0xe372: cmp r12,rax
0xe375: mov rcx,rax
0xe378: cmovnb rcx,r12
0xe37c: sub rdx,r14
0xe37f: cmp rdx,rcx
0xe382: jbe 0xdb4c
0xe388: test rbp,rbp
0xe38b: jz 0xe0b8
0xe391: cmp r12,rax
0xe394: movzx r8d,byte ptr [rsp+0x40]
0xe39a: jnb 0xe3e7
0xe39c: movsxd rdx,r10d
0xe39f: mov qword ptr [rsp+0x48],rcx
0xe3a4: mov byte ptr [rsp+0x40],r8b
0xe3a9: sub rdx,r12
0xe3ac: cmp r15d,0x30
0xe3b0: lea rax,[rbp+rdx*1+0x0]
0xe3b5: mov qword ptr [rsp+0x38],rax
0xe3ba: jz 0xf47f
0xe3c0: cmp r15d,0x2b
0xe3c4: jz 0xf47f
0xe3ca: mov rdi,rbp
0xe3cd: mov esi,0x20
0xe3d2: call 0x28f0
0xe3d7: movzx r8d,byte ptr [rsp+0x40]
0xe3dd: mov rbp,qword ptr [rsp+0x38]
0xe3e2: mov rcx,qword ptr [rsp+0x48]
0xe3e7: test r8b,r8b
0xe3ea: jnz 0xf3e7
0xe3f0: cmp [rsp+0x30],0x0
0xe3f5: mov rdx,r12
0xe3f8: mov qword ptr [rsp+0x30],rcx
0xe3fd: mov rsi,qword ptr [rsp+0x20]
0xe402: mov rdi,rbp
0xe405: jz 0xf3d8
0xe40b: call 0xda30
0xe410: mov rcx,qword ptr [rsp+0x30]
0xe415: add rbp,r12
0xe418: jmp 0xe0b8
0xe41d: cmp r11d,0x45
0xe421: jz 0xf00a
0xe427: mov esi,dword ptr [r13+0x14]
0xe42b: mov edx,0x51eb851f
0xe430: mov eax,esi
0xe432: imul edx,eax,edx
0xe434: mov eax,esi
0xe436: sar eax,0x1f
0xe439: mov ecx,edx
0xe43b: sar ecx,0x5
0xe43e: sub ecx,eax
0xe440: mov eax,esi
0xe442: imul ecx,ecx,0x64
0xe445: sub eax,ecx
0xe447: mov ecx,eax
0xe449: jns 0xe459
0xe44b: neg eax
0xe44d: add ecx,0x64
0xe450: cmp esi,0xfffff893
0xe456: cmovng ecx,eax
0xe459: test r15d,r15d
0xe45c: jz 0xea8a
0xe462: mov eax,0x1
0xe467: mov [rsp+0x38],0x0
0xe46c: cmp r15d,0x2b
0xe470: jz 0xebe3
0xe476: mov [rsp+0x40],0x0
0xe47b: mov edi,0x2
0xe480: xor esi,esi
0xe482: jmp 0xdff7
0xe487: movzx eax,byte ptr [rsp+0x30]
0xe48c: test r8b,r8b
0xe48f: cmovne eax,r8d
0xe493: cmp r11d,0x45
0xe497: jz 0xf406
0xe49d: mov esi,r9d
0xe4a0: mov byte ptr [rsp+0x30],al
0xe4a4: xor r8d,r8d
0xe4a7: jmp 0xde45
0xe4ac: xor r8d,r8d
0xe4af: mov ecx,dword ptr [r13+0x20]
0xe4b3: test ecx,ecx
0xe4b5: js 0xf15e
0xe4bb: mov rcx,qword ptr [r13+0x28]
0xe4bf: mov [rsp+0x38],0x1
0xe4c4: test ecx,ecx
0xe4c6: js 0xe4dc
0xe4c8: mov [rsp+0x38],0x0
0xe4cd: jnz 0xe4dc
0xe4cf: mov rax,qword ptr [rsp+0x20]
0xe4d4: cmp [rax],0x2d
0xe4d7: setz qword ptr [rsp+0x38]
0xe4dc: mov eax,ecx
0xe4de: mov edx,0x91a2b3c5
0xe4e3: mov esi,0x88888889
0xe4e8: imul edx,eax,edx
0xe4ea: mov eax,ecx
0xe4ec: sar eax,0x1f
0xe4ef: mov dword ptr [rsp+0x40],eax
0xe4f3: lea r12d,[rdx+rcx*1+0x0]
0xe4f7: sar r12d,0xb
0xe4fb: sub r12d,eax
0xe4fe: mov eax,ecx
0xe500: imul edx,eax,esi
0xe502: lea edi,[rdx+rcx*1+0x0]
0xe505: sar edi,0x5
0xe508: sub edi,dword ptr [rsp+0x40]
0xe50c: mov eax,edi
0xe50e: imul edx,eax,esi
0xe510: mov eax,edi
0xe512: sar eax,0x1f
0xe515: lea esi,[rdx+rdi*1+0x0]
0xe518: sar esi,0x5
0xe51b: sub esi,eax
0xe51d: mov eax,edi
0xe51f: imul esi,esi,0x3c
0xe522: imul edi,edi,0x3c
0xe525: sub eax,esi
0xe527: sub ecx,edi
0xe529: cmp r8,0x1
0xe52d: mov esi,eax
0xe52f: jz 0xf382
0xe535: jb 0xf460
0xe53b: cmp r8,0x2
0xe53f: jz 0xf335
0xe545: cmp r8,0x3
0xe549: jnz 0xf40f
0xe54f: test ecx,ecx
0xe551: jnz 0xf335
0xe557: test eax,eax
0xe559: jnz 0xf382
0xe55f: movzx eax,byte ptr [rsp+0x38]
0xe564: mov ecx,r12d
0xe567: mov [rsp+0x40],0x1
0xe56c: mov edi,0x3
0xe571: xor eax,0x1
0xe574: jmp 0xdff7
0xe579: nop qword ptr [rax+0x0]
0xe580: cmp r11d,0x4f
0xe584: mov eax,dword ptr [r13+0x10]
0xe588: mov edi,0x1
0xe58d: jz 0xe00c
0xe593: lea edx,[rax+rax*4+0x0]
0xe596: mov [rsp+0x40],0x0
0xe59b: mov [rsp+0x38],0x0
0xe5a0: xor esi,esi
0xe5a2: lea ecx,[rax+rdx*2+0x0]
0xe5a5: sar ecx,0x5
0xe5a8: add ecx,0x1
0xe5ab: nop qword ptr [rax+rax*1+0x0]
0xe5b0: lea r9,[rsp+0xb0]
0xe5b8: mov r12d,0xcccccccd
0xe5be: lea r11,[r9+0x17]
0xe5c2: nop qword ptr [rax+rax*1+0x0]
0xe5c8: test sil,0x1
0xe5cc: lea r8,[r11-0x1]
0xe5d0: jz 0xe5e1
0xe5d2: lea rax,[r11-0x2]
0xe5d6: mov [r11-0x1],0x3a
0xe5db: mov r11,r8
0xe5de: mov r8,rax
0xe5e1: mov eax,ecx
0xe5e3: sar esi,0x1
0xe5e5: mul r12d
0xe5e8: shr edx,0x3
0xe5eb: lea eax,[rdx+rdx*4+0x0]
0xe5ee: add eax,eax
0xe5f0: sub ecx,eax
0xe5f2: mov eax,esi
0xe5f4: add ecx,0x30
0xe5f7: or eax,edx
0xe5f9: mov byte ptr [r11-0x1],cl
0xe5fd: mov ecx,edx
0xe5ff: mov r11,r8
0xe602: jnz 0xe5c8
0xe604: cmp r10d,edi
0xe607: cmovnl edi,r10d
0xe60b: cmp [rsp+0x38],0x0
0xe610: mov dword ptr [rsp+0x48],edi
0xe614: jnz 0xee98
0xe61a: cmp [rsp+0x40],0x0
0xe61f: jz 0xe8b9
0xe625: cmp r15d,0x2d
0xe629: jz 0xf153
0xe62f: mov [rsp+0x38],0x2b
0xe634: mov eax,dword ptr [rsp+0x48]
0xe638: lea rcx,[r9+0x17]
0xe63c: mov rdx,qword ptr [rsp+0x8]
0xe641: sub rcx,r8
0xe644: lea r12d,[rax-0x1]
0xe648: sub rdx,r14
0xe64b: sub r12d,ecx
0xe64e: test r12d,r12d
0xe651: jle 0xf09c
0xe657: cmp r15d,0x5f
0xe65b: jz 0xf016
0xe661: movsxd rax,dword ptr [rsp+0x48]
0xe666: cmp rax,rdx
0xe669: mov rdi,rax
0xe66c: jnb 0xdb4c
0xe672: test r10d,r10d
0xe675: mov eax,0x0
0xe67a: mov esi,0x1
0xe67f: cmovns eax,r10d
0xe683: cwde 
0xe685: test rax,rax
0xe688: cmovne rsi,rax
0xe68c: cmp rsi,rdx
0xe68f: jnb 0xdb4c
0xe695: add r14,rsi
0xe698: test rbp,rbp
0xe69b: movsxd r9,r12d
0xe69e: mov r12,rbx
0xe6a1: jz 0xe744
0xe6a7: test edi,edi
0xe6a9: jnz 0xe6ff
0xe6ab: cmp rax,0x1
0xe6af: jbe 0xe6ff
0xe6b1: movsxd rdx,r10d
0xe6b4: mov qword ptr [rsp+0x58],r8
0xe6b9: mov qword ptr [rsp+0x50],r9
0xe6be: sub rdx,0x1
0xe6c2: cmp r15d,0x30
0xe6c6: mov qword ptr [rsp+0x40],rcx
0xe6cb: lea r12,[rbp+rdx*1+0x0]
0xe6d0: jz 0xf4a1
0xe6d6: cmp r15d,0x2b
0xe6da: jz 0xf4a1
0xe6e0: mov rdi,rbp
0xe6e3: mov esi,0x20
0xe6e8: mov rbp,r12
0xe6eb: call 0x28f0
0xe6f0: mov r8,qword ptr [rsp+0x58]
0xe6f5: mov r9,qword ptr [rsp+0x50]
0xe6fa: mov rcx,qword ptr [rsp+0x40]
0xe6ff: movzx eax,byte ptr [rsp+0x38]
0xe704: add rbp,0x1
0xe708: mov r12,rbx
0xe70b: mov byte ptr [rbp-0x1],al
0xe70e: test rbp,rbp
0xe711: jz 0xe744
0xe713: mov rdx,r9
0xe716: mov rdi,rbp
0xe719: mov esi,0x30
0xe71e: mov qword ptr [rsp+0x50],r8
0xe723: mov qword ptr [rsp+0x40],rcx
0xe728: mov qword ptr [rsp+0x38],r9
0xe72d: call 0x28f0
0xe732: mov r9,qword ptr [rsp+0x38]
0xe737: mov r8,qword ptr [rsp+0x50]
0xe73c: mov rcx,qword ptr [rsp+0x40]
0xe741: add rbp,r9
0xe744: mov rdx,qword ptr [rsp+0x8]
0xe749: add r14,r9
0xe74c: xor r11d,r11d
0xe74f: xor r10d,r10d
0xe752: sub rdx,r14
0xe755: cmp rcx,r11
0xe758: mov rbx,r11
0xe75b: cmovnb rbx,rcx
0xe75f: cmp rbx,rdx
0xe762: jnb 0xdb4c
0xe768: test rbp,rbp
0xe76b: jz 0xdf7e
0xe771: mov esi,dword ptr [rsp+0x48]
0xe775: test esi,esi
0xe777: jnz 0xe7c8
0xe779: cmp rcx,r11
0xe77c: jnb 0xe7c8
0xe77e: movsxd rdx,r10d
0xe781: mov qword ptr [rsp+0x48],r8
0xe786: mov qword ptr [rsp+0x40],rcx
0xe78b: sub rdx,rcx
0xe78e: cmp r15d,0x30
0xe792: lea rax,[rbp+rdx*1+0x0]
0xe797: mov qword ptr [rsp+0x38],rax
0xe79c: jz 0xefda
0xe7a2: cmp r15d,0x2b
0xe7a6: jz 0xefda
0xe7ac: mov rdi,rbp
0xe7af: mov esi,0x20
0xe7b4: call 0x28f0
0xe7b9: mov rbp,qword ptr [rsp+0x38]
0xe7be: mov r8,qword ptr [rsp+0x48]
0xe7c3: mov rcx,qword ptr [rsp+0x40]
0xe7c8: cmp [rsp+0x30],0x0
0xe7cd: mov rdx,rcx
0xe7d0: mov qword ptr [rsp+0x30],rcx
0xe7d5: mov rsi,r8
0xe7d8: mov rdi,rbp
0xe7db: jnz 0xdf71
0xe7e1: call 0x2970
0xe7e6: mov rcx,qword ptr [rsp+0x30]
0xe7eb: jmp 0xdf7b
0xe7f0: movdqu xmm0,[r13+0x0]
0xe7f6: lea rsi,[rsp+0x70]
0xe7fb: mov rax,qword ptr [r13+0x30]
0xe7ff: mov rdi,qword ptr [rsp+0x10]
0xe804: movaps [rsp+0x70],xmm0
0xe809: mov dword ptr [rsp+0x38],r10d
0xe80e: movdqu xmm0,[r13+0x10]
0xe814: mov qword ptr [rsp+0xa0],rax
0xe81c: movaps [rsp+0x80],xmm0
0xe824: movdqu xmm0,[r13+0x20]
0xe82a: movaps [rsp+0x90],xmm0
0xe832: call 0xd670
0xe837: lea r9,[rsp+0xb0]
0xe83f: mov rsi,rax
0xe842: mov rcx,rax
0xe845: mov r11,0x7378697629483820647
0xe84f: mov edi,0x30
0xe854: mov r10d,dword ptr [rsp+0x38]
0xe859: lea r8,[r9+0x17]
0xe85d: nop qword ptr [rax]
0xe860: mov rax,rcx
0xe863: imul rdx,rax,r11
0xe866: mov rax,rcx
0xe869: sar rax,0x3f
0xe86d: sar rdx,0x2
0xe871: sub rdx,rax
0xe874: mov rax,rdx
0xe877: lea rdx,[rdx+rdx*4+0x0]
0xe87b: add rdx,rdx
0xe87e: sub rcx,rdx
0xe881: mov rdx,rcx
0xe884: mov rcx,rax
0xe887: mov eax,edi
0xe889: sub eax,edx
0xe88b: add edx,0x30
0xe88e: test rsi,rsi
0xe891: cmovs edx,eax
0xe894: sub r8,0x1
0xe898: test rcx,rcx
0xe89b: mov byte ptr [r8],dl
0xe89e: jnz 0xe860
0xe8a0: test r10d,r10d
0xe8a3: mov edi,0x1
0xe8a8: cmovnl edi,r10d
0xe8ac: test rsi,rsi
0xe8af: mov dword ptr [rsp+0x48],edi
0xe8b3: js 0xee98
0xe8b9: mov rdx,qword ptr [rsp+0x8]
0xe8be: lea rcx,[r9+0x17]
0xe8c2: sub rcx,r8
0xe8c5: sub rdx,r14
0xe8c8: cmp r15d,0x2d
0xe8cc: jz 0xe8df
0xe8ce: mov r12d,dword ptr [rsp+0x48]
0xe8d3: sub r12d,ecx
0xe8d6: test r12d,r12d
0xe8d9: jnle 0xf269
0xe8df: test r10d,r10d
0xe8e2: mov r11d,0x0
0xe8e8: mov r12,rbx
0xe8eb: cmovns r11d,r10d
0xe8ef: movsxd r11,r11d
0xe8f2: jmp 0xe755
0xe8f7: movzx eax,byte ptr [rbx+0x1]
0xe8fb: lea rdx,[rbx+0x1]
0xe8ff: cmp al,0x3a
0xe901: jz 0xf41a
0xe907: mov r8d,0x1
0xe90d: cmp al,0x7a
0xe90f: jnz 0xdcd0
0xe915: mov rbx,rdx
0xe918: jmp 0xe4af
0xe91d: cmp r11d,0x45
0xe921: jz 0xdcd0
0xe927: mov edi,dword ptr [r13+0x14]
0xe92b: mov r8d,dword ptr [r13+0x1c]
0xe92f: mov edx,0x92492493
0xe934: mov eax,edi
0xe936: mov ecx,r8d
0xe939: sar eax,0x1f
0xe93c: and eax,0x190
0xe941: lea r12d,[rdi+rax*1-0x64]
0xe946: mov eax,dword ptr [r13+0x18]
0xe94a: sub ecx,eax
0xe94c: mov dword ptr [rsp+0x38],eax
0xe950: add ecx,0x17e
0xe956: mov eax,ecx
0xe958: imul edx,eax,edx
0xe95a: lea eax,[rdx+rcx*1+0x0]
0xe95d: mov edx,ecx
0xe95f: sar edx,0x1f
0xe962: sar eax,0x2
0xe965: sub eax,edx
0xe967: lea edx,[rax*8+0x0]
0xe96e: sub edx,eax
0xe970: mov eax,edx
0xe972: mov edx,r8d
0xe975: sub edx,ecx
0xe977: lea eax,[rdx+rax*1+0x3]
0xe97b: test eax,eax
0xe97d: mov dword ptr [rsp+0x40],eax
0xe981: js 0xf2a8
0xe987: test r12b,0x3
0xe98b: mov eax,0x16d
0xe990: jnz 0xe9d7
0xe992: mov ecx,0x51eb851f
0xe997: mov eax,r12d
0xe99a: imul edx,eax,ecx
0xe99c: mov eax,r12d
0xe99f: sar eax,0x1f
0xe9a2: mov dword ptr [rsp+0x48],eax
0xe9a6: mov ecx,edx
0xe9a8: sar edx,0x5
0xe9ab: sub edx,eax
0xe9ad: mov eax,0x16e
0xe9b2: imul edx,edx,0x64
0xe9b5: cmp r12d,edx
0xe9b8: jnz 0xe9d7
0xe9ba: sar ecx,0x7
0xe9bd: mov eax,ecx
0xe9bf: sub eax,dword ptr [rsp+0x48]
0xe9c3: imul eax,eax,0x190
0xe9c9: cmp r12d,eax
0xe9cc: setz al
0xe9cf: movzx eax,al
0xe9d2: add eax,0x16d
0xe9d7: sub r8d,eax
0xe9da: mov edx,0x92492493
0xe9df: mov ecx,r8d
0xe9e2: sub ecx,dword ptr [rsp+0x38]
0xe9e6: add ecx,0x17e
0xe9ec: mov eax,ecx
0xe9ee: sub r8d,ecx
0xe9f1: imul edx,eax,edx
0xe9f3: lea eax,[rdx+rcx*1+0x0]
0xe9f6: mov edx,ecx
0xe9f8: sar edx,0x1f
0xe9fb: sar eax,0x2
0xe9fe: sub eax,edx
0xea00: lea edx,[rax*8+0x0]
0xea07: sub edx,eax
0xea09: lea ecx,[r8+rdx*1+0x3]
0xea0e: mov r8d,0x1
0xea14: test ecx,ecx
0xea16: jns 0xea1f
0xea18: mov ecx,dword ptr [rsp+0x40]
0xea1c: xor r8d,r8d
0xea1f: cmp sil,0x47
0xea23: jz 0xf166
0xea29: cmp sil,0x67
0xea2d: jnz 0xf35f
0xea33: mov ecx,0x51eb851f
0xea38: mov eax,edi
0xea3a: mov esi,edi
0xea3c: imul edx,eax,ecx
0xea3e: mov eax,edx
0xea40: mov edx,edi
0xea42: sar edx,0x1f
0xea45: sar eax,0x5
0xea48: sub eax,edx
0xea4a: imul eax,eax,0x64
0xea4d: sub esi,eax
0xea4f: add esi,r8d
0xea52: mov eax,esi
0xea54: imul edx,eax,ecx
0xea56: mov eax,esi
0xea58: sar eax,0x1f
0xea5b: mov ecx,edx
0xea5d: sar ecx,0x5
0xea60: sub ecx,eax
0xea62: imul ecx,ecx,0x64
0xea65: sub esi,ecx
0xea67: mov ecx,esi
0xea69: jns 0xe459
0xea6f: mov eax,0xfffff894
0xea74: sub eax,r8d
0xea77: cmp edi,eax
0xea79: jnl 0xf51a
0xea7f: neg ecx
0xea81: test r15d,r15d
0xea84: jnz 0xe462
0xea8a: mov r15d,dword ptr [rsp+0x2c]
0xea8f: mov eax,0x1
0xea94: cmp r15d,0x2b
0xea98: jz 0xf4fa
0xea9e: mov [rsp+0x40],0x0
0xeaa3: mov [rsp+0x38],0x0
0xeaa8: mov edi,0x2
0xeaad: xor esi,esi
0xeaaf: jmp 0xdff7
0xeab4: cmp r11d,0x45
0xeab8: jz 0xdcd0
0xeabe: mov ecx,dword ptr [r13+0xc]
0xeac2: mov edi,0x2
0xeac7: jmp 0xdfe0
0xeacc: mov eax,dword ptr [r13+0x18]
0xead0: mov edx,0x92492493
0xead5: mov edi,0x1
0xeada: lea ecx,[rax+0x6]
0xeadd: mov eax,ecx
0xeadf: imul edx,eax,edx
0xeae1: lea eax,[rdx+rcx*1+0x0]
0xeae4: mov edx,ecx
0xeae6: sar edx,0x1f
0xeae9: sar eax,0x2
0xeaec: sub eax,edx
0xeaee: lea edx,[rax*8+0x0]
0xeaf5: sub edx,eax
0xeaf7: sub ecx,edx
0xeaf9: add ecx,0x1
0xeafc: jmp 0xdfe0
0xeb01: cmp r11d,0x45
0xeb05: jz 0xdcd0
0xeb0b: mov ecx,dword ptr [r13+0x18]
0xeb0f: mov edi,0x1
0xeb14: jmp 0xdfe0
0xeb19: cmp r11d,0x45
0xeb1d: jz 0xdcd0
0xeb23: mov eax,dword ptr [r13+0x18]
0xeb27: mov ecx,0x92492493
0xeb2c: lea esi,[rax+0x6]
0xeb2f: mov eax,esi
0xeb31: imul edx,eax,ecx
0xeb33: lea eax,[rdx+rsi*1+0x0]
0xeb36: mov edx,esi
0xeb38: sar edx,0x1f
0xeb3b: sar eax,0x2
0xeb3e: sub eax,edx
0xeb40: lea edx,[rax*8+0x0]
0xeb47: sub edx,eax
0xeb49: mov eax,edx
0xeb4b: mov edx,dword ptr [r13+0x1c]
0xeb4f: sub eax,esi
0xeb51: lea esi,[rax+rdx*1+0x7]
0xeb55: mov eax,esi
0xeb57: imul edx,eax,ecx
0xeb59: jmp 0xe2c2
0xeb5e: cmp r11d,0x45
0xeb62: jz 0xdcd0
0xeb68: test r8b,r8b
0xeb6b: jz 0xde45
0xeb71: mov byte ptr [rsp+0x30],r8b
0xeb76: jmp 0xde42
0xeb7b: cmp r11d,0x45
0xeb7f: jz 0xf00a
0xeb85: mov esi,dword ptr [r13+0x14]
0xeb89: mov edx,0x51eb851f
0xeb8e: mov eax,esi
0xeb90: imul edx,eax,edx
0xeb92: mov eax,edx
0xeb94: mov edx,esi
0xeb96: sar edx,0x1f
0xeb99: sar eax,0x5
0xeb9c: sub eax,edx
0xeb9e: mov edx,esi
0xeba0: lea ecx,[rax+0x13]
0xeba3: imul eax,eax,0x64
0xeba6: sub edx,eax
0xeba8: mov eax,edx
0xebaa: shr eax,0x1f
0xebad: test ecx,ecx
0xebaf: setnle dl
0xebb2: and eax,edx
0xebb4: cmp esi,0xfffff894
0xebba: setl qword ptr [rsp+0x38]
0xebbf: sub ecx,eax
0xebc1: cmp esi,0xfffff894
0xebc7: setnl al
0xebca: test r15d,r15d
0xebcd: jnz 0xe46c
0xebd3: cmp [rsp+0x2c],0x2b
0xebd8: mov r15d,dword ptr [rsp+0x2c]
0xebdd: jnz 0xe476
0xebe3: mov edi,0x2
0xebe8: mov edx,0x63
0xebed: cmp edx,ecx
0xebef: mov [rsp+0x40],0x1
0xebf4: mov r15d,0x2b
0xebfa: jb 0xe329
0xec00: cmp r10d,edi
0xec03: mov r15d,0x2b
0xec09: setnle qword ptr [rsp+0x40]
0xec0e: xor esi,esi
0xec10: jmp 0xdff7
0xec15: test r11d,r11d
0xec18: jnz 0xdcd0
0xec1e: lea rax,[rip+0x41e0]
0xec25: mov [rsp+0x38],0xffffffff
0xec2d: mov qword ptr [rsp+0x40],rax
0xec32: jmp 0xe0f2
0xec37: test r11d,r11d
0xec3a: jnz 0xdcd0
0xec40: test r15d,r15d
0xec43: jnz 0xf43d
0xec49: test r10d,r10d
0xec4c: jns 0xf43d
0xec52: lea rax,[rip+0x41a3]
0xec59: mov [rsp+0x38],0x4
0xec61: mov r15d,0x2b
0xec67: mov qword ptr [rsp+0x40],rax
0xec6c: jmp 0xe0f2
0xec71: movzx ecx,byte ptr [rbx-0x1]
0xec75: lea r9,[rbx-0x1]
0xec79: mov rdx,qword ptr [rsp+0x8]
0xec7e: mov eax,0x0
0xec83: sub rdx,r14
0xec86: test r10d,r10d
0xec89: cmovns eax,r10d
0xec8d: cmp cl,0x25
0xec90: cwde 
0xec92: jnz 0xdccb
0xec98: test rax,rax
0xec9b: mov ecx,0x1
0xeca0: mov r12,r9
0xeca3: cmovne rcx,rax
0xeca7: mov r8d,0x1
0xecad: jmp 0xdd11
0xecb2: cmp r11d,0x45
0xecb6: jz 0xdcd0
0xecbc: mov ecx,dword ptr [r13+0x8]
0xecc0: mov edi,0x2
0xecc5: jmp 0xdfe0
0xecca: cmp r11d,0x45
0xecce: jz 0xdcd0
0xecd4: mov ecx,dword ptr [r13+0x4]
0xecd8: mov edi,0x2
0xecdd: jmp 0xdfe0
0xece2: cmp r11d,0x45
0xece6: jz 0xdcd0
0xecec: cmp r10d,0xff
0xecf0: jz 0xf241
0xecf6: cmp r10d,0x8
0xecfa: jnle 0xf509
0xed00: mov ecx,dword ptr [rsp+0x518]
0xed07: mov esi,r10d
0xed0a: mov edi,0x66666667
0xed0f: nop 
0xed10: mov eax,ecx
0xed12: add esi,0x1
0xed15: sar ecx,0x1f
0xed18: imul edx,eax,edi
0xed1a: sar edx,0x2
0xed1d: sub edx,ecx
0xed1f: cmp esi,0x9
0xed22: mov ecx,edx
0xed24: jnz 0xed10
0xed26: mov edi,r10d
0xed29: jmp 0xdfe0
0xed2e: cmp r11d,0x45
0xed32: jz 0xdcd0
0xed38: mov ecx,dword ptr [rsp+0x68]
0xed3c: mov edi,0x2
0xed41: jmp 0xdfe0
0xed46: cmp r11d,0x45
0xed4a: jz 0xdcd0
0xed50: mov ecx,dword ptr [rsp+0x68]
0xed54: test r15d,r15d
0xed57: mov edi,0x2
0xed5c: jnz 0xdfe0
0xed62: mov r15d,0x5f
0xed68: jmp 0xdfe0
0xed6d: cmp r11d,0x45
0xed71: jz 0xdcd0
0xed77: mov eax,dword ptr [r13+0x10]
0xed7b: mov [rsp+0x40],0x0
0xed80: mov edi,0x2
0xed85: cmp eax,0xff
0xed88: lea ecx,[rax+0x1]
0xed8b: setl qword ptr [rsp+0x38]
0xed90: cmp eax,0xff
0xed93: setnl al
0xed96: xor esi,esi
0xed98: jmp 0xdff7
0xed9d: test r10d,r10d
0xeda0: mov ecx,0x0
0xeda5: mov eax,0x1
0xedaa: cmovns ecx,r10d
0xedae: movsxd rcx,ecx
0xedb1: test rcx,rcx
0xedb4: cmove rcx,rax
0xedb8: mov rax,qword ptr [rsp+0x8]
0xedbd: sub rax,r14
0xedc0: cmp rax,rcx
0xedc3: jbe 0xdb4c
0xedc9: test rbp,rbp
0xedcc: jz 0xe0b8
0xedd2: cmp r10d,0x1
0xedd6: jle 0xee12
0xedd8: movsxd rdx,r10d
0xeddb: mov qword ptr [rsp+0x30],rcx
0xede0: sub rdx,0x1
0xede4: cmp r15d,0x30
0xede8: lea r12,[rbp+rdx*1+0x0]
0xeded: jz 0xf3be
0xedf3: cmp r15d,0x2b
0xedf7: jz 0xf3be
0xedfd: mov rdi,rbp
0xee00: mov esi,0x20
0xee05: mov rbp,r12
0xee08: call 0x28f0
0xee0d: mov rcx,qword ptr [rsp+0x30]
0xee12: mov [rbp+0x0],0xa
0xee16: add rbp,0x1
0xee1a: jmp 0xe0b8
0xee1f: xor eax,eax
0xee21: jmp 0xe0c8
0xee26: cmp r11d,0x45
0xee2a: jz 0xdcd0
0xee30: mov eax,dword ptr [r13+0x1c]
0xee34: mov [rsp+0x40],0x0
0xee39: mov edi,0x3
0xee3e: cmp eax,0xff
0xee41: lea ecx,[rax+0x1]
0xee44: setl qword ptr [rsp+0x38]
0xee49: cmp eax,0xff
0xee4c: setnl al
0xee4f: xor esi,esi
0xee51: jmp 0xdff7
0xee56: cmp r11d,0x45
0xee5a: jz 0xdcd0
0xee60: mov ecx,dword ptr [r13+0x8]
0xee64: jmp 0xed54
0xee69: cmp r11d,0x45
0xee6d: jz 0xdcd0
0xee73: mov ecx,dword ptr [r13+0xc]
0xee77: jmp 0xed54
0xee7c: nop qword ptr [rax+0x0]
0xee80: mov eax,ecx
0xee82: neg eax
0xee84: cmp [rsp+0x38],0x0
0xee89: cmovne ecx,eax
0xee8c: jmp 0xe5b0
0xee91: nop qword ptr [rax+0x0]
0xee98: cmp r15d,0x2d
0xee9c: mov [rsp+0x38],0x2d
0xeea1: jnz 0xe634
0xeea7: test r10d,r10d
0xeeaa: mov r11d,0x0
0xeeb0: mov rax,qword ptr [rsp+0x8]
0xeeb5: cmovns r11d,r10d
0xeeb9: mov r12d,0x1
0xeebf: movsxd r11,r11d
0xeec2: test r11,r11
0xeec5: cmovne r12,r11
0xeec9: sub rax,r14
0xeecc: cmp rax,r12
0xeecf: jbe 0xdb4c
0xeed5: test rbp,rbp
0xeed8: jz 0xef3c
0xeeda: mov eax,dword ptr [rsp+0x48]
0xeede: test eax,eax
0xeee0: jnz 0xef34
0xeee2: cmp r11,0x1
0xeee6: jbe 0xef34
0xeee8: movsxd rax,r10d
0xeeeb: mov rdi,rbp
0xeeee: mov esi,0x20
0xeef3: lea rcx,[rax-0x1]
0xeef7: mov qword ptr [rsp+0x60],r9
0xeefc: mov qword ptr [rsp+0x58],r8
0xef01: mov qword ptr [rsp+0x50],r11
0xef06: mov dword ptr [rsp+0x40],r10d
0xef0b: mov rdx,rcx
0xef0e: mov qword ptr [rsp+0x38],rcx
0xef13: call 0x28f0
0xef18: mov rcx,qword ptr [rsp+0x38]
0xef1d: mov r9,qword ptr [rsp+0x60]
0xef22: mov r8,qword ptr [rsp+0x58]
0xef27: mov r11,qword ptr [rsp+0x50]
0xef2c: mov r10d,dword ptr [rsp+0x40]
0xef31: add rbp,rcx
0xef34: mov byte ptr [rbp+0x0],r15b
0xef38: add rbp,0x1
0xef3c: mov rdx,qword ptr [rsp+0x8]
0xef41: lea rcx,[r9+0x17]
0xef45: add r14,r12
0xef48: mov r15d,0x2d
0xef4e: mov r12,rbx
0xef51: sub rcx,r8
0xef54: sub rdx,r14
0xef57: jmp 0xe755
0xef5c: nop qword ptr [rax+0x0]
0xef60: call 0x2970
0xef65: mov rcx,qword ptr [rsp+0x38]
0xef6a: mov r8,qword ptr [rsp+0x30]
0xef6f: jmp 0xdda2
0xef74: nop qword ptr [rax+0x0]
0xef78: mov rdi,rbp
0xef7b: mov qword ptr [rsp+0x30],rcx
0xef80: call 0xd9e0
0xef85: mov rcx,qword ptr [rsp+0x30]
0xef8a: jmp 0xdf7b
0xef8f: mov rdi,rbp
0xef92: mov esi,0x30
0xef97: call 0x28f0
0xef9c: mov rbp,qword ptr [rsp+0x38]
0xefa1: movzx r8d,byte ptr [rsp+0x40]
0xefa7: mov rcx,qword ptr [rsp+0x48]
0xefac: mov r9,qword ptr [rsp+0x50]
0xefb1: jmp 0xdf4e
0xefb6: mov rdi,rbp
0xefb9: mov esi,0x30
0xefbe: mov rbp,rbx
0xefc1: call 0x28f0
0xefc6: mov r9,qword ptr [rsp+0x38]
0xefcb: mov rcx,qword ptr [rsp+0x40]
0xefd0: mov r8,qword ptr [rsp+0x48]
0xefd5: jmp 0xdd75
0xefda: mov rdi,rbp
0xefdd: mov esi,0x30
0xefe2: call 0x28f0
0xefe7: mov rbp,qword ptr [rsp+0x38]
0xefec: mov rcx,qword ptr [rsp+0x40]
0xeff1: mov r8,qword ptr [rsp+0x48]
0xeff6: jmp 0xe7c8
0xeffb: mov esi,0x70
0xf000: mov [rsp+0x30],0x0
0xf005: jmp 0xde45
0xf00a: xor edi,edi
0xf00c: jmp 0xe00c
0xf011: mov [rsp+0x38],0x0
0xf016: movsxd r15,r12d
0xf019: cmp r15,rdx
0xf01c: jnb 0xdb4c
0xf022: test rbp,rbp
0xf025: jz 0xf058
0xf027: mov rdi,rbp
0xf02a: mov rdx,r15
0xf02d: mov esi,0x20
0xf032: mov dword ptr [rsp+0x58],r10d
0xf037: mov qword ptr [rsp+0x50],r9
0xf03c: add rbp,r15
0xf03f: mov qword ptr [rsp+0x40],r8
0xf044: call 0x28f0
0xf049: mov r10d,dword ptr [rsp+0x58]
0xf04e: mov r9,qword ptr [rsp+0x50]
0xf053: mov r8,qword ptr [rsp+0x40]
0xf058: mov rdx,qword ptr [rsp+0x8]
0xf05d: mov eax,r10d
0xf060: add r14,r15
0xf063: sub eax,r12d
0xf066: cmp r10d,r12d
0xf069: mov r10d,0x0
0xf06f: cmovnl r10d,eax
0xf073: sub rdx,r14
0xf076: cmp [rsp+0x38],0x0
0xf07b: jnz 0xf1a2
0xf081: add r9,0x17
0xf085: movsxd r11,r10d
0xf088: mov r12,rbx
0xf08b: mov rcx,r9
0xf08e: mov r15d,0x5f
0xf094: sub rcx,r8
0xf097: jmp 0xe755
0xf09c: test r10d,r10d
0xf09f: mov r11d,0x0
0xf0a5: mov r12d,0x1
0xf0ab: cmovns r11d,r10d
0xf0af: movsxd r11,r11d
0xf0b2: test r11,r11
0xf0b5: cmovne r12,r11
0xf0b9: cmp r12,rdx
0xf0bc: jnb 0xdb4c
0xf0c2: test rbp,rbp
0xf0c5: jz 0xf140
0xf0c7: mov edi,dword ptr [rsp+0x48]
0xf0cb: test edi,edi
0xf0cd: jnz 0xf134
0xf0cf: cmp r11,0x1
0xf0d3: jbe 0xf134
0xf0d5: movsxd rdx,r10d
0xf0d8: mov dword ptr [rsp+0x6c],r10d
0xf0dd: mov qword ptr [rsp+0x60],r8
0xf0e2: sub rdx,0x1
0xf0e6: cmp r15d,0x30
0xf0ea: mov qword ptr [rsp+0x58],rcx
0xf0ef: lea rax,[rbp+rdx*1+0x0]
0xf0f4: mov qword ptr [rsp+0x50],r11
0xf0f9: mov qword ptr [rsp+0x40],rax
0xf0fe: jz 0xf4cf
0xf104: cmp r15d,0x2b
0xf108: jz 0xf4cf
0xf10e: mov rdi,rbp
0xf111: mov esi,0x20
0xf116: call 0x28f0
0xf11b: mov rbp,qword ptr [rsp+0x40]
0xf120: mov r10d,dword ptr [rsp+0x6c]
0xf125: mov r8,qword ptr [rsp+0x60]
0xf12a: mov rcx,qword ptr [rsp+0x58]
0xf12f: mov r11,qword ptr [rsp+0x50]
0xf134: movzx eax,byte ptr [rsp+0x38]
0xf139: add rbp,0x1
0xf13d: mov byte ptr [rbp-0x1],al
0xf140: mov rdx,qword ptr [rsp+0x8]
0xf145: add r14,r12
0xf148: mov r12,rbx
0xf14b: sub rdx,r14
0xf14e: jmp 0xe755
0xf153: mov r15d,0x2b
0xf159: jmp 0xeea7
0xf15e: mov r12,rbx
0xf161: jmp 0xdbb2
0xf166: mov eax,0xfffff894
0xf16b: lea ecx,[rdi+r8*1+0x76c]
0xf173: sub eax,r8d
0xf176: cmp edi,eax
0xf178: setl qword ptr [rsp+0x38]
0xf17d: setnl al
0xf180: test r15d,r15d
0xf183: jz 0xe310
0xf189: cmp r15d,0x2b
0xf18d: jnz 0xe31f
0xf193: mov edi,0x4
0xf198: mov edx,0x270f
0xf19d: jmp 0xebed
0xf1a2: movsxd r15,r10d
0xf1a5: mov r12d,0x1
0xf1ab: test r15,r15
0xf1ae: cmovne r12,r15
0xf1b2: cmp r12,rdx
0xf1b5: jnb 0xdb4c
0xf1bb: test rbp,rbp
0xf1be: jz 0xf21b
0xf1c0: mov r11d,dword ptr [rsp+0x48]
0xf1c5: test r11d,r11d
0xf1c8: jnz 0xf20f
0xf1ca: cmp r15,0x1
0xf1ce: jbe 0xf20f
0xf1d0: lea rcx,[r15-0x1]
0xf1d4: mov rdi,rbp
0xf1d7: mov esi,0x20
0xf1dc: mov dword ptr [rsp+0x60],r10d
0xf1e1: mov qword ptr [rsp+0x58],r9
0xf1e6: mov rdx,rcx
0xf1e9: mov qword ptr [rsp+0x50],r8
0xf1ee: mov qword ptr [rsp+0x40],rcx
0xf1f3: call 0x28f0
0xf1f8: mov rcx,qword ptr [rsp+0x40]
0xf1fd: mov r10d,dword ptr [rsp+0x60]
0xf202: mov r9,qword ptr [rsp+0x58]
0xf207: mov r8,qword ptr [rsp+0x50]
0xf20c: add rbp,rcx
0xf20f: movzx eax,byte ptr [rsp+0x38]
0xf214: add rbp,0x1
0xf218: mov byte ptr [rbp-0x1],al
0xf21b: mov rdx,qword ptr [rsp+0x8]
0xf220: add r9,0x17
0xf224: add r14,r12
0xf227: mov rcx,r9
0xf22a: mov r11,r15
0xf22d: mov r12,rbx
0xf230: sub rcx,r8
0xf233: mov r15d,0x5f
0xf239: sub rdx,r14
0xf23c: jmp 0xe755
0xf241: mov ecx,dword ptr [rsp+0x518]
0xf248: mov edi,0x9
0xf24d: mov r10d,0x9
0xf253: jmp 0xdfe0
0xf258: mov r12,rbx
0xf25b: mov r9,rbx
0xf25e: mov r8d,0x1
0xf264: jmp 0xdd11
0xf269: cmp r15d,0x5f
0xf26d: jz 0xf011
0xf273: movsxd rax,dword ptr [rsp+0x48]
0xf278: cmp rax,rdx
0xf27b: jnb 0xdb4c
0xf281: movsxd r9,r12d
0xf284: mov r12,rbx
0xf287: jmp 0xe70e
0xf28c: mov rdi,rbp
0xf28f: mov esi,0x30
0xf294: call 0x28f0
0xf299: mov rbp,qword ptr [rsp+0x50]
0xf29e: mov r11,qword ptr [rsp+0x58]
0xf2a3: jmp 0xe1b6
0xf2a8: sub r12d,0x1
0xf2ac: mov edx,0x16d
0xf2b1: test r12b,0x3
0xf2b5: jnz 0xf2f3
0xf2b7: mov eax,r12d
0xf2ba: mov edx,0x51eb851f
0xf2bf: imul edx,eax,edx
0xf2c1: mov eax,edx
0xf2c3: mov edx,r12d
0xf2c6: sar edx,0x1f
0xf2c9: sar eax,0x5
0xf2cc: sub eax,edx
0xf2ce: mov edx,0x16e
0xf2d3: imul eax,eax,0x64
0xf2d6: cmp r12d,eax
0xf2d9: jnz 0xf2f3
0xf2db: mov eax,r12d
0xf2de: mov ecx,0x190
0xf2e3: cdq
0xf2e4: idiv ecx
0xf2e6: cmp edx,0x1
0xf2e9: sbb edx,edx
0xf2eb: not edx
0xf2ed: add edx,0x16e
0xf2f3: add r8d,edx
0xf2f6: mov edx,0x92492493
0xf2fb: mov ecx,r8d
0xf2fe: sub ecx,dword ptr [rsp+0x38]
0xf302: add ecx,0x17e
0xf308: mov eax,ecx
0xf30a: sub r8d,ecx
0xf30d: imul edx,eax,edx
0xf30f: lea eax,[rdx+rcx*1+0x0]
0xf312: mov edx,ecx
0xf314: sar edx,0x1f
0xf317: sar eax,0x2
0xf31a: sub eax,edx
0xf31c: lea edx,[rax*8+0x0]
0xf323: sub edx,eax
0xf325: lea ecx,[r8+rdx*1+0x3]
0xf32a: mov r8d,0xffffffff
0xf330: jmp 0xea1f
0xf335: imul esi,esi,0x64
0xf338: mov [rsp+0x40],0x1
0xf33d: mov edi,0x9
0xf342: imul eax,r12d,0x2710
0xf349: add eax,esi
0xf34b: mov esi,0x14
0xf350: add ecx,eax
0xf352: movzx eax,byte ptr [rsp+0x38]
0xf357: xor eax,0x1
0xf35a: jmp 0xdff7
0xf35f: mov eax,ecx
0xf361: mov edx,0x92492493
0xf366: mov edi,0x2
0xf36b: imul edx,eax,edx
0xf36d: lea eax,[rdx+rcx*1+0x0]
0xf370: sar ecx,0x1f
0xf373: sar eax,0x2
0xf376: sub eax,ecx
0xf378: mov ecx,eax
0xf37a: add ecx,0x1
0xf37d: jmp 0xdfe0
0xf382: movzx eax,byte ptr [rsp+0x38]
0xf387: mov [rsp+0x40],0x1
0xf38c: mov edi,0x6
0xf391: imul ecx,r12d,0x64
0xf395: xor eax,0x1
0xf398: add ecx,esi
0xf39a: mov esi,0x4
0xf39f: jmp 0xdff7
0xf3a4: mov rdi,rbp
0xf3a7: mov esi,0x30
0xf3ac: mov rbp,r12
0xf3af: call 0x28f0
0xf3b4: mov rcx,qword ptr [rsp+0x30]
0xf3b9: jmp 0xe0ac
0xf3be: mov rdi,rbp
0xf3c1: mov esi,0x30
0xf3c6: mov rbp,r12
0xf3c9: call 0x28f0
0xf3ce: mov rcx,qword ptr [rsp+0x30]
0xf3d3: jmp 0xee12
0xf3d8: call 0x2970
0xf3dd: mov rcx,qword ptr [rsp+0x30]
0xf3e2: jmp 0xe415
0xf3e7: mov rsi,qword ptr [rsp+0x20]
0xf3ec: mov rdx,r12
0xf3ef: mov rdi,rbp
0xf3f2: mov qword ptr [rsp+0x30],rcx
0xf3f7: call 0xd9e0
0xf3fc: mov rcx,qword ptr [rsp+0x30]
0xf401: jmp 0xe415
0xf406: mov byte ptr [rsp+0x30],al
0xf40a: jmp 0xdcd0
0xf40f: movzx ecx,byte ptr [rbx]
0xf412: mov r9,rbx
0xf415: jmp 0xec79
0xf41a: lea rcx,[rbx+0x2]
0xf41e: mov r8d,0x1
0xf424: mov rdx,rcx
0xf427: add rcx,0x1
0xf42b: movzx eax,byte ptr [rcx-0x1]
0xf42f: add r8,0x1
0xf433: cmp al,0x3a
0xf435: jnz 0xe90d
0xf43b: jmp 0xf424
0xf43d: mov esi,r10d
0xf440: mov eax,0x0
0xf445: sub esi,0x6
0xf448: cmovns eax,esi
0xf44b: mov dword ptr [rsp+0x38],eax
0xf44f: lea rax,[rip+0x39a6]
0xf456: mov qword ptr [rsp+0x40],rax
0xf45b: jmp 0xe0f2
0xf460: imul ecx,r12d,0x64
0xf464: xor esi,esi
0xf466: mov [rsp+0x40],0x1
0xf46b: mov edi,0x5
0xf470: add ecx,eax
0xf472: movzx eax,byte ptr [rsp+0x38]
0xf477: xor eax,0x1
0xf47a: jmp 0xdff7
0xf47f: mov rdi,rbp
0xf482: mov esi,0x30
0xf487: call 0x28f0
0xf48c: mov rbp,qword ptr [rsp+0x38]
0xf491: movzx r8d,byte ptr [rsp+0x40]
0xf497: mov rcx,qword ptr [rsp+0x48]
0xf49c: jmp 0xe3e7
0xf4a1: mov rdi,rbp
0xf4a4: mov esi,0x30
0xf4a9: mov rbp,r12
0xf4ac: call 0x28f0
0xf4b1: mov rcx,qword ptr [rsp+0x40]
0xf4b6: mov r9,qword ptr [rsp+0x50]
0xf4bb: mov r8,qword ptr [rsp+0x58]
0xf4c0: jmp 0xe6ff
0xf4c5: mov esi,0x30
0xf4ca: jmp 0xe26b
0xf4cf: mov rdi,rbp
0xf4d2: mov esi,0x30
0xf4d7: call 0x28f0
0xf4dc: mov rbp,qword ptr [rsp+0x40]
0xf4e1: mov r11,qword ptr [rsp+0x50]
0xf4e6: mov rcx,qword ptr [rsp+0x58]
0xf4eb: mov r8,qword ptr [rsp+0x60]
0xf4f0: mov r10d,dword ptr [rsp+0x6c]
0xf4f5: jmp 0xf134
0xf4fa: mov [rsp+0x38],0x0
0xf4ff: mov edi,0x2
0xf504: jmp 0xec00
0xf509: mov ecx,dword ptr [rsp+0x518]
0xf510: jmp 0xed26
0xf515: call 0x2850
0xf51a: add ecx,0x64
0xf51d: test r15d,r15d
0xf520: jz 0xea8a
0xf526: jmp 0xe462
0xf52b: xor edi,edi
0xf52d: jmp 0xe01c
0xf584: add rsp,0x18
0xf588: ret
0xf590: or [rdi],0x20
0xf593: ret
0xf7a4: nop qword ptr [rax+0x0]
0xf7d3: nop qword ptr [rax+rax*1+0x0]
0xf867: movzx edx,byte ptr [r13+0x48]
0xf86c: mov rax,qword ptr [r13+0x50]
0xf870: cmp dl,0x25
0xf873: jz 0x10008
0xf879: cmp rax,0xffffffff
0xf87d: jz 0x104c6
0xf883: mov r8,qword ptr [rbp-0x3a8]
0xf88a: shl rax,0x5
0xf88e: add rax,r8
0xf891: cmp dl,0x6e
0xf894: mov edi,dword ptr [rax]
0xf896: mov dword ptr [rbp-0x3d0],edi
0xf89c: jz 0x10080
0xf8a2: mov eax,dword ptr [r13+0x10]
0xf8a6: mov rdi,qword ptr [rbp-0x3d8]
0xf8ad: test al,0x1
0xf8af: mov [rdi],0x25
0xf8b2: lea rbx,[rdi+0x1]
0xf8b6: jz 0xf8c7
0xf8b8: mov rdi,qword ptr [rbp-0x3d8]
0xf8bf: lea rbx,[rdi+0x2]
0xf8c3: mov [rdi+0x1],0x27
0xf8c7: test al,0x2
0xf8c9: jz 0xf8d2
0xf8cb: mov [rbx],0x2d
0xf8ce: add rbx,0x1
0xf8d2: test al,0x4
0xf8d4: jz 0xf8dd
0xf8d6: mov [rbx],0x2b
0xf8d9: add rbx,0x1
0xf8dd: test al,0x8
0xf8df: jz 0xf8e8
0xf8e1: mov [rbx],0x20
0xf8e4: add rbx,0x1
0xf8e8: test al,0x10
0xf8ea: jz 0xf8f3
0xf8ec: mov [rbx],0x23
0xf8ef: add rbx,0x1
0xf8f3: test al,0x40
0xf8f5: jz 0xf8fe
0xf8f7: mov [rbx],0x49
0xf8fa: add rbx,0x1
0xf8fe: test al,0x20
0xf900: jz 0xf909
0xf902: mov [rbx],0x30
0xf905: add rbx,0x1
0xf909: mov rsi,qword ptr [r13+0x18]
0xf90d: mov rdx,qword ptr [r13+0x20]
0xf911: cmp rsi,rdx
0xf914: jz 0xf946
0xf916: mov rcx,rdx
0xf919: mov rdi,rbx
0xf91c: mov qword ptr [rbp-0x3e0],r8
0xf923: sub rcx,rsi
0xf926: mov rdx,rcx
0xf929: mov qword ptr [rbp-0x3c8],rcx
0xf930: call 0x2970
0xf935: mov rcx,qword ptr [rbp-0x3c8]
0xf93c: mov r8,qword ptr [rbp-0x3e0]
0xf943: add rbx,rcx
0xf946: mov rsi,qword ptr [r13+0x30]
0xf94a: mov rdx,qword ptr [r13+0x38]
0xf94e: cmp rsi,rdx
0xf951: jz 0xf983
0xf953: mov rcx,rdx
0xf956: mov rdi,rbx
0xf959: mov qword ptr [rbp-0x3e0],r8
0xf960: sub rcx,rsi
0xf963: mov rdx,rcx
0xf966: mov qword ptr [rbp-0x3c8],rcx
0xf96d: call 0x2970
0xf972: mov rcx,qword ptr [rbp-0x3c8]
0xf979: mov r8,qword ptr [rbp-0x3e0]
0xf980: add rbx,rcx
0xf983: mov edi,dword ptr [rbp-0x3d0]
0xf989: cmp edi,0x10
0xf98c: jnbe 0xf9bb
0xf98e: mov eax,0x1
0xf993: mov ecx,edi
0xf995: shl rax,cl
0xf998: test eax,0x14180
0xf99d: jnz 0xf9b4
0xf99f: test ah,0x10
0xf9a2: jnz 0x10300
0xf9a8: test ah,0x6
0xf9ab: jz 0xf9bb
0xf9ad: mov [rbx],0x6c
0xf9b0: add rbx,0x1
0xf9b4: mov [rbx],0x6c
0xf9b7: add rbx,0x1
0xf9bb: movzx eax,byte ptr [r13+0x48]
0xf9c0: mov [rbx+0x1],0x0
0xf9c4: mov byte ptr [rbx],al
0xf9c6: mov rax,qword ptr [r13+0x28]
0xf9ca: cmp rax,0xffffffff
0xf9ce: jz 0x10100
0xf9d4: shl rax,0x5
0xf9d8: add rax,r8
0xf9db: cmp [rax],0x5
0xf9de: jnz 0x104c6
0xf9e4: mov eax,dword ptr [rax+0x10]
0xf9e7: mov [rbp-0x3e0],0x1
0xf9f1: mov dword ptr [rbp-0x3b8],eax
0xf9f7: mov rax,qword ptr [r13+0x40]
0xf9fb: cmp rax,0xffffffff
0xf9ff: jz 0xfa2c
0xfa01: shl rax,0x5
0xfa05: add r8,rax
0xfa08: cmp [r8],0x5
0xfa0c: jnz 0x104c6
0xfa12: mov eax,dword ptr [rbp-0x3e0]
0xfa18: mov edx,dword ptr [r8+0x10]
0xfa1c: mov dword ptr [rbp+rax*4-0x3b8],edx
0xfa23: lea eax,[rax+0x1]
0xfa26: mov dword ptr [rbp-0x3e0],eax
0xfa2c: mov rax,r14
0xfa2f: xor edx,edx
0xfa31: add rax,0x2
0xfa35: jb 0x1069c
0xfa3b: cmp r12,rax
0xfa3e: jnb 0xfa8b
0xfa40: test r12,r12
0xfa43: jnz 0x10268
0xfa49: cmp rax,0xc
0xfa4d: jnbe 0x10280
0xfa53: mov r12d,0xc
0xfa59: cmp r15,qword ptr [rbp-0x3e8]
0xfa60: setz dl
0xfa63: test r15,r15
0xfa66: jz 0x102b0
0xfa6c: test dl,dl
0xfa6e: jnz 0x102b0
0xfa74: mov rsi,r12
0xfa77: mov rdi,r15
0xfa7a: call 0x2a40
0xfa7f: test rax,rax
0xfa82: jz 0xf705
0xfa88: mov r15,rax
0xfa8b: mov [r15+r14*1+0x0],0x0
0xfa90: call 0x2780
0xfa95: mov qword ptr [rbp-0x3c8],rax
0xfa9c: mov eax,dword ptr [rax]
0xfa9e: mov qword ptr [rbp-0x3f8],rbx
0xfaa5: mov dword ptr [rbp-0x424],eax
0xfaab: nop qword ptr [rax+rax*1+0x0]
0xfab0: mov rax,qword ptr [rbp-0x3c8]
0xfab7: mov rbx,r12
0xfaba: mov r10d,0x7fffffff
0xfac0: sub rbx,r14
0xfac3: mov [rbp-0x3bc],0xffffffff
0xfacd: cmp rbx,0x7fffffff
0xfad4: mov [rax],0x0
0xfada: mov eax,dword ptr [rbp-0x3d0]
0xfae0: cmovbe r10,rbx
0xfae4: cmp eax,0x11
0xfae7: jnbe 0x104c6
0xfaed: lea rsi,[rip+0x53c4]
0xfaf4: movsxd rax,dword ptr [rsi+rax*4+0x0]
0xfaf8: add rax,rsi
0xfafb: jmp rax
0xfafd: nop qword ptr [rax]
0xfb00: mov rax,qword ptr [r13+0x50]
0xfb04: lea rdi,[r15+r14*1+0x0]
0xfb08: shl rax,0x5
0xfb0c: add rax,qword ptr [rbp-0x3a8]
0xfb13: mov r9,qword ptr [rax+0x10]
0xfb17: mov eax,dword ptr [rbp-0x3e0]
0xfb1d: cmp eax,0x1
0xfb20: jz 0xffe8
0xfb26: cmp eax,0x2
0xfb29: jz 0xffd0
0xfb2f: sub rsp,0x8
0xfb33: push qword ptr [rbp-0x3f0]
0xfb39: mov r8,qword ptr [rbp-0x3d8]
0xfb40: mov rsi,r10
0xfb43: mov rcx,0xffffffff
0xfb4a: mov edx,0x1
0xfb4f: xor eax,eax
0xfb51: mov qword ptr [rbp-0x430],r10
0xfb58: call 0x2740
0xfb5d: pop rsi
0xfb5e: pop rdi
0xfb5f: mov r10,qword ptr [rbp-0x430]
0xfb66: mov ecx,dword ptr [rbp-0x3bc]
0xfb6c: test ecx,ecx
0xfb6e: js 0xfcac
0xfb74: movsxd rdx,ecx
0xfb77: cmp rdx,r10
0xfb7a: jnb 0xfb8a
0xfb7c: add rdx,r15
0xfb7f: cmp [rdx+r14*1+0x0],0x0
0xfb84: jnz 0x104c6
0xfb8a: cmp ecx,eax
0xfb8c: jnl 0xfb96
0xfb8e: mov dword ptr [rbp-0x3bc],eax
0xfb94: mov ecx,eax
0xfb96: lea eax,[rcx+0x1]
0xfb99: cmp rax,r10
0xfb9c: jb 0x103d0
0xfba2: cmp rbx,0x7ffffffe
0xfba9: jnbe 0x103f0
0xfbaf: lea rsi,[r12+r12*1+0x0]
0xfbb3: lea edx,[rcx+0x2]
0xfbb6: test r12,r12
0xfbb9: mov rax,0xffffffff
0xfbc0: cmovns rax,rsi
0xfbc4: add rdx,r14
0xfbc7: jb 0x10688
0xfbcd: cmp rax,rdx
0xfbd0: cmovnae rax,rdx
0xfbd4: cmp r12,rax
0xfbd7: jnb 0xfab0
0xfbdd: test r12,r12
0xfbe0: js 0xf711
0xfbe6: cmp rsi,rax
0xfbe9: mov r12,rsi
0xfbec: jnb 0xfbfb
0xfbee: cmp rax,0xffffffff
0xfbf2: jz 0xf711
0xfbf8: mov r12,rax
0xfbfb: cmp r15,qword ptr [rbp-0x3e8]
0xfc02: setz bl
0xfc05: test r15,r15
0xfc08: jz 0xff90
0xfc0e: test bl,bl
0xfc10: jnz 0xff90
0xfc16: mov rsi,r12
0xfc19: mov rdi,r15
0xfc1c: call 0x2a40
0xfc21: test rax,rax
0xfc24: jz 0xf711
0xfc2a: mov r15,rax
0xfc2d: jmp 0xfab0
0xfc32: nop qword ptr [rax+rax*1+0x0]
0xfc38: mov rax,qword ptr [r13+0x50]
0xfc3c: lea rdi,[r15+r14*1+0x0]
0xfc40: shl rax,0x5
0xfc44: add rax,qword ptr [rbp-0x3a8]
0xfc4b: mov r9d,dword ptr [rax+0x10]
0xfc4f: mov eax,dword ptr [rbp-0x3e0]
0xfc55: cmp eax,0x1
0xfc58: jz 0xfe90
0xfc5e: cmp eax,0x2
0xfc61: jz 0xfed8
0xfc67: sub rsp,0x8
0xfc6b: push qword ptr [rbp-0x3f0]
0xfc71: mov r8,qword ptr [rbp-0x3d8]
0xfc78: mov rcx,0xffffffff
0xfc7f: mov edx,0x1
0xfc84: mov rsi,r10
0xfc87: xor eax,eax
0xfc89: mov qword ptr [rbp-0x430],r10
0xfc90: call 0x2740
0xfc95: pop rdx
0xfc96: pop rcx
0xfc97: mov ecx,dword ptr [rbp-0x3bc]
0xfc9d: mov r10,qword ptr [rbp-0x430]
0xfca4: test ecx,ecx
0xfca6: jns 0xfb74
0xfcac: mov rdi,qword ptr [rbp-0x3f8]
0xfcb3: cmp [rdi+0x1],0x0
0xfcb7: jnz 0xfff8
0xfcbd: test eax,eax
0xfcbf: jns 0xfb8e
0xfcc5: mov rax,qword ptr [rbp-0x3c8]
0xfccc: mov ebx,dword ptr [rax]
0xfcce: test ebx,ebx
0xfcd0: jnz 0xfcf0
0xfcd2: movzx eax,byte ptr [r13+0x48]
0xfcd7: mov ebx,0x16
0xfcdc: and eax,0xef
0xfcdf: cmp al,0x63
0xfce1: mov eax,0x54
0xfce6: cmove ebx,eax
0xfce9: nop qword ptr [rax+0x0]
0xfcf0: cmp r15,qword ptr [rbp-0x3e8]
0xfcf7: jz 0xfd02
0xfcf9: test r15,r15
0xfcfc: jnz 0x104ac
0xfd02: mov rax,qword ptr [rbp-0x420]
0xfd09: test rax,rax
0xfd0c: jz 0xfd16
0xfd0e: mov rdi,rax
0xfd11: call 0x2750
0xfd16: mov rax,qword ptr [rbp-0x408]
0xfd1d: mov rdi,qword ptr [rbp-0x2b8]
0xfd24: add rax,0x20
0xfd28: cmp rdi,rax
0xfd2b: jz 0xfd32
0xfd2d: call 0x2750
0xfd32: mov rax,qword ptr [rbp-0x410]
0xfd39: mov rdi,qword ptr [rbp-0x3a8]
0xfd40: add rax,0x10
0xfd44: cmp rdi,rax
0xfd47: jz 0xfd4e
0xfd49: call 0x2750
0xfd4e: mov rax,qword ptr [rbp-0x3c8]
0xfd55: xor r15d,r15d
0xfd58: mov dword ptr [rax],ebx
0xfd5a: jmp 0xf77f
0xfd5f: nop 
0xfd60: mov rax,qword ptr [r13+0x50]
0xfd64: lea rdi,[r15+r14*1+0x0]
0xfd68: shl rax,0x5
0xfd6c: add rax,qword ptr [rbp-0x3a8]
0xfd73: fld st0,[rax+0x10]
0xfd76: mov eax,dword ptr [rbp-0x3e0]
0xfd7c: cmp eax,0x1
0xfd7f: jz 0x103b0
0xfd85: cmp eax,0x2
0xfd88: jnz 0x10250
0xfd8e: mov eax,dword ptr [rbp-0x3b4]
0xfd94: sub rsp,0x8
0xfd98: push qword ptr [rbp-0x3f0]
0xfd9e: mov r9d,dword ptr [rbp-0x3b8]
0xfda5: mov r8,qword ptr [rbp-0x3d8]
0xfdac: mov rsi,r10
0xfdaf: sub rsp,0x18
0xfdb3: mov rcx,0xffffffff
0xfdba: mov edx,0x1
0xfdbf: fstp [rsp+0x8],st0
0xfdc3: push rax
0xfdc4: xor eax,eax
0xfdc6: mov qword ptr [rbp-0x430],r10
0xfdcd: call 0x2740
0xfdd2: add rsp,0x30
0xfdd6: mov r10,qword ptr [rbp-0x430]
0xfddd: jmp 0xfb66
0xfde2: nop qword ptr [rax+rax*1+0x0]
0xfde8: mov rax,qword ptr [r13+0x50]
0xfdec: lea rdi,[r15+r14*1+0x0]
0xfdf0: shl rax,0x5
0xfdf4: add rax,qword ptr [rbp-0x3a8]
0xfdfb: movsd xmm0,dword ptr [rax+0x10]
0xfe00: mov eax,dword ptr [rbp-0x3e0]
0xfe06: cmp eax,0x1
0xfe09: jz 0x103a0
0xfe0f: cmp eax,0x2
0xfe12: jnz 0x10210
0xfe18: mov eax,dword ptr [rbp-0x3b4]
0xfe1e: push qword ptr [rbp-0x3f0]
0xfe24: push rax
0xfe25: mov r9d,dword ptr [rbp-0x3b8]
0xfe2c: mov r8,qword ptr [rbp-0x3d8]
0xfe33: mov rsi,r10
0xfe36: mov rcx,0xffffffff
0xfe3d: mov edx,0x1
0xfe42: mov eax,0x1
0xfe47: mov qword ptr [rbp-0x430],r10
0xfe4e: call 0x2740
0xfe53: pop r8
0xfe55: mov r10,qword ptr [rbp-0x430]
0xfe5c: pop r9
0xfe5e: jmp 0xfb66
0xfe63: nop qword ptr [rax+rax*1+0x0]
0xfe68: mov rax,qword ptr [r13+0x50]
0xfe6c: lea rdi,[r15+r14*1+0x0]
0xfe70: shl rax,0x5
0xfe74: add rax,qword ptr [rbp-0x3a8]
0xfe7b: movzx r9d,byte ptr [rax+0x10]
0xfe80: mov eax,dword ptr [rbp-0x3e0]
0xfe86: cmp eax,0x1
0xfe89: jnz 0xfc5e
0xfe8f: nop 
0xfe90: push qword ptr [rbp-0x3f0]
0xfe96: push r9
0xfe98: mov r9d,dword ptr [rbp-0x3b8]
0xfe9f: jmp 0xfc71
0xfea4: nop qword ptr [rax+0x0]
0xfea8: mov rax,qword ptr [r13+0x50]
0xfeac: lea rdi,[r15+r14*1+0x0]
0xfeb0: shl rax,0x5
0xfeb4: add rax,qword ptr [rbp-0x3a8]
0xfebb: movsx r9d,byte ptr [rax+0x10]
0xfec0: mov eax,dword ptr [rbp-0x3e0]
0xfec6: cmp eax,0x1
0xfec9: jz 0xfe90
0xfecb: cmp eax,0x2
0xfece: jnz 0xfc67
0xfed4: nop qword ptr [rax+0x0]
0xfed8: sub rsp,0x8
0xfedc: push qword ptr [rbp-0x3f0]
0xfee2: push r9
0xfee4: mov eax,dword ptr [rbp-0x3b4]
0xfeea: push rax
0xfeeb: mov r9d,dword ptr [rbp-0x3b8]
0xfef2: mov r8,qword ptr [rbp-0x3d8]
0xfef9: mov rsi,r10
0xfefc: mov rcx,0xffffffff
0xff03: mov edx,0x1
0xff08: xor eax,eax
0xff0a: mov qword ptr [rbp-0x430],r10
0xff11: call 0x2740
0xff16: add rsp,0x20
0xff1a: mov r10,qword ptr [rbp-0x430]
0xff21: jmp 0xfb66
0xff26: nop qword ptr [rax+rax*1+0x0]
0xff30: mov rax,qword ptr [r13+0x50]
0xff34: lea rdi,[r15+r14*1+0x0]
0xff38: shl rax,0x5
0xff3c: add rax,qword ptr [rbp-0x3a8]
0xff43: movzx r9d,byte ptr [rax+0x10]
0xff48: mov eax,dword ptr [rbp-0x3e0]
0xff4e: cmp eax,0x1
0xff51: jnz 0xfc5e
0xff57: jmp 0xfe90
0xff5c: nop qword ptr [rax+0x0]
0xff60: mov rax,qword ptr [r13+0x50]
0xff64: lea rdi,[r15+r14*1+0x0]
0xff68: shl rax,0x5
0xff6c: add rax,qword ptr [rbp-0x3a8]
0xff73: movsx r9d,byte ptr [rax+0x10]
0xff78: mov eax,dword ptr [rbp-0x3e0]
0xff7e: cmp eax,0x1
0xff81: jnz 0xfc5e
0xff87: jmp 0xfe90
0xff8c: nop qword ptr [rax+0x0]
0xff90: mov rdi,r12
0xff93: call 0x29e0
0xff98: test rax,rax
0xff9b: mov rcx,rax
0xff9e: jz 0xf711
0xffa4: test r14,r14
0xffa7: jz 0x10060
0xffad: test bl,bl
0xffaf: jz 0x10060
0xffb5: mov rsi,r15
0xffb8: mov rdx,r14
0xffbb: mov rdi,rax
0xffbe: call 0x2970
0xffc3: mov r15,rax
0xffc6: jmp 0xfab0
0xffcb: nop qword ptr [rax+rax*1+0x0]
0xffd0: sub rsp,0x8
0xffd4: push qword ptr [rbp-0x3f0]
0xffda: push r9
0xffdc: jmp 0xfee4
0xffe1: nop qword ptr [rax+0x0]
0xffe8: push qword ptr [rbp-0x3f0]
0xffee: push r9
0xfff0: jmp 0xfe98
0xfff5: nop qword ptr [rax]
0xfff8: mov [rdi+0x1],0x0
0xfffc: jmp 0xfab0
0x10001: nop qword ptr [rax+0x0]
0x10008: cmp rax,0xffffffff
0x1000c: jnz 0x104c6
0x10012: mov rax,r14
0x10015: add rax,0x1
0x10019: mov rbx,rax
0x1001c: jnb 0x100a8
0x10022: cmp r12,0xffffffff
0x10026: jnz 0xf705
0x1002c: mov rbx,r12
0x1002f: mov [r15+r14*1+0x0],0x25
0x10034: mov r8,qword ptr [r13+0x8]
0x10038: add r13,0x58
0x1003c: mov rcx,qword ptr [r13+0x0]
0x10040: add [rbp-0x400],0x1
0x10048: cmp rcx,r8
0x1004b: jnz 0xf6e9
0x10059: nop qword ptr [rax+0x0]
0x10060: mov r15,rcx
0x10063: jmp 0xfab0
0x10079: nop qword ptr [rax+0x0]
0x10080: mov edx,edi
0x10082: sub edx,0x12
0x10085: cmp edx,0x4
0x10088: jnbe 0x104c6
0x1008e: lea rdi,[rip+0x4e6b]
0x10095: mov rax,qword ptr [rax+0x10]
0x10099: movsxd rdx,dword ptr [rdi+rdx*4+0x0]
0x1009d: add rdx,rdi
0x100a0: jmp rdx
0x100a2: nop qword ptr [rax+rax*1+0x0]
0x100a8: cmp r12,rax
0x100ab: jnb 0x1002f
0x100ad: test r12,r12
0x100b0: jnz 0x10480
0x100b6: cmp rax,0xc
0x100ba: jnbe 0x10492
0x100c0: mov r12d,0xc
0x100c6: cmp r15,qword ptr [rbp-0x3e8]
0x100cd: setz dl
0x100d0: test r15,r15
0x100d3: jz 0x10340
0x100d9: test dl,dl
0x100db: jnz 0x10340
0x100e1: mov rsi,r12
0x100e4: mov rdi,r15
0x100e7: call 0x2a40
0x100ec: test rax,rax
0x100ef: jz 0x101eb
0x100f5: mov r15,rax
0x100f8: jmp 0x1002f
0x100fd: nop qword ptr [rax]
0x10100: mov [rbp-0x3e0],0x0
0x1010a: jmp 0xf9f7
0x1010f: nop 
0x101c8: nop qword ptr [rax+rax*1+0x0]
0x101d8: nop qword ptr [rax+rax*1+0x0]
0x101e0: mov qword ptr [rax],r14
0x101e3: mov rbx,r14
0x101e6: jmp 0x10034
0x1020d: nop qword ptr [rax]
0x10210: mov r9,qword ptr [rbp-0x3f0]
0x10217: mov r8,qword ptr [rbp-0x3d8]
0x1021e: mov rsi,r10
0x10221: mov rcx,0xffffffff
0x10228: mov edx,0x1
0x1022d: mov eax,0x1
0x10232: mov qword ptr [rbp-0x430],r10
0x10239: call 0x2740
0x1023e: mov r10,qword ptr [rbp-0x430]
0x10245: jmp 0xfb66
0x1024a: nop qword ptr [rax+rax*1+0x0]
0x10250: sub rsp,0x10
0x10254: mov r9,qword ptr [rbp-0x3f0]
0x1025b: fstp [rsp],st0
0x1025e: jmp 0xfb39
0x10263: nop qword ptr [rax+rax*1+0x0]
0x10268: js 0xf705
0x1026e: add r12,r12
0x10271: cmp r12,rax
0x10274: jnb 0xfa59
0x1027a: nop qword ptr [rax+rax*1+0x0]
0x10280: test rdx,rdx
0x10283: jnz 0xf705
0x10289: cmp rax,0xffffffff
0x1028d: jz 0xf705
0x10293: cmp r15,qword ptr [rbp-0x3e8]
0x1029a: mov r12,rax
0x1029d: setz dl
0x102a0: test r15,r15
0x102a3: jnz 0xfa6c
0x102a9: nop qword ptr [rax+0x0]
0x102b0: mov rdi,r12
0x102b3: mov byte ptr [rbp-0x3c8],dl
0x102b9: call 0x29e0
0x102be: test rax,rax
0x102c1: mov rcx,rax
0x102c4: movzx edx,byte ptr [rbp-0x3c8]
0x102cb: jz 0xf705
0x102d1: test r14,r14
0x102d4: jz 0x10470
0x102da: test dl,dl
0x102dc: jz 0x10470
0x102e2: mov rsi,r15
0x102e5: mov rdx,r14
0x102e8: mov rdi,rax
0x102eb: call 0x2970
0x102f0: mov r15,rax
0x102f3: jmp 0xfa8b
0x102f8: nop qword ptr [rax+rax*1+0x0]
0x10300: mov [rbx],0x4c
0x10303: add rbx,0x1
0x10307: jmp 0xf9bb
0x1030c: nop qword ptr [rax+0x0]
0x10310: mov byte ptr [rax],r14b
0x10313: mov rbx,r14
0x10316: jmp 0x10034
0x1031b: nop qword ptr [rax+rax*1+0x0]
0x10320: mov dword ptr [rax],r14d
0x10323: mov rbx,r14
0x10326: jmp 0x10034
0x1032b: nop qword ptr [rax+rax*1+0x0]
0x10330: mov word ptr [rax],r14w
0x10334: mov rbx,r14
0x10337: jmp 0x10034
0x1033c: nop qword ptr [rax+0x0]
0x10340: mov rdi,r12
0x10343: mov byte ptr [rbp-0x3c8],dl
0x10349: call 0x29e0
0x1034e: test rax,rax
0x10351: mov rcx,rax
0x10354: movzx edx,byte ptr [rbp-0x3c8]
0x1035b: jz 0xf705
0x10361: test r14,r14
0x10364: jz 0x104a4
0x1036a: test dl,dl
0x1036c: jz 0x104a4
0x10372: mov rsi,r15
0x10375: mov rdx,r14
0x10378: mov rdi,rax
0x1037b: call 0x2970
0x10380: mov r15,rax
0x10383: jmp 0x1002f
0x10388: nop qword ptr [rax+rax*1+0x0]
0x10398: nop qword ptr [rax+rax*1+0x0]
0x103a0: sub rsp,0x8
0x103a4: push qword ptr [rbp-0x3f0]
0x103aa: jmp 0xfe25
0x103af: nop 
0x103b0: sub rsp,0x8
0x103b4: push qword ptr [rbp-0x3f0]
0x103ba: sub rsp,0x10
0x103be: fstp [rsp],st0
0x103c1: jmp 0xfeeb
0x103c6: nop qword ptr [rax+rax*1+0x0]
0x103d0: mov rax,qword ptr [rbp-0x3c8]
0x103d7: mov edi,dword ptr [rbp-0x424]
0x103dd: movsxd rbx,ecx
0x103e0: add rbx,r14
0x103e3: mov dword ptr [rax],edi
0x103e5: jmp 0x10034
0x103ea: nop qword ptr [rax+rax*1+0x0]
0x103f0: cmp r15,qword ptr [rbp-0x3e8]
0x103f7: jz 0x10402
0x103f9: test r15,r15
0x103fc: jnz 0x104b9
0x10402: mov rax,qword ptr [rbp-0x420]
0x10409: test rax,rax
0x1040c: jz 0x10416
0x1040e: mov rdi,rax
0x10411: call 0x2750
0x10416: mov rax,qword ptr [rbp-0x408]
0x1041d: mov rdi,qword ptr [rbp-0x2b8]
0x10424: add rax,0x20
0x10428: cmp rdi,rax
0x1042b: jz 0x10432
0x1042d: call 0x2750
0x10432: mov rax,qword ptr [rbp-0x410]
0x10439: mov rdi,qword ptr [rbp-0x3a8]
0x10440: add rax,0x10
0x10444: cmp rdi,rax
0x10447: jz 0x1044e
0x10449: call 0x2750
0x1044e: mov rax,qword ptr [rbp-0x3c8]
0x10455: xor r15d,r15d
0x10458: mov [rax],0x4b
0x1045e: jmp 0xf77f
0x10463: nop qword ptr [rax+rax*1+0x0]
0x10470: mov r15,rcx
0x10473: jmp 0xfa8b
0x10478: nop qword ptr [rax+rax*1+0x0]
0x10480: js 0xf705
0x10486: add r12,r12
0x10489: cmp r12,rax
0x1048c: jnb 0x100c6
0x10492: cmp rax,0xffffffff
0x10496: jz 0xf705
0x1049c: mov r12,rax
0x1049f: jmp 0x100c6
0x104a4: mov r15,rcx
0x104a7: jmp 0x1002f
0x104ac: mov rdi,r15
0x104af: call 0x2750
0x104b4: jmp 0xfd02
0x104b9: mov rdi,r15
0x104bc: call 0x2750
0x104c1: jmp 0x10402
0x104c6: call 0x2770
0x104cb: nop qword ptr [rax+rax*1+0x0]
0x1067d: nop qword ptr [rax]
0x10688: cmp r12,0xffffffff
0x1068c: jz 0xfab0
0x10692: jmp 0xf711
0x1069c: cmp r12,0xffffffff
0x106a0: mov edx,0x1
0x106a5: jz 0xfa8b
0x106ab: test r12,r12
0x106ae: jz 0xf705
0x106b4: jns 0x10280
0x106ba: jmp 0xf705
0x106f8: nop qword ptr [rax+rax*1+0x0]
0x1092e: nop 
0x10971: nop qword ptr [rax+0x0]
0x109d7: nop qword ptr [rax+rax*1+0x0]
0x10a22: nop qword ptr [rax+rax*1+0x0]
0x10a38: nop qword ptr [rax+rax*1+0x0]
0x10a48: nop qword ptr [rax+rax*1+0x0]
0x10a58: nop qword ptr [rax+rax*1+0x0]
0x10a68: nop qword ptr [rax+rax*1+0x0]
0x10a97: nop qword ptr [rax+rax*1+0x0]
0x10add: nop qword ptr [rax]
0x10ae5: nop qword ptr [rax]
0x10bb7: lea rax,[r10+r10*4+0x0]
0x10bbb: mov rdi,qword ptr [r14+0x8]
0x10bbf: cmp qword ptr [rsp+0x28],rdi
0x10bc4: mov qword ptr [rsp+0x40],r9
0x10bc9: mov qword ptr [rsp+0x38],r10
0x10bce: lea rax,[r10+rax*2+0x0]
0x10bd2: mov qword ptr [rsp+0x30],r8
0x10bd7: lea rsi,[rax*8+0x0]
0x10bdf: jz 0x1129d
0x10be5: call 0x2a40
0x10bea: test rax,rax
0x10bed: mov rcx,rax
0x10bf0: mov r8,qword ptr [rsp+0x30]
0x10bf5: mov r10,qword ptr [rsp+0x38]
0x10bfa: mov r9,qword ptr [rsp+0x40]
0x10bff: jz 0x11547
0x10c05: mov rax,qword ptr [rsp+0x28]
0x10c0a: cmp rax,qword ptr [r14+0x8]
0x10c0e: mov rbx,qword ptr [r14]
0x10c11: jz 0x112c0
0x10c17: mov qword ptr [r14+0x8],rcx
0x10c1b: jmp 0x10938
0x10ead: nop qword ptr [rax]
0x11002: nop qword ptr [rax+rax*1+0x0]
0x11065: nop qword ptr [rax]
0x110f6: nop qword ptr [rax+rax*1+0x0]
0x1114e: nop 
0x1129d: mov rdi,rsi
0x112a0: call 0x29e0
0x112a5: test rax,rax
0x112a8: mov rcx,rax
0x112ab: mov r8,qword ptr [rsp+0x30]
0x112b0: mov r10,qword ptr [rsp+0x38]
0x112b5: mov r9,qword ptr [rsp+0x40]
0x112ba: jz 0x113a9
0x112c0: lea rax,[rbx+rbx*4+0x0]
0x112c4: mov rsi,qword ptr [rsp+0x28]
0x112c9: mov rdi,rcx
0x112cc: mov qword ptr [rsp+0x40],r9
0x112d1: mov qword ptr [rsp+0x38],r10
0x112d6: lea rdx,[rbx+rax*2+0x0]
0x112da: mov qword ptr [rsp+0x30],r8
0x112df: shl rdx,0x3
0x112e3: call 0x2970
0x112e8: mov rbx,qword ptr [r14]
0x112eb: mov rcx,rax
0x112ee: mov r9,qword ptr [rsp+0x40]
0x112f3: mov r10,qword ptr [rsp+0x38]
0x112f8: mov r8,qword ptr [rsp+0x30]
0x112fd: jmp 0x10c17
0x113a9: mov rcx,qword ptr [r15+0x8]
0x113ad: cmp qword ptr [rsp+0x8],rcx
0x113b2: jz 0x113cc
0x1155b: nop qword ptr [rax+rax*1+0x0]
0x115b0: push r15
0x115b2: push r14
0x115b4: mov r15,rdx
0x115b7: push r13
0x115b9: push r12
0x115bb: lea r12,[rip+0x205a2e]
0x115c2: push rbp
0x115c3: lea rbp,[rip+0x205a2e]
0x115ca: push rbx
0x115cb: mov r13d,edi
0x115ce: mov r14,rsi
0x115d1: sub rbp,r12
0x115d4: sub rsp,0x8
0x115d8: sar rbp,0x3
0x115dc: call 0x26f0
0x115e1: test rbp,rbp
0x115e4: jz 0x11606
0x115e6: xor ebx,ebx
0x115e8: nop qword ptr [rax+rax*1+0x0]
0x115f0: mov rdx,r15
0x115f3: mov rsi,r14
0x115f6: mov edi,r13d
0x115f9: call qword ptr [r12+rbx*8+0x0]
0x115fd: add rbx,0x1
0x11601: cmp rbp,rbx
0x11604: jnz 0x115f0
0x11606: add rsp,0x8
0x1160a: pop rbx
0x1160b: pop rbp
0x1160c: pop r12
0x1160e: pop r13
0x11610: pop r14
0x11612: pop r15
0x11614: ret
0x11640: sub rsp,0x8
0x11644: add rsp,0x8
0x11648: ret
