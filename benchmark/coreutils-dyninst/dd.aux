0x19e8: sub rsp,0x8
0x19ec: mov rax,qword ptr [rip+0x20f5e5]
0x19f3: test rax,rax
0x19f6: jz 0x19fa
0x19f8: call rax
0x19fa: add rsp,0x8
0x19fe: ret
0x1a16: push 0x0
0x1a26: push 0x1
0x1a36: push 0x2
0x1a46: push 0x3
0x1a56: push 0x4
0x1a66: push 0x5
0x1a76: push 0x6
0x1a86: push 0x7
0x1a96: push 0x8
0x1aa6: push 0x9
0x1ab6: push 0xa
0x1ac0: jmp qword ptr [rip+0x20f312]
0x1ac6: push 0xb
0x1ad0: jmp qword ptr [rip+0x20f30a]
0x1ad6: push 0xc
0x1ae6: push 0xd
0x1af6: push 0xe
0x1b06: push 0xf
0x1b16: push 0x10
0x1b26: push 0x11
0x1b36: push 0x12
0x1b40: jmp qword ptr [rip+0x20f2d2]
0x1b46: push 0x13
0x1b56: push 0x14
0x1b66: push 0x15
0x1b76: push 0x16
0x1b86: push 0x17
0x1b96: push 0x18
0x1ba6: push 0x19
0x1bb6: push 0x1a
0x1bc6: push 0x1b
0x1bd6: push 0x1c
0x1be6: push 0x1d
0x1bf6: push 0x1e
0x1c06: push 0x1f
0x1c16: push 0x20
0x1c20: jmp qword ptr [rip+0x20f262]
0x1c26: push 0x21
0x1c36: push 0x22
0x1c46: push 0x23
0x1c56: push 0x24
0x1c66: push 0x25
0x1c76: push 0x26
0x1c86: push 0x27
0x1c96: push 0x28
0x1ca6: push 0x29
0x1cb0: jmp qword ptr [rip+0x20f21a]
0x1cb6: push 0x2a
0x1cc6: push 0x2b
0x1cd6: push 0x2c
0x1ce6: push 0x2d
0x1cf0: jmp qword ptr [rip+0x20f1fa]
0x1cf6: push 0x2e
0x1d06: push 0x2f
0x1d10: jmp qword ptr [rip+0x20f1ea]
0x1d16: push 0x30
0x1d26: push 0x31
0x1d36: push 0x32
0x1d40: jmp qword ptr [rip+0x20f1d2]
0x1d46: push 0x33
0x1d56: push 0x34
0x1d66: push 0x35
0x1d76: push 0x36
0x1d86: push 0x37
0x1d96: push 0x38
0x1da6: push 0x39
0x1db6: push 0x3a
0x1dc0: jmp qword ptr [rip+0x20f192]
0x1dc6: push 0x3b
0x1dd6: push 0x3c
0x1de6: push 0x3d
0x1df6: push 0x3e
0x1e06: push 0x3f
0x1e16: push 0x40
0x1e26: push 0x41
0x1e36: push 0x42
0x1e46: push 0x43
0x1e56: push 0x44
0x1e66: push 0x45
0x1e76: push 0x46
0x1e86: push 0x47
0x1e96: push 0x48
0x1ea0: jmp qword ptr [rip+0x20f142]
0x1ea6: nop 
0x28a7: nop qword ptr [rax+rax*1+0x0]
0x28ea: nop qword ptr [rax+rax*1+0x0]
0x2b29: lea rsi,[rip+0xafa0]
0x2b30: mov rbp,rax
0x2b33: xor edi,edi
0x2b35: mov edx,0x5
0x2b3a: call 0x1b60
0x2b3f: mov rcx,rbp
0x2b42: mov rdx,rax
0x2b45: xor esi,esi
0x2b47: xor edi,edi
0x2b49: xor eax,eax
0x2b4b: call 0x4140
0x2b50: jmp 0x25fe
0x2bb1: nop qword ptr [rax+0x0]
0x2c0d: nop qword ptr [rax]
0x2c82: mov esi,dword ptr [rip+0x20e704]
0x2c88: test esi,0x100
0x2c8e: jz 0x37a5
0x2c94: cmp [rip+0x20e381],0x1
0x2c9b: jz 0x2ca2
0x2c9d: call 0x4770
0x2cea: lea rsi,[rip+0x9ad5]
0x2cf1: mov edx,0x5
0x2cf6: xor edi,edi
0x2cf8: mov rbp,rax
0x2cfb: call 0x1b60
0x2d00: mov rdx,rax
0x2d03: mov rax,qword ptr [rsp+0x10]
0x2d08: mov rcx,rbp
0x2d0b: xor edi,edi
0x2d0d: mov esi,dword ptr [rax]
0x2d0f: xor eax,eax
0x2d11: call 0x4140
0x2d16: mov [rip+0x20e61f],0x0
0x2d1d: mov [rip+0x20e611],0x1d
0x2d27: mov [rsp+0x18],0x1
0x2ea2: jmp 0x2d16
0x2eff: mov [rsp+0x18],0x1
0x30b7: jmp 0x2cd7
0x32b0: lea rsi,[rip+0xa8f9]
0x32b7: mov edx,0x5
0x32bc: xor edi,edi
0x32be: mov rbx,rax
0x32c1: call 0x1b60
0x32c6: mov rdx,rax
0x32c9: mov rax,qword ptr [rsp+0x10]
0x32ce: mov rcx,rbx
0x32d1: xor edi,edi
0x32d3: mov esi,dword ptr [rax]
0x32d5: xor eax,eax
0x32d7: call 0x4140
0x32dc: mov [rsp+0x18],0x1
0x32e4: jmp 0x2f4e
0x3487: lea rsi,[rip+0xa722]
0x348e: mov edx,0x5
0x3493: xor edi,edi
0x3495: mov rbx,rax
0x3498: call 0x1b60
0x349d: mov rdx,rax
0x34a0: mov rax,qword ptr [rsp+0x10]
0x34a5: mov rcx,rbx
0x34a8: xor edi,edi
0x34aa: mov esi,dword ptr [rax]
0x34ac: xor eax,eax
0x34ae: call 0x4140
0x34b3: mov [rsp+0x18],0x1
0x34bb: jmp 0x327c
0x3575: jmp 0x3069
0x3762: jmp 0x2eff
0x37a5: mov [rsp+0x18],0x1
0x37ad: jmp 0x3142
0x3914: mov [rsp+0x18],0x1
0x391c: jmp 0x36a5
0x3950: mov edi,0x1
0x3955: call 0x5030
0x3997: call 0x4c00
0x399c: mov edi,0x1
0x39a1: call 0x1e10
0x3bbd: mov edi,0x1
0x3bc2: call 0x5030
0x3bc7: call 0x1b90
0x3caa: hlt 
0x3cb0: lea rdi,[rip+0x20d3f1]
0x3cb7: push rbp
0x3cb8: lea rax,[rip+0x20d3e9]
0x3cbf: cmp rax,rdi
0x3cc2: mov rbp,rsp
0x3cc5: jz 0x3ce0
0x3cc7: mov rax,qword ptr [rip+0x20d2fa]
0x3cce: test rax,rax
0x3cd1: jz 0x3ce0
0x3cd3: pop rbp
0x3cd4: jmp rax
0x3cd6: nop qword ptr [rax+rax*1+0x0]
0x3ce0: pop rbp
0x3ce1: ret
0x3cf0: lea rdi,[rip+0x20d3b1]
0x3cf7: lea rsi,[rip+0x20d3aa]
0x3cfe: push rbp
0x3cff: sub rsi,rdi
0x3d02: mov rbp,rsp
0x3d05: sar rsi,0x3
0x3d09: mov rax,rsi
0x3d0c: shr rax,0x3f
0x3d10: add rsi,rax
0x3d13: sar rsi,0x1
0x3d16: jz 0x3d30
0x3d18: mov rax,qword ptr [rip+0x20d2c1]
0x3d1f: test rax,rax
0x3d22: jz 0x3d30
0x3d24: pop rbp
0x3d25: jmp rax
0x3d27: nop qword ptr [rax+rax*1+0x0]
0x3d30: pop rbp
0x3d31: ret
0x3d40: cmp [rip+0x20d3c1],0x0
0x3d47: jnz 0x3d78
0x3d49: cmp [rip+0x20d297],0x0
0x3d51: push rbp
0x3d52: mov rbp,rsp
0x3d55: jz 0x3d63
0x3d57: mov rdi,qword ptr [rip+0x20d2aa]
0x3d5e: call 0x1ea0
0x3d63: call 0x3cb0
0x3d68: mov [rip+0x20d399],0x1
0x3d6f: pop rbp
0x3d70: ret
0x3d71: nop qword ptr [rax+0x0]
0x3d78: rep ret
0x3d80: push rbp
0x3d81: mov rbp,rsp
0x3d84: pop rbp
0x3d85: jmp 0x3cf0
0x3d90: mov dword ptr [rip+0x20d4da],edi
0x3d96: ret
0x3da0: mov eax,dword ptr [rip+0x20d4c6]
0x3da6: add eax,0x1
0x3da9: mov dword ptr [rip+0x20d4bd],eax
0x3daf: ret
0x3f85: nop qword ptr [rax]
0x4005: nop qword ptr [rax]
0x402d: nop qword ptr [rax]
0x403d: nop qword ptr [rax]
0x405b: nop qword ptr [rax+rax*1+0x0]
0x40ab: nop qword ptr [rax+rax*1+0x0]
0x40d1: nop qword ptr [rax+0x0]
0x410a: jmp 0x3f5c
0x410f: nop 
0x4120: lea r8,[rip+0x84dd]
0x4127: movsd xmm0,dword ptr [rsp+0x8]
0x412d: jmp 0x3eaf
0x4160: movaps [rsp+0x60],xmm0
0x4165: movaps [rsp+0x70],xmm1
0x416a: movaps [rsp+0x80],xmm2
0x4172: movaps [rsp+0x90],xmm3
0x417a: movaps [rsp+0xa0],xmm4
0x4182: movaps [rsp+0xb0],xmm5
0x418a: movaps [rsp+0xc0],xmm6
0x4192: movaps [rsp+0xd0],xmm7
0x420f: mov rax,qword ptr [rsp+0x28]
0x4214: xor rax,0x28
0x421d: jnz 0x4246
0x421f: add rsp,0xe8
0x4226: pop rbx
0x4227: pop rbp
0x4228: ret
0x4229: nop qword ptr [rax+0x0]
0x423f: mov rdx,qword ptr [rsp+0x8]
0x4244: jmp 0x41d0
0x4246: call 0x1b90
0x42ba: nop qword ptr [rax+rax*1+0x0]
0x42d2: nop qword ptr [rax+rax*1+0x0]
0x430e: nop 
0x4389: mov rax,qword ptr [rsp+0x8]
0x438e: jmp 0x4338
0x4390: call 0x1b90
0x44ab: call 0x1b90
0x459e: call 0x1b90
0x460a: nop qword ptr [rax+rax*1+0x0]
0x4648: nop qword ptr [rax+rax*1+0x0]
0x4664: nop qword ptr [rax+0x0]
0x466f: nop 
0x46e7: nop qword ptr [rax+rax*1+0x0]
0x46fa: nop qword ptr [rax+rax*1+0x0]
0x4705: nop qword ptr [rax]
0x4730: cmp [rip+0x20c8e1],0x0
0x4737: jnz 0x4758
0x4739: sub rsp,0x8
0x473d: mov rdi,qword ptr [rip+0x20c9bc]
0x4744: call 0x5db0
0x4749: test eax,eax
0x474b: jnz 0x475d
0x474d: add rsp,0x8
0x4751: ret
0x4752: nop qword ptr [rax+rax*1+0x0]
0x4758: jmp 0x5e50
0x475d: mov edi,0x1
0x4762: call 0x1ac0
0x4767: nop qword ptr [rax+rax*1+0x0]
0x482a: nop qword ptr [rax+rax*1+0x0]
0x483b: nop qword ptr [rax+rax*1+0x0]
0x4879: nop qword ptr [rax+0x0]
0x488a: jmp 0x47a4
0x493c: nop qword ptr [rax+0x0]
0x49c1: nop qword ptr [rax+0x0]
0x49e2: jmp 0x4960
0x49e7: nop qword ptr [rax+rax*1+0x0]
0x4a35: nop qword ptr [rax]
0x4a85: nop qword ptr [rax]
0x4af9: nop qword ptr [rax+0x0]
0x4b74: nop qword ptr [rax+0x0]
0x4bad: nop qword ptr [rax]
0x4bdb: nop qword ptr [rax+rax*1+0x0]
0x4cd5: call 0x1b90
0x4d95: call 0x1b90
0x4dfb: nop qword ptr [rax+rax*1+0x0]
0x4e49: cmp qword ptr [rip+0x20c578],rsi
0x4e50: jnbe 0x4f90
0x4e62: nop qword ptr [rax+rax*1+0x0]
0x4f3a: nop qword ptr [rax+rax*1+0x0]
0x4f53: nop qword ptr [rax+rax*1+0x0]
0x4f68: nop qword ptr [rax+rax*1+0x0]
0x4f8b: nop qword ptr [rax+rax*1+0x0]
0x4f90: mov esi,0x3
0x4f95: mov edi,0x1
0x4f9a: xor eax,eax
0x4f9c: call 0x9cf0
0x4fa1: and ah,0xbf
0x4fa4: mov esi,0x4
0x4fa9: mov edi,0x1
0x4fae: mov edx,eax
0x4fb0: xor eax,eax
0x4fb2: call 0x9cf0
0x4fb7: test eax,eax
0x4fb9: jz 0x4fc4
0x4fbb: cmp [rip+0x20c05a],0x1
0x4fc2: jnz 0x4fe6
0x4fc4: xor esi,esi
0x4fc6: mov edi,0x1
0x4fcb: mov [rip+0x20c296],0x1
0x4fd2: call 0x45b0
0x4fd7: or [rip+0x20c3ab],0x8000
0x4fe1: jmp 0x4e56
0x4fe6: mov rdx,qword ptr [rip+0x20c3f3]
0x4fed: xor edi,edi
0x4fef: mov esi,0x3
0x4ff4: call 0x8ae0
0x4ff9: lea rsi,[rip+0x7b88]
0x5000: xor edi,edi
0x5002: mov edx,0x5
0x5007: mov r13,rax
0x500a: call 0x1b60
0x500f: mov rbx,rax
0x5012: call 0x1a80
0x5017: mov esi,dword ptr [rax]
0x5019: mov rcx,r13
0x501c: mov rdx,rbx
0x501f: xor edi,edi
0x5021: xor eax,eax
0x5023: call 0x4140
0x5028: jmp 0x4fc4
0x570b: mov edi,0x1
0x5710: call 0x5030
0x58a7: nop qword ptr [rax+rax*1+0x0]
0x590e: mov edx,0x5
0x5913: mov rbx,rax
0x5916: lea rsi,[rip+0x6e99]
0x591d: jmp 0x5a1d
0x59d8: test [rip+0x20b9ae],0x1
0x59df: jz 0x59ef
0x59e1: cmp [rip+0x20b634],0x1
0x59e8: jz 0x59ef
0x59ea: call 0x4770
0x59ef: call 0x4c00
0x59f4: mov edi,0x1
0x59f9: call 0x1e10
0x5a0e: lea rsi,[rip+0x6db1]
0x5a15: mov rbx,rax
0x5a18: mov edx,0x5
0x5a1d: xor edi,edi
0x5a1f: call 0x1b60
0x5a24: mov esi,dword ptr [rsp+0xc]
0x5a28: mov rdx,rax
0x5a2b: mov rcx,rbx
0x5a2e: xor edi,edi
0x5a30: xor eax,eax
0x5a32: call 0x4140
0x5a37: jmp 0x59ef
0x5a7e: nop 
0x5b02: test rbx,rbx
0x5b05: jz 0x5b0f
0x5b07: add [rip+0x20b869],0x1
0x5b0f: call 0x4c00
0x5b14: mov edi,0x1
0x5b19: call 0x1e10
0x5b36: nop qword ptr [rax+rax*1+0x0]
0x5c01: nop qword ptr [rax+0x0]
0x5c15: nop qword ptr [rax]
0x5c29: nop qword ptr [rax+0x0]
0x5c5d: nop qword ptr [rax]
0x5d0e: nop 
0x5da5: nop qword ptr [rax]
0x5db0: push r12
0x5db2: push rbp
0x5db3: mov rbp,rdi
0x5db6: push rbx
0x5db7: call 0x1ad0
0x5dbc: mov ebx,dword ptr [rbp+0x0]
0x5dbf: mov rdi,rbp
0x5dc2: mov r12,rax
0x5dc5: call 0x9c70
0x5dca: and ebx,0x20
0x5dcd: test ebx,ebx
0x5dcf: jnz 0x5de8
0x5dd1: test eax,eax
0x5dd3: jz 0x5ddf
0x5dd5: test r12,r12
0x5dd8: mov eax,0xffffffff
0x5ddd: jz 0x5e18
0x5ddf: pop rbx
0x5de0: pop rbp
0x5de1: pop r12
0x5de3: ret
0x5de4: nop qword ptr [rax+0x0]
0x5de8: test eax,eax
0x5dea: jnz 0x5e08
0x5dec: call 0x1a80
0x5df1: mov [rax],0x0
0x5df7: mov eax,0xffffffff
0x5dfc: pop rbx
0x5dfd: pop rbp
0x5dfe: pop r12
0x5e00: ret
0x5e01: nop qword ptr [rax+0x0]
0x5e08: pop rbx
0x5e09: mov eax,0xffffffff
0x5e0e: pop rbp
0x5e0f: pop r12
0x5e11: ret
0x5e12: nop qword ptr [rax+rax*1+0x0]
0x5e18: call 0x1a80
0x5e1d: cmp [rax],0x9
0x5e20: pop rbx
0x5e21: pop rbp
0x5e22: pop r12
0x5e24: setnz al
0x5e27: movzx eax,al
0x5e2a: neg eax
0x5e2c: ret
0x5e30: mov qword ptr [rip+0x20b5c1],rdi
0x5e37: ret
0x5e40: mov byte ptr [rip+0x20b5a9],dil
0x5e47: ret
0x5e50: push rbp
0x5e51: push rbx
0x5e52: sub rsp,0x8
0x5e56: mov rdi,qword ptr [rip+0x20b26b]
0x5e5d: call 0x5db0
0x5e62: test eax,eax
0x5e64: jz 0x5e7c
0x5e66: call 0x1a80
0x5e6b: cmp [rip+0x20b57e],0x0
0x5e72: mov rbx,rax
0x5e75: jz 0x5e93
0x5e77: cmp [rax],0x20
0x5e7a: jnz 0x5e93
0x5e7c: mov rdi,qword ptr [rip+0x20b27d]
0x5e83: call 0x5db0
0x5e88: test eax,eax
0x5e8a: jnz 0x5ed2
0x5e8c: add rsp,0x8
0x5e90: pop rbx
0x5e91: pop rbp
0x5e92: ret
0x5e93: lea rsi,[rip+0x82e3]
0x5e9a: xor edi,edi
0x5e9c: mov edx,0x5
0x5ea1: call 0x1b60
0x5ea6: mov rdi,qword ptr [rip+0x20b54b]
0x5ead: mov rbp,rax
0x5eb0: test rdi,rdi
0x5eb3: jz 0x5edd
0x5eb5: call 0x8ab0
0x5eba: mov esi,dword ptr [rbx]
0x5ebc: lea rdx,[rip+0x68dc]
0x5ec3: mov rcx,rax
0x5ec6: mov r8,rbp
0x5ec9: xor edi,edi
0x5ecb: xor eax,eax
0x5ecd: call 0x1d90
0x5ed2: mov edi,dword ptr [rip+0x20b158]
0x5ed8: call 0x1ac0
0x5edd: mov esi,dword ptr [rbx]
0x5edf: lea rdx,[rip+0x6786]
0x5ee6: mov rcx,rax
0x5ee9: xor edi,edi
0x5eeb: xor eax,eax
0x5eed: call 0x1d90
0x5ef2: jmp 0x5ed2
0x6000: sub rsp,0x28
0x6004: xor edi,edi
0x6006: mov rsi,rsp
0x6009: mov rax,0x28
0x6012: mov qword ptr [rsp+0x18],rax
0x6017: xor eax,eax
0x6019: call 0x1b10
0x601e: mov rcx,qword ptr [rsp+0x18]
0x6023: xor rcx,0x28
0x602c: mov rax,qword ptr [rsp]
0x6030: mov rdx,qword ptr [rsp+0x8]
0x6035: jnz 0x603c
0x6037: add rsp,0x28
0x603b: ret
0x603c: call 0x1b90
0x60c4: nop qword ptr [rax+0x0]
0x60cc: nop qword ptr [rax+0x0]
0x6108: nop qword ptr [rax+rax*1+0x0]
0x625e: nop 
0x627c: nop qword ptr [rax+0x0]
0x6333: nop qword ptr [rax+rax*1+0x0]
0x63b4: nop qword ptr [rax+0x0]
0x6412: nop qword ptr [rax+rax*1+0x0]
0x646b: nop qword ptr [rax+rax*1+0x0]
0x6474: nop qword ptr [rax+0x0]
0x655b: nop qword ptr [rax+rax*1+0x0]
0x6582: nop qword ptr [rax+rax*1+0x0]
0x65e2: nop qword ptr [rax+rax*1+0x0]
0x6664: nop qword ptr [rax+0x0]
0x6684: nop qword ptr [rax+0x0]
0x669d: pop rax
0x669e: pop rdx
0x669f: fld st0,[rsp+0x20]
0x66a3: jmp 0x62b9
0x66a8: nop qword ptr [rax+rax*1+0x0]
0x66bf: pop r8
0x66c1: pop r9
0x66c3: jmp 0x642c
0x66c8: nop qword ptr [rax+rax*1+0x0]
0x67cb: nop qword ptr [rax+rax*1+0x0]
0x6807: nop qword ptr [rax+rax*1+0x0]
0x68a4: nop qword ptr [rax+0x0]
0x68cd: pop rbp
0x68ce: pop r14
0x68d0: fld st0,[rsp+0x18]
0x68d4: jmp 0x6863
0x68d6: nop qword ptr [rax+rax*1+0x0]
0x6904: nop qword ptr [rax+0x0]
0x6918: nop qword ptr [rax+rax*1+0x0]
0x692c: nop qword ptr [rax+0x0]
0x694e: nop 
0x6974: nop qword ptr [rax+0x0]
0x6a68: nop qword ptr [rax+rax*1+0x0]
0x6b30: push r13
0x6b32: push r12
0x6b34: mov r13,rsi
0x6b37: push rbp
0x6b38: push rbx
0x6b39: mov r12,rdx
0x6b3c: mov rbx,rdi
0x6b3f: sub rsp,0x18
0x6b43: mov rax,0x28
0x6b4c: mov qword ptr [rsp+0x8],rax
0x6b51: xor eax,eax
0x6b53: test rdi,rdi
0x6b56: jz 0x6c70
0x6b5c: xor ebp,ebp
0x6b5e: cmp [rbx],0x27
0x6b61: jnz 0x6b6c
0x6b63: add rbx,0x1
0x6b67: mov ebp,0x4
0x6b6c: lea rdx,[rip+0x765d]
0x6b73: lea rsi,[rip+0x209f26]
0x6b7a: mov ecx,0x4
0x6b7f: mov rdi,rbx
0x6b82: call 0xa130
0x6b87: test eax,eax
0x6b89: js 0x6bc8
0x6b8b: lea rdx,[rip+0x763e]
0x6b92: cwde 
0x6b94: mov [r12],0x1
0x6b9c: or ebp,dword ptr [rdx+rax*4+0x0]
0x6b9f: xor eax,eax
0x6ba1: mov dword ptr [r13+0x0],ebp
0x6ba5: mov rcx,qword ptr [rsp+0x8]
0x6baa: xor rcx,0x28
0x6bb3: jnz 0x6d11
0x6bb9: add rsp,0x18
0x6bbd: pop rbx
0x6bbe: pop rbp
0x6bbf: pop r12
0x6bc1: pop r13
0x6bc3: ret
0x6bc4: nop qword ptr [rax+0x0]
0x6bc8: lea r8,[rip+0x75dd]
0x6bcf: xor edx,edx
0x6bd1: mov rsi,rsp
0x6bd4: mov rcx,r12
0x6bd7: mov rdi,rbx
0x6bda: call 0x9650
0x6bdf: test eax,eax
0x6be1: jnz 0x6c28
0x6be3: movzx esi,byte ptr [rbx]
0x6be6: lea edx,[rsi-0x30]
0x6be9: cmp dl,0x9
0x6bec: jbe 0x6c18
0x6bee: mov rcx,qword ptr [rsp]
0x6bf2: cmp rbx,rcx
0x6bf5: jnz 0x6c09
0x6bf7: jmp 0x6cd0
0x6bfc: nop qword ptr [rax+0x0]
0x6c00: cmp rbx,rcx
0x6c03: jz 0x6cd0
0x6c09: add rbx,0x1
0x6c0d: movzx edi,byte ptr [rbx]
0x6c10: lea edx,[rdi-0x30]
0x6c13: cmp dl,0x9
0x6c16: jnbe 0x6c00
0x6c18: mov rdx,qword ptr [r12]
0x6c1c: mov dword ptr [r13+0x0],ebp
0x6c20: jmp 0x6c34
0x6c22: nop qword ptr [rax+rax*1+0x0]
0x6c28: mov rdx,qword ptr [r12]
0x6c2c: mov [r13+0x0],0x0
0x6c34: test rdx,rdx
0x6c37: jnz 0x6ba5
0x6c3d: lea rdi,[rip+0x5bf8]
0x6c44: call 0x1a20
0x6c49: cmp rax,0x1
0x6c4d: sbb rax,rax
0x6c50: and eax,0x200
0x6c55: add rax,0x200
0x6c5b: mov qword ptr [r12],rax
0x6c5f: mov eax,0x4
0x6c64: jmp 0x6ba5
0x6c69: nop qword ptr [rax+0x0]
0x6c70: lea rdi,[rip+0x7520]
0x6c77: call 0x1a20
0x6c7c: test rax,rax
0x6c7f: mov rbx,rax
0x6c82: jnz 0x6b5c
0x6c88: lea rdi,[rip+0x7513]
0x6c8f: call 0x1a20
0x6c94: test rax,rax
0x6c97: mov rbx,rax
0x6c9a: jnz 0x6b5c
0x6ca0: lea rdi,[rip+0x5b95]
0x6ca7: call 0x1a20
0x6cac: test rax,rax
0x6caf: jz 0x6cfa
0x6cb1: mov [r12],0x200
0x6cb9: xor eax,eax
0x6cbb: mov [r13+0x0],0x0
0x6cc3: jmp 0x6ba5
0x6cc8: nop qword ptr [rax+rax*1+0x0]
0x6cd0: cmp [rcx-0x1],0x42
0x6cd4: jz 0x6ce8
0x6cd6: or bpl,0x80
0x6cda: or ebp,0x20
0x6cdd: jmp 0x6c18
0x6ce2: nop qword ptr [rax+rax*1+0x0]
0x6ce8: or ebp,0x180
0x6cee: cmp [rcx-0x2],0x69
0x6cf2: jnz 0x6c18
0x6cf8: jmp 0x6cda
0x6cfa: mov [r12],0x400
0x6d02: xor eax,eax
0x6d04: mov [r13+0x0],0x0
0x6d0c: jmp 0x6ba5
0x6d11: call 0x1b90
0x6d20: push r13
0x6d22: push r12
0x6d24: mov r13,r8
0x6d27: push rbp
0x6d28: push rbx
0x6d29: mov rbp,rdx
0x6d2c: mov r12,rcx
0x6d2f: sub rsp,0xe8
0x6d36: test al,al
0x6d38: jz 0x6d74
0x6d3a: movaps [rsp+0x60],xmm0
0x6d3f: movaps [rsp+0x70],xmm1
0x6d44: movaps [rsp+0x80],xmm2
0x6d4c: movaps [rsp+0x90],xmm3
0x6d54: movaps [rsp+0xa0],xmm4
0x6d5c: movaps [rsp+0xb0],xmm5
0x6d64: movaps [rsp+0xc0],xmm6
0x6d6c: movaps [rsp+0xd0],xmm7
0x6d74: mov rax,0x28
0x6d7d: mov qword ptr [rsp+0x28],rax
0x6d82: xor eax,eax
0x6d84: cmp edi,0x2
0x6d87: mov ebx,dword ptr [rip+0x20a353]
0x6d8d: mov [rip+0x20a349],0x0
0x6d97: jz 0x6dd0
0x6d99: mov rax,qword ptr [rsp+0x28]
0x6d9e: xor rax,0x28
0x6da7: mov dword ptr [rip+0x20a333],ebx
0x6dad: mov [rip+0x20a319],0x0
0x6db7: jnz 0x6e5a
0x6dbd: add rsp,0xe8
0x6dc4: pop rbx
0x6dc5: pop rbp
0x6dc6: pop r12
0x6dc8: pop r13
0x6dca: ret
0x6dcb: nop qword ptr [rax+rax*1+0x0]
0x6dd0: lea rcx,[rip+0x209ce9]
0x6dd7: lea rdx,[rip+0x7422]
0x6dde: xor r8d,r8d
0x6de1: mov qword ptr [rsp+0x8],r9
0x6de6: call 0x1ba0
0x6deb: cmp eax,0xff
0x6dee: jz 0x6d99
0x6df0: cmp eax,0x68
0x6df3: mov r9,qword ptr [rsp+0x8]
0x6df8: jz 0x6e50
0x6dfa: cmp eax,0x76
0x6dfd: jnz 0x6d99
0x6dff: lea rax,[rsp+0x110]
0x6e07: mov rdi,qword ptr [rip+0x20a2ba]
0x6e0e: lea r8,[rsp+0x10]
0x6e13: mov rcx,r13
0x6e16: mov rdx,r12
0x6e19: mov rsi,rbp
0x6e1c: mov qword ptr [rsp+0x18],rax
0x6e21: lea rax,[rsp+0x30]
0x6e26: mov [rsp+0x10],0x30
0x6e2e: mov [rsp+0x14],0x30
0x6e36: mov qword ptr [rsp+0x20],rax
0x6e3b: call 0x91e0
0x6e40: xor edi,edi
0x6e42: call 0x1e10
0x6e47: nop qword ptr [rax+rax*1+0x0]
0x6e50: xor edi,edi
0x6e52: call r9
0x6e55: jmp 0x6d99
0x6e5a: call 0x1b90
0x6e84: movaps [rsp+0x50],xmm0
0x6e89: movaps [rsp+0x60],xmm1
0x6e8e: movaps [rsp+0x70],xmm2
0x6e93: movaps [rsp+0x80],xmm3
0x6e9b: movaps [rsp+0x90],xmm4
0x6ea3: movaps [rsp+0xa0],xmm5
0x6eab: movaps [rsp+0xb0],xmm6
0x6eb3: movaps [rsp+0xc0],xmm7
0x6f57: nop qword ptr [rax+rax*1+0x0]
0x6f8e: nop 
0x6f94: jmp 0x6f68
0x6f96: call 0x1b90
0x707c: nop qword ptr [rax+0x0]
0x70cd: nop qword ptr [rax]
0x73e7: nop qword ptr [rax+rax*1+0x0]
0x741e: nop 
0x7441: nop qword ptr [rax+0x0]
0x7482: nop qword ptr [rax+rax*1+0x0]
0x7494: nop qword ptr [rax+0x0]
0x7538: nop qword ptr [rax+rax*1+0x0]
0x7561: nop qword ptr [rax+0x0]
0x7577: nop qword ptr [rax+rax*1+0x0]
0x758f: nop 
0x75be: nop 
0x75cd: nop qword ptr [rax]
0x75df: nop 
0x75ef: nop 
0x75ff: nop 
0x760f: nop 
0x761f: nop 
0x768c: nop qword ptr [rax+0x0]
0x76ac: nop qword ptr [rax+0x0]
0x76cf: nop 
0x76e2: nop qword ptr [rax+rax*1+0x0]
0x76fa: nop qword ptr [rax+rax*1+0x0]
0x770a: nop qword ptr [rax+rax*1+0x0]
0x77ab: nop qword ptr [rax+rax*1+0x0]
0x77c5: nop qword ptr [rax]
0x77d8: nop qword ptr [rax+rax*1+0x0]
0x77f3: nop qword ptr [rax+rax*1+0x0]
0x7822: nop qword ptr [rax+rax*1+0x0]
0x7832: nop qword ptr [rax+rax*1+0x0]
0x784a: nop qword ptr [rax+rax*1+0x0]
0x785a: nop qword ptr [rax+rax*1+0x0]
0x7868: nop qword ptr [rax+rax*1+0x0]
0x788f: nop 
0x7929: nop qword ptr [rax+0x0]
0x7972: nop qword ptr [rax+rax*1+0x0]
0x79b1: nop qword ptr [rax+0x0]
0x79d2: nop qword ptr [rax+rax*1+0x0]
0x7b38: nop qword ptr [rax+rax*1+0x0]
0x7c4b: nop qword ptr [rax+rax*1+0x0]
0x7c6e: nop 
0x7d35: nop qword ptr [rax]
0x7ded: nop qword ptr [rax]
0x7ff6: nop qword ptr [rax+rax*1+0x0]
0x8089: nop qword ptr [rax+0x0]
0x81dd: nop qword ptr [rax]
0x84eb: nop qword ptr [rax+rax*1+0x0]
0x8520: push r12
0x8522: push rbp
0x8523: push rbx
0x8524: mov rbx,rdi
0x8527: call 0x1a80
0x852c: mov r12d,dword ptr [rax]
0x852f: mov rbp,rax
0x8532: lea rax,[rip+0x208fe7]
0x8539: test rbx,rbx
0x853c: mov esi,0x38
0x8541: cmove rbx,rax
0x8545: mov rdi,rbx
0x8548: call 0x95c0
0x854d: mov dword ptr [rbp+0x0],r12d
0x8551: pop rbx
0x8552: pop rbp
0x8553: pop r12
0x8555: ret
0x8560: lea rax,[rip+0x208fb9]
0x8567: test rdi,rdi
0x856a: cmove rdi,rax
0x856e: mov eax,dword ptr [rdi]
0x8570: ret
0x8580: lea rax,[rip+0x208f99]
0x8587: test rdi,rdi
0x858a: cmove rdi,rax
0x858e: mov dword ptr [rdi],esi
0x8590: ret
0x85a0: lea rax,[rip+0x208f79]
0x85a7: test rdi,rdi
0x85aa: mov ecx,esi
0x85ac: cmove rdi,rax
0x85b0: mov eax,esi
0x85b2: and ecx,0x1f
0x85b5: shr al,0x5
0x85b8: movzx eax,al
0x85bb: lea rdi,[rdi+rax*4+0x8]
0x85c0: mov esi,dword ptr [rdi]
0x85c2: mov eax,esi
0x85c4: shr eax,cl
0x85c6: xor edx,eax
0x85c8: and eax,0x1
0x85cb: and edx,0x1
0x85ce: shl edx,cl
0x85d0: xor edx,esi
0x85d2: mov dword ptr [rdi],edx
0x85d4: ret
0x85e0: lea rax,[rip+0x208f39]
0x85e7: test rdi,rdi
0x85ea: cmove rdi,rax
0x85ee: mov eax,dword ptr [rdi+0x4]
0x85f1: mov dword ptr [rdi+0x4],esi
0x85f4: ret
0x8600: lea rax,[rip+0x208f19]
0x8607: test rdi,rdi
0x860a: cmove rdi,rax
0x860e: test rsi,rsi
0x8611: mov [rdi],0xa
0x8617: jz 0x8627
0x8619: test rdx,rdx
0x861c: jz 0x8627
0x861e: mov qword ptr [rdi+0x28],rsi
0x8622: mov qword ptr [rdi+0x30],rdx
0x8626: ret
0x8627: sub rsp,0x8
0x862b: call 0x1a70
0x8630: push r15
0x8632: push r14
0x8634: lea rax,[rip+0x208ee5]
0x863b: push r13
0x863d: push r12
0x863f: mov r13,rdi
0x8642: push rbp
0x8643: push rbx
0x8644: mov rbx,r8
0x8647: mov r14,rsi
0x864a: mov r15,rdx
0x864d: sub rsp,0x18
0x8651: test r8,r8
0x8654: cmove rbx,rax
0x8658: mov qword ptr [rsp+0x8],rcx
0x865d: call 0x1a80
0x8662: mov r12d,dword ptr [rax]
0x8665: mov rbp,rax
0x8668: lea rax,[rbx+0x8]
0x866c: sub rsp,0x8
0x8670: mov r9d,dword ptr [rbx+0x4]
0x8674: push qword ptr [rbx+0x30]
0x8677: mov r8d,dword ptr [rbx]
0x867a: push qword ptr [rbx+0x28]
0x867d: mov rdx,r15
0x8680: push rax
0x8681: mov rcx,qword ptr [rsp+0x28]
0x8686: mov rsi,r14
0x8689: mov rdi,r13
0x868c: call 0x7130
0x8691: mov dword ptr [rbp+0x0],r12d
0x8695: add rsp,0x38
0x8699: pop rbx
0x869a: pop rbp
0x869b: pop r12
0x869d: pop r13
0x869f: pop r14
0x86a1: pop r15
0x86a3: ret
0x86b0: push r15
0x86b2: push r14
0x86b4: lea rax,[rip+0x208e65]
0x86bb: push r13
0x86bd: push r12
0x86bf: mov r12,rdx
0x86c2: push rbp
0x86c3: push rbx
0x86c4: mov rbx,rcx
0x86c7: mov r14,rdi
0x86ca: mov r15,rsi
0x86cd: sub rsp,0x38
0x86d1: test rcx,rcx
0x86d4: cmove rbx,rax
0x86d8: xor ebp,ebp
0x86da: call 0x1a80
0x86df: test r12,r12
0x86e2: mov r13,rax
0x86e5: mov eax,dword ptr [rax]
0x86e7: setz bpl
0x86eb: or ebp,dword ptr [rbx+0x4]
0x86ee: lea r10,[rbx+0x8]
0x86f2: sub rsp,0x8
0x86f6: mov r8d,dword ptr [rbx]
0x86f9: mov rcx,r15
0x86fc: mov dword ptr [rsp+0x14],eax
0x8700: push qword ptr [rbx+0x30]
0x8703: mov rdx,r14
0x8706: push qword ptr [rbx+0x28]
0x8709: push r10
0x870b: xor esi,esi
0x870d: mov r9d,ebp
0x8710: xor edi,edi
0x8712: mov qword ptr [rsp+0x40],r10
0x8717: call 0x7130
0x871c: lea rsi,[rax+0x1]
0x8720: mov qword ptr [rsp+0x48],rax
0x8725: add rsp,0x20
0x8729: mov rdi,rsi
0x872c: mov qword ptr [rsp+0x18],rsi
0x8731: call 0x93c0
0x8736: mov qword ptr [rsp+0x10],rax
0x873b: sub rsp,0x8
0x873f: push qword ptr [rbx+0x30]
0x8742: push qword ptr [rbx+0x28]
0x8745: mov r10,qword ptr [rsp+0x38]
0x874a: mov r9d,ebp
0x874d: mov r8d,dword ptr [rbx]
0x8750: mov rcx,r15
0x8753: mov rdx,r14
0x8756: mov rdi,rax
0x8759: push r10
0x875b: mov rsi,qword ptr [rsp+0x38]
0x8760: call 0x7130
0x8765: mov eax,dword ptr [rsp+0x2c]
0x8769: add rsp,0x20
0x876d: test r12,r12
0x8770: mov dword ptr [r13+0x0],eax
0x8774: jz 0x877f
0x8776: mov r11,qword ptr [rsp+0x28]
0x877b: mov qword ptr [r12],r11
0x877f: mov rax,qword ptr [rsp+0x10]
0x8784: add rsp,0x38
0x8788: pop rbx
0x8789: pop rbp
0x878a: pop r12
0x878c: pop r13
0x878e: pop r14
0x8790: pop r15
0x8792: ret
0x87a0: mov rcx,rdx
0x87a3: xor edx,edx
0x87a5: jmp 0x86b0
0x87b0: mov eax,dword ptr [rip+0x2088c2]
0x87b6: push r12
0x87b8: mov r12,qword ptr [rip+0x2088c1]
0x87bf: push rbp
0x87c0: push rbx
0x87c1: cmp eax,0x1
0x87c4: jle 0x87f1
0x87c6: sub eax,0x2
0x87c9: lea rbx,[r12+0x18]
0x87ce: shl rax,0x4
0x87d2: lea rbp,[r12+rax*1+0x28]
0x87d7: nop qword ptr [rax+rax*1+0x0]
0x87e0: mov rdi,qword ptr [rbx]
0x87e3: add rbx,0x10
0x87e7: call 0x1a60
0x87ec: cmp rbx,rbp
0x87ef: jnz 0x87e0
0x87f1: mov rdi,qword ptr [r12+0x8]
0x87f6: lea rbx,[rip+0x208c23]
0x87fd: cmp rdi,rbx
0x8800: jz 0x8819
0x8802: call 0x1a60
0x8807: mov [rip+0x20887e],0x100
0x8812: mov qword ptr [rip+0x20887f],rbx
0x8819: lea rbx,[rip+0x208870]
0x8820: cmp r12,rbx
0x8823: jz 0x8834
0x8825: mov rdi,r12
0x8828: call 0x1a60
0x882d: mov qword ptr [rip+0x20884c],rbx
0x8834: pop rbx
0x8835: mov [rip+0x208839],0x1
0x883f: pop rbp
0x8840: pop r12
0x8842: ret
0x8850: lea rcx,[rip+0x208cc9]
0x8857: mov rdx,0xffffffff
0x885e: jmp 0x8370
0x8870: lea rcx,[rip+0x208ca9]
0x8877: jmp 0x8370
0x8880: lea rcx,[rip+0x208c99]
0x8887: mov rsi,rdi
0x888a: mov rdx,0xffffffff
0x8891: xor edi,edi
0x8893: jmp 0x8370
0x88a0: lea rcx,[rip+0x208c79]
0x88a7: mov rdx,rsi
0x88aa: mov rsi,rdi
0x88ad: xor edi,edi
0x88af: jmp 0x8370
0x8944: call 0x1a70
0x89d0: call 0x1a70
0x89f0: mov rcx,rdx
0x89f3: mov rdx,rsi
0x89f6: mov esi,edi
0x89f8: xor edi,edi
0x89fa: jmp 0x8950
0x8a00: sub rsp,0x48
0x8a04: mov ecx,edx
0x8a06: mov rax,0x28
0x8a0f: mov qword ptr [rsp+0x38],rax
0x8a14: xor eax,eax
0x8a16: mov rax,qword ptr [rip+0x208b33]
0x8a1d: mov r8,rsp
0x8a20: and ecx,0x1f
0x8a23: movdqa xmm0,[rip+0x208af5]
0x8a2b: mov qword ptr [rsp+0x30],rax
0x8a30: mov eax,edx
0x8a32: movaps [rsp],xmm0
0x8a36: shr al,0x5
0x8a39: movzx eax,al
0x8a3c: lea r9,[r8+rax*4+0x8]
0x8a41: movdqa xmm0,[rip+0x208ae7]
0x8a49: movaps [rsp+0x10],xmm0
0x8a4e: movdqa xmm0,[rip+0x208aea]
0x8a56: movaps [rsp+0x20],xmm0
0x8a5b: mov edx,dword ptr [r9]
0x8a5e: mov eax,edx
0x8a60: shr eax,cl
0x8a62: not eax
0x8a64: and eax,0x1
0x8a67: shl eax,cl
0x8a69: mov rcx,r8
0x8a6c: xor eax,edx
0x8a6e: mov rdx,rsi
0x8a71: mov rsi,rdi
0x8a74: mov dword ptr [r9],eax
0x8a77: xor edi,edi
0x8a79: call 0x8370
0x8a7e: mov rsi,qword ptr [rsp+0x38]
0x8a83: xor rsi,0x28
0x8a8c: jnz 0x8a93
0x8a8e: add rsp,0x48
0x8a92: ret
0x8a93: call 0x1b90
0x8aa0: movsx edx,sil
0x8aa4: mov rsi,0xffffffff
0x8aab: jmp 0x8a00
0x8ab0: mov edx,0x3a
0x8ab5: mov rsi,0xffffffff
0x8abc: jmp 0x8a00
0x8ad0: mov edx,0x3a
0x8ad5: jmp 0x8a00
0x8b5f: add rsp,0x48
0x8b63: ret
0x8b64: call 0x1a70
0x8b70: sub rsp,0x48
0x8b74: mov r9,rcx
0x8b77: mov rcx,qword ptr [rip+0x2089d2]
0x8b7e: movdqa xmm0,[rip+0x20899a]
0x8b86: mov rax,0x28
0x8b8f: mov qword ptr [rsp+0x38],rax
0x8b94: xor eax,eax
0x8b96: movaps [rsp],xmm0
0x8b9a: test rsi,rsi
0x8b9d: mov qword ptr [rsp+0x30],rcx
0x8ba2: mov [rsp],0xa
0x8ba9: movdqa xmm0,[rip+0x20897f]
0x8bb1: movaps [rsp+0x10],xmm0
0x8bb6: movdqa xmm0,[rip+0x208982]
0x8bbe: movaps [rsp+0x20],xmm0
0x8bc3: jz 0x8bf7
0x8bc5: test rdx,rdx
0x8bc8: jz 0x8bf7
0x8bca: mov qword ptr [rsp+0x28],rsi
0x8bcf: mov qword ptr [rsp+0x30],rdx
0x8bd4: mov rcx,rsp
0x8bd7: mov rdx,r8
0x8bda: mov rsi,r9
0x8bdd: call 0x8370
0x8be2: mov rdi,qword ptr [rsp+0x38]
0x8be7: xor rdi,0x28
0x8bf0: jnz 0x8bfc
0x8bf2: add rsp,0x48
0x8bf6: ret
0x8bf7: call 0x1a70
0x8bfc: call 0x1b90
0x8c10: mov r8,0xffffffff
0x8c17: jmp 0x8b70
0x8c20: mov rcx,rdx
0x8c23: mov r8,0xffffffff
0x8c2a: mov rdx,rsi
0x8c2d: mov rsi,rdi
0x8c30: xor edi,edi
0x8c32: jmp 0x8b70
0x8c40: mov r8,rcx
0x8c43: mov rcx,rdx
0x8c46: mov rdx,rsi
0x8c49: mov rsi,rdi
0x8c4c: xor edi,edi
0x8c4e: jmp 0x8b70
0x8c60: lea rcx,[rip+0x2083d9]
0x8c67: jmp 0x8370
0x8c70: lea rcx,[rip+0x2083c9]
0x8c77: mov rdx,rsi
0x8c7a: mov rsi,rdi
0x8c7d: xor edi,edi
0x8c7f: jmp 0x8370
0x8d19: mov rdi,rbx
0x8d1c: pop rbx
0x8d1d: pop rbp
0x8d1e: pop r12
0x8d20: pop r13
0x8d22: pop r14
0x8d24: jmp 0x1a60
0x8d29: nop qword ptr [rax+0x0]
0x8d47: mov rdi,rbx
0x8d4a: pop rbx
0x8d4b: pop rbp
0x8d4c: pop r12
0x8d4e: pop r13
0x8d50: pop r14
0x8d52: jmp 0x1a60
0x8d80: call 0x1a70
0x8e46: nop qword ptr [rax+rax*1+0x0]
0x8ed5: nop qword ptr [rax]
0x8ed8: mov r8,rcx
0x8edb: mov rcx,rdx
0x8ede: lea rdx,[rip+0x586f]
0x8ee5: mov esi,0x1
0x8eea: xor eax,eax
0x8eec: call 0x1e30
0x8ef1: jmp 0x8ddc
0x8ef6: nop qword ptr [rax+rax*1+0x0]
0x8f55: nop qword ptr [rax]
0x8f91: nop qword ptr [rax+0x0]
0x8fd8: nop qword ptr [rax+rax*1+0x0]
0x9027: nop qword ptr [rax+rax*1+0x0]
0x9084: nop qword ptr [rax+0x0]
0x90b2: nop qword ptr [rax+rax*1+0x0]
0x9166: nop qword ptr [rax+rax*1+0x0]
0x91c0: xor r9d,r9d
0x91c3: cmp [r8],0x0
0x91c7: jz 0x91db
0x91c9: nop qword ptr [rax+0x0]
0x91d0: add r9,0x1
0x91d4: cmp [r8+r9*8+0x0],0x0
0x91d9: jnz 0x91d0
0x91db: jmp 0x8da0
0x9208: mov r11d,eax
0x920b: add r11,qword ptr [r10+0x10]
0x920f: add eax,0x8
0x9212: mov dword ptr [r10],eax
0x9245: call 0x1b90
0x9260: push rbp
0x9261: push rbx
0x9262: mov r10d,0x20
0x9268: xor r11d,r11d
0x926b: sub rsp,0xb8
0x9272: mov rax,0x28
0x927b: mov qword ptr [rsp+0x78],rax
0x9280: xor eax,eax
0x9282: lea rax,[rsp+0xd0]
0x928a: mov qword ptr [rsp+0xa0],r8
0x9292: lea rbx,[rsp+0xd0]
0x929a: lea r8,[rsp+0x20]
0x929f: mov qword ptr [rsp+0xa8],r9
0x92a7: mov [rsp+0x8],0x20
0x92af: mov qword ptr [rsp+0x10],rax
0x92b4: lea rax,[rsp+0x80]
0x92bc: xor r9d,r9d
0x92bf: mov qword ptr [rsp+0x18],rax
0x92c4: mov rbp,rax
0x92c7: nop qword ptr [rax+rax*1+0x0]
0x92d0: cmp r10d,0x2f
0x92d4: jnbe 0x932c
0x92d6: mov eax,r10d
0x92d9: mov r11d,0x1
0x92df: add r10d,0x8
0x92e3: add rax,rbp
0x92e6: mov rax,qword ptr [rax]
0x92e9: test rax,rax
0x92ec: mov qword ptr [r8+r9*8+0x0],rax
0x92f0: jz 0x92fc
0x92f2: add r9,0x1
0x92f6: cmp r9,0xa
0x92fa: jnz 0x92d0
0x92fc: test r11b,r11b
0x92ff: jnz 0x9325
0x9301: call 0x8da0
0x9306: mov rax,qword ptr [rsp+0x78]
0x930b: xor rax,0x28
0x9314: jnz 0x9320
0x9316: add rsp,0xb8
0x931d: pop rbx
0x931e: pop rbp
0x931f: ret
0x9320: call 0x1b90
0x9325: mov dword ptr [rsp+0x8],r10d
0x932a: jmp 0x9301
0x932c: mov rax,rbx
0x932f: add rbx,0x8
0x9333: jmp 0x92e6
0x9340: push rbx
0x9341: lea rsi,[rip+0x545a]
0x9348: mov edx,0x5
0x934d: xor edi,edi
0x934f: call 0x1b60
0x9354: lea rdx,[rip+0x545c]
0x935b: mov rsi,rax
0x935e: mov edi,0x1
0x9363: xor eax,eax
0x9365: call 0x1d70
0x936a: lea rsi,[rip+0x545c]
0x9371: mov edx,0x5
0x9376: xor edi,edi
0x9378: call 0x1b60
0x937d: lea rcx,[rip+0x455c]
0x9384: lea rdx,[rip+0x33e7]
0x938b: mov rsi,rax
0x938e: mov edi,0x1
0x9393: xor eax,eax
0x9395: call 0x1d70
0x939a: mov rbx,qword ptr [rip+0x207d27]
0x93a1: lea rsi,[rip+0x5658]
0x93a8: xor edi,edi
0x93aa: mov edx,0x5
0x93af: call 0x1b60
0x93b4: mov rsi,rbx
0x93b7: mov rdi,rax
0x93ba: pop rbx
0x93bb: jmp 0x1ca0
0x93e0: mov rax,rdi
0x93e3: mul rsi
0x93e6: mov rdi,rax
0x93e9: seto al
0x93ec: test rdi,rdi
0x93ef: js 0x93fb
0x93f1: movzx eax,al
0x93f4: test rax,rax
0x93f7: jnz 0x93fb
0x93f9: jmp 0x93c0
0x93fb: sub rsp,0x8
0x93ff: call 0x9610
0x9442: nop qword ptr [rax+rax*1+0x0]
0x9460: mov rax,rsi
0x9463: mul rdx
0x9466: mov rsi,rax
0x9469: seto al
0x946c: test rsi,rsi
0x946f: js 0x947b
0x9471: movzx eax,al
0x9474: test rax,rax
0x9477: jnz 0x947b
0x9479: jmp 0x9420
0x947b: sub rsp,0x8
0x947f: call 0x9610
0x9490: test rdi,rdi
0x9493: mov r9,rdx
0x9496: mov rcx,qword ptr [rsi]
0x9499: jz 0x94d0
0x949b: xor edx,edx
0x949d: mov rax,0x6148914691236517204
0x94a7: div r9
0x94aa: cmp rax,rcx
0x94ad: jbe 0x94eb
0x94af: mov rax,rcx
0x94b2: shr rax,0x1
0x94b5: lea rcx,[rax+rcx*1+0x1]
0x94ba: mov qword ptr [rsi],rcx
0x94bd: imul rcx,r9
0x94c1: mov rsi,rcx
0x94c4: jmp 0x9420
0x94c9: nop qword ptr [rax+0x0]
0x94d0: test rcx,rcx
0x94d3: jz 0x94f8
0x94d5: mov rax,rcx
0x94d8: mul r9
0x94db: seto dl
0x94de: test rax,rax
0x94e1: movzx edx,dl
0x94e4: js 0x94eb
0x94e6: test rdx,rdx
0x94e9: jz 0x94ba
0x94eb: sub rsp,0x8
0x94ef: call 0x9610
0x94f4: nop qword ptr [rax+0x0]
0x94f8: xor edx,edx
0x94fa: mov eax,0x80
0x94ff: xor r8d,r8d
0x9502: div r9
0x9505: test rax,rax
0x9508: setz r8b
0x950c: lea rcx,[r8+rax*1+0x0]
0x9510: jmp 0x94d5
0x9520: test rdi,rdi
0x9523: mov rax,qword ptr [rsi]
0x9526: jz 0x9550
0x9528: mov rdx,0x6148914691236517203
0x9532: cmp rax,rdx
0x9535: jnbe 0x9561
0x9537: mov rdx,rax
0x953a: shr rdx,0x1
0x953d: lea rax,[rdx+rax*1+0x1]
0x9542: mov qword ptr [rsi],rax
0x9545: mov rsi,rax
0x9548: jmp 0x9420
0x954d: nop qword ptr [rax]
0x9550: test rax,rax
0x9553: mov edx,0x80
0x9558: cmove rax,rdx
0x955c: test rax,rax
0x955f: jns 0x9542
0x9561: sub rsp,0x8
0x9565: call 0x9610
0x9570: push rbx
0x9571: mov rbx,rdi
0x9574: call 0x93c0
0x9579: mov rdx,rbx
0x957c: xor esi,esi
0x957e: mov rdi,rax
0x9581: pop rbx
0x9582: jmp 0x1c40
0x9590: mov rax,rdi
0x9593: sub rsp,0x8
0x9597: mul rsi
0x959a: seto dl
0x959d: test rax,rax
0x95a0: js 0x95b9
0x95a2: movzx edx,dl
0x95a5: test rdx,rdx
0x95a8: jnz 0x95b9
0x95aa: call 0x1cb0
0x95af: test rax,rax
0x95b2: jz 0x95b9
0x95b4: add rsp,0x8
0x95b8: ret
0x95b9: call 0x9610
0x95c0: push rbp
0x95c1: push rbx
0x95c2: mov rbp,rdi
0x95c5: mov rdi,rsi
0x95c8: mov rbx,rsi
0x95cb: sub rsp,0x8
0x95cf: call 0x93c0
0x95d4: add rsp,0x8
0x95d8: mov rdx,rbx
0x95db: mov rsi,rbp
0x95de: pop rbx
0x95df: pop rbp
0x95e0: mov rdi,rax
0x95e3: jmp 0x1ce0
0x95f0: push rbx
0x95f1: mov rbx,rdi
0x95f4: call 0x1b80
0x95f9: mov rdi,rbx
0x95fc: lea rsi,[rax+0x1]
0x9600: pop rbx
0x9601: jmp 0x95c0
0x9640: call 0x1a70
0x96b6: nop qword ptr [rax+rax*1+0x0]
0x96f6: cmp eax,0x22
0x96f9: mov ebp,0x1
0x96fe: jnz 0x9728
0x9713: nop qword ptr [rax+rax*1+0x0]
0x9722: nop qword ptr [rax+rax*1+0x0]
0x9752: nop qword ptr [rax+rax*1+0x0]
0x975c: nop qword ptr [rax+0x0]
0x97fb: nop qword ptr [rax+rax*1+0x0]
0x992c: nop qword ptr [rax+0x0]
0x99b3: nop qword ptr [rax+rax*1+0x0]
0x99d0: call 0x1b90
0x99d5: lea rcx,[rip+0x5204]
0x99dc: lea rsi,[rip+0x50dd]
0x99e3: lea rdi,[rip+0x50f6]
0x99ea: mov edx,0x54
0x99ef: call 0x1c20
0x9b4b: nop qword ptr [rax+rax*1+0x0]
0x9b8a: nop qword ptr [rax+rax*1+0x0]
0x9bec: nop qword ptr [rax+0x0]
0x9c11: nop qword ptr [rax+0x0]
0x9c26: test eax,eax
0x9c28: js 0x9c48
0x9c2a: mov rax,qword ptr [rsp]
0x9c43: nop qword ptr [rax+rax*1+0x0]
0x9c48: call 0x1a80
0x9c4d: cmp [rax],0xc
0x9c50: jz 0x9c5f
0x9c52: xor eax,eax
0x9c54: jmp 0x9c2e
0x9c5f: call 0x9610
0x9c70: push r12
0x9c72: push rbp
0x9c73: push rbx
0x9c74: mov rbx,rdi
0x9c77: call 0x1cf0
0x9c7c: test eax,eax
0x9c7e: mov rdi,rbx
0x9c81: js 0x9cd7
0x9c83: call 0x1d40
0x9c88: test eax,eax
0x9c8a: jnz 0x9cb8
0x9c8c: mov rdi,rbx
0x9c8f: call 0x9f70
0x9c94: test eax,eax
0x9c96: jz 0x9cd4
0x9c98: call 0x1a80
0x9c9d: mov r12d,dword ptr [rax]
0x9ca0: mov rdi,rbx
0x9ca3: mov rbp,rax
0x9ca6: call 0x1b40
0x9cab: test r12d,r12d
0x9cae: jnz 0x9ce0
0x9cb0: pop rbx
0x9cb1: pop rbp
0x9cb2: pop r12
0x9cb4: ret
0x9cb5: nop qword ptr [rax]
0x9cb8: mov rdi,rbx
0x9cbb: call 0x1cf0
0x9cc0: xor esi,esi
0x9cc2: mov edx,0x1
0x9cc7: mov edi,eax
0x9cc9: call 0x1c10
0x9cce: cmp rax,0xffffffff
0x9cd2: jnz 0x9c8c
0x9cd4: mov rdi,rbx
0x9cd7: pop rbx
0x9cd8: pop rbp
0x9cd9: pop r12
0x9cdb: jmp 0x1b40
0x9ce0: mov dword ptr [rbp+0x0],r12d
0x9ce4: mov eax,0xffffffff
0x9ce9: jmp 0x9cb0
0x9d8b: nop qword ptr [rax+rax*1+0x0]
0x9def: nop 
0x9e39: nop qword ptr [rax+0x0]
0x9e5b: nop qword ptr [rax+rax*1+0x0]
0x9f01: nop qword ptr [rax+0x0]
0x9f3d: call 0x1b90
0x9f5a: mov rax,qword ptr [rsp+0x8]
0x9f5f: jmp 0x9e29
0x9f64: mov rax,qword ptr [rsp+0x8]
0x9f69: jmp 0x9e81
0x9f70: test rdi,rdi
0x9f73: push rbx
0x9f74: mov rbx,rdi
0x9f77: jz 0x9f8a
0x9f79: call 0x1d40
0x9f7e: test eax,eax
0x9f80: jz 0x9f8a
0x9f82: test [rbx],0x100
0x9f88: jnz 0x9f98
0x9f8a: mov rdi,rbx
0x9f8d: pop rbx
0x9f8e: jmp 0x1d10
0x9f93: nop qword ptr [rax+rax*1+0x0]
0x9f98: mov rdi,rbx
0x9f9b: mov edx,0x1
0x9fa0: xor esi,esi
0x9fa2: call 0x9fb0
0x9fa7: mov rdi,rbx
0x9faa: pop rbx
0x9fab: jmp 0x1d10
0x9fb0: mov rax,qword ptr [rdi+0x8]
0x9fb4: cmp qword ptr [rdi+0x10],rax
0x9fb8: jz 0x9fc0
0x9fba: jmp 0x1dc0
0x9fbf: nop 
0x9fc0: mov rax,qword ptr [rdi+0x20]
0x9fc4: cmp qword ptr [rdi+0x28],rax
0x9fc8: jnz 0x9fba
0x9fca: cmp [rdi+0x48],0x0
0x9fcf: jnz 0x9fba
0x9fd1: push r12
0x9fd3: push rbp
0x9fd4: mov r12d,edx
0x9fd7: push rbx
0x9fd8: mov rbp,rsi
0x9fdb: mov rbx,rdi
0x9fde: call 0x1cf0
0x9fe3: mov edx,r12d
0x9fe6: mov rsi,rbp
0x9fe9: mov edi,eax
0x9feb: call 0x1c10
0x9ff0: cmp rax,0xffffffff
0x9ff4: jz 0xa002
0x9ff6: and [rbx],0xef
0x9ff9: mov qword ptr [rbx+0x90],rax
0xa000: xor eax,eax
0xa002: pop rbx
0xa003: pop rbp
0xa004: pop r12
0xa006: ret
0xa08e: call 0x1b90
0xa0cb: test rax,rax
0xa0ce: jz 0xa112
0xa0d0: mov rdx,qword ptr [rsp]
0xa0d4: cmp rdx,0x7fffffff
0xa0db: jnbe 0xa0f8
0xa0dd: mov qword ptr [rbx],rax
0xa0e0: mov eax,edx
0xa0e2: mov rbx,qword ptr [rsp+0x8]
0xa0e7: xor rbx,0x28
0xa0f0: jnz 0xa119
0xa0f2: add rsp,0x10
0xa0f6: pop rbx
0xa0f7: ret
0xa0f8: mov rdi,rax
0xa0fb: call 0x1a60
0xa100: call 0x1a80
0xa105: mov [rax],0x4b
0xa10b: mov eax,0xffffffff
0xa110: jmp 0xa0e2
0xa112: mov eax,0xffffffff
0xa117: jmp 0xa0e2
0xa119: call 0x1b90
0xa120: mov edi,0x1
0xa125: jmp 0x5030
0xa130: push r15
0xa132: push r14
0xa134: mov r15,rsi
0xa137: push r13
0xa139: push r12
0xa13b: mov r13,rcx
0xa13e: push rbp
0xa13f: push rbx
0xa140: mov rbp,rdx
0xa143: sub rsp,0x28
0xa147: mov qword ptr [rsp+0x8],rdi
0xa14c: mov qword ptr [rsp+0x18],rdx
0xa151: call 0x1b80
0xa156: mov r14,qword ptr [r15]
0xa159: mov [rsp],0xffffffff
0xa161: test r14,r14
0xa164: jz 0xa21d
0xa16a: mov r12,rax
0xa16d: mov [rsp+0x17],0x0
0xa172: xor ebx,ebx
0xa174: jmp 0xa1c7
0xa176: nop qword ptr [rax+rax*1+0x0]
0xa180: mov rax,qword ptr [rsp+0x18]
0xa185: test rax,rax
0xa188: jz 0xa230
0xa18e: mov rdi,qword ptr [rsp]
0xa192: mov rdx,r13
0xa195: mov rsi,rbp
0xa198: imul rdi,r13
0xa19c: add rdi,rax
0xa19f: call 0x1c90
0xa1a4: test eax,eax
0xa1a6: movzx eax,byte ptr [rsp+0x17]
0xa1ab: mov ecx,0x1
0xa1b0: cmovne eax,ecx
0xa1b3: mov byte ptr [rsp+0x17],al
0xa1b7: add rbx,0x1
0xa1bb: add rbp,r13
0xa1be: mov r14,qword ptr [r15+rbx*8+0x0]
0xa1c2: test r14,r14
0xa1c5: jz 0xa208
0xa1c7: mov rsi,qword ptr [rsp+0x8]
0xa1cc: mov rdx,r12
0xa1cf: mov rdi,r14
0xa1d2: call 0x1ab0
0xa1d7: test eax,eax
0xa1d9: jnz 0xa1b7
0xa1db: mov rdi,r14
0xa1de: call 0x1b80
0xa1e3: cmp rax,r12
0xa1e6: jz 0xa240
0xa1e8: cmp [rsp],0xffffffff
0xa1ed: jnz 0xa180
0xa1ef: mov qword ptr [rsp],rbx
0xa1f3: add rbx,0x1
0xa1f7: add rbp,r13
0xa1fa: mov r14,qword ptr [r15+rbx*8+0x0]
0xa1fe: test r14,r14
0xa201: jnz 0xa1c7
0xa203: nop qword ptr [rax+rax*1+0x0]
0xa208: cmp [rsp+0x17],0x0
0xa20d: mov rax,0xfffffffe
0xa214: cmove rax,qword ptr [rsp]
0xa219: mov qword ptr [rsp],rax
0xa21d: mov rax,qword ptr [rsp]
0xa221: add rsp,0x28
0xa225: pop rbx
0xa226: pop rbp
0xa227: pop r12
0xa229: pop r13
0xa22b: pop r14
0xa22d: pop r15
0xa22f: ret
0xa230: mov [rsp+0x17],0x1
0xa235: jmp 0xa1b7
0xa237: nop qword ptr [rax+rax*1+0x0]
0xa240: mov qword ptr [rsp],rbx
0xa244: jmp 0xa21d
0xa250: cmp rdx,0xffffffff
0xa254: push r12
0xa256: mov edx,0x5
0xa25b: push rbp
0xa25c: mov r12,rsi
0xa25f: push rbx
0xa260: mov rbp,rdi
0xa263: jz 0xa2b0
0xa265: lea rsi,[rip+0x499a]
0xa26c: xor edi,edi
0xa26e: call 0x1b60
0xa273: mov rbx,rax
0xa276: mov rsi,rbp
0xa279: mov edi,0x1
0xa27e: call 0x8c90
0xa283: mov rdx,r12
0xa286: mov rbp,rax
0xa289: mov esi,0x8
0xa28e: xor edi,edi
0xa290: call 0x88c0
0xa295: mov r8,rbp
0xa298: mov rdx,rbx
0xa29b: mov rcx,rax
0xa29e: pop rbx
0xa29f: pop rbp
0xa2a0: pop r12
0xa2a2: xor esi,esi
0xa2a4: xor edi,edi
0xa2a6: xor eax,eax
0xa2a8: jmp 0x1d90
0xa2ad: nop qword ptr [rax]
0xa2b0: lea rsi,[rip+0x4934]
0xa2b7: xor edi,edi
0xa2b9: call 0x1b60
0xa2be: mov rbx,rax
0xa2c1: jmp 0xa276
0xa2d0: push r15
0xa2d2: push r14
0xa2d4: mov r14,rdi
0xa2d7: push r13
0xa2d9: push r12
0xa2db: xor edi,edi
0xa2dd: push rbp
0xa2de: push rbx
0xa2df: mov rbp,rsi
0xa2e2: lea rsi,[rip+0x493a]
0xa2e9: mov r12,rdx
0xa2ec: mov edx,0x5
0xa2f1: sub rsp,0x8
0xa2f5: mov rbx,qword ptr [rip+0x206e04]
0xa2fc: call 0x1b60
0xa301: mov rdi,rax
0xa304: mov rsi,rbx
0xa307: call 0x1ca0
0xa30c: mov r15,qword ptr [r14]
0xa30f: test r15,r15
0xa312: jz 0xa3a8
0xa318: xor r13d,r13d
0xa31b: xor ebx,ebx
0xa31d: jmp 0xa358
0xa31f: nop 
0xa320: mov rdi,r15
0xa323: add rbx,0x1
0xa327: mov r13,rbp
0xa32a: call 0x8cb0
0xa32f: mov rdi,qword ptr [rip+0x206dca]
0xa336: lea rdx,[rip+0x48fb]
0xa33d: mov rcx,rax
0xa340: mov esi,0x1
0xa345: xor eax,eax
0xa347: add rbp,r12
0xa34a: call 0x1e30
0xa34f: mov r15,qword ptr [r14+rbx*8+0x0]
0xa353: test r15,r15
0xa356: jz 0xa3a8
0xa358: test rbx,rbx
0xa35b: jz 0xa320
0xa35d: mov rdx,r12
0xa360: mov rsi,rbp
0xa363: mov rdi,r13
0xa366: call 0x1c90
0xa36b: test eax,eax
0xa36d: jnz 0xa320
0xa36f: mov rdi,r15
0xa372: add rbx,0x1
0xa376: add rbp,r12
0xa379: call 0x8cb0
0xa37e: mov rdi,qword ptr [rip+0x206d7b]
0xa385: lea rdx,[rip+0x22de]
0xa38c: mov rcx,rax
0xa38f: mov esi,0x1
0xa394: xor eax,eax
0xa396: call 0x1e30
0xa39b: mov r15,qword ptr [r14+rbx*8+0x0]
0xa39f: test r15,r15
0xa3a2: jnz 0xa358
0xa3a4: nop qword ptr [rax+0x0]
0xa3a8: mov rdi,qword ptr [rip+0x206d51]
0xa3af: mov rax,qword ptr [rdi+0x28]
0xa3b3: cmp rax,qword ptr [rdi+0x30]
0xa3b7: jnb 0xa3d8
0xa3b9: lea rdx,[rax+0x1]
0xa3bd: mov qword ptr [rdi+0x28],rdx
0xa3c1: mov [rax],0xa
0xa3c4: add rsp,0x8
0xa3c8: pop rbx
0xa3c9: pop rbp
0xa3ca: pop r12
0xa3cc: pop r13
0xa3ce: pop r14
0xa3d0: pop r15
0xa3d2: ret
0xa3d3: nop qword ptr [rax+rax*1+0x0]
0xa3d8: add rsp,0x8
0xa3dc: mov esi,0xa
0xa3e1: pop rbx
0xa3e2: pop rbp
0xa3e3: pop r12
0xa3e5: pop r13
0xa3e7: pop r14
0xa3e9: pop r15
0xa3eb: jmp 0x1be0
0xa3f0: push r15
0xa3f2: push r14
0xa3f4: mov r14,rdi
0xa3f7: push r13
0xa3f9: push r12
0xa3fb: mov r12,rsi
0xa3fe: push rbp
0xa3ff: push rbx
0xa400: mov rbp,rcx
0xa403: mov rbx,rdx
0xa406: mov rcx,r8
0xa409: mov rdx,rbp
0xa40c: sub rsp,0x8
0xa410: mov rsi,rbx
0xa413: mov rdi,r12
0xa416: mov r15,r8
0xa419: mov r13,r9
0xa41c: call 0xa130
0xa421: test rax,rax
0xa424: js 0xa435
0xa426: add rsp,0x8
0xa42a: pop rbx
0xa42b: pop rbp
0xa42c: pop r12
0xa42e: pop r13
0xa430: pop r14
0xa432: pop r15
0xa434: ret
0xa435: mov rdx,rax
0xa438: mov rsi,r12
0xa43b: mov rdi,r14
0xa43e: call 0xa250
0xa443: mov rdx,r15
0xa446: mov rsi,rbp
0xa449: mov rdi,rbx
0xa44c: call 0xa2d0
0xa451: call r13
0xa454: mov rax,0xffffffff
0xa45b: jmp 0xa426
0xa460: push r14
0xa462: push r13
0xa464: push r12
0xa466: push rbp
0xa467: push rbx
0xa468: mov r14,qword ptr [rsi]
0xa46b: test r14,r14
0xa46e: jz 0xa4a1
0xa470: mov r12,rcx
0xa473: mov r13,rdi
0xa476: mov rbp,rdx
0xa479: lea rbx,[rsi+0x8]
0xa47d: jmp 0xa48f
0xa47f: nop 
0xa480: mov r14,qword ptr [rbx]
0xa483: add rbp,r12
0xa486: add rbx,0x8
0xa48a: test r14,r14
0xa48d: jz 0xa4a1
0xa48f: mov rdx,r12
0xa492: mov rsi,rbp
0xa495: mov rdi,r13
0xa498: call 0x1c90
0xa49d: test eax,eax
0xa49f: jnz 0xa480
0xa4a1: pop rbx
0xa4a2: mov rax,r14
0xa4a5: pop rbp
0xa4a6: pop r12
0xa4a8: pop r13
0xa4aa: pop r14
0xa4ac: ret
0xa4ea: nop qword ptr [rax+rax*1+0x0]
0xa536: nop qword ptr [rax+rax*1+0x0]
0xa754: nop qword ptr [rax+0x0]
0xa783: nop qword ptr [rax+rax*1+0x0]
0xa817: movzx edx,byte ptr [r13+0x48]
0xa81c: mov rax,qword ptr [r13+0x50]
0xa820: cmp dl,0x25
0xa823: jz 0xafb8
0xa829: cmp rax,0xffffffff
0xa82d: jz 0xb476
0xa833: mov r8,qword ptr [rbp-0x3a8]
0xa83a: shl rax,0x5
0xa83e: add rax,r8
0xa841: cmp dl,0x6e
0xa844: mov edi,dword ptr [rax]
0xa846: mov dword ptr [rbp-0x3d0],edi
0xa84c: jz 0xb030
0xa852: mov eax,dword ptr [r13+0x10]
0xa856: mov rdi,qword ptr [rbp-0x3d8]
0xa85d: test al,0x1
0xa85f: mov [rdi],0x25
0xa862: lea rbx,[rdi+0x1]
0xa866: jz 0xa877
0xa868: mov rdi,qword ptr [rbp-0x3d8]
0xa86f: lea rbx,[rdi+0x2]
0xa873: mov [rdi+0x1],0x27
0xa877: test al,0x2
0xa879: jz 0xa882
0xa87b: mov [rbx],0x2d
0xa87e: add rbx,0x1
0xa882: test al,0x4
0xa884: jz 0xa88d
0xa886: mov [rbx],0x2b
0xa889: add rbx,0x1
0xa88d: test al,0x8
0xa88f: jz 0xa898
0xa891: mov [rbx],0x20
0xa894: add rbx,0x1
0xa898: test al,0x10
0xa89a: jz 0xa8a3
0xa89c: mov [rbx],0x23
0xa89f: add rbx,0x1
0xa8a3: test al,0x40
0xa8a5: jz 0xa8ae
0xa8a7: mov [rbx],0x49
0xa8aa: add rbx,0x1
0xa8ae: test al,0x20
0xa8b0: jz 0xa8b9
0xa8b2: mov [rbx],0x30
0xa8b5: add rbx,0x1
0xa8b9: mov rsi,qword ptr [r13+0x18]
0xa8bd: mov rdx,qword ptr [r13+0x20]
0xa8c1: cmp rsi,rdx
0xa8c4: jz 0xa8f6
0xa8c6: mov rcx,rdx
0xa8c9: mov rdi,rbx
0xa8cc: mov qword ptr [rbp-0x3e0],r8
0xa8d3: sub rcx,rsi
0xa8d6: mov rdx,rcx
0xa8d9: mov qword ptr [rbp-0x3c8],rcx
0xa8e0: call 0x1ce0
0xa8e5: mov rcx,qword ptr [rbp-0x3c8]
0xa8ec: mov r8,qword ptr [rbp-0x3e0]
0xa8f3: add rbx,rcx
0xa8f6: mov rsi,qword ptr [r13+0x30]
0xa8fa: mov rdx,qword ptr [r13+0x38]
0xa8fe: cmp rsi,rdx
0xa901: jz 0xa933
0xa903: mov rcx,rdx
0xa906: mov rdi,rbx
0xa909: mov qword ptr [rbp-0x3e0],r8
0xa910: sub rcx,rsi
0xa913: mov rdx,rcx
0xa916: mov qword ptr [rbp-0x3c8],rcx
0xa91d: call 0x1ce0
0xa922: mov rcx,qword ptr [rbp-0x3c8]
0xa929: mov r8,qword ptr [rbp-0x3e0]
0xa930: add rbx,rcx
0xa933: mov edi,dword ptr [rbp-0x3d0]
0xa939: cmp edi,0x10
0xa93c: jnbe 0xa96b
0xa93e: mov eax,0x1
0xa943: mov ecx,edi
0xa945: shl rax,cl
0xa948: test eax,0x14180
0xa94d: jnz 0xa964
0xa94f: test ah,0x10
0xa952: jnz 0xb2b0
0xa958: test ah,0x6
0xa95b: jz 0xa96b
0xa95d: mov [rbx],0x6c
0xa960: add rbx,0x1
0xa964: mov [rbx],0x6c
0xa967: add rbx,0x1
0xa96b: movzx eax,byte ptr [r13+0x48]
0xa970: mov [rbx+0x1],0x0
0xa974: mov byte ptr [rbx],al
0xa976: mov rax,qword ptr [r13+0x28]
0xa97a: cmp rax,0xffffffff
0xa97e: jz 0xb0b0
0xa984: shl rax,0x5
0xa988: add rax,r8
0xa98b: cmp [rax],0x5
0xa98e: jnz 0xb476
0xa994: mov eax,dword ptr [rax+0x10]
0xa997: mov [rbp-0x3e0],0x1
0xa9a1: mov dword ptr [rbp-0x3b8],eax
0xa9a7: mov rax,qword ptr [r13+0x40]
0xa9ab: cmp rax,0xffffffff
0xa9af: jz 0xa9dc
0xa9b1: shl rax,0x5
0xa9b5: add r8,rax
0xa9b8: cmp [r8],0x5
0xa9bc: jnz 0xb476
0xa9c2: mov eax,dword ptr [rbp-0x3e0]
0xa9c8: mov edx,dword ptr [r8+0x10]
0xa9cc: mov dword ptr [rbp+rax*4-0x3b8],edx
0xa9d3: lea eax,[rax+0x1]
0xa9d6: mov dword ptr [rbp-0x3e0],eax
0xa9dc: mov rax,r14
0xa9df: xor edx,edx
0xa9e1: add rax,0x2
0xa9e5: jb 0xb64c
0xa9eb: cmp r12,rax
0xa9ee: jnb 0xaa3b
0xa9f0: test r12,r12
0xa9f3: jnz 0xb218
0xa9f9: cmp rax,0xc
0xa9fd: jnbe 0xb230
0xaa03: mov r12d,0xc
0xaa09: cmp r15,qword ptr [rbp-0x3e8]
0xaa10: setz dl
0xaa13: test r15,r15
0xaa16: jz 0xb260
0xaa1c: test dl,dl
0xaa1e: jnz 0xb260
0xaa24: mov rsi,r12
0xaa27: mov rdi,r15
0xaa2a: call 0x1d50
0xaa2f: test rax,rax
0xaa32: jz 0xa6b5
0xaa38: mov r15,rax
0xaa3b: mov [r15+r14*1+0x0],0x0
0xaa40: call 0x1a80
0xaa45: mov qword ptr [rbp-0x3c8],rax
0xaa4c: mov eax,dword ptr [rax]
0xaa4e: mov qword ptr [rbp-0x3f8],rbx
0xaa55: mov dword ptr [rbp-0x424],eax
0xaa5b: nop qword ptr [rax+rax*1+0x0]
0xaa60: mov rax,qword ptr [rbp-0x3c8]
0xaa67: mov rbx,r12
0xaa6a: mov r10d,0x7fffffff
0xaa70: sub rbx,r14
0xaa73: mov [rbp-0x3bc],0xffffffff
0xaa7d: cmp rbx,0x7fffffff
0xaa84: mov [rax],0x0
0xaa8a: mov eax,dword ptr [rbp-0x3d0]
0xaa90: cmovbe r10,rbx
0xaa94: cmp eax,0x11
0xaa97: jnbe 0xb476
0xaa9d: lea rsi,[rip+0x41ac]
0xaaa4: movsxd rax,dword ptr [rsi+rax*4+0x0]
0xaaa8: add rax,rsi
0xaaab: jmp rax
0xaaad: nop qword ptr [rax]
0xaab0: mov rax,qword ptr [r13+0x50]
0xaab4: lea rdi,[r15+r14*1+0x0]
0xaab8: shl rax,0x5
0xaabc: add rax,qword ptr [rbp-0x3a8]
0xaac3: mov r9,qword ptr [rax+0x10]
0xaac7: mov eax,dword ptr [rbp-0x3e0]
0xaacd: cmp eax,0x1
0xaad0: jz 0xaf98
0xaad6: cmp eax,0x2
0xaad9: jz 0xaf80
0xaadf: sub rsp,0x8
0xaae3: push qword ptr [rbp-0x3f0]
0xaae9: mov r8,qword ptr [rbp-0x3d8]
0xaaf0: mov rsi,r10
0xaaf3: mov rcx,0xffffffff
0xaafa: mov edx,0x1
0xaaff: xor eax,eax
0xab01: mov qword ptr [rbp-0x430],r10
0xab08: call 0x1a40
0xab0d: pop rsi
0xab0e: pop rdi
0xab0f: mov r10,qword ptr [rbp-0x430]
0xab16: mov ecx,dword ptr [rbp-0x3bc]
0xab1c: test ecx,ecx
0xab1e: js 0xac5c
0xab24: movsxd rdx,ecx
0xab27: cmp rdx,r10
0xab2a: jnb 0xab3a
0xab2c: add rdx,r15
0xab2f: cmp [rdx+r14*1+0x0],0x0
0xab34: jnz 0xb476
0xab3a: cmp ecx,eax
0xab3c: jnl 0xab46
0xab3e: mov dword ptr [rbp-0x3bc],eax
0xab44: mov ecx,eax
0xab46: lea eax,[rcx+0x1]
0xab49: cmp rax,r10
0xab4c: jb 0xb380
0xab52: cmp rbx,0x7ffffffe
0xab59: jnbe 0xb3a0
0xab5f: lea rsi,[r12+r12*1+0x0]
0xab63: lea edx,[rcx+0x2]
0xab66: test r12,r12
0xab69: mov rax,0xffffffff
0xab70: cmovns rax,rsi
0xab74: add rdx,r14
0xab77: jb 0xb638
0xab7d: cmp rax,rdx
0xab80: cmovnae rax,rdx
0xab84: cmp r12,rax
0xab87: jnb 0xaa60
0xab8d: test r12,r12
0xab90: js 0xa6c1
0xab96: cmp rsi,rax
0xab99: mov r12,rsi
0xab9c: jnb 0xabab
0xab9e: cmp rax,0xffffffff
0xaba2: jz 0xa6c1
0xaba8: mov r12,rax
0xabab: cmp r15,qword ptr [rbp-0x3e8]
0xabb2: setz bl
0xabb5: test r15,r15
0xabb8: jz 0xaf40
0xabbe: test bl,bl
0xabc0: jnz 0xaf40
0xabc6: mov rsi,r12
0xabc9: mov rdi,r15
0xabcc: call 0x1d50
0xabd1: test rax,rax
0xabd4: jz 0xa6c1
0xabda: mov r15,rax
0xabdd: jmp 0xaa60
0xabe2: nop qword ptr [rax+rax*1+0x0]
0xabe8: mov rax,qword ptr [r13+0x50]
0xabec: lea rdi,[r15+r14*1+0x0]
0xabf0: shl rax,0x5
0xabf4: add rax,qword ptr [rbp-0x3a8]
0xabfb: mov r9d,dword ptr [rax+0x10]
0xabff: mov eax,dword ptr [rbp-0x3e0]
0xac05: cmp eax,0x1
0xac08: jz 0xae40
0xac0e: cmp eax,0x2
0xac11: jz 0xae88
0xac17: sub rsp,0x8
0xac1b: push qword ptr [rbp-0x3f0]
0xac21: mov r8,qword ptr [rbp-0x3d8]
0xac28: mov rcx,0xffffffff
0xac2f: mov edx,0x1
0xac34: mov rsi,r10
0xac37: xor eax,eax
0xac39: mov qword ptr [rbp-0x430],r10
0xac40: call 0x1a40
0xac45: pop rdx
0xac46: pop rcx
0xac47: mov ecx,dword ptr [rbp-0x3bc]
0xac4d: mov r10,qword ptr [rbp-0x430]
0xac54: test ecx,ecx
0xac56: jns 0xab24
0xac5c: mov rdi,qword ptr [rbp-0x3f8]
0xac63: cmp [rdi+0x1],0x0
0xac67: jnz 0xafa8
0xac6d: test eax,eax
0xac6f: jns 0xab3e
0xac75: mov rax,qword ptr [rbp-0x3c8]
0xac7c: mov ebx,dword ptr [rax]
0xac7e: test ebx,ebx
0xac80: jnz 0xaca0
0xac82: movzx eax,byte ptr [r13+0x48]
0xac87: mov ebx,0x16
0xac8c: and eax,0xef
0xac8f: cmp al,0x63
0xac91: mov eax,0x54
0xac96: cmove ebx,eax
0xac99: nop qword ptr [rax+0x0]
0xaca0: cmp r15,qword ptr [rbp-0x3e8]
0xaca7: jz 0xacb2
0xaca9: test r15,r15
0xacac: jnz 0xb45c
0xacb2: mov rax,qword ptr [rbp-0x420]
0xacb9: test rax,rax
0xacbc: jz 0xacc6
0xacbe: mov rdi,rax
0xacc1: call 0x1a60
0xacc6: mov rax,qword ptr [rbp-0x408]
0xaccd: mov rdi,qword ptr [rbp-0x2b8]
0xacd4: add rax,0x20
0xacd8: cmp rdi,rax
0xacdb: jz 0xace2
0xacdd: call 0x1a60
0xace2: mov rax,qword ptr [rbp-0x410]
0xace9: mov rdi,qword ptr [rbp-0x3a8]
0xacf0: add rax,0x10
0xacf4: cmp rdi,rax
0xacf7: jz 0xacfe
0xacf9: call 0x1a60
0xacfe: mov rax,qword ptr [rbp-0x3c8]
0xad05: xor r15d,r15d
0xad08: mov dword ptr [rax],ebx
0xad0a: jmp 0xa72f
0xad0f: nop 
0xad10: mov rax,qword ptr [r13+0x50]
0xad14: lea rdi,[r15+r14*1+0x0]
0xad18: shl rax,0x5
0xad1c: add rax,qword ptr [rbp-0x3a8]
0xad23: fld st0,[rax+0x10]
0xad26: mov eax,dword ptr [rbp-0x3e0]
0xad2c: cmp eax,0x1
0xad2f: jz 0xb360
0xad35: cmp eax,0x2
0xad38: jnz 0xb200
0xad3e: mov eax,dword ptr [rbp-0x3b4]
0xad44: sub rsp,0x8
0xad48: push qword ptr [rbp-0x3f0]
0xad4e: mov r9d,dword ptr [rbp-0x3b8]
0xad55: mov r8,qword ptr [rbp-0x3d8]
0xad5c: mov rsi,r10
0xad5f: sub rsp,0x18
0xad63: mov rcx,0xffffffff
0xad6a: mov edx,0x1
0xad6f: fstp [rsp+0x8],st0
0xad73: push rax
0xad74: xor eax,eax
0xad76: mov qword ptr [rbp-0x430],r10
0xad7d: call 0x1a40
0xad82: add rsp,0x30
0xad86: mov r10,qword ptr [rbp-0x430]
0xad8d: jmp 0xab16
0xad92: nop qword ptr [rax+rax*1+0x0]
0xad98: mov rax,qword ptr [r13+0x50]
0xad9c: lea rdi,[r15+r14*1+0x0]
0xada0: shl rax,0x5
0xada4: add rax,qword ptr [rbp-0x3a8]
0xadab: movsd xmm0,dword ptr [rax+0x10]
0xadb0: mov eax,dword ptr [rbp-0x3e0]
0xadb6: cmp eax,0x1
0xadb9: jz 0xb350
0xadbf: cmp eax,0x2
0xadc2: jnz 0xb1c0
0xadc8: mov eax,dword ptr [rbp-0x3b4]
0xadce: push qword ptr [rbp-0x3f0]
0xadd4: push rax
0xadd5: mov r9d,dword ptr [rbp-0x3b8]
0xaddc: mov r8,qword ptr [rbp-0x3d8]
0xade3: mov rsi,r10
0xade6: mov rcx,0xffffffff
0xaded: mov edx,0x1
0xadf2: mov eax,0x1
0xadf7: mov qword ptr [rbp-0x430],r10
0xadfe: call 0x1a40
0xae03: pop r8
0xae05: mov r10,qword ptr [rbp-0x430]
0xae0c: pop r9
0xae0e: jmp 0xab16
0xae13: nop qword ptr [rax+rax*1+0x0]
0xae18: mov rax,qword ptr [r13+0x50]
0xae1c: lea rdi,[r15+r14*1+0x0]
0xae20: shl rax,0x5
0xae24: add rax,qword ptr [rbp-0x3a8]
0xae2b: movzx r9d,byte ptr [rax+0x10]
0xae30: mov eax,dword ptr [rbp-0x3e0]
0xae36: cmp eax,0x1
0xae39: jnz 0xac0e
0xae3f: nop 
0xae40: push qword ptr [rbp-0x3f0]
0xae46: push r9
0xae48: mov r9d,dword ptr [rbp-0x3b8]
0xae4f: jmp 0xac21
0xae54: nop qword ptr [rax+0x0]
0xae58: mov rax,qword ptr [r13+0x50]
0xae5c: lea rdi,[r15+r14*1+0x0]
0xae60: shl rax,0x5
0xae64: add rax,qword ptr [rbp-0x3a8]
0xae6b: movsx r9d,byte ptr [rax+0x10]
0xae70: mov eax,dword ptr [rbp-0x3e0]
0xae76: cmp eax,0x1
0xae79: jz 0xae40
0xae7b: cmp eax,0x2
0xae7e: jnz 0xac17
0xae84: nop qword ptr [rax+0x0]
0xae88: sub rsp,0x8
0xae8c: push qword ptr [rbp-0x3f0]
0xae92: push r9
0xae94: mov eax,dword ptr [rbp-0x3b4]
0xae9a: push rax
0xae9b: mov r9d,dword ptr [rbp-0x3b8]
0xaea2: mov r8,qword ptr [rbp-0x3d8]
0xaea9: mov rsi,r10
0xaeac: mov rcx,0xffffffff
0xaeb3: mov edx,0x1
0xaeb8: xor eax,eax
0xaeba: mov qword ptr [rbp-0x430],r10
0xaec1: call 0x1a40
0xaec6: add rsp,0x20
0xaeca: mov r10,qword ptr [rbp-0x430]
0xaed1: jmp 0xab16
0xaed6: nop qword ptr [rax+rax*1+0x0]
0xaee0: mov rax,qword ptr [r13+0x50]
0xaee4: lea rdi,[r15+r14*1+0x0]
0xaee8: shl rax,0x5
0xaeec: add rax,qword ptr [rbp-0x3a8]
0xaef3: movzx r9d,byte ptr [rax+0x10]
0xaef8: mov eax,dword ptr [rbp-0x3e0]
0xaefe: cmp eax,0x1
0xaf01: jnz 0xac0e
0xaf07: jmp 0xae40
0xaf0c: nop qword ptr [rax+0x0]
0xaf10: mov rax,qword ptr [r13+0x50]
0xaf14: lea rdi,[r15+r14*1+0x0]
0xaf18: shl rax,0x5
0xaf1c: add rax,qword ptr [rbp-0x3a8]
0xaf23: movsx r9d,byte ptr [rax+0x10]
0xaf28: mov eax,dword ptr [rbp-0x3e0]
0xaf2e: cmp eax,0x1
0xaf31: jnz 0xac0e
0xaf37: jmp 0xae40
0xaf3c: nop qword ptr [rax+0x0]
0xaf40: mov rdi,r12
0xaf43: call 0x1d00
0xaf48: test rax,rax
0xaf4b: mov rcx,rax
0xaf4e: jz 0xa6c1
0xaf54: test r14,r14
0xaf57: jz 0xb010
0xaf5d: test bl,bl
0xaf5f: jz 0xb010
0xaf65: mov rsi,r15
0xaf68: mov rdx,r14
0xaf6b: mov rdi,rax
0xaf6e: call 0x1ce0
0xaf73: mov r15,rax
0xaf76: jmp 0xaa60
0xaf7b: nop qword ptr [rax+rax*1+0x0]
0xaf80: sub rsp,0x8
0xaf84: push qword ptr [rbp-0x3f0]
0xaf8a: push r9
0xaf8c: jmp 0xae94
0xaf91: nop qword ptr [rax+0x0]
0xaf98: push qword ptr [rbp-0x3f0]
0xaf9e: push r9
0xafa0: jmp 0xae48
0xafa5: nop qword ptr [rax]
0xafa8: mov [rdi+0x1],0x0
0xafac: jmp 0xaa60
0xafb1: nop qword ptr [rax+0x0]
0xafb8: cmp rax,0xffffffff
0xafbc: jnz 0xb476
0xafc2: mov rax,r14
0xafc5: add rax,0x1
0xafc9: mov rbx,rax
0xafcc: jnb 0xb058
0xafd2: cmp r12,0xffffffff
0xafd6: jnz 0xa6b5
0xafdc: mov rbx,r12
0xafdf: mov [r15+r14*1+0x0],0x25
0xafe4: mov r8,qword ptr [r13+0x8]
0xafe8: add r13,0x58
0xafec: mov rcx,qword ptr [r13+0x0]
0xaff0: add [rbp-0x400],0x1
0xaff8: cmp rcx,r8
0xaffb: jnz 0xa699
0xb009: nop qword ptr [rax+0x0]
0xb010: mov r15,rcx
0xb013: jmp 0xaa60
0xb029: nop qword ptr [rax+0x0]
0xb030: mov edx,edi
0xb032: sub edx,0x12
0xb035: cmp edx,0x4
0xb038: jnbe 0xb476
0xb03e: lea rdi,[rip+0x3c53]
0xb045: mov rax,qword ptr [rax+0x10]
0xb049: movsxd rdx,dword ptr [rdi+rdx*4+0x0]
0xb04d: add rdx,rdi
0xb050: jmp rdx
0xb052: nop qword ptr [rax+rax*1+0x0]
0xb058: cmp r12,rax
0xb05b: jnb 0xafdf
0xb05d: test r12,r12
0xb060: jnz 0xb430
0xb066: cmp rax,0xc
0xb06a: jnbe 0xb442
0xb070: mov r12d,0xc
0xb076: cmp r15,qword ptr [rbp-0x3e8]
0xb07d: setz dl
0xb080: test r15,r15
0xb083: jz 0xb2f0
0xb089: test dl,dl
0xb08b: jnz 0xb2f0
0xb091: mov rsi,r12
0xb094: mov rdi,r15
0xb097: call 0x1d50
0xb09c: test rax,rax
0xb09f: jz 0xb19b
0xb0a5: mov r15,rax
0xb0a8: jmp 0xafdf
0xb0ad: nop qword ptr [rax]
0xb0b0: mov [rbp-0x3e0],0x0
0xb0ba: jmp 0xa9a7
0xb0bf: nop 
0xb178: nop qword ptr [rax+rax*1+0x0]
0xb188: nop qword ptr [rax+rax*1+0x0]
0xb190: mov qword ptr [rax],r14
0xb193: mov rbx,r14
0xb196: jmp 0xafe4
0xb1bd: nop qword ptr [rax]
0xb1c0: mov r9,qword ptr [rbp-0x3f0]
0xb1c7: mov r8,qword ptr [rbp-0x3d8]
0xb1ce: mov rsi,r10
0xb1d1: mov rcx,0xffffffff
0xb1d8: mov edx,0x1
0xb1dd: mov eax,0x1
0xb1e2: mov qword ptr [rbp-0x430],r10
0xb1e9: call 0x1a40
0xb1ee: mov r10,qword ptr [rbp-0x430]
0xb1f5: jmp 0xab16
0xb1fa: nop qword ptr [rax+rax*1+0x0]
0xb200: sub rsp,0x10
0xb204: mov r9,qword ptr [rbp-0x3f0]
0xb20b: fstp [rsp],st0
0xb20e: jmp 0xaae9
0xb213: nop qword ptr [rax+rax*1+0x0]
0xb218: js 0xa6b5
0xb21e: add r12,r12
0xb221: cmp r12,rax
0xb224: jnb 0xaa09
0xb22a: nop qword ptr [rax+rax*1+0x0]
0xb230: test rdx,rdx
0xb233: jnz 0xa6b5
0xb239: cmp rax,0xffffffff
0xb23d: jz 0xa6b5
0xb243: cmp r15,qword ptr [rbp-0x3e8]
0xb24a: mov r12,rax
0xb24d: setz dl
0xb250: test r15,r15
0xb253: jnz 0xaa1c
0xb259: nop qword ptr [rax+0x0]
0xb260: mov rdi,r12
0xb263: mov byte ptr [rbp-0x3c8],dl
0xb269: call 0x1d00
0xb26e: test rax,rax
0xb271: mov rcx,rax
0xb274: movzx edx,byte ptr [rbp-0x3c8]
0xb27b: jz 0xa6b5
0xb281: test r14,r14
0xb284: jz 0xb420
0xb28a: test dl,dl
0xb28c: jz 0xb420
0xb292: mov rsi,r15
0xb295: mov rdx,r14
0xb298: mov rdi,rax
0xb29b: call 0x1ce0
0xb2a0: mov r15,rax
0xb2a3: jmp 0xaa3b
0xb2a8: nop qword ptr [rax+rax*1+0x0]
0xb2b0: mov [rbx],0x4c
0xb2b3: add rbx,0x1
0xb2b7: jmp 0xa96b
0xb2bc: nop qword ptr [rax+0x0]
0xb2c0: mov byte ptr [rax],r14b
0xb2c3: mov rbx,r14
0xb2c6: jmp 0xafe4
0xb2cb: nop qword ptr [rax+rax*1+0x0]
0xb2d0: mov dword ptr [rax],r14d
0xb2d3: mov rbx,r14
0xb2d6: jmp 0xafe4
0xb2db: nop qword ptr [rax+rax*1+0x0]
0xb2e0: mov word ptr [rax],r14w
0xb2e4: mov rbx,r14
0xb2e7: jmp 0xafe4
0xb2ec: nop qword ptr [rax+0x0]
0xb2f0: mov rdi,r12
0xb2f3: mov byte ptr [rbp-0x3c8],dl
0xb2f9: call 0x1d00
0xb2fe: test rax,rax
0xb301: mov rcx,rax
0xb304: movzx edx,byte ptr [rbp-0x3c8]
0xb30b: jz 0xa6b5
0xb311: test r14,r14
0xb314: jz 0xb454
0xb31a: test dl,dl
0xb31c: jz 0xb454
0xb322: mov rsi,r15
0xb325: mov rdx,r14
0xb328: mov rdi,rax
0xb32b: call 0x1ce0
0xb330: mov r15,rax
0xb333: jmp 0xafdf
0xb338: nop qword ptr [rax+rax*1+0x0]
0xb348: nop qword ptr [rax+rax*1+0x0]
0xb350: sub rsp,0x8
0xb354: push qword ptr [rbp-0x3f0]
0xb35a: jmp 0xadd5
0xb35f: nop 
0xb360: sub rsp,0x8
0xb364: push qword ptr [rbp-0x3f0]
0xb36a: sub rsp,0x10
0xb36e: fstp [rsp],st0
0xb371: jmp 0xae9b
0xb376: nop qword ptr [rax+rax*1+0x0]
0xb380: mov rax,qword ptr [rbp-0x3c8]
0xb387: mov edi,dword ptr [rbp-0x424]
0xb38d: movsxd rbx,ecx
0xb390: add rbx,r14
0xb393: mov dword ptr [rax],edi
0xb395: jmp 0xafe4
0xb39a: nop qword ptr [rax+rax*1+0x0]
0xb3a0: cmp r15,qword ptr [rbp-0x3e8]
0xb3a7: jz 0xb3b2
0xb3a9: test r15,r15
0xb3ac: jnz 0xb469
0xb3b2: mov rax,qword ptr [rbp-0x420]
0xb3b9: test rax,rax
0xb3bc: jz 0xb3c6
0xb3be: mov rdi,rax
0xb3c1: call 0x1a60
0xb3c6: mov rax,qword ptr [rbp-0x408]
0xb3cd: mov rdi,qword ptr [rbp-0x2b8]
0xb3d4: add rax,0x20
0xb3d8: cmp rdi,rax
0xb3db: jz 0xb3e2
0xb3dd: call 0x1a60
0xb3e2: mov rax,qword ptr [rbp-0x410]
0xb3e9: mov rdi,qword ptr [rbp-0x3a8]
0xb3f0: add rax,0x10
0xb3f4: cmp rdi,rax
0xb3f7: jz 0xb3fe
0xb3f9: call 0x1a60
0xb3fe: mov rax,qword ptr [rbp-0x3c8]
0xb405: xor r15d,r15d
0xb408: mov [rax],0x4b
0xb40e: jmp 0xa72f
0xb413: nop qword ptr [rax+rax*1+0x0]
0xb420: mov r15,rcx
0xb423: jmp 0xaa3b
0xb428: nop qword ptr [rax+rax*1+0x0]
0xb430: js 0xa6b5
0xb436: add r12,r12
0xb439: cmp r12,rax
0xb43c: jnb 0xb076
0xb442: cmp rax,0xffffffff
0xb446: jz 0xa6b5
0xb44c: mov r12,rax
0xb44f: jmp 0xb076
0xb454: mov r15,rcx
0xb457: jmp 0xafdf
0xb45c: mov rdi,r15
0xb45f: call 0x1a60
0xb464: jmp 0xacb2
0xb469: mov rdi,r15
0xb46c: call 0x1a60
0xb471: jmp 0xb3b2
0xb476: call 0x1a70
0xb47b: nop qword ptr [rax+rax*1+0x0]
0xb62d: nop qword ptr [rax]
0xb638: cmp r12,0xffffffff
0xb63c: jz 0xaa60
0xb642: jmp 0xa6c1
0xb64c: cmp r12,0xffffffff
0xb650: mov edx,0x1
0xb655: jz 0xaa3b
0xb65b: test r12,r12
0xb65e: jz 0xa6b5
0xb664: jns 0xb230
0xb66a: jmp 0xa6b5
0xb6a8: nop qword ptr [rax+rax*1+0x0]
0xb8de: nop 
0xb921: nop qword ptr [rax+0x0]
0xb987: nop qword ptr [rax+rax*1+0x0]
0xb9d2: nop qword ptr [rax+rax*1+0x0]
0xb9e8: nop qword ptr [rax+rax*1+0x0]
0xb9f8: nop qword ptr [rax+rax*1+0x0]
0xba08: nop qword ptr [rax+rax*1+0x0]
0xba18: nop qword ptr [rax+rax*1+0x0]
0xba47: nop qword ptr [rax+rax*1+0x0]
0xba8d: nop qword ptr [rax]
0xba95: nop qword ptr [rax]
0xbb67: lea rax,[r10+r10*4+0x0]
0xbb6b: mov rdi,qword ptr [r14+0x8]
0xbb6f: cmp qword ptr [rsp+0x28],rdi
0xbb74: mov qword ptr [rsp+0x40],r9
0xbb79: mov qword ptr [rsp+0x38],r10
0xbb7e: lea rax,[r10+rax*2+0x0]
0xbb82: mov qword ptr [rsp+0x30],r8
0xbb87: lea rsi,[rax*8+0x0]
0xbb8f: jz 0xc24d
0xbb95: call 0x1d50
0xbb9a: test rax,rax
0xbb9d: mov rcx,rax
0xbba0: mov r8,qword ptr [rsp+0x30]
0xbba5: mov r10,qword ptr [rsp+0x38]
0xbbaa: mov r9,qword ptr [rsp+0x40]
0xbbaf: jz 0xc4f7
0xbbb5: mov rax,qword ptr [rsp+0x28]
0xbbba: cmp rax,qword ptr [r14+0x8]
0xbbbe: mov rbx,qword ptr [r14]
0xbbc1: jz 0xc270
0xbbc7: mov qword ptr [r14+0x8],rcx
0xbbcb: jmp 0xb8e8
0xbe5d: nop qword ptr [rax]
0xbfb2: nop qword ptr [rax+rax*1+0x0]
0xc015: nop qword ptr [rax]
0xc0a6: nop qword ptr [rax+rax*1+0x0]
0xc0fe: nop 
0xc24d: mov rdi,rsi
0xc250: call 0x1d00
0xc255: test rax,rax
0xc258: mov rcx,rax
0xc25b: mov r8,qword ptr [rsp+0x30]
0xc260: mov r10,qword ptr [rsp+0x38]
0xc265: mov r9,qword ptr [rsp+0x40]
0xc26a: jz 0xc359
0xc270: lea rax,[rbx+rbx*4+0x0]
0xc274: mov rsi,qword ptr [rsp+0x28]
0xc279: mov rdi,rcx
0xc27c: mov qword ptr [rsp+0x40],r9
0xc281: mov qword ptr [rsp+0x38],r10
0xc286: lea rdx,[rbx+rax*2+0x0]
0xc28a: mov qword ptr [rsp+0x30],r8
0xc28f: shl rdx,0x3
0xc293: call 0x1ce0
0xc298: mov rbx,qword ptr [r14]
0xc29b: mov rcx,rax
0xc29e: mov r9,qword ptr [rsp+0x40]
0xc2a3: mov r10,qword ptr [rsp+0x38]
0xc2a8: mov r8,qword ptr [rsp+0x30]
0xc2ad: jmp 0xbbc7
0xc359: mov rcx,qword ptr [r15+0x8]
0xc35d: cmp qword ptr [rsp+0x8],rcx
0xc362: jz 0xc37c
0xc50b: nop qword ptr [rax+rax*1+0x0]
0xc560: push r15
0xc562: push r14
0xc564: mov r15,rdx
0xc567: push r13
0xc569: push r12
0xc56b: lea r12,[rip+0x20451e]
0xc572: push rbp
0xc573: lea rbp,[rip+0x20451e]
0xc57a: push rbx
0xc57b: mov r13d,edi
0xc57e: mov r14,rsi
0xc581: sub rbp,r12
0xc584: sub rsp,0x8
0xc588: sar rbp,0x3
0xc58c: call 0x19e8
0xc591: test rbp,rbp
0xc594: jz 0xc5b6
0xc596: xor ebx,ebx
0xc598: nop qword ptr [rax+rax*1+0x0]
0xc5a0: mov rdx,r15
0xc5a3: mov rsi,r14
0xc5a6: mov edi,r13d
0xc5a9: call qword ptr [r12+rbx*8+0x0]
0xc5ad: add rbx,0x1
0xc5b1: cmp rbp,rbx
0xc5b4: jnz 0xc5a0
0xc5b6: add rsp,0x8
0xc5ba: pop rbx
0xc5bb: pop rbp
0xc5bc: pop r12
0xc5be: pop r13
0xc5c0: pop r14
0xc5c2: pop r15
0xc5c4: ret
0xc5f0: sub rsp,0x8
0xc5f4: add rsp,0x8
0xc5f8: ret
