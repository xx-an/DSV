0x1b08: sub rsp,0x8
0x1b0c: mov rax,qword ptr [rip+0x20a4cd]
0x1b13: test rax,rax
0x1b16: jz 0x1b1a
0x1b18: call rax
0x1b1a: add rsp,0x8
0x1b1e: ret
0x1b36: push 0x0
0x1b46: push 0x1
0x1b56: push 0x2
0x1b66: push 0x3
0x1b76: push 0x4
0x1b86: push 0x5
0x1b90: jmp qword ptr [rip+0x20a21a]
0x1b96: push 0x6
0x1ba0: jmp qword ptr [rip+0x20a212]
0x1ba6: push 0x7
0x1bb0: jmp qword ptr [rip+0x20a20a]
0x1bb6: push 0x8
0x1bc6: push 0x9
0x1bd6: push 0xa
0x1be6: push 0xb
0x1bf6: push 0xc
0x1c06: push 0xd
0x1c16: push 0xe
0x1c26: push 0xf
0x1c36: push 0x10
0x1c46: push 0x11
0x1c56: push 0x12
0x1c66: push 0x13
0x1c76: push 0x14
0x1c86: push 0x15
0x1c96: push 0x16
0x1ca6: push 0x17
0x1cb6: push 0x18
0x1cc6: push 0x19
0x1cd6: push 0x1a
0x1ce6: push 0x1b
0x1cf6: push 0x1c
0x1d06: push 0x1d
0x1d16: push 0x1e
0x1d26: push 0x1f
0x1d36: push 0x20
0x1d46: push 0x21
0x1d56: push 0x22
0x1d66: push 0x23
0x1d76: push 0x24
0x1d86: push 0x25
0x1d96: push 0x26
0x1da6: push 0x27
0x1db6: push 0x28
0x1dc0: jmp qword ptr [rip+0x20a102]
0x1dc6: push 0x29
0x1dd6: push 0x2a
0x1de6: push 0x2b
0x1df6: push 0x2c
0x1e06: push 0x2d
0x1e16: push 0x2e
0x1e26: push 0x2f
0x1e36: push 0x30
0x1e46: push 0x31
0x1e56: push 0x32
0x1e66: push 0x33
0x1e76: push 0x34
0x1e86: push 0x35
0x1e96: push 0x36
0x1ea6: push 0x37
0x1eb6: push 0x38
0x1ec6: push 0x39
0x1ed6: push 0x3a
0x1ee6: push 0x3b
0x1ef6: push 0x3c
0x1f06: push 0x3d
0x1f10: jmp qword ptr [rip+0x20a05a]
0x1f16: push 0x3e
0x1f26: push 0x3f
0x1f36: push 0x40
0x1f46: push 0x41
0x1f50: jmp qword ptr [rip+0x20a03a]
0x1f56: push 0x42
0x1f66: push 0x43
0x1f76: push 0x44
0x1f86: push 0x45
0x1f96: push 0x46
0x1fa6: push 0x47
0x1fb6: push 0x48
0x1fc0: jmp qword ptr [rip+0x20a002]
0x1fc6: push 0x49
0x1fd0: jmp qword ptr [rip+0x20a01a]
0x1fd6: nop 
0x2116: nop qword ptr [rax+rax*1+0x0]
0x2194: nop qword ptr [rax+0x0]
0x21e3: nop qword ptr [rax+rax*1+0x0]
0x2236: nop qword ptr [rax+rax*1+0x0]
0x224c: nop qword ptr [rax+0x0]
0x228a: nop qword ptr [rax+rax*1+0x0]
0x22e1: nop qword ptr [rax+0x0]
0x2341: nop qword ptr [rax+0x0]
0x2362: nop qword ptr [rax+rax*1+0x0]
0x2457: nop qword ptr [rax+rax*1+0x0]
0x24bc: nop qword ptr [rax+0x0]
0x2504: nop qword ptr [rax+0x0]
0x254b: nop qword ptr [rax+rax*1+0x0]
0x2566: nop qword ptr [rax+rax*1+0x0]
0x2621: nop qword ptr [rax+0x0]
0x2b7e: nop 
0x2f8d: lea rsi,[rip+0x6b6c]
0x2f94: mov edx,0x5
0x2f99: xor edi,edi
0x2f9b: mov rbp,rax
0x2f9e: call 0x1c40
0x2fa3: mov rbx,rax
0x2fa6: call 0x1b70
0x2fab: mov esi,dword ptr [rax]
0x2fad: mov rcx,rbp
0x2fb0: mov rdx,rbx
0x2fb3: mov edi,0x1
0x2fb8: xor eax,eax
0x2fba: call 0x1ea0
0x2fbf: nop 
0x2fe2: nop qword ptr [rax+rax*1+0x0]
0x303d: nop qword ptr [rax]
0x3053: nop qword ptr [rax+rax*1+0x0]
0x31a2: nop qword ptr [rax+rax*1+0x0]
0x32e9: nop qword ptr [rax+0x0]
0x32fb: nop qword ptr [rax+rax*1+0x0]
0x336d: nop qword ptr [rax]
0x3392: mov rcx,rax
0x3395: mov rax,qword ptr [rsp+0x20]
0x339a: lea rdx,[rip+0x5a4d]
0x33a1: mov edi,0x1
0x33a6: mov esi,dword ptr [rax]
0x33a8: xor eax,eax
0x33aa: call 0x1ea0
0x33af: nop 
0x33d6: nop qword ptr [rax+rax*1+0x0]
0x341f: mov rcx,rax
0x3422: mov rax,qword ptr [rsp+0x20]
0x3427: lea rdx,[rip+0x59c0]
0x342e: mov edi,0x1
0x3433: mov esi,dword ptr [rax]
0x3435: xor eax,eax
0x3437: call 0x1ea0
0x343c: nop qword ptr [rax+0x0]
0x3669: mov esi,dword ptr [r13+0x0]
0x366d: lea rdx,[rip+0x577a]
0x3674: mov rcx,rax
0x3677: mov edi,0x1
0x367c: xor eax,eax
0x367e: call 0x1ea0
0x36ba: mov rbx,rax
0x36bd: call 0x1b70
0x36c2: mov esi,dword ptr [rax]
0x36c4: lea rdx,[rip+0x5723]
0x36cb: mov rcx,rbx
0x36ce: mov edi,0x1
0x36d3: xor eax,eax
0x36d5: call 0x1ea0
0x372c: mov rbx,rax
0x372f: call 0x1b70
0x3734: mov esi,dword ptr [rax]
0x3736: lea rdx,[rip+0x56b1]
0x373d: mov rcx,rbx
0x3740: mov edi,0x1
0x3745: xor eax,eax
0x3747: call 0x1ea0
0x3795: mov rbx,rax
0x3798: call 0x1b70
0x379d: mov esi,dword ptr [rax]
0x379f: lea rdx,[rip+0x5648]
0x37a6: mov rcx,rbx
0x37a9: mov edi,0x1
0x37ae: xor eax,eax
0x37b0: call 0x1ea0
0x388d: mov rbx,rax
0x3890: call 0x1b70
0x3895: mov esi,dword ptr [rax]
0x3897: lea rdx,[rip+0x5550]
0x389e: mov rcx,rbx
0x38a1: mov edi,0x1
0x38a6: xor eax,eax
0x38a8: call 0x1ea0
0x396d: mov rbx,rax
0x3970: call 0x1b70
0x3975: mov esi,dword ptr [rax]
0x3977: lea rdx,[rip+0x5470]
0x397e: mov rcx,rbx
0x3981: mov edi,0x1
0x3986: xor eax,eax
0x3988: call 0x1ea0
0x399c: mov rcx,rax
0x399f: mov rax,qword ptr [rsp+0x20]
0x39a4: lea rdx,[rip+0x5443]
0x39ab: mov edi,0x1
0x39b0: mov esi,dword ptr [rax]
0x39b2: xor eax,eax
0x39b4: call 0x1ea0
0x39cc: mov rbx,rax
0x39cf: call 0x1b70
0x39d4: mov esi,dword ptr [rax]
0x39d6: lea rdx,[rip+0x5411]
0x39dd: mov rcx,rbx
0x39e0: mov edi,0x1
0x39e5: xor eax,eax
0x39e7: call 0x1ea0
0x39ff: mov rbx,rax
0x3a02: call 0x1b70
0x3a07: mov esi,dword ptr [rax]
0x3a09: lea rdx,[rip+0x53de]
0x3a10: mov rcx,rbx
0x3a13: mov edi,0x1
0x3a18: xor eax,eax
0x3a1a: call 0x1ea0
0x3a30: lea rsi,[rip+0x53cb]
0x3a37: mov edx,0x5
0x3a3c: xor edi,edi
0x3a3e: mov rbp,rax
0x3a41: call 0x1c40
0x3a46: mov rbx,rax
0x3a49: call 0x1b70
0x3a4e: mov esi,dword ptr [rax]
0x3a50: mov rcx,rbp
0x3a53: mov rdx,rbx
0x3a56: mov edi,0x1
0x3a5b: xor eax,eax
0x3a5d: call 0x1ea0
0x3a94: mov edi,0x1
0x3a99: call 0x4ec0
0x3ab7: mov rdi,qword ptr [rsp]
0x3abb: lea rsi,[rsp+0x120]
0x3ac3: call 0x55c0
0x3ac8: mov rdi,rax
0x3acb: call 0x7320
0x3ad0: lea rsi,[rip+0x5256]
0x3ad7: mov edx,0x5
0x3adc: xor edi,edi
0x3ade: mov rbx,rax
0x3ae1: call 0x1c40
0x3ae6: lea rdx,[rip+0x52fd]
0x3aed: mov rcx,rax
0x3af0: mov r8,rbx
0x3af3: mov esi,0x4b
0x3af8: mov edi,0x1
0x3afd: xor eax,eax
0x3aff: call 0x1ea0
0x3b04: call 0x1c70
0x3b1c: mov rbx,rax
0x3b1f: call 0x1b70
0x3b24: mov esi,dword ptr [rax]
0x3b26: lea rdx,[rip+0x52c1]
0x3b2d: mov rcx,rbx
0x3b30: mov edi,0x1
0x3b35: xor eax,eax
0x3b37: call 0x1ea0
0x3bda: mov rbx,rax
0x3bdd: call 0x1b70
0x3be2: mov esi,dword ptr [rax]
0x3be4: lea rdx,[rip+0x5203]
0x3beb: mov rcx,rbx
0x3bee: mov edi,0x1
0x3bf3: xor eax,eax
0x3bf5: call 0x1ea0
0x3c9e: mov edi,0x1
0x3ca3: call 0x4ec0
0x3d0f: nop 
0x3d3a: hlt 
0x3d40: lea rdi,[rip+0x208501]
0x3d47: push rbp
0x3d48: lea rax,[rip+0x2084f9]
0x3d4f: cmp rax,rdi
0x3d52: mov rbp,rsp
0x3d55: jz 0x3d70
0x3d57: mov rax,qword ptr [rip+0x208272]
0x3d5e: test rax,rax
0x3d61: jz 0x3d70
0x3d63: pop rbp
0x3d64: jmp rax
0x3d66: nop qword ptr [rax+rax*1+0x0]
0x3d70: pop rbp
0x3d71: ret
0x3d80: lea rdi,[rip+0x2084c1]
0x3d87: lea rsi,[rip+0x2084ba]
0x3d8e: push rbp
0x3d8f: sub rsi,rdi
0x3d92: mov rbp,rsp
0x3d95: sar rsi,0x3
0x3d99: mov rax,rsi
0x3d9c: shr rax,0x3f
0x3da0: add rsi,rax
0x3da3: sar rsi,0x1
0x3da6: jz 0x3dc0
0x3da8: mov rax,qword ptr [rip+0x208239]
0x3daf: test rax,rax
0x3db2: jz 0x3dc0
0x3db4: pop rbp
0x3db5: jmp rax
0x3db7: nop qword ptr [rax+rax*1+0x0]
0x3dc0: pop rbp
0x3dc1: ret
0x3dd0: cmp [rip+0x2084d1],0x0
0x3dd7: jnz 0x3e08
0x3dd9: cmp [rip+0x20820f],0x0
0x3de1: push rbp
0x3de2: mov rbp,rsp
0x3de5: jz 0x3df3
0x3de7: mov rdi,qword ptr [rip+0x20821a]
0x3dee: call 0x1fd0
0x3df3: call 0x3d40
0x3df8: mov [rip+0x2084a9],0x1
0x3dff: pop rbp
0x3e00: ret
0x3e01: nop qword ptr [rax+0x0]
0x3e08: rep ret
0x3e10: push rbp
0x3e11: mov rbp,rsp
0x3e14: pop rbp
0x3e15: jmp 0x3d80
0x3e69: nop qword ptr [rax+0x0]
0x3eb1: mov r9,qword ptr [rcx]
0x3eb4: cmp [rsi+r9*1+0x1],0x0
0x3eba: jnz 0x3e70
0x4034: nop qword ptr [rax+0x0]
0x41f5: nop qword ptr [rax]
0x42d5: nop qword ptr [rax]
0x436d: lea rsi,[rip+0x47a2]
0x4374: mov edx,0x5
0x4379: xor edi,edi
0x437b: mov rbp,rax
0x437e: call 0x1c40
0x4383: mov rbx,rax
0x4386: call 0x1b70
0x438b: mov esi,dword ptr [rax]
0x438d: mov rcx,rbp
0x4390: mov rdx,rbx
0x4393: mov edi,0x1
0x4398: xor eax,eax
0x439a: call 0x1ea0
0x439f: nop 
0x43af: lea rsi,[rip+0x4780]
0x43b6: xor edi,edi
0x43b8: mov edx,0x5
0x43bd: mov rbx,rax
0x43c0: call 0x1c40
0x43c5: mov rdi,qword ptr [rip+0x207e9c]
0x43cc: mov rdx,rax
0x43cf: mov rcx,rbx
0x43d2: mov esi,0x1
0x43d7: xor eax,eax
0x43d9: call 0x1f40
0x43de: jmp 0x4165
0x43e3: nop qword ptr [rax+rax*1+0x0]
0x440c: nop qword ptr [rax+0x0]
0x441d: lea rsi,[rip+0x46ce]
0x4424: xor edi,edi
0x4426: mov edx,0x5
0x442b: mov rbx,rax
0x442e: call 0x1c40
0x4433: mov rdi,qword ptr [rip+0x207e2e]
0x443a: mov rdx,rax
0x443d: mov rcx,rbx
0x4440: mov esi,0x1
0x4445: xor eax,eax
0x4447: call 0x1f40
0x444c: jmp 0x42e5
0x4451: nop qword ptr [rax+0x0]
0x44cf: nop 
0x4570: lea rsi,[rip+0x4999]
0x4577: mov rbx,rax
0x457a: mov edx,0x5
0x457f: xor edi,edi
0x4581: call 0x1c40
0x4586: mov rcx,rbx
0x4589: mov rdx,rax
0x458c: xor esi,esi
0x458e: mov edi,0x1
0x4593: xor eax,eax
0x4595: call 0x1ea0
0x45ef: lea rsi,[rip+0x450e]
0x45f6: mov edx,0x5
0x45fb: xor edi,edi
0x45fd: mov rbp,rax
0x4600: call 0x1c40
0x4605: mov rbx,rax
0x4608: call 0x1b70
0x460d: mov esi,dword ptr [rax]
0x460f: mov rcx,rbp
0x4612: mov rdx,rbx
0x4615: mov edi,0x1
0x461a: xor eax,eax
0x461c: call 0x1ea0
0x4679: nop qword ptr [rax+0x0]
0x4703: nop qword ptr [rax+rax*1+0x0]
0x47c5: mov r8,qword ptr [rsp+0x8]
0x47ca: lea rdx,[rip+0x461d]
0x47d1: mov rcx,rax
0x47d4: mov edi,0x1
0x47d9: xor eax,eax
0x47db: mov esi,dword ptr [r8]
0x47de: call 0x1ea0
0x47f8: mov r8,qword ptr [rsp+0x8]
0x47fd: lea rdx,[rip+0x45ea]
0x4804: mov rcx,rax
0x4807: mov edi,0x1
0x480c: xor eax,eax
0x480e: mov esi,dword ptr [r8]
0x4811: call 0x1ea0
0x4826: mov r8,qword ptr [rsp+0x8]
0x482b: lea rdx,[rip+0x45bc]
0x4832: mov rcx,rax
0x4835: mov edi,0x1
0x483a: xor eax,eax
0x483c: mov esi,dword ptr [r8]
0x483f: call 0x1ea0
0x4854: mov rbx,rax
0x4857: call 0x1b70
0x485c: mov esi,dword ptr [rax]
0x485e: lea rdx,[rip+0x4589]
0x4865: mov rcx,rbx
0x4868: mov edi,0x1
0x486d: xor eax,eax
0x486f: call 0x1ea0
0x4874: nop 
0x4876: nop qword ptr [rax+rax*1+0x0]
0x48e3: nop qword ptr [rax+rax*1+0x0]
0x4939: cmp ebp,0xd
0x493c: jnz 0x4ac0
0x4942: nop qword ptr [rax+rax*1+0x0]
0x4967: nop qword ptr [rax+rax*1+0x0]
0x499a: mov esi,dword ptr [r13+0x0]
0x499e: lea rdx,[rip+0x4449]
0x49a5: mov rcx,rax
0x49a8: mov edi,0x1
0x49ad: xor eax,eax
0x49af: call 0x1ea0
0x49b4: nop qword ptr [rax+0x0]
0x49de: mov rbx,rax
0x49e1: call 0x1b70
0x49e6: mov esi,dword ptr [rax]
0x49e8: lea rdx,[rip+0x43ff]
0x49ef: mov rcx,rbx
0x49f2: mov edi,0x1
0x49f7: xor eax,eax
0x49f9: call 0x1ea0
0x49fe: nop 
0x4a21: nop qword ptr [rax+0x0]
0x4a3b: mov r12,qword ptr [rip+0x207abe]
0x4a42: mov rdx,rbx
0x4a45: xor edi,edi
0x4a47: mov esi,0x3
0x4a4c: call 0x7150
0x4a51: lea rsi,[rip+0x4560]
0x4a58: mov rbx,rax
0x4a5b: xor edi,edi
0x4a5d: mov edx,0x5
0x4a62: call 0x1c40
0x4a67: mov r9,r12
0x4a6a: mov rdx,rax
0x4a6d: mov r8d,ebp
0x4a70: mov rcx,rbx
0x4a73: xor esi,esi
0x4a75: mov edi,ebp
0x4a77: xor eax,eax
0x4a79: call 0x1ea0
0x4a7e: jmp 0x4948
0x4a83: nop qword ptr [rax+rax*1+0x0]
0x4abe: nop 
0x4ac0: lea r12,[rsp+0x20]
0x4ac5: mov edi,ebp
0x4ac7: mov rsi,r12
0x4aca: call 0x8580
0x4acf: test eax,eax
0x4ad1: jnz 0x4b20
0x4ad3: mov rdx,rbx
0x4ad6: xor edi,edi
0x4ad8: mov esi,0x3
0x4add: mov r13,qword ptr [rip+0x207a1c]
0x4ae4: call 0x7150
0x4ae9: lea rsi,[rip+0x4498]
0x4af0: xor edi,edi
0x4af2: mov edx,0x5
0x4af7: mov rbx,rax
0x4afa: call 0x1c40
0x4aff: lea edi,[rbp+0x80]
0x4b05: mov rdx,rax
0x4b08: mov r9,r13
0x4b0b: mov r8,r12
0x4b0e: mov rcx,rbx
0x4b11: xor esi,esi
0x4b13: xor eax,eax
0x4b15: call 0x1ea0
0x4b1a: jmp 0x4948
0x4b1f: nop 
0x4b20: lea rcx,[rip+0x40db]
0x4b27: mov r8d,ebp
0x4b2a: mov edx,0x13
0x4b2f: mov esi,0x1
0x4b34: mov rdi,r12
0x4b37: xor eax,eax
0x4b39: call 0x1fc0
0x4b3e: jmp 0x4ad3
0x4b45: lea rsi,[rip+0x4494]
0x4b4c: mov edx,0x5
0x4b51: xor edi,edi
0x4b53: mov dword ptr [rsp+0xc],ecx
0x4b57: call 0x1c40
0x4b5c: mov ecx,dword ptr [rsp+0xc]
0x4b60: mov rdx,rax
0x4b63: xor esi,esi
0x4b65: mov edi,0x1
0x4b6a: xor eax,eax
0x4b6c: call 0x1ea0
0x4b71: nop qword ptr [rax+rax*1+0x0]
0x4b76: nop qword ptr [rax+rax*1+0x0]
0x4c1f: mov esi,dword ptr [rbx]
0x4c21: lea rdx,[rip+0x41c6]
0x4c28: mov rcx,rax
0x4c2b: mov edi,0x1
0x4c30: xor eax,eax
0x4c32: call 0x1ea0
0x4c37: nop qword ptr [rax+rax*1+0x0]
0x4c4c: nop qword ptr [rax+0x0]
0x4c6b: mov rbx,rax
0x4c6e: call 0x1b70
0x4c73: mov esi,dword ptr [rax]
0x4c75: lea rdx,[rip+0x4172]
0x4c7c: mov rcx,rbx
0x4c7f: mov edi,0x1
0x4c84: xor eax,eax
0x4c86: call 0x1ea0
0x4c8b: nop qword ptr [rax+rax*1+0x0]
0x4ce7: nop qword ptr [rax+rax*1+0x0]
0x4d4e: nop 
0x4e19: nop qword ptr [rax+0x0]
0x4e99: mov rbx,rax
0x4e9c: call 0x1b70
0x4ea1: mov esi,dword ptr [rax]
0x4ea3: lea rdx,[rip+0x3f44]
0x4eaa: mov rcx,rbx
0x4ead: mov edi,0x1
0x4eb2: xor eax,eax
0x4eb4: call 0x1ea0
0x4eb9: nop qword ptr [rax+0x0]
0x52f0: mov qword ptr [rip+0x207219],rdi
0x52f7: ret
0x5300: mov byte ptr [rip+0x207201],dil
0x5307: ret
0x5310: push rbp
0x5311: push rbx
0x5312: sub rsp,0x8
0x5316: mov rdi,qword ptr [rip+0x206f4b]
0x531d: call 0x8660
0x5322: test eax,eax
0x5324: jz 0x533c
0x5326: call 0x1b70
0x532b: cmp [rip+0x2071d6],0x0
0x5332: mov rbx,rax
0x5335: jz 0x5353
0x5337: cmp [rax],0x20
0x533a: jnz 0x5353
0x533c: mov rdi,qword ptr [rip+0x206f5d]
0x5343: call 0x8660
0x5348: test eax,eax
0x534a: jnz 0x5392
0x534c: add rsp,0x8
0x5350: pop rbx
0x5351: pop rbp
0x5352: ret
0x5353: lea rsi,[rip+0x3ae1]
0x535a: xor edi,edi
0x535c: mov edx,0x5
0x5361: call 0x1c40
0x5366: mov rdi,qword ptr [rip+0x2071a3]
0x536d: mov rbp,rax
0x5370: test rdi,rdi
0x5373: jz 0x539d
0x5375: call 0x7120
0x537a: mov esi,dword ptr [rbx]
0x537c: lea rdx,[rip+0x3a67]
0x5383: mov rcx,rax
0x5386: mov r8,rbp
0x5389: xor edi,edi
0x538b: xor eax,eax
0x538d: call 0x1ea0
0x5392: mov edi,dword ptr [rip+0x206c98]
0x5398: call 0x1b90
0x539d: mov esi,dword ptr [rbx]
0x539f: lea rdx,[rip+0x3a48]
0x53a6: mov rcx,rax
0x53a9: xor edi,edi
0x53ab: xor eax,eax
0x53ad: call 0x1ea0
0x53b2: jmp 0x5392
0x53e7: nop qword ptr [rax+rax*1+0x0]
0x5420: push rbx
0x5421: mov rbx,rdi
0x5424: call 0x1c60
0x5429: cmp rax,0x1
0x542d: jbe 0x543a
0x542f: cmp [rbx+rax*1-0x1],0x2f
0x5434: lea rdx,[rax-0x1]
0x5438: jz 0x5448
0x543a: pop rbx
0x543b: ret
0x543c: nop qword ptr [rax+0x0]
0x5440: mov rdx,rax
0x5443: nop qword ptr [rax+rax*1+0x0]
0x5448: cmp rdx,0x1
0x544c: jz 0x5460
0x544e: cmp [rbx+rdx*1-0x1],0x2f
0x5453: lea rax,[rdx-0x1]
0x5457: jz 0x5440
0x5459: mov rax,rdx
0x545c: pop rbx
0x545d: ret
0x545e: nop 
0x5460: mov eax,0x1
0x5465: pop rbx
0x5466: ret
0x54b4: nop qword ptr [rax+0x0]
0x555d: nop qword ptr [rax]
0x5592: nop qword ptr [rax+rax*1+0x0]
0x56ec: nop qword ptr [rax+0x0]
0x573d: nop qword ptr [rax]
0x5a57: nop qword ptr [rax+rax*1+0x0]
0x5a8e: nop 
0x5ab1: nop qword ptr [rax+0x0]
0x5af2: nop qword ptr [rax+rax*1+0x0]
0x5b04: nop qword ptr [rax+0x0]
0x5ba8: nop qword ptr [rax+rax*1+0x0]
0x5bd1: nop qword ptr [rax+0x0]
0x5be7: nop qword ptr [rax+rax*1+0x0]
0x5bff: nop 
0x5c2e: nop 
0x5c3d: nop qword ptr [rax]
0x5c4f: nop 
0x5c5f: nop 
0x5c6f: nop 
0x5c7f: nop 
0x5c8f: nop 
0x5cfc: nop qword ptr [rax+0x0]
0x5d1c: nop qword ptr [rax+0x0]
0x5d3f: nop 
0x5d52: nop qword ptr [rax+rax*1+0x0]
0x5d6a: nop qword ptr [rax+rax*1+0x0]
0x5d7a: nop qword ptr [rax+rax*1+0x0]
0x5e1b: nop qword ptr [rax+rax*1+0x0]
0x5e35: nop qword ptr [rax]
0x5e48: nop qword ptr [rax+rax*1+0x0]
0x5e63: nop qword ptr [rax+rax*1+0x0]
0x5e92: nop qword ptr [rax+rax*1+0x0]
0x5ea2: nop qword ptr [rax+rax*1+0x0]
0x5eba: nop qword ptr [rax+rax*1+0x0]
0x5eca: nop qword ptr [rax+rax*1+0x0]
0x5ed8: nop qword ptr [rax+rax*1+0x0]
0x5eff: nop 
0x5f3d: cmp [rsp+0xe],0x0
0x5f42: jnz 0x693d
0x5f48: test r13,r13
0x5f4b: setz al
0x5f4e: cmp [rsp+0x50],0x0
0x5f54: setnz dl
0x5f57: and al,dl
0x5f59: jz 0x697c
0x5f5f: mov r13,qword ptr [rsp+0x50]
0x5f99: nop qword ptr [rax+0x0]
0x5fe2: nop qword ptr [rax+rax*1+0x0]
0x6021: nop qword ptr [rax+0x0]
0x6042: nop qword ptr [rax+rax*1+0x0]
0x61a8: nop qword ptr [rax+rax*1+0x0]
0x62bb: nop qword ptr [rax+rax*1+0x0]
0x62de: nop 
0x63a5: nop qword ptr [rax]
0x645d: nop qword ptr [rax]
0x6666: nop qword ptr [rax+rax*1+0x0]
0x66f9: nop qword ptr [rax+0x0]
0x684d: nop qword ptr [rax]
0x693d: sub rsp,0x8
0x6941: mov r8d,0x5
0x6947: mov rcx,r11
0x694a: push qword ptr [rsp+0x68]
0x694e: push qword ptr [rsp+0x78]
0x6952: mov rdi,r14
0x6955: push qword ptr [rsp+0x38]
0x6959: mov r9d,dword ptr [rsp+0x98]
0x6961: mov rdx,qword ptr [rsp+0x30]
0x6966: mov rsi,qword ptr [rsp+0x70]
0x696b: call 0x57a0
0x6970: add rsp,0x20
0x6974: mov r15,rax
0x6977: jmp 0x6379
0x697c: movzx eax,byte ptr [rsp+0x7c]
0x6981: jmp 0x689c
0x6993: call 0x1c70
0x6b5b: nop qword ptr [rax+rax*1+0x0]
0x6b81: call 0x1b60
0x6b86: call 0x7cb0
0x6b90: push r12
0x6b92: push rbp
0x6b93: push rbx
0x6b94: mov rbx,rdi
0x6b97: call 0x1b70
0x6b9c: mov r12d,dword ptr [rax]
0x6b9f: mov rbp,rax
0x6ba2: lea rax,[rip+0x205a77]
0x6ba9: test rbx,rbx
0x6bac: mov esi,0x38
0x6bb1: cmove rbx,rax
0x6bb5: mov rdi,rbx
0x6bb8: call 0x7c60
0x6bbd: mov dword ptr [rbp+0x0],r12d
0x6bc1: pop rbx
0x6bc2: pop rbp
0x6bc3: pop r12
0x6bc5: ret
0x6bd0: lea rax,[rip+0x205a49]
0x6bd7: test rdi,rdi
0x6bda: cmove rdi,rax
0x6bde: mov eax,dword ptr [rdi]
0x6be0: ret
0x6bf0: lea rax,[rip+0x205a29]
0x6bf7: test rdi,rdi
0x6bfa: cmove rdi,rax
0x6bfe: mov dword ptr [rdi],esi
0x6c00: ret
0x6c10: lea rax,[rip+0x205a09]
0x6c17: test rdi,rdi
0x6c1a: mov ecx,esi
0x6c1c: cmove rdi,rax
0x6c20: mov eax,esi
0x6c22: and ecx,0x1f
0x6c25: shr al,0x5
0x6c28: movzx eax,al
0x6c2b: lea rdi,[rdi+rax*4+0x8]
0x6c30: mov esi,dword ptr [rdi]
0x6c32: mov eax,esi
0x6c34: shr eax,cl
0x6c36: xor edx,eax
0x6c38: and eax,0x1
0x6c3b: and edx,0x1
0x6c3e: shl edx,cl
0x6c40: xor edx,esi
0x6c42: mov dword ptr [rdi],edx
0x6c44: ret
0x6c50: lea rax,[rip+0x2059c9]
0x6c57: test rdi,rdi
0x6c5a: cmove rdi,rax
0x6c5e: mov eax,dword ptr [rdi+0x4]
0x6c61: mov dword ptr [rdi+0x4],esi
0x6c64: ret
0x6c70: lea rax,[rip+0x2059a9]
0x6c77: test rdi,rdi
0x6c7a: cmove rdi,rax
0x6c7e: test rsi,rsi
0x6c81: mov [rdi],0xa
0x6c87: jz 0x6c97
0x6c89: test rdx,rdx
0x6c8c: jz 0x6c97
0x6c8e: mov qword ptr [rdi+0x28],rsi
0x6c92: mov qword ptr [rdi+0x30],rdx
0x6c96: ret
0x6c97: sub rsp,0x8
0x6c9b: call 0x1b60
0x6ca0: push r15
0x6ca2: push r14
0x6ca4: lea rax,[rip+0x205975]
0x6cab: push r13
0x6cad: push r12
0x6caf: mov r13,rdi
0x6cb2: push rbp
0x6cb3: push rbx
0x6cb4: mov rbx,r8
0x6cb7: mov r14,rsi
0x6cba: mov r15,rdx
0x6cbd: sub rsp,0x18
0x6cc1: test r8,r8
0x6cc4: cmove rbx,rax
0x6cc8: mov qword ptr [rsp+0x8],rcx
0x6ccd: call 0x1b70
0x6cd2: mov r12d,dword ptr [rax]
0x6cd5: mov rbp,rax
0x6cd8: lea rax,[rbx+0x8]
0x6cdc: sub rsp,0x8
0x6ce0: mov r9d,dword ptr [rbx+0x4]
0x6ce4: push qword ptr [rbx+0x30]
0x6ce7: mov r8d,dword ptr [rbx]
0x6cea: push qword ptr [rbx+0x28]
0x6ced: mov rdx,r15
0x6cf0: push rax
0x6cf1: mov rcx,qword ptr [rsp+0x28]
0x6cf6: mov rsi,r14
0x6cf9: mov rdi,r13
0x6cfc: call 0x57a0
0x6d01: mov dword ptr [rbp+0x0],r12d
0x6d05: add rsp,0x38
0x6d09: pop rbx
0x6d0a: pop rbp
0x6d0b: pop r12
0x6d0d: pop r13
0x6d0f: pop r14
0x6d11: pop r15
0x6d13: ret
0x6d20: push r15
0x6d22: push r14
0x6d24: lea rax,[rip+0x2058f5]
0x6d2b: push r13
0x6d2d: push r12
0x6d2f: mov r12,rdx
0x6d32: push rbp
0x6d33: push rbx
0x6d34: mov rbx,rcx
0x6d37: mov r14,rdi
0x6d3a: mov r15,rsi
0x6d3d: sub rsp,0x38
0x6d41: test rcx,rcx
0x6d44: cmove rbx,rax
0x6d48: xor ebp,ebp
0x6d4a: call 0x1b70
0x6d4f: test r12,r12
0x6d52: mov r13,rax
0x6d55: mov eax,dword ptr [rax]
0x6d57: setz bpl
0x6d5b: or ebp,dword ptr [rbx+0x4]
0x6d5e: lea r10,[rbx+0x8]
0x6d62: sub rsp,0x8
0x6d66: mov r8d,dword ptr [rbx]
0x6d69: mov rcx,r15
0x6d6c: mov dword ptr [rsp+0x14],eax
0x6d70: push qword ptr [rbx+0x30]
0x6d73: mov rdx,r14
0x6d76: push qword ptr [rbx+0x28]
0x6d79: push r10
0x6d7b: xor esi,esi
0x6d7d: mov r9d,ebp
0x6d80: xor edi,edi
0x6d82: mov qword ptr [rsp+0x40],r10
0x6d87: call 0x57a0
0x6d8c: lea rsi,[rax+0x1]
0x6d90: mov qword ptr [rsp+0x48],rax
0x6d95: add rsp,0x20
0x6d99: mov rdi,rsi
0x6d9c: mov qword ptr [rsp+0x18],rsi
0x6da1: call 0x7a60
0x6da6: mov qword ptr [rsp+0x10],rax
0x6dab: sub rsp,0x8
0x6daf: push qword ptr [rbx+0x30]
0x6db2: push qword ptr [rbx+0x28]
0x6db5: mov r10,qword ptr [rsp+0x38]
0x6dba: mov r9d,ebp
0x6dbd: mov r8d,dword ptr [rbx]
0x6dc0: mov rcx,r15
0x6dc3: mov rdx,r14
0x6dc6: mov rdi,rax
0x6dc9: push r10
0x6dcb: mov rsi,qword ptr [rsp+0x38]
0x6dd0: call 0x57a0
0x6dd5: mov eax,dword ptr [rsp+0x2c]
0x6dd9: add rsp,0x20
0x6ddd: test r12,r12
0x6de0: mov dword ptr [r13+0x0],eax
0x6de4: jz 0x6def
0x6de6: mov r11,qword ptr [rsp+0x28]
0x6deb: mov qword ptr [r12],r11
0x6def: mov rax,qword ptr [rsp+0x10]
0x6df4: add rsp,0x38
0x6df8: pop rbx
0x6df9: pop rbp
0x6dfa: pop r12
0x6dfc: pop r13
0x6dfe: pop r14
0x6e00: pop r15
0x6e02: ret
0x6e10: mov rcx,rdx
0x6e13: xor edx,edx
0x6e15: jmp 0x6d20
0x6e20: mov eax,dword ptr [rip+0x205252]
0x6e26: push r12
0x6e28: mov r12,qword ptr [rip+0x205251]
0x6e2f: push rbp
0x6e30: push rbx
0x6e31: cmp eax,0x1
0x6e34: jle 0x6e61
0x6e36: sub eax,0x2
0x6e39: lea rbx,[r12+0x18]
0x6e3e: shl rax,0x4
0x6e42: lea rbp,[r12+rax*1+0x28]
0x6e47: nop qword ptr [rax+rax*1+0x0]
0x6e50: mov rdi,qword ptr [rbx]
0x6e53: add rbx,0x10
0x6e57: call 0x1b50
0x6e5c: cmp rbx,rbp
0x6e5f: jnz 0x6e50
0x6e61: mov rdi,qword ptr [r12+0x8]
0x6e66: lea rbx,[rip+0x2056b3]
0x6e6d: cmp rdi,rbx
0x6e70: jz 0x6e89
0x6e72: call 0x1b50
0x6e77: mov [rip+0x20520e],0x100
0x6e82: mov qword ptr [rip+0x20520f],rbx
0x6e89: lea rbx,[rip+0x205200]
0x6e90: cmp r12,rbx
0x6e93: jz 0x6ea4
0x6e95: mov rdi,r12
0x6e98: call 0x1b50
0x6e9d: mov qword ptr [rip+0x2051dc],rbx
0x6ea4: pop rbx
0x6ea5: mov [rip+0x2051c9],0x1
0x6eaf: pop rbp
0x6eb0: pop r12
0x6eb2: ret
0x6ec0: lea rcx,[rip+0x205759]
0x6ec7: mov rdx,0xffffffff
0x6ece: jmp 0x69e0
0x6ee0: lea rcx,[rip+0x205739]
0x6ee7: jmp 0x69e0
0x6ef0: lea rcx,[rip+0x205729]
0x6ef7: mov rsi,rdi
0x6efa: mov rdx,0xffffffff
0x6f01: xor edi,edi
0x6f03: jmp 0x69e0
0x6f10: lea rcx,[rip+0x205709]
0x6f17: mov rdx,rsi
0x6f1a: mov rsi,rdi
0x6f1d: xor edi,edi
0x6f1f: jmp 0x69e0
0x6faf: add rsp,0x48
0x6fb3: ret
0x6fb4: call 0x1b60
0x6fc0: sub rsp,0x48
0x6fc4: mov rax,rdx
0x6fc7: mov rdx,rcx
0x6fca: mov rcx,0x28
0x6fd3: mov qword ptr [rsp+0x38],rcx
0x6fd8: xor ecx,ecx
0x6fda: cmp esi,0xa
0x6fdd: jz 0x7040
0x6fdf: mov dword ptr [rsp],esi
0x6fe2: mov rcx,rsp
0x6fe5: mov rsi,rax
0x6fe8: mov [rsp+0x4],0x0
0x6ff1: mov [rsp+0xc],0x0
0x6ffa: mov [rsp+0x14],0x0
0x7003: mov [rsp+0x1c],0x0
0x700c: mov [rsp+0x24],0x0
0x7015: mov [rsp+0x2c],0x0
0x701e: mov [rsp+0x34],0x0
0x7026: call 0x69e0
0x702b: mov rdx,qword ptr [rsp+0x38]
0x7030: xor rdx,0x28
0x7039: jnz 0x7045
0x703b: add rsp,0x48
0x703f: ret
0x7040: call 0x1b60
0x7045: call 0x1c70
0x7060: mov rcx,rdx
0x7063: mov rdx,rsi
0x7066: mov esi,edi
0x7068: xor edi,edi
0x706a: jmp 0x6fc0
0x7070: sub rsp,0x48
0x7074: mov ecx,edx
0x7076: mov rax,0x28
0x707f: mov qword ptr [rsp+0x38],rax
0x7084: xor eax,eax
0x7086: mov rax,qword ptr [rip+0x2055c3]
0x708d: mov r8,rsp
0x7090: and ecx,0x1f
0x7093: movdqa xmm0,[rip+0x205585]
0x709b: mov qword ptr [rsp+0x30],rax
0x70a0: mov eax,edx
0x70a2: movaps [rsp],xmm0
0x70a6: shr al,0x5
0x70a9: movzx eax,al
0x70ac: lea r9,[r8+rax*4+0x8]
0x70b1: movdqa xmm0,[rip+0x205577]
0x70b9: movaps [rsp+0x10],xmm0
0x70be: movdqa xmm0,[rip+0x20557a]
0x70c6: movaps [rsp+0x20],xmm0
0x70cb: mov edx,dword ptr [r9]
0x70ce: mov eax,edx
0x70d0: shr eax,cl
0x70d2: not eax
0x70d4: and eax,0x1
0x70d7: shl eax,cl
0x70d9: mov rcx,r8
0x70dc: xor eax,edx
0x70de: mov rdx,rsi
0x70e1: mov rsi,rdi
0x70e4: mov dword ptr [r9],eax
0x70e7: xor edi,edi
0x70e9: call 0x69e0
0x70ee: mov rsi,qword ptr [rsp+0x38]
0x70f3: xor rsi,0x28
0x70fc: jnz 0x7103
0x70fe: add rsp,0x48
0x7102: ret
0x7103: call 0x1c70
0x7110: movsx edx,sil
0x7114: mov rsi,0xffffffff
0x711b: jmp 0x7070
0x7120: mov edx,0x3a
0x7125: mov rsi,0xffffffff
0x712c: jmp 0x7070
0x7140: mov edx,0x3a
0x7145: jmp 0x7070
0x71cf: add rsp,0x48
0x71d3: ret
0x71d4: call 0x1b60
0x71e0: sub rsp,0x48
0x71e4: mov r9,rcx
0x71e7: mov rcx,qword ptr [rip+0x205462]
0x71ee: movdqa xmm0,[rip+0x20542a]
0x71f6: mov rax,0x28
0x71ff: mov qword ptr [rsp+0x38],rax
0x7204: xor eax,eax
0x7206: movaps [rsp],xmm0
0x720a: test rsi,rsi
0x720d: mov qword ptr [rsp+0x30],rcx
0x7212: mov [rsp],0xa
0x7219: movdqa xmm0,[rip+0x20540f]
0x7221: movaps [rsp+0x10],xmm0
0x7226: movdqa xmm0,[rip+0x205412]
0x722e: movaps [rsp+0x20],xmm0
0x7233: jz 0x7267
0x7235: test rdx,rdx
0x7238: jz 0x7267
0x723a: mov qword ptr [rsp+0x28],rsi
0x723f: mov qword ptr [rsp+0x30],rdx
0x7244: mov rcx,rsp
0x7247: mov rdx,r8
0x724a: mov rsi,r9
0x724d: call 0x69e0
0x7252: mov rdi,qword ptr [rsp+0x38]
0x7257: xor rdi,0x28
0x7260: jnz 0x726c
0x7262: add rsp,0x48
0x7266: ret
0x7267: call 0x1b60
0x726c: call 0x1c70
0x7280: mov r8,0xffffffff
0x7287: jmp 0x71e0
0x7290: mov rcx,rdx
0x7293: mov r8,0xffffffff
0x729a: mov rdx,rsi
0x729d: mov rsi,rdi
0x72a0: xor edi,edi
0x72a2: jmp 0x71e0
0x72b0: mov r8,rcx
0x72b3: mov rcx,rdx
0x72b6: mov rdx,rsi
0x72b9: mov rsi,rdi
0x72bc: xor edi,edi
0x72be: jmp 0x71e0
0x72d0: lea rcx,[rip+0x204d69]
0x72d7: jmp 0x69e0
0x72e0: lea rcx,[rip+0x204d59]
0x72e7: mov rdx,rsi
0x72ea: mov rsi,rdi
0x72ed: xor edi,edi
0x72ef: jmp 0x69e0
0x7300: lea rcx,[rip+0x204d39]
0x7307: mov rdx,0xffffffff
0x730e: jmp 0x69e0
0x738f: nop 
0x73ef: nop 
0x74e6: nop qword ptr [rax+rax*1+0x0]
0x7575: nop qword ptr [rax]
0x7578: mov r8,rcx
0x757b: mov rcx,rdx
0x757e: lea rdx,[rip+0x2b6f]
0x7585: mov esi,0x1
0x758a: xor eax,eax
0x758c: call 0x1f40
0x7591: jmp 0x747c
0x7596: nop qword ptr [rax+rax*1+0x0]
0x75f5: nop qword ptr [rax]
0x7631: nop qword ptr [rax+0x0]
0x7678: nop qword ptr [rax+rax*1+0x0]
0x76c7: nop qword ptr [rax+rax*1+0x0]
0x7724: nop qword ptr [rax+0x0]
0x7752: nop qword ptr [rax+rax*1+0x0]
0x7806: nop qword ptr [rax+rax*1+0x0]
0x7860: xor r9d,r9d
0x7863: cmp [r8],0x0
0x7867: jz 0x787b
0x7869: nop qword ptr [rax+0x0]
0x7870: add r9,0x1
0x7874: cmp [r8+r9*8+0x0],0x0
0x7879: jnz 0x7870
0x787b: jmp 0x7440
0x7880: sub rsp,0x68
0x7884: mov r10,r8
0x7887: xor r9d,r9d
0x788a: mov rax,0x28
0x7893: mov qword ptr [rsp+0x58],rax
0x7898: xor eax,eax
0x789a: mov r8,rsp
0x789d: nop qword ptr [rax]
0x78a0: mov eax,dword ptr [r10]
0x78a3: cmp eax,0x2f
0x78a6: jnbe 0x78ea
0x78a8: mov r11d,eax
0x78ab: add r11,qword ptr [r10+0x10]
0x78af: add eax,0x8
0x78b2: mov dword ptr [r10],eax
0x78b5: mov rax,qword ptr [r11]
0x78b8: test rax,rax
0x78bb: mov qword ptr [r8+r9*8+0x0],rax
0x78bf: jz 0x78cb
0x78c1: add r9,0x1
0x78c5: cmp r9,0xa
0x78c9: jnz 0x78a0
0x78cb: call 0x7440
0x78d0: mov rax,qword ptr [rsp+0x58]
0x78d5: xor rax,0x28
0x78de: jnz 0x78e5
0x78e0: add rsp,0x68
0x78e4: ret
0x78e5: call 0x1c70
0x78ea: mov r11,qword ptr [r10+0x8]
0x78ee: lea rax,[r11+0x8]
0x78f2: mov qword ptr [r10+0x8],rax
0x78f6: jmp 0x78b5
0x79c0: call 0x1c70
0x79cc: mov rax,rbx
0x79cf: add rbx,0x8
0x79d3: jmp 0x7986
0x79e0: push rbx
0x79e1: lea rsi,[rip+0x275a]
0x79e8: mov edx,0x5
0x79ed: xor edi,edi
0x79ef: call 0x1c40
0x79f4: lea rdx,[rip+0x275c]
0x79fb: mov rsi,rax
0x79fe: mov edi,0x1
0x7a03: xor eax,eax
0x7a05: call 0x1e80
0x7a0a: lea rsi,[rip+0x275c]
0x7a11: mov edx,0x5
0x7a16: xor edi,edi
0x7a18: call 0x1c40
0x7a1d: lea rcx,[rip+0x1e84]
0x7a24: lea rdx,[rip+0x1256]
0x7a2b: mov rsi,rax
0x7a2e: mov edi,0x1
0x7a33: xor eax,eax
0x7a35: call 0x1e80
0x7a3a: mov rbx,qword ptr [rip+0x204827]
0x7a41: lea rsi,[rip+0x2958]
0x7a48: xor edi,edi
0x7a4a: mov edx,0x5
0x7a4f: call 0x1c40
0x7a54: mov rsi,rbx
0x7a57: mov rdi,rax
0x7a5a: pop rbx
0x7a5b: jmp 0x1d80
0x7a80: mov rax,rdi
0x7a83: mul rsi
0x7a86: mov rdi,rax
0x7a89: seto al
0x7a8c: test rdi,rdi
0x7a8f: js 0x7a9b
0x7a91: movzx eax,al
0x7a94: test rax,rax
0x7a97: jnz 0x7a9b
0x7a99: jmp 0x7a60
0x7a9b: sub rsp,0x8
0x7a9f: call 0x7cb0
0x7ae2: nop qword ptr [rax+rax*1+0x0]
0x7b00: mov rax,rsi
0x7b03: mul rdx
0x7b06: mov rsi,rax
0x7b09: seto al
0x7b0c: test rsi,rsi
0x7b0f: js 0x7b1b
0x7b11: movzx eax,al
0x7b14: test rax,rax
0x7b17: jnz 0x7b1b
0x7b19: jmp 0x7ac0
0x7b1b: sub rsp,0x8
0x7b1f: call 0x7cb0
0x7b30: test rdi,rdi
0x7b33: mov r9,rdx
0x7b36: mov rcx,qword ptr [rsi]
0x7b39: jz 0x7b70
0x7b3b: xor edx,edx
0x7b3d: mov rax,0x6148914691236517204
0x7b47: div r9
0x7b4a: cmp rax,rcx
0x7b4d: jbe 0x7b8b
0x7b4f: mov rax,rcx
0x7b52: shr rax,0x1
0x7b55: lea rcx,[rax+rcx*1+0x1]
0x7b5a: mov qword ptr [rsi],rcx
0x7b5d: imul rcx,r9
0x7b61: mov rsi,rcx
0x7b64: jmp 0x7ac0
0x7b69: nop qword ptr [rax+0x0]
0x7b70: test rcx,rcx
0x7b73: jz 0x7b98
0x7b75: mov rax,rcx
0x7b78: mul r9
0x7b7b: seto dl
0x7b7e: test rax,rax
0x7b81: movzx edx,dl
0x7b84: js 0x7b8b
0x7b86: test rdx,rdx
0x7b89: jz 0x7b5a
0x7b8b: sub rsp,0x8
0x7b8f: call 0x7cb0
0x7b94: nop qword ptr [rax+0x0]
0x7b98: xor edx,edx
0x7b9a: mov eax,0x80
0x7b9f: xor r8d,r8d
0x7ba2: div r9
0x7ba5: test rax,rax
0x7ba8: setz r8b
0x7bac: lea rcx,[r8+rax*1+0x0]
0x7bb0: jmp 0x7b75
0x7bc0: test rdi,rdi
0x7bc3: mov rax,qword ptr [rsi]
0x7bc6: jz 0x7bf0
0x7bc8: mov rdx,0x6148914691236517203
0x7bd2: cmp rax,rdx
0x7bd5: jnbe 0x7c01
0x7bd7: mov rdx,rax
0x7bda: shr rdx,0x1
0x7bdd: lea rax,[rdx+rax*1+0x1]
0x7be2: mov qword ptr [rsi],rax
0x7be5: mov rsi,rax
0x7be8: jmp 0x7ac0
0x7bed: nop qword ptr [rax]
0x7bf0: test rax,rax
0x7bf3: mov edx,0x80
0x7bf8: cmove rax,rdx
0x7bfc: test rax,rax
0x7bff: jns 0x7be2
0x7c01: sub rsp,0x8
0x7c05: call 0x7cb0
0x7c10: push rbx
0x7c11: mov rbx,rdi
0x7c14: call 0x7a60
0x7c19: mov rdx,rbx
0x7c1c: xor esi,esi
0x7c1e: mov rdi,rax
0x7c21: pop rbx
0x7c22: jmp 0x1d10
0x7ce0: call 0x1b60
0x7d90: mov rbp,qword ptr [rsp]
0x7db6: nop qword ptr [rax+rax*1+0x0]
0x7ddf: nop 
0x7deb: call 0x1c70
0x7e86: nop qword ptr [rax+rax*1+0x0]
0x7ec6: cmp eax,0x22
0x7ec9: mov ebp,0x1
0x7ece: jnz 0x7ef8
0x7ee3: nop qword ptr [rax+rax*1+0x0]
0x7f22: nop qword ptr [rax+rax*1+0x0]
0x7f2c: nop qword ptr [rax+0x0]
0x7fcb: nop qword ptr [rax+rax*1+0x0]
0x80fc: nop qword ptr [rax+0x0]
0x8183: nop qword ptr [rax+rax*1+0x0]
0x81a5: lea rcx,[rip+0x23d4]
0x81ac: lea rsi,[rip+0x22ad]
0x81b3: lea rdi,[rip+0x22c6]
0x81ba: mov edx,0x54
0x81bf: call 0x1cf0
0x8285: nop qword ptr [rax]
0x82e3: nop qword ptr [rax+rax*1+0x0]
0x830f: nop 
0x83de: call 0x1c70
0x83f0: push r13
0x83f2: push r12
0x83f4: mov r13,rsi
0x83f7: push rbp
0x83f8: push rbx
0x83f9: xor ebx,ebx
0x83fb: mov r12,rdi
0x83fe: lea rbp,[rip+0x203c9f]
0x8405: sub rsp,0x18
0x8409: mov rax,0x28
0x8412: mov qword ptr [rsp+0x8],rax
0x8417: xor eax,eax
0x8419: movsx eax,byte ptr [rdi]
0x841c: sub eax,0x30
0x841f: cmp eax,0x9
0x8422: jnbe 0x843c
0x8424: jmp 0x8480
0x8426: nop qword ptr [rax+rax*1+0x0]
0x8430: add ebx,0x1
0x8433: add rbp,0xc
0x8437: cmp ebx,0x23
0x843a: jz 0x84b0
0x843c: mov rsi,r12
0x843f: mov rdi,rbp
0x8442: call 0x1da0
0x8447: test eax,eax
0x8449: jnz 0x8430
0x844b: lea rdx,[rbx+rbx*2+0x0]
0x844f: lea rax,[rip+0x203c4a]
0x8456: mov eax,dword ptr [rax+rdx*4+0x0]
0x8459: mov dword ptr [r13+0x0],eax
0x845d: sar eax,0x1f
0x8460: mov rcx,qword ptr [rsp+0x8]
0x8465: xor rcx,0x28
0x846e: jnz 0x8570
0x8474: add rsp,0x18
0x8478: pop rbx
0x8479: pop rbp
0x847a: pop r12
0x847c: pop r13
0x847e: ret
0x847f: nop 
0x8480: mov edx,0xa
0x8485: mov rsi,rsp
0x8488: call 0x1dc0
0x848d: mov rdx,qword ptr [rsp]
0x8491: cmp [rdx],0x0
0x8494: jnz 0x849c
0x8496: cmp rax,0x40
0x849a: jle 0x8459
0x849c: mov [r13+0x0],0xffffffff
0x84a4: mov eax,0xffffffff
0x84a9: jmp 0x8460
0x84ab: nop qword ptr [rax+rax*1+0x0]
0x84b0: call 0x1f10
0x84b5: mov ebp,eax
0x84b7: call 0x1f50
0x84bc: test ebp,ebp
0x84be: mov ebx,eax
0x84c0: jle 0x84dc
0x84c2: lea rdi,[rip+0x20c2]
0x84c9: mov ecx,0x5
0x84ce: mov rsi,r12
0x84d1: rep cmpsb ds:[rsi],es:[rdi]
0x84d3: setnbe al
0x84d6: sbb al,0x0
0x84d8: test al,al
0x84da: jz 0x8533
0x84dc: test ebx,ebx
0x84de: jle 0x849c
0x84e0: lea rdi,[rip+0x20aa]
0x84e7: mov ecx,0x5
0x84ec: mov rsi,r12
0x84ef: rep cmpsb ds:[rsi],es:[rdi]
0x84f1: setnbe al
0x84f4: sbb al,0x0
0x84f6: test al,al
0x84f8: jnz 0x849c
0x84fa: lea rdi,[r12+0x5]
0x84ff: mov edx,0xa
0x8504: mov rsi,rsp
0x8507: call 0x1dc0
0x850c: mov rdx,qword ptr [rsp]
0x8510: cmp [rdx],0x0
0x8513: jnz 0x849c
0x8515: sub ebp,ebx
0x8517: movsxd rbp,ebp
0x851a: cmp rax,rbp
0x851d: jl 0x849c
0x8523: test rax,rax
0x8526: jnle 0x849c
0x852c: add eax,ebx
0x852e: jmp 0x8459
0x8533: lea rdi,[r12+0x5]
0x8538: mov edx,0xa
0x853d: mov rsi,rsp
0x8540: call 0x1dc0
0x8545: mov rdx,qword ptr [rsp]
0x8549: cmp [rdx],0x0
0x854c: jnz 0x849c
0x8552: test rax,rax
0x8555: js 0x849c
0x855b: sub ebx,ebp
0x855d: movsxd rdx,ebx
0x8560: cmp rax,rdx
0x8563: jnle 0x849c
0x8569: add eax,ebp
0x856b: jmp 0x8459
0x8570: call 0x1c70
0x8580: push rbp
0x8581: lea rax,[rip+0x203b18]
0x8588: push rbx
0x8589: xor edx,edx
0x858b: mov ebx,edi
0x858d: mov rdi,rsi
0x8590: sub rsp,0x18
0x8594: mov rcx,rax
0x8597: jmp 0x85ac
0x8599: nop qword ptr [rax+0x0]
0x85a0: add edx,0x1
0x85a3: add rcx,0xc
0x85a7: cmp edx,0x23
0x85aa: jz 0x85d0
0x85ac: cmp dword ptr [rcx],ebx
0x85ae: jnz 0x85a0
0x85b0: lea rdx,[rdx+rdx*2+0x0]
0x85b4: lea rsi,[rax+rdx*4+0x4]
0x85b9: call 0x1ba0
0x85be: xor eax,eax
0x85c0: add rsp,0x18
0x85c4: pop rbx
0x85c5: pop rbp
0x85c6: ret
0x85c7: nop qword ptr [rax+rax*1+0x0]
0x85d0: mov qword ptr [rsp+0x8],rdi
0x85d5: call 0x1f10
0x85da: mov ebp,eax
0x85dc: call 0x1f50
0x85e1: cmp ebp,ebx
0x85e3: jnle 0x8651
0x85e5: cmp eax,ebx
0x85e7: jl 0x8651
0x85e9: mov edx,eax
0x85eb: mov rdi,qword ptr [rsp+0x8]
0x85f0: sub edx,ebp
0x85f2: sar edx,0x1
0x85f4: add edx,ebp
0x85f6: cmp edx,ebx
0x85f8: jnl 0x8640
0x85fa: mov edx,0x58
0x85ff: mov [rdi],0x414d5452
0x8605: mov ebp,eax
0x8607: mov word ptr [rdi+0x4],dx
0x860b: mov eax,ebx
0x860d: sub eax,ebp
0x860f: jz 0x85c0
0x8611: lea rcx,[rip+0x1f7f]
0x8618: mov r8d,eax
0x861b: add rdi,0x5
0x861f: mov rdx,0xffffffff
0x8626: mov esi,0x1
0x862b: xor eax,eax
0x862d: call 0x1fc0
0x8632: add rsp,0x18
0x8636: xor eax,eax
0x8638: pop rbx
0x8639: pop rbp
0x863a: ret
0x863b: nop qword ptr [rax+rax*1+0x0]
0x8640: mov ecx,0x4e
0x8645: mov [rdi],0x494d5452
0x864b: mov word ptr [rdi+0x4],cx
0x864f: jmp 0x860b
0x8651: mov eax,0xffffffff
0x8656: jmp 0x85c0
0x8660: push r12
0x8662: push rbp
0x8663: mov rbp,rdi
0x8666: push rbx
0x8667: call 0x1bb0
0x866c: mov ebx,dword ptr [rbp+0x0]
0x866f: mov rdi,rbp
0x8672: mov r12,rax
0x8675: call 0x8240
0x867a: and ebx,0x20
0x867d: test ebx,ebx
0x867f: jnz 0x8698
0x8681: test eax,eax
0x8683: jz 0x868f
0x8685: test r12,r12
0x8688: mov eax,0xffffffff
0x868d: jz 0x86c8
0x868f: pop rbx
0x8690: pop rbp
0x8691: pop r12
0x8693: ret
0x8694: nop qword ptr [rax+0x0]
0x8698: test eax,eax
0x869a: jnz 0x86b8
0x869c: call 0x1b70
0x86a1: mov [rax],0x0
0x86a7: mov eax,0xffffffff
0x86ac: pop rbx
0x86ad: pop rbp
0x86ae: pop r12
0x86b0: ret
0x86b1: nop qword ptr [rax+0x0]
0x86b8: pop rbx
0x86b9: mov eax,0xffffffff
0x86be: pop rbp
0x86bf: pop r12
0x86c1: ret
0x86c2: nop qword ptr [rax+rax*1+0x0]
0x86c8: call 0x1b70
0x86cd: cmp [rax],0x9
0x86d0: pop rbx
0x86d1: pop rbp
0x86d2: pop r12
0x86d4: setnz al
0x86d7: movzx eax,al
0x86da: neg eax
0x86dc: ret
0x871a: nop qword ptr [rax+rax*1+0x0]
0x8766: nop qword ptr [rax+rax*1+0x0]
0x87e1: cmp esi,0x406
0x87e7: jnz 0x8830
0x87e9: mov rax,qword ptr [rsp+0x10]
0x87ee: cmp [rip+0x203e63],0x0
0x87f5: mov [rsp],0x18
0x87fc: mov r12d,dword ptr [rax+0x10]
0x8800: mov edx,r12d
0x8803: js 0x8933
0x8809: xor eax,eax
0x880b: mov esi,0x406
0x8810: call 0x1bd0
0x8815: test eax,eax
0x8817: mov ebx,eax
0x8819: js 0x89a8
0x881f: mov [rip+0x203e2f],0x1
0x8829: jmp 0x8870
0x882b: nop qword ptr [rax+rax*1+0x0]
0x8830: cmp esi,0xb
0x8833: jz 0x8860
0x8835: jnle 0x8890
0x8837: cmp esi,0x4
0x883a: jz 0x8910
0x8840: jnle 0x8900
0x8846: cmp esi,0x2
0x8849: jz 0x8910
0x884f: jnle 0x8860
0x8851: cmp esi,0x1
0x8854: jnz 0x88b8
0x8856: nop qword ptr [rax+rax*1+0x0]
0x8860: mov edi,ebp
0x8862: xor eax,eax
0x8864: call 0x1bd0
0x8869: mov ebx,eax
0x886b: nop qword ptr [rax+rax*1+0x0]
0x888f: nop 
0x8890: cmp esi,0x407
0x8896: jnle 0x88e0
0x8898: cmp esi,0x406
0x889e: jnl 0x8910
0x88a0: cmp esi,0x401
0x88a6: jz 0x8860
0x88a8: cmp esi,0x402
0x88ae: jz 0x8910
0x88b0: cmp esi,0x400
0x88b6: jz 0x8910
0x88b8: mov eax,dword ptr [rsp]
0x88bb: cmp eax,0x2f
0x88be: jnbe 0x89fa
0x88c4: add rax,qword ptr [rsp+0x10]
0x88c9: mov rdx,qword ptr [rax]
0x88cc: mov edi,ebp
0x88ce: xor eax,eax
0x88d0: call 0x1bd0
0x88d5: mov ebx,eax
0x88d7: jmp 0x8870
0x88d9: nop qword ptr [rax+0x0]
0x88e0: cmp esi,0x409
0x88e6: jz 0x8910
0x88e8: jl 0x8860
0x88ee: cmp esi,0x40a
0x88f4: jnz 0x88b8
0x88f6: jmp 0x8860
0x88fb: nop qword ptr [rax+rax*1+0x0]
0x8900: cmp esi,0x9
0x8903: jz 0x8860
0x8909: jnle 0x8910
0x890b: cmp esi,0x8
0x890e: jnz 0x88b8
0x8910: mov eax,dword ptr [rsp]
0x8913: cmp eax,0x2f
0x8916: jnbe 0x8a04
0x891c: add rax,qword ptr [rsp+0x10]
0x8921: mov edx,dword ptr [rax]
0x8923: mov edi,ebp
0x8925: xor eax,eax
0x8927: call 0x1bd0
0x892c: mov ebx,eax
0x892e: jmp 0x8870
0x8933: xor esi,esi
0x8935: xor eax,eax
0x8937: call 0x1bd0
0x893c: test eax,eax
0x893e: mov ebx,eax
0x8940: js 0x8870
0x8946: cmp [rip+0x203d0b],0xff
0x894d: jnz 0x8870
0x8953: xor eax,eax
0x8955: mov esi,0x1
0x895a: mov edi,ebx
0x895c: call 0x1bd0
0x8961: test eax,eax
0x8963: js 0x8981
0x8965: or eax,0x1
0x8968: mov esi,0x2
0x896d: mov edi,ebx
0x896f: mov edx,eax
0x8971: xor eax,eax
0x8973: call 0x1bd0
0x8978: cmp eax,0xff
0x897b: jnz 0x8870
0x8981: call 0x1b70
0x8986: mov r12d,dword ptr [rax]
0x8989: mov rbp,rax
0x898c: mov edi,ebx
0x898e: call 0x1d20
0x8993: mov ebx,0xffffffff
0x8998: mov dword ptr [rbp+0x0],r12d
0x899c: jmp 0x8870
0x89a1: nop qword ptr [rax+0x0]
0x89a8: call 0x1b70
0x89ad: cmp [rax],0x16
0x89b0: jnz 0x881f
0x89b6: xor esi,esi
0x89b8: xor eax,eax
0x89ba: mov edx,r12d
0x89bd: mov edi,ebp
0x89bf: call 0x1bd0
0x89c4: test eax,eax
0x89c6: mov ebx,eax
0x89c8: js 0x8870
0x89ce: mov [rip+0x203c80],0xffffffff
0x89d8: jmp 0x8953
0x89dd: call 0x1c70
0x89fa: mov rax,qword ptr [rsp+0x8]
0x89ff: jmp 0x88c9
0x8a04: mov rax,qword ptr [rsp+0x8]
0x8a09: jmp 0x8921
0x8a10: push r15
0x8a12: push r14
0x8a14: mov r15,rdx
0x8a17: push r13
0x8a19: push r12
0x8a1b: lea r12,[rip+0x202ece]
0x8a22: push rbp
0x8a23: lea rbp,[rip+0x202ece]
0x8a2a: push rbx
0x8a2b: mov r13d,edi
0x8a2e: mov r14,rsi
0x8a31: sub rbp,r12
0x8a34: sub rsp,0x8
0x8a38: sar rbp,0x3
0x8a3c: call 0x1b08
0x8a41: test rbp,rbp
0x8a44: jz 0x8a66
0x8a46: xor ebx,ebx
0x8a48: nop qword ptr [rax+rax*1+0x0]
0x8a50: mov rdx,r15
0x8a53: mov rsi,r14
0x8a56: mov edi,r13d
0x8a59: call qword ptr [r12+rbx*8+0x0]
0x8a5d: add rbx,0x1
0x8a61: cmp rbp,rbx
0x8a64: jnz 0x8a50
0x8a66: add rsp,0x8
0x8a6a: pop rbx
0x8a6b: pop rbp
0x8a6c: pop r12
0x8a6e: pop r13
0x8a70: pop r14
0x8a72: pop r15
0x8a74: ret
0x8aa0: sub rsp,0x8
0x8aa4: add rsp,0x8
0x8aa8: ret
