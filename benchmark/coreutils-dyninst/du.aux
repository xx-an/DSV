0x23c6: push 0x0
0x23d6: push 0x1
0x23e6: push 0x2
0x23f6: push 0x3
0x2406: push 0x4
0x2416: push 0x5
0x2426: push 0x6
0x2436: push 0x7
0x2440: jmp qword ptr [rip+0x22589a]
0x2446: push 0x8
0x2456: push 0x9
0x2460: jmp qword ptr [rip+0x22588a]
0x2466: push 0xa
0x2476: push 0xb
0x2480: jmp qword ptr [rip+0x22587a]
0x2486: push 0xc
0x2496: push 0xd
0x24a6: push 0xe
0x24b6: push 0xf
0x24c6: push 0x10
0x24d6: push 0x11
0x24e6: push 0x12
0x24f6: push 0x13
0x2506: push 0x14
0x2516: push 0x15
0x2526: push 0x16
0x2536: push 0x17
0x2546: push 0x18
0x2556: push 0x19
0x2566: push 0x1a
0x2576: push 0x1b
0x2586: push 0x1c
0x2596: push 0x1d
0x25a6: push 0x1e
0x25b6: push 0x1f
0x25c6: push 0x20
0x25d6: push 0x21
0x25e6: push 0x22
0x25f6: push 0x23
0x2606: push 0x24
0x2616: push 0x25
0x2626: push 0x26
0x2636: push 0x27
0x2646: push 0x28
0x2656: push 0x29
0x2666: push 0x2a
0x2670: jmp qword ptr [rip+0x225782]
0x2676: push 0x2b
0x2686: push 0x2c
0x2690: jmp qword ptr [rip+0x225772]
0x2696: push 0x2d
0x26a6: push 0x2e
0x26b6: push 0x2f
0x26c6: push 0x30
0x26d6: push 0x31
0x26e6: push 0x32
0x26f6: push 0x33
0x2706: push 0x34
0x2716: push 0x35
0x2726: push 0x36
0x2736: push 0x37
0x2746: push 0x38
0x2756: push 0x39
0x2760: jmp qword ptr [rip+0x22570a]
0x2766: push 0x3a
0x2776: push 0x3b
0x2786: push 0x3c
0x2796: push 0x3d
0x27a6: push 0x3e
0x27b6: push 0x3f
0x27c6: push 0x40
0x27d6: push 0x41
0x27e6: push 0x42
0x27f6: push 0x43
0x2806: push 0x44
0x2816: push 0x45
0x2826: push 0x46
0x2836: push 0x47
0x2846: push 0x48
0x2856: push 0x49
0x2866: push 0x4a
0x2876: push 0x4b
0x2880: jmp qword ptr [rip+0x22567a]
0x2886: push 0x4c
0x2896: push 0x4d
0x28a6: push 0x4e
0x28b6: push 0x4f
0x28c6: push 0x50
0x28d6: push 0x51
0x28e0: jmp qword ptr [rip+0x22564a]
0x28e6: push 0x52
0x28f0: jmp qword ptr [rip+0x225642]
0x28f6: push 0x53
0x2906: push 0x54
0x2916: push 0x55
0x2926: push 0x56
0x2936: push 0x57
0x2946: push 0x58
0x2956: push 0x59
0x2966: push 0x5a
0x2976: push 0x5b
0x2986: push 0x5c
0x2996: push 0x5d
0x29a6: push 0x5e
0x29b6: push 0x5f
0x29c6: push 0x60
0x29d6: push 0x61
0x29e6: push 0x62
0x29f6: push 0x63
0x2a06: push 0x64
0x2a16: nop 
0x2a18: jmp qword ptr [rip+0x2255da]
0x2a1e: nop 
0x2a20: lea rcx,[rip+0x1f039]
0x2a27: lea rsi,[rip+0x1ea7a]
0x2a2e: lea rdi,[rip+0x1eac1]
0x2a35: sub rsp,0x8
0x2a39: mov edx,0xb3
0x2a3e: call 0x2600
0x2d06: mov qword ptr [rsp+0x8],rax
0x2d0b: call 0x2410
0x2d10: mov rcx,qword ptr [rsp+0x8]
0x2d15: mov esi,dword ptr [rax]
0x2d17: lea rdx,[rip+0x1e772]
0x2d1e: xor edi,edi
0x2d20: xor eax,eax
0x2d22: call 0x28a0
0x2d27: mov [rsp+0x8],0x0
0x2d2c: jmp 0x2b48
0x3425: lea rsi,[rip+0x1da94]
0x342c: xor edi,edi
0x342e: mov rbp,rax
0x3431: mov edx,0x5
0x3436: call 0x2510
0x343b: xor esi,esi
0x343d: mov rdx,rax
0x3440: xor edi,edi
0x3442: xor eax,eax
0x3444: mov rcx,rbp
0x3447: call 0x28a0
0x344c: cmp [rbx],0x0
0x344f: jnz 0x34e1
0x3455: nop qword ptr [rax]
0x3488: lea rdx,[rip+0x1c897]
0x348f: mov rcx,rax
0x3492: mov r9,rbp
0x3495: mov r8,rbx
0x3498: xor esi,esi
0x349a: xor edi,edi
0x349c: xor eax,eax
0x349e: call 0x28a0
0x34a3: mov [rsp+0x18],0x0
0x34a8: jmp 0x3000
0x34ad: nop qword ptr [rax]
0x34e1: mov [rsp+0x18],0x0
0x34e6: jmp 0x3000
0x356e: lea rsi,[rip+0x1c6e2]
0x3575: mov edx,0x5
0x357a: xor edi,edi
0x357c: mov rbp,rax
0x357f: call 0x2510
0x3584: mov rbx,rax
0x3587: call 0x2410
0x358c: mov esi,dword ptr [rax]
0x358e: mov rcx,rbp
0x3591: mov rdx,rbx
0x3594: xor edi,edi
0x3596: xor eax,eax
0x3598: call 0x28a0
0x359d: mov [rsp+0x18],0x0
0x3698: lea rsi,[rip+0x1c5f6]
0x369f: mov edx,0x5
0x36a4: xor edi,edi
0x36a6: mov rbx,rax
0x36a9: call 0x2510
0x36ae: mov esi,dword ptr [r14+0x40]
0x36b2: mov rdx,rax
0x36b5: mov rcx,rbx
0x36b8: xor edi,edi
0x36ba: xor eax,eax
0x36bc: call 0x28a0
0x36c1: jmp 0x31b0
0x3768: mov edi,0x1
0x376d: call 0x4240
0x377e: lea rsi,[rip+0x1c3f6]
0x3785: mov edx,0x5
0x378a: xor edi,edi
0x378c: mov qword ptr [rsp+0x8],rax
0x3791: call 0x2510
0x3796: mov rcx,qword ptr [rsp+0x8]
0x379b: mov rdx,rax
0x379e: xor esi,esi
0x37a0: xor edi,edi
0x37a2: xor eax,eax
0x37a4: call 0x28a0
0x37a9: mov [rsp+0x8],0x0
0x37ae: jmp 0x2b48
0x38e9: lea rsi,[rip+0x1c34c]
0x38f0: mov edx,0x5
0x38f5: xor edi,edi
0x38f7: mov rbp,rax
0x38fa: call 0x2510
0x38ff: mov rbx,rax
0x3902: call 0x2410
0x3907: mov esi,dword ptr [rax]
0x3909: mov rcx,rbp
0x390c: mov rdx,rbx
0x390f: mov edi,0x1
0x3914: xor eax,eax
0x3916: call 0x28a0
0x3951: jmp 0x3706
0x396e: lea rsi,[rip+0x1c30c]
0x3975: mov edx,0x5
0x397a: xor edi,edi
0x397c: mov rbp,rax
0x397f: call 0x2510
0x3984: mov esi,dword ptr [rbx]
0x3986: mov rdx,rax
0x3989: mov rcx,rbp
0x398c: xor edi,edi
0x398e: xor eax,eax
0x3990: call 0x28a0
0x3995: jmp 0x36e9
0x39aa: lea rsi,[rip+0x1c306]
0x39b1: mov edx,0x5
0x39b6: xor edi,edi
0x39b8: mov rbx,rax
0x39bb: call 0x2510
0x39c0: mov esi,dword ptr [r14+0x40]
0x39c4: mov rdx,rax
0x39c7: mov rcx,rbx
0x39ca: xor edi,edi
0x39cc: xor eax,eax
0x39ce: call 0x28a0
0x39d3: jmp 0x3400
0x39f9: mov rbx,qword ptr [rip+0x224610]
0x3a00: test rbx,rbx
0x3a03: jnz 0x3744
0x3a3a: jmp 0x2f1f
0x3c71: mov esi,dword ptr [r14+0x40]
0x3c75: lea rdx,[rip+0x1d814]
0x3c7c: mov rcx,rax
0x3c7f: xor edi,edi
0x3c81: xor eax,eax
0x3c83: call 0x28a0
0x3c88: jmp 0x31b0
0x3cf9: lea rsi,[rip+0x1d200]
0x3d00: mov rbx,rax
0x3d03: xor edi,edi
0x3d05: mov edx,0x5
0x3d0a: call 0x2510
0x3d0f: mov rcx,rbx
0x3d12: mov rdx,rax
0x3d15: xor esi,esi
0x3d17: xor edi,edi
0x3d19: xor eax,eax
0x3d1b: call 0x28a0
0x3d20: jmp 0x3400
0x3de4: call 0x2560
0x3df3: lea rsi,[rip+0x1be31]
0x3dfa: mov rbx,rax
0x3dfd: mov edx,0x5
0x3e02: xor edi,edi
0x3e04: call 0x2510
0x3e09: mov rcx,rbx
0x3e0c: mov rdx,rax
0x3e0f: xor esi,esi
0x3e11: xor edi,edi
0x3e13: xor eax,eax
0x3e15: call 0x28a0
0x3e1a: lea rsi,[rip+0x1d03f]
0x3e21: mov edx,0x5
0x3e26: xor edi,edi
0x3e28: call 0x2510
0x3e2d: mov rdi,qword ptr [rip+0x2242ac]
0x3e34: lea rdx,[rip+0x1e155]
0x3e3b: mov rcx,rax
0x3e3e: mov esi,0x1
0x3e43: xor eax,eax
0x3e45: call 0x2970
0x3e4a: mov edi,0x1
0x3e4f: call 0x4240
0x3e8f: lea rsi,[rip+0x1be5b]
0x3e96: mov rbx,rax
0x3e99: mov edx,0x5
0x3e9e: xor edi,edi
0x3ea0: call 0x2510
0x3ea5: mov rcx,rbx
0x3ea8: mov rdx,rax
0x3eab: xor esi,esi
0x3ead: mov edi,0x1
0x3eb2: xor eax,eax
0x3eb4: call 0x28a0
0x3f6a: hlt 
0x3f70: lea rdi,[rip+0x224129]
0x3f77: push rbp
0x3f78: lea rax,[rip+0x224121]
0x3f7f: cmp rax,rdi
0x3f82: mov rbp,rsp
0x3f85: jz 0x3fa0
0x3f87: mov rax,qword ptr [rip+0x224042]
0x3f8e: test rax,rax
0x3f91: jz 0x3fa0
0x3f93: pop rbp
0x3f94: jmp rax
0x3f96: nop qword ptr [rax+rax*1+0x0]
0x3fa0: pop rbp
0x3fa1: ret
0x3fb0: lea rdi,[rip+0x2240e9]
0x3fb7: lea rsi,[rip+0x2240e2]
0x3fbe: push rbp
0x3fbf: sub rsi,rdi
0x3fc2: mov rbp,rsp
0x3fc5: sar rsi,0x3
0x3fc9: mov rax,rsi
0x3fcc: shr rax,0x3f
0x3fd0: add rsi,rax
0x3fd3: sar rsi,0x1
0x3fd6: jz 0x3ff0
0x3fd8: mov rax,qword ptr [rip+0x224011]
0x3fdf: test rax,rax
0x3fe2: jz 0x3ff0
0x3fe4: pop rbp
0x3fe5: jmp rax
0x3fe7: nop qword ptr [rax+rax*1+0x0]
0x3ff0: pop rbp
0x3ff1: ret
0x4000: cmp [rip+0x2240e1],0x0
0x4007: jnz 0x4038
0x4009: cmp [rip+0x223fe7],0x0
0x4011: push rbp
0x4012: mov rbp,rsp
0x4015: jz 0x4023
0x4017: mov rdi,qword ptr [rip+0x223fea]
0x401e: call 0x2a18
0x4023: call 0x3f70
0x4028: mov [rip+0x2240b9],0x1
0x402f: pop rbp
0x4030: ret
0x4031: nop qword ptr [rax+0x0]
0x4038: rep ret
0x4040: push rbp
0x4041: mov rbp,rsp
0x4044: pop rbp
0x4045: jmp 0x3fb0
0x40b9: nop qword ptr [rax+0x0]
0x40d5: call 0x2560
0x41cf: nop 
0x41da: jmp 0x413d
0x41df: nop 
0x41f9: lea rsi,[rip+0x1b86d]
0x4200: mov r12,rax
0x4203: xor edi,edi
0x4205: mov edx,0x5
0x420a: call 0x2510
0x420f: xor esi,esi
0x4211: mov rdx,rax
0x4214: xor edi,edi
0x4216: mov rcx,r12
0x4219: xor eax,eax
0x421b: call 0x28a0
0x4220: mov rsi,qword ptr [rip+0x223e81]
0x4227: mov rdi,rbx
0x422a: call 0x26a0
0x422f: jmp 0x4186
0x4234: call 0x2560
0x4700: mov edi,0x1
0x4705: jmp 0x4240
0x4756: nop qword ptr [rax+rax*1+0x0]
0x4817: nop qword ptr [rax+rax*1+0x0]
0x4863: mov rdx,r12
0x4866: mov rbp,rax
0x4869: mov esi,0x8
0x486e: xor edi,edi
0x4870: call 0xbf70
0x4875: mov r8,rbp
0x4878: mov rdx,rbx
0x487b: mov rcx,rax
0x487e: pop rbx
0x487f: pop rbp
0x4880: pop r12
0x4882: xor esi,esi
0x4884: xor edi,edi
0x4886: xor eax,eax
0x4888: jmp 0x28a0
0x488d: nop qword ptr [rax]
0x48b0: push r15
0x48b2: push r14
0x48b4: mov r14,rdi
0x48b7: push r13
0x48b9: push r12
0x48bb: xor edi,edi
0x48bd: push rbp
0x48be: push rbx
0x48bf: mov rbp,rsi
0x48c2: lea rsi,[rip+0x1cba8]
0x48c9: mov r12,rdx
0x48cc: mov edx,0x5
0x48d1: sub rsp,0x8
0x48d5: mov rbx,qword ptr [rip+0x223804]
0x48dc: call 0x2510
0x48e1: mov rdi,rax
0x48e4: mov rsi,rbx
0x48e7: call 0x26a0
0x48ec: mov r15,qword ptr [r14]
0x48ef: test r15,r15
0x48f2: jz 0x4988
0x48f8: xor r13d,r13d
0x48fb: xor ebx,ebx
0x48fd: jmp 0x4938
0x48ff: nop 
0x4900: mov rdi,r15
0x4903: add rbx,0x1
0x4907: mov r13,rbp
0x490a: call 0xc360
0x490f: mov rdi,qword ptr [rip+0x2237ca]
0x4916: lea rdx,[rip+0x1cb69]
0x491d: mov rcx,rax
0x4920: mov esi,0x1
0x4925: xor eax,eax
0x4927: add rbp,r12
0x492a: call 0x2970
0x492f: mov r15,qword ptr [r14+rbx*8+0x0]
0x4933: test r15,r15
0x4936: jz 0x4988
0x4938: test rbx,rbx
0x493b: jz 0x4900
0x493d: mov rdx,r12
0x4940: mov rsi,rbp
0x4943: mov rdi,r13
0x4946: call 0x2680
0x494b: test eax,eax
0x494d: jnz 0x4900
0x494f: mov rdi,r15
0x4952: add rbx,0x1
0x4956: add rbp,r12
0x4959: call 0xc360
0x495e: mov rdi,qword ptr [rip+0x22377b]
0x4965: lea rdx,[rip+0x1cb22]
0x496c: mov rcx,rax
0x496f: mov esi,0x1
0x4974: xor eax,eax
0x4976: call 0x2970
0x497b: mov r15,qword ptr [r14+rbx*8+0x0]
0x497f: test r15,r15
0x4982: jnz 0x4938
0x4984: nop qword ptr [rax+0x0]
0x4988: mov rdi,qword ptr [rip+0x223751]
0x498f: mov rax,qword ptr [rdi+0x28]
0x4993: cmp rax,qword ptr [rdi+0x30]
0x4997: jnb 0x49b8
0x4999: lea rdx,[rax+0x1]
0x499d: mov qword ptr [rdi+0x28],rdx
0x49a1: mov [rax],0xa
0x49a4: add rsp,0x8
0x49a8: pop rbx
0x49a9: pop rbp
0x49aa: pop r12
0x49ac: pop r13
0x49ae: pop r14
0x49b0: pop r15
0x49b2: ret
0x49b3: nop qword ptr [rax+rax*1+0x0]
0x49b8: add rsp,0x8
0x49bc: mov esi,0xa
0x49c1: pop rbx
0x49c2: pop rbp
0x49c3: pop r12
0x49c5: pop r13
0x49c7: pop r14
0x49c9: pop r15
0x49cb: jmp 0x25c0
0x4a23: mov rdx,r15
0x4a26: mov rsi,rbp
0x4a29: mov rdi,rbx
0x4a2c: call 0x48b0
0x4a31: call r13
0x4a34: mov rax,0xffffffff
0x4a3b: jmp 0x4a06
0x4a40: push r14
0x4a42: push r13
0x4a44: push r12
0x4a46: push rbp
0x4a47: push rbx
0x4a48: mov r14,qword ptr [rsi]
0x4a4b: test r14,r14
0x4a4e: jz 0x4a81
0x4a50: mov r12,rcx
0x4a53: mov r13,rdi
0x4a56: mov rbp,rdx
0x4a59: lea rbx,[rsi+0x8]
0x4a5d: jmp 0x4a6f
0x4a5f: nop 
0x4a60: mov r14,qword ptr [rbx]
0x4a63: add rbp,r12
0x4a66: add rbx,0x8
0x4a6a: test r14,r14
0x4a6d: jz 0x4a81
0x4a6f: mov rdx,r12
0x4a72: mov rsi,rbp
0x4a75: mov rdi,r13
0x4a78: call 0x2680
0x4a7d: test eax,eax
0x4a7f: jnz 0x4a60
0x4a81: pop rbx
0x4a82: mov rax,r14
0x4a85: pop rbp
0x4a86: pop r12
0x4a88: pop r13
0x4a8a: pop r14
0x4a8c: ret
0x4b3f: nop 
0x4b5b: nop qword ptr [rax+rax*1+0x0]
0x4b67: nop qword ptr [rax+rax*1+0x0]
0x4b9b: nop qword ptr [rax+rax*1+0x0]
0x4bd0: mov qword ptr [rip+0x2235d1],rdi
0x4bd7: ret
0x4be0: mov byte ptr [rip+0x2235b9],dil
0x4be7: ret
0x4bf0: push rbp
0x4bf1: push rbx
0x4bf2: sub rsp,0x8
0x4bf6: mov rdi,qword ptr [rip+0x2234ab]
0x4bfd: call 0x1f320
0x4c02: test eax,eax
0x4c04: jz 0x4c1c
0x4c06: call 0x2410
0x4c0b: cmp [rip+0x22358e],0x0
0x4c12: mov rbx,rax
0x4c15: jz 0x4c33
0x4c17: cmp [rax],0x20
0x4c1a: jnz 0x4c33
0x4c1c: mov rdi,qword ptr [rip+0x2234bd]
0x4c23: call 0x1f320
0x4c28: test eax,eax
0x4c2a: jnz 0x4c72
0x4c2c: add rsp,0x8
0x4c30: pop rbx
0x4c31: pop rbp
0x4c32: ret
0x4c33: lea rsi,[rip+0x1c859]
0x4c3a: xor edi,edi
0x4c3c: mov edx,0x5
0x4c41: call 0x2510
0x4c46: mov rdi,qword ptr [rip+0x22355b]
0x4c4d: mov rbp,rax
0x4c50: test rdi,rdi
0x4c53: jz 0x4c7d
0x4c55: call 0xc160
0x4c5a: mov esi,dword ptr [rbx]
0x4c5c: lea rdx,[rip+0x1c83c]
0x4c63: mov rcx,rax
0x4c66: mov r8,rbp
0x4c69: xor edi,edi
0x4c6b: xor eax,eax
0x4c6d: call 0x28a0
0x4c72: mov edi,dword ptr [rip+0x2233b0]
0x4c78: call 0x2440
0x4c7d: mov esi,dword ptr [rbx]
0x4c7f: lea rdx,[rip+0x1c80a]
0x4c86: mov rcx,rax
0x4c89: xor edi,edi
0x4c8b: xor eax,eax
0x4c8d: call 0x28a0
0x4c92: jmp 0x4c72
0x4cc0: mov rax,rdi
0x4cc3: xor edx,edx
0x4cc5: div rsi
0x4cc8: mov rax,rdx
0x4ccb: ret
0x4cd0: push rbx
0x4cd1: mov rbx,rdi
0x4cd4: mov rdi,qword ptr [rdi+0x8]
0x4cd8: call 0x87b0
0x4cdd: mov rdi,rbx
0x4ce0: pop rbx
0x4ce1: jmp 0x2a10
0x4d19: test rax,rax
0x4d1c: jz 0x4d70
0x4d1e: cmp rbx,rax
0x4d21: jz 0x4d78
0x4d23: mov rax,qword ptr [rax+0x8]
0x4d27: mov qword ptr [rbx+0x8],rax
0x4d2b: add rsp,0x10
0x4d2f: pop rbx
0x4d30: pop rbp
0x4d31: pop r12
0x4d33: ret
0x4d34: nop qword ptr [rax+0x0]
0x4d45: nop qword ptr [rax]
0x4d68: nop qword ptr [rax+rax*1+0x0]
0x4d70: xor eax,eax
0x4d72: jmp 0x4d2b
0x4d74: nop qword ptr [rax+0x0]
0x4d78: lea rdx,[rip-0xbf]
0x4d7f: mov [rbp+0x0],0x0
0x4d87: xor r8d,r8d
0x4d8a: xor ecx,ecx
0x4d8c: xor esi,esi
0x4d8e: mov edi,0x3fd
0x4d93: call 0x8560
0x4d98: mov qword ptr [rbx+0x8],rax
0x4d9c: add rsp,0x10
0x4da0: pop rbx
0x4da1: pop rbp
0x4da2: pop r12
0x4da4: ret
0x4ddd: nop qword ptr [rax]
0x4de4: nop qword ptr [rax+0x0]
0x4e71: nop qword ptr [rax+0x0]
0x4f07: nop qword ptr [rax+rax*1+0x0]
0x4f6f: nop 
0x4fa0: sub rsp,0x8
0x4fa4: call 0x9f40
0x4fa9: test eax,eax
0x4fab: setz al
0x4fae: add rsp,0x8
0x4fb2: ret
0x4fc0: sub rsp,0x8
0x4fc4: call 0x26d0
0x4fc9: test eax,eax
0x4fcb: setz al
0x4fce: add rsp,0x8
0x4fd2: ret
0x4ff0: mov eax,edx
0x4ff2: and eax,0x10
0x4ff5: and edx,0x8
0x4ff8: jnz 0x5008
0x4ffa: test eax,eax
0x4ffc: jz 0x5050
0x4ffe: jmp 0x9f40
0x5003: nop qword ptr [rax+rax*1+0x0]
0x5008: push r12
0x500a: push rbp
0x500b: mov rbp,rdi
0x500e: push rbx
0x500f: mov rbx,rsi
0x5012: sub rsp,0x10
0x5016: test eax,eax
0x5018: jnz 0x5058
0x501a: call 0x2530
0x501f: mov rsi,rbx
0x5022: mov rdx,rax
0x5025: mov rdi,rbp
0x5028: mov r12,rax
0x502b: call 0x2420
0x5030: test eax,eax
0x5032: jnz 0x503f
0x5034: movsx edx,byte ptr [rbx+r12*1+0x0]
0x5039: cmp edx,0x2f
0x503c: cmovne eax,edx
0x503f: add rsp,0x10
0x5043: pop rbx
0x5044: pop rbp
0x5045: pop r12
0x5047: ret
0x5048: nop qword ptr [rax+rax*1+0x0]
0x5050: jmp 0x26d0
0x5055: nop qword ptr [rax]
0x5058: mov rdi,rsi
0x505b: call 0xcc10
0x5060: mov r12,rax
0x5063: mov rdi,rax
0x5066: jmp 0x5089
0x5068: nop qword ptr [rax+rax*1+0x0]
0x5070: mov [rax],0x0
0x5073: mov rsi,r12
0x5076: mov rdi,rbp
0x5079: call 0x9f40
0x507e: test eax,eax
0x5080: jle 0x50a6
0x5082: lea rdi,[rbx+0x1]
0x5086: mov [rbx],0x2f
0x5089: mov esi,0x2f
0x508e: call 0x25a0
0x5093: test rax,rax
0x5096: mov rbx,rax
0x5099: jnz 0x5070
0x509b: mov rsi,r12
0x509e: mov rdi,rbp
0x50a1: call 0x9f40
0x50a6: mov rdi,r12
0x50a9: mov dword ptr [rsp+0xc],eax
0x50ad: call 0x2a10
0x50b2: mov eax,dword ptr [rsp+0xc]
0x50b6: add rsp,0x10
0x50ba: pop rbx
0x50bb: pop rbp
0x50bc: pop r12
0x50be: ret
0x50c0: push r15
0x50c2: push r14
0x50c4: xor r14d,r14d
0x50c7: push r13
0x50c9: push r12
0x50cb: lea r12,[rip+0x1c96e]
0x50d2: push rbp
0x50d3: push rbx
0x50d4: mov rbx,rsi
0x50d7: sub rsp,0x68
0x50db: lea rbp,[rsp+0x10]
0x50e0: mov qword ptr [rsp+0x20],rdi
0x50e5: mov [rsp+0x10],0x0
0x50ea: mov rax,0x28
0x50f3: mov qword ptr [rsp+0x58],rax
0x50f8: xor eax,eax
0x50fa: lea rax,[rbp+0x4]
0x50fe: mov [rsp+0x14],0x0
0x5107: mov [rsp+0x1c],0x0
0x510c: mov qword ptr [rsp+0x8],rax
0x5111: jmp 0x5146
0x5113: nop qword ptr [rax+rax*1+0x0]
0x5118: mov edi,r13d
0x511b: call 0x28e0
0x5120: mov rdx,r14
0x5123: cwde 
0x5125: add r15,qword ptr [rsp+0x28]
0x512a: shl rdx,0x5
0x512e: mov [rsp+0x1c],0x0
0x5133: sub rdx,r14
0x5136: add rax,rdx
0x5139: xor edx,edx
0x513b: div rbx
0x513e: mov qword ptr [rsp+0x20],r15
0x5143: mov r14,rdx
0x5146: cmp [rsp+0x10],0x0
0x514b: jnz 0x51b7
0x514d: mov rcx,qword ptr [rsp+0x20]
0x5152: movzx edx,byte ptr [rcx]
0x5155: mov eax,edx
0x5157: shr al,0x5
0x515a: and eax,0x7
0x515d: mov eax,dword ptr [r12+rax*4+0x0]
0x5161: bt eax,edx
0x5164: jnb 0x51a0
0x5166: mov [rsp+0x28],0x1
0x516f: movsx r13d,byte ptr [rcx]
0x5173: mov [rsp+0x30],0x1
0x5178: mov [rsp+0x1c],0x1
0x517d: mov dword ptr [rsp+0x34],r13d
0x5182: test r13d,r13d
0x5185: jz 0x5250
0x518b: cmp [rsp+0x30],0x0
0x5190: mov r15,qword ptr [rsp+0x20]
0x5195: jnz 0x5118
0x5197: movsx eax,byte ptr [r15]
0x519b: jmp 0x5120
0x519d: nop qword ptr [rax]
0x51a0: mov rdi,qword ptr [rsp+0x8]
0x51a5: call 0x2990
0x51aa: test eax,eax
0x51ac: jz 0x52e2
0x51b2: mov [rsp+0x10],0x1
0x51b7: call 0x2520
0x51bc: mov r15,qword ptr [rsp+0x20]
0x51c1: mov rsi,rax
0x51c4: mov rdi,r15
0x51c7: call 0xc380
0x51cc: lea rcx,[rbp+0x4]
0x51d0: lea rdi,[rbp+0x24]
0x51d4: mov rdx,rax
0x51d7: mov rsi,r15
0x51da: call 0x101e0
0x51df: cmp rax,0xffffffff
0x51e3: mov qword ptr [rsp+0x28],rax
0x51e8: jz 0x5280
0x51ee: cmp rax,0xfffffffe
0x51f2: jz 0x52a0
0x51f8: test rax,rax
0x51fb: jnz 0x52d8
0x5201: mov rax,qword ptr [rsp+0x20]
0x5206: mov [rsp+0x28],0x1
0x520f: cmp [rax],0x0
0x5212: jnz 0x5320
0x5218: mov r13d,dword ptr [rsp+0x34]
0x521d: test r13d,r13d
0x5220: jnz 0x5301
0x5226: lea rdi,[rbp+0x4]
0x522a: mov [rsp+0x30],0x1
0x522f: call 0x2990
0x5234: test eax,eax
0x5236: jz 0x52c8
0x523c: test r13d,r13d
0x523f: mov [rsp+0x10],0x0
0x5244: mov [rsp+0x1c],0x1
0x5249: jnz 0x518b
0x524f: nop 
0x5250: mov rsi,qword ptr [rsp+0x58]
0x5255: xor rsi,0x28
0x525e: mov rax,r14
0x5261: jnz 0x533f
0x5267: add rsp,0x68
0x526b: pop rbx
0x526c: pop rbp
0x526d: pop r12
0x526f: pop r13
0x5271: pop r14
0x5273: pop r15
0x5275: ret
0x5276: nop qword ptr [rax+rax*1+0x0]
0x5280: mov [rsp+0x28],0x1
0x5289: mov [rsp+0x30],0x0
0x528e: mov r13d,dword ptr [rsp+0x34]
0x5293: mov [rsp+0x1c],0x1
0x5298: jmp 0x518b
0x529d: nop qword ptr [rax]
0x52a0: mov rdi,qword ptr [rsp+0x20]
0x52a5: call 0x2530
0x52aa: mov [rsp+0x30],0x0
0x52af: mov qword ptr [rsp+0x28],rax
0x52b4: mov r13d,dword ptr [rsp+0x34]
0x52b9: mov [rsp+0x1c],0x1
0x52be: jmp 0x518b
0x52c3: nop qword ptr [rax+rax*1+0x0]
0x52c8: mov [rsp+0x1c],0x1
0x52cd: jmp 0x5182
0x52d2: nop qword ptr [rax+rax*1+0x0]
0x52d8: mov r13d,dword ptr [rsp+0x34]
0x52dd: jmp 0x5226
0x52e2: lea rcx,[rip+0x1c427]
0x52e9: lea rsi,[rip+0x1c1b8]
0x52f0: lea rdi,[rip+0x1c1d1]
0x52f7: mov edx,0x96
0x52fc: call 0x2600
0x5301: lea rcx,[rip+0x1c408]
0x5308: lea rsi,[rip+0x1c199]
0x530f: lea rdi,[rip+0x1c1e0]
0x5316: mov edx,0xb3
0x531b: call 0x2600
0x5320: lea rcx,[rip+0x1c3e9]
0x5327: lea rsi,[rip+0x1c17a]
0x532e: lea rdi,[rip+0x1c1aa]
0x5335: mov edx,0xb2
0x533a: call 0x2600
0x533f: call 0x2560
0x5350: push rbp
0x5351: push rbx
0x5352: mov rbx,rdi
0x5355: mov edi,0x10
0x535a: mov rbp,rsi
0x535d: sub rsp,0x8
0x5361: call 0xc9e0
0x5366: mov rdx,qword ptr [rbx+0x8]
0x536a: mov qword ptr [rax+0x8],rbp
0x536e: mov qword ptr [rbx+0x8],rax
0x5372: mov qword ptr [rax],rdx
0x5375: add rsp,0x8
0x5379: pop rbx
0x537a: pop rbp
0x537b: ret
0x53af: nop 
0x53b3: nop qword ptr [rax+rax*1+0x0]
0x53c3: nop qword ptr [rax+rax*1+0x0]
0x53d1: nop qword ptr [rax+0x0]
0x53f5: nop qword ptr [rax]
0x53fd: movzx eax,byte ptr [rdi+0x1]
0x5401: cmp al,0x28
0x5403: jz 0x53bd
0x5405: mov rdi,rcx
0x5408: jmp 0x539e
0x5420: push r14
0x5422: push r13
0x5424: mov r14,rdi
0x5427: push r12
0x5429: push rbp
0x542a: push rbx
0x542b: mov rbx,qword ptr [rdi]
0x542e: test rbx,rbx
0x5431: jz 0x54aa
0x5433: nop qword ptr [rax+rax*1+0x0]
0x5438: mov eax,dword ptr [rbx+0x8]
0x543b: mov r13,qword ptr [rbx]
0x543e: test eax,eax
0x5440: jz 0x54e8
0x5446: cmp eax,0x1
0x5449: jnz 0x549a
0x544b: cmp [rbx+0x20],0x0
0x5450: mov rdi,qword ptr [rbx+0x10]
0x5454: jz 0x5495
0x5456: xor r12d,r12d
0x5459: xor ebp,ebp
0x545b: jmp 0x546e
0x545d: nop qword ptr [rax]
0x5460: add rbp,0x1
0x5464: add r12,0x48
0x5468: cmp rbp,qword ptr [rbx+0x20]
0x546c: jnb 0x5495
0x546e: lea rax,[rdi+r12*1+0x0]
0x5472: test [rax],0x8000000
0x5478: jz 0x5460
0x547a: lea rdi,[rax+0x8]
0x547e: add rbp,0x1
0x5482: add r12,0x48
0x5486: call 0x1ebe0
0x548b: cmp rbp,qword ptr [rbx+0x20]
0x548f: mov rdi,qword ptr [rbx+0x10]
0x5493: jb 0x546e
0x5495: call 0x2a10
0x549a: mov rdi,rbx
0x549d: mov rbx,r13
0x54a0: call 0x2a10
0x54a5: test r13,r13
0x54a8: jnz 0x5438
0x54aa: mov rbx,qword ptr [r14+0x8]
0x54ae: test rbx,rbx
0x54b1: jz 0x54d4
0x54b3: nop qword ptr [rax+rax*1+0x0]
0x54b8: mov rdi,qword ptr [rbx+0x8]
0x54bc: mov rbp,qword ptr [rbx]
0x54bf: call 0x2a10
0x54c4: mov rdi,rbx
0x54c7: mov rbx,rbp
0x54ca: call 0x2a10
0x54cf: test rbp,rbp
0x54d2: jnz 0x54b8
0x54d4: pop rbx
0x54d5: mov rdi,r14
0x54d8: pop rbp
0x54d9: pop r12
0x54db: pop r13
0x54dd: pop r14
0x54df: jmp 0x2a10
0x54e4: nop qword ptr [rax+0x0]
0x54e8: mov rdi,qword ptr [rbx+0x10]
0x54ec: call 0x87b0
0x54f1: mov rdi,rbx
0x54f4: mov rbx,r13
0x54f7: call 0x2a10
0x54fc: test r13,r13
0x54ff: jnz 0x5438
0x5505: jmp 0x54aa
0x5583: nop qword ptr [rax+rax*1+0x0]
0x55c7: nop qword ptr [rax+rax*1+0x0]
0x569a: nop qword ptr [rax+rax*1+0x0]
0x5701: nop qword ptr [rax+0x0]
0x57d0: mov rbx,rax
0x57d3: mov [rax+0x8],0x1
0x57da: mov dword ptr [rax+0xc],ebp
0x57dd: mov rax,qword ptr [r12]
0x57e1: mov qword ptr [r12],rbx
0x57e5: mov qword ptr [rbx],rax
0x5819: mov r12d,ebp
0x581c: sar r12d,0x3
0x5820: and r12d,0x2
0x5824: or r12d,0x9
0x5828: and ebp,0x8
0x582b: jz 0x5a70
0x5831: mov rdi,r13
0x5834: call 0x2530
0x5839: test rax,rax
0x583c: jz 0x5868
0x583e: cmp [r13+rax*1-0x1],0x2f
0x5844: lea rbp,[rax-0x1]
0x5848: jz 0x5863
0x584a: jmp 0x5a92
0x584f: nop 
0x5850: cmp [r13+rbp*1-0x1],0x2f
0x5856: lea rax,[rbp-0x1]
0x585a: jnz 0x5a98
0x5860: mov rbp,rax
0x5863: test rbp,rbp
0x5866: jnz 0x5850
0x5868: lea rax,[r15-0x1]
0x586c: mov qword ptr [rbx+0x20],rax
0x5870: add rsp,0x8
0x5874: pop rbx
0x5875: pop rbp
0x5876: pop r12
0x5878: pop r13
0x587a: pop r14
0x587c: pop r15
0x587e: ret
0x587f: nop 
0x589a: lea rdx,[rip-0x901]
0x58a1: mov rbx,rax
0x58a4: mov [rax+0x8],0x0
0x58ab: mov dword ptr [rax+0xc],ebp
0x58ae: lea rcx,[rip-0x8f5]
0x58b5: mov eax,ebp
0x58b7: and eax,0x10
0x58ba: lea rax,[rip-0x801]
0x58c1: lea r8,[rip-0x938]
0x58c8: cmovne rcx,rdx
0x58cc: lea rdx,[rip-0x8f3]
0x58d3: cmovne rdx,rax
0x58d7: xor esi,esi
0x58d9: xor edi,edi
0x58db: call 0x8560
0x58e0: mov qword ptr [rbx+0x10],rax
0x58e4: mov rax,qword ptr [r12]
0x58e8: mov qword ptr [r12],rbx
0x58ec: mov qword ptr [rbx],rax
0x5914: cmp r12,rax
0x5917: jz 0x5870
0x591d: add rsp,0x8
0x5921: mov rdi,r12
0x5924: pop rbx
0x5925: pop rbp
0x5926: pop r12
0x5928: pop r13
0x592a: pop r14
0x592c: pop r15
0x592e: jmp 0x2a10
0x5933: nop qword ptr [rax+rax*1+0x0]
0x5949: nop qword ptr [rax+0x0]
0x5958: nop qword ptr [rax+rax*1+0x0]
0x5989: nop qword ptr [rax+0x0]
0x599a: nop qword ptr [rax+rax*1+0x0]
0x59a8: mov rdi,r13
0x59ab: call 0xcc10
0x59b0: mov edi,0x10
0x59b5: mov r13,rax
0x59b8: call 0xc9e0
0x59bd: mov rdx,qword ptr [r12+0x8]
0x59c2: mov qword ptr [rax+0x8],r13
0x59c6: mov qword ptr [r12+0x8],rax
0x59cb: mov qword ptr [rax],rdx
0x59e1: nop qword ptr [rax+0x0]
0x59fd: nop qword ptr [rax]
0x5a6e: nop 
0x5a70: lea rdi,[r14+0x8]
0x5a74: mov edx,r12d
0x5a77: mov rsi,r13
0x5a7a: call 0x1ea40
0x5a7f: mov ebp,eax
0x5a81: test ebp,ebp
0x5a83: jz 0x5870
0x5a89: mov r15,qword ptr [rbx+0x20]
0x5a8d: jmp 0x5868
0x5a92: mov rbp,rax
0x5a95: nop qword ptr [rax]
0x5a98: lea rdi,[rbp+0x7]
0x5a9c: call 0xc9e0
0x5aa1: mov rdx,rbp
0x5aa4: mov r15,rax
0x5aa7: mov rsi,r13
0x5aaa: mov rdi,rax
0x5aad: add rbp,r15
0x5ab0: call 0x2710
0x5ab5: lea rdi,[r14+0x8]
0x5ab9: mov eax,0x3f29
0x5abe: mov [rbp+0x0],0x2a2e2f28
0x5ac5: mov word ptr [rbp+0x4],ax
0x5ac9: mov [rbp+0x6],0x0
0x5acd: mov edx,r12d
0x5ad0: mov rsi,r15
0x5ad3: call 0x1ea40
0x5ad8: mov rdi,r15
0x5adb: mov ebp,eax
0x5add: call 0x2a10
0x5ae2: jmp 0x5a81
0x5b43: nop qword ptr [rax+rax*1+0x0]
0x5b7e: nop 
0x5c1b: nop qword ptr [rax+rax*1+0x0]
0x5c9a: nop qword ptr [rax+rax*1+0x0]
0x5cbb: nop qword ptr [rax+rax*1+0x0]
0x5cc5: movzx ecx,byte ptr [r14-0x2]
0x5cca: test [rax+rcx*2+0x1],0x20
0x5ccf: jnz 0x5cf0
0x5cd1: jmp 0x5c4d
0x5cd6: nop qword ptr [rax+rax*1+0x0]
0x5ce0: movzx ecx,byte ptr [r15-0x1]
0x5ce5: test [rax+rcx*2+0x1],0x20
0x5cea: jz 0x5c4d
0x5cf0: sub r15,0x1
0x5cf4: cmp r15,rsi
0x5cf7: jnz 0x5ce0
0x5cf9: jmp 0x5c64
0x5d7b: nop qword ptr [rax+rax*1+0x0]
0x5daf: nop 
0x5e0e: nop 
0x5e6e: nop 
0x5f6e: nop 
0x6045: nop qword ptr [rax]
0x6059: nop qword ptr [rax+0x0]
0x606d: nop qword ptr [rax]
0x607a: nop qword ptr [rax+rax*1+0x0]
0x6156: nop qword ptr [rax+rax*1+0x0]
0x618b: nop qword ptr [rax+rax*1+0x0]
0x619a: nop qword ptr [rax+rax*1+0x0]
0x61da: nop qword ptr [rax+rax*1+0x0]
0x6202: nop qword ptr [rax+rax*1+0x0]
0x6219: nop qword ptr [rax+0x0]
0x634d: nop qword ptr [rax]
0x6e23: nop qword ptr [rax+rax*1+0x0]
0x7178: nop qword ptr [rax+rax*1+0x0]
0x718f: nop 
0x7265: nop qword ptr [rax]
0x7282: nop qword ptr [rax+rax*1+0x0]
0x72a6: nop qword ptr [rax+rax*1+0x0]
0x72c9: nop qword ptr [rax+0x0]
0x72ea: nop qword ptr [rax+rax*1+0x0]
0x7726: nop qword ptr [rax+rax*1+0x0]
0x77dc: nop qword ptr [rax+0x0]
0x7ae6: add rsp,0x18
0x7aea: ret
0x7c32: nop qword ptr [rax+rax*1+0x0]
0x7c41: nop qword ptr [rax+0x0]
0x7c98: nop qword ptr [rax+rax*1+0x0]
0x7cbf: nop 
0x7cc7: nop qword ptr [rax+rax*1+0x0]
0x7cd9: nop qword ptr [rax+0x0]
0x7d4e: nop 
0x7d90: mov rax,rdi
0x7d93: xor edx,edx
0x7d95: ror rax,0x3
0x7d99: div rsi
0x7d9c: mov rax,rdx
0x7d9f: ret
0x7da0: cmp rdi,rsi
0x7da3: setz al
0x7da6: ret
0x7e3b: nop qword ptr [rax+rax*1+0x0]
0x7e9a: nop qword ptr [rax+rax*1+0x0]
0x7ed9: nop qword ptr [rax+0x0]
0x7ee9: nop qword ptr [rax+0x0]
0x7fc1: nop qword ptr [rax+0x0]
0x808c: nop qword ptr [rax+0x0]
0x809a: nop qword ptr [rax+rax*1+0x0]
0x80af: add rsp,0x8
0x80b3: xor eax,eax
0x80b5: pop rbx
0x80b6: pop rbp
0x80b7: pop r12
0x80b9: pop r13
0x80bb: pop r14
0x80bd: pop r15
0x80bf: ret
0x80c0: mov rax,qword ptr [rdi+0x10]
0x80c4: ret
0x80d0: mov rax,qword ptr [rdi+0x18]
0x80d4: ret
0x80e0: mov rax,qword ptr [rdi+0x20]
0x80e4: ret
0x80f0: mov rsi,qword ptr [rdi]
0x80f3: mov rdi,qword ptr [rdi+0x8]
0x80f7: xor eax,eax
0x80f9: cmp rsi,rdi
0x80fc: jnb 0x8137
0x80fe: nop 
0x8100: cmp [rsi],0x0
0x8104: jz 0x812c
0x8106: mov rdx,qword ptr [rsi+0x8]
0x810a: mov ecx,0x1
0x810f: test rdx,rdx
0x8112: jz 0x8125
0x8114: nop qword ptr [rax+0x0]
0x8118: mov rdx,qword ptr [rdx+0x8]
0x811c: add rcx,0x1
0x8120: test rdx,rdx
0x8123: jnz 0x8118
0x8125: cmp rax,rcx
0x8128: cmovnae rax,rcx
0x812c: add rsi,0x10
0x8130: cmp rsi,rdi
0x8133: jb 0x8100
0x8135: rep ret
0x8137: rep ret
0x8140: mov rcx,qword ptr [rdi]
0x8143: mov r8,qword ptr [rdi+0x8]
0x8147: xor edx,edx
0x8149: xor esi,esi
0x814b: cmp rcx,r8
0x814e: jnb 0x8186
0x8150: cmp [rcx],0x0
0x8154: jz 0x817d
0x8156: mov rax,qword ptr [rcx+0x8]
0x815a: add rsi,0x1
0x815e: add rdx,0x1
0x8162: test rax,rax
0x8165: jz 0x817d
0x8167: nop qword ptr [rax+rax*1+0x0]
0x8170: mov rax,qword ptr [rax+0x8]
0x8174: add rdx,0x1
0x8178: test rax,rax
0x817b: jnz 0x8170
0x817d: add rcx,0x10
0x8181: cmp rcx,r8
0x8184: jb 0x8150
0x8186: xor eax,eax
0x8188: cmp qword ptr [rdi+0x18],rsi
0x818c: jz 0x8190
0x818e: rep ret
0x8190: cmp qword ptr [rdi+0x20],rdx
0x8194: setz al
0x8197: ret
0x81a0: push r13
0x81a2: push r12
0x81a4: mov r12,rsi
0x81a7: push rbp
0x81a8: push rbx
0x81a9: xor ebx,ebx
0x81ab: sub rsp,0x8
0x81af: mov rsi,qword ptr [rdi]
0x81b2: mov rcx,qword ptr [rdi+0x20]
0x81b6: mov rbp,qword ptr [rdi+0x10]
0x81ba: mov r13,qword ptr [rdi+0x18]
0x81be: mov rdi,qword ptr [rdi+0x8]
0x81c2: cmp rsi,rdi
0x81c5: jnb 0x8205
0x81c7: nop qword ptr [rax+rax*1+0x0]
0x81d0: cmp [rsi],0x0
0x81d4: jz 0x81fc
0x81d6: mov rax,qword ptr [rsi+0x8]
0x81da: mov edx,0x1
0x81df: test rax,rax
0x81e2: jz 0x81f5
0x81e4: nop qword ptr [rax+0x0]
0x81e8: mov rax,qword ptr [rax+0x8]
0x81ec: add rdx,0x1
0x81f0: test rax,rax
0x81f3: jnz 0x81e8
0x81f5: cmp rbx,rdx
0x81f8: cmovnae rbx,rdx
0x81fc: add rsi,0x10
0x8200: cmp rsi,rdi
0x8203: jb 0x81d0
0x8205: lea rdx,[rip+0x19722]
0x820c: mov esi,0x1
0x8211: mov rdi,r12
0x8214: xor eax,eax
0x8216: call 0x2970
0x821b: lea rdx,[rip+0x19724]
0x8222: xor eax,eax
0x8224: mov rcx,rbp
0x8227: mov esi,0x1
0x822c: mov rdi,r12
0x822f: call 0x2970
0x8234: test r13,r13
0x8237: js 0x82a0
0x8239: pxor xmm0,xmm0
0x823d: test rbp,rbp
0x8240: cvtsi2sd xmm0,r13
0x8245: mulsd xmm0,[rip+0x1978b]
0x824d: js 0x82c9
0x824f: pxor xmm1,xmm1
0x8253: cvtsi2sd xmm1,rbp
0x8258: divsd xmm0,xmm1
0x825c: lea rdx,[rip+0x19715]
0x8263: mov rcx,r13
0x8266: mov rdi,r12
0x8269: mov esi,0x1
0x826e: mov eax,0x1
0x8273: call 0x2970
0x8278: add rsp,0x8
0x827c: mov rcx,rbx
0x827f: mov rdi,r12
0x8282: pop rbx
0x8283: pop rbp
0x8284: pop r12
0x8286: pop r13
0x8288: lea rdx,[rip+0x196cf]
0x828f: mov esi,0x1
0x8294: xor eax,eax
0x8296: jmp 0x2970
0x829b: nop qword ptr [rax+rax*1+0x0]
0x82a0: mov rax,r13
0x82a3: mov rdx,r13
0x82a6: pxor xmm0,xmm0
0x82aa: shr rax,0x1
0x82ad: and edx,0x1
0x82b0: or rax,rdx
0x82b3: test rbp,rbp
0x82b6: cvtsi2sd xmm0,rax
0x82bb: addsd xmm0,xmm0
0x82bf: mulsd xmm0,[rip+0x19711]
0x82c7: jns 0x824f
0x82c9: mov rax,rbp
0x82cc: pxor xmm1,xmm1
0x82d0: shr rax,0x1
0x82d3: and ebp,0x1
0x82d6: or rax,rbp
0x82d9: cvtsi2sd xmm1,rax
0x82de: addsd xmm1,xmm1
0x82e2: jmp 0x8258
0x830c: nop qword ptr [rax+0x0]
0x8310: mov rsi,qword ptr [rbx]
0x8320: test al,al
0x8322: jnz 0x8340
0x8324: mov rbx,qword ptr [rbx+0x8]
0x8328: test rbx,rbx
0x832b: jnz 0x8310
0x8337: nop qword ptr [rax+rax*1+0x0]
0x8340: mov rsi,qword ptr [rbx]
0x8343: pop rbx
0x8344: pop rbp
0x8345: mov rax,rsi
0x8348: pop r12
0x834a: ret
0x8350: cmp [rdi+0x20],0x0
0x8355: jz 0x8383
0x8357: mov rdx,qword ptr [rdi]
0x835a: mov rcx,qword ptr [rdi+0x8]
0x835e: cmp rdx,rcx
0x8361: jnb 0x8388
0x8363: mov rax,qword ptr [rdx]
0x8366: test rax,rax
0x8369: jnz 0x8386
0x836b: nop qword ptr [rax+rax*1+0x0]
0x8370: add rdx,0x10
0x8374: cmp rdx,rcx
0x8377: jnb 0x8388
0x8379: mov rax,qword ptr [rdx]
0x837c: test rax,rax
0x837f: jz 0x8370
0x8381: rep ret
0x8383: xor eax,eax
0x8385: ret
0x8386: rep ret
0x8388: sub rsp,0x8
0x838c: call 0x2400
0x83a0: push rbp
0x83a1: push rbx
0x83a2: mov rbp,rdi
0x83a5: mov rbx,rsi
0x83a8: sub rsp,0x8
0x83ac: call 0x7db0
0x83b1: mov rdx,rax
0x83b4: mov rcx,rax
0x83b7: mov rax,qword ptr [rdx]
0x83ba: mov rdx,qword ptr [rdx+0x8]
0x83be: cmp rax,rbx
0x83c1: jz 0x83d9
0x83c3: nop qword ptr [rax+rax*1+0x0]
0x83c8: test rdx,rdx
0x83cb: jz 0x83de
0x83cd: mov rax,qword ptr [rdx]
0x83d0: mov rdx,qword ptr [rdx+0x8]
0x83d4: cmp rax,rbx
0x83d7: jnz 0x83c8
0x83d9: test rdx,rdx
0x83dc: jnz 0x8408
0x83de: mov rdx,qword ptr [rbp+0x8]
0x83e2: jmp 0x83f0
0x83e4: nop qword ptr [rax+0x0]
0x83e8: mov rax,qword ptr [rcx]
0x83eb: test rax,rax
0x83ee: jnz 0x83fb
0x83f0: add rcx,0x10
0x83f4: cmp rdx,rcx
0x83f7: jnbe 0x83e8
0x83f9: xor eax,eax
0x83fb: add rsp,0x8
0x83ff: pop rbx
0x8400: pop rbp
0x8401: ret
0x8402: nop qword ptr [rax+rax*1+0x0]
0x8408: mov rax,qword ptr [rdx]
0x840b: add rsp,0x8
0x840f: pop rbx
0x8410: pop rbp
0x8411: ret
0x8420: mov r9,qword ptr [rdi]
0x8423: cmp qword ptr [rdi+0x8],r9
0x8427: jbe 0x8482
0x8429: xor r8d,r8d
0x842c: mov rcx,qword ptr [r9]
0x842f: test rcx,rcx
0x8432: jz 0x846d
0x8434: cmp rdx,r8
0x8437: jbe 0x8477
0x8439: mov qword ptr [rsi+r8*8+0x0],rcx
0x843d: mov rcx,qword ptr [r9+0x8]
0x8441: lea rax,[r8+0x1]
0x8445: test rcx,rcx
0x8448: jz 0x846a
0x844a: nop qword ptr [rax+rax*1+0x0]
0x8450: cmp rdx,rax
0x8453: jz 0x8480
0x8455: mov r8,qword ptr [rcx]
0x8458: add rax,0x1
0x845c: mov qword ptr [rsi+rax*8-0x8],r8
0x8461: mov rcx,qword ptr [rcx+0x8]
0x8465: test rcx,rcx
0x8468: jnz 0x8450
0x846a: mov r8,rax
0x846d: add r9,0x10
0x8471: cmp qword ptr [rdi+0x8],r9
0x8475: jnbe 0x842c
0x8477: mov rax,r8
0x847a: ret
0x847b: nop qword ptr [rax+rax*1+0x0]
0x8480: rep ret
0x8482: xor eax,eax
0x8484: ret
0x8490: push r15
0x8492: push r14
0x8494: push r13
0x8496: push r12
0x8498: push rbp
0x8499: push rbx
0x849a: sub rsp,0x8
0x849e: mov r14,qword ptr [rdi]
0x84a1: cmp qword ptr [rdi+0x8],r14
0x84a5: jbe 0x84f6
0x84a7: mov r13,rdx
0x84aa: mov r12,rsi
0x84ad: mov r15,rdi
0x84b0: xor ebp,ebp
0x84b2: mov rdi,qword ptr [r14]
0x84b5: test rdi,rdi
0x84b8: jz 0x84da
0x84ba: mov rbx,r14
0x84bd: jmp 0x84c3
0x84bf: nop 
0x84c0: mov rdi,qword ptr [rbx]
0x84c3: mov rsi,r13
0x84c6: call r12
0x84c9: test al,al
0x84cb: jz 0x84e4
0x84cd: mov rbx,qword ptr [rbx+0x8]
0x84d1: add rbp,0x1
0x84d5: test rbx,rbx
0x84d8: jnz 0x84c0
0x84da: add r14,0x10
0x84de: cmp qword ptr [r15+0x8],r14
0x84e2: jnbe 0x84b2
0x84e4: add rsp,0x8
0x84e8: mov rax,rbp
0x84eb: pop rbx
0x84ec: pop rbp
0x84ed: pop r12
0x84ef: pop r13
0x84f1: pop r14
0x84f3: pop r15
0x84f5: ret
0x84f6: xor ebp,ebp
0x84f8: jmp 0x84e4
0x8500: movzx ecx,byte ptr [rdi]
0x8503: xor edx,edx
0x8505: test cl,cl
0x8507: jz 0x852d
0x8509: nop qword ptr [rax+0x0]
0x8510: mov rax,rdx
0x8513: add rdi,0x1
0x8517: shl rax,0x5
0x851b: sub rax,rdx
0x851e: xor edx,edx
0x8520: add rax,rcx
0x8523: movzx ecx,byte ptr [rdi]
0x8526: div rsi
0x8529: test cl,cl
0x852b: jnz 0x8510
0x852d: mov rax,rdx
0x8530: ret
0x8540: mov rax,0x4575657221408423936
0x854a: mov [rdi+0x10],0x0
0x854e: mov qword ptr [rdi],rax
0x8551: mov rax,0x4590573145673223373
0x855b: mov qword ptr [rdi+0x8],rax
0x855f: ret
0x85bc: mov qword ptr [rax+0x28],r15
0x85c0: call 0x7f00
0x85c5: test al,al
0x85c7: jz 0x8650
0x85cd: cmp [r15+0x10],0x0
0x85d2: jz 0x86d0
0x864f: nop 
0x866c: nop qword ptr [rax+0x0]
0x86cf: nop 
0x86d0: test rbp,rbp
0x86d3: movss xmm1,[r15+0x8]
0x86d9: jns 0x8691
0x86f6: nop qword ptr [rax+rax*1+0x0]
0x8720: push r12
0x8722: push rbp
0x8723: mov rbp,rdi
0x8726: push rbx
0x8727: mov r12,qword ptr [rdi]
0x872a: cmp r12,qword ptr [rdi+0x8]
0x872e: jnb 0x879b
0x8730: cmp [r12],0x0
0x8735: jz 0x8791
0x8737: mov rbx,qword ptr [r12+0x8]
0x873c: mov rax,qword ptr [rbp+0x40]
0x8740: test rbx,rbx
0x8743: jz 0x8775
0x8745: nop qword ptr [rax]
0x8748: test rax,rax
0x874b: jz 0x8756
0x874d: mov rdi,qword ptr [rbx]
0x8750: call rax
0x8752: mov rax,qword ptr [rbp+0x40]
0x8756: mov rdx,qword ptr [rbx+0x8]
0x875a: mov rcx,qword ptr [rbp+0x48]
0x875e: mov [rbx],0x0
0x8765: test rdx,rdx
0x8768: mov qword ptr [rbx+0x8],rcx
0x876c: mov qword ptr [rbp+0x48],rbx
0x8770: mov rbx,rdx
0x8773: jnz 0x8748
0x8775: test rax,rax
0x8778: jz 0x8780
0x877a: mov rdi,qword ptr [r12]
0x877e: call rax
0x8780: mov [r12],0x0
0x8788: mov [r12+0x8],0x0
0x8791: add r12,0x10
0x8795: cmp qword ptr [rbp+0x8],r12
0x8799: jnbe 0x8730
0x879b: mov [rbp+0x18],0x0
0x87a3: mov [rbp+0x20],0x0
0x87ab: pop rbx
0x87ac: pop rbp
0x87ad: pop r12
0x87af: ret
0x87e6: nop qword ptr [rax+rax*1+0x0]
0x87f0: mov rdi,qword ptr [rbx]
0x87f8: mov rbx,qword ptr [rbx+0x8]
0x87fc: test rbx,rbx
0x87ff: jnz 0x87f0
0x8801: mov rax,qword ptr [r12+0x8]
0x89ce: mov rax,qword ptr [rsp+0x48]
0x89d3: mov edx,0x1
0x89d8: mov rsi,r12
0x89db: mov rdi,rbp
0x89de: mov qword ptr [rbp+0x48],rax
0x89e2: call 0x7f80
0x89e7: test al,al
0x89e9: jz 0x8ac9
0x89ef: xor edx,edx
0x89f1: mov rsi,r12
0x89f4: mov rdi,rbp
0x89f7: call 0x7f80
0x89fc: test al,al
0x89fe: jz 0x8ac9
0x8a04: mov rdi,qword ptr [rsp]
0x8a08: call 0x2a10
0x8a0d: jmp 0x8a12
0x8a0f: nop 
0x8a31: nop qword ptr [rax+0x0]
0x8a56: nop qword ptr [rax+rax*1+0x0]
0x8a6a: nop qword ptr [rax+rax*1+0x0]
0x8a77: nop qword ptr [rax+rax*1+0x0]
0x8ac9: call 0x2400
0x8b3b: nop qword ptr [rax+rax*1+0x0]
0x8bbe: nop 
0x8c08: nop qword ptr [rax+rax*1+0x0]
0x8cb2: nop qword ptr [rax+rax*1+0x0]
0x8ced: nop qword ptr [rax]
0x8d0e: nop 
0x8d2e: nop 
0x8d4f: call 0x2560
0x8da6: nop qword ptr [rax+rax*1+0x0]
0x8db4: call 0x2560
0x8e1f: nop 
0x8f06: nop qword ptr [rax+rax*1+0x0]
0x8f2e: nop 
0x8f4e: nop 
0x8f6f: nop 
0x8f7a: nop qword ptr [rax+rax*1+0x0]
0x8f9e: nop 
0x8fbe: call 0x2560
0x9044: nop qword ptr [rax+0x0]
0x904c: nop qword ptr [rax+0x0]
0x9088: nop qword ptr [rax+rax*1+0x0]
0x91de: nop 
0x91fc: nop qword ptr [rax+0x0]
0x92b3: nop qword ptr [rax+rax*1+0x0]
0x9334: nop qword ptr [rax+0x0]
0x9392: nop qword ptr [rax+rax*1+0x0]
0x93eb: nop qword ptr [rax+rax*1+0x0]
0x93f4: nop qword ptr [rax+0x0]
0x94db: nop qword ptr [rax+rax*1+0x0]
0x9502: nop qword ptr [rax+rax*1+0x0]
0x9562: nop qword ptr [rax+rax*1+0x0]
0x95e4: nop qword ptr [rax+0x0]
0x9604: nop qword ptr [rax+0x0]
0x9628: nop qword ptr [rax+rax*1+0x0]
0x9648: nop qword ptr [rax+rax*1+0x0]
0x974b: nop qword ptr [rax+rax*1+0x0]
0x9787: nop qword ptr [rax+rax*1+0x0]
0x9824: nop qword ptr [rax+0x0]
0x9856: nop qword ptr [rax+rax*1+0x0]
0x9884: nop qword ptr [rax+0x0]
0x9898: nop qword ptr [rax+rax*1+0x0]
0x98ac: nop qword ptr [rax+0x0]
0x98ce: nop 
0x98f4: nop qword ptr [rax+0x0]
0x99e8: nop qword ptr [rax+rax*1+0x0]
0x9a5b: call 0x2560
0x9b44: nop qword ptr [rax+0x0]
0x9b7c: nop qword ptr [rax+0x0]
0x9ba2: nop qword ptr [rax+rax*1+0x0]
0x9be9: nop qword ptr [rax+0x0]
0x9c48: nop qword ptr [rax+rax*1+0x0]
0x9c62: nop qword ptr [rax+rax*1+0x0]
0x9ca0: mov rax,qword ptr [rdi]
0x9ca3: xor edx,edx
0x9ca5: div rsi
0x9ca8: mov rax,rdx
0x9cab: ret
0x9cb0: mov rax,qword ptr [rsi]
0x9cb3: cmp qword ptr [rdi],rax
0x9cb6: setz al
0x9cb9: ret
0x9d1a: nop qword ptr [rax+rax*1+0x0]
0x9d30: push rbx
0x9d31: mov rbx,rdi
0x9d34: mov rdi,qword ptr [rdi]
0x9d37: call 0x87b0
0x9d3c: mov rdi,qword ptr [rbx+0x10]
0x9d40: call 0x2a10
0x9d45: mov rdi,rbx
0x9d48: pop rbx
0x9d49: jmp 0x2a10
0x9d76: test rax,rax
0x9d79: jz 0x9de0
0x9d7b: cmp rbx,rax
0x9d7e: jz 0x9da0
0x9d80: mov rax,qword ptr [rax+0x8]
0x9d84: mov qword ptr [rbx+0x8],rax
0x9d88: add rsp,0x18
0x9d8c: pop rbx
0x9d8d: pop rbp
0x9d8e: ret
0x9d8f: nop 
0x9d9b: nop qword ptr [rax+rax*1+0x0]
0x9da0: mov rax,qword ptr [rbp+0x8]
0x9da4: mov [rbp+0x10],0x0
0x9dac: lea rdx,[rax+0x1]
0x9db0: mov qword ptr [rbp+0x8],rdx
0x9db4: mov qword ptr [rbx+0x8],rax
0x9db8: add rsp,0x18
0x9dbc: pop rbx
0x9dbd: pop rbp
0x9dbe: ret
0x9dbf: nop 
0x9de0: add rsp,0x18
0x9de4: mov rax,0xffffffff
0x9deb: pop rbx
0x9dec: pop rbp
0x9ded: ret
0x9e4a: nop qword ptr [rax+rax*1+0x0]
0x9e90: push rbx
0x9e91: mov ebx,edi
0x9e93: call 0x2760
0x9e98: test eax,eax
0x9e9a: js 0x9ea0
0x9e9c: pop rbx
0x9e9d: ret
0x9e9e: nop 
0x9ea0: mov edi,ebx
0x9ea2: call 0x2480
0x9ea7: test eax,eax
0x9ea9: setz al
0x9eac: movzx eax,al
0x9eaf: pop rbx
0x9eb0: ret
0x9ec0: push rbp
0x9ec1: push rbx
0x9ec2: mov rbx,rsi
0x9ec5: lea rax,[rbx+0x18]
0x9ec9: mov rbp,rdi
0x9ecc: sub rsp,0x8
0x9ed0: mov rsi,qword ptr [rsi]
0x9ed3: mov rdx,qword ptr [rbx+0x8]
0x9ed7: cmp rsi,rax
0x9eda: jz 0x9f00
0x9edc: mov qword ptr [rdi],rsi
0x9edf: movzx eax,byte ptr [rbx+0x10]
0x9ee3: mov qword ptr [rbp+0x8],rdx
0x9ee7: test al,al
0x9ee9: mov byte ptr [rbp+0x10],al
0x9eec: jz 0x9ef4
0x9eee: mov eax,dword ptr [rbx+0x14]
0x9ef1: mov dword ptr [rbp+0x14],eax
0x9ef4: add rsp,0x8
0x9ef8: pop rbx
0x9ef9: pop rbp
0x9efa: ret
0x9efb: nop qword ptr [rax+rax*1+0x0]
0x9f00: lea rcx,[rdi+0x18]
0x9f04: mov rdi,rcx
0x9f07: call 0x2710
0x9f0c: mov rdx,qword ptr [rbx+0x8]
0x9f10: mov qword ptr [rbp+0x0],rax
0x9f14: jmp 0x9edf
0x9f20: mov eax,edi
0x9f22: lea rdx,[rip+0x17b17]
0x9f29: mov ecx,edi
0x9f2b: shr al,0x5
0x9f2e: and ecx,0x1f
0x9f31: and eax,0x7
0x9f34: mov eax,dword ptr [rdx+rax*4+0x0]
0x9f37: shr eax,cl
0x9f39: and eax,0x1
0x9f3c: ret
0x9f40: push r15
0x9f42: push r14
0x9f44: push r13
0x9f46: push r12
0x9f48: push rbp
0x9f49: push rbx
0x9f4a: sub rsp,0x98
0x9f51: mov rax,0x28
0x9f5a: mov qword ptr [rsp+0x88],rax
0x9f62: xor eax,eax
0x9f64: cmp rdi,rsi
0x9f67: jz 0xa2f0
0x9f6d: mov rbp,rdi
0x9f70: mov r12,rsi
0x9f73: call 0x2520
0x9f78: cmp rax,0x1
0x9f7c: jnbe 0xa018
0x9f82: call 0x29f0
0x9f87: mov r14,qword ptr [rax]
0x9f8a: jmp 0x9fa0
0x9f8c: nop qword ptr [rax+0x0]
0x9f90: add rbp,0x1
0x9f94: add r12,0x1
0x9f98: cmp bl,dl
0x9f9a: jnz 0xa3a0
0x9fa0: movzx r13d,byte ptr [rbp+0x0]
0x9fa5: test [r14+r13*2+0x1],0x1
0x9fab: mov rbx,r13
0x9fae: jz 0x9fbd
0x9fb0: call 0x29e0
0x9fb5: mov rax,qword ptr [rax]
0x9fb8: movzx ebx,byte ptr [rax+r13*4+0x0]
0x9fbd: movzx r13d,byte ptr [r12]
0x9fc2: test [r14+r13*2+0x1],0x1
0x9fc8: mov rdx,r13
0x9fcb: jz 0x9fda
0x9fcd: call 0x29e0
0x9fd2: mov rax,qword ptr [rax]
0x9fd5: movzx edx,byte ptr [rax+r13*4+0x0]
0x9fda: test bl,bl
0x9fdc: jnz 0x9f90
0x9fde: xor eax,eax
0x9fe0: sub eax,edx
0x9fe2: nop qword ptr [rax+rax*1+0x0]
0x9fe8: mov rsi,qword ptr [rsp+0x88]
0x9ff0: xor rsi,0x28
0x9ff9: jnz 0xa61f
0x9fff: add rsp,0x98
0xa006: pop rbx
0xa007: pop rbp
0xa008: pop r12
0xa00a: pop r13
0xa00c: pop r14
0xa00e: pop r15
0xa010: ret
0xa011: nop qword ptr [rax+0x0]
0xa018: mov qword ptr [rsp+0x50],r12
0xa01d: mov r12,rsp
0xa020: mov qword ptr [rsp+0x10],rbp
0xa025: mov [rsp],0x0
0xa029: mov [rsp+0x4],0x0
0xa032: lea r13,[rip+0x17a07]
0xa039: mov [rsp+0xc],0x0
0xa03e: mov [rsp+0x40],0x0
0xa043: lea r14,[r12+0x4]
0xa048: mov [rsp+0x44],0x0
0xa051: mov [rsp+0x4c],0x0
0xa056: lea rbp,[rsp+0x40]
0xa05b: jmp 0xa0f9
0xa060: cmp [rsp+0x40],0x0
0xa065: jnz 0xa256
0xa06b: mov rcx,qword ptr [rsp+0x50]
0xa070: movzx edx,byte ptr [rcx]
0xa073: mov eax,edx
0xa075: shr al,0x5
0xa078: and eax,0x7
0xa07b: mov eax,dword ptr [r13+rax*4+0x0]
0xa080: bt eax,edx
0xa083: jnb 0xa240
0xa089: mov [rsp+0x58],0x1
0xa092: movsx eax,byte ptr [rcx]
0xa095: mov [rsp+0x60],0x1
0xa09a: mov [rsp+0x4c],0x1
0xa09f: mov dword ptr [rsp+0x64],eax
0xa0a3: mov r15d,dword ptr [rsp+0x64]
0xa0a8: test r15d,r15d
0xa0ab: jz 0xa3b0
0xa0b1: cmp [rsp+0x20],0x0
0xa0b6: jz 0xa3c0
0xa0bc: mov edi,dword ptr [rsp+0x24]
0xa0c0: call 0x28e0
0xa0c5: mov edi,r15d
0xa0c8: mov ebx,eax
0xa0ca: call 0x28e0
0xa0cf: sub ebx,eax
0xa0d1: mov eax,ebx
0xa0d3: test eax,eax
0xa0d5: jnz 0x9fe8
0xa0db: mov rax,qword ptr [rsp+0x18]
0xa0e0: add qword ptr [rsp+0x10],rax
0xa0e5: mov rax,qword ptr [rsp+0x58]
0xa0ea: add qword ptr [rsp+0x50],rax
0xa0ef: mov [rsp+0xc],0x0
0xa0f4: mov [rsp+0x4c],0x0
0xa0f9: cmp [rsp],0x0
0xa0fd: jnz 0xa1a4
0xa103: mov rcx,qword ptr [rsp+0x10]
0xa108: movzx edx,byte ptr [rcx]
0xa10b: mov eax,edx
0xa10d: shr al,0x5
0xa110: and eax,0x7
0xa113: mov eax,dword ptr [r13+rax*4+0x0]
0xa118: bt eax,edx
0xa11b: jnb 0xa190
0xa11d: mov [rsp+0x18],0x1
0xa126: movsx eax,byte ptr [rcx]
0xa129: mov [rsp+0x20],0x1
0xa12e: mov [rsp+0xc],0x1
0xa133: mov dword ptr [rsp+0x24],eax
0xa137: mov r9d,dword ptr [rsp+0x24]
0xa13c: test r9d,r9d
0xa13f: jz 0xa3e8
0xa145: cmp [rsp+0x4c],0x0
0xa14a: jz 0xa060
0xa150: cmp [rsp+0x60],0x0
0xa155: jnz 0xa0a3
0xa15b: cmp [rsp+0x20],0x0
0xa160: jnz 0xa3d8
0xa166: mov rdx,qword ptr [rsp+0x18]
0xa16b: mov rax,qword ptr [rsp+0x58]
0xa170: mov rdi,qword ptr [rsp+0x10]
0xa175: mov rsi,qword ptr [rsp+0x50]
0xa17a: cmp rdx,rax
0xa17d: jnz 0xa4a8
0xa183: call 0x2680
0xa188: jmp 0xa0d3
0xa18d: nop qword ptr [rax]
0xa190: mov rdi,r14
0xa193: call 0x2990
0xa198: test eax,eax
0xa19a: jz 0xa600
0xa1a0: mov [rsp],0x1
0xa1a4: call 0x2520
0xa1a9: mov rbx,qword ptr [rsp+0x10]
0xa1ae: mov rsi,rax
0xa1b1: mov rdi,rbx
0xa1b4: call 0xc380
0xa1b9: lea rcx,[r12+0x4]
0xa1be: lea rdi,[r12+0x24]
0xa1c3: mov rdx,rax
0xa1c6: mov rsi,rbx
0xa1c9: call 0x101e0
0xa1ce: cmp rax,0xffffffff
0xa1d2: mov qword ptr [rsp+0x18],rax
0xa1d7: jz 0xa300
0xa1dd: cmp rax,0xfffffffe
0xa1e1: jz 0xa340
0xa1e7: test rax,rax
0xa1ea: jnz 0xa211
0xa1ec: mov rax,qword ptr [rsp+0x10]
0xa1f1: mov [rsp+0x18],0x1
0xa1fa: cmp [rax],0x0
0xa1fd: jnz 0xa624
0xa203: mov r10d,dword ptr [rsp+0x24]
0xa208: test r10d,r10d
0xa20b: jnz 0xa5fb
0xa211: lea rdi,[r12+0x4]
0xa216: mov [rsp+0x20],0x1
0xa21b: call 0x2990
0xa220: test eax,eax
0xa222: jz 0xa380
0xa228: mov [rsp],0x0
0xa22c: mov [rsp+0xc],0x1
0xa231: jmp 0xa137
0xa236: nop qword ptr [rax+rax*1+0x0]
0xa240: lea rdi,[rbp+0x4]
0xa244: call 0x2990
0xa249: test eax,eax
0xa24b: jz 0xa600
0xa251: mov [rsp+0x40],0x1
0xa256: call 0x2520
0xa25b: mov rbx,qword ptr [rsp+0x50]
0xa260: mov rsi,rax
0xa263: mov rdi,rbx
0xa266: call 0xc380
0xa26b: lea rcx,[rbp+0x4]
0xa26f: lea rdi,[rbp+0x24]
0xa273: mov rdx,rax
0xa276: mov rsi,rbx
0xa279: call 0x101e0
0xa27e: cmp rax,0xffffffff
0xa282: mov qword ptr [rsp+0x58],rax
0xa287: jz 0xa320
0xa28d: cmp rax,0xfffffffe
0xa291: jz 0xa360
0xa297: test rax,rax
0xa29a: jnz 0xa2c1
0xa29c: mov rax,qword ptr [rsp+0x50]
0xa2a1: mov [rsp+0x58],0x1
0xa2aa: cmp [rax],0x0
0xa2ad: jnz 0xa624
0xa2b3: mov r8d,dword ptr [rsp+0x64]
0xa2b8: test r8d,r8d
0xa2bb: jnz 0xa5fb
0xa2c1: lea rdi,[rbp+0x4]
0xa2c5: mov [rsp+0x60],0x1
0xa2ca: call 0x2990
0xa2cf: test eax,eax
0xa2d1: jz 0xa390
0xa2d7: mov [rsp+0x40],0x0
0xa2dc: mov [rsp+0x4c],0x1
0xa2e1: jmp 0xa0a3
0xa2e6: nop qword ptr [rax+rax*1+0x0]
0xa2f0: xor eax,eax
0xa2f2: jmp 0x9fe8
0xa2f7: nop qword ptr [rax+rax*1+0x0]
0xa300: mov [rsp+0x18],0x1
0xa309: mov [rsp+0x20],0x0
0xa30e: mov [rsp+0xc],0x1
0xa313: jmp 0xa145
0xa318: nop qword ptr [rax+rax*1+0x0]
0xa320: mov [rsp+0x58],0x1
0xa329: mov [rsp+0x60],0x0
0xa32e: mov [rsp+0x4c],0x1
0xa333: jmp 0xa15b
0xa338: nop qword ptr [rax+rax*1+0x0]
0xa340: mov rdi,qword ptr [rsp+0x10]
0xa345: call 0x2530
0xa34a: mov [rsp+0x20],0x0
0xa34f: mov qword ptr [rsp+0x18],rax
0xa354: mov [rsp+0xc],0x1
0xa359: jmp 0xa145
0xa35e: nop 
0xa360: mov rdi,qword ptr [rsp+0x50]
0xa365: call 0x2530
0xa36a: mov [rsp+0x60],0x0
0xa36f: mov qword ptr [rsp+0x58],rax
0xa374: mov [rsp+0x4c],0x1
0xa379: jmp 0xa15b
0xa37e: nop 
0xa380: mov [rsp+0xc],0x1
0xa385: jmp 0xa137
0xa38a: nop qword ptr [rax+rax*1+0x0]
0xa390: mov [rsp+0x4c],0x1
0xa395: jmp 0xa0a3
0xa39a: nop qword ptr [rax+rax*1+0x0]
0xa3a0: movzx eax,bl
0xa3a3: sub eax,edx
0xa3a5: jmp 0x9fe8
0xa3aa: nop qword ptr [rax+rax*1+0x0]
0xa3b0: cmp [rsp+0xc],0x0
0xa3b5: jz 0xa3ef
0xa3b7: cmp [rsp+0x20],0x0
0xa3bc: jnz 0xa439
0xa3be: nop 
0xa3c0: mov eax,0x1
0xa3c5: jmp 0x9fe8
0xa3ca: cmp [rsp+0x60],0x0
0xa3cf: jnz 0xa493
0xa3d5: nop qword ptr [rax]
0xa3d8: mov eax,0xffffffff
0xa3dd: jmp 0x9fe8
0xa3e2: nop qword ptr [rax+rax*1+0x0]
0xa3e8: cmp [rsp+0xc],0x0
0xa3ed: jnz 0xa445
0xa3ef: cmp [rsp],0x0
0xa3f3: mov rbx,rsp
0xa3f6: jnz 0xa4d8
0xa3fc: mov rcx,qword ptr [rsp+0x10]
0xa401: lea rsi,[rip+0x17638]
0xa408: movzx edx,byte ptr [rcx]
0xa40b: mov eax,edx
0xa40d: shr al,0x5
0xa410: and eax,0x7
0xa413: mov eax,dword ptr [rsi+rax*4+0x0]
0xa416: bt eax,edx
0xa419: jnb 0xa4c0
0xa41f: mov [rsp+0x18],0x1
0xa428: movsx eax,byte ptr [rcx]
0xa42b: mov [rsp+0x20],0x1
0xa430: mov [rsp+0xc],0x1
0xa435: mov dword ptr [rsp+0x24],eax
0xa439: mov esi,dword ptr [rsp+0x24]
0xa43d: test esi,esi
0xa43f: jnz 0xa3c0
0xa445: cmp [rsp+0x4c],0x0
0xa44a: jnz 0xa3ca
0xa450: cmp [rsp+0x40],0x0
0xa455: lea rbx,[rsp+0x40]
0xa45a: jnz 0xa598
0xa460: mov rcx,qword ptr [rsp+0x50]
0xa465: lea rsi,[rip+0x175d4]
0xa46c: movzx edx,byte ptr [rcx]
0xa46f: mov eax,edx
0xa471: shr al,0x5
0xa474: and eax,0x7
0xa477: mov eax,dword ptr [rsi+rax*4+0x0]
0xa47a: bt eax,edx
0xa47d: jnb 0xa580
0xa483: mov [rsp+0x58],0x1
0xa48c: movsx eax,byte ptr [rcx]
0xa48f: mov dword ptr [rsp+0x64],eax
0xa493: mov edx,dword ptr [rsp+0x64]
0xa497: xor eax,eax
0xa499: test edx,edx
0xa49b: setnz al
0xa49e: neg eax
0xa4a0: jmp 0x9fe8
0xa4a5: nop qword ptr [rax]
0xa4a8: jnb 0xa561
0xa4ae: call 0x2680
0xa4b3: test eax,eax
0xa4b5: jnle 0xa3c0
0xa4bb: jmp 0xa3d8
0xa4c0: mov rbx,rsp
0xa4c3: lea rdi,[rbx+0x4]
0xa4c7: call 0x2990
0xa4cc: test eax,eax
0xa4ce: jz 0xa600
0xa4d4: mov [rsp],0x1
0xa4d8: call 0x2520
0xa4dd: mov rbp,qword ptr [rsp+0x10]
0xa4e2: mov rsi,rax
0xa4e5: mov rdi,rbp
0xa4e8: call 0xc380
0xa4ed: lea rcx,[rbx+0x4]
0xa4f1: lea rdi,[rbx+0x24]
0xa4f5: mov rdx,rax
0xa4f8: mov rsi,rbp
0xa4fb: call 0x101e0
0xa500: cmp rax,0xffffffff
0xa504: mov qword ptr [rsp+0x18],rax
0xa509: jz 0xa3c0
0xa50f: cmp rax,0xfffffffe
0xa513: jz 0xa3c0
0xa519: test rax,rax
0xa51c: jnz 0xa541
0xa51e: mov rax,qword ptr [rsp+0x10]
0xa523: mov [rsp+0x18],0x1
0xa52c: cmp [rax],0x0
0xa52f: jnz 0xa624
0xa535: mov edi,dword ptr [rsp+0x24]
0xa539: test edi,edi
0xa53b: jnz 0xa5fb
0xa541: lea rdi,[rbx+0x4]
0xa545: mov [rsp+0x20],0x1
0xa54a: call 0x2990
0xa54f: test eax,eax
0xa551: jz 0xa576
0xa553: mov [rsp],0x0
0xa557: mov [rsp+0xc],0x1
0xa55c: jmp 0xa439
0xa561: mov rdx,rax
0xa564: call 0x2680
0xa569: test eax,eax
0xa56b: jns 0xa3c0
0xa571: jmp 0xa3d8
0xa576: mov [rsp+0xc],0x1
0xa57b: jmp 0xa439
0xa580: lea rdi,[rsp+0x44]
0xa585: lea rbx,[rsp+0x40]
0xa58a: call 0x2990
0xa58f: test eax,eax
0xa591: jz 0xa600
0xa593: mov [rsp+0x40],0x1
0xa598: call 0x2520
0xa59d: mov rbp,qword ptr [rsp+0x50]
0xa5a2: mov rsi,rax
0xa5a5: mov rdi,rbp
0xa5a8: call 0xc380
0xa5ad: lea rcx,[rbx+0x4]
0xa5b1: lea rdi,[rbx+0x24]
0xa5b5: mov rdx,rax
0xa5b8: mov rsi,rbp
0xa5bb: call 0x101e0
0xa5c0: lea rdx,[rax+0x2]
0xa5c4: mov qword ptr [rsp+0x58],rax
0xa5c9: cmp rdx,0x1
0xa5cd: jbe 0xa3d8
0xa5d3: test rax,rax
0xa5d6: jnz 0xa493
0xa5dc: mov rax,qword ptr [rsp+0x50]
0xa5e1: mov [rsp+0x58],0x1
0xa5ea: cmp [rax],0x0
0xa5ed: jnz 0xa624
0xa5ef: mov ecx,dword ptr [rsp+0x64]
0xa5f3: test ecx,ecx
0xa5f5: jz 0xa493
0xa5fb: call 0x2a20
0xa600: lea rcx,[rip+0x17459]
0xa607: lea rsi,[rip+0x16e9a]
0xa60e: lea rdi,[rip+0x16eb3]
0xa615: mov edx,0x96
0xa61a: call 0x2600
0xa61f: call 0x2560
0xa624: lea rcx,[rip+0x17435]
0xa62b: lea rsi,[rip+0x16e76]
0xa632: lea rdi,[rip+0x16ea6]
0xa639: mov edx,0xb2
0xa63e: call 0x2600
0xa72c: nop qword ptr [rax+0x0]
0xa77d: nop qword ptr [rax]
0xaa97: nop qword ptr [rax+rax*1+0x0]
0xaace: nop 
0xaaf1: nop qword ptr [rax+0x0]
0xab32: nop qword ptr [rax+rax*1+0x0]
0xab44: nop qword ptr [rax+0x0]
0xabe8: nop qword ptr [rax+rax*1+0x0]
0xabfb: xor edx,edx
0xabfd: test [rsp+0x78],0x1
0xac02: jz 0xab1b
0xac08: add rbp,0x1
0xac0c: jmp 0xa8c8
0xac11: nop qword ptr [rax+0x0]
0xac27: nop qword ptr [rax+rax*1+0x0]
0xac3f: nop 
0xac6e: nop 
0xac7d: nop qword ptr [rax]
0xac8f: nop 
0xac9f: nop 
0xacaf: nop 
0xacbf: nop 
0xaccf: nop 
0xad3c: nop qword ptr [rax+0x0]
0xad5c: nop qword ptr [rax+0x0]
0xad7f: nop 
0xad92: nop qword ptr [rax+rax*1+0x0]
0xadaa: nop qword ptr [rax+rax*1+0x0]
0xadba: nop qword ptr [rax+rax*1+0x0]
0xae5b: nop qword ptr [rax+rax*1+0x0]
0xae75: nop qword ptr [rax]
0xae88: nop qword ptr [rax+rax*1+0x0]
0xaea3: nop qword ptr [rax+rax*1+0x0]
0xaed2: nop qword ptr [rax+rax*1+0x0]
0xaee2: nop qword ptr [rax+rax*1+0x0]
0xaefa: nop qword ptr [rax+rax*1+0x0]
0xaf0a: nop qword ptr [rax+rax*1+0x0]
0xaf18: nop qword ptr [rax+rax*1+0x0]
0xaf3f: nop 
0xafd9: nop qword ptr [rax+0x0]
0xb022: nop qword ptr [rax+rax*1+0x0]
0xb061: nop qword ptr [rax+0x0]
0xb082: nop qword ptr [rax+rax*1+0x0]
0xb1e8: nop qword ptr [rax+rax*1+0x0]
0xb2fb: nop qword ptr [rax+rax*1+0x0]
0xb300: cmp r15,0x1
0xb304: jz 0xb169
0xb30a: mov rdi,qword ptr [rsp+0x10]
0xb30f: lea rcx,[rdi+r15*1+0x0]
0xb313: lea rdx,[rdi+r14*1+0x1]
0xb318: lea r8,[rcx+r14*1+0x0]
0xb31c: jmp 0xb32d
0xb31e: nop 
0xb320: add rdx,0x1
0xb324: cmp r8,rdx
0xb327: jz 0xb169
0xb32d: movzx ecx,byte ptr [rdx]
0xb330: sub ecx,0x5b
0xb333: cmp cl,0x21
0xb336: jnbe 0xb320
0xb338: mov esi,0x1
0xb33d: shl rsi,cl
0xb340: mov rcx,rsi
0xb343: mov rsi,0x8589934635
0xb34d: test rcx,rsi
0xb350: jz 0xb320
0xb352: mov r14,qword ptr [rsp+0x40]
0xb357: mov r13,qword ptr [rsp+0x70]
0xb35c: mov rbp,qword ptr [rsp+0x30]
0xb361: mov [rsp+0x8],0x2
0xb3e5: nop qword ptr [rax]
0xb49d: nop qword ptr [rax]
0xb6a6: nop qword ptr [rax+rax*1+0x0]
0xb6b0: movzx ebx,byte ptr [rsp+0xf]
0xb6b5: mov rbp,r11
0xb6b8: mov byte ptr [rsp+0xd],bl
0xb6bc: jmp 0xb369
0xb739: nop qword ptr [rax+0x0]
0xb88d: nop qword ptr [rax]
0xbb9b: nop qword ptr [rax+rax*1+0x0]
0xbbd0: push r12
0xbbd2: push rbp
0xbbd3: push rbx
0xbbd4: mov rbx,rdi
0xbbd7: call 0x2410
0xbbdc: mov r12d,dword ptr [rax]
0xbbdf: mov rbp,rax
0xbbe2: lea rax,[rip+0x21c6d7]
0xbbe9: test rbx,rbx
0xbbec: mov esi,0x38
0xbbf1: cmove rbx,rax
0xbbf5: mov rdi,rbx
0xbbf8: call 0xcbe0
0xbbfd: mov dword ptr [rbp+0x0],r12d
0xbc01: pop rbx
0xbc02: pop rbp
0xbc03: pop r12
0xbc05: ret
0xbc10: lea rax,[rip+0x21c6a9]
0xbc17: test rdi,rdi
0xbc1a: cmove rdi,rax
0xbc1e: mov eax,dword ptr [rdi]
0xbc20: ret
0xbc30: lea rax,[rip+0x21c689]
0xbc37: test rdi,rdi
0xbc3a: cmove rdi,rax
0xbc3e: mov dword ptr [rdi],esi
0xbc40: ret
0xbc50: lea rax,[rip+0x21c669]
0xbc57: test rdi,rdi
0xbc5a: mov ecx,esi
0xbc5c: cmove rdi,rax
0xbc60: mov eax,esi
0xbc62: and ecx,0x1f
0xbc65: shr al,0x5
0xbc68: movzx eax,al
0xbc6b: lea rdi,[rdi+rax*4+0x8]
0xbc70: mov esi,dword ptr [rdi]
0xbc72: mov eax,esi
0xbc74: shr eax,cl
0xbc76: xor edx,eax
0xbc78: and eax,0x1
0xbc7b: and edx,0x1
0xbc7e: shl edx,cl
0xbc80: xor edx,esi
0xbc82: mov dword ptr [rdi],edx
0xbc84: ret
0xbc90: lea rax,[rip+0x21c629]
0xbc97: test rdi,rdi
0xbc9a: cmove rdi,rax
0xbc9e: mov eax,dword ptr [rdi+0x4]
0xbca1: mov dword ptr [rdi+0x4],esi
0xbca4: ret
0xbcb0: lea rax,[rip+0x21c609]
0xbcb7: test rdi,rdi
0xbcba: cmove rdi,rax
0xbcbe: test rsi,rsi
0xbcc1: mov [rdi],0xa
0xbcc7: jz 0xbcd7
0xbcc9: test rdx,rdx
0xbccc: jz 0xbcd7
0xbcce: mov qword ptr [rdi+0x28],rsi
0xbcd2: mov qword ptr [rdi+0x30],rdx
0xbcd6: ret
0xbcd7: sub rsp,0x8
0xbcdb: call 0x2400
0xbce0: push r15
0xbce2: push r14
0xbce4: lea rax,[rip+0x21c5d5]
0xbceb: push r13
0xbced: push r12
0xbcef: mov r13,rdi
0xbcf2: push rbp
0xbcf3: push rbx
0xbcf4: mov rbx,r8
0xbcf7: mov r14,rsi
0xbcfa: mov r15,rdx
0xbcfd: sub rsp,0x18
0xbd01: test r8,r8
0xbd04: cmove rbx,rax
0xbd08: mov qword ptr [rsp+0x8],rcx
0xbd0d: call 0x2410
0xbd12: mov r12d,dword ptr [rax]
0xbd15: mov rbp,rax
0xbd18: lea rax,[rbx+0x8]
0xbd1c: sub rsp,0x8
0xbd20: mov r9d,dword ptr [rbx+0x4]
0xbd24: push qword ptr [rbx+0x30]
0xbd27: mov r8d,dword ptr [rbx]
0xbd2a: push qword ptr [rbx+0x28]
0xbd2d: mov rdx,r15
0xbd30: push rax
0xbd31: mov rcx,qword ptr [rsp+0x28]
0xbd36: mov rsi,r14
0xbd39: mov rdi,r13
0xbd3c: call 0xa7e0
0xbd41: mov dword ptr [rbp+0x0],r12d
0xbd45: add rsp,0x38
0xbd49: pop rbx
0xbd4a: pop rbp
0xbd4b: pop r12
0xbd4d: pop r13
0xbd4f: pop r14
0xbd51: pop r15
0xbd53: ret
0xbd60: push r15
0xbd62: push r14
0xbd64: lea rax,[rip+0x21c555]
0xbd6b: push r13
0xbd6d: push r12
0xbd6f: mov r12,rdx
0xbd72: push rbp
0xbd73: push rbx
0xbd74: mov rbx,rcx
0xbd77: mov r14,rdi
0xbd7a: mov r15,rsi
0xbd7d: sub rsp,0x38
0xbd81: test rcx,rcx
0xbd84: cmove rbx,rax
0xbd88: xor ebp,ebp
0xbd8a: call 0x2410
0xbd8f: test r12,r12
0xbd92: mov r13,rax
0xbd95: mov eax,dword ptr [rax]
0xbd97: setz bpl
0xbd9b: or ebp,dword ptr [rbx+0x4]
0xbd9e: lea r10,[rbx+0x8]
0xbda2: sub rsp,0x8
0xbda6: mov r8d,dword ptr [rbx]
0xbda9: mov rcx,r15
0xbdac: mov dword ptr [rsp+0x14],eax
0xbdb0: push qword ptr [rbx+0x30]
0xbdb3: mov rdx,r14
0xbdb6: push qword ptr [rbx+0x28]
0xbdb9: push r10
0xbdbb: xor esi,esi
0xbdbd: mov r9d,ebp
0xbdc0: xor edi,edi
0xbdc2: mov qword ptr [rsp+0x40],r10
0xbdc7: call 0xa7e0
0xbdcc: lea rsi,[rax+0x1]
0xbdd0: mov qword ptr [rsp+0x48],rax
0xbdd5: add rsp,0x20
0xbdd9: mov rdi,rsi
0xbddc: mov qword ptr [rsp+0x18],rsi
0xbde1: call 0xc9e0
0xbde6: mov qword ptr [rsp+0x10],rax
0xbdeb: sub rsp,0x8
0xbdef: push qword ptr [rbx+0x30]
0xbdf2: push qword ptr [rbx+0x28]
0xbdf5: mov r10,qword ptr [rsp+0x38]
0xbdfa: mov r9d,ebp
0xbdfd: mov r8d,dword ptr [rbx]
0xbe00: mov rcx,r15
0xbe03: mov rdx,r14
0xbe06: mov rdi,rax
0xbe09: push r10
0xbe0b: mov rsi,qword ptr [rsp+0x38]
0xbe10: call 0xa7e0
0xbe15: mov eax,dword ptr [rsp+0x2c]
0xbe19: add rsp,0x20
0xbe1d: test r12,r12
0xbe20: mov dword ptr [r13+0x0],eax
0xbe24: jz 0xbe2f
0xbe26: mov r11,qword ptr [rsp+0x28]
0xbe2b: mov qword ptr [r12],r11
0xbe2f: mov rax,qword ptr [rsp+0x10]
0xbe34: add rsp,0x38
0xbe38: pop rbx
0xbe39: pop rbp
0xbe3a: pop r12
0xbe3c: pop r13
0xbe3e: pop r14
0xbe40: pop r15
0xbe42: ret
0xbe50: mov rcx,rdx
0xbe53: xor edx,edx
0xbe55: jmp 0xbd60
0xbe60: mov eax,dword ptr [rip+0x21c212]
0xbe66: push r12
0xbe68: mov r12,qword ptr [rip+0x21c211]
0xbe6f: push rbp
0xbe70: push rbx
0xbe71: cmp eax,0x1
0xbe74: jle 0xbea1
0xbe76: sub eax,0x2
0xbe79: lea rbx,[r12+0x18]
0xbe7e: shl rax,0x4
0xbe82: lea rbp,[r12+rax*1+0x28]
0xbe87: nop qword ptr [rax+rax*1+0x0]
0xbe90: mov rdi,qword ptr [rbx]
0xbe93: add rbx,0x10
0xbe97: call 0x2a10
0xbe9c: cmp rbx,rbp
0xbe9f: jnz 0xbe90
0xbea1: mov rdi,qword ptr [r12+0x8]
0xbea6: lea rbx,[rip+0x21c313]
0xbead: cmp rdi,rbx
0xbeb0: jz 0xbec9
0xbeb2: call 0x2a10
0xbeb7: mov [rip+0x21c1ce],0x100
0xbec2: mov qword ptr [rip+0x21c1cf],rbx
0xbec9: lea rbx,[rip+0x21c1c0]
0xbed0: cmp r12,rbx
0xbed3: jz 0xbee4
0xbed5: mov rdi,r12
0xbed8: call 0x2a10
0xbedd: mov qword ptr [rip+0x21c19c],rbx
0xbee4: pop rbx
0xbee5: mov [rip+0x21c189],0x1
0xbeef: pop rbp
0xbef0: pop r12
0xbef2: ret
0xbf00: lea rcx,[rip+0x21c3b9]
0xbf07: mov rdx,0xffffffff
0xbf0e: jmp 0xba20
0xbf20: lea rcx,[rip+0x21c399]
0xbf27: jmp 0xba20
0xbf30: lea rcx,[rip+0x21c389]
0xbf37: mov rsi,rdi
0xbf3a: mov rdx,0xffffffff
0xbf41: xor edi,edi
0xbf43: jmp 0xba20
0xbf50: lea rcx,[rip+0x21c369]
0xbf57: mov rdx,rsi
0xbf5a: mov rsi,rdi
0xbf5d: xor edi,edi
0xbf5f: jmp 0xba20
0xbfdf: mov rcx,qword ptr [rsp+0x38]
0xbfe4: xor rcx,0x28
0xbfed: jnz 0xbff9
0xbfef: add rsp,0x48
0xbff3: ret
0xbff4: call 0x2400
0xbff9: call 0x2560
0xc000: sub rsp,0x48
0xc004: mov rax,rdx
0xc007: mov rdx,rcx
0xc00a: mov rcx,0x28
0xc013: mov qword ptr [rsp+0x38],rcx
0xc018: xor ecx,ecx
0xc01a: cmp esi,0xa
0xc01d: jz 0xc080
0xc01f: mov dword ptr [rsp],esi
0xc022: mov rcx,rsp
0xc025: mov rsi,rax
0xc028: mov [rsp+0x4],0x0
0xc031: mov [rsp+0xc],0x0
0xc03a: mov [rsp+0x14],0x0
0xc043: mov [rsp+0x1c],0x0
0xc04c: mov [rsp+0x24],0x0
0xc055: mov [rsp+0x2c],0x0
0xc05e: mov [rsp+0x34],0x0
0xc066: call 0xba20
0xc06b: mov rdx,qword ptr [rsp+0x38]
0xc070: xor rdx,0x28
0xc079: jnz 0xc085
0xc07b: add rsp,0x48
0xc07f: ret
0xc080: call 0x2400
0xc085: call 0x2560
0xc0a0: mov rcx,rdx
0xc0a3: mov rdx,rsi
0xc0a6: mov esi,edi
0xc0a8: xor edi,edi
0xc0aa: jmp 0xc000
0xc0b0: sub rsp,0x48
0xc0b4: mov ecx,edx
0xc0b6: mov rax,0x28
0xc0bf: mov qword ptr [rsp+0x38],rax
0xc0c4: xor eax,eax
0xc0c6: mov rax,qword ptr [rip+0x21c223]
0xc0cd: mov r8,rsp
0xc0d0: and ecx,0x1f
0xc0d3: movdqa xmm0,[rip+0x21c1e5]
0xc0db: mov qword ptr [rsp+0x30],rax
0xc0e0: mov eax,edx
0xc0e2: movaps [rsp],xmm0
0xc0e6: shr al,0x5
0xc0e9: movzx eax,al
0xc0ec: lea r9,[r8+rax*4+0x8]
0xc0f1: movdqa xmm0,[rip+0x21c1d7]
0xc0f9: movaps [rsp+0x10],xmm0
0xc0fe: movdqa xmm0,[rip+0x21c1da]
0xc106: movaps [rsp+0x20],xmm0
0xc10b: mov edx,dword ptr [r9]
0xc10e: mov eax,edx
0xc110: shr eax,cl
0xc112: not eax
0xc114: and eax,0x1
0xc117: shl eax,cl
0xc119: mov rcx,r8
0xc11c: xor eax,edx
0xc11e: mov rdx,rsi
0xc121: mov rsi,rdi
0xc124: mov dword ptr [r9],eax
0xc127: xor edi,edi
0xc129: call 0xba20
0xc12e: mov rsi,qword ptr [rsp+0x38]
0xc133: xor rsi,0x28
0xc13c: jnz 0xc143
0xc13e: add rsp,0x48
0xc142: ret
0xc143: call 0x2560
0xc150: movsx edx,sil
0xc154: mov rsi,0xffffffff
0xc15b: jmp 0xc0b0
0xc160: mov edx,0x3a
0xc165: mov rsi,0xffffffff
0xc16c: jmp 0xc0b0
0xc180: mov edx,0x3a
0xc185: jmp 0xc0b0
0xc1ff: mov rcx,qword ptr [rsp+0x38]
0xc204: xor rcx,0x28
0xc20d: jnz 0xc219
0xc20f: add rsp,0x48
0xc213: ret
0xc214: call 0x2400
0xc219: call 0x2560
0xc220: sub rsp,0x48
0xc224: mov r9,rcx
0xc227: mov rcx,qword ptr [rip+0x21c0c2]
0xc22e: movdqa xmm0,[rip+0x21c08a]
0xc236: mov rax,0x28
0xc23f: mov qword ptr [rsp+0x38],rax
0xc244: xor eax,eax
0xc246: movaps [rsp],xmm0
0xc24a: test rsi,rsi
0xc24d: mov qword ptr [rsp+0x30],rcx
0xc252: mov [rsp],0xa
0xc259: movdqa xmm0,[rip+0x21c06f]
0xc261: movaps [rsp+0x10],xmm0
0xc266: movdqa xmm0,[rip+0x21c072]
0xc26e: movaps [rsp+0x20],xmm0
0xc273: jz 0xc2a7
0xc275: test rdx,rdx
0xc278: jz 0xc2a7
0xc27a: mov qword ptr [rsp+0x28],rsi
0xc27f: mov qword ptr [rsp+0x30],rdx
0xc284: mov rcx,rsp
0xc287: mov rdx,r8
0xc28a: mov rsi,r9
0xc28d: call 0xba20
0xc292: mov rdi,qword ptr [rsp+0x38]
0xc297: xor rdi,0x28
0xc2a0: jnz 0xc2ac
0xc2a2: add rsp,0x48
0xc2a6: ret
0xc2a7: call 0x2400
0xc2ac: call 0x2560
0xc2c0: mov r8,0xffffffff
0xc2c7: jmp 0xc220
0xc2d0: mov rcx,rdx
0xc2d3: mov r8,0xffffffff
0xc2da: mov rdx,rsi
0xc2dd: mov rsi,rdi
0xc2e0: xor edi,edi
0xc2e2: jmp 0xc220
0xc2f0: mov r8,rcx
0xc2f3: mov rcx,rdx
0xc2f6: mov rdx,rsi
0xc2f9: mov rsi,rdi
0xc2fc: xor edi,edi
0xc2fe: jmp 0xc220
0xc310: lea rcx,[rip+0x21bd29]
0xc317: jmp 0xba20
0xc320: lea rcx,[rip+0x21bd19]
0xc327: mov rdx,rsi
0xc32a: mov rsi,rdi
0xc32d: xor edi,edi
0xc32f: jmp 0xba20
0xc380: push rbp
0xc381: push rbx
0xc382: mov rdx,rsi
0xc385: mov rbx,rsi
0xc388: xor esi,esi
0xc38a: mov rbp,rdi
0xc38d: sub rsp,0x8
0xc391: call 0x2670
0xc396: mov rdx,rax
0xc399: sub rdx,rbp
0xc39c: add rdx,0x1
0xc3a0: test rax,rax
0xc3a3: mov rax,rbx
0xc3a6: cmovne rax,rdx
0xc3aa: add rsp,0x8
0xc3ae: pop rbx
0xc3af: pop rbp
0xc3b0: ret
0xc466: nop qword ptr [rax+rax*1+0x0]
0xc4f5: nop qword ptr [rax]
0xc4f8: mov r8,rcx
0xc4fb: mov rcx,rdx
0xc4fe: lea rdx,[rip+0x15a8f]
0xc505: mov esi,0x1
0xc50a: xor eax,eax
0xc50c: call 0x2970
0xc511: jmp 0xc3fc
0xc516: nop qword ptr [rax+rax*1+0x0]
0xc575: nop qword ptr [rax]
0xc5b1: nop qword ptr [rax+0x0]
0xc5f8: nop qword ptr [rax+rax*1+0x0]
0xc647: nop qword ptr [rax+rax*1+0x0]
0xc6a4: nop qword ptr [rax+0x0]
0xc6d2: nop qword ptr [rax+rax*1+0x0]
0xc786: nop qword ptr [rax+rax*1+0x0]
0xc7e0: xor r9d,r9d
0xc7e3: cmp [r8],0x0
0xc7e7: jz 0xc7fb
0xc7e9: nop qword ptr [rax+0x0]
0xc7f0: add r9,0x1
0xc7f4: cmp [r8+r9*8+0x0],0x0
0xc7f9: jnz 0xc7f0
0xc7fb: jmp 0xc3c0
0xc800: sub rsp,0x68
0xc804: mov r10,r8
0xc807: xor r9d,r9d
0xc80a: mov rax,0x28
0xc813: mov qword ptr [rsp+0x58],rax
0xc818: xor eax,eax
0xc81a: mov r8,rsp
0xc81d: nop qword ptr [rax]
0xc820: mov eax,dword ptr [r10]
0xc823: cmp eax,0x2f
0xc826: jnbe 0xc86a
0xc828: mov r11d,eax
0xc82b: add r11,qword ptr [r10+0x10]
0xc82f: add eax,0x8
0xc832: mov dword ptr [r10],eax
0xc835: mov rax,qword ptr [r11]
0xc838: test rax,rax
0xc83b: mov qword ptr [r8+r9*8+0x0],rax
0xc83f: jz 0xc84b
0xc841: add r9,0x1
0xc845: cmp r9,0xa
0xc849: jnz 0xc820
0xc84b: call 0xc3c0
0xc850: mov rax,qword ptr [rsp+0x58]
0xc855: xor rax,0x28
0xc85e: jnz 0xc865
0xc860: add rsp,0x68
0xc864: ret
0xc865: call 0x2560
0xc86a: mov r11,qword ptr [r10+0x8]
0xc86e: lea rax,[r11+0x8]
0xc872: mov qword ptr [r10+0x8],rax
0xc876: jmp 0xc835
0xc940: call 0x2560
0xc960: push rbx
0xc961: lea rsi,[rip+0x1567a]
0xc968: mov edx,0x5
0xc96d: xor edi,edi
0xc96f: call 0x2510
0xc974: lea rdx,[rip+0x1567c]
0xc97b: mov rsi,rax
0xc97e: mov edi,0x1
0xc983: xor eax,eax
0xc985: call 0x2850
0xc98a: lea rsi,[rip+0x1567c]
0xc991: mov edx,0x5
0xc996: xor edi,edi
0xc998: call 0x2510
0xc99d: lea rcx,[rip+0x14304]
0xc9a4: lea rdx,[rip+0x1315c]
0xc9ab: mov rsi,rax
0xc9ae: mov edi,0x1
0xc9b3: xor eax,eax
0xc9b5: call 0x2850
0xc9ba: mov rbx,qword ptr [rip+0x21b6e7]
0xc9c1: lea rsi,[rip+0x15878]
0xc9c8: xor edi,edi
0xc9ca: mov edx,0x5
0xc9cf: call 0x2510
0xc9d4: mov rsi,rbx
0xc9d7: mov rdi,rax
0xc9da: pop rbx
0xc9db: jmp 0x26a0
0xc9ee: test rbx,rbx
0xc9f1: jnz 0xc9f5
0xc9f5: call 0xcc30
0xca00: mov rax,rdi
0xca03: mul rsi
0xca06: mov rdi,rax
0xca09: seto al
0xca0c: test rdi,rdi
0xca0f: js 0xca1b
0xca11: movzx eax,al
0xca14: test rax,rax
0xca17: jnz 0xca1b
0xca19: jmp 0xc9e0
0xca1b: sub rsp,0x8
0xca1f: call 0xcc30
0xca5b: test rbx,rbx
0xca5e: jnz 0xca71
0xca62: nop qword ptr [rax+rax*1+0x0]
0xca71: call 0xcc30
0xca80: mov rax,rsi
0xca83: mul rdx
0xca86: mov rsi,rax
0xca89: seto al
0xca8c: test rsi,rsi
0xca8f: js 0xca9b
0xca91: movzx eax,al
0xca94: test rax,rax
0xca97: jnz 0xca9b
0xca99: jmp 0xca40
0xca9b: sub rsp,0x8
0xca9f: call 0xcc30
0xcab0: test rdi,rdi
0xcab3: mov r9,rdx
0xcab6: mov rcx,qword ptr [rsi]
0xcab9: jz 0xcaf0
0xcabb: xor edx,edx
0xcabd: mov rax,0x6148914691236517204
0xcac7: div r9
0xcaca: cmp rax,rcx
0xcacd: jbe 0xcb0b
0xcacf: mov rax,rcx
0xcad2: shr rax,0x1
0xcad5: lea rcx,[rax+rcx*1+0x1]
0xcada: mov qword ptr [rsi],rcx
0xcadd: imul rcx,r9
0xcae1: mov rsi,rcx
0xcae4: jmp 0xca40
0xcae9: nop qword ptr [rax+0x0]
0xcaf0: test rcx,rcx
0xcaf3: jz 0xcb18
0xcaf5: mov rax,rcx
0xcaf8: mul r9
0xcafb: seto dl
0xcafe: test rax,rax
0xcb01: movzx edx,dl
0xcb04: js 0xcb0b
0xcb06: test rdx,rdx
0xcb09: jz 0xcada
0xcb0b: sub rsp,0x8
0xcb0f: call 0xcc30
0xcb14: nop qword ptr [rax+0x0]
0xcb18: xor edx,edx
0xcb1a: mov eax,0x80
0xcb1f: xor r8d,r8d
0xcb22: div r9
0xcb25: test rax,rax
0xcb28: setz r8b
0xcb2c: lea rcx,[r8+rax*1+0x0]
0xcb30: jmp 0xcaf5
0xcb6d: nop qword ptr [rax]
0xcc60: call 0x2400
0xcc89: nop qword ptr [rax+0x0]
0xcc9f: nop 
0xccd9: nop qword ptr [rax+0x0]
0xcd9f: nop 
0xcda0: cmp eax,0x22
0xcda3: mov r12d,0x4
0xcda9: jnz 0xcd79
0xcdab: mov r12d,0x1
0xcdb1: jmp 0xcd64
0xcdb3: nop qword ptr [rax+rax*1+0x0]
0xce62: nop qword ptr [rax+rax*1+0x0]
0xce74: nop qword ptr [rax+0x0]
0xcf1b: nop qword ptr [rax+rax*1+0x0]
0xcf4b: nop qword ptr [rax+rax*1+0x0]
0xcf7c: nop qword ptr [rax+0x0]
0xcfaa: nop qword ptr [rax+rax*1+0x0]
0xcfe6: nop qword ptr [rax+rax*1+0x0]
0xd01a: nop qword ptr [rax+rax*1+0x0]
0xd056: nop qword ptr [rax+rax*1+0x0]
0xd09c: nop qword ptr [rax+0x0]
0xd0f8: nop qword ptr [rax+rax*1+0x0]
0xd12a: nop qword ptr [rax+rax*1+0x0]
0xd162: nop qword ptr [rax+rax*1+0x0]
0xd192: nop qword ptr [rax+rax*1+0x0]
0xd1ce: nop 
0xd1ff: nop 
0xd24d: nop qword ptr [rax]
0xd250: mov r12d,0x4
0xd256: jmp 0xcd79
0xd25b: nop qword ptr [rax+rax*1+0x0]
0xd275: nop qword ptr [rax]
0xd28d: nop qword ptr [rax]
0xd2a2: nop qword ptr [rax+rax*1+0x0]
0xd2bd: nop qword ptr [rax]
0xd2d5: nop qword ptr [rax]
0xd2ed: nop qword ptr [rax]
0xd305: nop qword ptr [rax]
0xd31d: nop qword ptr [rax]
0xd335: nop qword ptr [rax]
0xd37f: lea rcx,[rip+0x150da]
0xd386: lea rsi,[rip+0x14fb3]
0xd38d: lea rdi,[rip+0x14fcc]
0xd394: mov edx,0x54
0xd399: call 0x2600
0xd39e: call 0x2560
0xd416: nop qword ptr [rax+rax*1+0x0]
0xd454: cmp eax,0x22
0xd457: mov ebp,0x1
0xd45c: jnz 0xd488
0xd463: movzx r12d,byte ptr [rcx]
0xd467: test r12b,r12b
0xd46a: jnz 0xd4e7
0xd471: nop qword ptr [rax+0x0]
0xd4b2: nop qword ptr [rax+rax*1+0x0]
0xd4bc: nop qword ptr [rax+0x0]
0xd4c0: movzx r12d,byte ptr [rbp+0x0]
0xd4c5: test r12b,r12b
0xd4c8: jz 0xd488
0xd4ca: movsx esi,r12b
0xd4ce: mov rdi,r13
0xd4d1: xor ebp,ebp
0xd4d3: call 0x25a0
0xd4d8: test rax,rax
0xd4db: mov ebx,0x1
0xd4e0: mov rcx,qword ptr [rsp+0x8]
0xd4e5: jz 0xd488
0xd4e7: movsx esi,r12b
0xd4eb: mov rdi,r13
0xd4ee: mov qword ptr [rsp+0x8],rcx
0xd4f3: call 0x25a0
0xd4f8: test rax,rax
0xd4fb: mov rcx,qword ptr [rsp+0x8]
0xd500: jz 0xd5cc
0xd506: lea eax,[r12-0x45]
0xd50b: cmp al,0x2f
0xd50d: jnbe 0xd560
0xd50f: mov rdx,0x142129060940101
0xd519: bt rdx,rax
0xd51d: jnb 0xd560
0xd51f: mov esi,0x30
0xd524: mov rdi,r13
0xd527: mov qword ptr [rsp+0x8],rcx
0xd52c: call 0x25a0
0xd531: test rax,rax
0xd534: mov rcx,qword ptr [rsp+0x8]
0xd539: jz 0xd560
0xd53b: movzx eax,byte ptr [rcx+0x1]
0xd53f: cmp al,0x44
0xd541: jz 0xd54f
0xd543: cmp al,0x69
0xd545: jz 0xd718
0xd54b: cmp al,0x42
0xd54d: jnz 0xd560
0xd54f: mov edi,0x2
0xd554: mov esi,0x3e8
0xd559: jmp 0xd56a
0xd55b: nop qword ptr [rax+rax*1+0x0]
0xd560: mov edi,0x1
0xd565: mov esi,0x400
0xd56a: sub r12d,0x42
0xd56e: cmp r12b,0x35
0xd572: jnbe 0xd5cc
0xd574: lea rdx,[rip+0x14ef5]
0xd57b: movzx r12d,r12b
0xd57f: movsxd rax,dword ptr [rdx+r12*4+0x0]
0xd583: add rax,rdx
0xd586: jmp rax
0xd588: mov rax,rbx
0xd58b: mul rsi
0xd58e: jo 0xd781
0xd594: xor r8d,r8d
0xd597: mul rsi
0xd59a: jo 0xd772
0xd5a0: mov rbx,rax
0xd5a3: or ebp,r8d
0xd5a6: nop qword ptr [rax+rax*1+0x0]
0xd5b0: movsxd rdi,edi
0xd5b3: mov eax,ebp
0xd5b5: add rcx,rdi
0xd5b8: or eax,0x2
0xd5bb: mov qword ptr [r15],rcx
0xd5be: cmp [rcx],0x0
0xd5c1: mov qword ptr [r14],rbx
0xd5c4: cmovne ebp,eax
0xd5c7: jmp 0xd48d
0xd5cc: mov qword ptr [r14],rbx
0xd5cf: or ebp,0x2
0xd5d2: jmp 0xd48d
0xd5d7: mov edx,0x2
0xd5dc: mov rax,rdx
0xd5df: mul rbx
0xd5e2: jo 0xd67e
0xd5e8: add rbx,rbx
0xd5eb: jmp 0xd5b0
0xd5ed: mov edx,0x200
0xd5f2: mov rax,rdx
0xd5f5: mul rbx
0xd5f8: jo 0xd67e
0xd5fe: shl rbx,0x9
0xd602: jmp 0xd5b0
0xd604: mov r8d,0x7
0xd60a: xor r9d,r9d
0xd60d: nop qword ptr [rax]
0xd610: mov rax,rbx
0xd613: mul rsi
0xd616: mov rbx,rax
0xd619: jo 0xd7ae
0xd61f: sub r8d,0x1
0xd623: jnz 0xd610
0xd625: or ebp,r9d
0xd628: jmp 0xd5b0
0xd62a: mov r8d,0x8
0xd630: xor r9d,r9d
0xd633: nop qword ptr [rax+rax*1+0x0]
0xd638: mov rax,rbx
0xd63b: mul rsi
0xd63e: mov rbx,rax
0xd641: jo 0xd790
0xd647: sub r8d,0x1
0xd64b: jnz 0xd638
0xd64d: jmp 0xd625
0xd64f: mov r8d,0x4
0xd655: xor r9d,r9d
0xd658: mov rax,rbx
0xd65b: mul rsi
0xd65e: mov rbx,rax
0xd661: jo 0xd763
0xd667: sub r8d,0x1
0xd66b: jnz 0xd658
0xd66d: jmp 0xd625
0xd66f: mov rax,rbx
0xd672: mul rsi
0xd675: mov rbx,rax
0xd678: jno 0xd5b0
0xd67e: mov ebp,0x1
0xd683: or rbx,0xffffffff
0xd687: jmp 0xd5b0
0xd68c: nop qword ptr [rax+0x0]
0xd690: mov r8d,0x5
0xd696: xor r9d,r9d
0xd699: mov rax,rbx
0xd69c: mul rsi
0xd69f: mov rbx,rax
0xd6a2: jo 0xd79f
0xd6a8: sub r8d,0x1
0xd6ac: jnz 0xd699
0xd6ae: jmp 0xd625
0xd6b3: mov r8d,0x6
0xd6b9: xor r9d,r9d
0xd6bc: mov rax,rbx
0xd6bf: mul rsi
0xd6c2: mov rbx,rax
0xd6c5: jo 0xd754
0xd6cb: sub r8d,0x1
0xd6cf: jnz 0xd6bc
0xd6d1: jmp 0xd625
0xd6d6: mov edx,0x400
0xd6db: mov rax,rdx
0xd6de: mul rbx
0xd6e1: jo 0xd67e
0xd6e3: shl rbx,0xa
0xd6e7: jmp 0xd5b0
0xd6ec: mov rax,rbx
0xd6ef: mul rsi
0xd6f2: jo 0xd7bd
0xd6f8: xor r8d,r8d
0xd6fb: mul rsi
0xd6fe: jno 0xd597
0xd704: mov r8d,0x1
0xd70a: or rax,0xffffffff
0xd70e: jmp 0xd597
0xd713: nop qword ptr [rax+rax*1+0x0]
0xd718: xor edi,edi
0xd71a: cmp [rcx+0x2],0x42
0xd71e: mov esi,0x400
0xd723: setz dil
0xd727: lea edi,[rdi+rdi*1+0x1]
0xd72b: jmp 0xd56a
0xd730: call 0x2560
0xd735: lea rcx,[rip+0x14e0c]
0xd73c: lea rsi,[rip+0x14bfd]
0xd743: lea rdi,[rip+0x14c16]
0xd74a: mov edx,0x54
0xd74f: call 0x2600
0xd754: mov r9d,0x1
0xd75a: or rbx,0xffffffff
0xd75e: jmp 0xd6cb
0xd763: mov r9d,0x1
0xd769: or rbx,0xffffffff
0xd76d: jmp 0xd667
0xd772: mov r8d,0x1
0xd778: or rbx,0xffffffff
0xd77c: jmp 0xd5a3
0xd781: or rax,0xffffffff
0xd785: mov r8d,0x1
0xd78b: jmp 0xd597
0xd790: mov r9d,0x1
0xd796: or rbx,0xffffffff
0xd79a: jmp 0xd647
0xd79f: mov r9d,0x1
0xd7a5: or rbx,0xffffffff
0xd7a9: jmp 0xd6a8
0xd7ae: mov r9d,0x1
0xd7b4: or rbx,0xffffffff
0xd7b8: jmp 0xd61f
0xd7bd: mov r8d,0x1
0xd7c3: or rax,0xffffffff
0xd7c7: jmp 0xd6fb
0xd814: shl rax,0x5
0xd818: lea rbx,[rip+0x14d6a]
0xd81f: mov r13,qword ptr [rcx+rax*1+0x0]
0xd8e6: nop qword ptr [rax+rax*1+0x0]
0xd926: cmp eax,0x22
0xd929: mov ebp,0x1
0xd92e: jnz 0xd958
0xd943: nop qword ptr [rax+rax*1+0x0]
0xd952: nop qword ptr [rax+rax*1+0x0]
0xd982: nop qword ptr [rax+rax*1+0x0]
0xd98c: nop qword ptr [rax+0x0]
0xda2b: nop qword ptr [rax+rax*1+0x0]
0xdb5c: nop qword ptr [rax+0x0]
0xdbe3: nop qword ptr [rax+rax*1+0x0]
0xdc00: call 0x2560
0xdc05: lea rcx,[rip+0x14a84]
0xdc0c: lea rsi,[rip+0x1472d]
0xdc13: lea rdi,[rip+0x14746]
0xdc1a: mov edx,0x54
0xdc1f: call 0x2600
0xdce5: nop qword ptr [rax]
0xdd43: nop qword ptr [rax+rax*1+0x0]
0xdd6f: nop 
0xddc0: xor eax,eax
0xddc2: mov rdx,qword ptr [rsi+0x8]
0xddc6: cmp qword ptr [rdi+0x8],rdx
0xddca: jz 0xddd0
0xddcc: rep ret
0xddce: nop 
0xddd0: mov rax,qword ptr [rsi]
0xddd3: cmp qword ptr [rdi],rax
0xddd6: setz al
0xddd9: ret
0xdde0: mov rax,qword ptr [rdi+0x8]
0xdde4: xor edx,edx
0xdde6: div rsi
0xdde9: mov rax,rdx
0xddec: ret
0xddf0: mov rax,qword ptr [rdi]
0xddf3: xor edx,edx
0xddf5: div rsi
0xddf8: mov rax,rdx
0xddfb: ret
0xde10: mov rdx,qword ptr [rdi]
0xde13: mov rax,qword ptr [rsi]
0xde16: mov rax,qword ptr [rax+0x80]
0xde1d: cmp qword ptr [rdx+0x80],rax
0xde24: jb 0xde30
0xde26: setnbe al
0xde29: movzx eax,al
0xde2c: ret
0xde2d: nop qword ptr [rax]
0xde30: mov eax,0xffffffff
0xde35: ret
0xdebd: nop qword ptr [rax]
0xdf1c: nop qword ptr [rax+0x0]
0xdf7b: nop qword ptr [rax+rax*1+0x0]
0xdf8c: nop qword ptr [rax+0x0]
0xdfae: nop 
0xdfb9: nop qword ptr [rax+0x0]
0xdfd2: nop qword ptr [rax+rax*1+0x0]
0xdfe2: nop qword ptr [rax+rax*1+0x0]
0xe0a9: nop qword ptr [rax+0x0]
0xe0dd: nop qword ptr [rax]
0xe0e0: mov rdi,qword ptr [rbp+0x10]
0xe107: nop qword ptr [rax+rax*1+0x0]
0xe1e9: nop qword ptr [rax+0x0]
0xe206: nop qword ptr [rax+rax*1+0x0]
0xe22a: nop qword ptr [rax+rax*1+0x0]
0xe297: nop qword ptr [rax+rax*1+0x0]
0xe2f8: nop qword ptr [rax+rax*1+0x0]
0xe344: test rax,rax
0xe347: jz 0xe358
0xe349: cmp r13,rax
0xe34c: jnz 0xe367
0xe34e: mov rbx,qword ptr [rsp+0x10]
0xe353: jmp 0xe2d4
0xe358: mov rdi,r13
0xe35b: call 0x2a10
0xe360: jmp 0xe34e
0xe362: call 0x2560
0xe367: call 0x2400
0xe3a7: nop qword ptr [rax+rax*1+0x0]
0xe3cc: nop qword ptr [rax+0x0]
0xe3d0: mov eax,0x2
0xe3d5: add rsp,0x8
0xe3d9: ret
0xe40f: nop 
0xe42e: nop 
0xe48a: nop qword ptr [rax+rax*1+0x0]
0xe4a1: nop qword ptr [rax+0x0]
0xe4e1: nop qword ptr [rax+0x0]
0xe503: nop qword ptr [rax+rax*1+0x0]
0xe508: mov rdi,qword ptr [rbx]
0xe50b: call 0x2a10
0xe510: mov [rbx],0x0
0xe517: xor eax,eax
0xe519: pop rbx
0xe51a: ret
0xe558: nop qword ptr [rax+rax*1+0x0]
0xe5b8: nop qword ptr [rax+rax*1+0x0]
0xe6bd: nop qword ptr [rax]
0xe709: test bl,0x2
0xe70c: mov r15d,r12d
0xe70f: mov [rsp+0xf],0x0
0xe714: jnz 0xe680
0xe758: nop qword ptr [rax+rax*1+0x0]
0xe77f: nop 
0xe780: mov edi,r12d
0xe783: xor ebx,ebx
0xe785: call 0x2640
0xe78a: jmp 0xe6d5
0xe78f: nop 
0xe7d5: nop qword ptr [rax]
0xe7f8: nop qword ptr [rax+rax*1+0x0]
0xe825: call 0x2560
0xe82a: test bl,0x2
0xe82d: mov r15d,r12d
0xe830: mov [rsp+0xf],0x1
0xe835: jz 0xe726
0xe83b: jmp 0xe680
0xe89b: cmp rbp,rax
0xe89e: mov r12,rax
0xe8a1: jz 0xe8c1
0xe8a3: mov rdi,rbp
0xe8a6: call 0x2a10
0xe8ab: test r12,r12
0xe8ae: jz 0xe8f8
0xe8b0: mov rax,qword ptr [r12+0x10]
0xe8b5: mov ecx,0x2
0xe8ba: mov word ptr [rbx+0x70],cx
0xe8be: mov qword ptr [rbx],rax
0xe8cb: nop qword ptr [rax+rax*1+0x0]
0xe8f2: nop qword ptr [rax+rax*1+0x0]
0xe8f8: pop rbx
0xe8f9: xor eax,eax
0xe8fb: pop rbp
0xe8fc: pop r12
0xe8fe: ret
0xe95a: nop qword ptr [rax+rax*1+0x0]
0xe98e: nop 
0xe9ae: call 0x2560
0xeab2: nop qword ptr [rax+rax*1+0x0]
0xec28: test al,al
0xec2a: jz 0xf010
0xec30: mov rdx,qword ptr [r15+0x20]
0xec34: cmp rdx,qword ptr [rsp+0x28]
0xec39: jz 0xee20
0xec3f: add rdx,qword ptr [rsp+0x18]
0xec44: test [r15+0x48],0x4
0xec49: cmove rdx,qword ptr [rsp+0x40]
0xec4f: mov qword ptr [rsp+0x40],rdx
0xec54: mov rcx,qword ptr [r15+0x30]
0xec58: sub rcx,qword ptr [rsp+0x18]
0xec5d: mov byte ptr [rsp+0x5d],al
0xec61: mov qword ptr [rsp+0x28],rcx
0xec66: jmp 0xeab8
0xec6b: nop qword ptr [rax+rax*1+0x0]
0xed17: nop qword ptr [rax+rax*1+0x0]
0xed5c: nop qword ptr [rax+0x0]
0xed83: nop qword ptr [rax+rax*1+0x0]
0xed92: nop qword ptr [rax+rax*1+0x0]
0xedad: nop qword ptr [rax]
0xedcb: nop qword ptr [rax+rax*1+0x0]
0xee04: nop qword ptr [rax+0x0]
0xee1f: nop 
0xee20: movzx eax,byte ptr [rsp+0x5d]
0xee25: jmp 0xec54
0xee2a: nop qword ptr [rax+rax*1+0x0]
0xee6a: test rax,rax
0xee6d: mov qword ptr [rbp+0x18],rax
0xee71: jz 0xf190
0xee77: cmp [rbp+0x70],0xb
0xee7c: jz 0xf210
0xee82: mov edi,dword ptr [r15+0x48]
0xee86: test edi,0x100
0xee8c: jnz 0xefb0
0xee92: cmp [r15+0x40],0x1
0xee97: sbb rax,rax
0xee9a: and eax,0x186a1
0xee9f: sub rax,0x1
0xeea3: cmp [rsp+0x58],0x2
0xeea8: mov qword ptr [rsp+0x38],rax
0xeead: jz 0xf200
0xeeb3: mov edx,dword ptr [r15+0x48]
0xeeb7: mov eax,dword ptr [rsp+0x64]
0xeebb: and edx,0x38
0xeebe: cmp edx,0x18
0xeec1: jz 0xf264
0xeec7: cmp [rsp+0x58],0x3
0xeecc: mov r12d,0x1
0xeed2: setz bl
0xeed5: test [r15+0x49],0x2
0xeeda: jnz 0xf2bc
0xeee0: test eax,eax
0xeee2: jns 0xf248
0xeee8: test bl,bl
0xeeea: jz 0xeefb
0xeeec: test r12b,r12b
0xeeef: jz 0xeefb
0xeef1: call 0x2410
0xeef6: mov eax,dword ptr [rax]
0xeef8: mov dword ptr [rbp+0x40],eax
0xeefb: or [rbp+0x72],0x1
0xef00: mov rdi,qword ptr [rbp+0x18]
0xef04: call 0x2650
0xef09: mov edi,dword ptr [r15+0x48]
0xef0d: mov [rbp+0x18],0x0
0xef15: test edi,0x200
0xef1b: jz 0xef30
0xef1d: mov eax,dword ptr [rsp+0x64]
0xef21: test eax,eax
0xef23: js 0xef30
0xef25: mov edi,eax
0xef27: call 0x2640
0xef2c: mov edi,dword ptr [r15+0x48]
0xef30: mov [rbp+0x18],0x0
0xef38: mov [rsp+0x5f],0x0
0xef3d: jmp 0xea2b
0xef42: nop qword ptr [rax+rax*1+0x0]
0xef5a: nop qword ptr [rax+rax*1+0x0]
0xefad: nop qword ptr [rax]
0xefb0: lea rbx,[r15+0x58]
0xefb4: mov rdx,rbp
0xefb7: mov rsi,rbx
0xefba: call 0xe900
0xefbf: xor edx,edx
0xefc1: mov rsi,rbp
0xefc4: mov rdi,r15
0xefc7: call 0xde40
0xefcc: mov edi,dword ptr [r15+0x48]
0xefd0: mov rdx,rbp
0xefd3: mov rsi,rbx
0xefd6: call 0xe850
0xefdb: test al,al
0xefdd: jnz 0xee92
0xefe3: call 0x2410
0xefe8: mov [rsp+0x10],0x0
0xeff1: mov [rax],0xc
0xeff7: jmp 0xef85
0xeff9: nop qword ptr [rax+0x0]
0xf00a: nop qword ptr [rax+rax*1+0x0]
0xf061: nop qword ptr [rax+0x0]
0xf0a3: cmp [rsp+0x5f],0x0
0xf0a8: jz 0xf110
0xf0aa: cmp [rsp+0x58],0x1
0xf0af: jz 0xf0f0
0xf0b1: test rbx,rbx
0xf0b4: jz 0xf0f0
0xf0f0: cmp [rbp+0x58],0x0
0xf0f5: jnz 0xf226
0xf0fb: mov rdi,r15
0xf0fe: call 0xe450
0xf103: test eax,eax
0xf105: setnz al
0xf108: test al,al
0xf10a: jnz 0xf293
0xf138: nop qword ptr [rax+rax*1+0x0]
0xf14d: test rbx,rbx
0xf150: mov dword ptr [rbp+0x40],eax
0xf153: jnz 0xf289
0xf159: cmp [rsp+0x50],0x0
0xf15f: mov eax,0x4
0xf164: jnz 0xf289
0xf16a: mov word ptr [rbp+0x70],ax
0xf18d: nop qword ptr [rax]
0xf190: cmp [rsp+0x58],0x3
0xf195: jnz 0xef7c
0xf1b5: nop qword ptr [rax]
0xf1e5: nop qword ptr [rax]
0xf1ff: nop 
0xf200: mov [rsp+0x5f],0x0
0xf205: mov edi,dword ptr [r15+0x48]
0xf209: jmp 0xea2b
0xf20e: nop 
0xf210: xor edx,edx
0xf212: mov rsi,rbp
0xf215: mov rdi,r15
0xf218: call 0xde40
0xf21d: mov word ptr [rbp+0x70],ax
0xf221: jmp 0xee92
0xf226: mov rsi,qword ptr [rbp+0x8]
0xf22a: lea rcx,[rip+0x1346a]
0xf231: mov edx,0xffffffff
0xf236: mov rdi,r15
0xf239: call 0xe5d0
0xf23e: test eax,eax
0xf240: setnz al
0xf243: jmp 0xf108
0xf248: xor ecx,ecx
0xf24a: mov edx,eax
0xf24c: mov rsi,rbp
0xf24f: mov rdi,r15
0xf252: call 0xe5d0
0xf257: test eax,eax
0xf259: jnz 0xeee8
0xf25f: jmp 0xea22
0xf264: cmp [rbp+0x88],0x2
0xf26c: jnz 0xeec7
0xf272: mov esi,eax
0xf274: mov rdi,rbp
0xf277: call 0xe370
0xf27c: test eax,eax
0xf27e: jnz 0xf2fe
0xf280: mov eax,dword ptr [rsp+0x64]
0xf284: jmp 0xeec7
0xf289: mov eax,0x7
0xf28e: jmp 0xf16a
0xf293: mov edi,0x7
0xf298: mov word ptr [rbp+0x70],di
0xf29c: or [r15+0x48],0x2000
0xf2a4: mov rdi,qword ptr [rsp+0x10]
0xf2a9: call 0xe1b0
0xf2ae: mov [rsp+0x10],0x0
0xf2b7: jmp 0xef85
0xf2bc: mov edi,eax
0xf2be: mov edx,0x3
0xf2c3: mov esi,0x406
0xf2c8: xor eax,eax
0xf2ca: call 0x1f730
0xf2cf: mov dword ptr [rsp+0x64],eax
0xf2d3: jmp 0xeee0
0xf2fe: cmp [rsp+0x58],0x3
0xf303: jnz 0xf200
0xf309: mov eax,dword ptr [rsp+0x64]
0xf30d: xor r12d,r12d
0xf310: mov ebx,0x1
0xf315: jmp 0xeed5
0xf31a: nop qword ptr [rax+rax*1+0x0]
0xf462: test al,al
0xf464: mov byte ptr [rsp+0x16],al
0xf468: jz 0xf709
0xf46e: mov rsi,qword ptr [r13+0x0]
0xf472: test rsi,rsi
0xf475: jz 0xf720
0xf47b: lea rsi,[rip+0x12b5f]
0xf482: xor edx,edx
0xf484: mov rdi,rbx
0xf487: call 0xe120
0xf48c: test rax,rax
0xf48f: mov r15,rax
0xf492: jz 0xf700
0xf498: mov rax,0xffffffff
0xf49f: test r14,r14
0xf4a2: mov rsi,qword ptr [r13+0x0]
0xf4a6: mov qword ptr [r15+0x58],rax
0xf4aa: mov qword ptr [r15+0x68],rax
0xf4ae: jz 0xf4bd
0xf4b0: mov eax,dword ptr [rbx+0x48]
0xf4b3: shr eax,0xa
0xf4b6: and eax,0x1
0xf4b9: mov byte ptr [rsp+0x16],al
0xf4bd: test rsi,rsi
0xf4c0: jz 0xf72c
0xf4c6: shr ebp,0xb
0xf4c9: mov [rsp+0x18],0x0
0xf4d2: xor r12d,r12d
0xf4d5: xor ebp,0x1
0xf4d8: mov eax,ebp
0xf4da: xor ebp,ebp
0xf4dc: and eax,0x1
0xf4df: mov byte ptr [rsp+0x17],al
0xf4e3: jmp 0xf55c
0xf4e5: nop qword ptr [rax]
0xf4e8: mov rdx,rax
0xf4eb: mov rdi,rbx
0xf4ee: call 0xe120
0xf4f3: test rax,rax
0xf4f6: mov rcx,rax
0xf4f9: jz 0xf6f0
0xf4ff: mov [rax+0x58],0x0
0xf507: mov qword ptr [rax+0x8],r15
0xf50b: lea rax,[rax+0x108]
0xf512: test r12,r12
0xf515: mov qword ptr [rcx+0x30],rax
0xf519: jz 0xf690
0xf51f: cmp [rsp+0x16],0x0
0xf524: jz 0xf690
0xf52a: mov esi,0xb
0xf52f: test r14,r14
0xf532: mov [rcx+0xa8],0x2
0xf53d: mov word ptr [rcx+0x70],si
0xf541: jz 0xf6d0
0xf547: mov qword ptr [rcx+0x10],r12
0xf54b: mov r12,rcx
0xf54e: add rbp,0x1
0xf552: mov rsi,qword ptr [r13+rbp*8+0x0]
0xf557: test rsi,rsi
0xf55a: jz 0xf5b0
0xf55c: mov rdi,rsi
0xf55f: mov qword ptr [rsp+0x8],rsi
0xf564: call 0x2530
0xf569: cmp rax,0x2
0xf56d: mov rsi,qword ptr [rsp+0x8]
0xf572: jbe 0xf4e8
0xf578: cmp [rsp+0x17],0x0
0xf57d: jz 0xf4e8
0xf583: cmp [rsi+rax*1-0x1],0x2f
0xf588: jnz 0xf4e8
0xf58e: nop 
0xf590: cmp [rsi+rax*1-0x2],0x2f
0xf595: jnz 0xf4e8
0xf59b: sub rax,0x1
0xf59f: cmp rax,0x1
0xf5a3: jnz 0xf590
0xf5a5: jmp 0xf4e8
0xf5aa: nop qword ptr [rax+rax*1+0x0]
0xf5b0: test r14,r14
0xf5b3: jz 0xf5cc
0xf5b5: cmp rbp,0x1
0xf5b9: jbe 0xf5cc
0xf5bb: mov rsi,r12
0xf5be: mov rdx,rbp
0xf5c1: mov rdi,rbx
0xf5c4: call 0xe010
0xf5c9: mov r12,rax
0xf5cc: lea rsi,[rip+0x12a0e]
0xf5d3: xor edx,edx
0xf5d5: mov rdi,rbx
0xf5d8: call 0xe120
0xf5dd: test rax,rax
0xf5e0: mov qword ptr [rbx],rax
0xf5e3: jz 0xf6f0
0xf5e9: mov edi,dword ptr [rbx+0x48]
0xf5ec: mov edx,0x9
0xf5f1: lea rsi,[rbx+0x58]
0xf5f5: mov qword ptr [rax+0x10],r12
0xf5f9: mov word ptr [rax+0x70],dx
0xf5fd: mov [rax+0x58],0x1
0xf605: call 0xe520
0xf60a: test al,al
0xf60c: jz 0xf6f0
0xf612: mov esi,dword ptr [rbx+0x48]
0xf615: test esi,0x204
0xf61b: jnz 0xf640
0xf61d: mov edi,dword ptr [rbx+0x2c]
0xf620: lea rdx,[rip+0x13075]
0xf627: call 0xe590
0xf62c: test eax,eax
0xf62e: mov dword ptr [rbx+0x28],eax
0xf631: jns 0xf640
0xf633: or [rbx+0x48],0x4
0xf637: nop qword ptr [rax+rax*1+0x0]
0xf640: lea rdi,[rbx+0x60]
0xf644: mov esi,0xffffffff
0xf649: call 0x1f510
0xf689: nop qword ptr [rax+0x0]
0xf690: xor edx,edx
0xf692: mov rsi,rcx
0xf695: mov rdi,rbx
0xf698: mov qword ptr [rsp+0x8],rcx
0xf69d: call 0xde40
0xf6a2: mov rcx,qword ptr [rsp+0x8]
0xf6a7: test r14,r14
0xf6aa: mov word ptr [rcx+0x70],ax
0xf6ae: jnz 0xf547
0xf6b4: test r12,r12
0xf6b7: mov [rcx+0x10],0x0
0xf6bf: jnz 0xf6d8
0xf6c1: mov qword ptr [rsp+0x18],rcx
0xf6c6: mov r12,rcx
0xf6c9: jmp 0xf54e
0xf6ce: nop 
0xf6d0: mov [rcx+0x10],0x0
0xf6d8: mov rax,qword ptr [rsp+0x18]
0xf6dd: mov qword ptr [rsp+0x18],rcx
0xf6e2: mov qword ptr [rax+0x10],rcx
0xf6e6: jmp 0xf54e
0xf6eb: nop qword ptr [rax+rax*1+0x0]
0xf6f0: mov rdi,r12
0xf6f3: call 0xe1b0
0xf6f8: mov rdi,r15
0xf6fb: call 0x2a10
0xf700: mov rdi,qword ptr [rbx+0x20]
0xf704: call 0x2a10
0xf709: mov rdi,rbx
0xf70c: xor ebx,ebx
0xf70e: call 0x2a10
0xf713: jmp 0xf64e
0xf718: nop qword ptr [rax+rax*1+0x0]
0xf720: xor r15d,r15d
0xf723: test r14,r14
0xf726: jnz 0xf4b0
0xf72c: xor r12d,r12d
0xf72f: jmp 0xf5cc
0xf734: nop qword ptr [rax+0x0]
0xf76b: nop qword ptr [rax+rax*1+0x0]
0xf81d: nop qword ptr [rax]
0xf827: nop qword ptr [rax+rax*1+0x0]
0xf856: nop qword ptr [rax+rax*1+0x0]
0xf879: nop qword ptr [rax+0x0]
0xf933: nop qword ptr [rax+rax*1+0x0]
0xfa0c: nop qword ptr [rax+0x0]
0xfa86: nop qword ptr [rax+rax*1+0x0]
0xfad4: nop qword ptr [rax+0x0]
0xfb4a: nop qword ptr [rax+rax*1+0x0]
0xfb5f: nop 
0xfb7a: nop qword ptr [rax+rax*1+0x0]
0xfc82: nop qword ptr [rax+rax*1+0x0]
0xfcd4: nop qword ptr [rax+0x0]
0xfd24: nop qword ptr [rax+0x0]
0xfd6f: nop 
0xfd81: nop qword ptr [rax+0x0]
0xfda8: nop qword ptr [rax+rax*1+0x0]
0xfe64: nop qword ptr [rax+0x0]
0xfed9: nop qword ptr [rax+0x0]
0xff16: nop qword ptr [rax+rax*1+0x0]
0x1006c: nop qword ptr [rax+0x0]
0x10070: sub rsp,0x8
0x10074: call 0x2410
0x10079: mov [rax],0x16
0x1007f: mov eax,0x1
0x10084: add rsp,0x8
0x10088: ret
0x10090: push r14
0x10092: push r13
0x10094: push r12
0x10096: push rbp
0x10097: mov r12d,esi
0x1009a: push rbx
0x1009b: mov rbx,rdi
0x1009e: call 0x2410
0x100a3: test r12d,0xffffefff
0x100aa: mov r13,rax
0x100ad: jnz 0x10198
0x100b3: mov rbp,qword ptr [rbx]
0x100b6: mov [rax],0x0
0x100bc: test [rbx+0x49],0x20
0x100c0: jnz 0x10140
0x100c2: movzx eax,byte ptr [rbp+0x70]
0x100c6: cmp ax,0x9
0x100ca: jz 0x10130
0x100cc: cmp ax,0x1
0x100d0: jnz 0x10140
0x100d2: mov rdi,qword ptr [rbx+0x8]
0x100d6: test rdi,rdi
0x100d9: jz 0x100e0
0x100db: call 0xe1b0
0x100e0: cmp r12d,0x1000
0x100e7: mov r14d,0x1
0x100ed: jnz 0x100fc
0x100ef: or [rbx+0x48],0x1000
0x100f6: mov r14d,0x2
0x100fc: cmp [rbp+0x58],0x0
0x10101: jnz 0x10115
0x10103: mov rax,qword ptr [rbp+0x30]
0x10107: cmp [rax],0x2f
0x1010a: jz 0x10115
0x1010c: mov esi,dword ptr [rbx+0x48]
0x1010f: test sil,0x4
0x10113: jz 0x10150
0x10115: mov esi,r14d
0x10118: mov rdi,rbx
0x1011b: call 0xe9c0
0x10120: mov qword ptr [rbx+0x8],rax
0x10124: pop rbx
0x10125: pop rbp
0x10126: pop r12
0x10128: pop r13
0x1012a: pop r14
0x1012c: ret
0x1012d: nop qword ptr [rax]
0x10130: pop rbx
0x10131: mov rax,qword ptr [rbp+0x10]
0x10135: pop rbp
0x10136: pop r12
0x10138: pop r13
0x1013a: pop r14
0x1013c: ret
0x1013d: nop qword ptr [rax]
0x10140: pop rbx
0x10141: xor eax,eax
0x10143: pop rbp
0x10144: pop r12
0x10146: pop r13
0x10148: pop r14
0x1014a: ret
0x1014b: nop qword ptr [rax+rax*1+0x0]
0x10150: mov edi,dword ptr [rbx+0x2c]
0x10153: lea rdx,[rip+0x12542]
0x1015a: call 0xe590
0x1015f: test eax,eax
0x10161: mov ebp,eax
0x10163: js 0x101b9
0x10165: mov esi,r14d
0x10168: mov rdi,rbx
0x1016b: call 0xe9c0
0x10170: test [rbx+0x49],0x2
0x10174: mov qword ptr [rbx+0x8],rax
0x10178: jnz 0x101a8
0x1017a: mov edi,ebp
0x1017c: call 0x2820
0x10181: test eax,eax
0x10183: jnz 0x101c8
0x10185: mov edi,ebp
0x10187: call 0x2640
0x1018c: mov rax,qword ptr [rbx+0x8]
0x10190: jmp 0x10124
0x10192: nop qword ptr [rax+rax*1+0x0]
0x10198: mov [rax],0x16
0x1019e: xor eax,eax
0x101a0: jmp 0x10124
0x101a5: nop qword ptr [rax]
0x101a8: mov edx,0x1
0x101ad: mov esi,ebp
0x101af: mov rdi,rbx
0x101b2: call 0xe3e0
0x101b7: jmp 0x1018c
0x101b9: mov [rbx+0x8],0x0
0x101c1: xor eax,eax
0x101c3: jmp 0x10124
0x101c8: mov ebx,dword ptr [r13+0x0]
0x101cc: mov edi,ebp
0x101ce: call 0x2640
0x101d3: xor eax,eax
0x101d5: mov dword ptr [r13+0x0],ebx
0x101d9: jmp 0x10124
0x1025e: call 0x2560
0x10284: nop qword ptr [rax+0x0]
0x102ec: nop qword ptr [rax+0x0]
0x104d5: movsxd rdi,dword ptr [rsp+0x20]
0x104da: mov qword ptr [rbx],rax
0x104dd: add rdi,qword ptr [rsp+0x48]
0x104e2: call 0xcc10
0x104e7: movsxd rdi,dword ptr [rsp+0x38]
0x104ec: mov qword ptr [rbx+0x8],rax
0x104f0: add rdi,qword ptr [rsp+0x48]
0x104f5: call 0xcc10
0x104fa: movsxd rdi,dword ptr [rsp+0x28]
0x104ff: mov qword ptr [rbx+0x10],rax
0x10503: add rdi,r15
0x10506: call 0xcc10
0x1050b: mov edx,dword ptr [rsp+0x18]
0x1050f: mov r15,rax
0x10512: mov qword ptr [rbx+0x18],rax
0x10516: mov eax,dword ptr [rsp+0x1c]
0x1051a: mov rsi,-0x17592186044416
0x10524: lea rdi,[rip+0x121d4]
0x1052b: or [rbx+0x28],0x4
0x1052f: mov rcx,rdx
0x10532: shl rdx,0x20
0x10536: shl rcx,0x8
0x1053a: and rdx,rsi
0x1053d: mov rsi,0x17592184995840
0x10547: and ecx,0xfff00
0x1054d: or rdx,rcx
0x10550: movzx ecx,al
0x10553: shl rax,0xc
0x10557: or rdx,rcx
0x1055a: and rax,rsi
0x1055d: mov ecx,0x7
0x10562: mov rsi,r15
0x10565: or rax,rdx
0x10568: mov edx,0x1
0x1056d: rep cmpsb ds:[rsi],es:[rdi]
0x1056f: mov qword ptr [rbx+0x20],rax
0x10573: setnbe al
0x10576: sbb al,0x0
0x10578: test al,al
0x1057a: jz 0x1059a
0x1057c: lea rdi,[rip+0x12183]
0x10583: mov ecx,0x5
0x10588: mov rsi,r15
0x1058b: rep cmpsb ds:[rsi],es:[rdi]
0x1058d: setnbe al
0x10590: sbb al,0x0
0x10592: test al,al
0x10594: jnz 0x10648
0x1059a: movzx eax,byte ptr [rbx+0x28]
0x1059e: mov r8,qword ptr [rbx]
0x105a1: mov esi,0x3a
0x105a6: mov rdi,r8
0x105a9: mov qword ptr [rsp+0x8],r8
0x105ae: and eax,0xfe
0x105b1: or eax,edx
0x105b3: mov byte ptr [rbx+0x28],al
0x105b6: call 0x25a0
0x105bb: test rax,rax
0x105be: mov edx,0x1
0x105c3: mov r8,qword ptr [rsp+0x8]
0x105c8: jz 0x10790
0x105ce: movzx eax,byte ptr [rbx+0x28]
0x105d2: add edx,edx
0x105d4: and eax,0xfd
0x105d7: or eax,edx
0x105d9: mov byte ptr [rbx+0x28],al
0x105dc: mov qword ptr [r14],rbx
0x105df: lea r14,[rbx+0x30]
0x105e3: jmp 0x103a0
0x105e8: nop qword ptr [rax+rax*1+0x0]
0x1060c: cmp eax,0xff
0x1060f: jz 0x10a4e
0x10644: nop qword ptr [rax+0x0]
0x10648: lea rdi,[rip+0x120bc]
0x1064f: mov ecx,0x6
0x10654: mov rsi,r15
0x10657: rep cmpsb ds:[rsi],es:[rdi]
0x10659: setnbe al
0x1065c: sbb al,0x0
0x1065e: test al,al
0x10660: jz 0x1059a
0x10666: lea rdi,[rip+0x120a4]
0x1066d: mov ecx,0x8
0x10672: mov rsi,r15
0x10675: rep cmpsb ds:[rsi],es:[rdi]
0x10677: setnbe al
0x1067a: sbb al,0x0
0x1067c: test al,al
0x1067e: jz 0x1059a
0x10684: lea rdi,[rip+0x1208e]
0x1068b: mov ecx,0x7
0x10690: mov rsi,r15
0x10693: rep cmpsb ds:[rsi],es:[rdi]
0x10695: setnbe al
0x10698: sbb al,0x0
0x1069a: test al,al
0x1069c: jz 0x1059a
0x106a2: lea rdi,[rip+0x12077]
0x106a9: mov ecx,0x8
0x106ae: mov rsi,r15
0x106b1: rep cmpsb ds:[rsi],es:[rdi]
0x106b3: setnbe al
0x106b6: sbb al,0x0
0x106b8: test al,al
0x106ba: jz 0x1059a
0x106c0: lea rdi,[rip+0x12061]
0x106c7: mov ecx,0x7
0x106cc: mov rsi,r15
0x106cf: rep cmpsb ds:[rsi],es:[rdi]
0x106d1: setnbe al
0x106d4: sbb al,0x0
0x106d6: test al,al
0x106d8: jz 0x1059a
0x106de: lea rdi,[rip+0x1204a]
0x106e5: mov ecx,0xb
0x106ea: mov rsi,r15
0x106ed: rep cmpsb ds:[rsi],es:[rdi]
0x106ef: setnbe al
0x106f2: sbb al,0x0
0x106f4: test al,al
0x106f6: jz 0x1059a
0x106fc: lea rdi,[rip+0x12037]
0x10703: mov ecx,0x6
0x10708: mov rsi,r15
0x1070b: rep cmpsb ds:[rsi],es:[rdi]
0x1070d: setnbe al
0x10710: sbb al,0x0
0x10712: test al,al
0x10714: jz 0x1059a
0x1071a: lea rdi,[rip+0x1201f]
0x10721: mov ecx,0x6
0x10726: mov rsi,r15
0x10729: rep cmpsb ds:[rsi],es:[rdi]
0x1072b: setnbe al
0x1072e: sbb al,0x0
0x10730: test al,al
0x10732: jz 0x1059a
0x10738: lea rdi,[rip+0x12007]
0x1073f: mov ecx,0x7
0x10744: mov rsi,r15
0x10747: rep cmpsb ds:[rsi],es:[rdi]
0x10749: setnbe al
0x1074c: sbb al,0x0
0x1074e: test al,al
0x10750: jz 0x1059a
0x10756: lea rsi,[rip+0x11ff0]
0x1075d: mov rdi,r15
0x10760: mov byte ptr [rsp+0x8],dl
0x10764: call 0x26d0
0x10769: test eax,eax
0x1076b: movzx edx,byte ptr [rsp+0x8]
0x10770: jz 0x1059a
0x10776: lea rsi,[rip+0x11fd7]
0x1077d: mov rdi,r15
0x10780: call 0x26d0
0x10785: test eax,eax
0x10787: setz dl
0x1078a: jmp 0x1059a
0x1078f: nop 
0x10790: cmp [r8],0x2f
0x10794: jz 0x10ac0
0x1079a: lea rsi,[rip+0x11fc3]
0x107a1: mov ecx,0x7
0x107a6: mov rdi,r8
0x107a9: rep cmpsb ds:[rsi],es:[rdi]
0x107ab: setnbe al
0x107ae: sbb al,0x0
0x107b0: test al,al
0x107b2: setz dl
0x107b5: jmp 0x105ce
0x107ba: nop qword ptr [rax+rax*1+0x0]
0x10a91: nop qword ptr [rax+0x0]
0x10abe: nop 
0x10ac0: cmp [r8+0x1],0x2f
0x10ac5: jnz 0x1079a
0x10acb: lea rdi,[rip+0x11c87]
0x10ad2: mov ecx,0x6
0x10ad7: mov rsi,r15
0x10ada: rep cmpsb ds:[rsi],es:[rdi]
0x10adc: setnbe al
0x10adf: sbb al,0x0
0x10ae1: test al,al
0x10ae3: jz 0x105ce
0x10ae9: lea rdi,[rip+0x11c6f]
0x10af0: mov ecx,0x5
0x10af5: mov rsi,r15
0x10af8: rep cmpsb ds:[rsi],es:[rdi]
0x10afa: setnbe al
0x10afd: sbb al,0x0
0x10aff: test al,al
0x10b01: jz 0x105ce
0x10b07: jmp 0x1079a
0x10b0c: nop qword ptr [rax+0x0]
0x10b58: nop qword ptr [rax+rax*1+0x0]
0x10b90: mov rax,qword ptr [rsi+0x48]
0x10b94: cmp qword ptr [rsi+0x68],rax
0x10b98: jle 0x10bf0
0x10b9a: mov r8,qword ptr [rsi+0x8]
0x10b9e: cmp [rsi+0x90],0x1
0x10ba5: movzx ecx,byte ptr [r8+rax*1+0x0]
0x10baa: mov byte ptr [rdi],cl
0x10bac: jle 0x10bc3
0x10bae: cmp rax,qword ptr [rsi+0x30]
0x10bb2: jz 0x10bc3
0x10bb4: mov r9,qword ptr [rsi+0x10]
0x10bb8: cmp [r9+rax*4+0x0],0xff
0x10bbd: jz 0x10c3f
0x10bc3: cmp cl,0x5c
0x10bc6: jz 0x10c30
0x10bc8: cmp cl,0x5b
0x10bcb: jz 0x10c00
0x10bcd: cmp cl,0x5d
0x10bd0: jz 0x10c70
0x10bd6: cmp cl,0x5e
0x10bd9: jz 0x10c60
0x10bdf: cmp cl,0x2d
0x10be2: jnz 0x10c3f
0x10be4: mov [rdi+0x8],0x16
0x10be8: mov eax,0x1
0x10bed: ret
0x10bee: nop 
0x10bf0: mov [rdi+0x8],0x2
0x10bf4: xor eax,eax
0x10bf6: ret
0x10bf7: nop qword ptr [rax+rax*1+0x0]
0x10c00: lea rcx,[rax+0x1]
0x10c04: cmp rcx,qword ptr [rsi+0x58]
0x10c08: jnl 0x10c50
0x10c0a: movzx eax,byte ptr [r8+rax*1+0x1]
0x10c10: cmp al,0x3a
0x10c12: mov byte ptr [rdi],al
0x10c14: jz 0x10cb0
0x10c1a: cmp al,0x3d
0x10c1c: jz 0x10ca0
0x10c22: cmp al,0x2e
0x10c24: jnz 0x10c50
0x10c26: mov [rdi+0x8],0x1a
0x10c2a: mov eax,0x2
0x10c2f: ret
0x10c30: and edx,0x1
0x10c33: jz 0x10c3f
0x10c35: lea rdx,[rax+0x1]
0x10c39: cmp rdx,qword ptr [rsi+0x58]
0x10c3d: jl 0x10c80
0x10c3f: mov [rdi+0x8],0x1
0x10c43: mov eax,0x1
0x10c48: ret
0x10c49: nop qword ptr [rax+0x0]
0x10c50: mov [rdi+0x8],0x1
0x10c54: mov [rdi],0x5b
0x10c57: mov eax,0x1
0x10c5c: ret
0x10c5d: nop qword ptr [rax]
0x10c60: mov [rdi+0x8],0x19
0x10c64: mov eax,0x1
0x10c69: ret
0x10c6a: nop qword ptr [rax+rax*1+0x0]
0x10c70: mov [rdi+0x8],0x15
0x10c74: mov eax,0x1
0x10c79: ret
0x10c7a: nop qword ptr [rax+rax*1+0x0]
0x10c80: mov qword ptr [rsi+0x48],rdx
0x10c84: movzx eax,byte ptr [r8+rax*1+0x1]
0x10c8a: mov [rdi+0x8],0x1
0x10c8e: mov byte ptr [rdi],al
0x10c90: mov eax,0x1
0x10c95: ret
0x10c96: nop qword ptr [rax+rax*1+0x0]
0x10ca0: mov [rdi+0x8],0x1c
0x10ca4: mov eax,0x2
0x10ca9: ret
0x10caa: nop qword ptr [rax+rax*1+0x0]
0x10cb0: and edx,0x4
0x10cb3: jz 0x10c50
0x10cb5: mov [rdi+0x8],0x1e
0x10cb9: mov eax,0x2
0x10cbe: ret
0x10cc0: cmp [rsi+0x30],0x11
0x10cc4: jz 0x10cd0
0x10cc6: xor eax,eax
0x10cc8: ret
0x10cc9: nop qword ptr [rax+0x0]
0x10cd0: cmp rdi,qword ptr [rsi+0x28]
0x10cd4: jnz 0x10cc6
0x10cd6: or [rsi+0x32],0x8
0x10cda: xor eax,eax
0x10cdc: ret
0x10d63: nop qword ptr [rax+rax*1+0x0]
0x10dc2: nop qword ptr [rax+rax*1+0x0]
0x10eb9: nop qword ptr [rax+0x0]
0x10ee6: nop qword ptr [rax+rax*1+0x0]
0x10f4b: nop qword ptr [rax+rax*1+0x0]
0x10f56: nop qword ptr [rax+rax*1+0x0]
0x10f6d: nop qword ptr [rax]
0x10f80: push r12
0x10f82: mov r12,rsi
0x10f85: push rbp
0x10f86: mov rbp,rdx
0x10f89: push rbx
0x10f8a: mov rbx,rdi
0x10f8d: jmp 0x10f93
0x10f8f: nop 
0x10f90: mov rbx,rax
0x10f93: mov rax,qword ptr [rbx+0x8]
0x10f97: test rax,rax
0x10f9a: jnz 0x10f90
0x10f9c: mov rax,qword ptr [rbx+0x10]
0x10fa0: test rax,rax
0x10fa3: jnz 0x10f90
0x10fa5: mov rsi,rbx
0x10fa8: mov rdi,rbp
0x10fab: call r12
0x10fae: test eax,eax
0x10fb0: jnz 0x10fe6
0x10fb2: nop qword ptr [rax+rax*1+0x0]
0x10fb8: mov rdx,qword ptr [rbx]
0x10fbb: test rdx,rdx
0x10fbe: jz 0x10fe6
0x10fc0: mov rax,qword ptr [rdx+0x10]
0x10fc4: cmp rax,rbx
0x10fc7: mov rbx,rdx
0x10fca: setz sil
0x10fce: test rax,rax
0x10fd1: setz cl
0x10fd4: or sil,cl
0x10fd7: jz 0x10f90
0x10fd9: mov rsi,rbx
0x10fdc: mov rdi,rbp
0x10fdf: call r12
0x10fe2: test eax,eax
0x10fe4: jz 0x10fb8
0x10fe6: pop rbx
0x10fe7: pop rbp
0x10fe8: pop r12
0x10fea: ret
0x10ff0: push r12
0x10ff2: mov r12,rsi
0x10ff5: push rbp
0x10ff6: mov rbp,rdx
0x10ff9: push rbx
0x10ffa: mov rbx,rdi
0x10ffd: jmp 0x11003
0x10fff: nop 
0x11000: mov rbx,rdx
0x11003: mov rsi,rbx
0x11006: mov rdi,rbp
0x11009: call r12
0x1100c: test eax,eax
0x1100e: jnz 0x1103c
0x11010: mov rdx,qword ptr [rbx+0x8]
0x11014: xor ecx,ecx
0x11016: test rdx,rdx
0x11019: jnz 0x11000
0x1101b: jmp 0x11023
0x1101d: nop qword ptr [rax]
0x11020: mov rbx,rdx
0x11023: mov rdx,qword ptr [rbx+0x10]
0x11027: cmp rdx,rcx
0x1102a: jz 0x11031
0x1102c: test rdx,rdx
0x1102f: jnz 0x11000
0x11031: mov rdx,qword ptr [rbx]
0x11034: mov rcx,rbx
0x11037: test rdx,rdx
0x1103a: jnz 0x11020
0x1103c: pop rbx
0x1103d: pop rbp
0x1103e: pop r12
0x11040: ret
0x110c3: nop qword ptr [rax+rax*1+0x0]
0x110df: nop 
0x11121: nop qword ptr [rax+0x0]
0x1114e: nop 
0x11150: xor eax,eax
0x11152: jmp 0x1111a
0x11195: nop qword ptr [rax]
0x111cd: nop qword ptr [rax]
0x11216: nop qword ptr [rax+rax*1+0x0]
0x11244: nop qword ptr [rax+0x0]
0x11248: mov [rbx+0x8],0x0
0x11250: mov [rbx],0x0
0x11257: jmp 0x1118e
0x1125c: nop qword ptr [rax+0x0]
0x11285: xor eax,eax
0x11287: jmp 0x1118e
0x112d7: nop qword ptr [rax+rax*1+0x0]
0x1131c: nop qword ptr [rax+0x0]
0x113e2: nop qword ptr [rax+rax*1+0x0]
0x114df: nop 
0x114ee: nop 
0x1152c: nop qword ptr [rax+0x0]
0x11546: nop qword ptr [rax+rax*1+0x0]
0x11592: nop qword ptr [rax+rax*1+0x0]
0x115ae: call 0x2560
0x11648: nop qword ptr [rax+rax*1+0x0]
0x11787: nop qword ptr [rax+rax*1+0x0]
0x118c5: nop qword ptr [rax]
0x118e3: nop qword ptr [rax+rax*1+0x0]
0x11913: nop qword ptr [rax+rax*1+0x0]
0x11947: nop qword ptr [rax+rax*1+0x0]
0x119d5: nop qword ptr [rax]
0x11ba6: mov eax,0xc
0x11bab: jmp 0x1161f
0x11c7a: nop qword ptr [rax+rax*1+0x0]
0x11ca6: nop qword ptr [rax+rax*1+0x0]
0x11ce6: nop qword ptr [rax+rax*1+0x0]
0x11d01: nop qword ptr [rax+0x0]
0x11d16: nop qword ptr [rax+rax*1+0x0]
0x11d6b: nop qword ptr [rax+rax*1+0x0]
0x11dc0: push rbx
0x11dc1: mov rbx,rdi
0x11dc4: mov rdi,qword ptr [rdi]
0x11dc7: call 0x2a10
0x11dcc: mov rdi,qword ptr [rbx+0x8]
0x11dd0: call 0x2a10
0x11dd5: mov rdi,qword ptr [rbx+0x10]
0x11dd9: call 0x2a10
0x11dde: mov rdi,qword ptr [rbx+0x18]
0x11de2: call 0x2a10
0x11de7: mov rdi,rbx
0x11dea: pop rbx
0x11deb: jmp 0x2a10
0x11df0: mov eax,dword ptr [rdi+0x8]
0x11df3: and eax,0x400ff
0x11df8: cmp eax,0x6
0x11dfb: jz 0x11e10
0x11dfd: cmp eax,0x3
0x11e00: jz 0x11e08
0x11e02: rep ret
0x11e04: nop qword ptr [rax+0x0]
0x11e08: mov rdi,qword ptr [rdi]
0x11e0b: jmp 0x2a10
0x11e10: mov rdi,qword ptr [rdi]
0x11e13: jmp 0x11dc0
0x11e20: lea rdi,[rsi+0x28]
0x11e24: sub rsp,0x8
0x11e28: call 0x11df0
0x11e2d: xor eax,eax
0x11e2f: add rsp,0x8
0x11e33: ret
0x11e40: push r15
0x11e42: push r14
0x11e44: mov r14,rsi
0x11e47: push r13
0x11e49: push r12
0x11e4b: push rbp
0x11e4c: push rbx
0x11e4d: mov rbx,rdi
0x11e50: sub rsp,0x18
0x11e54: mov rsi,qword ptr [rdi+0x10]
0x11e58: mov rbp,qword ptr [rdi+0x8]
0x11e5c: cmp rsi,rbp
0x11e5f: jnb 0x11f10
0x11e65: mov r12,qword ptr [rdi+0x18]
0x11e69: mov rbp,qword ptr [rdi+0x28]
0x11e6d: mov rax,rsi
0x11e70: mov ecx,edx
0x11e72: shl rax,0x4
0x11e76: add rax,qword ptr [rbx]
0x11e79: and ecx,0xfffc00ff
0x11e7f: mov qword ptr [rax+0x8],rdx
0x11e83: mov dword ptr [rax+0x8],ecx
0x11e86: xor ecx,ecx
0x11e88: cmp dl,0x6
0x11e8b: mov qword ptr [rax],r14
0x11e8e: setz cl
0x11e91: cmp dl,0x5
0x11e94: jnz 0x11ea2
0x11e96: xor ecx,ecx
0x11e98: cmp [rbx+0xb4],0x1
0x11e9f: setnle cl
0x11ea2: movzx edx,byte ptr [rax+0xa]
0x11ea6: shl ecx,0x4
0x11ea9: pxor xmm0,xmm0
0x11ead: and edx,0xef
0x11eb0: or edx,ecx
0x11eb2: mov byte ptr [rax+0xa],dl
0x11eb5: mov [r12+rsi*8+0x0],0xffffffff
0x11ebd: mov rax,qword ptr [rbx+0x10]
0x11ec1: lea rax,[rax+rax*2+0x0]
0x11ec5: lea rax,[rbp+rax*8+0x0]
0x11eca: movups [rax],xmm0
0x11ecd: mov [rax+0x10],0x0
0x11ed5: mov rax,qword ptr [rbx+0x10]
0x11ed9: lea rdx,[rax+rax*2+0x0]
0x11edd: mov rax,qword ptr [rbx+0x30]
0x11ee1: lea rax,[rax+rdx*8+0x0]
0x11ee5: movups [rax],xmm0
0x11ee8: mov [rax+0x10],0x0
0x11ef0: mov rax,qword ptr [rbx+0x10]
0x11ef4: lea rdx,[rax+0x1]
0x11ef8: mov qword ptr [rbx+0x10],rdx
0x11efc: add rsp,0x18
0x11f00: pop rbx
0x11f01: pop rbp
0x11f02: pop r12
0x11f04: pop r13
0x11f06: pop r14
0x11f08: pop r15
0x11f0a: ret
0x11f0b: nop qword ptr [rax+rax*1+0x0]
0x11f10: lea r13,[rbp+rbp*1+0x0]
0x11f15: mov rax,0x768614336404564650
0x11f1f: cmp r13,rax
0x11f22: jnbe 0x12002
0x11f28: mov rdi,qword ptr [rdi]
0x11f2b: mov rsi,rbp
0x11f2e: mov qword ptr [rsp+0x8],rdx
0x11f33: shl rsi,0x5
0x11f37: call 0x2830
0x11f3c: test rax,rax
0x11f3f: jz 0x12002
0x11f45: mov r15,rbp
0x11f48: mov rdi,qword ptr [rbx+0x18]
0x11f4c: mov qword ptr [rbx],rax
0x11f4f: shl r15,0x4
0x11f53: mov rsi,r15
0x11f56: call 0x2830
0x11f5b: mov rdi,qword ptr [rbx+0x20]
0x11f5f: mov rsi,r15
0x11f62: lea r15,[r13+rbp*4+0x0]
0x11f67: mov r12,rax
0x11f6a: shl r15,0x3
0x11f6e: call 0x2830
0x11f73: mov rdi,qword ptr [rbx+0x28]
0x11f77: mov rsi,r15
0x11f7a: mov qword ptr [rsp],rax
0x11f7e: call 0x2830
0x11f83: mov rdi,qword ptr [rbx+0x30]
0x11f87: mov rsi,r15
0x11f8a: mov rbp,rax
0x11f8d: call 0x2830
0x11f92: test r12,r12
0x11f95: mov rcx,qword ptr [rsp]
0x11f99: jz 0x11fd0
0x11f9b: test rcx,rcx
0x11f9e: jz 0x11fd0
0x11fa0: test rbp,rbp
0x11fa3: jz 0x11fd0
0x11fa5: test rax,rax
0x11fa8: mov rdx,qword ptr [rsp+0x8]
0x11fad: jz 0x11fd0
0x11faf: mov qword ptr [rbx+0x18],r12
0x11fb3: mov qword ptr [rbx+0x20],rcx
0x11fb7: mov qword ptr [rbx+0x28],rbp
0x11fbb: mov qword ptr [rbx+0x30],rax
0x11fbf: mov qword ptr [rbx+0x8],r13
0x11fc3: mov rsi,qword ptr [rbx+0x10]
0x11fc7: jmp 0x11e6d
0x11fcc: nop qword ptr [rax+0x0]
0x11fd0: mov rdi,r12
0x11fd3: mov qword ptr [rsp+0x8],rax
0x11fd8: mov qword ptr [rsp],rcx
0x11fdc: call 0x2a10
0x11fe1: mov rcx,qword ptr [rsp]
0x11fe5: mov rdi,rcx
0x11fe8: call 0x2a10
0x11fed: mov rdi,rbp
0x11ff0: call 0x2a10
0x11ff5: mov rax,qword ptr [rsp+0x8]
0x11ffa: mov rdi,rax
0x11ffd: call 0x2a10
0x12002: mov rax,0xffffffff
0x12009: jmp 0x11efc
0x12010: push r13
0x12012: push r12
0x12014: mov r13,rsi
0x12017: push rbp
0x12018: push rbx
0x12019: shl r13,0x4
0x1201d: mov rbp,rsi
0x12020: mov r12d,edx
0x12023: mov rbx,rdi
0x12026: sub rsp,0x8
0x1202a: mov rax,qword ptr [rdi]
0x1202d: mov rsi,qword ptr [rax+r13*1+0x0]
0x12031: mov rdx,qword ptr [rax+r13*1+0x8]
0x12036: call 0x11e40
0x1203b: cmp rax,0xffffffff
0x1203f: jz 0x120a4
0x12041: mov edi,r12d
0x12044: mov r8,qword ptr [rbx]
0x12047: mov rsi,rax
0x1204a: and di,0x3ff
0x1204f: shl rsi,0x4
0x12053: mov ecx,edi
0x12055: and ecx,0x3ff
0x1205b: add rsi,r8
0x1205e: shl ecx,0x8
0x12061: mov edx,ecx
0x12063: mov ecx,dword ptr [rsi+0x8]
0x12066: and ecx,0xfffc00ff
0x1206c: or ecx,edx
0x1206e: mov dword ptr [rsi+0x8],ecx
0x12071: mov edx,dword ptr [r8+r13*1+0x8]
0x12076: and ecx,0xfffc00ff
0x1207c: shr edx,0x8
0x1207f: or edx,edi
0x12081: and edx,0x3ff
0x12087: shl edx,0x8
0x1208a: or edx,ecx
0x1208c: mov ecx,edx
0x1208e: mov dword ptr [rsi+0x8],edx
0x12091: shr ecx,0x10
0x12094: mov edx,ecx
0x12096: or edx,0x4
0x12099: mov byte ptr [rsi+0xa],dl
0x1209c: mov rdx,qword ptr [rbx+0x20]
0x120a0: mov qword ptr [rdx+rax*8+0x0],rbp
0x120a4: add rsp,0x8
0x120a8: pop rbx
0x120a9: pop rbp
0x120aa: pop r12
0x120ac: pop r13
0x120ae: ret
0x120b0: push r15
0x120b2: push r14
0x120b4: mov r9,rsi
0x120b7: push r13
0x120b9: push r12
0x120bb: mov r14,rdi
0x120be: push rbp
0x120bf: push rbx
0x120c0: mov r13,rdx
0x120c3: mov ebp,r8d
0x120c6: sub rsp,0x18
0x120ca: mov qword ptr [rsp+0x8],rcx
0x120cf: mov r8,qword ptr [r14]
0x120d2: mov rax,r9
0x120d5: mov rdi,qword ptr [r14+0x28]
0x120d9: shl rax,0x4
0x120dd: mov r12,r13
0x120e0: add rax,r8
0x120e3: cmp [rax+0x8],0x4
0x120e7: jz 0x122a0
0x120ed: lea r12,[r9+r9*2+0x0]
0x120f1: shl r12,0x3
0x120f5: lea rsi,[rdi+r12*1+0x0]
0x120f9: mov rcx,qword ptr [rsi+0x8]
0x120fd: test rcx,rcx
0x12100: jz 0x122f9
0x12106: lea rbx,[r13+r13*2+0x0]
0x1210b: mov rsi,qword ptr [rsi+0x10]
0x1210f: shl rbx,0x3
0x12113: add rdi,rbx
0x12116: cmp rcx,0x1
0x1211a: mov r15,qword ptr [rsi]
0x1211d: mov [rdi+0x8],0x0
0x12125: jz 0x12240
0x1212b: mov rdx,qword ptr [r14+0x10]
0x1212f: lea rsi,[rdx-0x1]
0x12133: mov rax,rsi
0x12136: shl rax,0x4
0x1213a: add rax,r8
0x1213d: test [rax+0xa],0x4
0x12141: jz 0x121f0
0x12147: test rsi,rsi
0x1214a: jle 0x121f0
0x12150: shl rdx,0x4
0x12154: sub r8,rax
0x12157: mov rcx,qword ptr [r14+0x20]
0x1215b: lea r8,[r8+rdx*1-0x20]
0x12160: jmp 0x1217a
0x12162: nop qword ptr [rax+rax*1+0x0]
0x12168: add rax,r8
0x1216b: sub rsi,0x1
0x1216f: test [rax+0xa],0x4
0x12173: jz 0x121f0
0x12175: test rsi,rsi
0x12178: jle 0x121f0
0x1217a: cmp qword ptr [rcx+rsi*8+0x0],r15
0x1217e: jnz 0x12168
0x12180: mov edx,dword ptr [rax+0x8]
0x12183: shr edx,0x8
0x12186: and edx,0x3ff
0x1218c: cmp ebp,edx
0x1218e: jnz 0x12168
0x12190: call 0x11160
0x12195: test al,al
0x12197: jz 0x121db
0x12199: mov rax,qword ptr [r14+0x28]
0x1219d: mov edx,ebp
0x1219f: mov rdi,r14
0x121a2: mov rax,qword ptr [rax+r12*1+0x10]
0x121a7: mov r9,qword ptr [rax+0x8]
0x121ab: mov rsi,r9
0x121ae: mov qword ptr [rsp],r9
0x121b2: call 0x12010
0x121b7: cmp rax,0xffffffff
0x121bb: mov r13,rax
0x121be: jz 0x121db
0x121c0: add rbx,qword ptr [r14+0x28]
0x121c4: mov rsi,r13
0x121c7: mov rdi,rbx
0x121ca: call 0x11160
0x121cf: test al,al
0x121d1: mov r9,qword ptr [rsp]
0x121d5: jnz 0x120cf
0x121db: mov eax,0xc
0x121e0: add rsp,0x18
0x121e4: pop rbx
0x121e5: pop rbp
0x121e6: pop r12
0x121e8: pop r13
0x121ea: pop r14
0x121ec: pop r15
0x121ee: ret
0x121ef: nop 
0x121f0: mov edx,ebp
0x121f2: mov rsi,r15
0x121f5: mov rdi,r14
0x121f8: call 0x12010
0x121fd: cmp rax,0xffffffff
0x12201: mov r13,rax
0x12204: jz 0x121db
0x12206: mov rdi,qword ptr [r14+0x28]
0x1220a: mov rsi,r13
0x1220d: add rdi,rbx
0x12210: call 0x11160
0x12215: test al,al
0x12217: jz 0x121db
0x12219: mov rcx,qword ptr [rsp+0x8]
0x1221e: mov r8d,ebp
0x12221: mov rdx,r13
0x12224: mov rsi,r15
0x12227: mov rdi,r14
0x1222a: call 0x120b0
0x1222f: test eax,eax
0x12231: jz 0x12199
0x12237: jmp 0x121e0
0x12239: nop qword ptr [rax+0x0]
0x12240: cmp r9,qword ptr [rsp+0x8]
0x12245: jnz 0x12250
0x12247: cmp r9,r13
0x1224a: jnz 0x1230c
0x12250: mov eax,dword ptr [rax+0x8]
0x12253: mov rsi,r15
0x12256: mov rdi,r14
0x12259: shr eax,0x8
0x1225c: and eax,0x3ff
0x12261: or ebp,eax
0x12263: mov edx,ebp
0x12265: call 0x12010
0x1226a: cmp rax,0xffffffff
0x1226e: mov r13,rax
0x12271: jz 0x121db
0x12277: add rbx,qword ptr [r14+0x28]
0x1227b: mov rsi,rax
0x1227e: mov rdi,rbx
0x12281: call 0x11160
0x12286: test al,al
0x12288: jz 0x121db
0x1228e: mov r9,r15
0x12291: jmp 0x120cf
0x12296: nop qword ptr [rax+rax*1+0x0]
0x122a0: mov rax,qword ptr [r14+0x18]
0x122a4: lea rbx,[r13+r13*2+0x0]
0x122a9: lea r15,[r9*8+0x0]
0x122b1: mov edx,ebp
0x122b3: shl rbx,0x3
0x122b7: mov r9,qword ptr [rax+r9*8+0x0]
0x122bb: mov [rdi+rbx*1+0x8],0x0
0x122c4: mov rdi,r14
0x122c7: mov rsi,r9
0x122ca: mov qword ptr [rsp],r9
0x122ce: call 0x12010
0x122d3: cmp rax,0xffffffff
0x122d7: mov r13,rax
0x122da: mov r9,qword ptr [rsp]
0x122de: jz 0x121db
0x122e4: mov rax,qword ptr [r14+0x18]
0x122e8: mov qword ptr [rsp],r9
0x122ec: mov rcx,qword ptr [rax+r15*1+0x0]
0x122f0: mov qword ptr [rax+r12*8+0x0],rcx
0x122f4: jmp 0x121c0
0x122f9: mov rax,qword ptr [r14+0x18]
0x122fd: mov rcx,qword ptr [rax+r9*8+0x0]
0x12301: mov qword ptr [rax+r13*8+0x0],rcx
0x12305: xor eax,eax
0x12307: jmp 0x121e0
0x1230c: mov rsi,r15
0x1230f: call 0x11160
0x12314: mov edx,eax
0x12316: xor eax,eax
0x12318: test dl,dl
0x1231a: jnz 0x121e0
0x12320: jmp 0x121db
0x123b1: nop qword ptr [rax+0x0]
0x123d0: push r14
0x123d2: push r13
0x123d4: push r12
0x123d6: mov r12,rdi
0x123d9: push rbp
0x123da: push rbx
0x123db: mov rdi,qword ptr [rdi]
0x123de: test rdi,rdi
0x123e1: jz 0x1240e
0x123e3: cmp [r12+0x10],0x0
0x123e9: jz 0x1240e
0x123eb: xor ebx,ebx
0x123ed: jmp 0x123f4
0x123ef: nop 
0x123f0: mov rdi,qword ptr [r12]
0x123f4: mov rax,rbx
0x123f7: add rbx,0x1
0x123fb: shl rax,0x4
0x123ff: add rdi,rax
0x12402: call 0x11df0
0x12407: cmp qword ptr [r12+0x10],rbx
0x1240c: jnbe 0x123f0
0x1240e: mov rdi,qword ptr [r12+0x18]
0x12413: call 0x2a10
0x12418: cmp [r12+0x10],0x0
0x1241e: jz 0x12473
0x12420: xor ebx,ebx
0x12422: xor ebp,ebp
0x12424: nop qword ptr [rax+0x0]
0x12428: mov rax,qword ptr [r12+0x30]
0x1242d: test rax,rax
0x12430: jz 0x1243c
0x12432: mov rdi,qword ptr [rax+rbx*1+0x10]
0x12437: call 0x2a10
0x1243c: mov rax,qword ptr [r12+0x38]
0x12441: test rax,rax
0x12444: jz 0x12450
0x12446: mov rdi,qword ptr [rax+rbx*1+0x10]
0x1244b: call 0x2a10
0x12450: mov rax,qword ptr [r12+0x28]
0x12455: test rax,rax
0x12458: jz 0x12464
0x1245a: mov rdi,qword ptr [rax+rbx*1+0x10]
0x1245f: call 0x2a10
0x12464: add rbp,0x1
0x12468: add rbx,0x18
0x1246c: cmp qword ptr [r12+0x10],rbp
0x12471: jnbe 0x12428
0x12473: mov rdi,qword ptr [r12+0x28]
0x12478: call 0x2a10
0x1247d: mov rdi,qword ptr [r12+0x30]
0x12482: call 0x2a10
0x12487: mov rdi,qword ptr [r12+0x38]
0x1248c: call 0x2a10
0x12491: mov rdi,qword ptr [r12]
0x12495: call 0x2a10
0x1249a: mov rdi,qword ptr [r12+0x40]
0x1249f: test rdi,rdi
0x124a2: jz 0x124f7
0x124a4: xor r14d,r14d
0x124a7: xor r13d,r13d
0x124aa: nop qword ptr [rax+rax*1+0x0]
0x124b0: lea rbp,[rdi+r14*1+0x0]
0x124b4: cmp [rbp+0x0],0x0
0x124b9: jle 0x124d7
0x124bb: xor ebx,ebx
0x124bd: nop qword ptr [rax]
0x124c0: mov rax,qword ptr [rbp+0x10]
0x124c4: mov rdi,qword ptr [rax+rbx*8+0x0]
0x124c8: add rbx,0x1
0x124cc: call 0x12330
0x124d1: cmp qword ptr [rbp+0x0],rbx
0x124d5: jnle 0x124c0
0x124d7: mov rdi,qword ptr [rbp+0x10]
0x124db: add r13,0x1
0x124df: add r14,0x18
0x124e3: call 0x2a10
0x124e8: cmp qword ptr [r12+0x88],r13
0x124f0: mov rdi,qword ptr [r12+0x40]
0x124f5: jnb 0x124b0
0x124f7: call 0x2a10
0x124fc: mov rdi,qword ptr [r12+0x78]
0x12501: lea rax,[rip+0x108b8]
0x12508: cmp rdi,rax
0x1250b: jz 0x12512
0x1250d: call 0x2a10
0x12512: mov rdi,qword ptr [r12+0xe0]
0x1251a: call 0x2a10
0x1251f: pop rbx
0x12520: mov rdi,r12
0x12523: pop rbp
0x12524: pop r12
0x12526: pop r13
0x12528: pop r14
0x1252a: jmp 0x2a10
0x1261e: nop 
0x12634: nop qword ptr [rax+0x0]
0x1264e: nop 
0x1265e: nop 
0x12688: nop qword ptr [rax+rax*1+0x0]
0x126c4: nop qword ptr [rax+0x0]
0x126e7: nop qword ptr [rax+rax*1+0x0]
0x12709: nop qword ptr [rax+0x0]
0x127a5: nop qword ptr [rax]
0x127d1: nop qword ptr [rax+0x0]
0x127ec: nop qword ptr [rax+0x0]
0x12860: movzx eax,byte ptr [rsi+0x30]
0x12864: cmp al,0x4
0x12866: jz 0x128c0
0x12868: cmp al,0x11
0x1286a: jz 0x12870
0x1286c: xor eax,eax
0x1286e: ret
0x1286f: nop 
0x12870: mov rax,qword ptr [rsi+0x8]
0x12874: test rax,rax
0x12877: jz 0x1286c
0x12879: cmp [rax+0x30],0x11
0x1287d: jnz 0x1286c
0x1287f: mov rcx,qword ptr [rax+0x28]
0x12883: mov rax,qword ptr [rax+0x8]
0x12887: test rax,rax
0x1288a: mov qword ptr [rsi+0x8],rax
0x1288e: jz 0x12893
0x12890: mov qword ptr [rax],rsi
0x12893: mov rax,qword ptr [rdi+0xe0]
0x1289a: mov rdx,qword ptr [rsi+0x28]
0x1289e: cmp rcx,0x3f
0x128a2: mov rdx,qword ptr [rax+rdx*8+0x0]
0x128a6: mov qword ptr [rax+rcx*8+0x0],rdx
0x128aa: jnle 0x1286c
0x128ac: mov rax,0xfffffffe
0x128b3: rol rax,cl
0x128b6: and qword ptr [rdi+0xa0],rax
0x128bd: jmp 0x1286c
0x128bf: nop 
0x128c0: mov rax,qword ptr [rdi+0xe0]
0x128c7: test rax,rax
0x128ca: jz 0x1286c
0x128cc: movsxd rdx,dword ptr [rsi+0x28]
0x128d0: mov rcx,qword ptr [rax+rdx*8+0x0]
0x128d4: mov eax,0x1
0x128d9: shl eax,cl
0x128db: mov qword ptr [rsi+0x28],rcx
0x128df: cwde 
0x128e1: or qword ptr [rdi+0xa0],rax
0x128e8: xor eax,eax
0x128ea: ret
0x128f0: movzx eax,byte ptr [rsi+0x30]
0x128f4: mov rdx,qword ptr [rsi+0x8]
0x128f8: cmp al,0xb
0x128fa: jz 0x12940
0x128fc: cmp al,0x10
0x128fe: jz 0x12928
0x12900: test rdx,rdx
0x12903: jz 0x1290d
0x12905: mov rax,qword ptr [rsi+0x20]
0x12909: mov qword ptr [rdx+0x20],rax
0x1290d: mov rax,qword ptr [rsi+0x10]
0x12911: test rax,rax
0x12914: jz 0x1291e
0x12916: mov rdx,qword ptr [rsi+0x20]
0x1291a: mov qword ptr [rax+0x20],rdx
0x1291e: xor eax,eax
0x12920: ret
0x12921: nop qword ptr [rax+0x0]
0x12928: mov rax,qword ptr [rsi+0x10]
0x1292c: mov rcx,qword ptr [rax+0x18]
0x12930: mov qword ptr [rdx+0x20],rcx
0x12934: mov rdx,qword ptr [rsi+0x20]
0x12938: mov qword ptr [rax+0x20],rdx
0x1293c: xor eax,eax
0x1293e: ret
0x1293f: nop 
0x12940: mov qword ptr [rdx+0x20],rsi
0x12944: xor eax,eax
0x12946: ret
0x129ab: nop qword ptr [rax+rax*1+0x0]
0x12a35: nop qword ptr [rax]
0x12b3d: nop qword ptr [rax]
0x12b5c: nop qword ptr [rax+0x0]
0x12b7c: nop qword ptr [rax+0x0]
0x12b8c: nop qword ptr [rax+0x0]
0x12b9c: nop qword ptr [rax+0x0]
0x12cb1: nop qword ptr [rax+0x0]
0x12cbb: nop qword ptr [rax+rax*1+0x0]
0x12cd3: nop qword ptr [rax+rax*1+0x0]
0x12ce1: nop qword ptr [rax+0x0]
0x12d0a: nop qword ptr [rax+rax*1+0x0]
0x12d31: nop qword ptr [rax+0x0]
0x12d69: nop qword ptr [rax+0x0]
0x12d94: mov eax,0xc
0x12d99: jmp 0x12cac
0x12da0: push r15
0x12da2: push r14
0x12da4: mov r15,rsi
0x12da7: push r13
0x12da9: push r12
0x12dab: push rbp
0x12dac: push rbx
0x12dad: lea rbx,[rdx+rdx*2+0x0]
0x12db1: mov rbp,rdx
0x12db4: sub rsp,0x68
0x12db8: mov r12,qword ptr [rsi+0x28]
0x12dbc: shl rbx,0x3
0x12dc0: mov rax,0x28
0x12dc9: mov qword ptr [rsp+0x58],rax
0x12dce: xor eax,eax
0x12dd0: mov qword ptr [rsp+0x10],rdi
0x12dd5: mov dword ptr [rsp+0x1c],ecx
0x12dd9: add r12,rbx
0x12ddc: mov rax,qword ptr [r12+0x8]
0x12de1: mov [rsp+0x28],0x0
0x12dea: lea rdi,[rax+0x1]
0x12dee: mov qword ptr [rsp+0x20],rdi
0x12df3: shl rdi,0x3
0x12df7: call 0x2780
0x12dfc: test rax,rax
0x12dff: mov qword ptr [rsp+0x30],rax
0x12e04: jz 0x13040
0x12e0a: mov rax,qword ptr [r15+0x30]
0x12e0e: mov rdx,qword ptr [r15]
0x12e11: mov r13,rbp
0x12e14: shl r13,0x4
0x12e18: mov [rax+rbx*1+0x8],0xffffffff
0x12e21: lea rax,[rdx+r13*1+0x0]
0x12e25: mov r8d,dword ptr [rax+0x8]
0x12e29: test r8d,0x3ff00
0x12e30: jnz 0x12fd0
0x12e36: test [rax+0x8],0x8
0x12e3a: jz 0x12f00
0x12e40: mov rsi,qword ptr [r15+0x28]
0x12e44: lea rax,[rsi+rbx*1+0x0]
0x12e48: cmp [rax+0x8],0x0
0x12e4d: jle 0x12f00
0x12e53: lea rdx,[rsp+0x20]
0x12e58: mov [rsp+0x1b],0x0
0x12e5d: xor r14d,r14d
0x12e60: lea r12,[rsp+0x40]
0x12e65: mov qword ptr [rsp+0x8],rdx
0x12e6a: jmp 0x12e86
0x12e6c: nop qword ptr [rax+0x0]
0x12e70: mov rsi,qword ptr [r15+0x28]
0x12e74: add r14,0x1
0x12e78: lea rax,[rsi+rbx*1+0x0]
0x12e7c: cmp qword ptr [rax+0x8],r14
0x12e80: jle 0x12f87
0x12e86: mov rax,qword ptr [rax+0x10]
0x12e8a: mov rdx,qword ptr [rax+r14*8+0x0]
0x12e8e: mov rax,qword ptr [r15+0x30]
0x12e92: lea r8,[rdx+rdx*2+0x0]
0x12e96: lea r13,[r8*8+0x0]
0x12e9e: add rax,r13
0x12ea1: mov rcx,qword ptr [rax+0x8]
0x12ea5: cmp rcx,0xffffffff
0x12ea9: jz 0x12f70
0x12eaf: test rcx,rcx
0x12eb2: jz 0x13028
0x12eb8: movdqu xmm0,[rax]
0x12ebc: movaps [rsp+0x40],xmm0
0x12ec1: mov rax,qword ptr [rax+0x10]
0x12ec5: mov qword ptr [rsp+0x50],rax
0x12eca: mov rdi,qword ptr [rsp+0x8]
0x12ecf: mov rsi,r12
0x12ed2: call 0x12bc0
0x12ed7: test eax,eax
0x12ed9: jnz 0x12f46
0x12edb: mov rax,qword ptr [r15+0x30]
0x12edf: cmp [rax+r13*1+0x8],0x0
0x12ee5: jnz 0x12e70
0x12ee7: mov rdi,qword ptr [rsp+0x50]
0x12eec: call 0x2a10
0x12ef1: mov [rsp+0x1b],0x1
0x12ef6: jmp 0x12e70
0x12efb: nop qword ptr [rax+rax*1+0x0]
0x12f00: lea rdi,[rsp+0x20]
0x12f05: mov rsi,rbp
0x12f08: call 0x11160
0x12f0d: test al,al
0x12f0f: jz 0x13040
0x12f15: mov rax,qword ptr [r15+0x30]
0x12f19: movdqa xmm0,[rsp+0x20]
0x12f1f: movups [rax+rbx*1+0x0],xmm0
0x12f23: mov rdx,qword ptr [rsp+0x30]
0x12f28: mov qword ptr [rax+rbx*1+0x10],rdx
0x12f2d: mov rbx,qword ptr [rsp+0x10]
0x12f32: mov rax,qword ptr [rsp+0x30]
0x12f37: movdqa xmm0,[rsp+0x20]
0x12f3d: movaps [rbx],xmm0
0x12f40: mov qword ptr [rbx+0x10],rax
0x12f44: xor eax,eax
0x12f46: mov rsi,qword ptr [rsp+0x58]
0x12f4b: xor rsi,0x28
0x12f54: jnz 0x1304a
0x12f5a: add rsp,0x68
0x12f5e: pop rbx
0x12f5f: pop rbp
0x12f60: pop r12
0x12f62: pop r13
0x12f64: pop r14
0x12f66: pop r15
0x12f68: ret
0x12f69: nop qword ptr [rax+0x0]
0x12f70: lea rax,[rsi+rbx*1+0x0]
0x12f74: add r14,0x1
0x12f78: mov [rsp+0x1b],0x1
0x12f7d: cmp qword ptr [rax+0x8],r14
0x12f81: jnle 0x12e86
0x12f87: lea rdi,[rsp+0x20]
0x12f8c: mov rsi,rbp
0x12f8f: call 0x11160
0x12f94: test al,al
0x12f96: jz 0x13040
0x12f9c: cmp [rsp+0x1c],0x1
0x12fa1: mov rax,qword ptr [r15+0x30]
0x12fa5: lea rdx,[rax+rbx*1+0x0]
0x12fa9: jz 0x12f19
0x12faf: cmp [rsp+0x1b],0x0
0x12fb4: jz 0x12f19
0x12fba: mov [rdx+0x8],0x0
0x12fc2: jmp 0x12f2d
0x12fc7: nop qword ptr [rax+rax*1+0x0]
0x12fd0: cmp [r12+0x8],0x0
0x12fd6: jz 0x12f00
0x12fdc: mov rcx,qword ptr [r12+0x10]
0x12fe1: mov rcx,qword ptr [rcx]
0x12fe4: shl rcx,0x4
0x12fe8: test [rdx+rcx*1+0xa],0x4
0x12fed: jnz 0x12e36
0x12ff3: shr r8d,0x8
0x12ff7: mov rcx,rbp
0x12ffa: mov rdx,rbp
0x12ffd: and r8d,0x3ff
0x13004: mov rsi,rbp
0x13007: mov rdi,r15
0x1300a: call 0x120b0
0x1300f: test eax,eax
0x13011: jnz 0x12f46
0x13017: mov rax,qword ptr [r15]
0x1301a: add rax,r13
0x1301d: jmp 0x12e36
0x13022: nop qword ptr [rax+rax*1+0x0]
0x13028: mov rsi,r15
0x1302b: mov rdi,r12
0x1302e: call 0x12da0
0x13033: test eax,eax
0x13035: jz 0x12eca
0x1303b: jmp 0x12f46
0x13040: mov eax,0xc
0x13045: jmp 0x12f46
0x1304a: call 0x2560
0x130ec: nop qword ptr [rax+0x0]
0x1315b: nop qword ptr [rax+rax*1+0x0]
0x1319d: mov eax,0xc
0x131a2: jmp 0x1317e
0x1323d: nop qword ptr [rax]
0x13273: nop qword ptr [rax+rax*1+0x0]
0x1327a: nop qword ptr [rax+rax*1+0x0]
0x1328d: nop qword ptr [rax]
0x132e6: nop qword ptr [rax+rax*1+0x0]
0x13317: nop qword ptr [rax+rax*1+0x0]
0x13351: mov eax,0xc
0x13356: jmp 0x1330c
0x13360: push rbx
0x13361: mov rbx,rdi
0x13364: sub rsp,0x20
0x13368: mov eax,dword ptr [rsi]
0x1336a: cmp eax,0xf
0x1336d: jz 0x133e8
0x1336f: movsxd r9,eax
0x13372: lea r10d,[rax+0x1]
0x13376: mov rdi,qword ptr [rdi]
0x13379: mov rax,r9
0x1337c: shl rax,0x6
0x13380: add rax,0x8
0x13384: shl r9,0x6
0x13388: mov dword ptr [rsi],r10d
0x1338b: add rax,rdi
0x1338e: lea rsi,[rdi+r9*1+0x0]
0x13392: mov [rsi+0x8],0x0
0x1339a: mov qword ptr [rsi+0x10],rdx
0x1339e: lea rdi,[rsi+0x20]
0x133a2: mov qword ptr [rsi+0x18],rcx
0x133a6: movdqu xmm0,[r8]
0x133ab: movups [rsi+0x30],xmm0
0x133af: and [rdi+0x1a],0xf3
0x133b3: test rdx,rdx
0x133b6: mov [rsi+0x20],0x0
0x133be: mov [rsi+0x28],0x0
0x133c6: mov [rsi+0x40],0xffffffff
0x133ce: jz 0x133d3
0x133d0: mov qword ptr [rdx],rax
0x133d3: test rcx,rcx
0x133d6: jz 0x133db
0x133d8: mov qword ptr [rcx],rax
0x133db: add rsp,0x20
0x133df: pop rbx
0x133e0: ret
0x133e1: nop qword ptr [rax+0x0]
0x133e8: mov edi,0x3c8
0x133ed: mov qword ptr [rsp+0x18],r8
0x133f2: mov qword ptr [rsp+0x10],rcx
0x133f7: mov qword ptr [rsp+0x8],rdx
0x133fc: mov qword ptr [rsp],rsi
0x13400: call 0x2780
0x13405: test rax,rax
0x13408: mov rdi,rax
0x1340b: jz 0x1343c
0x1340d: mov rax,qword ptr [rbx]
0x13410: mov r10d,0x1
0x13416: mov qword ptr [rbx],rdi
0x13419: xor r9d,r9d
0x1341c: mov r8,qword ptr [rsp+0x18]
0x13421: mov rcx,qword ptr [rsp+0x10]
0x13426: mov rdx,qword ptr [rsp+0x8]
0x1342b: mov rsi,qword ptr [rsp]
0x1342f: mov qword ptr [rdi],rax
0x13432: mov eax,0x8
0x13437: jmp 0x13384
0x1343c: xor eax,eax
0x1343e: jmp 0x133db
0x13440: push r14
0x13442: push r13
0x13444: lea r13,[rsi+0x70]
0x13448: push r12
0x1344a: push rbp
0x1344b: lea r12,[rsi+0x80]
0x13452: push rbx
0x13453: mov rbx,rdi
0x13456: sub rsp,0x10
0x1345a: mov rbp,qword ptr [rdi]
0x1345d: mov rax,0x28
0x13466: mov qword ptr [rsp+0x8],rax
0x1346b: xor eax,eax
0x1346d: mov r14,rsp
0x13470: lea r8,[rbx+0x28]
0x13474: xor ecx,ecx
0x13476: xor edx,edx
0x13478: mov rsi,r12
0x1347b: mov rdi,r13
0x1347e: call 0x13360
0x13483: test rax,rax
0x13486: mov qword ptr [r14],rax
0x13489: jz 0x134dc
0x1348b: mov qword ptr [rax],rbp
0x1348e: mov rbp,qword ptr [r14]
0x13491: or [rbp+0x32],0x4
0x13495: mov rax,qword ptr [rbx+0x8]
0x13499: test rax,rax
0x1349c: jz 0x134b0
0x1349e: lea r14,[rbp+0x8]
0x134a2: mov rbx,rax
0x134a5: jmp 0x13470
0x134a7: nop qword ptr [rax+rax*1+0x0]
0x134b0: xor edx,edx
0x134b2: jmp 0x134bb
0x134b4: nop qword ptr [rax+0x0]
0x134b8: mov rbx,rax
0x134bb: mov rax,qword ptr [rbx+0x10]
0x134bf: test rax,rax
0x134c2: jz 0x134c9
0x134c4: cmp rax,rdx
0x134c7: jnz 0x13500
0x134c9: mov rax,qword ptr [rbx]
0x134cc: mov rbp,qword ptr [rbp+0x0]
0x134d0: mov rdx,rbx
0x134d3: test rax,rax
0x134d6: jnz 0x134b8
0x134d8: mov rax,qword ptr [rsp]
0x134dc: mov rcx,qword ptr [rsp+0x8]
0x134e1: xor rcx,0x28
0x134ea: jnz 0x1350c
0x134ec: add rsp,0x10
0x134f0: pop rbx
0x134f1: pop rbp
0x134f2: pop r12
0x134f4: pop r13
0x134f6: pop r14
0x134f8: ret
0x134f9: nop qword ptr [rax+0x0]
0x13500: lea r14,[rbp+0x10]
0x13504: mov rbx,rax
0x13507: jmp 0x13470
0x1350c: call 0x2560
0x13520: push r15
0x13522: push r14
0x13524: push r13
0x13526: push r12
0x13528: mov r13,rdx
0x1352b: push rbp
0x1352c: push rbx
0x1352d: sub rsp,0x48
0x13531: mov rbx,qword ptr [rsi]
0x13534: mov rbp,qword ptr [rdx+0x8]
0x13538: mov rax,0x28
0x13541: mov qword ptr [rsp+0x38],rax
0x13546: xor eax,eax
0x13548: test [rsi+0x38],0x10
0x1354c: mov qword ptr [rsp+0x18],rdi
0x13551: jz 0x136c8
0x13557: test rbp,rbp
0x1355a: jz 0x135d0
0x1355c: mov rax,qword ptr [rdx+0x28]
0x13560: cmp rax,0x3f
0x13564: jnle 0x1369d
0x1356a: mov rdx,qword ptr [rbx+0xa0]
0x13571: bt rdx,rax
0x13575: jnb 0x1369d
0x1357b: lea rax,[rbx+0x70]
0x1357f: lea r14,[rsp+0x20]
0x13584: sub rbx,0xffffff80
0x13588: xor ecx,ecx
0x1358a: xor edx,edx
0x1358c: mov rsi,rbx
0x1358f: mov r15,rax
0x13592: mov r8,r14
0x13595: mov rdi,rax
0x13598: mov [rsp+0x28],0x8
0x1359d: mov qword ptr [rsp+0x8],rax
0x135a2: call 0x13360
0x135a7: mov rdi,r15
0x135aa: mov r8,r14
0x135ad: xor ecx,ecx
0x135af: xor edx,edx
0x135b1: mov rsi,rbx
0x135b4: mov r12,rax
0x135b7: mov [rsp+0x28],0x9
0x135bc: call 0x13360
0x135c1: mov r15,rax
0x135c4: jmp 0x1371d
0x135c9: nop qword ptr [rax+0x0]
0x135d0: lea rax,[rbx+0x70]
0x135d4: lea r14,[rsp+0x20]
0x135d9: sub rbx,0xffffff80
0x135dd: xor ecx,ecx
0x135df: xor edx,edx
0x135e1: mov rsi,rbx
0x135e4: mov r15,rax
0x135e7: mov r8,r14
0x135ea: mov rdi,rax
0x135ed: mov [rsp+0x28],0x8
0x135f2: mov qword ptr [rsp+0x8],rax
0x135f7: call 0x13360
0x135fc: mov rdi,r15
0x135ff: mov r8,r14
0x13602: xor ecx,ecx
0x13604: xor edx,edx
0x13606: mov rsi,rbx
0x13609: mov r12,rax
0x1360c: mov [rsp+0x28],0x9
0x13611: call 0x13360
0x13616: mov r11,rax
0x13619: mov r15,rax
0x1361c: mov rdi,qword ptr [rsp+0x8]
0x13621: mov r8,r14
0x13624: mov rcx,r11
0x13627: mov rdx,r12
0x1362a: mov rsi,rbx
0x1362d: mov [rsp+0x28],0x10
0x13632: mov qword ptr [rsp+0x10],r11
0x13637: call 0x13360
0x1363c: test rax,rax
0x1363f: mov rbp,rax
0x13642: jz 0x13740
0x13648: mov r11,qword ptr [rsp+0x10]
0x1364d: test r11,r11
0x13650: jz 0x13740
0x13656: test r12,r12
0x13659: jz 0x13740
0x1365f: test r15,r15
0x13662: jz 0x13740
0x13668: mov rax,qword ptr [r13+0x28]
0x1366c: mov qword ptr [r15+0x28],rax
0x13670: mov qword ptr [r12+0x28],rax
0x13675: movzx eax,byte ptr [r13+0x32]
0x1367a: movzx edx,byte ptr [r15+0x32]
0x1367f: and eax,0x8
0x13682: and edx,0xf7
0x13685: mov ecx,eax
0x13687: or edx,ecx
0x13689: mov byte ptr [r15+0x32],dl
0x1368d: movzx eax,byte ptr [r12+0x32]
0x13693: and eax,0xf7
0x13696: or eax,ecx
0x13698: mov byte ptr [r12+0x32],al
0x1369d: mov rdi,qword ptr [rsp+0x38]
0x136a2: xor rdi,0x28
0x136ab: mov rax,rbp
0x136ae: jnz 0x13752
0x136b4: add rsp,0x48
0x136b8: pop rbx
0x136b9: pop rbp
0x136ba: pop r12
0x136bc: pop r13
0x136be: pop r14
0x136c0: pop r15
0x136c2: ret
0x136c3: nop qword ptr [rax+rax*1+0x0]
0x136c8: lea rax,[rbx+0x70]
0x136cc: lea r14,[rsp+0x20]
0x136d1: sub rbx,0xffffff80
0x136d5: xor ecx,ecx
0x136d7: xor edx,edx
0x136d9: mov rsi,rbx
0x136dc: mov r15,rax
0x136df: mov r8,r14
0x136e2: mov rdi,rax
0x136e5: mov [rsp+0x28],0x8
0x136ea: mov qword ptr [rsp+0x8],rax
0x136ef: call 0x13360
0x136f4: xor ecx,ecx
0x136f6: xor edx,edx
0x136f8: mov rdi,r15
0x136fb: mov r8,r14
0x136fe: mov rsi,rbx
0x13701: mov r12,rax
0x13704: mov [rsp+0x28],0x9
0x13709: call 0x13360
0x1370e: test rbp,rbp
0x13711: mov r15,rax
0x13714: mov r11,rax
0x13717: jz 0x1361c
0x1371d: mov rdi,qword ptr [rsp+0x8]
0x13722: mov r8,r14
0x13725: mov rcx,r15
0x13728: mov rdx,rbp
0x1372b: mov rsi,rbx
0x1372e: mov [rsp+0x28],0x10
0x13733: call 0x13360
0x13738: mov r11,rax
0x1373b: jmp 0x1361c
0x13740: mov rax,qword ptr [rsp+0x18]
0x13745: xor ebp,ebp
0x13747: mov [rax],0xc
0x1374d: jmp 0x1369d
0x13752: call 0x2560
0x13760: push rbp
0x13761: push rbx
0x13762: mov rbp,rdi
0x13765: mov rbx,rsi
0x13768: sub rsp,0x18
0x1376c: mov rdx,qword ptr [rsi+0x8]
0x13770: mov rax,0x28
0x13779: mov qword ptr [rsp+0x8],rax
0x1377e: xor eax,eax
0x13780: mov [rsp+0x4],0x0
0x13788: test rdx,rdx
0x1378b: jz 0x13793
0x1378d: cmp [rdx+0x30],0x11
0x13791: jz 0x137e0
0x13793: mov rdx,qword ptr [rbx+0x10]
0x13797: test rdx,rdx
0x1379a: jz 0x137a2
0x1379c: cmp [rdx+0x30],0x11
0x137a0: jz 0x137c0
0x137a2: mov rcx,qword ptr [rsp+0x8]
0x137a7: xor rcx,0x28
0x137b0: mov eax,dword ptr [rsp+0x4]
0x137b4: jnz 0x137fb
0x137b6: add rsp,0x18
0x137ba: pop rbx
0x137bb: pop rbp
0x137bc: ret
0x137bd: nop qword ptr [rax]
0x137c0: lea rdi,[rsp+0x4]
0x137c5: mov rsi,rbp
0x137c8: call 0x13520
0x137cd: test rax,rax
0x137d0: mov qword ptr [rbx+0x10],rax
0x137d4: jz 0x137a2
0x137d6: mov qword ptr [rax],rbx
0x137d9: jmp 0x137a2
0x137db: nop qword ptr [rax+rax*1+0x0]
0x137e0: lea rdi,[rsp+0x4]
0x137e5: mov rsi,rbp
0x137e8: call 0x13520
0x137ed: test rax,rax
0x137f0: mov qword ptr [rbx+0x8],rax
0x137f4: jz 0x13793
0x137f6: mov qword ptr [rax],rbx
0x137f9: jmp 0x13793
0x137fb: call 0x2560
0x1384f: nop 
0x13866: nop qword ptr [rax+rax*1+0x0]
0x13870: mov [rbx+0x8],0x0
0x13878: mov [rbx],0x0
0x1387f: mov eax,0xc
0x13884: jmp 0x1384a
0x138fd: nop qword ptr [rax]
0x1393a: nop qword ptr [rax+rax*1+0x0]
0x1396b: nop qword ptr [rax+rax*1+0x0]
0x13995: nop qword ptr [rax]
0x139b5: nop qword ptr [rax]
0x139d5: nop qword ptr [rax]
0x139d8: mov eax,0xc
0x139dd: jmp 0x13962
0x13a65: nop qword ptr [rax]
0x13aae: nop 
0x13c19: nop qword ptr [rax+0x0]
0x13c49: nop qword ptr [rax+0x0]
0x13c5c: nop qword ptr [rax+0x0]
0x13d97: nop qword ptr [rax+rax*1+0x0]
0x13e51: nop qword ptr [rax+0x0]
0x13e63: nop qword ptr [rax+rax*1+0x0]
0x13e7c: nop qword ptr [rax+0x0]
0x13e9e: nop 
0x13ef7: nop qword ptr [rax+rax*1+0x0]
0x13ffa: nop qword ptr [rax+rax*1+0x0]
0x14072: nop qword ptr [rax+rax*1+0x0]
0x1408c: nop qword ptr [rax+0x0]
0x140c1: nop qword ptr [rax+0x0]
0x14276: nop qword ptr [rax+rax*1+0x0]
0x1430d: mov [rsp+0x58],0x0
0x14316: mov [rsp+0x50],0x0
0x1431f: mov eax,0xc
0x14324: jmp 0x14220
0x1435c: nop qword ptr [rax+0x0]
0x144a7: nop qword ptr [rax+rax*1+0x0]
0x144d9: nop qword ptr [rax+0x0]
0x144ea: nop qword ptr [rax+rax*1+0x0]
0x14531: nop qword ptr [rax+0x0]
0x1461e: nop 
0x1462c: nop qword ptr [rax+0x0]
0x14633: nop qword ptr [rax+rax*1+0x0]
0x14654: nop qword ptr [rax+0x0]
0x14665: nop qword ptr [rax]
0x146c8: nop qword ptr [rax+rax*1+0x0]
0x1472a: nop qword ptr [rax+rax*1+0x0]
0x14742: nop qword ptr [rax+rax*1+0x0]
0x148bc: nop qword ptr [rax+0x0]
0x148cd: nop qword ptr [rax]
0x148f1: nop qword ptr [rax+0x0]
0x14902: nop qword ptr [rax+rax*1+0x0]
0x1491e: nop 
0x14a14: nop qword ptr [rax+0x0]
0x14a23: nop qword ptr [rax+rax*1+0x0]
0x14a55: nop qword ptr [rax]
0x14b04: nop qword ptr [rax+0x0]
0x14b39: nop qword ptr [rax+0x0]
0x14b62: nop qword ptr [rax+rax*1+0x0]
0x14bd9: nop qword ptr [rax+0x0]
0x14c01: nop qword ptr [rax+0x0]
0x14c31: nop qword ptr [rax+0x0]
0x14cb9: nop qword ptr [rax+0x0]
0x14cee: nop 
0x14d25: nop qword ptr [rax]
0x14e95: nop qword ptr [rax]
0x14eea: call 0x2560
0x14f55: nop qword ptr [rax]
0x15034: nop qword ptr [rax+0x0]
0x15077: nop qword ptr [rax+rax*1+0x0]
0x15107: nop qword ptr [rax+rax*1+0x0]
0x15362: test eax,eax
0x15364: mov dword ptr [rsp+0x6c],eax
0x15368: jnz 0x15a68
0x1538a: mov rsi,qword ptr [rsp+0x10]
0x1538f: test rax,rax
0x15392: mov qword ptr [rsi+rbx*8+0x0],rax
0x15396: jz 0x15b48
0x1539c: cmp [rax+0x68],0x0
0x153a0: js 0x15ac0
0x153a6: mov rdi,qword ptr [rsp+0x30]
0x153ab: mov rsi,qword ptr [rsp+0x38]
0x153b0: mov qword ptr [rdi+rbx*8+0x0],rax
0x153b4: mov rax,qword ptr [rsp+0x10]
0x153b9: mov rax,qword ptr [rax+rbx*8+0x0]
0x153bd: mov qword ptr [rsi+rbx*8+0x0],rax
0x153c1: lea rdx,[rsp+0xd0]
0x153c9: xor eax,eax
0x153cb: mov rcx,qword ptr [rdx+rax*1+0x0]
0x153cf: or rcx,qword ptr [r12+rax*1+0x0]
0x153d3: mov qword ptr [rdx+rax*1+0x0],rcx
0x153d7: add rax,0x8
0x153db: cmp rax,0x20
0x153df: jnz 0x153cb
0x153e1: add rbx,0x1
0x153e5: add r13,0x18
0x153e9: add r12,0x20
0x153ed: cmp rbx,qword ptr [rsp+0x20]
0x153f2: jnz 0x15322
0x153f8: cmp [rsp+0x4f],0x0
0x153fd: mov r15,rbp
0x15400: mov rbp,qword ptr [rsp+0x20]
0x15405: mov qword ptr [rsp+0x20],rdx
0x1540a: jnz 0x15b59
0x15410: mov esi,0x100
0x15415: mov edi,0x8
0x1541a: call 0x26b0
0x1541f: mov r11,rax
0x15422: mov rax,qword ptr [rsp+0x8]
0x15427: test r11,r11
0x1542a: mov qword ptr [rax+0x58],r11
0x1542e: jz 0x15a6d
0x15434: mov rbx,qword ptr [rsp+0x40]
0x15439: mov r12,qword ptr [rsp+0x10]
0x1543e: xor r9d,r9d
0x15441: mov r13,qword ptr [rsp+0x30]
0x15446: mov rdx,qword ptr [rsp+0x20]
0x1544b: add rbx,0x20
0x1544f: mov rax,qword ptr [rdx+r9*1+0x0]
0x15453: test rax,rax
0x15456: jz 0x15484
0x15458: mov rsi,r9
0x1545b: mov ecx,0x1
0x15460: shl rsi,0x6
0x15464: add rsi,r11
0x15467: nop qword ptr [rax+rax*1+0x0]
0x15470: test al,0x1
0x15472: jnz 0x15bd8
0x15478: add rcx,rcx
0x1547b: add rsi,0x8
0x1547f: shr rax,0x1
0x15482: jnz 0x15470
0x15484: add r9,0x8
0x15488: cmp r9,0x20
0x1548c: jnz 0x1544f
0x1548e: test [rsp+0xd1],0x4
0x15496: jz 0x154d2
0x15498: xor eax,eax
0x1549a: mov rdx,qword ptr [rsp+0x50]
0x1549f: jmp 0x154ae
0x154a1: add rax,0x1
0x154a5: add rdx,0x20
0x154a9: cmp rax,rbp
0x154ac: jz 0x154d2
0x154ae: test [rdx],0x400
0x154b5: jz 0x154a1
0x154b7: mov rbx,qword ptr [rsp+0x38]
0x154bc: cmp [rsp+0x4f],0x0
0x154c1: mov rax,qword ptr [rbx+rax*8+0x0]
0x154c5: mov qword ptr [r11+0x50],rax
0x154c9: jz 0x154d2
0x154cb: mov qword ptr [r11+0x850],rax
0x154d2: mov rdi,qword ptr [rsp+0x10]
0x154d7: call 0x2a10
0x154dc: mov rdi,qword ptr [rsp+0x80]
0x154e4: call 0x2a10
0x154e9: mov rax,qword ptr [rsp+0x18]
0x154ee: mov rbx,qword ptr [rsp+0x58]
0x154f3: lea rbp,[rax+0x10]
0x154f7: add rbx,rbp
0x154fa: mov rdi,qword ptr [rbp+0x0]
0x154fe: add rbp,0x18
0x15502: call 0x2a10
0x15507: cmp rbx,rbp
0x1550a: jnz 0x154fa
0x1550c: mov rdi,qword ptr [rsp+0x18]
0x15511: call 0x2a10
0x15516: mov eax,0x1
0x1551b: jmp 0x15542
0x1551d: test rbp,rbp
0x15520: mov [rbx+0x8],0x0
0x15528: mov [rbx],0x0
0x1552f: jnz 0x15860
0x15535: mov rdi,qword ptr [rsp+0x18]
0x1553a: call 0x2a10
0x1553f: nop 
0x1556b: nop qword ptr [rax+rax*1+0x0]
0x15858: nop qword ptr [rax+rax*1+0x0]
0x15898: nop qword ptr [rax+rax*1+0x0]
0x1590d: nop qword ptr [rax]
0x159d6: nop qword ptr [rax+rax*1+0x0]
0x15a56: mov edx,dword ptr [rsp+0x6c]
0x15a5a: test edx,edx
0x15a5c: jz 0x15ae7
0x15a62: nop qword ptr [rax+rax*1+0x0]
0x15a68: mov rbp,qword ptr [rsp+0x20]
0x15a6d: mov rdi,qword ptr [rsp+0x10]
0x15a72: call 0x2a10
0x15a77: mov r12,qword ptr [rsp+0x80]
0x15ac0: mov rdi,qword ptr [rsp+0x28]
0x15ac5: mov ecx,0x1
0x15aca: mov rdx,r14
0x15acd: mov rsi,rbp
0x15ad0: call 0x139f0
0x15ad5: mov rdi,qword ptr [rsp+0x30]
0x15ada: test rax,rax
0x15add: mov qword ptr [rdi+rbx*8+0x0],rax
0x15ae1: jz 0x15a56
0x15ae7: mov rdi,qword ptr [rsp+0x10]
0x15aec: cmp rax,qword ptr [rdi+rbx*8+0x0]
0x15af0: jz 0x15b0b
0x15af2: movzx edi,byte ptr [rsp+0x4f]
0x15af7: cmp [rbp+0xb4],0x2
0x15afe: mov eax,0x1
0x15b03: cmovnl edi,eax
0x15b06: mov byte ptr [rsp+0x4f],dil
0x15b0b: mov rdi,qword ptr [rsp+0x28]
0x15b10: mov rsi,rbp
0x15b13: mov ecx,0x2
0x15b18: mov rdx,r14
0x15b1b: call 0x139f0
0x15b20: mov rsi,qword ptr [rsp+0x38]
0x15b25: test rax,rax
0x15b28: mov qword ptr [rsi+rbx*8+0x0],rax
0x15b2c: jnz 0x153c1
0x15b32: mov eax,dword ptr [rsp+0x6c]
0x15b36: test eax,eax
0x15b38: jz 0x153c1
0x15b3e: jmp 0x15a68
0x15b43: nop qword ptr [rax+rax*1+0x0]
0x15b48: mov ecx,dword ptr [rsp+0x6c]
0x15b4c: test ecx,ecx
0x15b4e: jz 0x1539c
0x15b54: jmp 0x15a68
0x15b59: mov esi,0x200
0x15b5e: mov edi,0x8
0x15b63: call 0x26b0
0x15b68: mov r11,rax
0x15b6b: mov rax,qword ptr [rsp+0x8]
0x15b70: test r11,r11
0x15b73: mov qword ptr [rax+0x60],r11
0x15b77: jz 0x15a6d
0x15b7d: mov r13,qword ptr [rsp+0x40]
0x15b82: mov r10,qword ptr [rsp+0x10]
0x15b87: mov r12,r11
0x15b8a: mov r14,qword ptr [rsp+0x30]
0x15b8f: mov rdx,qword ptr [rsp+0x20]
0x15b94: xor ebx,ebx
0x15b96: add r13,0x20
0x15b9a: mov rax,qword ptr [rdx+rbx*1+0x0]
0x15b9e: test rax,rax
0x15ba1: jz 0x15bbf
0x15ba3: mov rsi,r12
0x15ba6: mov ecx,0x1
0x15bab: test al,0x1
0x15bad: jnz 0x15c5c
0x15bb3: add rcx,rcx
0x15bb6: add rsi,0x8
0x15bba: shr rax,0x1
0x15bbd: jnz 0x15bab
0x15bbf: add rbx,0x8
0x15bc3: add r12,0x200
0x15bca: cmp rbx,0x20
0x15bce: jnz 0x15b9a
0x15bd0: jmp 0x1548e
0x15bd5: nop qword ptr [rax]
0x15bd8: mov rdi,qword ptr [rsp+0x18]
0x15bdd: test qword ptr [rdi+r9*1+0x1800],rcx
0x15be5: jnz 0x15c57
0x15be7: lea rdi,[rbx+r9*1+0x0]
0x15beb: xor r8d,r8d
0x15bee: nop 
0x15bf0: mov r10,qword ptr [rdi]
0x15bf3: add r8,0x1
0x15bf7: add rdi,0x20
0x15bfb: and r10,rcx
0x15bfe: test r10,r10
0x15c01: jz 0x15bf0
0x15c03: shl r8,0x3
0x15c07: test qword ptr [r15+r9*1+0xb8],rcx
0x15c0f: jz 0x15c1e
0x15c11: mov rdi,qword ptr [r13+r8*1+0x0]
0x15c16: mov qword ptr [rsi],rdi
0x15c19: jmp 0x15478
0x15c1e: mov rdi,qword ptr [r12+r8*1+0x0]
0x15c22: mov qword ptr [rsi],rdi
0x15c25: jmp 0x15478
0x15c57: xor r8d,r8d
0x15c5a: jmp 0x15c07
0x15c5c: mov rdi,qword ptr [rsp+0x18]
0x15c61: test qword ptr [rdi+rbx*1+0x1800],rcx
0x15c69: jnz 0x15ca0
0x15c6b: lea r9,[r13+rbx*1+0x0]
0x15c70: xor r8d,r8d
0x15c73: mov r15,qword ptr [r9]
0x15c76: add r8,0x1
0x15c7a: add r9,0x20
0x15c7e: mov rdi,r8
0x15c81: and r15,rcx
0x15c84: test r15,r15
0x15c87: jz 0x15c73
0x15c89: mov r8,qword ptr [r10+rdi*8+0x0]
0x15c8d: mov qword ptr [rsi],r8
0x15c90: mov rdi,qword ptr [r14+rdi*8+0x0]
0x15c94: mov qword ptr [rsi+0x800],rdi
0x15c9b: jmp 0x15bb3
0x15ca0: xor edi,edi
0x15ca2: jmp 0x15c89
0x15ca4: call 0x2560
0x15cd0: cmp [rsi+0x30],0x10
0x15cd4: jz 0x15d38
0x15cd6: push rbp
0x15cd7: push rbx
0x15cd8: mov rbx,rsi
0x15cdb: mov rbp,rdi
0x15cde: sub rsp,0x8
0x15ce2: mov qword ptr [rbx+0x18],rsi
0x15ce6: mov rdx,qword ptr [rbx+0x30]
0x15cea: mov rsi,qword ptr [rsi+0x28]
0x15cee: call 0x11e40
0x15cf3: cmp rax,0xffffffff
0x15cf7: mov rdx,rax
0x15cfa: mov qword ptr [rbx+0x38],rax
0x15cfe: jz 0x15d50
0x15d00: xor eax,eax
0x15d02: cmp [rbx+0x30],0xc
0x15d06: jnz 0x15d2c
0x15d08: mov ecx,dword ptr [rbx+0x28]
0x15d0b: shl rdx,0x4
0x15d0f: add rdx,qword ptr [rbp+0x0]
0x15d13: and ecx,0x3ff
0x15d19: shl ecx,0x8
0x15d1c: mov esi,ecx
0x15d1e: mov ecx,dword ptr [rdx+0x8]
0x15d21: and ecx,0xfffc00ff
0x15d27: or ecx,esi
0x15d29: mov dword ptr [rdx+0x8],ecx
0x15d2c: add rsp,0x8
0x15d30: pop rbx
0x15d31: pop rbp
0x15d32: ret
0x15d33: nop qword ptr [rax+rax*1+0x0]
0x15d38: mov rax,qword ptr [rsi+0x8]
0x15d3c: mov rdx,qword ptr [rax+0x18]
0x15d40: mov rax,qword ptr [rax+0x38]
0x15d44: mov qword ptr [rsi+0x18],rdx
0x15d48: mov qword ptr [rsi+0x38],rax
0x15d4c: xor eax,eax
0x15d4e: ret
0x15d4f: nop 
0x15d50: mov eax,0xc
0x15d55: jmp 0x15d2c
0x15e50: push rbp
0x15e51: push rbx
0x15e52: mov rbp,rdi
0x15e55: mov rdi,rsi
0x15e58: mov rbx,rsi
0x15e5b: sub rsp,0x8
0x15e5f: call 0x2530
0x15e64: cmp rax,0x1
0x15e68: jnz 0x15e90
0x15e6a: movzx ecx,byte ptr [rbx]
0x15e6d: mov rdx,rcx
0x15e70: and ecx,0x3f
0x15e73: shr rdx,0x3
0x15e77: shl rax,cl
0x15e7a: and edx,0x18
0x15e7d: or qword ptr [rbp+rdx*1+0x0],rax
0x15e82: add rsp,0x8
0x15e86: xor eax,eax
0x15e88: pop rbx
0x15e89: pop rbp
0x15e8a: ret
0x15e8b: nop qword ptr [rax+rax*1+0x0]
0x15e90: add rsp,0x8
0x15e94: mov eax,0x3
0x15e99: pop rbx
0x15e9a: pop rbp
0x15e9b: ret
0x15ea0: push r14
0x15ea2: push r13
0x15ea4: mov r13,rcx
0x15ea7: push r12
0x15ea9: push rbp
0x15eaa: mov r12,r9
0x15ead: push rbx
0x15eae: mov rbp,rdi
0x15eb1: mov rbx,rsi
0x15eb4: sub rsp,0x10
0x15eb8: test [rsp+0x40],0x400000
0x15ec1: jz 0x15ee8
0x15ec3: lea rdi,[rip+0xc949]
0x15eca: mov ecx,0x6
0x15ecf: mov rsi,r9
0x15ed2: rep cmpsb ds:[rsi],es:[rdi]
0x15ed4: setnbe al
0x15ed7: sbb al,0x0
0x15ed9: test al,al
0x15edb: jnz 0x15fd6
0x15ee1: lea r12,[rip+0xc925]
0x15ee8: mov rcx,qword ptr [r13+0x0]
0x15eec: cmp qword ptr [r8],rcx
0x15eef: mov rax,qword ptr [rdx]
0x15ef2: jz 0x16009
0x15ef8: lea rdx,[rcx+0x1]
0x15efc: mov rdi,r12
0x15eff: mov qword ptr [r13+0x0],rdx
0x15f03: lea r13,[rax+rcx*8+0x0]
0x15f07: call 0x2690
0x15f0c: lea rdi,[rip+0xc90c]
0x15f13: mov qword ptr [r13+0x0],rax
0x15f17: mov ecx,0x6
0x15f1c: mov rsi,r12
0x15f1f: rep cmpsb ds:[rsi],es:[rdi]
0x15f21: setnbe al
0x15f24: sbb al,0x0
0x15f26: test al,al
0x15f28: jz 0x15f98
0x15f2a: lea rdi,[rip+0xc8f4]
0x15f31: mov ecx,0x6
0x15f36: mov rsi,r12
0x15f39: rep cmpsb ds:[rsi],es:[rdi]
0x15f3b: setnbe al
0x15f3e: sbb al,0x0
0x15f40: test al,al
0x15f42: jnz 0x16048
0x15f48: call 0x29f0
0x15f4d: xor ecx,ecx
0x15f4f: test rbp,rbp
0x15f52: mov rdx,qword ptr [rax]
0x15f55: mov edi,0x1
0x15f5a: jnz 0x1621a
0x15f60: test [rdx+rcx*2+0x0],0x2
0x15f64: jz 0x15f77
0x15f66: mov rax,rcx
0x15f69: mov rsi,rdi
0x15f6c: sar rax,0x6
0x15f70: shl rsi,cl
0x15f73: or qword ptr [rbx+rax*8+0x0],rsi
0x15f77: add rcx,0x1
0x15f7b: cmp rcx,0x100
0x15f82: jnz 0x15f60
0x15f84: xor eax,eax
0x15f86: add rsp,0x10
0x15f8a: pop rbx
0x15f8b: pop rbp
0x15f8c: pop r12
0x15f8e: pop r13
0x15f90: pop r14
0x15f92: ret
0x15f93: nop qword ptr [rax+rax*1+0x0]
0x15f98: call 0x29f0
0x15f9d: xor ecx,ecx
0x15f9f: test rbp,rbp
0x15fa2: mov rdx,qword ptr [rax]
0x15fa5: mov edi,0x1
0x15faa: jnz 0x1619a
0x15fb0: test [rdx+rcx*2+0x0],0x8
0x15fb4: jz 0x15fc7
0x15fb6: mov rax,rcx
0x15fb9: mov rsi,rdi
0x15fbc: sar rax,0x6
0x15fc0: shl rsi,cl
0x15fc3: or qword ptr [rbx+rax*8+0x0],rsi
0x15fc7: add rcx,0x1
0x15fcb: cmp rcx,0x100
0x15fd2: jnz 0x15fb0
0x15fd4: jmp 0x15f84
0x15fd6: lea rdi,[rip+0xc83c]
0x15fdd: mov ecx,0x6
0x15fe2: mov rsi,r9
0x15fe5: rep cmpsb ds:[rsi],es:[rdi]
0x15fe7: mov rcx,qword ptr [r13+0x0]
0x15feb: setnbe al
0x15fee: sbb al,0x0
0x15ff0: test al,al
0x15ff2: lea rax,[rip+0xc814]
0x15ff9: cmove r12,rax
0x15ffd: cmp qword ptr [r8],rcx
0x16000: mov rax,qword ptr [rdx]
0x16003: jnz 0x15ef8
0x16009: lea r14,[rcx+rcx*1+0x1]
0x1600e: mov rdi,rax
0x16011: mov qword ptr [rsp+0x8],r8
0x16016: mov qword ptr [rsp],rdx
0x1601a: lea rsi,[r14*8+0x0]
0x16022: call 0x2830
0x16027: test rax,rax
0x1602a: jz 0x16348
0x16030: mov rdx,qword ptr [rsp]
0x16034: mov r8,qword ptr [rsp+0x8]
0x16039: mov qword ptr [rdx],rax
0x1603c: mov qword ptr [r8],r14
0x1603f: mov rcx,qword ptr [r13+0x0]
0x16043: jmp 0x15ef8
0x16048: lea rdi,[rip+0xc7ca]
0x1604f: mov ecx,0x6
0x16054: mov rsi,r12
0x16057: rep cmpsb ds:[rsi],es:[rdi]
0x16059: setnbe al
0x1605c: sbb al,0x0
0x1605e: test al,al
0x16060: jz 0x160ca
0x16062: lea rdi,[rip+0xc7c2]
0x16069: mov ecx,0x6
0x1606e: mov rsi,r12
0x16071: rep cmpsb ds:[rsi],es:[rdi]
0x16073: setnbe al
0x16076: sbb al,0x0
0x16078: test al,al
0x1607a: jnz 0x16112
0x16080: call 0x29f0
0x16085: xor ecx,ecx
0x16087: test rbp,rbp
0x1608a: mov rdx,qword ptr [rax]
0x1608d: mov edi,0x1
0x16092: jnz 0x163ee
0x16098: nop qword ptr [rax+rax*1+0x0]
0x160a0: test [rdx+rcx*2+0x1],0x20
0x160a5: jz 0x160b8
0x160a7: mov rax,rcx
0x160aa: mov rsi,rdi
0x160ad: sar rax,0x6
0x160b1: shl rsi,cl
0x160b4: or qword ptr [rbx+rax*8+0x0],rsi
0x160b8: add rcx,0x1
0x160bc: cmp rcx,0x100
0x160c3: jnz 0x160a0
0x160c5: jmp 0x15f84
0x160ca: call 0x29f0
0x160cf: xor ecx,ecx
0x160d1: test rbp,rbp
0x160d4: mov rdx,qword ptr [rax]
0x160d7: mov edi,0x1
0x160dc: jnz 0x162b2
0x160e2: nop qword ptr [rax+rax*1+0x0]
0x160e8: test [rdx+rcx*2+0x1],0x2
0x160ed: jz 0x16100
0x160ef: mov rax,rcx
0x160f2: mov rsi,rdi
0x160f5: sar rax,0x6
0x160f9: shl rsi,cl
0x160fc: or qword ptr [rbx+rax*8+0x0],rsi
0x16100: add rcx,0x1
0x16104: cmp rcx,0x100
0x1610b: jnz 0x160e8
0x1610d: jmp 0x15f84
0x16112: lea rdi,[rip+0xc6f4]
0x16119: mov ecx,0x6
0x1611e: mov rsi,r12
0x16121: rep cmpsb ds:[rsi],es:[rdi]
0x16123: setnbe al
0x16126: sbb al,0x0
0x16128: test al,al
0x1612a: jz 0x161d3
0x16130: lea rdi,[rip+0xc713]
0x16137: mov ecx,0x6
0x1613c: mov rsi,r12
0x1613f: rep cmpsb ds:[rsi],es:[rdi]
0x16141: setnbe al
0x16144: sbb al,0x0
0x16146: test al,al
0x16148: jnz 0x16253
0x1614e: call 0x29f0
0x16153: xor ecx,ecx
0x16155: test rbp,rbp
0x16158: mov rdx,qword ptr [rax]
0x1615b: mov edi,0x1
0x16160: jnz 0x1660a
0x16166: nop qword ptr [rax+rax*1+0x0]
0x16170: test [rdx+rcx*2+0x1],0x8
0x16175: jz 0x16188
0x16177: mov rax,rcx
0x1617a: mov rsi,rdi
0x1617d: sar rax,0x6
0x16181: shl rsi,cl
0x16184: or qword ptr [rbx+rax*8+0x0],rsi
0x16188: add rcx,0x1
0x1618c: cmp rcx,0x100
0x16193: jnz 0x16170
0x16195: jmp 0x15f84
0x1619a: xor eax,eax
0x1619c: nop qword ptr [rax+0x0]
0x161a0: test [rdx+rax*2+0x0],0x8
0x161a4: jz 0x161c2
0x161a6: movzx ecx,byte ptr [rbp+rax*1+0x0]
0x161ab: mov r10,rdi
0x161ae: mov rsi,rcx
0x161b1: and ecx,0x3f
0x161b4: shr rsi,0x3
0x161b8: shl r10,cl
0x161bb: and esi,0x18
0x161be: or qword ptr [rbx+rsi*1+0x0],r10
0x161c2: add rax,0x1
0x161c6: cmp rax,0x100
0x161cc: jnz 0x161a0
0x161ce: jmp 0x15f84
0x161d3: call 0x29f0
0x161d8: xor ecx,ecx
0x161da: test rbp,rbp
0x161dd: mov rdx,qword ptr [rax]
0x161e0: mov edi,0x1
0x161e5: jnz 0x163b8
0x161eb: nop qword ptr [rax+rax*1+0x0]
0x161f0: test [rdx+rcx*2+0x1],0x4
0x161f5: jz 0x16208
0x161f7: mov rax,rcx
0x161fa: mov rsi,rdi
0x161fd: sar rax,0x6
0x16201: shl rsi,cl
0x16204: or qword ptr [rbx+rax*8+0x0],rsi
0x16208: add rcx,0x1
0x1620c: cmp rcx,0x100
0x16213: jnz 0x161f0
0x16215: jmp 0x15f84
0x1621a: xor eax,eax
0x1621c: nop qword ptr [rax+0x0]
0x16220: test [rdx+rax*2+0x0],0x2
0x16224: jz 0x16242
0x16226: movzx ecx,byte ptr [rbp+rax*1+0x0]
0x1622b: mov r11,rdi
0x1622e: mov rsi,rcx
0x16231: and ecx,0x3f
0x16234: shr rsi,0x3
0x16238: shl r11,cl
0x1623b: and esi,0x18
0x1623e: or qword ptr [rbx+rsi*1+0x0],r11
0x16242: add rax,0x1
0x16246: cmp rax,0x100
0x1624c: jnz 0x16220
0x1624e: jmp 0x15f84
0x16253: lea rdi,[rip+0xc5d7]
0x1625a: mov ecx,0x6
0x1625f: mov rsi,r12
0x16262: rep cmpsb ds:[rsi],es:[rdi]
0x16264: setnbe al
0x16267: sbb al,0x0
0x16269: test al,al
0x1626b: jnz 0x162ec
0x1626d: call 0x29f0
0x16272: xor ecx,ecx
0x16274: test rbp,rbp
0x16277: mov rdx,qword ptr [rax]
0x1627a: mov edi,0x1
0x1627f: jnz 0x16677
0x16285: nop qword ptr [rax]
0x16288: test [rdx+rcx*2+0x1],0x40
0x1628d: jz 0x162a0
0x1628f: mov rax,rcx
0x16292: mov rsi,rdi
0x16295: sar rax,0x6
0x16299: shl rsi,cl
0x1629c: or qword ptr [rbx+rax*8+0x0],rsi
0x162a0: add rcx,0x1
0x162a4: cmp rcx,0x100
0x162ab: jnz 0x16288
0x162ad: jmp 0x15f84
0x162b2: xor eax,eax
0x162b4: nop qword ptr [rax+0x0]
0x162b8: test [rdx+rax*2+0x1],0x2
0x162bd: jz 0x162db
0x162bf: movzx ecx,byte ptr [rbp+rax*1+0x0]
0x162c4: mov r14,rdi
0x162c7: mov rsi,rcx
0x162ca: and ecx,0x3f
0x162cd: shr rsi,0x3
0x162d1: shl r14,cl
0x162d4: and esi,0x18
0x162d7: or qword ptr [rbx+rsi*1+0x0],r14
0x162db: add rax,0x1
0x162df: cmp rax,0x100
0x162e5: jnz 0x162b8
0x162e7: jmp 0x15f84
0x162ec: lea rdi,[rip+0xc520]
0x162f3: mov ecx,0x6
0x162f8: mov rsi,r12
0x162fb: rep cmpsb ds:[rsi],es:[rdi]
0x162fd: setnbe al
0x16300: sbb al,0x0
0x16302: test al,al
0x16304: jnz 0x16352
0x16306: call 0x29f0
0x1630b: xor ecx,ecx
0x1630d: test rbp,rbp
0x16310: mov rax,qword ptr [rax]
0x16313: mov edi,0x1
0x16318: jnz 0x16640
0x1631e: test [rax+rcx*2+0x1],0x1
0x16323: jz 0x16336
0x16325: mov rdx,rcx
0x16328: mov rsi,rdi
0x1632b: sar rdx,0x6
0x1632f: shl rsi,cl
0x16332: or qword ptr [rbx+rdx*8+0x0],rsi
0x16336: add rcx,0x1
0x1633a: cmp rcx,0x100
0x16341: jnz 0x1631e
0x16343: jmp 0x15f84
0x16348: mov eax,0xc
0x1634d: jmp 0x15f86
0x16352: lea rdi,[rip+0xc4de]
0x16359: mov ecx,0x6
0x1635e: mov rsi,r12
0x16361: rep cmpsb ds:[rsi],es:[rdi]
0x16363: setnbe al
0x16366: sbb al,0x0
0x16368: test al,al
0x1636a: jnz 0x1645e
0x16370: call 0x29f0
0x16375: xor ecx,ecx
0x16377: test rbp,rbp
0x1637a: mov rdx,qword ptr [rax]
0x1637d: mov esi,0x1
0x16382: jnz 0x16424
0x16388: test [rdx+rcx*2+0x0],0x1
0x1638c: jz 0x1639f
0x1638e: mov rax,rcx
0x16391: mov rdi,rsi
0x16394: sar rax,0x6
0x16398: shl rdi,cl
0x1639b: or qword ptr [rbx+rax*8+0x0],rdi
0x1639f: add rcx,0x1
0x163a3: cmp rcx,0x100
0x163aa: jnz 0x16388
0x163ac: jmp 0x15f84
0x163b1: nop qword ptr [rax+0x0]
0x163b8: xor eax,eax
0x163ba: test [rdx+rax*2+0x1],0x4
0x163bf: jz 0x163dd
0x163c1: movzx ecx,byte ptr [rbp+rax*1+0x0]
0x163c6: mov r9,rdi
0x163c9: mov rsi,rcx
0x163cc: and ecx,0x3f
0x163cf: shr rsi,0x3
0x163d3: shl r9,cl
0x163d6: and esi,0x18
0x163d9: or qword ptr [rbx+rsi*1+0x0],r9
0x163dd: add rax,0x1
0x163e1: cmp rax,0x100
0x163e7: jnz 0x163ba
0x163e9: jmp 0x15f84
0x163ee: xor eax,eax
0x163f0: test [rdx+rax*2+0x1],0x20
0x163f5: jz 0x16413
0x163f7: movzx ecx,byte ptr [rbp+rax*1+0x0]
0x163fc: mov r9,rdi
0x163ff: mov rsi,rcx
0x16402: and ecx,0x3f
0x16405: shr rsi,0x3
0x16409: shl r9,cl
0x1640c: and esi,0x18
0x1640f: or qword ptr [rbx+rsi*1+0x0],r9
0x16413: add rax,0x1
0x16417: cmp rax,0x100
0x1641d: jnz 0x163f0
0x1641f: jmp 0x15f84
0x16424: xor eax,eax
0x16426: mov edi,0x1
0x1642b: test [rdx+rax*2+0x0],0x1
0x1642f: jz 0x1644d
0x16431: movzx ecx,byte ptr [rbp+rax*1+0x0]
0x16436: mov r14,rdi
0x16439: mov rsi,rcx
0x1643c: and ecx,0x3f
0x1643f: shr rsi,0x3
0x16443: shl r14,cl
0x16446: and esi,0x18
0x16449: or qword ptr [rbx+rsi*1+0x0],r14
0x1644d: add rax,0x1
0x16451: cmp rax,0x100
0x16457: jnz 0x1642b
0x16459: jmp 0x15f84
0x1645e: lea rsi,[rip+0xc3d8]
0x16465: mov rdi,r12
0x16468: call 0x26d0
0x1646d: test eax,eax
0x1646f: jnz 0x164ea
0x16471: call 0x29f0
0x16476: xor ecx,ecx
0x16478: test rbp,rbp
0x1647b: mov rsi,qword ptr [rax]
0x1647e: mov edx,0x1
0x16483: jnz 0x164af
0x16485: cmp [rsi+rcx*2+0x0],0x0
0x1648a: jns 0x1649d
0x1648c: mov rax,rcx
0x1648f: mov rdi,rdx
0x16492: sar rax,0x6
0x16496: shl rdi,cl
0x16499: or qword ptr [rbx+rax*8+0x0],rdi
0x1649d: add rcx,0x1
0x164a1: cmp rcx,0x100
0x164a8: jnz 0x16485
0x164aa: jmp 0x15f84
0x164af: xor eax,eax
0x164b1: mov edi,0x1
0x164b6: cmp [rsi+rax*2+0x0],0x0
0x164bb: jns 0x164d9
0x164bd: movzx ecx,byte ptr [rbp+rax*1+0x0]
0x164c2: mov r9,rdi
0x164c5: mov rdx,rcx
0x164c8: and ecx,0x3f
0x164cb: shr rdx,0x3
0x164cf: shl r9,cl
0x164d2: and edx,0x18
0x164d5: or qword ptr [rbx+rdx*1+0x0],r9
0x164d9: add rax,0x1
0x164dd: cmp rax,0x100
0x164e3: jnz 0x164b6
0x164e5: jmp 0x15f84
0x164ea: lea rsi,[rip+0xc352]
0x164f1: mov rdi,r12
0x164f4: call 0x26d0
0x164f9: test eax,eax
0x164fb: jnz 0x16574
0x164fd: call 0x29f0
0x16502: xor ecx,ecx
0x16504: test rbp,rbp
0x16507: mov rsi,qword ptr [rax]
0x1650a: mov edx,0x1
0x1650f: jnz 0x1653a
0x16511: test [rsi+rcx*2+0x0],0x4
0x16515: jz 0x16528
0x16517: mov rax,rcx
0x1651a: mov rdi,rdx
0x1651d: sar rax,0x6
0x16521: shl rdi,cl
0x16524: or qword ptr [rbx+rax*8+0x0],rdi
0x16528: add rcx,0x1
0x1652c: cmp rcx,0x100
0x16533: jnz 0x16511
0x16535: jmp 0x15f84
0x1653a: xor eax,eax
0x1653c: mov edi,0x1
0x16541: test [rsi+rax*2+0x0],0x4
0x16545: jz 0x16563
0x16547: movzx ecx,byte ptr [rbp+rax*1+0x0]
0x1654c: mov r14,rdi
0x1654f: mov rdx,rcx
0x16552: and ecx,0x3f
0x16555: shr rdx,0x3
0x16559: shl r14,cl
0x1655c: and edx,0x18
0x1655f: or qword ptr [rbx+rdx*1+0x0],r14
0x16563: add rax,0x1
0x16567: cmp rax,0x100
0x1656d: jnz 0x16541
0x1656f: jmp 0x15f84
0x16574: lea rsi,[rip+0xc2ce]
0x1657b: mov rdi,r12
0x1657e: call 0x26d0
0x16583: test eax,eax
0x16585: jnz 0x16600
0x16587: call 0x29f0
0x1658c: xor ecx,ecx
0x1658e: test rbp,rbp
0x16591: mov rsi,qword ptr [rax]
0x16594: mov edx,0x1
0x16599: jnz 0x165c5
0x1659b: test [rsi+rcx*2+0x1],0x10
0x165a0: jz 0x165b3
0x165a2: mov rax,rcx
0x165a5: mov rdi,rdx
0x165a8: sar rax,0x6
0x165ac: shl rdi,cl
0x165af: or qword ptr [rbx+rax*8+0x0],rdi
0x165b3: add rcx,0x1
0x165b7: cmp rcx,0x100
0x165be: jnz 0x1659b
0x165c0: jmp 0x15f84
0x165c5: xor eax,eax
0x165c7: mov edi,0x1
0x165cc: test [rsi+rax*2+0x1],0x10
0x165d1: jz 0x165ef
0x165d3: movzx ecx,byte ptr [rbp+rax*1+0x0]
0x165d8: mov r9,rdi
0x165db: mov rdx,rcx
0x165de: and ecx,0x3f
0x165e1: shr rdx,0x3
0x165e5: shl r9,cl
0x165e8: and edx,0x18
0x165eb: or qword ptr [rbx+rdx*1+0x0],r9
0x165ef: add rax,0x1
0x165f3: cmp rax,0x100
0x165f9: jnz 0x165cc
0x165fb: jmp 0x15f84
0x16600: mov eax,0x4
0x16605: jmp 0x15f86
0x1660a: xor eax,eax
0x1660c: test [rdx+rax*2+0x1],0x8
0x16611: jz 0x1662f
0x16613: movzx ecx,byte ptr [rbp+rax*1+0x0]
0x16618: mov r14,rdi
0x1661b: mov rsi,rcx
0x1661e: and ecx,0x3f
0x16621: shr rsi,0x3
0x16625: shl r14,cl
0x16628: and esi,0x18
0x1662b: or qword ptr [rbx+rsi*1+0x0],r14
0x1662f: add rax,0x1
0x16633: cmp rax,0x100
0x16639: jnz 0x1660c
0x1663b: jmp 0x15f84
0x16640: xor edx,edx
0x16642: test [rax+rdx*2+0x1],0x1
0x16647: jz 0x16665
0x16649: movzx ecx,byte ptr [rbp+rdx*1+0x0]
0x1664e: mov r9,rdi
0x16651: mov rsi,rcx
0x16654: and ecx,0x3f
0x16657: shr rsi,0x3
0x1665b: shl r9,cl
0x1665e: and esi,0x18
0x16661: or qword ptr [rbx+rsi*1+0x0],r9
0x16665: add rdx,0x1
0x16669: cmp rdx,0x100
0x16670: jnz 0x16642
0x16672: jmp 0x15f84
0x16677: xor eax,eax
0x16679: test [rdx+rax*2+0x1],0x40
0x1667e: jz 0x1669c
0x16680: movzx ecx,byte ptr [rbp+rax*1+0x0]
0x16685: mov r14,rdi
0x16688: mov rsi,rcx
0x1668b: and ecx,0x3f
0x1668e: shr rsi,0x3
0x16692: shl r14,cl
0x16695: and esi,0x18
0x16698: or qword ptr [rbx+rsi*1+0x0],r14
0x1669c: add rax,0x1
0x166a0: cmp rax,0x100
0x166a6: jnz 0x16679
0x166a8: jmp 0x15f84
0x166b0: push r15
0x166b2: push r14
0x166b4: mov r14,rdx
0x166b7: push r13
0x166b9: push r12
0x166bb: mov r13,rcx
0x166be: push rbp
0x166bf: push rbx
0x166c0: mov rbp,rdi
0x166c3: mov edi,0x20
0x166c8: mov r12d,r8d
0x166cb: sub rsp,0x58
0x166cf: mov qword ptr [rsp],rsi
0x166d3: mov esi,0x1
0x166d8: mov qword ptr [rsp+0x8],r9
0x166dd: mov rax,0x28
0x166e6: mov qword ptr [rsp+0x48],rax
0x166eb: xor eax,eax
0x166ed: mov [rsp+0x18],0x0
0x166f6: call 0x26b0
0x166fb: test rax,rax
0x166fe: jz 0x168c0
0x16704: mov esi,0x1
0x16709: mov edi,0x50
0x1670e: mov rbx,rax
0x16711: call 0x26b0
0x16716: test rax,rax
0x16719: mov r15,rax
0x1671c: jz 0x168d0
0x16722: movzx eax,byte ptr [rax+0x20]
0x16726: sub rsp,0x8
0x1672a: mov edx,r12d
0x1672d: push 0x0
0x1672f: and edx,0x1
0x16732: mov rdi,qword ptr [rsp+0x10]
0x16737: lea rcx,[r15+0x48]
0x1673b: mov r9,r14
0x1673e: mov rsi,rbx
0x16741: lea r8,[rsp+0x28]
0x16746: and eax,0xfe
0x16749: or eax,edx
0x1674b: lea rdx,[r15+0x18]
0x1674f: mov byte ptr [r15+0x20],al
0x16753: call 0x15ea0
0x16758: test eax,eax
0x1675a: pop rdx
0x1675b: pop rcx
0x1675c: jnz 0x168f0
0x16762: movsx rcx,byte ptr [r13+0x0]
0x16767: mov esi,0x1
0x1676c: test cl,cl
0x1676e: jz 0x167aa
0x16770: lea rax,[rcx+0x3f]
0x16774: test rcx,rcx
0x16777: mov rdx,rcx
0x1677a: cmovns rax,rcx
0x1677e: sar rdx,0x3f
0x16782: add r13,0x1
0x16786: shr rdx,0x3a
0x1678a: sar rax,0x6
0x1678e: add rcx,rdx
0x16791: and ecx,0x3f
0x16794: sub rcx,rdx
0x16797: mov rdx,rsi
0x1679a: shl rdx,cl
0x1679d: movsx rcx,byte ptr [r13+0x0]
0x167a2: or qword ptr [rbx+rax*8+0x0],rdx
0x167a6: test cl,cl
0x167a8: jnz 0x16770
0x167aa: test r12b,r12b
0x167ad: jz 0x167c2
0x167af: lea rdx,[rbx+0x20]
0x167b3: mov rax,rbx
0x167b6: not qword ptr [rax]
0x167b9: add rax,0x8
0x167bd: cmp rdx,rax
0x167c0: jnz 0x167b6
0x167c2: cmp [rbp+0xb4],0x1
0x167c9: jle 0x167e3
0x167cb: mov rcx,qword ptr [rbp+0x78]
0x167cf: xor eax,eax
0x167d1: mov rdx,qword ptr [rcx+rax*1+0x0]
0x167d5: and qword ptr [rbx+rax*1+0x0],rdx
0x167d9: add rax,0x8
0x167dd: cmp rax,0x20
0x167e1: jnz 0x167d1
0x167e3: lea r9,[rsp+0x20]
0x167e8: lea r12,[rbp+0x70]
0x167ec: lea r13,[rbp+0x80]
0x167f3: xor ecx,ecx
0x167f5: xor edx,edx
0x167f7: mov [rsp+0x28],0x3
0x167fc: mov r8,r9
0x167ff: mov rsi,r13
0x16802: mov rdi,r12
0x16805: mov qword ptr [rsp+0x20],rbx
0x1680a: mov qword ptr [rsp],r9
0x1680e: call 0x13360
0x16813: test rax,rax
0x16816: mov r14,rax
0x16819: jz 0x168b0
0x1681f: cmp [rbp+0xb4],0x1
0x16826: jle 0x168a0
0x16828: or [rbp+0xb0],0x2
0x1682f: mov r9,qword ptr [rsp]
0x16833: xor ecx,ecx
0x16835: xor edx,edx
0x16837: mov rsi,r13
0x1683a: mov rdi,r12
0x1683d: mov [rsp+0x28],0x6
0x16842: mov qword ptr [rsp+0x20],r15
0x16847: mov r8,r9
0x1684a: call 0x13360
0x1684f: test rax,rax
0x16852: jz 0x168b0
0x16854: lea r8,[rsp+0x30]
0x16859: mov rdx,r14
0x1685c: mov rcx,rax
0x1685f: mov rsi,r13
0x16862: mov rdi,r12
0x16865: mov [rsp+0x38],0xa
0x1686a: call 0x13360
0x1686f: mov r14,rax
0x16872: mov rdi,qword ptr [rsp+0x48]
0x16877: xor rdi,0x28
0x16880: mov rax,r14
0x16883: jnz 0x16915
0x16889: add rsp,0x58
0x1688d: pop rbx
0x1688e: pop rbp
0x1688f: pop r12
0x16891: pop r13
0x16893: pop r14
0x16895: pop r15
0x16897: ret
0x16898: nop qword ptr [rax+rax*1+0x0]
0x168a0: mov rdi,r15
0x168a3: call 0x11dc0
0x168a8: jmp 0x16872
0x168aa: nop qword ptr [rax+rax*1+0x0]
0x168b0: mov rdi,rbx
0x168b3: call 0x2a10
0x168b8: mov rdi,r15
0x168bb: call 0x11dc0
0x168c0: mov rax,qword ptr [rsp+0x8]
0x168c5: xor r14d,r14d
0x168c8: mov [rax],0xc
0x168ce: jmp 0x16872
0x168d0: mov rdi,rbx
0x168d3: xor r14d,r14d
0x168d6: call 0x2a10
0x168db: mov rax,qword ptr [rsp+0x8]
0x168e0: mov [rax],0xc
0x168e6: jmp 0x16872
0x168e8: nop qword ptr [rax+rax*1+0x0]
0x168f0: mov rdi,rbx
0x168f3: mov dword ptr [rsp],eax
0x168f6: xor r14d,r14d
0x168f9: call 0x2a10
0x168fe: mov rdi,r15
0x16901: call 0x11dc0
0x16906: mov rdi,qword ptr [rsp+0x8]
0x1690b: mov eax,dword ptr [rsp]
0x1690e: mov dword ptr [rdi],eax
0x16910: jmp 0x16872
0x16915: call 0x2560
0x16920: push r15
0x16922: push r14
0x16924: mov rax,rdi
0x16927: push r13
0x16929: push r12
0x1692b: push rbp
0x1692c: push rbx
0x1692d: xor ebx,ebx
0x1692f: mov rbp,rcx
0x16932: sub rsp,0x178
0x16939: mov rax,qword ptr [rax]
0x1693c: mov qword ptr [rsp+0x30],rdi
0x16941: mov qword ptr [rsp+0x20],rsi
0x16946: mov rdi,0x28
0x1694f: mov qword ptr [rsp+0x168],rdi
0x16957: xor edi,edi
0x16959: cmp [rax+0xb4],0x1
0x16960: mov qword ptr [rsp+0x28],rdx
0x16965: mov qword ptr [rsp+0x8],rax
0x1696a: jnz 0x16983
0x1696c: mov rax,qword ptr [rsp+0x30]
0x16971: mov rax,qword ptr [rax+0x18]
0x16975: mov rbx,rax
0x16978: mov qword ptr [rsp],rax
0x1697c: shr rbx,0x16
0x16980: and ebx,0x1
0x16983: mov rax,qword ptr [rsp+0x20]
0x16988: cmp [rax],0x0
0x1698c: jle 0x16d9d
0x16992: lea rax,[rsp+0x58]
0x16997: mov [rsp],0x0
0x1699f: mov qword ptr [rsp+0x40],rax
0x169a4: lea rax,[rsp+0x54]
0x169a9: mov qword ptr [rsp+0x48],rax
0x169ae: lea rax,[rsp+0x60]
0x169b3: mov qword ptr [rsp+0x38],rax
0x169b8: jmp 0x169fe
0x169ba: nop qword ptr [rax+rax*1+0x0]
0x169c0: cmp eax,0x3
0x169c3: jz 0x16cb6
0x169c9: cmp eax,0x6
0x169cc: jz 0x16b58
0x169d2: and edx,0xfd
0x169d5: cmp dl,0x5
0x169d8: jz 0x16dd4
0x169de: cmp eax,0x2
0x169e1: jz 0x16d34
0x169e7: mov rdi,qword ptr [rsp+0x20]
0x169ec: add [rsp],0x1
0x169f1: mov rax,qword ptr [rsp]
0x169f5: cmp rax,qword ptr [rdi]
0x169f8: jnl 0x16d9d
0x169fe: mov rax,qword ptr [rsp+0x28]
0x16a03: mov rdi,qword ptr [rsp]
0x16a07: mov rax,qword ptr [rax]
0x16a0a: mov r12,qword ptr [rax+rdi*8+0x0]
0x16a0e: mov rax,qword ptr [rsp+0x8]
0x16a13: mov rcx,qword ptr [rax]
0x16a16: mov rax,r12
0x16a19: shl rax,0x4
0x16a1d: mov qword ptr [rsp+0x10],rax
0x16a22: lea rsi,[rcx+rax*1+0x0]
0x16a26: movzx eax,byte ptr [rsi+0x8]
0x16a2a: cmp eax,0x1
0x16a2d: mov edx,eax
0x16a2f: jnz 0x169c0
0x16a31: movzx r13d,byte ptr [rsi]
0x16a35: test ebx,ebx
0x16a37: mov [rbp+r13*1+0x0],0x1
0x16a3d: jz 0x16a50
0x16a3f: call 0x29e0
0x16a44: mov rax,qword ptr [rax]
0x16a47: movsxd rax,dword ptr [rax+r13*4+0x0]
0x16a4b: mov [rbp+rax*1+0x0],0x1
0x16a50: mov rax,qword ptr [rsp+0x30]
0x16a55: test [rax+0x1a],0x40
0x16a59: jz 0x169e7
0x16a5b: mov rsi,qword ptr [rsp+0x8]
0x16a60: cmp [rsi+0xb4],0x1
0x16a67: jle 0x169e7
0x16a6d: mov rax,qword ptr [rsi]
0x16a70: mov rdi,qword ptr [rsp+0x10]
0x16a75: movzx edx,byte ptr [rax+rdi*1+0x0]
0x16a79: mov byte ptr [rsp+0x60],dl
0x16a7d: lea rdx,[r12+0x1]
0x16a82: cmp qword ptr [rsi+0x10],rdx
0x16a86: jbe 0x16dc6
0x16a8c: lea rcx,[rax+rdi*1+0x10]
0x16a91: mov eax,dword ptr [rcx+0x8]
0x16a94: and eax,0x2000ff
0x16a99: cmp eax,0x200001
0x16a9e: jnz 0x16dc6
0x16aa4: add rdi,0x20
0x16aa8: mov r13,rdi
0x16aab: mov rdi,qword ptr [rsp+0x38]
0x16ab0: lea rax,[rdi+0x1]
0x16ab4: jmp 0x16adb
0x16ab6: nop qword ptr [rax+rax*1+0x0]
0x16ac0: mov rcx,qword ptr [rsi]
0x16ac3: add rcx,r13
0x16ac6: add r13,0x10
0x16aca: mov edx,dword ptr [rcx+0x8]
0x16acd: and edx,0x2000ff
0x16ad3: cmp edx,0x200001
0x16ad9: jnz 0x16af4
0x16adb: movzx edx,byte ptr [rcx]
0x16ade: add rax,0x1
0x16ae2: mov byte ptr [rax-0x1],dl
0x16ae5: mov rdx,rax
0x16ae8: sub rdx,rdi
0x16aeb: add rdx,r12
0x16aee: cmp qword ptr [rsi+0x10],rdx
0x16af2: jnbe 0x16ac0
0x16af4: mov rsi,qword ptr [rsp+0x38]
0x16af9: mov rcx,qword ptr [rsp+0x40]
0x16afe: mov rdi,qword ptr [rsp+0x48]
0x16b03: sub rax,rsi
0x16b06: mov [rcx],0x0
0x16b0d: mov r12,rax
0x16b10: mov rdx,rax
0x16b13: call 0x101e0
0x16b18: cmp r12,rax
0x16b1b: jnz 0x169e7
0x16b21: mov edi,dword ptr [rsp+0x54]
0x16b25: call 0x28e0
0x16b2a: mov rdx,qword ptr [rsp+0x40]
0x16b2f: mov rdi,qword ptr [rsp+0x38]
0x16b34: mov esi,eax
0x16b36: call 0x2790
0x16b3b: cmp rax,0xffffffff
0x16b3f: jz 0x169e7
0x16b45: movzx eax,byte ptr [rsp+0x60]
0x16b4a: mov [rbp+rax*1+0x0],0x1
0x16b4f: jmp 0x169e7
0x16b54: nop qword ptr [rax+0x0]
0x16b58: mov rax,qword ptr [rsp+0x8]
0x16b5d: mov r12,qword ptr [rsi]
0x16b60: cmp [rax+0xb4],0x1
0x16b67: jle 0x16b8d
0x16b69: cmp [r12+0x48],0x0
0x16b6f: jnz 0x16c6f
0x16b75: test [r12+0x20],0x1
0x16b7b: jnz 0x16c6f
0x16b81: cmp [r12+0x40],0x0
0x16b87: jnz 0x16c6f
0x16b8d: xor r13d,r13d
0x16b90: cmp [r12+0x28],0x0
0x16b96: jle 0x169e7
0x16b9c: mov r15,r12
0x16b9f: mov r14,qword ptr [rsp+0x40]
0x16ba4: mov r12,rbp
0x16ba7: mov rbp,r13
0x16baa: mov r13d,ebx
0x16bad: jmp 0x16bbd
0x16baf: add rbp,0x1
0x16bb3: cmp rbp,qword ptr [r15+0x28]
0x16bb7: jnl 0x16c64
0x16bbd: mov [r14],0x0
0x16bc4: mov rax,qword ptr [r15]
0x16bc7: mov rdx,r14
0x16bca: mov rdi,qword ptr [rsp+0x38]
0x16bcf: lea rbx,[rbp*4+0x0]
0x16bd7: mov esi,dword ptr [rax+rbp*4+0x0]
0x16bda: call 0x2790
0x16bdf: cmp rax,0xffffffff
0x16be3: jz 0x16c0f
0x16be5: movzx edx,byte ptr [rsp+0x60]
0x16bea: test r13d,r13d
0x16bed: mov [r12+rdx*1+0x0],0x1
0x16bf2: mov qword ptr [rsp+0x10],rdx
0x16bf7: jz 0x16c0f
0x16bf9: call 0x29e0
0x16bfe: mov rdx,qword ptr [rsp+0x10]
0x16c03: mov rax,qword ptr [rax]
0x16c06: movsxd rax,dword ptr [rax+rdx*4+0x0]
0x16c0a: mov [r12+rax*1+0x0],0x1
0x16c0f: mov rax,qword ptr [rsp+0x30]
0x16c14: test [rax+0x1a],0x40
0x16c18: jz 0x16baf
0x16c1a: mov rax,qword ptr [rsp+0x8]
0x16c1f: cmp [rax+0xb4],0x1
0x16c26: jle 0x16baf
0x16c28: mov rax,qword ptr [r15]
0x16c2b: mov edi,dword ptr [rax+rbx*1+0x0]
0x16c2e: call 0x28e0
0x16c33: mov rdi,qword ptr [rsp+0x38]
0x16c38: mov rdx,r14
0x16c3b: mov esi,eax
0x16c3d: call 0x2790
0x16c42: cmp rax,0xffffffff
0x16c46: jz 0x16baf
0x16c4c: movzx eax,byte ptr [rsp+0x60]
0x16c51: add rbp,0x1
0x16c55: mov [r12+rax*1+0x0],0x1
0x16c5a: cmp rbp,qword ptr [r15+0x28]
0x16c5e: jl 0x16bbd
0x16c64: mov ebx,r13d
0x16c67: mov rbp,r12
0x16c6a: jmp 0x169e7
0x16c6f: mov r12,qword ptr [rsp+0x40]
0x16c74: mov r13,qword ptr [rsp+0x48]
0x16c79: mov [rsp+0x54],0x0
0x16c7e: nop 
0x16c80: xor edi,edi
0x16c82: mov [r12],0x0
0x16c8a: mov rcx,r12
0x16c8d: mov edx,0x1
0x16c92: mov rsi,r13
0x16c95: call 0x101e0
0x16c9a: cmp rax,0xfffffffe
0x16c9e: jnz 0x16caa
0x16ca0: movzx eax,byte ptr [rsp+0x54]
0x16ca5: mov [rbp+rax*1+0x0],0x1
0x16caa: add [rsp+0x54],0x1
0x16caf: jnz 0x16c80
0x16cb1: jmp 0x169e7
0x16cb6: mov r13,rbp
0x16cb9: xor r12d,r12d
0x16cbc: mov [rsp+0x18],0x0
0x16cc5: mov rax,qword ptr [rsp+0x10]
0x16cca: mov rsi,qword ptr [rsp+0x18]
0x16ccf: xor r14d,r14d
0x16cd2: mov rax,qword ptr [rcx+rax*1+0x0]
0x16cd6: mov r15,qword ptr [rax+rsi*1+0x0]
0x16cda: nop qword ptr [rax+rax*1+0x0]
0x16ce0: bt r15,r14
0x16ce4: jnb 0x16d05
0x16ce6: test ebx,ebx
0x16ce8: mov [r13+r14*1+0x0],0x1
0x16cee: jz 0x16d05
0x16cf0: call 0x29e0
0x16cf5: mov rax,qword ptr [rax]
0x16cf8: lea rdx,[r12+r14*1+0x0]
0x16cfc: movsxd rax,dword ptr [rax+rdx*4+0x0]
0x16d00: mov [rbp+rax*1+0x0],0x1
0x16d05: add r14,0x1
0x16d09: cmp r14,0x40
0x16d0d: jnz 0x16ce0
0x16d0f: add r12,0x40
0x16d13: add [rsp+0x18],0x8
0x16d19: add r13,0x40
0x16d1d: cmp r12,0x100
0x16d24: jz 0x169e7
0x16d2a: mov rax,qword ptr [rsp+0x8]
0x16d2f: mov rcx,qword ptr [rax]
0x16d32: jmp 0x16cc5
0x16d34: movdqa xmm0,[rip+0xc2c4]
0x16d3c: movups [rbp+0x0],xmm0
0x16d40: movups [rbp+0x10],xmm0
0x16d44: movups [rbp+0x20],xmm0
0x16d48: movups [rbp+0x30],xmm0
0x16d4c: movups [rbp+0x40],xmm0
0x16d50: movups [rbp+0x50],xmm0
0x16d54: movups [rbp+0x60],xmm0
0x16d58: movups [rbp+0x70],xmm0
0x16d5c: movups [rbp+0x80],xmm0
0x16d63: movups [rbp+0x90],xmm0
0x16d6a: movups [rbp+0xa0],xmm0
0x16d71: movups [rbp+0xb0],xmm0
0x16d78: movups [rbp+0xc0],xmm0
0x16d7f: movups [rbp+0xd0],xmm0
0x16d86: movups [rbp+0xe0],xmm0
0x16d8d: movups [rbp+0xf0],xmm0
0x16d94: mov rax,qword ptr [rsp+0x30]
0x16d99: or [rax+0x38],0x1
0x16d9d: mov rax,qword ptr [rsp+0x168]
0x16da5: xor rax,0x28
0x16dae: jnz 0x16e42
0x16db4: add rsp,0x178
0x16dbb: pop rbx
0x16dbc: pop rbp
0x16dbd: pop r12
0x16dbf: pop r13
0x16dc1: pop r14
0x16dc3: pop r15
0x16dc5: ret
0x16dc6: mov rax,qword ptr [rsp+0x38]
0x16dcb: add rax,0x1
0x16dcf: jmp 0x16af4
0x16dd4: movdqa xmm0,[rip+0xc224]
0x16ddc: cmp eax,0x2
0x16ddf: movups [rbp+0x0],xmm0
0x16de3: movups [rbp+0x10],xmm0
0x16de7: movups [rbp+0x20],xmm0
0x16deb: movups [rbp+0x30],xmm0
0x16def: movups [rbp+0x40],xmm0
0x16df3: movups [rbp+0x50],xmm0
0x16df7: movups [rbp+0x60],xmm0
0x16dfb: movups [rbp+0x70],xmm0
0x16dff: movups [rbp+0x80],xmm0
0x16e06: movups [rbp+0x90],xmm0
0x16e0d: movups [rbp+0xa0],xmm0
0x16e14: movups [rbp+0xb0],xmm0
0x16e1b: movups [rbp+0xc0],xmm0
0x16e22: movups [rbp+0xd0],xmm0
0x16e29: movups [rbp+0xe0],xmm0
0x16e30: movups [rbp+0xf0],xmm0
0x16e37: jnz 0x16d9d
0x16e3d: jmp 0x16d94
0x16e42: call 0x2560
0x16ee3: nop qword ptr [rax+rax*1+0x0]
0x16f08: nop qword ptr [rax+rax*1+0x0]
0x16f4f: nop 
0x16f6d: nop qword ptr [rax]
0x16f7d: nop qword ptr [rax]
0x16fb5: nop qword ptr [rax]
0x16fd1: nop qword ptr [rax+0x0]
0x16fe9: nop qword ptr [rax+0x0]
0x17294: nop qword ptr [rax+0x0]
0x1753b: nop qword ptr [rax+rax*1+0x0]
0x175c9: nop qword ptr [rax+0x0]
0x175e4: nop qword ptr [rax+0x0]
0x17601: nop qword ptr [rax+0x0]
0x1765d: nop qword ptr [rax]
0x1767d: nop qword ptr [rax]
0x176aa: nop qword ptr [rax+rax*1+0x0]
0x1792b: nop qword ptr [rax+rax*1+0x0]
0x17a69: nop qword ptr [rax+0x0]
0x17b19: nop qword ptr [rax+0x0]
0x17b6b: nop qword ptr [rax+rax*1+0x0]
0x17baf: nop 
0x17c46: nop qword ptr [rax+rax*1+0x0]
0x17d1e: nop 
0x17d83: nop qword ptr [rax+rax*1+0x0]
0x17d9a: nop qword ptr [rax+rax*1+0x0]
0x17e27: nop qword ptr [rax+rax*1+0x0]
0x17e38: nop qword ptr [rax+rax*1+0x0]
0x17eba: nop qword ptr [rax+rax*1+0x0]
0x17eff: nop 
0x17f82: nop qword ptr [rax+rax*1+0x0]
0x17fd9: mov rdi,qword ptr [rbp-0x88]
0x17fe0: test rdi,rdi
0x17fe3: jz 0x17fac
0x17fe5: call 0x15d60
0x17fea: jmp 0x17fac
0x18085: mov rdi,qword ptr [rbp-0x60]
0x18089: call 0x2a10
0x1808e: cmp [rbp-0xc9],0x0
0x18095: jz 0x17d08
0x1814a: nop qword ptr [rax+rax*1+0x0]
0x181f9: nop qword ptr [rax+0x0]
0x18207: nop qword ptr [rax+rax*1+0x0]
0x18280: mov rdi,qword ptr [rbx+0xd8]
0x18287: call 0x2a10
0x1828c: mov eax,0xc
0x18291: jmp 0x1813b
0x18321: nop qword ptr [rax+0x0]
0x183d9: nop qword ptr [rax+0x0]
0x184fb: nop qword ptr [rax+rax*1+0x0]
0x185f1: nop qword ptr [rax+0x0]
0x1860c: nop qword ptr [rax+0x0]
0x18641: nop qword ptr [rax+0x0]
0x186ac: nop qword ptr [rax+0x0]
0x18833: nop qword ptr [rax+rax*1+0x0]
0x188cb: nop qword ptr [rax+rax*1+0x0]
0x189ca: nop qword ptr [rax+rax*1+0x0]
0x18a09: mov eax,0xc
0x18a0e: jmp 0x18618
0x18a13: nop qword ptr [rax+rax*1+0x0]
0x18a3f: nop 
0x18a85: nop qword ptr [rax]
0x18ae3: nop qword ptr [rax+rax*1+0x0]
0x18c1b: nop qword ptr [rax+rax*1+0x0]
0x18cb6: nop qword ptr [rax+rax*1+0x0]
0x18d02: nop qword ptr [rax+rax*1+0x0]
0x18d13: nop qword ptr [rax+rax*1+0x0]
0x18d6e: nop 
0x18e99: nop qword ptr [rax+0x0]
0x18ff6: nop qword ptr [rax+rax*1+0x0]
0x1902b: nop qword ptr [rax+rax*1+0x0]
0x19041: nop qword ptr [rax+0x0]
0x1907b: nop qword ptr [rax+rax*1+0x0]
0x190b4: mov eax,0xc
0x190b9: jmp 0x19095
0x1920b: test r12,r12
0x1920e: mov [rsp+0x5c],0x1
0x19216: jnz 0x19c39
0x195b8: nop qword ptr [rax+rax*1+0x0]
0x195dc: nop qword ptr [rax+0x0]
0x19622: nop qword ptr [rax+rax*1+0x0]
0x19667: mov rax,qword ptr [rsp+0x78]
0x1966c: movzx eax,byte ptr [rax+rsi*1+0x0]
0x197c1: nop qword ptr [rax+0x0]
0x198ee: nop 
0x19b5e: nop 
0x19bbb: nop qword ptr [rax+rax*1+0x0]
0x19c05: nop qword ptr [rax]
0x19c66: nop qword ptr [rax+rax*1+0x0]
0x19cad: nop qword ptr [rax]
0x19cdc: nop qword ptr [rax+0x0]
0x19d55: nop qword ptr [rax]
0x19f14: nop qword ptr [rax+0x0]
0x19f8d: nop qword ptr [rax]
0x19fce: nop 
0x1a03e: nop 
0x1a04d: nop qword ptr [rax]
0x1a06b: nop qword ptr [rax+rax*1+0x0]
0x1a07a: nop qword ptr [rax+rax*1+0x0]
0x1a0a8: nop qword ptr [rax+rax*1+0x0]
0x1a10c: nop qword ptr [rax+0x0]
0x1a128: mov rdi,r12
0x1a12b: call 0x2a10
0x1a1b1: nop qword ptr [rax+0x0]
0x1a547: nop qword ptr [rax+rax*1+0x0]
0x1a5de: nop 
0x1a6fe: nop 
0x1a7eb: call 0x2560
0x1a8b1: nop qword ptr [rax+0x0]
0x1a9a2: nop qword ptr [rax+rax*1+0x0]
0x1aaa1: nop qword ptr [rax+0x0]
0x1aaca: nop qword ptr [rax+rax*1+0x0]
0x1aaec: nop qword ptr [rax+0x0]
0x1ab6d: nop qword ptr [rax]
0x1ab7e: nop 
0x1abf8: nop qword ptr [rax+rax*1+0x0]
0x1ac78: nop qword ptr [rax+rax*1+0x0]
0x1ac9c: nop qword ptr [rax+0x0]
0x1ad31: nop qword ptr [rax+0x0]
0x1adab: nop qword ptr [rax+rax*1+0x0]
0x1adc1: nop qword ptr [rax+0x0]
0x1add2: nop qword ptr [rax+rax*1+0x0]
0x1ae19: nop qword ptr [rax+0x0]
0x1af8c: nop qword ptr [rax+0x0]
0x1afa7: nop qword ptr [rax+rax*1+0x0]
0x1b040: push r14
0x1b042: push r13
0x1b044: mov r10,rsi
0x1b047: push r12
0x1b049: push rbp
0x1b04a: movsxd r11,ecx
0x1b04d: push rbx
0x1b04e: mov rbp,rdx
0x1b051: mov rbx,rdi
0x1b054: sub rsp,0x20
0x1b058: mov r12,qword ptr [rsi+0x48]
0x1b05c: mov rax,0x28
0x1b065: mov qword ptr [rsp+0x18],rax
0x1b06a: xor eax,eax
0x1b06c: cmp [rsi+0x90],0x1
0x1b073: jz 0x1b0c8
0x1b075: mov rsi,r12
0x1b078: mov rdi,r10
0x1b07b: call 0x125f0
0x1b080: cmp eax,0x1
0x1b083: jle 0x1b0c8
0x1b085: mov rdx,qword ptr [r10+0x10]
0x1b089: cwde 
0x1b08b: mov [rbx],0x1
0x1b091: add rax,r12
0x1b094: mov edx,dword ptr [rdx+r12*4+0x0]
0x1b098: mov dword ptr [rbx+0x8],edx
0x1b09b: mov qword ptr [r10+0x48],rax
0x1b09f: xor eax,eax
0x1b0a1: mov rcx,qword ptr [rsp+0x18]
0x1b0a6: xor rcx,0x28
0x1b0af: jnz 0x1b298
0x1b0b5: add rsp,0x20
0x1b0b9: pop rbx
0x1b0ba: pop rbp
0x1b0bb: pop r12
0x1b0bd: pop r13
0x1b0bf: pop r14
0x1b0c1: ret
0x1b0c2: nop qword ptr [rax+rax*1+0x0]
0x1b0c8: movzx eax,byte ptr [rbp+0x8]
0x1b0cc: add r11,r12
0x1b0cf: mov qword ptr [r10+0x48],r11
0x1b0d3: mov edx,eax
0x1b0d5: and edx,0xfb
0x1b0d8: cmp dl,0x1a
0x1b0db: jz 0x1b100
0x1b0dd: cmp al,0x1c
0x1b0df: jz 0x1b100
0x1b0e1: cmp al,0x16
0x1b0e3: jnz 0x1b0ee
0x1b0e5: test r9b,r9b
0x1b0e8: jz 0x1b232
0x1b0ee: movzx eax,byte ptr [rbp+0x0]
0x1b0f2: mov [rbx],0x0
0x1b0f8: mov byte ptr [rbx+0x8],al
0x1b0fb: xor eax,eax
0x1b0fd: jmp 0x1b0a1
0x1b0ff: nop 
0x1b100: mov r12,qword ptr [r10+0x68]
0x1b104: cmp r11,r12
0x1b107: jnl 0x1b228
0x1b10d: movzx r13d,byte ptr [rbp+0x0]
0x1b112: xor r8d,r8d
0x1b115: jmp 0x1b142
0x1b117: nop qword ptr [rax+rax*1+0x0]
0x1b120: mov rax,qword ptr [rbx+0x8]
0x1b124: mov byte ptr [rax+r8*1+0x0],r9b
0x1b128: add r8,0x1
0x1b12c: cmp r8,0x20
0x1b130: jz 0x1b228
0x1b136: movzx eax,byte ptr [rbp+0x8]
0x1b13a: mov r11,qword ptr [r10+0x48]
0x1b13e: mov r12,qword ptr [r10+0x68]
0x1b142: cmp al,0x1e
0x1b144: movsxd r14,r8d
0x1b147: jz 0x1b1b0
0x1b149: mov rdx,qword ptr [r10+0x8]
0x1b14d: lea rax,[r11+0x1]
0x1b151: mov qword ptr [r10+0x48],rax
0x1b155: movzx r9d,byte ptr [rdx+r11*1+0x0]
0x1b15a: cmp rax,r12
0x1b15d: jnl 0x1b228
0x1b163: cmp r13b,r9b
0x1b166: jnz 0x1b120
0x1b168: mov rdx,qword ptr [r10+0x8]
0x1b16c: cmp [rdx+rax*1+0x0],0x5d
0x1b170: jnz 0x1b120
0x1b172: add rax,0x1
0x1b176: mov qword ptr [r10+0x48],rax
0x1b17a: mov rax,qword ptr [rbx+0x8]
0x1b17e: mov [rax+r14*1+0x0],0x0
0x1b183: movzx eax,byte ptr [rbp+0x8]
0x1b187: cmp al,0x1c
0x1b189: jz 0x1b28b
0x1b18f: cmp al,0x1e
0x1b191: jz 0x1b27e
0x1b197: cmp al,0x1a
0x1b199: jz 0x1b271
0x1b19f: xor eax,eax
0x1b1a1: jmp 0x1b0a1
0x1b1a6: nop qword ptr [rax+rax*1+0x0]
0x1b1b0: cmp [r10+0x8b],0x0
0x1b1b8: jz 0x1b149
0x1b1ba: cmp [r10+0x8c],0x0
0x1b1c2: jz 0x1b258
0x1b1c8: cmp r11,qword ptr [r10+0x30]
0x1b1cc: jz 0x1b1dd
0x1b1ce: mov rax,qword ptr [r10+0x10]
0x1b1d2: cmp [rax+r11*4+0x0],0xff
0x1b1d7: jz 0x1b149
0x1b1dd: mov rax,qword ptr [r10+0x18]
0x1b1e1: mov rax,qword ptr [rax+r11*8+0x0]
0x1b1e5: add rax,qword ptr [r10]
0x1b1e8: add rax,qword ptr [r10+0x28]
0x1b1ec: movzx r9d,byte ptr [rax]
0x1b1f0: test r9b,0x80
0x1b1f4: jnz 0x1b149
0x1b1fa: cmp [r10+0x90],0x1
0x1b202: mov eax,0x1
0x1b207: jz 0x1b216
0x1b209: mov rsi,r11
0x1b20c: mov rdi,r10
0x1b20f: call 0x125f0
0x1b214: cwde 
0x1b216: add rax,r11
0x1b219: mov qword ptr [r10+0x48],rax
0x1b21d: jmp 0x1b15a
0x1b222: nop qword ptr [rax+rax*1+0x0]
0x1b228: mov eax,0x7
0x1b22d: jmp 0x1b0a1
0x1b232: mov rdi,rsp
0x1b235: mov rdx,r8
0x1b238: mov rsi,r10
0x1b23b: call 0x10b90
0x1b240: cmp [rsp+0x8],0x15
0x1b245: mov eax,0xb
0x1b24a: jz 0x1b0ee
0x1b250: jmp 0x1b0a1
0x1b255: nop qword ptr [rax]
0x1b258: lea rax,[r11+0x1]
0x1b25c: add r11,qword ptr [r10]
0x1b25f: mov rdx,qword ptr [r10+0x28]
0x1b263: mov qword ptr [r10+0x48],rax
0x1b267: movzx r9d,byte ptr [r11+rdx*1+0x0]
0x1b26c: jmp 0x1b15a
0x1b271: mov [rbx],0x3
0x1b277: xor eax,eax
0x1b279: jmp 0x1b0a1
0x1b27e: mov [rbx],0x4
0x1b284: xor eax,eax
0x1b286: jmp 0x1b0a1
0x1b28b: mov [rbx],0x2
0x1b291: xor eax,eax
0x1b293: jmp 0x1b0a1
0x1b298: call 0x2560
0x1b2a0: push r15
0x1b2a2: push r14
0x1b2a4: push r13
0x1b2a6: push r12
0x1b2a8: push rbp
0x1b2a9: push rbx
0x1b2aa: mov rbp,rdi
0x1b2ad: sub rsp,0x38
0x1b2b1: mov r14,qword ptr [rsi+0x48]
0x1b2b5: mov rax,0x28
0x1b2be: mov qword ptr [rsp+0x28],rax
0x1b2c3: xor eax,eax
0x1b2c5: cmp qword ptr [rsi+0x68],r14
0x1b2c9: jle 0x1b360
0x1b2cf: movzx r13d,byte ptr [rdi+0xa]
0x1b2d4: mov r15,rdx
0x1b2d7: mov rdx,qword ptr [rsi+0x8]
0x1b2db: mov rbx,rsi
0x1b2de: movzx r12d,byte ptr [rdx+r14*1+0x0]
0x1b2e3: and r13d,0x9f
0x1b2e7: mov byte ptr [rdi+0xa],r13b
0x1b2eb: mov eax,dword ptr [rsi+0x90]
0x1b2f1: mov byte ptr [rdi],r12b
0x1b2f4: cmp eax,0x1
0x1b2f7: jle 0x1b390
0x1b2fd: cmp r14,qword ptr [rsi+0x30]
0x1b301: jz 0x1b4a0
0x1b307: mov rcx,qword ptr [rsi+0x10]
0x1b30b: mov ecx,dword ptr [rcx+r14*4+0x0]
0x1b30f: cmp ecx,0xff
0x1b312: jz 0x1b3f0
0x1b318: cmp r12b,0x5c
0x1b31c: jz 0x1b410
0x1b322: mov [rdi+0x8],0x1
0x1b326: mov edi,ecx
0x1b328: mov qword ptr [rsp+0x8],rdx
0x1b32d: mov dword ptr [rsp],ecx
0x1b330: call 0x2770
0x1b335: mov ecx,dword ptr [rsp]
0x1b338: test eax,eax
0x1b33a: setnz al
0x1b33d: cmp ecx,0x5f
0x1b340: setz cl
0x1b343: or eax,ecx
0x1b345: shl eax,0x6
0x1b348: or r13d,eax
0x1b34b: mov byte ptr [rbp+0xa],r13b
0x1b34f: mov rdx,qword ptr [rsp+0x8]
0x1b354: jmp 0x1b3cc
0x1b356: nop qword ptr [rax+rax*1+0x0]
0x1b360: mov [rdi+0x8],0x2
0x1b364: mov rdi,qword ptr [rsp+0x28]
0x1b369: xor rdi,0x28
0x1b372: jnz 0x1b998
0x1b378: add rsp,0x38
0x1b37c: pop rbx
0x1b37d: pop rbp
0x1b37e: pop r12
0x1b380: pop r13
0x1b382: pop r14
0x1b384: pop r15
0x1b386: ret
0x1b387: nop qword ptr [rax+rax*1+0x0]
0x1b390: cmp r12b,0x5c
0x1b394: jz 0x1b410
0x1b396: mov [rbp+0x8],0x1
0x1b39a: mov qword ptr [rsp],rdx
0x1b39e: call 0x29f0
0x1b3a3: mov rsi,qword ptr [rax]
0x1b3a6: movzx ecx,r12b
0x1b3aa: movzx eax,byte ptr [rsi+rcx*2+0x0]
0x1b3ae: shr ax,0x3
0x1b3b2: and eax,0x1
0x1b3b5: cmp r12b,0x5f
0x1b3b9: setz cl
0x1b3bc: or eax,ecx
0x1b3be: shl eax,0x6
0x1b3c1: or r13d,eax
0x1b3c4: mov byte ptr [rbp+0xa],r13b
0x1b3c8: mov rdx,qword ptr [rsp]
0x1b3cc: sub r12d,0xa
0x1b3d0: cmp r12b,0x73
0x1b3d4: jnbe 0x1b50c
0x1b3da: lea rcx,[rip+0x7513]
0x1b3e1: movzx r12d,r12b
0x1b3e5: movsxd rax,dword ptr [rcx+r12*4+0x0]
0x1b3e9: add rax,rcx
0x1b3ec: jmp rax
0x1b3ee: nop 
0x1b3f0: or r13d,0x20
0x1b3f4: mov [rdi+0x8],0x1
0x1b3f8: mov eax,0x1
0x1b3fd: mov byte ptr [rdi+0xa],r13b
0x1b401: jmp 0x1b364
0x1b406: nop qword ptr [rax+rax*1+0x0]
0x1b410: lea rsi,[r14+0x1]
0x1b414: cmp rsi,qword ptr [rbx+0x58]
0x1b418: jnl 0x1b4c0
0x1b41e: cmp [rbx+0x8b],0x0
0x1b425: jnz 0x1b8b0
0x1b42b: movzx edi,byte ptr [rdx+r14*1+0x1]
0x1b431: mov r12d,edi
0x1b434: mov dword ptr [rsp+0x8],edi
0x1b438: cmp eax,0x1
0x1b43b: mov byte ptr [rbp+0x0],r12b
0x1b43f: mov [rbp+0x8],0x1
0x1b443: jle 0x1b890
0x1b449: mov rax,qword ptr [rbx+0x10]
0x1b44d: mov r8d,dword ptr [rax+rsi*4+0x0]
0x1b451: mov edi,r8d
0x1b454: mov dword ptr [rsp],r8d
0x1b458: call 0x2770
0x1b45d: mov r8d,dword ptr [rsp]
0x1b461: test eax,eax
0x1b463: setnz al
0x1b466: cmp r8d,0x5f
0x1b46a: setz dl
0x1b46d: lea ecx,[r12-0x27]
0x1b472: or eax,edx
0x1b474: shl eax,0x6
0x1b477: or r13d,eax
0x1b47a: cmp cl,0x56
0x1b47d: mov byte ptr [rbp+0xa],r13b
0x1b481: jnbe 0x1b885
0x1b487: lea rdx,[rip+0x7636]
0x1b48e: movzx ecx,cl
0x1b491: movsxd rax,dword ptr [rdx+rcx*4+0x0]
0x1b495: add rax,rdx
0x1b498: jmp rax
0x1b49a: nop qword ptr [rax+rax*1+0x0]
0x1b4a0: cmp r12b,0x5c
0x1b4a4: jz 0x1b410
0x1b4aa: mov rax,qword ptr [rbx+0x10]
0x1b4ae: mov [rbp+0x8],0x1
0x1b4b2: mov ecx,dword ptr [rax+r14*4+0x0]
0x1b4b6: jmp 0x1b326
0x1b4bb: nop qword ptr [rax+rax*1+0x0]
0x1b4c0: mov [rbp+0x8],0x24
0x1b4c4: mov eax,0x1
0x1b4c9: jmp 0x1b364
0x1b4ce: nop 
0x1b4d0: and r15d,0x1200
0x1b4d7: mov eax,0x1
0x1b4dc: cmp r15,0x1200
0x1b4e3: jnz 0x1b364
0x1b4e9: mov [rbp+0x8],0x18
0x1b4ed: jmp 0x1b364
0x1b4f2: nop qword ptr [rax+rax*1+0x0]
0x1b4f8: and r15d,0x8400
0x1b4ff: cmp r15,0x8000
0x1b506: jz 0x1b5e2
0x1b50c: mov eax,0x1
0x1b511: jmp 0x1b364
0x1b516: nop qword ptr [rax+rax*1+0x0]
0x1b520: and r15d,0x1200
0x1b527: mov eax,0x1
0x1b52c: cmp r15,0x1200
0x1b533: jnz 0x1b364
0x1b539: mov [rbp+0x8],0x17
0x1b53d: jmp 0x1b364
0x1b542: nop qword ptr [rax+rax*1+0x0]
0x1b548: test r15d,0x800008
0x1b54f: jnz 0x1b55a
0x1b551: test r14,r14
0x1b554: jnz 0x1b91a
0x1b55a: mov [rbp+0x8],0xc
0x1b55e: mov [rbp+0x0],0x10
0x1b565: mov eax,0x1
0x1b56a: jmp 0x1b364
0x1b56f: nop 
0x1b570: mov [rbp+0x8],0x14
0x1b574: mov eax,0x1
0x1b579: jmp 0x1b364
0x1b57e: nop 
0x1b580: test r15d,0x402
0x1b587: mov eax,0x1
0x1b58c: jnz 0x1b364
0x1b592: mov [rbp+0x8],0x13
0x1b596: jmp 0x1b364
0x1b59b: nop qword ptr [rax+rax*1+0x0]
0x1b5a0: mov [rbp+0x8],0x5
0x1b5a4: mov eax,0x1
0x1b5a9: jmp 0x1b364
0x1b5ae: nop 
0x1b5b0: test r15d,0x402
0x1b5b7: mov eax,0x1
0x1b5bc: jnz 0x1b364
0x1b5c2: mov [rbp+0x8],0x12
0x1b5c6: jmp 0x1b364
0x1b5cb: nop qword ptr [rax+rax*1+0x0]
0x1b5d0: test r15d,0x800
0x1b5d7: mov eax,0x1
0x1b5dc: jz 0x1b364
0x1b5e2: mov [rbp+0x8],0xa
0x1b5e6: mov eax,0x1
0x1b5eb: jmp 0x1b364
0x1b5f0: mov [rbp+0x8],0xb
0x1b5f4: mov eax,0x1
0x1b5f9: jmp 0x1b364
0x1b5fe: nop 
0x1b600: test r15d,0x2000
0x1b607: mov eax,0x1
0x1b60c: jz 0x1b364
0x1b612: mov [rbp+0x8],0x9
0x1b616: jmp 0x1b364
0x1b61b: nop qword ptr [rax+rax*1+0x0]
0x1b620: test r15d,0x2000
0x1b627: mov eax,0x1
0x1b62c: jz 0x1b364
0x1b632: mov [rbp+0x8],0x8
0x1b636: jmp 0x1b364
0x1b63b: nop qword ptr [rax+rax*1+0x0]
0x1b640: test r15b,0x8
0x1b644: jnz 0x1b654
0x1b646: add r14,0x1
0x1b64a: cmp r14,qword ptr [rbx+0x58]
0x1b64e: jnz 0x1b94b
0x1b654: mov [rbp+0x8],0xc
0x1b658: mov [rbp+0x0],0x20
0x1b65f: mov eax,0x1
0x1b664: jmp 0x1b364
0x1b669: test r15d,0x8400
0x1b670: mov eax,0x2
0x1b675: jnz 0x1b364
0x1b67b: mov [rbp+0x8],0xa
0x1b67f: jmp 0x1b364
0x1b684: and r15d,0x1200
0x1b68b: mov eax,0x2
0x1b690: cmp r15,0x200
0x1b697: jnz 0x1b364
0x1b69d: jmp 0x1b539
0x1b6a2: test r15d,0x80000
0x1b6a9: mov eax,0x2
0x1b6ae: jnz 0x1b364
0x1b6b4: mov [rbp+0x8],0x20
0x1b6b8: jmp 0x1b364
0x1b6bd: test r15d,0x80000
0x1b6c4: mov eax,0x2
0x1b6c9: jnz 0x1b364
0x1b6cf: mov [rbp+0x8],0x22
0x1b6d3: jmp 0x1b364
0x1b6d8: and r15d,0x1200
0x1b6df: mov eax,0x2
0x1b6e4: cmp r15,0x200
0x1b6eb: jnz 0x1b364
0x1b6f1: jmp 0x1b4e9
0x1b6f6: test r15d,0x80000
0x1b6fd: mov eax,0x2
0x1b702: jnz 0x1b364
0x1b708: mov [rbp+0x8],0xc
0x1b70c: mov [rbp+0x0],0x100
0x1b713: jmp 0x1b364
0x1b718: test r15d,0x80000
0x1b71f: mov eax,0x2
0x1b724: jnz 0x1b364
0x1b72a: mov [rbp+0x8],0xc
0x1b72e: mov [rbp+0x0],0x40
0x1b735: jmp 0x1b364
0x1b73a: test r15d,0x80000
0x1b741: mov eax,0x2
0x1b746: jnz 0x1b364
0x1b74c: mov [rbp+0x8],0x21
0x1b750: jmp 0x1b364
0x1b755: test r15d,0x80000
0x1b75c: mov eax,0x2
0x1b761: jnz 0x1b364
0x1b767: mov [rbp+0x8],0x23
0x1b76b: jmp 0x1b364
0x1b770: test r15d,0x80000
0x1b777: mov eax,0x2
0x1b77c: jnz 0x1b364
0x1b782: mov [rbp+0x8],0xc
0x1b786: mov [rbp+0x0],0x200
0x1b78d: jmp 0x1b364
0x1b792: and r15d,0x402
0x1b799: mov eax,0x2
0x1b79e: cmp r15,0x2
0x1b7a2: jnz 0x1b364
0x1b7a8: jmp 0x1b592
0x1b7ad: test r15d,0x80000
0x1b7b4: mov eax,0x2
0x1b7b9: jnz 0x1b364
0x1b7bf: mov [rbp+0x8],0xc
0x1b7c3: mov [rbp+0x0],0x9
0x1b7ca: jmp 0x1b364
0x1b7cf: test r15d,0x80000
0x1b7d6: mov eax,0x2
0x1b7db: jnz 0x1b364
0x1b7e1: mov [rbp+0x8],0xc
0x1b7e5: mov [rbp+0x0],0x6
0x1b7ec: jmp 0x1b364
0x1b7f1: test r15d,0x4000
0x1b7f8: mov eax,0x2
0x1b7fd: jnz 0x1b364
0x1b803: mov edx,dword ptr [rsp+0x8]
0x1b807: mov [rbp+0x8],0x4
0x1b80b: sub edx,0x31
0x1b80e: movsxd rdx,edx
0x1b811: mov qword ptr [rbp+0x0],rdx
0x1b815: jmp 0x1b364
0x1b81a: and r15d,0x402
0x1b821: mov eax,0x2
0x1b826: cmp r15,0x2
0x1b82a: jnz 0x1b364
0x1b830: jmp 0x1b5c2
0x1b835: test r15d,0x2000
0x1b83c: mov eax,0x2
0x1b841: jnz 0x1b364
0x1b847: jmp 0x1b612
0x1b84c: test r15d,0x2000
0x1b853: mov eax,0x2
0x1b858: jnz 0x1b364
0x1b85e: jmp 0x1b632
0x1b863: test r15d,0x80000
0x1b86a: mov eax,0x2
0x1b86f: jnz 0x1b364
0x1b875: mov [rbp+0x8],0xc
0x1b879: mov [rbp+0x0],0x80
0x1b880: jmp 0x1b364
0x1b885: mov eax,0x2
0x1b88a: jmp 0x1b364
0x1b88f: nop 
0x1b890: call 0x29f0
0x1b895: mov rsi,qword ptr [rax]
0x1b898: movzx edx,r12b
0x1b89c: movzx eax,byte ptr [rsi+rdx*2+0x0]
0x1b8a0: shr ax,0x3
0x1b8a4: and eax,0x1
0x1b8a7: cmp r12b,0x5f
0x1b8ab: jmp 0x1b46a
0x1b8b0: cmp eax,0x1
0x1b8b3: jle 0x1b8e4
0x1b8b5: mov rcx,qword ptr [rbx+0x10]
0x1b8b9: lea rdi,[rsi*4+0x0]
0x1b8c1: mov r8d,dword ptr [rcx+rsi*4+0x0]
0x1b8c5: cmp r8d,0xff
0x1b8c9: jz 0x1b97f
0x1b8cf: lea r9,[r14+0x2]
0x1b8d3: cmp qword ptr [rbx+0x30],r9
0x1b8d7: jz 0x1b8e4
0x1b8d9: cmp [rcx+rdi*1+0x4],0xff
0x1b8de: jz 0x1b97f
0x1b8e4: cmp [rbx+0x8c],0x0
0x1b8eb: mov rcx,qword ptr [rbx]
0x1b8ee: mov rdi,qword ptr [rbx+0x28]
0x1b8f2: jz 0x1b938
0x1b8f4: mov r8,qword ptr [rbx+0x18]
0x1b8f8: add rcx,rdi
0x1b8fb: add rcx,qword ptr [r8+rsi*8+0x0]
0x1b8ff: movzx edi,byte ptr [rcx]
0x1b902: mov r12d,edi
0x1b905: mov dword ptr [rsp+0x8],edi
0x1b909: and edi,0x80
0x1b90f: jnz 0x1b42b
0x1b915: jmp 0x1b438
0x1b91a: cmp [rdx+r14*1-0x1],0xa
0x1b920: jnz 0x1b50c
0x1b926: test r15d,0x800
0x1b92d: jz 0x1b50c
0x1b933: jmp 0x1b55a
0x1b938: add rcx,rsi
0x1b93b: movzx edi,byte ptr [rcx+rdi*1+0x0]
0x1b93f: mov r12d,edi
0x1b942: mov dword ptr [rsp+0x8],edi
0x1b946: jmp 0x1b438
0x1b94b: lea rdi,[rsp+0x10]
0x1b950: mov rdx,r15
0x1b953: mov qword ptr [rbx+0x48],r14
0x1b957: mov rsi,rbx
0x1b95a: call 0x1b2a0
0x1b95f: movzx eax,byte ptr [rsp+0x18]
0x1b964: sub [rbx+0x48],0x1
0x1b969: lea edx,[rax-0x9]
0x1b96c: mov eax,0x1
0x1b971: cmp dl,0x1
0x1b974: jnbe 0x1b364
0x1b97a: jmp 0x1b654
0x1b97f: movzx eax,byte ptr [rdx+r14*1+0x1]
0x1b985: mov [rbp+0x8],0x1
0x1b989: mov r12d,eax
0x1b98c: mov byte ptr [rbp+0x0],al
0x1b98f: mov dword ptr [rsp+0x8],eax
0x1b993: jmp 0x1b451
0x1b998: call 0x2560
0x1b9a0: push r14
0x1b9a2: mov r14,rdi
0x1b9a5: push r13
0x1b9a7: mov r13,rsi
0x1b9aa: push r12
0x1b9ac: mov r12,0xfffffffe
0x1b9b3: push rbp
0x1b9b4: mov rbp,rdx
0x1b9b7: push rbx
0x1b9b8: mov rbx,0xffffffff
0x1b9bf: nop 
0x1b9c0: mov rdx,rbp
0x1b9c3: mov rsi,r14
0x1b9c6: mov rdi,r13
0x1b9c9: call 0x1b2a0
0x1b9ce: cwde 
0x1b9d0: add qword ptr [r14+0x48],rax
0x1b9d4: movzx eax,byte ptr [r13+0x8]
0x1b9d9: movzx edx,byte ptr [r13+0x0]
0x1b9de: cmp al,0x2
0x1b9e0: jz 0x1ba30
0x1b9e2: cmp al,0x18
0x1b9e4: jz 0x1ba37
0x1b9e6: cmp dl,0x2c
0x1b9e9: jz 0x1ba37
0x1b9eb: cmp al,0x1
0x1b9ed: jz 0x1b9f8
0x1b9ef: mov rbx,r12
0x1b9f2: jmp 0x1b9c0
0x1b9f4: nop qword ptr [rax+0x0]
0x1b9f8: lea eax,[rdx-0x30]
0x1b9fb: cmp al,0x9
0x1b9fd: jnbe 0x1b9ef
0x1b9ff: cmp rbx,0xfffffffe
0x1ba03: jz 0x1b9ef
0x1ba05: cmp rbx,0xffffffff
0x1ba09: jz 0x1ba48
0x1ba0b: lea rax,[rbx+rbx*4+0x0]
0x1ba0f: lea rbx,[rdx+rax*2+0x0]
0x1ba13: mov eax,0x8030
0x1ba18: cmp rbx,0x8030
0x1ba1f: cmovnl rbx,rax
0x1ba23: sub rbx,0x30
0x1ba27: jmp 0x1b9c0
0x1ba29: nop qword ptr [rax+0x0]
0x1ba30: mov rbx,0xfffffffe
0x1ba37: mov rax,rbx
0x1ba3a: pop rbx
0x1ba3b: pop rbp
0x1ba3c: pop r12
0x1ba3e: pop r13
0x1ba40: pop r14
0x1ba42: ret
0x1ba43: nop qword ptr [rax+rax*1+0x0]
0x1ba48: movzx ebx,dl
0x1ba4b: sub ebx,0x30
0x1ba4e: movsxd rbx,ebx
0x1ba51: jmp 0x1b9c0
0x1ba60: push r15
0x1ba62: push r14
0x1ba64: push r13
0x1ba66: push r12
0x1ba68: push rbp
0x1ba69: push rbx
0x1ba6a: sub rsp,0x128
0x1ba71: mov qword ptr [rsp+0x20],rcx
0x1ba76: movzx ecx,byte ptr [rdx+0x8]
0x1ba7a: mov rax,0x28
0x1ba83: mov qword ptr [rsp+0x118],rax
0x1ba8b: xor eax,eax
0x1ba8d: mov rax,qword ptr [rsi]
0x1ba90: mov qword ptr [rsp+0x18],rdx
0x1ba95: mov qword ptr [rsp+0x40],r9
0x1ba9a: cmp cl,0x24
0x1ba9d: mov qword ptr [rsp+0x10],rax
0x1baa2: jnbe 0x1bb60
0x1baa8: mov rbp,rsi
0x1baab: lea rsi,[rip+0x716e]
0x1bab2: movzx edx,cl
0x1bab5: mov r14,rdi
0x1bab8: movsxd rax,dword ptr [rsi+rdx*4+0x0]
0x1babc: add rax,rsi
0x1babf: jmp rax
0x1bac1: mov rbx,qword ptr [rbp+0x30]
0x1bac5: mov r15,qword ptr [rsp+0x20]
0x1baca: mov rsi,rdi
0x1bacd: mov r13,qword ptr [rsp+0x18]
0x1bad2: mov qword ptr [rsp],r8
0x1bad6: lea rax,[rbx+0x1]
0x1bada: mov rdx,r15
0x1badd: or rdx,0x800000
0x1bae4: mov rdi,r13
0x1bae7: mov qword ptr [rbp+0x30],rax
0x1baeb: call 0x1b2a0
0x1baf0: cwde 
0x1baf2: add qword ptr [r14+0x48],rax
0x1baf6: xor eax,eax
0x1baf8: cmp [r13+0x8],0x9
0x1bafd: mov rdx,r13
0x1bb00: jz 0x1c600
0x1bb06: mov r13,qword ptr [rsp+0x40]
0x1bb0b: mov r8,qword ptr [rsp]
0x1bb0f: mov rcx,r15
0x1bb12: mov rsi,rbp
0x1bb15: mov rdi,r14
0x1bb18: add r8,0x1
0x1bb1c: mov r9,r13
0x1bb1f: call 0x1d0d0
0x1bb24: mov r11d,dword ptr [r13+0x0]
0x1bb28: test r11d,r11d
0x1bb2b: jnz 0x1bb60
0x1bb2d: mov rdx,qword ptr [rsp+0x18]
0x1bb32: cmp [rdx+0x8],0x9
0x1bb36: jz 0x1c600
0x1bb3c: test rax,rax
0x1bb3f: jz 0x1bb52
0x1bb41: lea rsi,[rip-0x9d28]
0x1bb48: xor edx,edx
0x1bb4a: mov rdi,rax
0x1bb4d: call 0x10f80
0x1bb52: mov rax,qword ptr [rsp+0x40]
0x1bb57: mov [rax],0x8
0x1bb5d: nop qword ptr [rax]
0x1bb60: mov [rsp+0x28],0x0
0x1bb69: nop qword ptr [rax+0x0]
0x1bb70: mov rdi,qword ptr [rsp+0x118]
0x1bb78: xor rdi,0x28
0x1bb81: mov rax,qword ptr [rsp+0x28]
0x1bb86: jnz 0x1cefe
0x1bb8c: add rsp,0x128
0x1bb93: pop rbx
0x1bb94: pop rbp
0x1bb95: pop r12
0x1bb97: pop r13
0x1bb99: pop r14
0x1bb9b: pop r15
0x1bb9d: ret
0x1bb9e: test [rsp+0x20],0x1000000
0x1bba7: jnz 0x1bdfd
0x1bbad: mov rax,qword ptr [rsp+0x20]
0x1bbb2: test al,0x20
0x1bbb4: jnz 0x1bdfd
0x1bbba: test al,0x10
0x1bbbc: jnz 0x1ca25
0x1bbc2: cmp cl,0x9
0x1bbc5: jz 0x1c5d8
0x1bbcb: mov rax,qword ptr [rsp+0x10]
0x1bbd0: mov r8,qword ptr [rsp+0x18]
0x1bbd5: xor ecx,ecx
0x1bbd7: xor edx,edx
0x1bbd9: lea rsi,[rax+0x80]
0x1bbe0: lea rdi,[rax+0x70]
0x1bbe4: mov [r8+0x8],0x1
0x1bbe9: call 0x13360
0x1bbee: test rax,rax
0x1bbf1: mov qword ptr [rsp+0x28],rax
0x1bbf6: jz 0x1c5c8
0x1bbfc: mov rbx,qword ptr [rsp+0x18]
0x1bc01: mov rdx,qword ptr [rsp+0x20]
0x1bc06: mov rsi,r14
0x1bc09: lea r15,[rsp+0xc0]
0x1bc11: mov rdi,rbx
0x1bc14: call 0x1b2a0
0x1bc19: cwde 
0x1bc1b: add qword ptr [r14+0x48],rax
0x1bc1f: movzx eax,byte ptr [rbx+0x8]
0x1bc23: nop qword ptr [rax+rax*1+0x0]
0x1bc28: cmp al,0x17
0x1bc2a: jnbe 0x1bb70
0x1bc30: cmp al,0x12
0x1bc32: mov ecx,0x8c0800
0x1bc37: setz bl
0x1bc3a: bt rcx,rax
0x1bc3e: jnb 0x1bb70
0x1bc44: mov rcx,qword ptr [rsp+0x18]
0x1bc49: cmp al,0x17
0x1bc4b: mov rbp,qword ptr [r14+0x48]
0x1bc4f: movdqa xmm0,[rcx]
0x1bc53: jz 0x1bf78
0x1bc59: cmp al,0x13
0x1bc5b: movzx ebx,bl
0x1bc5e: jz 0x1bf10
0x1bc64: mov rdx,qword ptr [rsp+0x20]
0x1bc69: mov rdi,qword ptr [rsp+0x18]
0x1bc6e: mov rsi,r14
0x1bc71: call 0x1b2a0
0x1bc76: cwde 
0x1bc78: add qword ptr [r14+0x48],rax
0x1bc7c: cmp [rsp+0x28],0x0
0x1bc82: jz 0x1c010
0x1bc88: mov [rsp],0xffffffff
0x1bc90: test rbx,rbx
0x1bc93: mov rbp,qword ptr [rsp+0x28]
0x1bc98: mov [rsp+0x30],0x0
0x1bca1: jnle 0x1be20
0x1bca7: cmp [rbp+0x30],0x11
0x1bcab: jz 0x1bff0
0x1bcb1: cmp [rsp],0xffffffff
0x1bcb6: mov rdx,rbp
0x1bcb9: mov r8,r15
0x1bcbc: setz al
0x1bcbf: xor ecx,ecx
0x1bcc1: add eax,0xa
0x1bcc4: mov byte ptr [rsp+0xc8],al
0x1bccb: mov rax,qword ptr [rsp+0x10]
0x1bcd0: lea r12,[rax+0x70]
0x1bcd4: lea r13,[rax+0x80]
0x1bcdb: mov rdi,r12
0x1bcde: mov rsi,r13
0x1bce1: call 0x13360
0x1bce6: test rax,rax
0x1bce9: mov rdx,rax
0x1bcec: jz 0x1bee0
0x1bcf2: add rbx,0x2
0x1bcf6: cmp rbx,qword ptr [rsp]
0x1bcfa: jnle 0x1bd7b
0x1bcfc: mov qword ptr [rsp+0x48],r14
0x1bd01: mov r14,rax
0x1bd04: mov rsi,qword ptr [rsp+0x10]
0x1bd09: mov rdi,rbp
0x1bd0c: call 0x13440
0x1bd11: mov r8,r15
0x1bd14: mov rbp,rax
0x1bd17: mov rcx,rax
0x1bd1a: mov rdx,r14
0x1bd1d: mov rsi,r13
0x1bd20: mov rdi,r12
0x1bd23: mov [rsp+0xc8],0x10
0x1bd2b: call 0x13360
0x1bd30: test rbp,rbp
0x1bd33: jz 0x1bee0
0x1bd39: test rax,rax
0x1bd3c: jz 0x1bee0
0x1bd42: xor ecx,ecx
0x1bd44: mov r8,r15
0x1bd47: mov rdx,rax
0x1bd4a: mov rsi,r13
0x1bd4d: mov rdi,r12
0x1bd50: mov [rsp+0xc8],0xa
0x1bd58: call 0x13360
0x1bd5d: test rax,rax
0x1bd60: mov r14,rax
0x1bd63: jz 0x1bee0
0x1bd69: add rbx,0x1
0x1bd6d: cmp rbx,qword ptr [rsp]
0x1bd71: jle 0x1bd04
0x1bd73: mov r14,qword ptr [rsp+0x48]
0x1bd78: mov rdx,rax
0x1bd7b: mov rax,qword ptr [rsp+0x30]
0x1bd80: test rax,rax
0x1bd83: jz 0x1c030
0x1bd89: mov rcx,rdx
0x1bd8c: mov r8,r15
0x1bd8f: mov rdx,rax
0x1bd92: mov rsi,r13
0x1bd95: mov rdi,r12
0x1bd98: mov [rsp+0xc8],0x10
0x1bda0: call 0x13360
0x1bda5: mov rdi,qword ptr [rsp+0x40]
0x1bdaa: mov edx,dword ptr [rdi]
0x1bdac: test edx,edx
0x1bdae: jz 0x1bdb9
0x1bdb0: test rax,rax
0x1bdb3: jz 0x1c10b
0x1bdb9: mov qword ptr [rsp+0x28],rax
0x1bdbe: test [rsp+0x20],0x1000000
0x1bdc7: mov rax,qword ptr [rsp+0x18]
0x1bdcc: movzx eax,byte ptr [rax+0x8]
0x1bdd0: jz 0x1bc28
0x1bdd6: cmp al,0xb
0x1bdd8: jz 0x1bde2
0x1bdda: cmp al,0x17
0x1bddc: jnz 0x1bc28
0x1bde2: mov rax,qword ptr [rsp+0x28]
0x1bde7: test rax,rax
0x1bdea: jz 0x1bdfd
0x1bdec: lea rsi,[rip-0x9fd3]
0x1bdf3: xor edx,edx
0x1bdf5: mov rdi,rax
0x1bdf8: call 0x10f80
0x1bdfd: mov rax,qword ptr [rsp+0x40]
0x1be02: mov [rsp+0x28],0x0
0x1be0b: mov [rax],0xd
0x1be11: jmp 0x1bb70
0x1be16: nop qword ptr [rax+rax*1+0x0]
0x1be20: cmp rbx,0x1
0x1be24: jz 0x1c65c
0x1be2a: mov rax,qword ptr [rsp+0x10]
0x1be2f: mov r13,rbp
0x1be32: mov qword ptr [rsp+0x48],r14
0x1be37: lea r12,[rax+0x80]
0x1be3e: lea rdi,[rax+0x70]
0x1be42: mov rax,rbp
0x1be45: mov r14,rax
0x1be48: mov ebp,0x2
0x1be4d: mov rsi,r12
0x1be50: mov qword ptr [rsp+0x30],rdi
0x1be55: mov r12,r13
0x1be58: mov r13,rbx
0x1be5b: mov rbx,rsi
0x1be5e: nop 
0x1be60: mov rsi,qword ptr [rsp+0x10]
0x1be65: mov rdi,r12
0x1be68: call 0x13440
0x1be6d: mov rdi,qword ptr [rsp+0x30]
0x1be72: mov r12,rax
0x1be75: mov rdx,r14
0x1be78: mov r8,r15
0x1be7b: mov rcx,rax
0x1be7e: mov rsi,rbx
0x1be81: mov [rsp+0xc8],0x10
0x1be89: call 0x13360
0x1be8e: test r12,r12
0x1be91: mov r14,rax
0x1be94: jz 0x1bee0
0x1be96: test rax,rax
0x1be99: jz 0x1bee0
0x1be9b: add rbp,0x1
0x1be9f: cmp rbp,r13
0x1bea2: jle 0x1be60
0x1bea4: mov r14,qword ptr [rsp+0x48]
0x1bea9: mov rbx,r13
0x1beac: mov qword ptr [rsp+0x30],rax
0x1beb1: mov r13,r12
0x1beb4: cmp qword ptr [rsp],rbx
0x1beb8: jz 0x1c024
0x1bebe: mov rsi,qword ptr [rsp+0x10]
0x1bec3: mov rdi,r13
0x1bec6: call 0x13440
0x1becb: test rax,rax
0x1bece: mov rbp,rax
0x1bed1: jnz 0x1bca7
0x1bed7: nop qword ptr [rax+rax*1+0x0]
0x1bee0: mov rax,qword ptr [rsp+0x40]
0x1bee5: mov [rax],0xc
0x1beeb: mov rdi,qword ptr [rsp+0x28]
0x1bef0: lea rsi,[rip-0xa0d7]
0x1bef7: xor edx,edx
0x1bef9: call 0x10f80
0x1befe: mov [rsp+0x28],0x0
0x1bf07: jmp 0x1bb70
0x1bf0c: nop qword ptr [rax+0x0]
0x1bf10: mov [rsp],0x1
0x1bf18: mov rdx,qword ptr [rsp+0x20]
0x1bf1d: mov rdi,qword ptr [rsp+0x18]
0x1bf22: mov rsi,r14
0x1bf25: call 0x1b2a0
0x1bf2a: cwde 
0x1bf2c: add qword ptr [r14+0x48],rax
0x1bf30: cmp [rsp+0x28],0x0
0x1bf36: jz 0x1c010
0x1bf3c: mov rax,qword ptr [rsp]
0x1bf40: or rax,rbx
0x1bf43: jnz 0x1bc90
0x1bf49: mov rdi,qword ptr [rsp+0x28]
0x1bf4e: lea rsi,[rip-0xa135]
0x1bf55: xor edx,edx
0x1bf57: call 0x10f80
0x1bf5c: mov rax,qword ptr [rsp+0x40]
0x1bf61: mov esi,dword ptr [rax]
0x1bf63: test esi,esi
0x1bf65: jnz 0x1beeb
0x1bf67: mov [rsp+0x28],0x0
0x1bf70: jmp 0x1bdbe
0x1bf75: nop qword ptr [rax]
0x1bf78: mov rdx,qword ptr [rsp+0x20]
0x1bf7d: mov rsi,rcx
0x1bf80: mov rdi,r14
0x1bf83: movaps [rsp],xmm0
0x1bf87: call 0x1b9a0
0x1bf8c: cmp rax,0xffffffff
0x1bf90: mov rbx,rax
0x1bf93: movdqa xmm0,[rsp]
0x1bf98: jz 0x1c040
0x1bf9e: cmp rax,0xfffffffe
0x1bfa2: jz 0x1bfbd
0x1bfa4: mov rax,qword ptr [rsp+0x18]
0x1bfa9: movzx eax,byte ptr [rax+0x8]
0x1bfad: cmp al,0x18
0x1bfaf: jz 0x1c0d0
0x1bfb5: cmp al,0x1
0x1bfb7: jz 0x1c0e3
0x1bfbd: test [rsp+0x20],0x200000
0x1bfc6: jz 0x1cf03
0x1bfcc: mov rax,qword ptr [rsp+0x18]
0x1bfd1: mov qword ptr [r14+0x48],rbp
0x1bfd5: movaps [rax],xmm0
0x1bfd8: mov [rax+0x8],0x1
0x1bfdc: mov rax,qword ptr [rsp+0x28]
0x1bfe1: jmp 0x1bda5
0x1bfe6: nop qword ptr [rax+rax*1+0x0]
0x1bff0: mov rdx,qword ptr [rbp+0x28]
0x1bff4: lea rsi,[rip-0xb33b]
0x1bffb: mov rdi,rbp
0x1bffe: call 0x10f80
0x1c003: jmp 0x1bcb1
0x1c008: nop qword ptr [rax+rax*1+0x0]
0x1c010: mov rax,qword ptr [rsp+0x40]
0x1c015: mov ecx,dword ptr [rax]
0x1c017: test ecx,ecx
0x1c019: jz 0x1bf67
0x1c01f: jmp 0x1bb60
0x1c024: mov rdx,qword ptr [rsp+0x30]
0x1c029: nop qword ptr [rax+0x0]
0x1c030: mov qword ptr [rsp+0x28],rdx
0x1c035: jmp 0x1bdbe
0x1c03a: nop qword ptr [rax+rax*1+0x0]
0x1c040: mov rax,qword ptr [rsp+0x18]
0x1c045: cmp [rax+0x8],0x1
0x1c049: jnz 0x1c100
0x1c04f: mov rax,qword ptr [rsp+0x18]
0x1c054: cmp [rax],0x2c
0x1c057: jnz 0x1c100
0x1c05d: xor ebx,ebx
0x1c05f: mov rdx,qword ptr [rsp+0x20]
0x1c064: mov rsi,qword ptr [rsp+0x18]
0x1c069: mov rdi,r14
0x1c06c: movaps [rsp+0x30],xmm0
0x1c071: call 0x1b9a0
0x1c076: cmp rax,0xfffffffe
0x1c07a: mov qword ptr [rsp],rax
0x1c07e: movdqa xmm0,[rsp+0x30]
0x1c084: jz 0x1bfbd
0x1c08a: mov rax,qword ptr [rsp]
0x1c08e: cmp rax,0xffffffff
0x1c092: jz 0x1c099
0x1c094: cmp rax,rbx
0x1c097: jl 0x1c100
0x1c099: mov rax,qword ptr [rsp+0x18]
0x1c09e: cmp [rax+0x8],0x18
0x1c0a2: jnz 0x1c100
0x1c0a4: cmp [rsp],0xffffffff
0x1c0a9: jnz 0x1c0d4
0x1c0ab: xor eax,eax
0x1c0ad: cmp rbx,0x7fff
0x1c0b4: setnle al
0x1c0b7: test rax,rax
0x1c0ba: jz 0x1bf18
0x1c0c0: mov rax,qword ptr [rsp+0x40]
0x1c0c5: mov [rax],0xf
0x1c0cb: jmp 0x1c10b
0x1c0cd: nop qword ptr [rax]
0x1c0d0: mov qword ptr [rsp],rbx
0x1c0d4: xor eax,eax
0x1c0d6: cmp [rsp],0x7fff
0x1c0de: setnle al
0x1c0e1: jmp 0x1c0b7
0x1c0e3: mov rax,qword ptr [rsp+0x18]
0x1c0e8: cmp [rax],0x2c
0x1c0eb: jz 0x1c05f
0x1c0f1: test [rsp+0x20],0x200000
0x1c0fa: jnz 0x1bfcc
0x1c100: mov rax,qword ptr [rsp+0x40]
0x1c105: mov [rax],0xa
0x1c10b: cmp [rsp+0x28],0x0
0x1c111: jnz 0x1beeb
0x1c117: jmp 0x1bb60
0x1c11c: nop qword ptr [rax+0x0]
0x1c120: mov rax,qword ptr [rsp+0x18]
0x1c125: mov ebp,dword ptr [rax]
0x1c127: test ebp,0x30f
0x1c12d: jz 0x1c191
0x1c12f: mov rax,qword ptr [rsp+0x10]
0x1c134: movzx eax,byte ptr [rax+0xb0]
0x1c13b: test al,0x10
0x1c13d: jnz 0x1c191
0x1c13f: mov rdi,qword ptr [rsp+0x10]
0x1c144: or eax,0x10
0x1c147: test al,0x8
0x1c149: mov byte ptr [rdi+0xb0],al
0x1c14f: jnz 0x1cd53
0x1c155: mov rdx,0x287948901175001088
0x1c15f: test al,0x4
0x1c161: mov qword ptr [rdi+0xb8],rdx
0x1c168: mov rdx,0x576460745995190270
0x1c172: mov qword ptr [rdi+0xc0],rdx
0x1c179: jz 0x1ccd8
0x1c17f: pxor xmm0,xmm0
0x1c183: mov rax,qword ptr [rsp+0x18]
0x1c188: movups [rdi+0xc8],xmm0
0x1c18f: mov ebp,dword ptr [rax]
0x1c191: mov rax,qword ptr [rsp+0x10]
0x1c196: lea rbx,[rax+0x70]
0x1c19a: lea r12,[rax+0x80]
0x1c1a1: lea eax,[rbp-0x100]
0x1c1a7: test eax,0xfffffeff
0x1c1ac: jnz 0x1c81a
0x1c1b2: cmp ebp,0x100
0x1c1b8: mov r15,qword ptr [rsp+0x18]
0x1c1bd: jz 0x1c7f2
0x1c1c3: mov [r15],0x5
0x1c1ca: mov r8,r15
0x1c1cd: xor ecx,ecx
0x1c1cf: xor edx,edx
0x1c1d1: mov rsi,r12
0x1c1d4: mov rdi,rbx
0x1c1d7: call 0x13360
0x1c1dc: mov [r15],0xa
0x1c1e3: mov rbp,rax
0x1c1e6: mov r8,qword ptr [rsp+0x18]
0x1c1eb: xor ecx,ecx
0x1c1ed: xor edx,edx
0x1c1ef: mov rsi,r12
0x1c1f2: mov rdi,rbx
0x1c1f5: call 0x13360
0x1c1fa: lea r8,[rsp+0xc0]
0x1c202: mov rdx,rbp
0x1c205: mov rdi,rbx
0x1c208: mov rcx,rax
0x1c20b: mov rsi,r12
0x1c20e: mov r13,rax
0x1c211: mov [rsp+0xc8],0xa
0x1c219: call 0x13360
0x1c21e: test rbp,rbp
0x1c221: mov rdi,rax
0x1c224: mov qword ptr [rsp+0x28],rax
0x1c229: setz dl
0x1c22c: test r13,r13
0x1c22f: setz al
0x1c232: or dl,al
0x1c234: jnz 0x1c5c8
0x1c23a: test rdi,rdi
0x1c23d: jz 0x1c5c8
0x1c243: mov rdx,qword ptr [rsp+0x20]
0x1c248: mov rdi,qword ptr [rsp+0x18]
0x1c24d: mov rsi,r14
0x1c250: call 0x1b2a0
0x1c255: cwde 
0x1c257: add qword ptr [r14+0x48],rax
0x1c25b: jmp 0x1bb70
0x1c260: mov esi,0x1
0x1c265: mov edi,0x20
0x1c26a: mov [rsp+0x98],0x0
0x1c276: call 0x26b0
0x1c27b: mov esi,0x1
0x1c280: mov r12,rax
0x1c283: mov edi,0x50
0x1c288: call 0x26b0
0x1c28d: test r12,r12
0x1c290: mov r13,rax
0x1c293: setz dl
0x1c296: test rax,rax
0x1c299: setz al
0x1c29c: or dl,al
0x1c29e: jnz 0x1ca79
0x1c2a4: mov r10,qword ptr [rsp+0x18]
0x1c2a9: mov rdx,qword ptr [rsp+0x20]
0x1c2ae: mov rsi,r14
0x1c2b1: mov rdi,r10
0x1c2b4: call 0x10b90
0x1c2b9: movsxd rbx,eax
0x1c2bc: movzx eax,byte ptr [r10+0x8]
0x1c2c1: cmp al,0x2
0x1c2c3: jz 0x1ca69
0x1c2c9: cmp al,0x19
0x1c2cb: mov [rsp+0x57],0x0
0x1c2d0: jz 0x1c79a
0x1c2d6: cmp al,0x15
0x1c2d8: jz 0x1c7e4
0x1c2de: lea rax,[rsp+0xd0]
0x1c2e6: mov r15,qword ptr [rsp+0x18]
0x1c2eb: lea rbp,[rip+0x69c2]
0x1c2f2: mov [rsp+0x48],0x0
0x1c2fb: mov r9d,0x1
0x1c301: mov [rsp+0x30],0x0
0x1c30a: mov qword ptr [rsp+0x28],rax
0x1c30f: lea rax,[rsp+0xa0]
0x1c317: mov qword ptr [rsp],rax
0x1c31b: lea rax,[rsp+0x98]
0x1c323: mov qword ptr [rsp+0x58],rax
0x1c328: lea rax,[rsp+0xc0]
0x1c330: mov qword ptr [rsp+0x60],rax
0x1c335: lea rax,[rsp+0xf0]
0x1c33d: mov qword ptr [rsp+0x68],rax
0x1c342: mov rax,qword ptr [rsp+0x28]
0x1c347: mov r8,qword ptr [rsp+0x20]
0x1c34c: and r9d,0x1
0x1c350: mov rdi,qword ptr [rsp]
0x1c354: mov ecx,ebx
0x1c356: mov rdx,r15
0x1c359: mov rsi,r14
0x1c35c: mov [rsp+0xa0],0x3
0x1c367: mov qword ptr [rsp+0xa8],rax
0x1c36f: call 0x1b040
0x1c374: test eax,eax
0x1c376: jnz 0x1c85b
0x1c37c: mov rdx,qword ptr [rsp+0x20]
0x1c381: mov rsi,r14
0x1c384: mov rdi,r15
0x1c387: call 0x10b90
0x1c38c: movsxd rbx,eax
0x1c38f: mov eax,dword ptr [rsp+0xa0]
0x1c396: lea edx,[rax-0x2]
0x1c399: and edx,0xfd
0x1c39c: jz 0x1c3b5
0x1c39e: movzx edx,byte ptr [r15+0x8]
0x1c3a3: cmp dl,0x2
0x1c3a6: jz 0x1c841
0x1c3ac: cmp dl,0x16
0x1c3af: jz 0x1c867
0x1c3b5: cmp eax,0x4
0x1c3b8: jnbe 0x1cd5a
0x1c3be: movsxd rax,dword ptr [rbp+rax*4+0x0]
0x1c3c3: add rax,rbp
0x1c3c6: jmp rax
0x1c3c8: mov rbx,qword ptr [rsp+0x40]
0x1c3cd: cmp cl,0x23
0x1c3d0: mov rsi,qword ptr [rdi+0x78]
0x1c3d4: setz r8b
0x1c3d8: lea rcx,[rip+0x5c02]
0x1c3df: lea rdx,[rip+0x6445]
0x1c3e6: movzx r8d,r8b
0x1c3ea: mov r9,rbx
0x1c3ed: mov rdi,qword ptr [rsp+0x10]
0x1c3f2: call 0x166b0
0x1c3f7: mov edi,dword ptr [rbx]
0x1c3f9: mov qword ptr [rsp+0x28],rax
0x1c3fe: test edi,edi
0x1c400: jz 0x1bbfc
0x1c406: test rax,rax
0x1c409: jnz 0x1bbfc
0x1c40f: jmp 0x1bb60
0x1c414: nop qword ptr [rax+0x0]
0x1c418: mov rbx,qword ptr [rsp+0x40]
0x1c41d: cmp cl,0x21
0x1c420: mov rsi,qword ptr [rdi+0x78]
0x1c424: setz r8b
0x1c428: lea rcx,[rip+0x36e8]
0x1c42f: lea rdx,[rip+0x63e9]
0x1c436: movzx r8d,r8b
0x1c43a: mov r9,rbx
0x1c43d: jmp 0x1c3ed
0x1c43f: mov rax,qword ptr [rsp+0x18]
0x1c444: mov rdi,qword ptr [rsp+0x10]
0x1c449: mov rcx,qword ptr [rax]
0x1c44c: mov eax,0x1
0x1c451: shl eax,cl
0x1c453: cwde 
0x1c455: test qword ptr [rdi+0xa8],rax
0x1c45c: jz 0x1ca8e
0x1c462: mov rbx,qword ptr [rsp+0x10]
0x1c467: mov r8,qword ptr [rsp+0x18]
0x1c46c: xor ecx,ecx
0x1c46e: xor edx,edx
0x1c470: or qword ptr [rbx+0xa0],rax
0x1c477: lea rsi,[rbx+0x80]
0x1c47e: lea rdi,[rbx+0x70]
0x1c482: call 0x13360
0x1c487: test rax,rax
0x1c48a: mov qword ptr [rsp+0x28],rax
0x1c48f: jz 0x1c5c8
0x1c495: add [rbx+0x98],0x1
0x1c49d: or [rbx+0xb0],0x2
0x1c4a4: jmp 0x1bbfc
0x1c4a9: mov rbx,qword ptr [rsp+0x10]
0x1c4ae: mov r8,qword ptr [rsp+0x18]
0x1c4b3: xor ecx,ecx
0x1c4b5: xor edx,edx
0x1c4b7: lea rsi,[rbx+0x80]
0x1c4be: lea rdi,[rbx+0x70]
0x1c4c2: call 0x13360
0x1c4c7: test rax,rax
0x1c4ca: mov qword ptr [rsp+0x28],rax
0x1c4cf: jz 0x1c5c8
0x1c4d5: cmp [rbx+0xb4],0x1
0x1c4dc: jle 0x1bbfc
0x1c4e2: or [rbx+0xb0],0x2
0x1c4e9: jmp 0x1bbfc
0x1c4ee: mov rax,qword ptr [rsp+0x10]
0x1c4f3: mov r8,qword ptr [rsp+0x18]
0x1c4f8: xor ecx,ecx
0x1c4fa: xor edx,edx
0x1c4fc: lea rbx,[rax+0x70]
0x1c500: lea rbp,[rax+0x80]
0x1c507: mov rdi,rbx
0x1c50a: mov rsi,rbp
0x1c50d: call 0x13360
0x1c512: test rax,rax
0x1c515: mov qword ptr [rsp+0x28],rax
0x1c51a: jz 0x1c5c8
0x1c520: mov rax,qword ptr [rsp+0x10]
0x1c525: lea r12,[rsp+0xc0]
0x1c52d: mov r15,qword ptr [rsp+0x28]
0x1c532: cmp [rax+0xb4],0x1
0x1c539: jle 0x1bbfc
0x1c53f: mov rax,qword ptr [r14+0x48]
0x1c543: cmp qword ptr [r14+0x68],rax
0x1c547: jle 0x1c851
0x1c54d: cmp rax,qword ptr [r14+0x30]
0x1c551: jz 0x1c851
0x1c557: mov rdx,qword ptr [r14+0x10]
0x1c55b: cmp [rdx+rax*4+0x0],0xff
0x1c55f: jnz 0x1c851
0x1c565: mov r13,qword ptr [rsp+0x18]
0x1c56a: mov rdx,qword ptr [rsp+0x20]
0x1c56f: mov rsi,r14
0x1c572: mov rdi,r13
0x1c575: call 0x1b2a0
0x1c57a: cwde 
0x1c57c: add qword ptr [r14+0x48],rax
0x1c580: mov r8,r13
0x1c583: xor ecx,ecx
0x1c585: xor edx,edx
0x1c587: mov rsi,rbp
0x1c58a: mov rdi,rbx
0x1c58d: call 0x13360
0x1c592: mov rdx,r15
0x1c595: mov r13,rax
0x1c598: mov r8,r12
0x1c59b: mov rcx,rax
0x1c59e: mov rsi,rbp
0x1c5a1: mov rdi,rbx
0x1c5a4: mov [rsp+0xc8],0x10
0x1c5ac: call 0x13360
0x1c5b1: test r13,r13
0x1c5b4: mov r15,rax
0x1c5b7: setz dl
0x1c5ba: test rax,rax
0x1c5bd: setz al
0x1c5c0: or dl,al
0x1c5c2: jz 0x1c53f
0x1c5c8: mov rax,qword ptr [rsp+0x40]
0x1c5cd: mov [rax],0xc
0x1c5d3: jmp 0x1bb60
0x1c5d8: test [rsp+0x20],0x20000
0x1c5e1: jnz 0x1bbcb
0x1c5e7: mov rax,qword ptr [rsp+0x40]
0x1c5ec: mov [rsp+0x28],0x0
0x1c5f5: mov [rax],0x10
0x1c5fb: jmp 0x1bb70
0x1c600: cmp rbx,0x8
0x1c604: jbe 0x1c66b
0x1c606: mov rdi,qword ptr [rsp+0x10]
0x1c60b: lea r8,[rsp+0xc0]
0x1c613: xor ecx,ecx
0x1c615: mov rdx,rax
0x1c618: mov [rsp+0xc8],0x11
0x1c620: lea rsi,[rdi+0x80]
0x1c627: add rdi,0x70
0x1c62b: call 0x13360
0x1c630: test rax,rax
0x1c633: mov qword ptr [rsp+0x28],rax
0x1c638: jz 0x1c5c8
0x1c63a: mov qword ptr [rax+0x28],rbx
0x1c63e: jmp 0x1bbfc
0x1c643: mov rax,qword ptr [rsp+0x40]
0x1c648: mov [rsp+0x28],0x0
0x1c651: mov [rax],0x5
0x1c657: jmp 0x1bb70
0x1c65c: mov r13,qword ptr [rsp+0x28]
0x1c661: mov qword ptr [rsp+0x30],r13
0x1c666: jmp 0x1beb4
0x1c66b: mov rsi,qword ptr [rsp+0x10]
0x1c670: mov edx,0x1
0x1c675: mov ecx,ebx
0x1c677: shl edx,cl
0x1c679: movsxd rdx,edx
0x1c67c: or qword ptr [rsi+0xa8],rdx
0x1c683: jmp 0x1c606
0x1c685: mov rsi,qword ptr [rsp+0xa8]
0x1c68d: mov rdi,r12
0x1c690: call 0x15e50
0x1c695: mov rdx,qword ptr [rsp+0x40]
0x1c69a: test eax,eax
0x1c69c: mov dword ptr [rdx],eax
0x1c69e: jnz 0x1c6d8
0x1c6a0: movzx eax,byte ptr [r15+0x8]
0x1c6a5: cmp al,0x2
0x1c6a7: jz 0x1c841
0x1c6ad: cmp al,0x15
0x1c6af: jz 0x1cac2
0x1c6b5: xor r9d,r9d
0x1c6b8: jmp 0x1c342
0x1c6bd: mov rsi,qword ptr [rsp+0xa8]
0x1c6c5: mov rdi,r12
0x1c6c8: call 0x15e50
0x1c6cd: mov rdx,qword ptr [rsp+0x40]
0x1c6d2: test eax,eax
0x1c6d4: mov dword ptr [rdx],eax
0x1c6d6: jz 0x1c6a0
0x1c6d8: mov rdi,r12
0x1c6db: call 0x2a10
0x1c6e0: mov rdi,r13
0x1c6e3: call 0x11dc0
0x1c6e8: mov rax,qword ptr [rsp+0x40]
0x1c6ed: mov r8d,dword ptr [rax]
0x1c6f0: test r8d,r8d
0x1c6f3: jnz 0x1bb60
0x1c6f9: mov [rsp+0x28],0x0
0x1c702: jmp 0x1bbfc
0x1c707: mov rdx,qword ptr [r13+0x28]
0x1c70b: cmp rdx,qword ptr [rsp+0x30]
0x1c710: mov rax,qword ptr [r13+0x0]
0x1c714: jz 0x1cc0e
0x1c71a: lea rcx,[rdx+0x1]
0x1c71e: mov qword ptr [r13+0x28],rcx
0x1c722: mov ecx,dword ptr [rsp+0xa8]
0x1c729: mov dword ptr [rax+rdx*4+0x0],ecx
0x1c72c: jmp 0x1c6a0
0x1c731: movzx edx,byte ptr [rsp+0xa8]
0x1c739: mov esi,0x1
0x1c73e: mov rax,rdx
0x1c741: and edx,0x3f
0x1c744: shr rax,0x3
0x1c748: mov ecx,edx
0x1c74a: and eax,0x18
0x1c74d: shl rsi,cl
0x1c750: or qword ptr [r12+rax*1+0x0],rsi
0x1c754: jmp 0x1c6a0
0x1c759: sub rsp,0x8
0x1c75d: mov rdi,qword ptr [r14+0x78]
0x1c761: lea rdx,[r13+0x18]
0x1c765: push qword ptr [rsp+0x28]
0x1c769: mov r9,qword ptr [rsp+0xb8]
0x1c771: lea rcx,[r13+0x48]
0x1c775: mov r8,qword ptr [rsp+0x68]
0x1c77a: mov rsi,r12
0x1c77d: call 0x15ea0
0x1c782: mov rdx,qword ptr [rsp+0x50]
0x1c787: test eax,eax
0x1c789: mov dword ptr [rdx],eax
0x1c78b: pop r9
0x1c78d: pop r10
0x1c78f: jz 0x1c6a0
0x1c795: jmp 0x1c6d8
0x1c79a: or [r13+0x20],0x1
0x1c79f: test [rsp+0x20],0x100
0x1c7a8: jz 0x1c7b2
0x1c7aa: or [r12],0x400
0x1c7b2: add qword ptr [r14+0x48],rbx
0x1c7b6: mov r11,qword ptr [rsp+0x18]
0x1c7bb: mov rsi,r14
0x1c7be: mov rdx,qword ptr [rsp+0x20]
0x1c7c3: mov rdi,r11
0x1c7c6: call 0x10b90
0x1c7cb: mov ebx,eax
0x1c7cd: movzx eax,byte ptr [r11+0x8]
0x1c7d2: cmp al,0x2
0x1c7d4: jz 0x1ca69
0x1c7da: mov [rsp+0x57],0x1
0x1c7df: jmp 0x1c2d6
0x1c7e4: mov rax,qword ptr [rsp+0x18]
0x1c7e9: mov [rax+0x8],0x1
0x1c7ed: jmp 0x1c2de
0x1c7f2: mov [r15],0x6
0x1c7f9: mov r8,r15
0x1c7fc: xor ecx,ecx
0x1c7fe: xor edx,edx
0x1c800: mov rsi,r12
0x1c803: mov rdi,rbx
0x1c806: call 0x13360
0x1c80b: mov [r15],0x9
0x1c812: mov rbp,rax
0x1c815: jmp 0x1c1e6
0x1c81a: mov r8,qword ptr [rsp+0x18]
0x1c81f: xor ecx,ecx
0x1c821: xor edx,edx
0x1c823: mov rsi,r12
0x1c826: mov rdi,rbx
0x1c829: call 0x13360
0x1c82e: test rax,rax
0x1c831: mov qword ptr [rsp+0x28],rax
0x1c836: jnz 0x1c243
0x1c83c: jmp 0x1c5c8
0x1c841: mov rax,qword ptr [rsp+0x40]
0x1c846: mov [rax],0x7
0x1c84c: jmp 0x1c6d8
0x1c851: mov qword ptr [rsp+0x28],r15
0x1c856: jmp 0x1bbfc
0x1c85b: mov rdx,qword ptr [rsp+0x40]
0x1c860: mov dword ptr [rdx],eax
0x1c862: jmp 0x1c6d8
0x1c867: movsxd rax,ebx
0x1c86a: mov r11,qword ptr [rsp+0x20]
0x1c86f: add qword ptr [r14+0x48],rax
0x1c873: mov r10,qword ptr [rsp+0x60]
0x1c878: mov rdx,r11
0x1c87b: mov rdi,r10
0x1c87e: call 0x10b90
0x1c883: movzx edx,byte ptr [rsp+0xc8]
0x1c88b: cmp dl,0x2
0x1c88e: jz 0x1c841
0x1c890: cmp dl,0x15
0x1c893: jz 0x1caa7
0x1c899: mov rdx,qword ptr [rsp+0x68]
0x1c89e: lea rdi,[rsp+0xb0]
0x1c8a6: mov r9d,0x1
0x1c8ac: mov r8,r11
0x1c8af: mov ecx,eax
0x1c8b1: mov [rsp+0xb0],0x3
0x1c8bc: mov qword ptr [rsp+0xb8],rdx
0x1c8c4: mov rdx,r10
0x1c8c7: call 0x1b040
0x1c8cc: test eax,eax
0x1c8ce: jnz 0x1c85b
0x1c8d0: mov rdx,qword ptr [rsp+0x20]
0x1c8d5: mov rsi,r14
0x1c8d8: mov rdi,r15
0x1c8db: call 0x10b90
0x1c8e0: movsxd rbx,eax
0x1c8e3: mov rax,qword ptr [rsp+0x10]
0x1c8e8: mov esi,dword ptr [rsp+0xa0]
0x1c8ef: mov r9d,0x0
0x1c8f5: cmp [rax+0xb4],0x1
0x1c8fc: lea eax,[rsi-0x2]
0x1c8ff: cmovnl r9,r13
0x1c903: and eax,0xfd
0x1c906: jz 0x1cd79
0x1c90c: mov r10d,dword ptr [rsp+0xb0]
0x1c914: lea eax,[r10-0x2]
0x1c918: and eax,0xfd
0x1c91b: jz 0x1cd79
0x1c921: cmp esi,0x3
0x1c924: setz r11b
0x1c928: jz 0x1cdbd
0x1c92e: cmp r10d,0x3
0x1c932: jz 0x1cd89
0x1c938: test esi,esi
0x1c93a: jnz 0x1cca9
0x1c940: movzx edx,byte ptr [rsp+0xa8]
0x1c948: test r10d,r10d
0x1c94b: jnz 0x1cc8d
0x1c951: movzx r8d,byte ptr [rsp+0xb8]
0x1c95a: test esi,esi
0x1c95c: jz 0x1cc46
0x1c962: test r11b,r11b
0x1c965: jnz 0x1cc46
0x1c96b: test r9,r9
0x1c96e: mov edx,dword ptr [rsp+0xa8]
0x1c975: jz 0x1c994
0x1c977: mov edi,r8d
0x1c97a: mov dword ptr [rsp+0x78],edx
0x1c97e: mov qword ptr [rsp+0x70],r9
0x1c983: call 0x2880
0x1c988: mov r9,qword ptr [rsp+0x70]
0x1c98d: mov edx,dword ptr [rsp+0x78]
0x1c991: mov r8d,eax
0x1c994: cmp edx,0xff
0x1c997: jz 0x1cdad
0x1c99d: cmp r8d,0xff
0x1c9a1: jz 0x1cdad
0x1c9a7: test [rsp+0x20],0x10000
0x1c9b0: jz 0x1c9bb
0x1c9b2: cmp r8d,edx
0x1c9b5: jb 0x1cd79
0x1c9bb: test r9,r9
0x1c9be: jz 0x1c9e6
0x1c9c0: mov rax,qword ptr [r9+0x40]
0x1c9c4: cmp rax,qword ptr [rsp+0x48]
0x1c9c9: mov rcx,qword ptr [r9+0x8]
0x1c9cd: jz 0x1cde3
0x1c9d3: mov dword ptr [rcx+rax*4+0x0],edx
0x1c9d6: mov rcx,qword ptr [r9+0x10]
0x1c9da: lea rsi,[rax+0x1]
0x1c9de: mov qword ptr [r9+0x40],rsi
0x1c9e2: mov dword ptr [rcx+rax*4+0x0],r8d
0x1c9e6: xor eax,eax
0x1c9e8: mov edi,0x1
0x1c9ed: cmp edx,eax
0x1c9ef: mov ecx,eax
0x1c9f1: jnbe 0x1ca09
0x1c9f3: cmp r8d,eax
0x1c9f6: jb 0x1ca09
0x1c9f8: mov rsi,rax
0x1c9fb: mov r11,rdi
0x1c9fe: sar rsi,0x6
0x1ca02: shl r11,cl
0x1ca05: or qword ptr [r12+rsi*8+0x0],r11
0x1ca09: add rax,0x1
0x1ca0d: cmp rax,0x100
0x1ca13: jnz 0x1c9ed
0x1ca15: mov rax,qword ptr [rsp+0x40]
0x1ca1a: mov [rax],0x0
0x1ca20: jmp 0x1c6a0
0x1ca25: mov rbx,qword ptr [rsp+0x18]
0x1ca2a: mov rdx,rax
0x1ca2d: mov rsi,r14
0x1ca30: mov qword ptr [rsp],r8
0x1ca34: mov r15,rax
0x1ca37: mov rdi,rbx
0x1ca3a: call 0x1b2a0
0x1ca3f: cwde 
0x1ca41: add qword ptr [r14+0x48],rax
0x1ca45: mov r9,qword ptr [rsp+0x40]
0x1ca4a: mov r8,qword ptr [rsp]
0x1ca4e: mov rcx,r15
0x1ca51: mov rdx,rbx
0x1ca54: mov rsi,rbp
0x1ca57: mov rdi,r14
0x1ca5a: call 0x1ba60
0x1ca5f: mov qword ptr [rsp+0x28],rax
0x1ca64: jmp 0x1bb70
0x1ca69: mov rax,qword ptr [rsp+0x40]
0x1ca6e: mov [rax],0x2
0x1ca74: jmp 0x1c6d8
0x1ca79: mov rdi,r12
0x1ca7c: call 0x2a10
0x1ca81: mov rdi,r13
0x1ca84: call 0x2a10
0x1ca89: jmp 0x1c5c8
0x1ca8e: mov rax,qword ptr [rsp+0x40]
0x1ca93: mov [rsp+0x28],0x0
0x1ca9c: mov [rax],0x6
0x1caa2: jmp 0x1bb70
0x1caa7: mov eax,ebx
0x1caa9: neg eax
0x1caab: cwde 
0x1caad: add qword ptr [r14+0x48],rax
0x1cab1: mov [r15+0x8],0x1
0x1cab6: mov eax,dword ptr [rsp+0xa0]
0x1cabd: jmp 0x1c3b5
0x1cac2: add qword ptr [r14+0x48],rbx
0x1cac6: cmp [rsp+0x57],0x0
0x1cacb: jz 0x1cae1
0x1cacd: lea rdx,[r12+0x20]
0x1cad2: mov rax,r12
0x1cad5: not qword ptr [rax]
0x1cad8: add rax,0x8
0x1cadc: cmp rdx,rax
0x1cadf: jnz 0x1cad5
0x1cae1: mov rax,qword ptr [rsp+0x10]
0x1cae6: mov edx,dword ptr [rax+0xb4]
0x1caec: cmp edx,0x1
0x1caef: jle 0x1cb09
0x1caf1: mov rcx,qword ptr [rax+0x78]
0x1caf5: xor eax,eax
0x1caf7: mov rsi,qword ptr [rcx+rax*1+0x0]
0x1cafb: and qword ptr [r12+rax*1+0x0],rsi
0x1caff: add rax,0x8
0x1cb03: cmp rax,0x20
0x1cb07: jnz 0x1caf7
0x1cb09: cmp [r13+0x28],0x0
0x1cb0e: jnz 0x1cb98
0x1cb14: cmp [r13+0x30],0x0
0x1cb19: jnz 0x1cb98
0x1cb1b: cmp [r13+0x38],0x0
0x1cb20: jnz 0x1cb98
0x1cb22: cmp [r13+0x40],0x0
0x1cb27: jnz 0x1cb98
0x1cb29: sub edx,0x1
0x1cb2c: jle 0x1cb3c
0x1cb2e: cmp [r13+0x48],0x0
0x1cb33: jnz 0x1cb98
0x1cb35: test [r13+0x20],0x1
0x1cb3a: jnz 0x1cb98
0x1cb3c: mov rdi,r13
0x1cb3f: call 0x11dc0
0x1cb44: mov rax,qword ptr [rsp+0x10]
0x1cb49: lea r8,[rsp+0xb0]
0x1cb51: xor ecx,ecx
0x1cb53: xor edx,edx
0x1cb55: mov [rsp+0xb8],0x3
0x1cb5d: mov qword ptr [rsp+0xb0],r12
0x1cb65: lea rsi,[rax+0x80]
0x1cb6c: lea rdi,[rax+0x70]
0x1cb70: call 0x13360
0x1cb75: test rax,rax
0x1cb78: mov qword ptr [rsp+0x28],rax
0x1cb7d: jnz 0x1bbfc
0x1cb83: mov rax,qword ptr [rsp+0x40]
0x1cb88: mov [rax],0xc
0x1cb8e: jmp 0x1c6d8
0x1cb93: nop qword ptr [rax+rax*1+0x0]
0x1cb98: mov rax,qword ptr [rsp+0x10]
0x1cb9d: lea r15,[rsp+0xb0]
0x1cba5: xor edx,edx
0x1cba7: xor ecx,ecx
0x1cba9: mov r8,r15
0x1cbac: or [rax+0xb0],0x2
0x1cbb3: lea rbx,[rax+0x70]
0x1cbb7: lea rbp,[rax+0x80]
0x1cbbe: mov [rsp+0xb8],0x6
0x1cbc6: mov qword ptr [rsp+0xb0],r13
0x1cbce: mov rdi,rbx
0x1cbd1: mov rsi,rbp
0x1cbd4: call 0x13360
0x1cbd9: mov rdi,rax
0x1cbdc: mov qword ptr [rsp+0x28],rax
0x1cbe1: lea rdx,[r12+0x20]
0x1cbe6: test rdi,rdi
0x1cbe9: mov rax,r12
0x1cbec: jz 0x1cb83
0x1cbee: cmp [rax],0x0
0x1cbf2: jnz 0x1ce9d
0x1cbf8: add rax,0x8
0x1cbfc: cmp rdx,rax
0x1cbff: jnz 0x1cbee
0x1cc01: mov rdi,r12
0x1cc04: call 0x2a10
0x1cc09: jmp 0x1bbfc
0x1cc0e: mov rdx,qword ptr [rsp+0x30]
0x1cc13: lea rdi,[rdx+rdx*1+0x1]
0x1cc18: lea rsi,[rdi*4+0x0]
0x1cc20: mov qword ptr [rsp+0x30],rdi
0x1cc25: mov rdi,rax
0x1cc28: call 0x2830
0x1cc2d: test rax,rax
0x1cc30: jz 0x1cb83
0x1cc36: mov qword ptr [r13+0x0],rax
0x1cc3a: mov rdx,qword ptr [r13+0x28]
0x1cc3e: jmp 0x1c71a
0x1cc43: xor r8d,r8d
0x1cc46: test r9,r9
0x1cc49: jz 0x1ccc4
0x1cc4b: mov edi,edx
0x1cc4d: mov dword ptr [rsp+0x78],r8d
0x1cc52: mov qword ptr [rsp+0x70],r9
0x1cc57: call 0x2880
0x1cc5c: mov edx,eax
0x1cc5e: mov eax,dword ptr [rsp+0xb0]
0x1cc65: mov r9,qword ptr [rsp+0x70]
0x1cc6a: mov r8d,dword ptr [rsp+0x78]
0x1cc6f: cmp eax,0x3
0x1cc72: jz 0x1c977
0x1cc78: test eax,eax
0x1cc7a: jz 0x1c977
0x1cc80: mov r8d,dword ptr [rsp+0xb8]
0x1cc88: jmp 0x1c994
0x1cc8d: cmp r10d,0x3
0x1cc91: jz 0x1cf22
0x1cc97: test esi,esi
0x1cc99: jz 0x1cc43
0x1cc9b: test r11b,r11b
0x1cc9e: jnz 0x1cc43
0x1cca0: mov edx,dword ptr [rsp+0xa8]
0x1cca7: jmp 0x1cc80
0x1cca9: xor edx,edx
0x1ccab: cmp esi,0x3
0x1ccae: jnz 0x1c948
0x1ccb4: mov rax,qword ptr [rsp+0xa8]
0x1ccbc: movzx edx,byte ptr [rax]
0x1ccbf: jmp 0x1c948
0x1ccc4: test r10d,r10d
0x1ccc7: jz 0x1c9a7
0x1cccd: cmp r10d,0x3
0x1ccd1: jnz 0x1cc80
0x1ccd3: jmp 0x1c9a7
0x1ccd8: mov ebx,0x80
0x1ccdd: mov r12d,0x2
0x1cce3: call 0x29f0
0x1cce8: movsxd rdx,ebx
0x1cceb: movsxd r9,r12d
0x1ccee: mov r8d,0x1
0x1ccf4: add rdx,rdx
0x1ccf7: add rdx,qword ptr [rax]
0x1ccfa: mov rax,qword ptr [rsp+0x10]
0x1ccff: lea rdi,[rax+r9*8+0x0]
0x1cd03: xor eax,eax
0x1cd05: jmp 0x1cd22
0x1cd07: nop qword ptr [rax+rax*1+0x0]
0x1cd10: lea esi,[rbx+rax*1+0x0]
0x1cd13: cmp esi,0x5f
0x1cd16: jz 0x1cd2a
0x1cd18: add rax,0x1
0x1cd1c: cmp rax,0x40
0x1cd20: jz 0x1cd39
0x1cd22: test [rdx+rax*2+0x0],0x8
0x1cd26: mov ecx,eax
0x1cd28: jz 0x1cd10
0x1cd2a: mov rsi,r8
0x1cd2d: shl rsi,cl
0x1cd30: or qword ptr [rdi+0xb8],rsi
0x1cd37: jmp 0x1cd18
0x1cd39: add r9,0x1
0x1cd3d: add ebx,0x40
0x1cd40: sub rdx,0xffffff80
0x1cd44: add rdi,0x8
0x1cd48: cmp r9d,0x3
0x1cd4c: jle 0x1cd03
0x1cd4e: jmp 0x1c191
0x1cd53: xor ebx,ebx
0x1cd55: xor r12d,r12d
0x1cd58: jmp 0x1cce3
0x1cd5a: lea rcx,[rip+0x602f]
0x1cd61: lea rsi,[rip+0x5a58]
0x1cd68: lea rdi,[rip+0x4797]
0x1cd6f: mov edx,0xced
0x1cd74: call 0x2600
0x1cd79: mov rax,qword ptr [rsp+0x40]
0x1cd7e: mov [rax],0xb
0x1cd84: jmp 0x1c6d8
0x1cd89: mov rdi,qword ptr [rsp+0xb8]
0x1cd91: xor eax,eax
0x1cd93: or rcx,0xffffffff
0x1cd97: repnz scasb al,byte ptr es:[rdi]
0x1cd99: mov rax,rcx
0x1cd9c: not rax
0x1cd9f: sub rax,0x1
0x1cda3: cmp rax,0x1
0x1cda7: jbe 0x1c938
0x1cdad: mov rax,qword ptr [rsp+0x40]
0x1cdb2: mov [rax],0x3
0x1cdb8: jmp 0x1c6d8
0x1cdbd: mov rdi,qword ptr [rsp+0xa8]
0x1cdc5: xor eax,eax
0x1cdc7: or rcx,0xffffffff
0x1cdcb: repnz scasb al,byte ptr es:[rdi]
0x1cdcd: mov rax,rcx
0x1cdd0: not rax
0x1cdd3: sub rax,0x1
0x1cdd7: cmp rax,0x1
0x1cddb: jbe 0x1c92e
0x1cde1: jmp 0x1cdad
0x1cde3: mov rax,qword ptr [rsp+0x48]
0x1cde8: mov rdi,rcx
0x1cdeb: mov dword ptr [rsp+0x8c],r8d
0x1cdf3: mov dword ptr [rsp+0x88],edx
0x1cdfa: mov qword ptr [rsp+0x70],r9
0x1cdff: add rax,rax
0x1ce02: add rax,0x1
0x1ce06: lea r10,[rax*4+0x0]
0x1ce0e: mov qword ptr [rsp+0x48],rax
0x1ce13: mov rsi,r10
0x1ce16: mov qword ptr [rsp+0x80],r10
0x1ce1e: call 0x2830
0x1ce23: mov r9,qword ptr [rsp+0x70]
0x1ce28: mov r10,qword ptr [rsp+0x80]
0x1ce30: mov qword ptr [rsp+0x78],rax
0x1ce35: mov rdi,qword ptr [r9+0x10]
0x1ce39: mov rsi,r10
0x1ce3c: call 0x2830
0x1ce41: mov rcx,qword ptr [rsp+0x78]
0x1ce46: test rcx,rcx
0x1ce49: jz 0x1ce75
0x1ce4b: test rax,rax
0x1ce4e: mov r9,qword ptr [rsp+0x70]
0x1ce53: mov edx,dword ptr [rsp+0x88]
0x1ce5a: mov r8d,dword ptr [rsp+0x8c]
0x1ce62: jz 0x1ce75
0x1ce64: mov qword ptr [r9+0x10],rax
0x1ce68: mov qword ptr [r9+0x8],rcx
0x1ce6c: mov rax,qword ptr [r9+0x40]
0x1ce70: jmp 0x1c9d3
0x1ce75: mov rdi,rcx
0x1ce78: mov qword ptr [rsp],rax
0x1ce7c: call 0x2a10
0x1ce81: mov rax,qword ptr [rsp]
0x1ce85: mov rdi,rax
0x1ce88: call 0x2a10
0x1ce8d: mov rax,qword ptr [rsp+0x40]
0x1ce92: mov [rax],0xc
0x1ce98: jmp 0x1c6d8
0x1ce9d: xor ecx,ecx
0x1ce9f: xor edx,edx
0x1cea1: mov r8,r15
0x1cea4: mov rsi,rbp
0x1cea7: mov rdi,rbx
0x1ceaa: mov [rsp+0xb8],0x3
0x1ceb2: mov qword ptr [rsp+0xb0],r12
0x1ceba: call 0x13360
0x1cebf: test rax,rax
0x1cec2: jz 0x1cb83
0x1cec8: mov rcx,qword ptr [rsp+0x28]
0x1cecd: lea r8,[rsp+0xc0]
0x1ced5: mov rdx,rax
0x1ced8: mov rsi,rbp
0x1cedb: mov rdi,rbx
0x1cede: mov [rsp+0xc8],0xa
0x1cee6: call 0x13360
0x1ceeb: test rax,rax
0x1ceee: mov qword ptr [rsp+0x28],rax
0x1cef3: jnz 0x1bbfc
0x1cef9: jmp 0x1cb83
0x1cefe: call 0x2560
0x1cf03: mov rax,qword ptr [rsp+0x18]
0x1cf08: cmp [rax+0x8],0x2
0x1cf0c: jnz 0x1c100
0x1cf12: mov rax,qword ptr [rsp+0x40]
0x1cf17: mov [rax],0x9
0x1cf1d: jmp 0x1c10b
0x1cf22: mov rax,qword ptr [rsp+0xb8]
0x1cf2a: movzx r8d,byte ptr [rax]
0x1cf2e: jmp 0x1c95a
0x1cf40: push r15
0x1cf42: push r14
0x1cf44: mov r15,rcx
0x1cf47: push r13
0x1cf49: push r12
0x1cf4b: mov r13,rsi
0x1cf4e: push rbp
0x1cf4f: push rbx
0x1cf50: mov rbx,r9
0x1cf53: mov rbp,rdx
0x1cf56: mov r12,r8
0x1cf59: sub rsp,0x48
0x1cf5d: mov rax,0x28
0x1cf66: mov qword ptr [rsp+0x38],rax
0x1cf6b: xor eax,eax
0x1cf6d: mov rax,qword ptr [rsi]
0x1cf70: mov qword ptr [rsp],rdi
0x1cf74: mov qword ptr [rsp+0x10],rax
0x1cf79: call 0x1ba60
0x1cf7e: mov edx,dword ptr [rbx]
0x1cf80: mov r14,rax
0x1cf83: test edx,edx
0x1cf85: jz 0x1cf90
0x1cf87: test rax,rax
0x1cf8a: jz 0x1d08a
0x1cf90: lea rax,[rsp+0x20]
0x1cf95: mov qword ptr [rsp+0x18],rax
0x1cf9a: nop qword ptr [rax+rax*1+0x0]
0x1cfa0: movzx eax,byte ptr [rbp+0x8]
0x1cfa4: mov edx,eax
0x1cfa6: and edx,0xf7
0x1cfa9: cmp dl,0x2
0x1cfac: jz 0x1d040
0x1cfb2: cmp al,0x9
0x1cfb4: jnz 0x1cfbf
0x1cfb6: test r12,r12
0x1cfb9: jnz 0x1d040
0x1cfbf: mov rdi,qword ptr [rsp]
0x1cfc3: mov r9,rbx
0x1cfc6: mov r8,r12
0x1cfc9: mov rcx,r15
0x1cfcc: mov rdx,rbp
0x1cfcf: mov rsi,r13
0x1cfd2: call 0x1ba60
0x1cfd7: mov r9,rax
0x1cfda: mov eax,dword ptr [rbx]
0x1cfdc: test eax,eax
0x1cfde: jz 0x1cfe9
0x1cfe0: test r9,r9
0x1cfe3: jz 0x1d074
0x1cfe9: test r14,r14
0x1cfec: jz 0x1d068
0x1cfee: test r9,r9
0x1cff1: jz 0x1d068
0x1cff3: mov rax,qword ptr [rsp+0x10]
0x1cff8: mov r8,qword ptr [rsp+0x18]
0x1cffd: mov rcx,r9
0x1d000: mov rdx,r14
0x1d003: mov qword ptr [rsp+0x8],r9
0x1d008: mov [rsp+0x28],0x10
0x1d00d: lea rsi,[rax+0x80]
0x1d014: lea rdi,[rax+0x70]
0x1d018: call 0x13360
0x1d01d: test rax,rax
0x1d020: mov r9,qword ptr [rsp+0x8]
0x1d025: jz 0x1d090
0x1d027: mov r14,rax
0x1d02a: movzx eax,byte ptr [rbp+0x8]
0x1d02e: mov edx,eax
0x1d030: and edx,0xf7
0x1d033: cmp dl,0x2
0x1d036: jnz 0x1cfb2
0x1d03c: nop qword ptr [rax+0x0]
0x1d040: mov rcx,qword ptr [rsp+0x38]
0x1d045: xor rcx,0x28
0x1d04e: mov rax,r14
0x1d051: jnz 0x1d0bd
0x1d053: add rsp,0x48
0x1d057: pop rbx
0x1d058: pop rbp
0x1d059: pop r12
0x1d05b: pop r13
0x1d05d: pop r14
0x1d05f: pop r15
0x1d061: ret
0x1d062: nop qword ptr [rax+rax*1+0x0]
0x1d068: test r14,r14
0x1d06b: cmove r14,r9
0x1d06f: jmp 0x1cfa0
0x1d074: test r14,r14
0x1d077: jz 0x1d08a
0x1d079: lea rsi,[rip-0xb260]
0x1d080: xor edx,edx
0x1d082: mov rdi,r14
0x1d085: call 0x10f80
0x1d08a: xor r14d,r14d
0x1d08d: jmp 0x1d040
0x1d08f: nop 
0x1d090: lea rsi,[rip-0xb277]
0x1d097: mov rdi,r9
0x1d09a: xor edx,edx
0x1d09c: call 0x10f80
0x1d0a1: lea rsi,[rip-0xb288]
0x1d0a8: mov rdi,r14
0x1d0ab: xor edx,edx
0x1d0ad: xor r14d,r14d
0x1d0b0: call 0x10f80
0x1d0b5: mov [rbx],0xc
0x1d0bb: jmp 0x1d040
0x1d0bd: call 0x2560
0x1d0d0: push r15
0x1d0d2: push r14
0x1d0d4: mov r14,rcx
0x1d0d7: push r13
0x1d0d9: push r12
0x1d0db: mov r13,r9
0x1d0de: push rbp
0x1d0df: push rbx
0x1d0e0: mov rbp,rdx
0x1d0e3: mov r12,rdi
0x1d0e6: sub rsp,0x58
0x1d0ea: mov rbx,qword ptr [rsi]
0x1d0ed: mov rax,0x28
0x1d0f6: mov qword ptr [rsp+0x48],rax
0x1d0fb: xor eax,eax
0x1d0fd: mov qword ptr [rsp+0x28],rsi
0x1d102: mov qword ptr [rsp+0x10],r8
0x1d107: mov rax,qword ptr [rbx+0xa8]
0x1d10e: mov qword ptr [rsp+0x20],rax
0x1d113: call 0x1cf40
0x1d118: mov edx,dword ptr [r13+0x0]
0x1d11c: mov r15,rax
0x1d11f: test edx,edx
0x1d121: jz 0x1d12c
0x1d123: test rax,rax
0x1d126: jz 0x1d212
0x1d12c: lea rax,[rsp+0x30]
0x1d131: mov qword ptr [rsp+0x8],rax
0x1d136: jmp 0x1d1c4
0x1d13b: nop qword ptr [rax+rax*1+0x0]
0x1d140: cmp al,0x9
0x1d142: jnz 0x1d150
0x1d144: cmp [rsp+0x10],0x0
0x1d14a: jnz 0x1d1f8
0x1d150: mov rax,qword ptr [rbx+0xa8]
0x1d157: mov r8,qword ptr [rsp+0x10]
0x1d15c: mov rcx,r14
0x1d15f: mov rsi,qword ptr [rsp+0x28]
0x1d164: mov r9,r13
0x1d167: mov rdx,rbp
0x1d16a: mov rdi,r12
0x1d16d: mov qword ptr [rsp+0x18],rax
0x1d172: mov rax,qword ptr [rsp+0x20]
0x1d177: mov qword ptr [rbx+0xa8],rax
0x1d17e: call 0x1cf40
0x1d183: mov rcx,rax
0x1d186: mov eax,dword ptr [r13+0x0]
0x1d18a: test eax,eax
0x1d18c: jz 0x1d193
0x1d18e: test rcx,rcx
0x1d191: jz 0x1d1fc
0x1d193: mov rax,qword ptr [rsp+0x18]
0x1d198: or qword ptr [rbx+0xa8],rax
0x1d19f: mov r8,qword ptr [rsp+0x8]
0x1d1a4: lea rsi,[rbx+0x80]
0x1d1ab: lea rdi,[rbx+0x70]
0x1d1af: mov rdx,r15
0x1d1b2: mov [rsp+0x38],0xa
0x1d1b7: call 0x13360
0x1d1bc: test rax,rax
0x1d1bf: mov r15,rax
0x1d1c2: jz 0x1d240
0x1d1c4: cmp [rbp+0x8],0xa
0x1d1c8: jnz 0x1d218
0x1d1ca: mov rdx,r14
0x1d1cd: mov rsi,r12
0x1d1d0: mov rdi,rbp
0x1d1d3: or rdx,0x800000
0x1d1da: call 0x1b2a0
0x1d1df: cwde 
0x1d1e1: add qword ptr [r12+0x48],rax
0x1d1e6: movzx eax,byte ptr [rbp+0x8]
0x1d1ea: mov edx,eax
0x1d1ec: and edx,0xf7
0x1d1ef: cmp dl,0x2
0x1d1f2: jnz 0x1d140
0x1d1f8: xor ecx,ecx
0x1d1fa: jmp 0x1d19f
0x1d1fc: test r15,r15
0x1d1ff: jz 0x1d212
0x1d201: lea rsi,[rip-0xb3e8]
0x1d208: xor edx,edx
0x1d20a: mov rdi,r15
0x1d20d: call 0x10f80
0x1d212: xor r15d,r15d
0x1d215: nop qword ptr [rax]
0x1d218: mov rcx,qword ptr [rsp+0x48]
0x1d21d: xor rcx,0x28
0x1d226: mov rax,r15
0x1d229: jnz 0x1d24a
0x1d22b: add rsp,0x58
0x1d22f: pop rbx
0x1d230: pop rbp
0x1d231: pop r12
0x1d233: pop r13
0x1d235: pop r14
0x1d237: pop r15
0x1d239: ret
0x1d23a: nop qword ptr [rax+rax*1+0x0]
0x1d240: mov [r13+0x0],0xc
0x1d248: jmp 0x1d218
0x1d24a: call 0x2560
0x1d250: push r15
0x1d252: push r14
0x1d254: push r13
0x1d256: push r12
0x1d258: push rbp
0x1d259: push rbx
0x1d25a: sub rsp,0x128
0x1d261: mov qword ptr [rdi+0x18],rcx
0x1d265: mov [rdi+0x10],0x0
0x1d26d: mov rax,0x28
0x1d276: mov qword ptr [rsp+0x118],rax
0x1d27e: xor eax,eax
0x1d280: movzx eax,byte ptr [rdi+0x38]
0x1d284: mov qword ptr [rsp+0x8],rdi
0x1d289: mov qword ptr [rsp+0x10],rsi
0x1d28e: mov qword ptr [rsp],rdx
0x1d292: mov qword ptr [rsp+0x18],rcx
0x1d297: mov [rsp+0x4c],0x0
0x1d29f: mov [rdi+0x30],0x0
0x1d2a7: mov rbx,qword ptr [rdi]
0x1d2aa: mov byte ptr [rsp+0x20],al
0x1d2ae: and eax,0x90
0x1d2b1: cmp [rdi+0x8],0xe7
0x1d2b9: mov byte ptr [rdi+0x38],al
0x1d2bc: jbe 0x1e0b6
0x1d2c2: lea rdi,[rbx+0x8]
0x1d2c6: mov rax,qword ptr [rsp+0x8]
0x1d2cb: mov rcx,rbx
0x1d2ce: and rdi,0xfffffff8
0x1d2d2: sub rcx,rdi
0x1d2d5: mov [rax+0x10],0xe8
0x1d2dd: xor eax,eax
0x1d2df: add ecx,0xe8
0x1d2e5: mov [rbx],0x0
0x1d2ec: mov [rbx+0xe0],0x0
0x1d2f7: shr ecx,0x3
0x1d2fa: rep stosd qword ptr es:[rdi],rax
0x1d2fd: mov rax,0x384307168202282324
0x1d307: mov [rbx+0x80],0xf
0x1d311: cmp qword ptr [rsp],rax
0x1d315: jnbe 0x1d956
0x1d31b: mov r14,qword ptr [rsp]
0x1d31f: lea rax,[r14+0x1]
0x1d323: mov rdi,rax
0x1d326: mov qword ptr [rbx+0x8],rax
0x1d32a: mov qword ptr [rsp+0x28],rax
0x1d32f: shl rdi,0x4
0x1d333: call 0x2780
0x1d338: test r14,r14
0x1d33b: mov qword ptr [rbx],rax
0x1d33e: jz 0x1e025
0x1d344: mov esi,0x1
0x1d349: nop qword ptr [rax+0x0]
0x1d350: add rsi,rsi
0x1d353: cmp qword ptr [rsp],rsi
0x1d357: jnb 0x1d350
0x1d359: lea rbp,[rsi-0x1]
0x1d35d: mov edi,0x18
0x1d362: call 0x26b0
0x1d367: mov qword ptr [rbx+0x88],rbp
0x1d36e: mov qword ptr [rbx+0x40],rax
0x1d372: call 0x2520
0x1d377: mov edi,0xe
0x1d37c: mov dword ptr [rbx+0xb4],eax
0x1d382: call 0x27d0
0x1d387: movzx edx,byte ptr [rax]
0x1d38a: and edx,0xdf
0x1d38d: cmp dl,0x55
0x1d390: jnz 0x1d3e0
0x1d392: movzx edx,byte ptr [rax+0x1]
0x1d396: and edx,0xdf
0x1d399: cmp dl,0x54
0x1d39c: jnz 0x1d3e0
0x1d39e: movzx edx,byte ptr [rax+0x2]
0x1d3a2: and edx,0xdf
0x1d3a5: cmp dl,0x46
0x1d3a8: jnz 0x1d3e0
0x1d3aa: xor edx,edx
0x1d3ac: cmp [rax+0x3],0x2d
0x1d3b0: lea rdi,[rip+0x54ab]
0x1d3b7: mov ecx,0x2
0x1d3bc: setz dl
0x1d3bf: lea rsi,[rax+rdx*1+0x3]
0x1d3c4: rep cmpsb ds:[rsi],es:[rdi]
0x1d3c6: setnbe al
0x1d3c9: sbb al,0x0
0x1d3cb: test al,al
0x1d3cd: jnz 0x1d3e0
0x1d3cf: or [rbx+0xb0],0x4
0x1d3d6: nop qword ptr [rax+rax*1+0x0]
0x1d3e0: movzx eax,byte ptr [rbx+0xb0]
0x1d3e7: mov edx,eax
0x1d3e9: and edx,0xf7
0x1d3ec: cmp [rbx+0xb4],0x1
0x1d3f3: mov byte ptr [rbx+0xb0],dl
0x1d3f9: jle 0x1d40e
0x1d3fb: test al,0x4
0x1d3fd: jz 0x1d963
0x1d403: lea rax,[rip+0x59b6]
0x1d40a: mov qword ptr [rbx+0x78],rax
0x1d40e: cmp [rbx],0x0
0x1d412: jz 0x1d956
0x1d418: cmp [rbx+0x40],0x0
0x1d41d: jz 0x1d956
0x1d423: mov rax,qword ptr [rsp+0x18]
0x1d428: lea rbp,[rsp+0x80]
0x1d430: mov ecx,0x12
0x1d435: mov [rsp+0x4c],0x0
0x1d43d: lea r8,[rbp+0x8]
0x1d441: and eax,0x400000
0x1d446: mov qword ptr [rsp+0x20],rax
0x1d44b: mov rax,qword ptr [rsp+0x8]
0x1d450: setnz dl
0x1d453: mov rdi,r8
0x1d456: mov rsi,qword ptr [rax+0x28]
0x1d45a: xor eax,eax
0x1d45c: rep stosd qword ptr es:[rdi],rax
0x1d45f: mov rax,qword ptr [rsp+0x10]
0x1d464: mov rdi,qword ptr [rsp]
0x1d468: test rsi,rsi
0x1d46b: mov byte ptr [rsp+0x108],dl
0x1d472: mov ecx,dword ptr [rbx+0xb4]
0x1d478: setnz r12b
0x1d47c: mov qword ptr [rsp+0xf8],rsi
0x1d484: mov qword ptr [rsp+0x80],rax
0x1d48c: movzx eax,byte ptr [rbx+0xb0]
0x1d493: or r12d,edx
0x1d496: mov qword ptr [rsp+0xd8],rdi
0x1d49e: mov qword ptr [rsp+0xd0],rdi
0x1d4a6: mov esi,r12d
0x1d4a9: mov byte ptr [rsp+0x10b],r12b
0x1d4b1: mov dword ptr [rsp+0x110],ecx
0x1d4b8: mov qword ptr [rsp+0xe8],rdi
0x1d4c0: mov qword ptr [rsp+0xe0],rdi
0x1d4c8: mov edx,eax
0x1d4ca: shr al,0x3
0x1d4cd: shr dl,0x2
0x1d4d0: and eax,0x1
0x1d4d3: and edx,0x1
0x1d4d6: test rdi,rdi
0x1d4d9: mov byte ptr [rsp+0x10a],al
0x1d4e0: mov byte ptr [rsp+0x109],dl
0x1d4e7: jnz 0x1d925
0x1d4ed: test sil,sil
0x1d4f0: jz 0x1d4ff
0x1d4f2: mov rax,qword ptr [rsp+0x88]
0x1d4fa: mov qword ptr [rsp+0x10],rax
0x1d4ff: cmp [rsp+0x20],0x0
0x1d505: mov rax,qword ptr [rsp+0x10]
0x1d50a: mov qword ptr [rsp+0x88],rax
0x1d512: jz 0x1d615
0x1d518: cmp ecx,0x1
0x1d51b: jle 0x1e10d
0x1d521: mov rdi,rbp
0x1d524: call 0x115c0
0x1d529: test eax,eax
0x1d52b: jnz 0x1d570
0x1d52d: mov rax,qword ptr [rsp]
0x1d531: cmp rax,qword ptr [rsp+0xb8]
0x1d539: jle 0x1e0f0
0x1d53f: movsxd rax,dword ptr [rbx+0xb4]
0x1d546: mov rsi,qword ptr [rsp+0xc0]
0x1d54e: add rax,qword ptr [rsp+0xb0]
0x1d556: cmp rsi,rax
0x1d559: jnle 0x1e0f0
0x1d55f: add rsi,rsi
0x1d562: mov rdi,rbp
0x1d565: call 0x11050
0x1d56a: test eax,eax
0x1d56c: jz 0x1d521
0x1d56e: nop 
0x1d570: mov dword ptr [rsp+0x4c],eax
0x1d574: mov rax,qword ptr [rsp+0x8]
0x1d579: mov r13,qword ptr [rax]
0x1d57c: mov rdi,qword ptr [r13+0x70]
0x1d580: test rdi,rdi
0x1d583: jz 0x1d598
0x1d585: nop qword ptr [rax]
0x1d588: mov r12,qword ptr [rdi]
0x1d58b: call 0x2a10
0x1d590: test r12,r12
0x1d593: mov rdi,r12
0x1d596: jnz 0x1d588
0x1d598: mov rdi,qword ptr [r13+0x20]
0x1d59c: mov [r13+0x70],0x0
0x1d5a4: mov [r13+0x80],0xf
0x1d5af: mov [r13+0x68],0x0
0x1d5b7: call 0x2a10
0x1d5bc: mov [r13+0x20],0x0
0x1d5c4: mov rdi,rbp
0x1d5c7: call 0x12390
0x1d5cc: mov rdi,rbx
0x1d5cf: call 0x123d0
0x1d5d4: mov rax,qword ptr [rsp+0x8]
0x1d5d9: mov [rax],0x0
0x1d5e0: mov [rax+0x8],0x0
0x1d5e8: mov eax,dword ptr [rsp+0x4c]
0x1d5ec: mov rbx,qword ptr [rsp+0x118]
0x1d5f4: xor rbx,0x28
0x1d5fd: jnz 0x1e340
0x1d603: add rsp,0x128
0x1d60a: pop rbx
0x1d60b: pop rbp
0x1d60c: pop r12
0x1d60e: pop r13
0x1d610: pop r14
0x1d612: pop r15
0x1d614: ret
0x1d615: cmp ecx,0x1
0x1d618: jnle 0x1dfca
0x1d61e: test r12b,r12b
0x1d621: mov rsi,qword ptr [rsp+0xc0]
0x1d629: jz 0x1dc44
0x1d62f: cmp qword ptr [rsp+0xd8],rsi
0x1d637: mov rax,qword ptr [rsp+0xb0]
0x1d63f: cmovng rsi,qword ptr [rsp+0xd8]
0x1d648: cmp rsi,rax
0x1d64b: jnle 0x1d65d
0x1d64d: jmp 0x1d690
0x1d64f: nop 
0x1d650: mov rdx,qword ptr [rsp+0x88]
0x1d658: mov qword ptr [rsp+0x10],rdx
0x1d65d: mov rdx,qword ptr [rsp+0x80]
0x1d665: mov rcx,qword ptr [rsp+0xf8]
0x1d66d: add rdx,rax
0x1d670: add rdx,qword ptr [rsp+0xa8]
0x1d678: movzx edx,byte ptr [rdx]
0x1d67b: movzx edx,byte ptr [rcx+rdx*1+0x0]
0x1d67f: mov rcx,qword ptr [rsp+0x10]
0x1d684: mov byte ptr [rcx+rax*1+0x0],dl
0x1d687: add rax,0x1
0x1d68b: cmp rsi,rax
0x1d68e: jnz 0x1d650
0x1d690: mov qword ptr [rsp+0xb0],rax
0x1d698: mov qword ptr [rsp+0xb8],rax
0x1d6a0: mov [rsp+0x4c],0x0
0x1d6a8: mov r12,qword ptr [rsp+0x8]
0x1d6ad: mov r14,qword ptr [rsp+0x18]
0x1d6b2: lea r13,[rsp+0x50]
0x1d6b7: mov rsi,rbp
0x1d6ba: mov rdi,r13
0x1d6bd: mov qword ptr [rsp+0x28],r13
0x1d6c2: mov r15,qword ptr [r12]
0x1d6c6: mov rdx,r14
0x1d6c9: mov [r12+0x30],0x0
0x1d6d2: or rdx,0x800000
0x1d6d9: mov qword ptr [r15+0xd8],r14
0x1d6e0: call 0x1b2a0
0x1d6e5: lea r9,[rsp+0x4c]
0x1d6ea: xor r8d,r8d
0x1d6ed: mov rcx,r14
0x1d6f0: mov rdx,r13
0x1d6f3: mov rsi,r12
0x1d6f6: mov rdi,rbp
0x1d6f9: cwde 
0x1d6fb: add qword ptr [rsp+0xc8],rax
0x1d703: call 0x1d0d0
0x1d708: mov ecx,dword ptr [rsp+0x4c]
0x1d70c: test ecx,ecx
0x1d70e: jnz 0x1e137
0x1d714: lea r13,[r15+0x70]
0x1d718: lea r12,[rsp+0x60]
0x1d71d: sub r15,0xffffff80
0x1d721: xor edx,edx
0x1d723: xor ecx,ecx
0x1d725: mov rsi,r15
0x1d728: mov r8,r12
0x1d72b: mov rdi,r13
0x1d72e: mov qword ptr [rsp],rax
0x1d732: mov [rsp+0x68],0x2
0x1d737: call 0x13360
0x1d73c: mov r9,qword ptr [rsp]
0x1d740: mov r11,rax
0x1d743: mov rdx,rax
0x1d746: test r9,r9
0x1d749: jz 0x1d772
0x1d74b: mov rcx,r11
0x1d74e: mov rdx,r9
0x1d751: mov r8,r12
0x1d754: mov rsi,r15
0x1d757: mov rdi,r13
0x1d75a: mov qword ptr [rsp],r11
0x1d75e: mov [rsp+0x68],0x10
0x1d763: call 0x13360
0x1d768: mov r11,qword ptr [rsp]
0x1d76c: mov rdx,r11
0x1d76f: mov r11,rax
0x1d772: test rdx,rdx
0x1d775: mov rcx,qword ptr [rsp+0x8]
0x1d77a: setz dl
0x1d77d: test r11,r11
0x1d780: setz al
0x1d783: or dl,al
0x1d785: mov r13,qword ptr [rcx]
0x1d788: jnz 0x1e122
0x1d78e: mov r15,qword ptr [r13+0x8]
0x1d792: mov qword ptr [rbx+0x68],r11
0x1d796: lea rcx,[r15*8+0x0]
0x1d79e: lea r15,[r15+r15*2+0x0]
0x1d7a2: mov rdi,rcx
0x1d7a5: mov qword ptr [rsp],rcx
0x1d7a9: shl r15,0x3
0x1d7ad: call 0x2780
0x1d7b2: mov rcx,qword ptr [rsp]
0x1d7b6: mov qword ptr [r13+0x18],rax
0x1d7ba: mov qword ptr [rsp+0x18],rax
0x1d7bf: mov rdi,rcx
0x1d7c2: call 0x2780
0x1d7c7: mov rdi,r15
0x1d7ca: mov qword ptr [r13+0x20],rax
0x1d7ce: mov qword ptr [rsp+0x10],rax
0x1d7d3: call 0x2780
0x1d7d8: mov rdi,r15
0x1d7db: mov qword ptr [r13+0x28],rax
0x1d7df: mov qword ptr [rsp],rax
0x1d7e3: call 0x2780
0x1d7e8: mov rdx,qword ptr [rsp+0x18]
0x1d7ed: mov qword ptr [r13+0x30],rax
0x1d7f1: mov rsi,qword ptr [rsp]
0x1d7f5: mov rcx,qword ptr [rsp+0x10]
0x1d7fa: test rdx,rdx
0x1d7fd: jz 0x1dfbd
0x1d803: test rcx,rcx
0x1d806: jz 0x1dfbd
0x1d80c: test rsi,rsi
0x1d80f: jz 0x1dfbd
0x1d815: test rax,rax
0x1d818: jz 0x1dfbd
0x1d81e: mov rax,qword ptr [rsp+0x8]
0x1d823: mov r15,qword ptr [rax+0x30]
0x1d827: lea rdi,[r15*8+0x0]
0x1d82f: call 0x2780
0x1d834: test rax,rax
0x1d837: mov qword ptr [r13+0xe0],rax
0x1d83e: jz 0x1d8ad
0x1d840: test r15,r15
0x1d843: jz 0x1d85d
0x1d845: xor edx,edx
0x1d847: nop qword ptr [rax+rax*1+0x0]
0x1d850: mov qword ptr [rax+rdx*8+0x0],rdx
0x1d854: add rdx,0x1
0x1d858: cmp rdx,r15
0x1d85b: jnz 0x1d850
0x1d85d: mov rdi,qword ptr [r13+0x68]
0x1d861: lea rsi,[rip-0xb008]
0x1d868: mov rdx,r13
0x1d86b: call 0x10ff0
0x1d870: mov rax,qword ptr [rsp+0x8]
0x1d875: mov rdi,qword ptr [r13+0xe0]
0x1d87c: mov rdx,qword ptr [rax+0x30]
0x1d880: test rdx,rdx
0x1d883: jz 0x1e174
0x1d889: mov rax,qword ptr [rdi]
0x1d88c: test rax,rax
0x1d88f: jz 0x1d89e
0x1d891: jmp 0x1d8ad
0x1d893: nop qword ptr [rax+rax*1+0x0]
0x1d898: cmp qword ptr [rdi+rax*8+0x0],rax
0x1d89c: jnz 0x1d8ad
0x1d89e: add rax,0x1
0x1d8a2: cmp rdx,rax
0x1d8a5: jnbe 0x1d898
0x1d8a7: jz 0x1e174
0x1d8ad: mov rdi,qword ptr [r13+0x68]
0x1d8b1: mov rdx,qword ptr [rsp+0x8]
0x1d8b6: lea rsi,[rip-0xa15d]
0x1d8bd: call 0x10f80
0x1d8c2: test eax,eax
0x1d8c4: jnz 0x1d570
0x1d8ca: mov rdi,qword ptr [r13+0x68]
0x1d8ce: lea rsi,[rip-0x7c05]
0x1d8d5: mov rdx,r13
0x1d8d8: call 0x10f80
0x1d8dd: test eax,eax
0x1d8df: jnz 0x1d570
0x1d8e5: mov rdi,qword ptr [r13+0x68]
0x1d8e9: lea rsi,[rip-0xb000]
0x1d8f0: mov rdx,r13
0x1d8f3: call 0x10ff0
0x1d8f8: mov rdx,qword ptr [r13+0x68]
0x1d8fc: lea rsi,[rip+0x53c5]
0x1d903: nop qword ptr [rax+rax*1+0x0]
0x1d908: movzx ecx,byte ptr [rdx+0x30]
0x1d90c: mov rdi,qword ptr [rdx+0x38]
0x1d910: cmp cl,0x10
0x1d913: jnbe 0x1d9e8
0x1d919: movzx eax,cl
0x1d91c: movsxd rax,dword ptr [rsi+rax*4+0x0]
0x1d920: add rax,rsi
0x1d923: jmp rax
0x1d925: mov rsi,qword ptr [rsp+0x28]
0x1d92a: mov rdi,rbp
0x1d92d: call 0x11050
0x1d932: test eax,eax
0x1d934: jnz 0x1d570
0x1d93a: movzx esi,byte ptr [rsp+0x10b]
0x1d942: mov ecx,dword ptr [rbx+0xb4]
0x1d948: test sil,sil
0x1d94b: jz 0x1d4ff
0x1d951: jmp 0x1d4f2
0x1d956: mov [rsp+0x4c],0xc
0x1d95e: jmp 0x1d5cc
0x1d963: mov esi,0x1
0x1d968: mov edi,0x20
0x1d96d: call 0x26b0
0x1d972: test rax,rax
0x1d975: mov qword ptr [rbx+0x78],rax
0x1d979: jz 0x1d956
0x1d97b: xor r12d,r12d
0x1d97e: xor ebp,ebp
0x1d980: mov r13d,0x1
0x1d986: xor r15d,r15d
0x1d989: nop qword ptr [rax+0x0]
0x1d990: lea r14d,[rbp+r15*1+0x0]
0x1d995: mov edi,r14d
0x1d998: call 0x2880
0x1d99d: cmp eax,0xff
0x1d9a0: jz 0x1d9b5
0x1d9a2: mov rsi,qword ptr [rbx+0x78]
0x1d9a6: mov rdi,r13
0x1d9a9: mov ecx,r15d
0x1d9ac: shl rdi,cl
0x1d9af: add rsi,r12
0x1d9b2: or qword ptr [rsi],rdi
0x1d9b5: test r14d,0xffffff80
0x1d9bc: jnz 0x1d9ca
0x1d9be: cmp eax,r14d
0x1d9c1: jz 0x1d9ca
0x1d9c3: or [rbx+0xb0],0x8
0x1d9ca: add r15,0x1
0x1d9ce: cmp r15,0x40
0x1d9d2: jnz 0x1d990
0x1d9d4: add ebp,0x40
0x1d9d7: add r12,0x8
0x1d9db: cmp ebp,0x100
0x1d9e1: jnz 0x1d986
0x1d9e3: jmp 0x1d40e
0x1d9e8: and ecx,0x8
0x1d9eb: jnz 0x1e302
0x1d9f1: mov rax,qword ptr [rdx+0x20]
0x1d9f5: mov rcx,qword ptr [rax+0x38]
0x1d9f9: mov rax,qword ptr [r13+0x18]
0x1d9fd: mov qword ptr [rax+rdi*8+0x0],rcx
0x1da01: mov r15,qword ptr [rdx+0x8]
0x1da05: xor edi,edi
0x1da07: test r15,r15
0x1da0a: jz 0x1da1b
0x1da0c: mov rdx,r15
0x1da0f: jmp 0x1d908
0x1da14: nop qword ptr [rax+0x0]
0x1da18: mov rdx,rax
0x1da1b: mov r15,qword ptr [rdx+0x10]
0x1da1f: test r15,r15
0x1da22: setz cl
0x1da25: cmp r15,rdi
0x1da28: setz al
0x1da2b: or cl,al
0x1da2d: mov byte ptr [rsp+0x10],cl
0x1da31: jz 0x1da0c
0x1da33: mov rax,qword ptr [rdx]
0x1da36: mov rdi,rdx
0x1da39: test rax,rax
0x1da3c: jnz 0x1da18
0x1da3e: xor r14d,r14d
0x1da41: xor r15d,r15d
0x1da44: nop qword ptr [rax+0x0]
0x1da48: mov rdx,qword ptr [r13+0x10]
0x1da4c: cmp rdx,r15
0x1da4f: jz 0x1da76
0x1da51: lea r10,[r15+r15*2+0x0]
0x1da55: mov rax,qword ptr [r13+0x30]
0x1da59: shl r10,0x3
0x1da5d: cmp [rax+r10*1+0x8],0x0
0x1da63: jz 0x1dc68
0x1da69: mov rdx,qword ptr [r13+0x10]
0x1da6d: add r15,0x1
0x1da71: cmp rdx,r15
0x1da74: jnz 0x1da51
0x1da76: test r14b,r14b
0x1da79: jz 0x1dcbe
0x1da7f: xor r14d,r14d
0x1da82: xor r15d,r15d
0x1da85: jmp 0x1da51
0x1da87: or [r13+0xb0],0x1
0x1da8f: mov r15,qword ptr [rdx+0x8]
0x1da93: test r15,r15
0x1da96: jz 0x1e0a9
0x1da9c: mov rax,qword ptr [r15+0x18]
0x1daa0: mov rcx,qword ptr [rax+0x38]
0x1daa4: mov rax,qword ptr [rdx+0x10]
0x1daa8: test rax,rax
0x1daab: jz 0x1e09c
0x1dab1: mov rax,qword ptr [rax+0x18]
0x1dab5: mov r9,qword ptr [rax+0x38]
0x1dab9: test rcx,rcx
0x1dabc: js 0x1e321
0x1dac2: test r9,r9
0x1dac5: js 0x1e2e3
0x1dacb: mov rax,qword ptr [r13+0x28]
0x1dacf: lea rdi,[rdi+rdi*2+0x0]
0x1dad3: mov qword ptr [rsp+0x38],rsi
0x1dad8: mov qword ptr [rsp+0x30],r9
0x1dadd: mov qword ptr [rsp+0x18],rcx
0x1dae2: mov qword ptr [rsp+0x10],rdx
0x1dae7: lea r10,[rax+rdi*8+0x0]
0x1daeb: mov edi,0x10
0x1daf0: mov [r10],0x2
0x1daf7: mov qword ptr [rsp],r10
0x1dafb: call 0x2780
0x1db00: mov r10,qword ptr [rsp]
0x1db04: test rax,rax
0x1db07: mov rdx,qword ptr [rsp+0x10]
0x1db0c: mov rcx,qword ptr [rsp+0x18]
0x1db11: mov r9,qword ptr [rsp+0x30]
0x1db16: mov rsi,qword ptr [rsp+0x38]
0x1db1b: mov qword ptr [r10+0x10],rax
0x1db1f: jz 0x1ddba
0x1db25: cmp rcx,r9
0x1db28: jz 0x1e0fd
0x1db2e: mov [r10+0x8],0x2
0x1db36: jl 0x1e0e4
0x1db3c: mov qword ptr [rax],r9
0x1db3f: mov qword ptr [rax+0x8],rcx
0x1db43: jmp 0x1da05
0x1db48: mov rax,qword ptr [rdx+0x20]
0x1db4c: lea rcx,[rdi+rdi*2+0x0]
0x1db50: mov edi,0x8
0x1db55: mov qword ptr [rsp+0x10],rsi
0x1db5a: mov qword ptr [rsp],rdx
0x1db5e: mov r14,qword ptr [rax+0x38]
0x1db62: mov rax,qword ptr [r13+0x28]
0x1db66: lea r15,[rax+rcx*8+0x0]
0x1db6a: mov [r15],0x1
0x1db71: mov [r15+0x8],0x1
0x1db79: call 0x2780
0x1db7e: test rax,rax
0x1db81: mov qword ptr [r15+0x10],rax
0x1db85: mov rdx,qword ptr [rsp]
0x1db89: mov rsi,qword ptr [rsp+0x10]
0x1db8e: jz 0x1e238
0x1db94: mov qword ptr [rax],r14
0x1db97: mov r15,qword ptr [rdx+0x8]
0x1db9b: jmp 0x1da05
0x1dba0: cmp [rdx+0x20],0x0
0x1dba5: jz 0x1da01
0x1dbab: lea rcx,[rip+0x51ce]
0x1dbb2: lea rsi,[rip+0x4c07]
0x1dbb9: lea rdi,[rip+0x4ca4]
0x1dbc0: mov edx,0x59f
0x1dbc5: call 0x2600
0x1dbca: nop qword ptr [rax+rax*1+0x0]
0x1dbd0: mov rax,qword ptr [rdx+0x20]
0x1dbd4: mov r15,qword ptr [rax+0x38]
0x1dbd8: mov rax,qword ptr [r13+0x18]
0x1dbdc: mov qword ptr [rax+rdi*8+0x0],r15
0x1dbe0: cmp [rdx+0x30],0x4
0x1dbe4: jnz 0x1da01
0x1dbea: mov rax,qword ptr [r13+0x28]
0x1dbee: lea rcx,[rdi+rdi*2+0x0]
0x1dbf2: mov edi,0x8
0x1dbf7: mov qword ptr [rsp+0x18],rsi
0x1dbfc: mov qword ptr [rsp+0x10],rdx
0x1dc01: lea rcx,[rax+rcx*8+0x0]
0x1dc05: mov [rcx],0x1
0x1dc0c: mov [rcx+0x8],0x1
0x1dc14: mov qword ptr [rsp],rcx
0x1dc18: call 0x2780
0x1dc1d: mov rcx,qword ptr [rsp]
0x1dc21: test rax,rax
0x1dc24: mov rdx,qword ptr [rsp+0x10]
0x1dc29: mov rsi,qword ptr [rsp+0x18]
0x1dc2e: mov qword ptr [rcx+0x10],rax
0x1dc32: jz 0x1e280
0x1dc38: mov qword ptr [rax],r15
0x1dc3b: mov r15,qword ptr [rdx+0x8]
0x1dc3f: jmp 0x1da05
0x1dc44: mov qword ptr [rsp+0xb0],rsi
0x1dc4c: mov qword ptr [rsp+0xb8],rsi
0x1dc54: mov [rsp+0x4c],0x0
0x1dc5c: jmp 0x1d6a8
0x1dc61: nop qword ptr [rax+0x0]
0x1dc68: mov ecx,0x1
0x1dc6d: mov rdx,r15
0x1dc70: mov rsi,r13
0x1dc73: mov rdi,r12
0x1dc76: mov qword ptr [rsp],r10
0x1dc7a: call 0x12da0
0x1dc7f: test eax,eax
0x1dc81: jnz 0x1d570
0x1dc87: mov rax,qword ptr [r13+0x30]
0x1dc8b: mov r10,qword ptr [rsp]
0x1dc8f: add r15,0x1
0x1dc93: cmp [rax+r10*1+0x8],0x0
0x1dc99: jnz 0x1da48
0x1dc9f: mov rdi,qword ptr [rsp+0x70]
0x1dca4: call 0x2a10
0x1dca9: cmp qword ptr [r13+0x10],r15
0x1dcad: jz 0x1da7f
0x1dcb3: movzx r14d,byte ptr [rsp+0x10]
0x1dcb9: jmp 0x1da51
0x1dcbe: mov rax,qword ptr [rsp+0x8]
0x1dcc3: test [rax+0x38],0x10
0x1dcc7: jnz 0x1dcda
0x1dcc9: cmp [rax+0x30],0x0
0x1dcce: jz 0x1dcda
0x1dcd0: test [r13+0xb0],0x1
0x1dcd8: jnz 0x1dce8
0x1dcda: cmp [r13+0x98],0x0
0x1dce2: jz 0x1dddb
0x1dce8: lea rdi,[rdx+rdx*2+0x0]
0x1dcec: mov qword ptr [rsp],rdx
0x1dcf0: shl rdi,0x3
0x1dcf4: call 0x2780
0x1dcf9: test rax,rax
0x1dcfc: mov qword ptr [r13+0x38],rax
0x1dd00: jz 0x1e24c
0x1dd06: mov rdx,qword ptr [rsp]
0x1dd0a: xor esi,esi
0x1dd0c: xor ecx,ecx
0x1dd0e: test rdx,rdx
0x1dd11: jnz 0x1dd24
0x1dd13: jmp 0x1dddb
0x1dd18: nop qword ptr [rax+rax*1+0x0]
0x1dd20: mov rax,qword ptr [r13+0x38]
0x1dd24: pxor xmm0,xmm0
0x1dd28: add rax,rsi
0x1dd2b: add rcx,0x1
0x1dd2f: mov [rax+0x10],0x0
0x1dd37: add rsi,0x18
0x1dd3b: movups [rax],xmm0
0x1dd3e: mov rax,qword ptr [r13+0x10]
0x1dd42: cmp rcx,rax
0x1dd45: jb 0x1dd20
0x1dd47: test rax,rax
0x1dd4a: jz 0x1dddb
0x1dd50: mov rax,qword ptr [r13+0x30]
0x1dd54: mov [rsp+0x18],0x0
0x1dd5d: mov [rsp+0x10],0x0
0x1dd66: mov rcx,qword ptr [rsp+0x18]
0x1dd6b: lea rdx,[rax+rcx*1+0x0]
0x1dd6f: cmp [rdx+0x8],0x0
0x1dd74: mov rcx,qword ptr [rdx+0x10]
0x1dd78: jle 0x1ddc4
0x1dd7a: xor r15d,r15d
0x1dd7d: jmp 0x1dd98
0x1dd7f: nop 
0x1dd80: mov rax,qword ptr [r13+0x30]
0x1dd84: mov rdx,qword ptr [rsp+0x18]
0x1dd89: add r15,0x1
0x1dd8d: mov rcx,qword ptr [rsp]
0x1dd91: cmp r15,qword ptr [rax+rdx*1+0x8]
0x1dd96: jnl 0x1ddc4
0x1dd98: mov rax,qword ptr [rcx+r15*8+0x0]
0x1dd9c: mov qword ptr [rsp],rcx
0x1dda0: lea rsi,[rax+rax*2+0x0]
0x1dda4: mov rax,qword ptr [r13+0x38]
0x1dda8: lea rdi,[rax+rsi*8+0x0]
0x1ddac: mov rsi,qword ptr [rsp+0x10]
0x1ddb1: call 0x110f0
0x1ddb6: test al,al
0x1ddb8: jnz 0x1dd80
0x1ddba: mov eax,0xc
0x1ddbf: jmp 0x1d570
0x1ddc4: add [rsp+0x10],0x1
0x1ddca: add [rsp+0x18],0x18
0x1ddd0: mov rdx,qword ptr [rsp+0x10]
0x1ddd5: cmp rdx,qword ptr [r13+0x10]
0x1ddd9: jb 0x1dd66
0x1dddb: movzx eax,byte ptr [rbx+0xb0]
0x1dde2: mov [rsp+0x4c],0x0
0x1ddea: shr al,0x2
0x1dded: cmp [rsp+0x20],0x0
0x1ddf3: setz dl
0x1ddf6: and al,dl
0x1ddf8: jnz 0x1dfdf
0x1ddfe: mov rax,qword ptr [rbx+0x68]
0x1de02: mov rdi,r12
0x1de05: mov rax,qword ptr [rax+0x18]
0x1de09: mov rax,qword ptr [rax+0x38]
0x1de0d: lea rdx,[rax+rax*2+0x0]
0x1de11: mov qword ptr [rbx+0x90],rax
0x1de18: mov rax,qword ptr [rbx+0x30]
0x1de1c: lea rsi,[rax+rdx*8+0x0]
0x1de20: call 0x13800
0x1de25: test eax,eax
0x1de27: mov r15d,eax
0x1de2a: mov dword ptr [rsp+0x50],eax
0x1de2e: jnz 0x1df4f
0x1de34: cmp [rbx+0x98],0x0
0x1de3c: jle 0x1df10
0x1de42: mov r9,qword ptr [rsp+0x68]
0x1de47: test r9,r9
0x1de4a: jle 0x1df10
0x1de50: xor r10d,r10d
0x1de53: lea r13,[r12+0x10]
0x1de58: jmp 0x1de6d
0x1de5a: nop qword ptr [rax+rax*1+0x0]
0x1de60: add r10,0x1
0x1de64: cmp r9,r10
0x1de67: jle 0x1df10
0x1de6d: mov rcx,qword ptr [rsp+0x70]
0x1de72: mov rsi,qword ptr [rbx]
0x1de75: mov r8,qword ptr [rcx+r10*8+0x0]
0x1de79: mov rdi,r8
0x1de7c: shl rdi,0x4
0x1de80: add rdi,rsi
0x1de83: cmp [rdi+0x8],0x4
0x1de87: jnz 0x1de60
0x1de89: xor edx,edx
0x1de8b: jmp 0x1de99
0x1de8d: nop qword ptr [rax]
0x1de90: add rdx,0x1
0x1de94: cmp r9,rdx
0x1de97: jz 0x1de60
0x1de99: mov rax,qword ptr [rcx+rdx*8+0x0]
0x1de9d: shl rax,0x4
0x1dea1: add rax,rsi
0x1dea4: cmp [rax+0x8],0x9
0x1dea8: jnz 0x1de90
0x1deaa: mov r11,qword ptr [rdi]
0x1dead: cmp qword ptr [rax],r11
0x1deb0: jnz 0x1de90
0x1deb2: mov rdx,qword ptr [rbx+0x28]
0x1deb6: lea rax,[r8+r8*2+0x0]
0x1deba: mov rsi,r13
0x1debd: mov rdi,r9
0x1dec0: lea rax,[rdx+rax*8+0x0]
0x1dec4: mov rax,qword ptr [rax+0x10]
0x1dec8: mov r11,qword ptr [rax]
0x1decb: mov rdx,r11
0x1dece: call 0x126a0
0x1ded3: test rax,rax
0x1ded6: jnz 0x1de60
0x1ded8: mov rax,qword ptr [rbx+0x30]
0x1dedc: lea rdx,[r11+r11*2+0x0]
0x1dee0: mov rdi,r12
0x1dee3: lea rsi,[rax+rdx*8+0x0]
0x1dee7: call 0x12bc0
0x1deec: test eax,eax
0x1deee: jnz 0x1e230
0x1def4: mov r9,qword ptr [rsp+0x68]
0x1def9: mov r10d,0x1
0x1deff: cmp r9,r10
0x1df02: jnle 0x1de6d
0x1df08: nop qword ptr [rax+rax*1+0x0]
0x1df10: mov rdi,qword ptr [rsp+0x28]
0x1df15: xor ecx,ecx
0x1df17: mov rdx,r12
0x1df1a: mov rsi,rbx
0x1df1d: call 0x139f0
0x1df22: test rax,rax
0x1df25: mov qword ptr [rbx+0x48],rax
0x1df29: jz 0x1e092
0x1df2f: cmp [rax+0x68],0x0
0x1df33: js 0x1e031
0x1df39: mov qword ptr [rbx+0x60],rax
0x1df3d: mov qword ptr [rbx+0x58],rax
0x1df41: mov qword ptr [rbx+0x50],rax
0x1df45: mov rdi,qword ptr [rsp+0x70]
0x1df4a: call 0x2a10
0x1df4f: mov rax,qword ptr [rsp+0x8]
0x1df54: mov dword ptr [rsp+0x4c],r15d
0x1df59: mov r13,qword ptr [rax]
0x1df5c: mov rdi,qword ptr [r13+0x70]
0x1df60: test rdi,rdi
0x1df63: jz 0x1df78
0x1df65: nop qword ptr [rax]
0x1df68: mov r12,qword ptr [rdi]
0x1df6b: call 0x2a10
0x1df70: test r12,r12
0x1df73: mov rdi,r12
0x1df76: jnz 0x1df68
0x1df78: mov rdi,qword ptr [r13+0x20]
0x1df7c: mov [r13+0x70],0x0
0x1df84: mov [r13+0x80],0xf
0x1df8f: mov [r13+0x68],0x0
0x1df97: call 0x2a10
0x1df9c: mov [r13+0x20],0x0
0x1dfa4: mov rdi,rbp
0x1dfa7: call 0x12390
0x1dfac: mov eax,dword ptr [rsp+0x4c]
0x1dfb0: test eax,eax
0x1dfb2: jz 0x1d5ec
0x1dfb8: jmp 0x1d5cc
0x1dfbd: mov [rsp+0x4c],0xc
0x1dfc5: jmp 0x1d57c
0x1dfca: mov rdi,rbp
0x1dfcd: call 0x113f0
0x1dfd2: mov [rsp+0x4c],0x0
0x1dfda: jmp 0x1d6a8
0x1dfdf: mov rcx,qword ptr [rsp+0x8]
0x1dfe4: cmp [rcx+0x28],0x0
0x1dfe9: jnz 0x1ddfe
0x1dfef: mov r10,qword ptr [rbx+0x10]
0x1dff3: test r10,r10
0x1dff6: jz 0x1e2aa
0x1dffc: mov rsi,qword ptr [rbx]
0x1dfff: lea r9,[rip+0x4d06]
0x1e006: xor r8d,r8d
0x1e009: xor edx,edx
0x1e00b: mov rcx,rsi
0x1e00e: cmp [rcx+0x8],0xc
0x1e012: jnbe 0x1e2de
0x1e018: movzx edi,byte ptr [rcx+0x8]
0x1e01c: movsxd rdi,dword ptr [r9+rdi*4+0x0]
0x1e020: add rdi,r9
0x1e023: jmp rdi
0x1e025: xor ebp,ebp
0x1e027: mov esi,0x1
0x1e02c: jmp 0x1d35d
0x1e031: mov r14,qword ptr [rsp+0x28]
0x1e036: mov ecx,0x1
0x1e03b: mov rdx,r12
0x1e03e: mov rsi,rbx
0x1e041: mov rdi,r14
0x1e044: call 0x139f0
0x1e049: mov ecx,0x2
0x1e04e: mov rdx,r12
0x1e051: mov rsi,rbx
0x1e054: mov rdi,r14
0x1e057: mov qword ptr [rbx+0x50],rax
0x1e05b: call 0x139f0
0x1e060: mov ecx,0x6
0x1e065: mov qword ptr [rbx+0x58],rax
0x1e069: mov rdx,r12
0x1e06c: mov rsi,rbx
0x1e06f: mov rdi,r14
0x1e072: call 0x139f0
0x1e077: cmp [rbx+0x50],0x0
0x1e07c: mov qword ptr [rbx+0x60],rax
0x1e080: jz 0x1e092
0x1e082: cmp [rbx+0x58],0x0
0x1e087: jz 0x1e092
0x1e089: test rax,rax
0x1e08c: jnz 0x1df45
0x1e092: mov r15d,dword ptr [rsp+0x50]
0x1e097: jmp 0x1df4f
0x1e09c: mov rax,qword ptr [rdx+0x20]
0x1e0a0: mov r9,qword ptr [rax+0x38]
0x1e0a4: jmp 0x1dab9
0x1e0a9: mov rax,qword ptr [rdx+0x20]
0x1e0ad: mov rcx,qword ptr [rax+0x38]
0x1e0b1: jmp 0x1daa4
0x1e0b6: mov rdi,rbx
0x1e0b9: mov esi,0xe8
0x1e0be: call 0x2830
0x1e0c3: test rax,rax
0x1e0c6: mov rbx,rax
0x1e0c9: jz 0x1e261
0x1e0cf: mov rax,qword ptr [rsp+0x8]
0x1e0d4: mov [rax+0x8],0xe8
0x1e0dc: mov qword ptr [rax],rbx
0x1e0df: jmp 0x1d2c2
0x1e0e4: mov qword ptr [rax],rcx
0x1e0e7: mov qword ptr [rax+0x8],r9
0x1e0eb: jmp 0x1da05
0x1e0f0: mov [rsp+0x4c],0x0
0x1e0f8: jmp 0x1d6a8
0x1e0fd: mov [r10+0x8],0x1
0x1e105: mov qword ptr [rax],rcx
0x1e108: jmp 0x1da05
0x1e10d: mov rdi,rbp
0x1e110: call 0x11380
0x1e115: mov [rsp+0x4c],0x0
0x1e11d: jmp 0x1d6a8
0x1e122: mov [rsp+0x4c],0xc
0x1e12a: mov [rbx+0x68],0x0
0x1e132: jmp 0x1d57c
0x1e137: test rax,rax
0x1e13a: jz 0x1e26b
0x1e140: lea r13,[r15+0x70]
0x1e144: lea r12,[rsp+0x60]
0x1e149: sub r15,0xffffff80
0x1e14d: xor ecx,ecx
0x1e14f: xor edx,edx
0x1e151: mov rsi,r15
0x1e154: mov r8,r12
0x1e157: mov rdi,r13
0x1e15a: mov qword ptr [rsp],rax
0x1e15e: mov [rsp+0x68],0x2
0x1e163: call 0x13360
0x1e168: mov r9,qword ptr [rsp]
0x1e16c: mov r11,rax
0x1e16f: jmp 0x1d74b
0x1e174: call 0x2a10
0x1e179: mov [r13+0xe0],0x0
0x1e184: jmp 0x1d8ad
0x1e189: mov r8d,eax
0x1e18c: add rdx,0x1
0x1e190: add rcx,0x10
0x1e194: cmp rdx,r10
0x1e197: jnz 0x1e00e
0x1e19d: or r14b,r8b
0x1e1a0: jz 0x1e2aa
0x1e1a6: mov rax,rdx
0x1e1a9: shl rax,0x4
0x1e1ad: add rax,rsi
0x1e1b0: jmp 0x1e1c8
0x1e1b2: cmp dl,0x5
0x1e1b5: jnz 0x1e1bb
0x1e1b7: mov [rsi+0x8],0x7
0x1e1bb: add rsi,0x10
0x1e1bf: cmp rax,rsi
0x1e1c2: jz 0x1e2a7
0x1e1c8: movzx edx,byte ptr [rsi+0x8]
0x1e1cc: cmp dl,0x1
0x1e1cf: jnz 0x1e1b2
0x1e1d1: cmp [rsi],0x0
0x1e1d4: jns 0x1e1bb
0x1e1d6: and [rsi+0xa],0xdf
0x1e1da: jmp 0x1e1bb
0x1e1dc: nop qword ptr [rax+0x0]
0x1e1e0: cmp [rcx],0x0
0x1e1e3: cmovs r14d,eax
0x1e1e7: jmp 0x1e18c
0x1e1e9: mov edi,dword ptr [rcx]
0x1e1eb: cmp edi,0x20
0x1e1ee: jz 0x1e18c
0x1e1f0: jbe 0x1e299
0x1e1f6: cmp edi,0x40
0x1e1f9: jz 0x1e18c
0x1e1fb: add edi,0x80
0x1e1fe: jz 0x1e18c
0x1e200: jmp 0x1ddfe
0x1e205: nop qword ptr [rax]
0x1e208: mov rdi,qword ptr [rcx]
0x1e20b: cmp [rdi+0x10],0x0
0x1e210: jnz 0x1ddfe
0x1e216: cmp [rdi+0x18],0x0
0x1e21b: jz 0x1e18c
0x1e221: jmp 0x1ddfe
0x1e226: nop qword ptr [rax+rax*1+0x0]
0x1e230: mov r15d,eax
0x1e233: jmp 0x1df4f
0x1e238: mov [r15+0x8],0x0
0x1e240: mov [r15],0x0
0x1e247: jmp 0x1ddba
0x1e24c: mov rax,qword ptr [rsp+0x8]
0x1e251: mov [rsp+0x4c],0xc
0x1e259: mov r13,qword ptr [rax]
0x1e25c: jmp 0x1d57c
0x1e261: mov eax,0xc
0x1e266: jmp 0x1d5ec
0x1e26b: mov rax,qword ptr [rsp+0x8]
0x1e270: mov [rbx+0x68],0x0
0x1e278: mov r13,qword ptr [rax]
0x1e27b: jmp 0x1d57c
0x1e280: mov [rcx+0x8],0x0
0x1e288: mov [rcx],0x0
0x1e28f: mov eax,0xc
0x1e294: jmp 0x1d570
0x1e299: cmp edi,0x10
0x1e29c: jz 0x1e18c
0x1e2a2: jmp 0x1ddfe
0x1e2a7: mov r14d,r8d
0x1e2aa: cmp [rbx+0x98],0x0
0x1e2b2: movzx edx,byte ptr [rbx+0xb0]
0x1e2b9: mov [rbx+0xb4],0x1
0x1e2c3: setnle al
0x1e2c6: and edx,0xf9
0x1e2c9: or eax,r14d
0x1e2cc: and eax,0x1
0x1e2cf: add eax,eax
0x1e2d1: or eax,edx
0x1e2d3: mov byte ptr [rbx+0xb0],al
0x1e2d9: jmp 0x1ddfe
0x1e2de: call 0x2400
0x1e2e3: lea rcx,[rip+0x4a96]
0x1e2ea: lea rsi,[rip+0x44cf]
0x1e2f1: lea rdi,[rip+0x4589]
0x1e2f8: mov edx,0x5b0
0x1e2fd: call 0x2600
0x1e302: lea rcx,[rip+0x4a77]
0x1e309: lea rsi,[rip+0x44b0]
0x1e310: lea rdi,[rip+0x44c9]
0x1e317: mov edx,0x5c2
0x1e31c: call 0x2600
0x1e321: lea rcx,[rip+0x4a58]
0x1e328: lea rsi,[rip+0x4491]
0x1e32f: lea rdi,[rip+0x4541]
0x1e336: mov edx,0x5af
0x1e33b: call 0x2600
0x1e340: call 0x2560
0x1e350: sub rsp,0x8
0x1e354: mov rcx,qword ptr [rip+0x209fa5]
0x1e35b: mov r8,rdi
0x1e35e: mov rdi,rdx
0x1e361: mov rax,rcx
0x1e364: shr rax,0x19
0x1e368: and eax,0x1
0x1e36b: shl eax,0x4
0x1e36e: mov edx,eax
0x1e370: movzx eax,byte ptr [rdi+0x38]
0x1e374: and eax,0xef
0x1e377: or eax,edx
0x1e379: mov rdx,rsi
0x1e37c: mov rsi,r8
0x1e37f: or eax,0x80
0x1e382: mov byte ptr [rdi+0x38],al
0x1e385: call 0x1d250
0x1e38a: test eax,eax
0x1e38c: jz 0x1e3b8
0x1e38e: lea rdx,[rip+0x4a4b]
0x1e395: cwde 
0x1e397: lea rsi,[rip+0x4ae2]
0x1e39e: xor edi,edi
0x1e3a0: add rsi,qword ptr [rdx+rax*8+0x0]
0x1e3a4: mov edx,0x5
0x1e3a9: add rsp,0x8
0x1e3ad: jmp 0x2510
0x1e3b2: nop qword ptr [rax+rax*1+0x0]
0x1e3b8: xor eax,eax
0x1e3ba: add rsp,0x8
0x1e3be: ret
0x1e3c0: mov rax,qword ptr [rip+0x209f39]
0x1e3c7: mov qword ptr [rip+0x209f32],rdi
0x1e3ce: ret
0x1e3d0: push r12
0x1e3d2: push rbp
0x1e3d3: xor eax,eax
0x1e3d5: push rbx
0x1e3d6: mov rbp,qword ptr [rdi+0x20]
0x1e3da: mov rbx,rdi
0x1e3dd: mov r12,qword ptr [rdi]
0x1e3e0: lea rdi,[rbp+0x8]
0x1e3e4: mov rcx,rbp
0x1e3e7: mov [rbp+0x0],0x0
0x1e3ef: mov [rbp+0xf8],0x0
0x1e3fa: and rdi,0xfffffff8
0x1e3fe: sub rcx,rdi
0x1e401: add ecx,0x100
0x1e407: shr ecx,0x3
0x1e40a: rep stosd qword ptr es:[rdi],rax
0x1e40d: mov rcx,rbp
0x1e410: mov rdi,rbx
0x1e413: mov rsi,qword ptr [r12+0x48]
0x1e418: lea rdx,[rsi+0x18]
0x1e41c: add rsi,0x10
0x1e420: call 0x16920
0x1e425: mov rax,qword ptr [r12+0x50]
0x1e42a: cmp qword ptr [r12+0x48],rax
0x1e42f: jz 0x1e449
0x1e431: lea rdx,[rax+0x18]
0x1e435: lea rsi,[rax+0x10]
0x1e439: mov rcx,rbp
0x1e43c: mov rdi,rbx
0x1e43f: call 0x16920
0x1e444: mov rax,qword ptr [r12+0x48]
0x1e449: mov rsi,qword ptr [r12+0x58]
0x1e44e: cmp rsi,rax
0x1e451: jz 0x1e46b
0x1e453: lea rdx,[rsi+0x18]
0x1e457: mov rcx,rbp
0x1e45a: add rsi,0x10
0x1e45e: mov rdi,rbx
0x1e461: call 0x16920
0x1e466: mov rax,qword ptr [r12+0x48]
0x1e46b: mov rsi,qword ptr [r12+0x60]
0x1e470: cmp rsi,rax
0x1e473: jz 0x1e488
0x1e475: lea rdx,[rsi+0x18]
0x1e479: mov rcx,rbp
0x1e47c: add rsi,0x10
0x1e480: mov rdi,rbx
0x1e483: call 0x16920
0x1e488: or [rbx+0x38],0x8
0x1e48c: xor eax,eax
0x1e48e: pop rbx
0x1e48f: pop rbp
0x1e490: pop r12
0x1e492: ret
0x1e4a0: push r15
0x1e4a2: push r14
0x1e4a4: mov rax,r8
0x1e4a7: push r13
0x1e4a9: push r12
0x1e4ab: add r8,rcx
0x1e4ae: push rbp
0x1e4af: push rbx
0x1e4b0: sub rsp,0x38
0x1e4b4: test rcx,rcx
0x1e4b7: mov ebx,dword ptr [rsp+0x78]
0x1e4bb: mov r12,qword ptr [rsp+0x70]
0x1e4c0: mov dword ptr [rsp+0x28],ebx
0x1e4c4: js 0x1e800
0x1e4ca: cmp rcx,rdx
0x1e4cd: jnle 0x1e800
0x1e4d3: cmp r8,rdx
0x1e4d6: mov rbx,rcx
0x1e4d9: mov r15,rdi
0x1e4dc: jnle 0x1e760
0x1e4e2: test rax,rax
0x1e4e5: js 0x1e4f0
0x1e4e7: cmp rcx,r8
0x1e4ea: jnle 0x1e760
0x1e4f0: test r8,r8
0x1e4f3: js 0x1e7d8
0x1e4f9: test rax,rax
0x1e4fc: jns 0x1e507
0x1e4fe: cmp rbx,r8
0x1e501: jle 0x1e7d8
0x1e507: movzx eax,byte ptr [r15+0x38]
0x1e50c: mov r13d,eax
0x1e50f: shr r13b,0x5
0x1e513: mov edi,r13d
0x1e516: and edi,0x3
0x1e519: cmp r8,rbx
0x1e51c: mov dword ptr [rsp+0x2c],edi
0x1e520: jle 0x1e531
0x1e522: cmp [r15+0x20],0x0
0x1e527: jz 0x1e531
0x1e529: test al,0x8
0x1e52b: jz 0x1e720
0x1e531: test al,0x10
0x1e533: jnz 0x1e700
0x1e539: test r12,r12
0x1e53c: jz 0x1e700
0x1e542: and eax,0x6
0x1e545: mov rcx,qword ptr [r15+0x30]
0x1e549: cmp al,0x4
0x1e54b: jz 0x1e6e0
0x1e551: lea r14,[rcx+0x1]
0x1e555: mov r13,r14
0x1e558: mov rdi,r14
0x1e55b: shl rdi,0x4
0x1e55f: mov qword ptr [rsp+0x20],r9
0x1e564: mov qword ptr [rsp+0x18],rdx
0x1e569: mov qword ptr [rsp+0x10],rsi
0x1e56e: mov qword ptr [rsp+0x8],r8
0x1e573: call 0x2780
0x1e578: test rax,rax
0x1e57b: mov rbp,rax
0x1e57e: jz 0x1e810
0x1e584: sub rsp,0x8
0x1e588: mov rcx,rbx
0x1e58b: mov rdi,r15
0x1e58e: mov eax,dword ptr [rsp+0x34]
0x1e592: push rax
0x1e593: push rbp
0x1e594: push r14
0x1e596: mov r9,qword ptr [rsp+0x40]
0x1e59b: mov r8,qword ptr [rsp+0x28]
0x1e5a0: mov rdx,qword ptr [rsp+0x38]
0x1e5a5: mov rsi,qword ptr [rsp+0x30]
0x1e5aa: call 0x190c0
0x1e5af: add rsp,0x20
0x1e5b3: test eax,eax
0x1e5b5: jz 0x1e5e8
0x1e5b7: cmp eax,0x1
0x1e5ba: mov r12,0xffffffff
0x1e5c1: jz 0x1e5ca
0x1e5c3: mov r12,0xfffffffe
0x1e5ca: mov rdi,rbp
0x1e5cd: call 0x2a10
0x1e5d2: add rsp,0x38
0x1e5d6: mov rax,r12
0x1e5d9: pop rbx
0x1e5da: pop rbp
0x1e5db: pop r12
0x1e5dd: pop r13
0x1e5df: pop r14
0x1e5e1: pop r15
0x1e5e3: ret
0x1e5e4: nop qword ptr [rax+0x0]
0x1e5e8: test r12,r12
0x1e5eb: jz 0x1e6b8
0x1e5f1: movzx eax,byte ptr [r15+0x38]
0x1e5f6: lea rdx,[r13+0x1]
0x1e5fa: shr al,0x1
0x1e5fc: and eax,0x3
0x1e5ff: jz 0x1e770
0x1e605: cmp eax,0x1
0x1e608: jz 0x1e820
0x1e60e: cmp eax,0x2
0x1e611: jnz 0x1e900
0x1e617: cmp r14,qword ptr [r12]
0x1e61b: jnbe 0x1e8e1
0x1e621: mov r9d,0x2
0x1e627: test r13,r13
0x1e62a: jle 0x1e898
0x1e630: mov r8,qword ptr [r12+0x8]
0x1e635: mov rdi,qword ptr [r12+0x10]
0x1e63a: lea rsi,[r13*8+0x0]
0x1e642: mov rdx,r13
0x1e645: xor eax,eax
0x1e647: nop qword ptr [rax+rax*1+0x0]
0x1e650: mov rcx,qword ptr [rbp+rax*2+0x0]
0x1e655: mov qword ptr [r8+rax*1+0x0],rcx
0x1e659: mov rcx,qword ptr [rbp+rax*2+0x8]
0x1e65e: mov qword ptr [rdi+rax*1+0x0],rcx
0x1e662: add rax,0x8
0x1e666: cmp rsi,rax
0x1e669: jnz 0x1e650
0x1e66b: cmp qword ptr [r12],rdx
0x1e66f: jbe 0x1e69d
0x1e671: mov rsi,qword ptr [r12+0x10]
0x1e676: mov rcx,qword ptr [r12+0x8]
0x1e67b: mov rax,0xffffffff
0x1e682: nop qword ptr [rax+rax*1+0x0]
0x1e688: mov qword ptr [rsi+rdx*8+0x0],rax
0x1e68c: add r13,0x1
0x1e690: mov qword ptr [rcx+rdx*8+0x0],rax
0x1e694: cmp r13,qword ptr [r12]
0x1e698: mov rdx,r13
0x1e69b: jb 0x1e688
0x1e69d: movzx eax,byte ptr [r15+0x38]
0x1e6a2: lea r13d,[r9+r9*1+0x0]
0x1e6a6: and eax,0xf9
0x1e6a9: or eax,r13d
0x1e6ac: test al,0x6
0x1e6ae: mov byte ptr [r15+0x38],al
0x1e6b2: jz 0x1e5c3
0x1e6b8: cmp [rsp+0x28],0x0
0x1e6bd: mov r12,qword ptr [rbp+0x0]
0x1e6c1: jz 0x1e5ca
0x1e6c7: cmp r12,rbx
0x1e6ca: jnz 0x1e8c2
0x1e6d0: mov r12,qword ptr [rbp+0x8]
0x1e6d4: sub r12,rbx
0x1e6d7: jmp 0x1e5ca
0x1e6dc: nop qword ptr [rax+0x0]
0x1e6e0: mov r14,qword ptr [r12]
0x1e6e4: cmp r14,rcx
0x1e6e7: jnbe 0x1e551
0x1e6ed: test r14,r14
0x1e6f0: mov r13,r14
0x1e6f3: jnle 0x1e558
0x1e6f9: nop qword ptr [rax+0x0]
0x1e700: mov edi,0x10
0x1e705: mov r14d,0x1
0x1e70b: mov r13d,0x1
0x1e711: xor r12d,r12d
0x1e714: jmp 0x1e55f
0x1e719: nop qword ptr [rax+0x0]
0x1e720: mov rdi,r15
0x1e723: mov qword ptr [rsp+0x20],r9
0x1e728: mov qword ptr [rsp+0x18],rdx
0x1e72d: mov qword ptr [rsp+0x10],rsi
0x1e732: mov qword ptr [rsp+0x8],r8
0x1e737: call 0x1e3d0
0x1e73c: movzx eax,byte ptr [r15+0x38]
0x1e741: mov r9,qword ptr [rsp+0x20]
0x1e746: mov rdx,qword ptr [rsp+0x18]
0x1e74b: mov rsi,qword ptr [rsp+0x10]
0x1e750: mov r8,qword ptr [rsp+0x8]
0x1e755: jmp 0x1e531
0x1e75a: nop qword ptr [rax+rax*1+0x0]
0x1e760: mov r8,rdx
0x1e763: jmp 0x1e507
0x1e768: nop qword ptr [rax+rax*1+0x0]
0x1e770: lea r14,[rdx*8+0x0]
0x1e778: mov qword ptr [rsp+0x8],rdx
0x1e77d: mov rdi,r14
0x1e780: call 0x2780
0x1e785: test rax,rax
0x1e788: mov qword ptr [r12+0x8],rax
0x1e78d: mov rdx,qword ptr [rsp+0x8]
0x1e792: jz 0x1e8aa
0x1e798: mov rdi,r14
0x1e79b: mov qword ptr [rsp+0x8],rdx
0x1e7a0: mov qword ptr [rsp+0x10],rax
0x1e7a5: call 0x2780
0x1e7aa: test rax,rax
0x1e7ad: mov qword ptr [r12+0x10],rax
0x1e7b2: mov rdx,qword ptr [rsp+0x8]
0x1e7b7: mov rcx,qword ptr [rsp+0x10]
0x1e7bc: jz 0x1e8a2
0x1e7c2: mov qword ptr [r12],rdx
0x1e7c6: mov r9d,0x1
0x1e7cc: jmp 0x1e627
0x1e7d1: nop qword ptr [rax+0x0]
0x1e7d8: movzx eax,byte ptr [r15+0x38]
0x1e7dd: xor r8d,r8d
0x1e7e0: mov r13d,eax
0x1e7e3: shr r13b,0x5
0x1e7e7: mov edi,r13d
0x1e7ea: and edi,0x3
0x1e7ed: mov dword ptr [rsp+0x2c],edi
0x1e7f1: jmp 0x1e531
0x1e7f6: nop qword ptr [rax+rax*1+0x0]
0x1e800: mov r12,0xffffffff
0x1e807: jmp 0x1e5d2
0x1e80c: nop qword ptr [rax+0x0]
0x1e810: mov r12,0xfffffffe
0x1e817: jmp 0x1e5d2
0x1e81c: nop qword ptr [rax+0x0]
0x1e820: cmp qword ptr [r12],rdx
0x1e824: mov r9d,0x1
0x1e82a: jnb 0x1e627
0x1e830: lea rcx,[rdx*8+0x0]
0x1e838: mov rdi,qword ptr [r12+0x8]
0x1e83d: mov byte ptr [rsp+0x18],r9b
0x1e842: mov qword ptr [rsp+0x10],rdx
0x1e847: mov rsi,rcx
0x1e84a: mov qword ptr [rsp+0x8],rcx
0x1e84f: call 0x2830
0x1e854: test rax,rax
0x1e857: mov r14,rax
0x1e85a: jz 0x1e8aa
0x1e85c: mov rcx,qword ptr [rsp+0x8]
0x1e861: mov rdi,qword ptr [r12+0x10]
0x1e866: mov rsi,rcx
0x1e869: call 0x2830
0x1e86e: test rax,rax
0x1e871: mov rdx,qword ptr [rsp+0x10]
0x1e876: movzx r9d,byte ptr [rsp+0x18]
0x1e87c: jz 0x1e8b2
0x1e87e: mov qword ptr [r12+0x8],r14
0x1e883: mov qword ptr [r12+0x10],rax
0x1e888: mov qword ptr [r12],rdx
0x1e88c: jmp 0x1e627
0x1e891: nop qword ptr [rax+0x0]
0x1e898: xor edx,edx
0x1e89a: xor r13d,r13d
0x1e89d: jmp 0x1e66b
0x1e8a2: mov rdi,rcx
0x1e8a5: call 0x2a10
0x1e8aa: xor r9d,r9d
0x1e8ad: jmp 0x1e69d
0x1e8b2: mov rdi,r14
0x1e8b5: call 0x2a10
0x1e8ba: xor r9d,r9d
0x1e8bd: jmp 0x1e69d
0x1e8c2: lea rcx,[rip+0x4487]
0x1e8c9: lea rsi,[rip+0x3ed0]
0x1e8d0: lea rdi,[rip+0x3fea]
0x1e8d7: mov edx,0x1be
0x1e8dc: call 0x2600
0x1e8e1: lea rcx,[rip+0x4458]
0x1e8e8: lea rsi,[rip+0x3eb1]
0x1e8ef: lea rdi,[rip+0x3fb3]
0x1e8f6: mov edx,0x1fb
0x1e8fb: call 0x2600
0x1e900: lea rcx,[rip+0x4439]
0x1e907: lea rsi,[rip+0x3e92]
0x1e90e: lea rdi,[rip+0x3f77]
0x1e915: mov edx,0x1f9
0x1e91a: call 0x2600
0x1e920: push r15
0x1e922: push r14
0x1e924: push r13
0x1e926: push r12
0x1e928: mov r12,rdi
0x1e92b: push rbp
0x1e92c: push rbx
0x1e92d: mov rbp,r8
0x1e930: mov rbx,rdx
0x1e933: mov rdx,rbp
0x1e936: sub rsp,0x28
0x1e93a: shr rdx,0x3f
0x1e93e: mov rax,qword ptr [rsp+0x70]
0x1e943: mov edi,edx
0x1e945: mov r8d,dword ptr [rsp+0x78]
0x1e94a: shr rax,0x3f
0x1e94e: or dil,al
0x1e951: jnz 0x1ea20
0x1e957: test rbx,rbx
0x1e95a: js 0x1ea20
0x1e960: mov r15,rbx
0x1e963: add r15,rbp
0x1e966: jo 0x1ea20
0x1e96c: test rbp,rbp
0x1e96f: mov r14,rcx
0x1e972: mov rcx,r9
0x1e975: jz 0x1ea30
0x1e97b: xor r13d,r13d
0x1e97e: test rbx,rbx
0x1e981: mov qword ptr [rsp+0x8],rsi
0x1e986: jnz 0x1e9d0
0x1e988: movzx r8d,r8b
0x1e98c: mov rdx,r15
0x1e98f: mov rsi,r14
0x1e992: push r8
0x1e994: push qword ptr [rsp+0x70]
0x1e998: mov rdi,r12
0x1e99b: mov r9,qword ptr [rsp+0x80]
0x1e9a3: mov r8,qword ptr [rsp+0x70]
0x1e9a8: call 0x1e4a0
0x1e9ad: mov rdi,r13
0x1e9b0: mov rbx,rax
0x1e9b3: call 0x2a10
0x1e9b8: pop rax
0x1e9b9: pop rdx
0x1e9ba: add rsp,0x28
0x1e9be: mov rax,rbx
0x1e9c1: pop rbx
0x1e9c2: pop rbp
0x1e9c3: pop r12
0x1e9c5: pop r13
0x1e9c7: pop r14
0x1e9c9: pop r15
0x1e9cb: ret
0x1e9cc: nop qword ptr [rax+0x0]
0x1e9d0: mov rdi,r15
0x1e9d3: mov dword ptr [rsp+0x1c],r8d
0x1e9d8: mov qword ptr [rsp+0x10],r9
0x1e9dd: call 0x2780
0x1e9e2: test rax,rax
0x1e9e5: mov r13,rax
0x1e9e8: jz 0x1ea20
0x1e9ea: mov rsi,qword ptr [rsp+0x8]
0x1e9ef: mov rdx,rbx
0x1e9f2: mov rdi,rax
0x1e9f5: call 0x2710
0x1e9fa: lea rdi,[r13+rbx*1+0x0]
0x1e9ff: mov rsi,r14
0x1ea02: mov rdx,rbp
0x1ea05: mov r14,r13
0x1ea08: call 0x2710
0x1ea0d: mov rcx,qword ptr [rsp+0x10]
0x1ea12: mov r8d,dword ptr [rsp+0x1c]
0x1ea17: jmp 0x1e988
0x1ea1c: nop qword ptr [rax+0x0]
0x1ea20: mov rbx,0xfffffffe
0x1ea27: jmp 0x1e9ba
0x1ea29: nop qword ptr [rax+0x0]
0x1ea30: mov r14,rsi
0x1ea33: xor r13d,r13d
0x1ea36: jmp 0x1e988
0x1ea40: mov eax,edx
0x1ea42: push r14
0x1ea44: push r13
0x1ea46: and eax,0x1
0x1ea49: push r12
0x1ea4b: push rbp
0x1ea4c: cmp eax,0x1
0x1ea4f: push rbx
0x1ea50: mov rbx,rdi
0x1ea53: sbb r14,r14
0x1ea56: mov [rdi],0x0
0x1ea5d: mov [rdi+0x8],0x0
0x1ea65: and r14d,0xfd4fca
0x1ea6c: mov [rdi+0x10],0x0
0x1ea74: mov edi,0x100
0x1ea79: mov r12,rsi
0x1ea7c: mov ebp,edx
0x1ea7e: add r14,0x3b2fc
0x1ea85: call 0x2780
0x1ea8a: test rax,rax
0x1ea8d: mov qword ptr [rbx+0x20],rax
0x1ea91: jz 0x1eb40
0x1ea97: mov r13,rbp
0x1ea9a: shl r13,0x15
0x1ea9e: and r13d,0x400000
0x1eaa5: or r13,r14
0x1eaa8: test bpl,0x4
0x1eaac: jnz 0x1eb10
0x1eaae: and [rbx+0x38],0x7f
0x1eab2: movzx edx,byte ptr [rbx+0x38]
0x1eab6: shr ebp,0x3
0x1eab9: mov rdi,r12
0x1eabc: and ebp,0x1
0x1eabf: mov [rbx+0x28],0x0
0x1eac7: shl ebp,0x4
0x1eaca: and edx,0xef
0x1eacd: or ebp,edx
0x1eacf: mov byte ptr [rbx+0x38],bpl
0x1ead3: call 0x2530
0x1ead8: mov rcx,r13
0x1eadb: mov rdx,rax
0x1eade: mov rsi,r12
0x1eae1: mov rdi,rbx
0x1eae4: call 0x1d250
0x1eae9: cmp eax,0x10
0x1eaec: mov ebp,eax
0x1eaee: jz 0x1eb28
0x1eaf0: test eax,eax
0x1eaf2: jnz 0x1eb2d
0x1eaf4: mov rdi,rbx
0x1eaf7: call 0x1e3d0
0x1eafc: pop rbx
0x1eafd: mov eax,ebp
0x1eaff: pop rbp
0x1eb00: pop r12
0x1eb02: pop r13
0x1eb04: pop r14
0x1eb06: ret
0x1eb07: nop qword ptr [rax+rax*1+0x0]
0x1eb10: and r13,0xffffffbf
0x1eb14: or [rbx+0x38],0x80
0x1eb18: or r13,0x100
0x1eb1f: jmp 0x1eab2
0x1eb21: nop qword ptr [rax+0x0]
0x1eb28: mov ebp,0x8
0x1eb2d: mov rdi,qword ptr [rbx+0x20]
0x1eb31: call 0x2a10
0x1eb36: mov [rbx+0x20],0x0
0x1eb3e: jmp 0x1eafc
0x1eb40: mov ebp,0xc
0x1eb45: pop rbx
0x1eb46: mov eax,ebp
0x1eb48: pop rbp
0x1eb49: pop r12
0x1eb4b: pop r13
0x1eb4d: pop r14
0x1eb4f: ret
0x1eb50: push r13
0x1eb52: push r12
0x1eb54: push rbp
0x1eb55: push rbx
0x1eb56: sub rsp,0x8
0x1eb5a: cmp edi,0x10
0x1eb5d: jnbe 0x1ebc0
0x1eb5f: lea rax,[rip+0x427a]
0x1eb66: movsxd rdi,edi
0x1eb69: lea rsi,[rip+0x4310]
0x1eb70: mov rbp,rdx
0x1eb73: mov edx,0x5
0x1eb78: mov r12,rcx
0x1eb7b: add rsi,qword ptr [rax+rdi*8+0x0]
0x1eb7f: xor edi,edi
0x1eb81: call 0x2510
0x1eb86: mov rdi,rax
0x1eb89: mov r13,rax
0x1eb8c: call 0x2530
0x1eb91: test r12,r12
0x1eb94: lea rbx,[rax+0x1]
0x1eb98: jz 0x1ebad
0x1eb9a: cmp rbx,r12
0x1eb9d: mov rdx,rbx
0x1eba0: jnbe 0x1ebc8
0x1eba2: mov rsi,r13
0x1eba5: mov rdi,rbp
0x1eba8: call 0x2710
0x1ebad: add rsp,0x8
0x1ebb1: mov rax,rbx
0x1ebb4: pop rbx
0x1ebb5: pop rbp
0x1ebb6: pop r12
0x1ebb8: pop r13
0x1ebba: ret
0x1ebbb: nop qword ptr [rax+rax*1+0x0]
0x1ebc0: call 0x2400
0x1ebc5: nop qword ptr [rax]
0x1ebc8: lea rdx,[r12-0x1]
0x1ebcd: mov [rbp+r12*1-0x1],0x0
0x1ebd3: jmp 0x1eba2
0x1ebe0: push rbx
0x1ebe1: mov rbx,rdi
0x1ebe4: mov rdi,qword ptr [rdi]
0x1ebe7: test rdi,rdi
0x1ebea: jz 0x1ebf1
0x1ebec: call 0x123d0
0x1ebf1: mov rdi,qword ptr [rbx+0x20]
0x1ebf5: mov [rbx],0x0
0x1ebfc: mov [rbx+0x8],0x0
0x1ec04: call 0x2a10
0x1ec09: mov rdi,qword ptr [rbx+0x28]
0x1ec0d: mov [rbx+0x20],0x0
0x1ec15: call 0x2a10
0x1ec1a: mov [rbx+0x28],0x0
0x1ec22: pop rbx
0x1ec23: ret
0x1eca4: nop qword ptr [rax+0x0]
0x1eca8: test [rbp+0x38],0x10
0x1ecac: mov rcx,qword ptr [rcx]
0x1ecaf: mov rdx,qword ptr [r12+0x8]
0x1ecb4: jnz 0x1ec76
0x1ecc1: nop qword ptr [rax+0x0]
0x1ecc8: mov eax,0x2
0x1eccd: ret
0x1ecd0: sub rsp,0x8
0x1ecd4: mov r9,rdx
0x1ecd7: push 0x1
0x1ecd9: push r8
0x1ecdb: xor r8d,r8d
0x1ecde: call 0x1e4a0
0x1ece3: add rsp,0x18
0x1ece7: ret
0x1ecf0: sub rsp,0x8
0x1ecf4: push 0x0
0x1ecf6: push r9
0x1ecf8: mov r9,rdx
0x1ecfb: call 0x1e4a0
0x1ed00: add rsp,0x18
0x1ed04: ret
0x1ed10: sub rsp,0x8
0x1ed14: push 0x1
0x1ed16: push qword ptr [rsp+0x20]
0x1ed1a: push qword ptr [rsp+0x20]
0x1ed1e: push 0x0
0x1ed20: call 0x1e920
0x1ed25: add rsp,0x28
0x1ed29: ret
0x1ed30: sub rsp,0x8
0x1ed34: push 0x0
0x1ed36: push qword ptr [rsp+0x28]
0x1ed3a: push qword ptr [rsp+0x28]
0x1ed3e: push qword ptr [rsp+0x28]
0x1ed42: call 0x1e920
0x1ed47: add rsp,0x28
0x1ed4b: ret
0x1ed50: test rdx,rdx
0x1ed53: jnz 0x1ed78
0x1ed55: and [rdi+0x38],0xf9
0x1ed59: mov [rsi],0x0
0x1ed60: mov [rsi+0x10],0x0
0x1ed68: mov [rsi+0x8],0x0
0x1ed70: ret
0x1ed71: nop qword ptr [rax+0x0]
0x1ed78: movzx eax,byte ptr [rdi+0x38]
0x1ed7c: and eax,0xf9
0x1ed7f: or eax,0x2
0x1ed82: mov byte ptr [rdi+0x38],al
0x1ed85: mov qword ptr [rsi],rdx
0x1ed88: mov qword ptr [rsi+0x8],rcx
0x1ed8c: mov qword ptr [rsi+0x10],r8
0x1ed90: ret
0x1edb9: nop qword ptr [rax+0x0]
0x1edf2: nop qword ptr [rax+rax*1+0x0]
0x1ee4c: nop qword ptr [rax+0x0]
0x1eec3: nop qword ptr [rax+rax*1+0x0]
0x1ef89: nop qword ptr [rax+0x0]
0x1efaf: nop 
0x1eff9: nop qword ptr [rax+0x0]
0x1f00f: nop 
0x1f0b9: nop qword ptr [rax+0x0]
0x1f0e2: nop qword ptr [rax+rax*1+0x0]
0x1f104: nop qword ptr [rax+0x0]
0x1f110: cmp rdi,0x1
0x1f114: jz 0x1f11b
0x1f116: jmp 0x1edd0
0x1f11b: ret
0x1f178: nop qword ptr [rax+rax*1+0x0]
0x1f186: mov rdi,r12
0x1f189: call 0x1ee00
0x1f19b: nop qword ptr [rax+rax*1+0x0]
0x1f1b5: mov rdi,r12
0x1f1b8: call 0x1ee00
0x1f1bd: test al,al
0x1f1bf: jnz 0x1f16a
0x1f1c1: jmp 0x1f18e
0x1f26b: nop qword ptr [rax+rax*1+0x0]
0x1f2e8: nop qword ptr [rax+rax*1+0x0]
0x1f2fd: nop qword ptr [rax]
0x1f30c: call 0x2560
0x1f320: push r12
0x1f322: push rbp
0x1f323: mov rbp,rdi
0x1f326: push rbx
0x1f327: call 0x2460
0x1f32c: mov ebx,dword ptr [rbp+0x0]
0x1f32f: mov rdi,rbp
0x1f332: mov r12,rax
0x1f335: call 0xdca0
0x1f33a: and ebx,0x20
0x1f33d: test ebx,ebx
0x1f33f: jnz 0x1f358
0x1f341: test eax,eax
0x1f343: jz 0x1f34f
0x1f345: test r12,r12
0x1f348: mov eax,0xffffffff
0x1f34d: jz 0x1f388
0x1f34f: pop rbx
0x1f350: pop rbp
0x1f351: pop r12
0x1f353: ret
0x1f354: nop qword ptr [rax+0x0]
0x1f358: test eax,eax
0x1f35a: jnz 0x1f378
0x1f35c: call 0x2410
0x1f361: mov [rax],0x0
0x1f367: mov eax,0xffffffff
0x1f36c: pop rbx
0x1f36d: pop rbp
0x1f36e: pop r12
0x1f370: ret
0x1f371: nop qword ptr [rax+0x0]
0x1f378: pop rbx
0x1f379: mov eax,0xffffffff
0x1f37e: pop rbp
0x1f37f: pop r12
0x1f381: ret
0x1f382: nop qword ptr [rax+rax*1+0x0]
0x1f388: call 0x2410
0x1f38d: cmp [rax],0x9
0x1f390: pop rbx
0x1f391: pop rbp
0x1f392: pop r12
0x1f394: setnz al
0x1f397: movzx eax,al
0x1f39a: neg eax
0x1f39c: ret
0x1f3dc: nop qword ptr [rax+0x0]
0x1f3f5: nop qword ptr [rax]
0x1f407: nop qword ptr [rax+rax*1+0x0]
0x1f484: nop qword ptr [rax+0x0]
0x1f488: lea rax,[rsp+0x60]
0x1f48d: mov [rsp],0x10
0x1f494: mov edx,dword ptr [rsp+0x30]
0x1f498: mov qword ptr [rsp+0x8],rax
0x1f49d: lea rax,[rsp+0x20]
0x1f4a2: mov qword ptr [rsp+0x10],rax
0x1f4a7: jmp 0x1f461
0x1f4a9: call 0x2560
0x1f4ea: nop qword ptr [rax+rax*1+0x0]
0x1f510: mov [rdi+0x1c],0x1
0x1f514: mov [rdi+0x14],0x0
0x1f51c: mov dword ptr [rdi],esi
0x1f51e: mov dword ptr [rdi+0x4],esi
0x1f521: mov dword ptr [rdi+0x8],esi
0x1f524: mov dword ptr [rdi+0xc],esi
0x1f527: mov dword ptr [rdi+0x10],esi
0x1f52a: ret
0x1f5a6: nop qword ptr [rax+rax*1+0x0]
0x1f5e6: nop qword ptr [rax+rax*1+0x0]
0x1f643: nop qword ptr [rax+rax*1+0x0]
0x1f648: lea rax,[rsp+0x60]
0x1f64d: mov [rsp],0x18
0x1f654: mov ecx,dword ptr [rsp+0x38]
0x1f658: mov qword ptr [rsp+0x8],rax
0x1f65d: lea rax,[rsp+0x20]
0x1f662: mov qword ptr [rsp+0x10],rax
0x1f667: jmp 0x1f620
0x1f669: call 0x2560
0x1f68a: test eax,eax
0x1f68c: js 0x1f6e0
0x1f68e: mov edi,eax
0x1f690: mov ebx,eax
0x1f692: call 0x28f0
0x1f697: test rax,rax
0x1f69a: mov rbp,rax
0x1f69d: jz 0x1f6b8
0x1f69f: mov dword ptr [r12],ebx
0x1f6a3: add rsp,0x8
0x1f6a7: mov rax,rbp
0x1f6aa: pop rbx
0x1f6ab: pop rbp
0x1f6ac: pop r12
0x1f6ae: pop r13
0x1f6b0: ret
0x1f6b1: nop qword ptr [rax+0x0]
0x1f6b8: call 0x2410
0x1f6bd: mov r13d,dword ptr [rax]
0x1f6c0: mov r12,rax
0x1f6c3: mov edi,ebx
0x1f6c5: call 0x2640
0x1f6ca: mov rax,rbp
0x1f6cd: mov dword ptr [r12],r13d
0x1f6d1: add rsp,0x8
0x1f6d5: pop rbx
0x1f6d6: pop rbp
0x1f6d7: pop r12
0x1f6d9: pop r13
0x1f6db: ret
0x1f6dc: nop qword ptr [rax+0x0]
0x1f6e0: add rsp,0x8
0x1f6e4: xor ebp,ebp
0x1f6e6: pop rbx
0x1f6e7: mov rax,rbp
0x1f6ea: pop rbp
0x1f6eb: pop r12
0x1f6ed: pop r13
0x1f6ef: ret
0x1f781: cmp esi,0x406
0x1f787: jnz 0x1f7d0
0x1f789: mov rax,qword ptr [rsp+0x10]
0x1f78e: cmp [rip+0x208b63],0x0
0x1f795: mov [rsp],0x18
0x1f79c: mov r12d,dword ptr [rax+0x10]
0x1f7a0: mov edx,r12d
0x1f7a3: js 0x1f8d3
0x1f7a9: xor eax,eax
0x1f7ab: mov esi,0x406
0x1f7b0: call 0x24a0
0x1f7b5: test eax,eax
0x1f7b7: mov ebx,eax
0x1f7b9: js 0x1f948
0x1f7bf: mov [rip+0x208b2f],0x1
0x1f7c9: jmp 0x1f810
0x1f7cb: nop qword ptr [rax+rax*1+0x0]
0x1f7d0: cmp esi,0xb
0x1f7d3: jz 0x1f800
0x1f7d5: jnle 0x1f830
0x1f7d7: cmp esi,0x4
0x1f7da: jz 0x1f8b0
0x1f7e0: jnle 0x1f8a0
0x1f7e6: cmp esi,0x2
0x1f7e9: jz 0x1f8b0
0x1f7ef: jnle 0x1f800
0x1f7f1: cmp esi,0x1
0x1f7f4: jnz 0x1f858
0x1f7f6: nop qword ptr [rax+rax*1+0x0]
0x1f800: mov edi,ebp
0x1f802: xor eax,eax
0x1f804: call 0x24a0
0x1f809: mov ebx,eax
0x1f80b: nop qword ptr [rax+rax*1+0x0]
0x1f82f: nop 
0x1f830: cmp esi,0x407
0x1f836: jnle 0x1f880
0x1f838: cmp esi,0x406
0x1f83e: jnl 0x1f8b0
0x1f840: cmp esi,0x401
0x1f846: jz 0x1f800
0x1f848: cmp esi,0x402
0x1f84e: jz 0x1f8b0
0x1f850: cmp esi,0x400
0x1f856: jz 0x1f8b0
0x1f858: mov eax,dword ptr [rsp]
0x1f85b: cmp eax,0x2f
0x1f85e: jnbe 0x1f99a
0x1f864: add rax,qword ptr [rsp+0x10]
0x1f869: mov rdx,qword ptr [rax]
0x1f86c: mov edi,ebp
0x1f86e: xor eax,eax
0x1f870: call 0x24a0
0x1f875: mov ebx,eax
0x1f877: jmp 0x1f810
0x1f879: nop qword ptr [rax+0x0]
0x1f880: cmp esi,0x409
0x1f886: jz 0x1f8b0
0x1f888: jl 0x1f800
0x1f88e: cmp esi,0x40a
0x1f894: jnz 0x1f858
0x1f896: jmp 0x1f800
0x1f89b: nop qword ptr [rax+rax*1+0x0]
0x1f8a0: cmp esi,0x9
0x1f8a3: jz 0x1f800
0x1f8a9: jnle 0x1f8b0
0x1f8ab: cmp esi,0x8
0x1f8ae: jnz 0x1f858
0x1f8b0: mov eax,dword ptr [rsp]
0x1f8b3: cmp eax,0x2f
0x1f8b6: jnbe 0x1f9a4
0x1f8bc: add rax,qword ptr [rsp+0x10]
0x1f8c1: mov edx,dword ptr [rax]
0x1f8c3: mov edi,ebp
0x1f8c5: xor eax,eax
0x1f8c7: call 0x24a0
0x1f8cc: mov ebx,eax
0x1f8ce: jmp 0x1f810
0x1f8d3: xor esi,esi
0x1f8d5: xor eax,eax
0x1f8d7: call 0x24a0
0x1f8dc: test eax,eax
0x1f8de: mov ebx,eax
0x1f8e0: js 0x1f810
0x1f8e6: cmp [rip+0x208a0b],0xff
0x1f8ed: jnz 0x1f810
0x1f8f3: xor eax,eax
0x1f8f5: mov esi,0x1
0x1f8fa: mov edi,ebx
0x1f8fc: call 0x24a0
0x1f901: test eax,eax
0x1f903: js 0x1f921
0x1f905: or eax,0x1
0x1f908: mov esi,0x2
0x1f90d: mov edi,ebx
0x1f90f: mov edx,eax
0x1f911: xor eax,eax
0x1f913: call 0x24a0
0x1f918: cmp eax,0xff
0x1f91b: jnz 0x1f810
0x1f921: call 0x2410
0x1f926: mov r12d,dword ptr [rax]
0x1f929: mov rbp,rax
0x1f92c: mov edi,ebx
0x1f92e: call 0x2640
0x1f933: mov ebx,0xffffffff
0x1f938: mov dword ptr [rbp+0x0],r12d
0x1f93c: jmp 0x1f810
0x1f941: nop qword ptr [rax+0x0]
0x1f948: call 0x2410
0x1f94d: cmp [rax],0x16
0x1f950: jnz 0x1f7bf
0x1f956: xor esi,esi
0x1f958: xor eax,eax
0x1f95a: mov edx,r12d
0x1f95d: mov edi,ebp
0x1f95f: call 0x24a0
0x1f964: test eax,eax
0x1f966: mov ebx,eax
0x1f968: js 0x1f810
0x1f96e: mov [rip+0x208980],0xffffffff
0x1f978: jmp 0x1f8f3
0x1f97d: call 0x2560
0x1f99a: mov rax,qword ptr [rsp+0x8]
0x1f99f: jmp 0x1f869
0x1f9a4: mov rax,qword ptr [rsp+0x8]
0x1f9a9: jmp 0x1f8c1
0x1fa50: sub rsp,0x8
0x1fa54: add rsp,0x8
0x1fa58: ret
