
"free@plt" :
15b0(6): jmp 0x20a86a(%rip)
15b6(5): push $0x0

"abort@plt" :
15c0(6): jmp 0x20a862(%rip)
15c6(5): push $0x1

"__errno_location@plt" :
15d0(6): jmp 0x20a85a(%rip)
15d6(5): push $0x2

"strncmp@plt" :
15e0(6): jmp 0x20a852(%rip)
15e6(5): push $0x3

"_exit@plt" :
15f0(6): jmp 0x20a84a(%rip)
15f6(5): push $0x4

"__fpending@plt" :
1600(6): jmp 0x20a842(%rip)
1606(5): push $0x5

"fcntl@plt" :
1610(6): jmp 0x20a83a(%rip)
1616(5): push $0x6

"fread_unlocked@plt" :
1620(6): jmp 0x20a832(%rip)
1626(5): push $0x7

"textdomain@plt" :
1630(6): jmp 0x20a82a(%rip)
1636(5): push $0x8

"fclose@plt" :
1640(6): jmp 0x20a822(%rip)
1646(5): push $0x9

"bindtextdomain@plt" :
1650(6): jmp 0x20a81a(%rip)
1656(5): push $0xa

"dcgettext@plt" :
1660(6): jmp 0x20a812(%rip)
1666(5): push $0xb

"__ctype_get_mb_cur_max@plt" :
1670(6): jmp 0x20a80a(%rip)
1676(5): push $0xc

"strlen@plt" :
1680(6): jmp 0x20a802(%rip)
1686(5): push $0xd

"__stack_chk_fail@plt" :
1690(6): jmp 0x20a7fa(%rip)
1696(5): push $0xe

"getopt_long@plt" :
16a0(6): jmp 0x20a7f2(%rip)
16a6(5): push $0xf

"mbrtowc@plt" :
16b0(6): jmp 0x20a7ea(%rip)
16b6(5): push $0x10

"strchr@plt" :
16c0(6): jmp 0x20a7e2(%rip)
16c6(5): push $0x11

"__overflow@plt" :
16d0(6): jmp 0x20a7da(%rip)
16d6(5): push $0x12

"strrchr@plt" :
16e0(6): jmp 0x20a7d2(%rip)
16e6(5): push $0x13

"lseek@plt" :
16f0(6): jmp 0x20a7ca(%rip)
16f6(5): push $0x14

"memset@plt" :
1700(6): jmp 0x20a7c2(%rip)
1706(5): push $0x15

"close@plt" :
1710(6): jmp 0x20a7ba(%rip)
1716(5): push $0x16

"posix_fadvise@plt" :
1720(6): jmp 0x20a7b2(%rip)
1726(5): push $0x17

"memcmp@plt" :
1730(6): jmp 0x20a7aa(%rip)
1736(5): push $0x18

"fputs_unlocked@plt" :
1740(6): jmp 0x20a7a2(%rip)
1746(5): push $0x19

"calloc@plt" :
1750(6): jmp 0x20a79a(%rip)
1756(5): push $0x1a

"__getdelim@plt" :
1760(6): jmp 0x20a792(%rip)
1766(5): push $0x1b

"memcpy@plt" :
1770(6): jmp 0x20a78a(%rip)
1776(5): push $0x1c

"fileno@plt" :
1780(6): jmp 0x20a782(%rip)
1786(5): push $0x1d

"malloc@plt" :
1790(6): jmp 0x20a77a(%rip)
1796(5): push $0x1e

"fflush@plt" :
17a0(6): jmp 0x20a772(%rip)
17a6(5): push $0x1f

"nl_langinfo@plt" :
17b0(6): jmp 0x20a76a(%rip)
17b6(5): push $0x20

"__freading@plt" :
17c0(6): jmp 0x20a762(%rip)
17c6(5): push $0x21

"fwrite_unlocked@plt" :
17d0(6): jmp 0x20a75a(%rip)
17d6(5): push $0x22

"realloc@plt" :
17e0(6): jmp 0x20a752(%rip)
17e6(5): push $0x23

"fdopen@plt" :
17f0(6): jmp 0x20a74a(%rip)
17f6(5): push $0x24

"setlocale@plt" :
1800(6): jmp 0x20a742(%rip)
1806(5): push $0x25

"__printf_chk@plt" :
1810(6): jmp 0x20a73a(%rip)
1816(5): push $0x26

"setvbuf@plt" :
1820(6): jmp 0x20a732(%rip)
1826(5): push $0x27

"error@plt" :
1830(6): jmp 0x20a72a(%rip)
1836(5): push $0x28

"fseeko@plt" :
1840(6): jmp 0x20a722(%rip)
1846(5): push $0x29

"fopen@plt" :
1850(6): jmp 0x20a71a(%rip)
1856(5): push $0x2a

"dcngettext@plt" :
1860(6): jmp 0x20a712(%rip)
1866(5): push $0x2b

"__cxa_atexit@plt" :
1870(6): jmp 0x20a70a(%rip)
1876(5): push $0x2c

"exit@plt" :
1880(6): jmp 0x20a702(%rip)
1886(5): push $0x2d

"fwrite@plt" :
1890(6): jmp 0x20a6fa(%rip)
1896(5): push $0x2e

"__fprintf_chk@plt" :
18a0(6): jmp 0x20a6f2(%rip)
18a6(5): push $0x2f

"mbsinit@plt" :
18b0(6): jmp 0x20a6ea(%rip)
18b6(5): push $0x30

"iswprint@plt" :
18c0(6): jmp 0x20a6e2(%rip)
18c6(5): push $0x31

"__ctype_tolower_loc@plt" :
18d0(6): jmp 0x20a6da(%rip)
18d6(5): push $0x32

"__ctype_b_loc@plt" :
18e0(6): jmp 0x20a6d2(%rip)
18e6(5): push $0x33

".plt.got" :
18f0(6): jmp 0x20a6ea(%rip)
18f6(2): nop 

"_init" :
1580(4): sub $0x8,%rsp
1584(7): mov 0x20aa45(%rip),%rax
158b(3): test %rax,%rax
158e(2): jz 0x4(%rip)
1590(2): call %rax
1592(4): add $0x8,%rsp
1596(1): ret near (%rsp)

"main" :
1900(2): push %r15
1902(2): push %r14
1904(2): push %r13
1906(2): push %r12
1908(3): mov %edi,%r12d
190b(1): push %rbp
190c(1): push %rbx
190d(3): mov %rsi,%rbx
1910(5): mov $0xffffffff,%ebp
1915(7): sub $0x108,%rsp
191c(3): mov (%rsi),%rdi
191f(9): mov $0x28,%rax
1928(8): mov %rax,0xf8(%rsp)
1930(2): xor %eax,%eax
1932(5): call 0x4c8e(%rip)
1937(7): lea 0x8a03(%rip),%rsi
193e(5): mov $0x6,%edi
1943(5): call 0xfffffebd(%rip)
1948(7): lea 0x7910(%rip),%rsi
194f(7): lea 0x78e0(%rip),%rdi
1956(5): call 0xfffffcfa(%rip)
195b(7): lea 0x78d4(%rip),%rdi
1962(5): call 0xfffffcce(%rip)
1967(7): lea 0x19b2(%rip),%rdi
196e(5): call 0x7812(%rip)
1973(7): mov 0x20a72e(%rip),%rdi
197a(2): xor %ecx,%ecx
197c(5): mov $0x1,%edx
1981(2): xor %esi,%esi
1983(5): call 0xfffffe9d(%rip)
1988(5): mov $0x0,0x78(%rsp)
198d(5): mov $0x0,0x2b(%rsp)
1992(6): nop 0x0(%rax,%rax,1)
1998(7): lea 0x20a081(%rip),%rcx
199f(7): lea 0x78fa(%rip),%rdx
19a6(3): xor %r8d,%r8d
19a9(3): mov %rbx,%rsi
19ac(3): mov %r12d,%edi
19af(5): call 0xfffffcf1(%rip)
19b4(3): cmp $0xff,%eax
19b7(6): jz 0x185(%rip)
19bd(3): cmp $0x77,%eax
19c0(6): jz 0xe0(%rip)
19c6(2): jle 0x3a(%rip)
19c8(5): cmp $0x81,%eax
19cd(6): jz 0x123(%rip)
19d3(2): jle 0x55(%rip)
19d5(5): cmp $0x83,%eax
19da(6): jz 0x106(%rip)
19e0(6): jl 0xe0(%rip)
19e6(5): cmp $0x84,%eax
19eb(6): jnz 0x1e5(%rip)
19f1(5): mov $0x1,0x78(%rsp)
19f6(5): mov $0x1,%ebp
19fb(2): jmp 0xffffff9d(%rip)
19fd(3): nop (%rax)
1a00(3): cmp $0x62,%eax
1a03(6): jz 0x11d(%rip)
1a09(2): jle 0x47(%rip)
1a0b(3): cmp $0x63,%eax
1a0e(6): jz 0x102(%rip)
1a14(3): cmp $0x74,%eax
1a17(6): jnz 0x1b9(%rip)
1a1d(2): xor %ebp,%ebp
1a1f(5): jmp 0xffffff79(%rip)
1a24(4): nop 0x0(%rax)
1a28(3): cmp $0x7a,%eax
1a2b(6): jz 0x105(%rip)
1a31(3): add $0x80,%eax
1a34(6): jnz 0x19c(%rip)
1a3a(7): mov $0x1,0x20a6b1(%rip)
1a41(5): jmp 0xffffff57(%rip)
1a46(a): nop 0x0(%rax,%rax,1)
1a50(5): cmp $0xffffff7d,%eax
1a55(6): jnz 0xf7c(%rip)
1a5b(7): lea 0x7831(%rip),%rax
1a62(7): mov 0x20a63f(%rip),%rdi
1a69(7): mov 0x20a5a8(%rip),%rcx
1a70(2): push $0x0
1a72(7): lea 0x77fe(%rip),%r9
1a79(7): lea 0x7804(%rip),%r8
1a80(1): push %rax
1a81(7): lea 0x77aa(%rip),%rdx
1a88(7): lea 0x771b(%rip),%rsi
1a8f(2): xor %eax,%eax
1a91(5): call 0x6d2f(%rip)
1a96(2): xor %edi,%edi
1a98(5): call 0xfffffde8(%rip)
1a9d(3): nop (%rax)
1aa0(7): mov $0x0,0x20a64d(%rip)
1aa7(7): mov $0x1,0x20a645(%rip)
1aae(7): mov $0x0,0x20a63c(%rip)
1ab5(5): jmp 0xfffffee3(%rip)
1aba(6): nop 0x0(%rax,%rax,1)
1ac0(7): mov $0x0,0x20a62d(%rip)
1ac7(7): mov $0x0,0x20a625(%rip)
1ace(7): mov $0x1,0x20a61c(%rip)
1ad5(5): jmp 0xfffffec3(%rip)
1ada(6): nop 0x0(%rax,%rax,1)
1ae0(7): mov $0x1,0x20a609(%rip)
1ae7(5): jmp 0xfffffeb1(%rip)
1aec(4): nop 0x0(%rax)
1af0(7): mov $0x1,0x20a5fd(%rip)
1af7(7): mov $0x0,0x20a5f5(%rip)
1afe(7): mov $0x0,0x20a5ec(%rip)
1b05(5): jmp 0xfffffe93(%rip)
1b0a(6): nop 0x0(%rax,%rax,1)
1b10(5): mov $0x1,0x2b(%rsp)
1b15(5): jmp 0xfffffe83(%rip)
1b1a(6): nop 0x0(%rax,%rax,1)
1b20(5): mov $0x1,%ebp
1b25(5): jmp 0xfffffe73(%rip)
1b2a(6): nop 0x0(%rax,%rax,1)
1b30(7): mov $0x0,0x20a4d9(%rip)
1b37(5): jmp 0xfffffe61(%rip)
1b3c(2): test %ebp,%ebp
1b3e(b): mov $0x42,0x20a5b7(%rip)
1b49(b): mov $0x40,0x20a5a4(%rip)
1b54(3): setz %al
1b57(4): test %al,0x78(%rsp)
1b5b(6): jnz 0xec0(%rip)
1b61(7): cmp $0xa,0x20a4a8(%rip)
1b68(2): jz 0x72(%rip)
1b6a(5): cmp $0x0,0x2b(%rsp)
1b6f(5): mov $0x5,%edx
1b74(7): lea 0x7e2d(%rip),%rsi
1b7b(2): jnz 0x40(%rip)
1b7d(7): cmp $0x0,0x20a56e(%rip)
1b84(6): jnz 0xea8(%rip)
1b8a(7): cmp $0x0,0x20a563(%rip)
1b91(6): jnz 0xe6f(%rip)
1b97(7): cmp $0x0,0x20a555(%rip)
1b9e(6): jz 0x307(%rip)
1ba4(5): cmp $0x0,0x2b(%rsp)
1ba9(5): mov $0x5,%edx
1bae(7): lea 0x7f4b(%rip),%rsi
1bb5(6): jnz 0x88(%rip)
1bbb(2): xor %edi,%edi
1bbd(5): call 0xfffffaa3(%rip)
1bc2(2): xor %esi,%esi
1bc4(3): mov %rax,%rdx
1bc7(2): xor %edi,%edi
1bc9(2): xor %eax,%eax
1bcb(5): call 0xfffffc65(%rip)
1bd0(5): mov $0x1,%edi
1bd5(5): call 0x12cb(%rip)
1bda(5): cmp $0x0,0x2b(%rsp)
1bdf(2): jz 0x15(%rip)
1be1(5): cmp $0x0,0x78(%rsp)
1be6(5): mov $0x5,%edx
1beb(7): lea 0x7df6(%rip),%rsi
1bf2(2): jnz 0xffffffc9(%rip)
1bf4(2): test %ebp,%ebp
1bf6(2): js 0x15(%rip)
1bf8(5): cmp $0x0,0x2b(%rsp)
1bfd(5): mov $0x5,%edx
1c02(7): lea 0x7e1f(%rip),%rsi
1c09(2): jnz 0xffffffb2(%rip)
1c0b(7): cmp $0x0,0x20a4e0(%rip)
1c12(6): jz 0xdd6(%rip)
1c18(5): cmp $0x0,0x2b(%rsp)
1c1d(6): jz 0xe0f(%rip)
1c23(7): cmp $0x0,0x20a4ca(%rip)
1c2a(6): jz 0x983(%rip)
1c30(7): cmp $0x0,0x20a4bc(%rip)
1c37(6): jz 0x26e(%rip)
1c3d(3): cmp $0xff,%ebp
1c40(2): jnz 0x4(%rip)
1c42(2): xor %ebp,%ebp
1c44(3): movsxd %r12d,%rax
1c47(4): lea 0x0(%rbx,%rax,8),%rax
1c4b(5): mov %rax,0x48(%rsp)
1c50(7): movsxd 0x20a461(%rip),%rax
1c57(3): cmp %r12d,%eax
1c5a(2): jnz 0x1b(%rip)
1c5c(5): mov 0x48(%rsp),%rdi
1c61(7): lea 0x819a(%rip),%rsi
1c68(4): add $0x8,%rdi
1c6c(4): mov %rsi,0xfffffff8(%rdi)
1c70(5): mov %rdi,0x48(%rsp)
1c75(4): lea 0x0(%rbx,%rax,8),%rax
1c79(5): cmp %rax,0x48(%rsp)
1c7e(5): mov %rax,0x18(%rsp)
1c83(6): jbe 0xcb1(%rip)
1c89(3): cmp $0x1,%ebp
1c8c(7): lea 0x80bd(%rip),%r14
1c93(5): mov $0x1,0x79(%rsp)
1c98(2): sbb %eax,%eax
1c9a(3): and $0xf6,%eax
1c9d(3): add $0x2a,%eax
1ca0(4): mov %eax,0x7c(%rsp)
1ca4(4): mov %al,0x7b(%rsp)
1ca8(8): nop 0x0(%rax,%rax,1)
1cb0(5): mov 0x18(%rsp),%rax
1cb5(5): cmp $0x0,0x2b(%rsp)
1cba(3): mov (%rax),%rsi
1cbd(5): mov %rsi,0x20(%rsp)
1cc2(6): jz 0x67e(%rip)
1cc8(7): lea 0x8133(%rip),%rdi
1ccf(5): mov $0x2,%ecx
1cd4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1cd6(3): setnbe %al
1cd9(2): sbb $0x0,%al
1cdb(3): movsx %al,%eax
1cde(2): test %eax,%eax
1ce0(4): mov %eax,0x2c(%rsp)
1ce4(6): jnz 0x731(%rip)
1cea(7): lea 0x75b5(%rip),%rsi
1cf1(5): mov $0x5,%edx
1cf6(2): xor %edi,%edi
1cf8(7): mov $0x1,0x20a409(%rip)
1cff(5): call 0xfffff961(%rip)
1d04(7): mov 0x20a3a5(%rip),%r12
1d0b(5): mov %rax,0x20(%rsp)
1d10(8): lea 0x98(%rsp),%rax
1d18(c): mov $0x0,0x90(%rsp)
1d24(c): mov $0x0,0x98(%rsp)
1d30(5): mov $0x0,0x7a(%rsp)
1d35(5): mov $0x0,0x30(%rsp)
1d3a(3): xor %r13d,%r13d
1d3d(5): mov %rax,0x10(%rsp)
1d42(8): lea 0x90(%rsp),%rax
1d4a(9): mov $0x0,0x58(%rsp)
1d53(9): mov $0x0,0x50(%rsp)
1d5c(5): mov $0x1,%ebp
1d61(5): mov %rax,0x8(%rsp)
1d66(8): lea 0x8f(%rsp),%rax
1d6e(5): mov %rax,0x40(%rsp)
1d73(8): lea 0xd0(%rsp),%rax
1d7b(5): mov %rax,0x38(%rsp)
1d80(5): mov 0x10(%rsp),%rsi
1d85(5): mov 0x8(%rsp),%rdi
1d8a(3): mov %r12,%rcx
1d8d(5): mov $0xa,%edx
1d92(5): call 0xfffff9ce(%rip)
1d97(3): test %rax,%rax
1d9a(6): jle 0x302(%rip)
1da0(8): mov 0x90(%rsp),%rbx
1da8(3): movzx (%rbx),%ecx
1dab(3): cmp $0x23,%cl
1dae(6): jz 0xa7(%rip)
1db4(5): cmp $0xa,0xffffffff(%rbx,%rax,1)
1db9(3): mov %rax,%r15
1dbc(2): jnz 0x16(%rip)
1dbe(4): sub $0x1,%r15
1dc2(5): mov $0x0,0x0(%rbx,%r15,1)
1dc7(8): mov 0x90(%rsp),%rbx
1dcf(3): movzx (%rbx),%ecx
1dd2(3): cmp $0x9,%cl
1dd5(2): jz 0x9(%rip)
1dd7(2): xor %edx,%edx
1dd9(3): cmp $0x20,%cl
1ddc(2): jnz 0x16(%rip)
1dde(2): xor %edx,%edx
1de0(4): add $0x1,%rdx
1de4(4): movzx 0x0(%rbx,%rdx,1),%ecx
1de8(3): cmp $0x20,%cl
1deb(2): jz 0xfffffff5(%rip)
1ded(3): cmp $0x9,%cl
1df0(2): jz 0xfffffff0(%rip)
1df2(3): xor %r9d,%r9d
1df5(3): cmp $0x5c,%cl
1df8(2): jnz 0xc(%rip)
1dfa(6): movzx 0x2b(%rsp),%r9d
1e00(4): add $0x1,%rdx
1e04(4): lea 0x0(%rbx,%rdx,1),%r8
1e08(7): lea 0x73a5(%rip),%rdi
1e0f(5): mov $0x6,%ecx
1e14(3): mov %r8,%rsi
1e17(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1e19(3): setnbe %al
1e1c(2): sbb $0x0,%al
1e1e(2): test %al,%al
1e20(6): jnz 0xd0(%rip)
1e26(5): movzx 0x6(%rbx,%rdx,1),%eax
1e2b(4): lea 0x6(%rdx),%rcx
1e2f(2): cmp $0x20,%al
1e31(2): jnz 0xb(%rip)
1e33(5): movzx 0x7(%rbx,%rdx,1),%eax
1e38(4): lea 0x7(%rdx),%rcx
1e3c(2): cmp $0x28,%al
1e3e(6): jz 0x586(%rip)
1e44(4): add $0x1,%r13
1e48(7): cmp $0x0,0x20a2a4(%rip)
1e4f(6): jnz 0x381(%rip)
1e55(5): test $0x30,(%r12)
1e5a(6): jnz 0x242(%rip)
1e60(4): add $0x1,%rbp
1e64(6): jnz 0xffffff1c(%rip)
1e6a(5): mov 0x20(%rsp),%rdx
1e6f(5): mov $0x3,%esi
1e74(2): xor %edi,%edi
1e76(5): call 0x628a(%rip)
1e7b(7): lea 0x7433(%rip),%rsi
1e82(3): mov %rax,%rbx
1e85(5): mov $0x5,%edx
1e8a(2): xor %edi,%edi
1e8c(5): call 0xfffff7d4(%rip)
1e91(3): mov %rbx,%rcx
1e94(3): mov %rax,%rdx
1e97(2): xor %esi,%esi
1e99(5): mov $0x1,%edi
1e9e(2): xor %eax,%eax
1ea0(5): call 0xfffff990(%rip)
1ea5(7): cmp $0x1,0x20a245(%rip)
1eac(2): jnz 0x19(%rip)
1eae(5): cmp $0x0,0x2b(%rsp)
1eb3(5): mov $0x5,%edx
1eb8(7): lea 0x7c81(%rip),%rsi
1ebf(6): jz 0xfffffcfc(%rip)
1ec5(7): cmp $0x0,0x20a224(%rip)
1ecc(6): jz 0xfffffd71(%rip)
1ed2(5): cmp $0x0,0x2b(%rsp)
1ed7(5): mov $0x5,%edx
1edc(7): lea 0x7c9d(%rip),%rsi
1ee3(6): jnz 0xfffffd5a(%rip)
1ee9(5): jmp 0xfffffcd2(%rip)
1eee(2): nop 
1ef0(3): mov %r15,%rcx
1ef3(2): xor %eax,%eax
1ef5(3): sub %rdx,%rcx
1ef8(4): cmp $0x5c,(%r8)
1efc(3): setz %al
1eff(7): add 0x20a1fa(%rip),%rax
1f06(3): cmp %rax,%rcx
1f09(6): jb 0xffffff3b(%rip)
1f0f(7): add 0x20a1e2(%rip),%rdx
1f16(4): lea 0x0(%rbx,%rdx,1),%rcx
1f1a(3): movzx (%rcx),%eax
1f1d(2): cmp $0x20,%al
1f1f(2): jz 0xa(%rip)
1f21(2): cmp $0x9,%al
1f23(6): jnz 0xffffff21(%rip)
1f29(3): mov $0x0,(%rcx)
1f2c(3): mov %r8,%rdi
1f2f(5): mov %rdx,0x70(%rsp)
1f34(5): mov %r9b,0x68(%rsp)
1f39(5): mov %r8,0x60(%rsp)
1f3e(5): call 0xc92(%rip)
1f43(2): test %al,%al
1f45(6): jz 0xfffffeff(%rip)
1f4b(5): mov 0x70(%rsp),%rdx
1f50(3): mov %r15,%rcx
1f53(6): mov 0x20a0bb(%rip),%esi
1f59(5): mov 0x60(%rsp),%r8
1f5e(6): movzx 0x68(%rsp),%r9d
1f64(4): lea 0x1(%rdx),%rax
1f68(3): sub %rax,%rcx
1f6b(4): sub $0x1,%rcx
1f6f(2): jz 0x19(%rip)
1f71(5): movzx 0x1(%rbx,%rdx,1),%ecx
1f76(3): cmp $0x20,%cl
1f79(6): jz 0x76b(%rip)
1f7f(3): cmp $0x2a,%cl
1f82(6): jz 0x762(%rip)
1f88(2): test %esi,%esi
1f8a(6): jz 0xfffffeba(%rip)
1f90(a): mov $0x1,0x20a07a(%rip)
1f9a(3): add %rax,%rbx
1f9d(3): test %r9b,%r9b
1fa0(6): jnz 0x7a1(%rip)
1fa6(4): mov 0x2c(%rsp),%eax
1faa(2): test %eax,%eax
1fac(2): jnz 0x20(%rip)
1fae(7): lea 0x7e4d(%rip),%rdi
1fb5(5): mov $0x2,%ecx
1fba(3): mov %rbx,%rsi
1fbd(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1fbf(3): setnbe %al
1fc2(2): sbb $0x0,%al
1fc4(2): test %al,%al
1fc6(6): jz 0xfffffe7e(%rip)
1fcc(3): xor %r15d,%r15d
1fcf(7): cmp $0x0,0x20a11e(%rip)
1fd6(2): jnz 0x23(%rip)
1fd8(5): mov $0xa,%esi
1fdd(3): mov %rbx,%rdi
1fe0(5): mov %r8,0x30(%rsp)
1fe5(5): call 0xfffff6db(%rip)
1fea(5): mov 0x30(%rsp),%r8
1fef(3): xor %r15d,%r15d
1ff2(3): test %rax,%rax
1ff5(4): setnz %r15b
1ff9(5): mov 0x40(%rsp),%rdx
1ffe(5): mov 0x38(%rsp),%rsi
2003(3): mov %rbx,%rdi
2006(5): mov %r8,0x30(%rsp)
200b(5): call 0xcf5(%rip)
2010(2): test %al,%al
2012(3): mov %eax,%r9d
2015(5): mov 0x30(%rsp),%r8
201a(6): jnz 0x206(%rip)
2020(6): add $0x1,0x50(%rsp)
2026(7): cmp $0x0,0x20a0c7(%rip)
202d(2): jnz 0x5b(%rip)
202f(3): test %r15d,%r15d
2032(2): jz 0x22(%rip)
2034(7): mov 0x20a06d(%rip),%rdi
203b(4): mov 0x28(%rdi),%rax
203f(4): cmp 0x30(%rdi),%rax
2043(6): jnb 0x921(%rip)
2049(4): lea 0x1(%rax),%rdx
204d(4): mov %rdx,0x28(%rdi)
2051(3): mov $0x5c,(%rax)
2054(3): mov %r15d,%esi
2057(3): mov %rbx,%rdi
205a(5): call 0xbd6(%rip)
205f(7): lea 0x726b(%rip),%rsi
2066(5): mov $0x5,%edx
206b(2): xor %edi,%edi
206d(5): call 0xfffff5f3(%rip)
2072(7): lea 0x82d8(%rip),%rsi
2079(3): mov %rax,%rdx
207c(5): mov $0x1,%edi
2081(2): xor %eax,%eax
2083(5): call 0xfffff78d(%rip)
2088(5): movzx 0x2b(%rsp),%eax
208d(5): test $0x30,(%r12)
2092(4): mov %al,0x30(%rsp)
2096(6): jz 0xfffffdca(%rip)
209c(8): mov 0x90(%rsp),%rdi
20a4(5): call 0xfffff50c(%rip)
20a9(4): mov (%r12),%ebx
20ad(3): and $0x20,%ebx
20b0(6): jnz 0x4be(%rip)
20b6(5): cmp $0x0,0x2c(%rsp)
20bb(6): jnz 0x56d(%rip)
20c1(5): cmp $0x0,0x30(%rsp)
20c6(6): jz 0x57f(%rip)
20cc(7): cmp $0x0,0x20a021(%rip)
20d3(6): jnz 0x48b(%rip)
20d9(3): test %r13,%r13
20dc(2): jz 0x31(%rip)
20de(7): lea 0x7b43(%rip),%rdx
20e5(7): lea 0x7b6c(%rip),%rsi
20ec(3): mov %r13,%rcx
20ef(2): xor %edi,%edi
20f1(6): mov $0x5,%r8d
20f7(5): call 0xfffff769(%rip)
20fc(3): mov %r13,%rcx
20ff(3): mov %rax,%rdx
2102(2): xor %esi,%esi
2104(2): xor %edi,%edi
2106(2): xor %eax,%eax
2108(5): call 0xfffff728(%rip)
210d(6): cmp $0x0,0x50(%rsp)
2113(2): jz 0x36(%rip)
2115(5): mov 0x50(%rsp),%r15
211a(7): lea 0x7b67(%rip),%rdx
2121(7): lea 0x7b90(%rip),%rsi
2128(2): xor %edi,%edi
212a(6): mov $0x5,%r8d
2130(3): mov %r15,%rcx
2133(5): call 0xfffff72d(%rip)
2138(3): mov %r15,%rcx
213b(3): mov %rax,%rdx
213e(2): xor %esi,%esi
2140(2): xor %edi,%edi
2142(2): xor %eax,%eax
2144(5): call 0xfffff6ec(%rip)
2149(6): cmp $0x0,0x58(%rsp)
214f(2): jz 0x36(%rip)
2151(5): mov 0x58(%rsp),%r15
2156(7): lea 0x7b8b(%rip),%rdx
215d(7): lea 0x7bb4(%rip),%rsi
2164(2): xor %edi,%edi
2166(6): mov $0x5,%r8d
216c(3): mov %r15,%rcx
216f(5): call 0xfffff6f1(%rip)
2174(3): mov %r15,%rcx
2177(3): mov %rax,%rdx
217a(2): xor %esi,%esi
217c(2): xor %edi,%edi
217e(2): xor %eax,%eax
2180(5): call 0xfffff6b0(%rip)
2185(7): cmp $0x0,0x209f66(%rip)
218c(6): jz 0x3d2(%rip)
2192(5): cmp $0x0,0x7a(%rsp)
2197(6): jz 0x760(%rip)
219d(5): mov 0x50(%rsp),%rax
21a2(5): or 0x58(%rsp),%rax
21a7(2): jnz 0x17(%rip)
21a9(7): movzx 0x209f40(%rip),%eax
21b0(3): xor $0x1,%eax
21b3(3): test %r13,%r13
21b6(3): setz %bl
21b9(2): or %ebx,%eax
21bb(3): movzx %al,%ebx
21be(2): mov %ebx,%eax
21c0(3): and $0x1,%eax
21c3(4): and %al,0x79(%rsp)
21c7(5): jmp 0x1a6(%rip)
21cc(4): nop 0x0(%rax)
21d0(5): mov 0x20(%rsp),%rdx
21d5(2): xor %edi,%edi
21d7(5): mov $0x3,%esi
21dc(5): call 0x5f24(%rip)
21e1(7): lea 0x79d8(%rip),%rsi
21e8(2): xor %edi,%edi
21ea(5): mov $0x5,%edx
21ef(3): mov %rax,%rbx
21f2(5): call 0xfffff46e(%rip)
21f7(7): lea 0x6fb6(%rip),%r9
21fe(3): mov %rax,%rdx
2201(3): mov %rbp,%r8
2204(3): mov %rbx,%rcx
2207(2): xor %esi,%esi
2209(2): xor %edi,%edi
220b(2): xor %eax,%eax
220d(5): call 0xfffff623(%rip)
2212(5): jmp 0xfffffc43(%rip)
2217(9): nop 0x0(%rax,%rax,1)
2220(7): cmp $0x0,0x209ecb(%rip)
2227(2): jz 0x10(%rip)
2229(8): cmp $0x0,0x8f(%rsp)
2231(6): jnz 0xfffffe57(%rip)
2237(7): mov 0x209eba(%rip),%rcx
223e(5): mov %r8,0x68(%rsp)
2243(3): shr $0x1,%rcx
2246(6): jz 0x379(%rip)
224c(5): mov %rcx,0x60(%rsp)
2251(5): mov %r9b,0x30(%rsp)
2256(5): call 0xfffff67a(%rip)
225b(2): xor %edx,%edx
225d(3): mov (%rax),%rdi
2260(6): movzx 0x30(%rsp),%r9d
2266(5): mov 0x60(%rsp),%rcx
226b(5): mov 0x68(%rsp),%r8
2270(5): mov 0x38(%rsp),%r10
2275(2): jmp 0x2b(%rip)
2277(9): nop 0x0(%rax,%rax,1)
2280(6): movzx 0x1(%r8,%rdx,2),%esi
2286(3): and $0xf,%eax
2289(5): movsx 0x0(%r14,%rax,1),%eax
228e(3): cmp %eax,0x0(%rdi,%rsi,4)
2291(2): jnz 0x2d(%rip)
2293(4): add $0x1,%rdx
2297(3): cmp %rdx,%rcx
229a(6): jz 0x3a3(%rip)
22a0(5): movzx 0x0(%r10,%rdx,1),%eax
22a5(5): movzx 0x0(%r8,%rdx,2),%r11d
22aa(2): mov %eax,%esi
22ac(4): shr $0x4,%sil
22b0(3): and $0xf,%esi
22b3(5): movsx 0x0(%r14,%rsi,1),%esi
22b8(4): cmp %esi,0x0(%rdi,%r11,4)
22bc(2): jz 0xffffffc4(%rip)
22be(3): cmp %rdx,%rcx
22c1(6): jz 0x300(%rip)
22c7(6): add $0x1,0x58(%rsp)
22cd(7): cmp $0x0,0x209e20(%rip)
22d4(6): jnz 0xfffffdb4(%rip)
22da(3): test %r15d,%r15d
22dd(6): jz 0x60b(%rip)
22e3(7): mov 0x209dbe(%rip),%rdi
22ea(4): mov 0x28(%rdi),%rax
22ee(4): cmp 0x30(%rdi),%rax
22f2(6): jnb 0x6ad(%rip)
22f8(4): lea 0x1(%rax),%rsi
22fc(4): mov %rsi,0x28(%rdi)
2300(3): mov $0x5c,(%rax)
2303(5): mov $0x1,%esi
2308(3): mov %rbx,%rdi
230b(5): mov %rcx,0x60(%rsp)
2310(5): mov %rdx,0x30(%rsp)
2315(5): call 0x91b(%rip)
231a(5): mov 0x30(%rsp),%rdx
231f(5): mov 0x60(%rsp),%rcx
2324(3): cmp %rcx,%rdx
2327(6): jz 0x2e3(%rip)
232d(5): mov $0x5,%edx
2332(7): lea 0x6fac(%rip),%rsi
2339(5): jmp 0xfffffd32(%rip)
233e(2): nop 
2340(8): lea 0x98(%rsp),%rax
2348(8): lea 0xa0(%rsp),%rbx
2350(5): mov 0x20(%rsp),%rdi
2355(3): mov %rax,%rdx
2358(3): mov %rbx,%rsi
235b(5): call 0x9a5(%rip)
2360(2): test %al,%al
2362(6): jnz 0x105(%rip)
2368(5): mov $0x0,0x79(%rsp)
236d(6): add $0x8,0x18(%rsp)
2373(5): mov 0x18(%rsp),%rax
2378(5): cmp %rax,0x48(%rsp)
237d(6): jnbe 0xfffff933(%rip)
2383(7): cmp $0x0,0x209d7e(%rip)
238a(6): jnz 0x376(%rip)
2390(5): movzx 0x79(%rsp),%eax
2395(3): xor $0x1,%eax
2398(8): mov 0xf8(%rsp),%rdi
23a0(9): xor $0x28,%rdi
23a9(3): movzx %al,%eax
23ac(6): jnz 0x637(%rip)
23b2(7): add $0x108,%rsp
23b9(1): pop %rbx
23ba(1): pop %rbp
23bb(2): pop %r12
23bd(2): pop %r13
23bf(2): pop %r14
23c1(2): pop %r15
23c3(1): ret near (%rsp)
23c4(4): add $0x1,%rcx
23c8(3): sub %rcx,%r15
23cb(6): jz 0xfffffa79(%rip)
23d1(3): mov %r15,%r10
23d4(3): add %rcx,%rbx
23d7(4): sub $0x1,%r10
23db(2): jz 0x26(%rip)
23dd(6): cmp $0x29,0xffffffff(%rbx,%r15,1)
23e3(2): jnz 0x18(%rip)
23e5(5): jmp 0x2a4(%rip)
23ea(6): nop 0x0(%rax,%rax,1)
23f0(5): cmp $0x29,0x0(%rbx,%r10,1)
23f5(6): jz 0x294(%rip)
23fb(4): sub $0x1,%r10
23ff(2): jnz 0xfffffff1(%rip)
2401(3): cmp $0x29,(%rbx)
2404(6): jnz 0xfffffa40(%rip)
240a(3): mov %rbx,%r11
240d(3): xor %r10d,%r10d
2410(5): jmp 0x27d(%rip)
2415(5): mov 0x20(%rsp),%rdi
241a(7): lea 0x6e61(%rip),%rsi
2421(5): call 0x40ff(%rip)
2426(3): test %rax,%rax
2429(3): mov %rax,%r12
242c(6): jnz 0xfffff8e4(%rip)
2432(5): mov 0x20(%rsp),%rdx
2437(5): mov $0x3,%esi
243c(2): xor %edi,%edi
243e(5): call 0x5cc2(%rip)
2443(3): mov %rax,%rbx
2446(5): call 0xfffff18a(%rip)
244b(2): mov (%rax),%esi
244d(7): lea 0x7921(%rip),%rdx
2454(2): xor %eax,%eax
2456(3): mov %rbx,%rcx
2459(2): xor %edi,%edi
245b(5): call 0xfffff3d5(%rip)
2460(2): xor %eax,%eax
2462(5): jmp 0xfffffd61(%rip)
2467(5): mov 0x20(%rsp),%rdi
246c(5): mov $0x5c,%esi
2471(5): call 0xfffff24f(%rip)
2476(3): test %rax,%rax
2479(6): jz 0x3d8(%rip)
247f(7): cmp $0xa,0x209b8a(%rip)
2486(6): jz 0x2e6(%rip)
248c(5): cmp $0x0,0x78(%rsp)
2491(6): jnz 0x3dd(%rip)
2497(7): mov 0x209c5a(%rip),%rax
249e(2): xor %ebp,%ebp
24a0(3): shr $0x1,%rax
24a3(2): jz 0x3f(%rip)
24a5(3): xor %r12d,%r12d
24a8(8): nop 0x0(%rax,%rax,1)
24b0(5): movzx 0x0(%rbx,%r12,1),%edx
24b5(7): lea 0x6e5b(%rip),%rsi
24bc(2): xor %eax,%eax
24be(5): mov $0x1,%edi
24c3(4): add $0x1,%r12
24c7(5): call 0xfffff349(%rip)
24cc(7): mov 0x209c25(%rip),%rax
24d3(3): shr $0x1,%rax
24d6(3): cmp %r12,%rax
24d9(2): jnbe 0xffffffd7(%rip)
24db(5): cmp $0x0,0x78(%rsp)
24e0(2): jnz 0x53(%rip)
24e2(7): mov 0x209bbf(%rip),%rdi
24e9(4): mov 0x28(%rdi),%rax
24ed(4): cmp %rax,0x30(%rdi)
24f1(6): jbe 0x49f(%rip)
24f7(4): lea 0x1(%rax),%rdx
24fb(4): mov %rdx,0x28(%rdi)
24ff(3): mov $0x20,(%rax)
2502(7): mov 0x209b9f(%rip),%rdi
2509(4): mov 0x28(%rdi),%rax
250d(4): cmp 0x30(%rdi),%rax
2511(6): jnb 0x471(%rip)
2517(4): lea 0x1(%rax),%rdx
251b(4): mov %rdx,0x28(%rdi)
251f(5): movzx 0x7b(%rsp),%edi
2524(3): mov %dil,(%rax)
2527(5): mov 0x20(%rsp),%rdi
252c(2): mov %ebp,%esi
252e(5): call 0x702(%rip)
2533(7): mov 0x209b6e(%rip),%rdi
253a(7): movzx 0x209acf(%rip),%edx
2541(4): mov 0x28(%rdi),%rax
2545(4): cmp 0x30(%rdi),%rax
2549(6): jnb 0x40e(%rip)
254f(4): lea 0x1(%rax),%rcx
2553(4): mov %rcx,0x28(%rdi)
2557(2): mov %dl,(%rax)
2559(5): jmp 0xfffffe14(%rip)
255e(5): cmp $0x0,0x7a(%rsp)
2563(6): jnz 0xfffffc3a(%rip)
2569(5): jmp 0xfffffc55(%rip)
256e(5): mov 0x20(%rsp),%rdx
2573(5): mov $0x3,%esi
2578(2): xor %edi,%edi
257a(5): call 0x5b86(%rip)
257f(7): lea 0x6d69(%rip),%rsi
2586(3): mov %rax,%rbx
2589(5): mov $0x5,%edx
258e(2): xor %edi,%edi
2590(5): call 0xfffff0d0(%rip)
2595(3): mov %rbx,%rcx
2598(3): mov %rax,%rdx
259b(2): xor %esi,%esi
259d(2): xor %eax,%eax
259f(2): xor %edi,%edi
25a1(5): call 0xfffff28f(%rip)
25a6(2): xor %eax,%eax
25a8(5): jmp 0xfffffc1b(%rip)
25ad(7): cmp $0x0,0x209b3f(%rip)
25b4(6): jnz 0xfffff689(%rip)
25ba(5): jmp 0xfffff90b(%rip)
25bf(2): xor %edx,%edx
25c1(7): movzx 0x209b2c(%rip),%eax
25c8(2): test %al,%al
25ca(4): mov %al,0x7a(%rsp)
25ce(6): jnz 0xfffffaba(%rip)
25d4(7): movzx 0x209b16(%rip),%eax
25db(2): test %al,%al
25dd(4): mov %al,0x7a(%rsp)
25e1(6): jnz 0xfffffaa7(%rip)
25e7(3): test %r15d,%r15d
25ea(6): jnz 0x427(%rip)
25f0(2): xor %esi,%esi
25f2(3): mov %rbx,%rdi
25f5(5): mov %r9b,0x30(%rsp)
25fa(5): call 0x636(%rip)
25ff(6): movzx 0x30(%rsp),%r9d
2605(5): mov %r9b,0x7a(%rsp)
260a(7): cmp $0x0,0x209ae0(%rip)
2611(6): jnz 0xfffffa77(%rip)
2617(5): mov $0x5,%edx
261c(7): lea 0x6cc9(%rip),%rsi
2623(5): jmp 0xfffffa48(%rip)
2628(3): mov %r12,%rdi
262b(5): call 0x6585(%rip)
2630(2): test %eax,%eax
2632(6): jz 0xfffffa8f(%rip)
2638(5): jmp 0xfffffdfa(%rip)
263d(3): mov %rcx,%rdx
2640(5): jmp 0xffffff81(%rip)
2645(5): mov 0x20(%rsp),%rdx
264a(2): xor %edi,%edi
264c(5): mov $0x3,%esi
2651(5): call 0x5aaf(%rip)
2656(7): lea 0x7593(%rip),%rsi
265d(2): xor %edi,%edi
265f(5): mov $0x5,%edx
2664(3): mov %rax,%rbp
2667(5): call 0xffffeff9(%rip)
266c(7): lea 0x6b41(%rip),%r8
2673(3): mov %rax,%rdx
2676(3): mov %rbp,%rcx
2679(2): xor %esi,%esi
267b(2): xor %edi,%edi
267d(2): xor %eax,%eax
267f(5): call 0xfffff1b1(%rip)
2684(5): jmp 0xfffffb3a(%rip)
2689(4): lea 0x0(%rbx,%r10,1),%r11
268d(3): test %r9b,%r9b
2690(6): jnz 0x2ae(%rip)
2696(4): add $0x1,%r10
269a(4): mov $0x0,(%r11)
269e(2): jmp 0x6(%rip)
26a0(4): add $0x1,%r10
26a4(5): movzx 0x0(%rbx,%r10,1),%eax
26a9(2): cmp $0x20,%al
26ab(2): jz 0xfffffff5(%rip)
26ad(2): cmp $0x9,%al
26af(2): jz 0xfffffff1(%rip)
26b1(2): cmp $0x3d,%al
26b3(6): jnz 0xfffff791(%rip)
26b9(5): lea 0x1(%rbx,%r10,1),%rdx
26be(3): movzx (%rdx),%eax
26c1(3): mov %rdx,%r8
26c4(4): lea 0x1(%rdx),%rdx
26c8(2): cmp $0x20,%al
26ca(2): jz 0xfffffff4(%rip)
26cc(2): cmp $0x9,%al
26ce(2): jz 0xfffffff0(%rip)
26d0(3): mov %r8,%rdi
26d3(5): mov %r8,0x60(%rsp)
26d8(5): call 0x4f8(%rip)
26dd(5): mov 0x60(%rsp),%r8
26e2(2): jmp 0x7d(%rip)
26e4(3): sub $0x1,%esi
26e7(6): jz 0xfffff8b3(%rip)
26ed(a): mov $0x0,0x20991d(%rip)
26f7(4): lea 0x2(%rdx),%rax
26fb(5): jmp 0xfffff89f(%rip)
2700(7): mov 0x2099a9(%rip),%rdi
2707(5): call 0x64a9(%rip)
270c(3): add $0x1,%eax
270f(6): jnz 0xfffffc81(%rip)
2715(7): lea 0x6b8a(%rip),%rsi
271c(5): mov $0x5,%edx
2721(2): xor %edi,%edi
2723(5): call 0xffffef3d(%rip)
2728(3): mov %rax,%rbx
272b(5): call 0xffffeea5(%rip)
2730(2): mov (%rax),%esi
2732(3): mov %rbx,%rdx
2735(5): mov $0x1,%edi
273a(2): xor %eax,%eax
273c(5): call 0xfffff0f4(%rip)
2741(3): mov %r15,%rsi
2744(3): mov %rbx,%rdi
2747(5): mov %r8,0x60(%rsp)
274c(3): sub %rax,%rsi
274f(5): call 0x401(%rip)
2754(5): mov 0x60(%rsp),%r8
2759(3): test %rax,%rax
275c(3): setnz %al
275f(2): test %al,%al
2761(6): jnz 0xfffff845(%rip)
2767(5): jmp 0xfffff6dd(%rip)
276c(5): cmp $0x0,0x78(%rsp)
2771(6): jz 0xa6(%rip)
2777(7): mov 0x20992a(%rip),%rdi
277e(4): mov 0x28(%rdi),%rax
2782(4): cmp 0x30(%rdi),%rax
2786(6): jnb 0x23c(%rip)
278c(4): lea 0x1(%rax),%rdx
2790(4): mov %rdx,0x28(%rdi)
2794(3): mov $0x5c,(%rax)
2797(7): mov 0x20990a(%rip),%rcx
279e(7): lea 0x6a0f(%rip),%rdi
27a5(5): mov $0x6,%edx
27aa(5): mov $0x1,%esi
27af(5): call 0xfffff021(%rip)
27b4(7): mov 0x2098ed(%rip),%rcx
27bb(7): lea 0x6b5a(%rip),%rdi
27c2(5): mov $0x2,%edx
27c7(5): mov $0x1,%esi
27cc(5): call 0xfffff004(%rip)
27d1(5): mov 0x20(%rsp),%rdi
27d6(5): mov $0x1,%esi
27db(5): call 0x455(%rip)
27e0(7): mov 0x2098c1(%rip),%rcx
27e7(7): lea 0x6b31(%rip),%rdi
27ee(5): mov $0x4,%edx
27f3(5): mov $0x1,%esi
27f8(5): call 0xffffefd8(%rip)
27fd(7): mov 0x2098f4(%rip),%rax
2804(5): mov $0x1,%ebp
2809(3): shr $0x1,%rax
280c(6): jnz 0xfffffc99(%rip)
2812(5): jmp 0xfffffcc9(%rip)
2817(7): mov 0x20988a(%rip),%rdi
281e(4): mov 0x28(%rdi),%rax
2822(4): cmp 0x30(%rdi),%rax
2826(6): jnb 0x14d(%rip)
282c(4): lea 0x1(%rax),%rdx
2830(5): mov $0x1,%ebp
2835(4): mov %rdx,0x28(%rdi)
2839(3): mov $0x5c,(%rax)
283c(7): mov 0x2098b5(%rip),%rax
2843(3): shr $0x1,%rax
2846(6): jnz 0xfffffc5f(%rip)
284c(5): jmp 0xfffffc96(%rip)
2851(5): mov 0x20(%rsp),%rdi
2856(5): mov $0xa,%esi
285b(5): call 0xffffee65(%rip)
2860(3): test %rax,%rax
2863(6): jnz 0xfffffc1c(%rip)
2869(5): jmp 0xfffffc23(%rip)
286e(7): mov 0x209833(%rip),%rcx
2875(7): lea 0x6938(%rip),%rdi
287c(5): mov $0x6,%edx
2881(5): mov $0x1,%esi
2886(2): xor %ebp,%ebp
2888(5): call 0xffffef48(%rip)
288d(7): mov 0x209814(%rip),%rcx
2894(7): lea 0x6a81(%rip),%rdi
289b(5): mov $0x2,%edx
28a0(5): mov $0x1,%esi
28a5(5): call 0xffffef2b(%rip)
28aa(5): mov 0x20(%rsp),%rdi
28af(2): xor %esi,%esi
28b1(5): call 0x37f(%rip)
28b6(7): mov 0x2097eb(%rip),%rcx
28bd(7): lea 0x6a5b(%rip),%rdi
28c4(5): mov $0x4,%edx
28c9(5): mov $0x1,%esi
28ce(5): call 0xffffef02(%rip)
28d3(7): mov 0x20981e(%rip),%rax
28da(3): shr $0x1,%rax
28dd(6): jnz 0xfffffbc8(%rip)
28e3(5): jmp 0xfffffc50(%rip)
28e8(2): xor %esi,%esi
28ea(3): mov %rbx,%rdi
28ed(5): call 0x343(%rip)
28f2(5): jmp 0xfffffa3b(%rip)
28f7(5): mov 0x20(%rsp),%rdx
28fc(2): xor %edi,%edi
28fe(5): mov $0x3,%esi
2903(5): call 0x57fd(%rip)
2908(7): lea 0x69ef(%rip),%rsi
290f(3): mov %rax,%rbp
2912(2): xor %edi,%edi
2914(5): mov $0x5,%edx
2919(5): call 0xffffed47(%rip)
291e(3): mov %rbp,%rcx
2921(3): mov %rax,%rdx
2924(2): xor %esi,%esi
2926(2): xor %edi,%edi
2928(2): xor %eax,%eax
292a(5): call 0xffffef06(%rip)
292f(5): jmp 0xfffff88f(%rip)
2934(5): mov $0x1,0x79(%rsp)
2939(5): jmp 0xfffffa4a(%rip)
293e(3): mov %r10,%rsi
2941(3): mov %rbx,%rdi
2944(5): call 0x20c(%rip)
2949(3): test %rax,%rax
294c(6): jnz 0xfffffd4a(%rip)
2952(5): jmp 0xfffff4f2(%rip)
2957(3): movzx %dl,%esi
295a(5): call 0xffffed76(%rip)
295f(5): jmp 0xfffffa0e(%rip)
2964(5): mov $0x5c,%esi
2969(5): call 0xffffed67(%rip)
296e(5): jmp 0xfffff6e6(%rip)
2973(5): mov $0x5c,%esi
2978(5): call 0xffffed58(%rip)
297d(5): jmp 0xfffffe80(%rip)
2982(4): mov 0x7c(%rsp),%esi
2986(5): call 0xffffed4a(%rip)
298b(5): jmp 0xfffffb9c(%rip)
2990(5): mov $0x20,%esi
2995(5): call 0xffffed3b(%rip)
299a(5): jmp 0xfffffb68(%rip)
299f(5): mov $0x5c,%esi
29a4(5): mov %rcx,0x60(%rsp)
29a9(5): mov %rdx,0x30(%rsp)
29ae(5): call 0xffffed22(%rip)
29b3(5): mov 0x30(%rsp),%rdx
29b8(5): mov 0x60(%rsp),%rcx
29bd(5): jmp 0xfffff946(%rip)
29c2(5): mov $0x5c,%esi
29c7(5): call 0xffffed09(%rip)
29cc(5): jmp 0xfffffdcb(%rip)
29d1(5): cmp $0xffffff7e,%eax
29d6(6): jnz 0xfffff1fa(%rip)
29dc(2): xor %edi,%edi
29de(5): call 0x4c2(%rip)
29e3(5): call 0xffffecad(%rip)
29e8(7): cmp $0x0,0x209705(%rip)
29ef(6): jz 0xfffff1a8(%rip)
29f5(5): cmp $0x0,0x2b(%rsp)
29fa(6): jnz 0xfffffbb3(%rip)
2a00(5): mov $0x5,%edx
2a05(7): lea 0x70b4(%rip),%rsi
2a0c(5): jmp 0xfffff1af(%rip)
2a11(5): mov %r9b,0x7a(%rsp)
2a16(5): jmp 0xfffff8cd(%rip)
2a1b(5): mov $0x5,%edx
2a20(7): lea 0x6f59(%rip),%rsi
2a27(5): jmp 0xfffff194(%rip)
2a2c(5): mov $0x5,%edx
2a31(7): lea 0x7040(%rip),%rsi
2a38(5): jmp 0xfffff183(%rip)

"_start" :
2a40(2): xor %ebp,%ebp
2a42(3): mov %rdx,%r9
2a45(1): pop %rsi
2a46(3): mov %rsp,%rdx
2a49(4): and $0xfffffff0,%rsp
2a4d(1): push %rax
2a4e(1): push %rsp
2a4f(7): lea 0x671a(%rip),%r8
2a56(7): lea 0x66a3(%rip),%rcx
2a5d(7): lea 0xffffee9c(%rip),%rdi
2a64(6): call 0x20955e(%rip)
2a6a(1): hlt 

"deregister_tm_clones" :
2a70(7): lea 0x209629(%rip),%rdi
2a77(1): push %rbp
2a78(7): lea 0x209621(%rip),%rax
2a7f(3): cmp %rdi,%rax
2a82(3): mov %rsp,%rbp
2a85(2): jz 0x1b(%rip)
2a87(7): mov 0x209532(%rip),%rax
2a8e(3): test %rax,%rax
2a91(2): jz 0xf(%rip)
2a93(1): pop %rbp
2a94(2): jmp %rax
2a96(a): nop 0x0(%rax,%rax,1)
2aa0(1): pop %rbp
2aa1(1): ret near (%rsp)

"register_tm_clones" :
2ab0(7): lea 0x2095e9(%rip),%rdi
2ab7(7): lea 0x2095e2(%rip),%rsi
2abe(1): push %rbp
2abf(3): sub %rdi,%rsi
2ac2(3): mov %rsp,%rbp
2ac5(4): sar $0x3,%rsi
2ac9(3): mov %rsi,%rax
2acc(4): shr $0x3f,%rax
2ad0(3): add %rax,%rsi
2ad3(3): sar $0x1,%rsi
2ad6(2): jz 0x1a(%rip)
2ad8(7): mov 0x2094f9(%rip),%rax
2adf(3): test %rax,%rax
2ae2(2): jz 0xe(%rip)
2ae4(1): pop %rbp
2ae5(2): jmp %rax
2ae7(9): nop 0x0(%rax,%rax,1)
2af0(1): pop %rbp
2af1(1): ret near (%rsp)

"__do_global_dtors_aux" :
2b00(7): cmp $0x0,0x2095e1(%rip)
2b07(2): jnz 0x31(%rip)
2b09(8): cmp $0x0,0x2094cf(%rip)
2b11(1): push %rbp
2b12(3): mov %rsp,%rbp
2b15(2): jz 0xe(%rip)
2b17(7): mov 0x2094ea(%rip),%rdi
2b1e(5): call 0xffffedd2(%rip)
2b23(5): call 0xffffff4d(%rip)
2b28(7): mov $0x1,0x2095b9(%rip)
2b2f(1): pop %rbp
2b30(1): ret near (%rsp)
2b31(7): nop 0x0(%rax)
2b38(2): REP ret near (%rsp)

"frame_dummy" :
2b40(1): push %rbp
2b41(3): mov %rsp,%rbp
2b44(1): pop %rbp
2b45(5): jmp 0xffffff6b(%rip)

"filename_unescape" :
2b50(2): xor %edx,%edx
2b52(3): test %rsi,%rsi
2b55(4): lea 0x1(%rdi),%rcx
2b59(4): lea 0xffffffff(%rsi),%r8
2b5d(2): jz 0x5a(%rip)
2b5f(4): movzx 0x0(%rdi,%rdx,1),%eax
2b63(2): test %al,%al
2b65(2): jz 0x2b(%rip)
2b67(2): cmp $0x5c,%al
2b69(2): jnz 0x2f(%rip)
2b6b(3): cmp %rdx,%r8
2b6e(2): jz 0x22(%rip)
2b70(4): add $0x1,%rdx
2b74(4): movzx 0x0(%rdi,%rdx,1),%eax
2b78(2): cmp $0x5c,%al
2b7a(2): jz 0x46(%rip)
2b7c(2): cmp $0x6e,%al
2b7e(2): jnz 0x12(%rip)
2b80(3): mov %rcx,%r9
2b83(4): mov $0xa,0xffffffff(%rcx)
2b87(2): jmp 0x17(%rip)
2b89(7): nop 0x0(%rax)
2b90(2): xor %eax,%eax
2b92(1): ret near (%rsp)
2b93(5): nop 0x0(%rax,%rax,1)
2b98(3): mov %rcx,%r9
2b9b(3): mov %al,0xffffffff(%rcx)
2b9e(4): add $0x1,%rdx
2ba2(4): add $0x1,%rcx
2ba6(3): cmp %rdx,%rsi
2ba9(2): jnbe 0xffffffb6(%rip)
2bab(3): add %rdi,%rsi
2bae(3): cmp %rsi,%r9
2bb1(2): jnb 0x6(%rip)
2bb3(4): mov $0x0,(%r9)
2bb7(3): mov %rdi,%rax
2bba(1): ret near (%rsp)
2bbb(5): nop 0x0(%rax,%rax,1)
2bc0(3): mov %rcx,%r9
2bc3(4): mov $0x5c,0xffffffff(%rcx)
2bc7(2): jmp 0xffffffd7(%rip)

"hex_digits" :
2bd0(1): push %rbp
2bd1(1): push %rbx
2bd2(4): sub $0x8,%rsp
2bd6(7): mov 0x20951b(%rip),%rbp
2bdd(3): test %rbp,%rbp
2be0(2): jz 0x40(%rip)
2be2(3): mov %rdi,%rbx
2be5(5): call 0xffffecfb(%rip)
2bea(3): mov (%rax),%rcx
2bed(3): mov %rbx,%rax
2bf0(2): jmp 0x15(%rip)
2bf2(6): nop 0x0(%rax,%rax,1)
2bf8(4): add $0x1,%rax
2bfc(2): mov %eax,%edx
2bfe(2): sub %ebx,%edx
2c00(3): cmp %rbp,%rdx
2c03(2): jnb 0x20(%rip)
2c05(3): movzx (%rax),%edx
2c08(5): test $0x10,0x1(%rcx,%rdx,2)
2c0d(2): jnz 0xffffffeb(%rip)
2c0f(4): add $0x8,%rsp
2c13(2): xor %eax,%eax
2c15(1): pop %rbx
2c16(1): pop %rbp
2c17(1): ret near (%rsp)
2c18(8): nop 0x0(%rax,%rax,1)
2c20(3): mov %rdi,%rax
2c23(3): cmp $0x0,(%rax)
2c26(3): setz %al
2c29(4): add $0x8,%rsp
2c2d(1): pop %rbx
2c2e(1): pop %rbp
2c2f(1): ret near (%rsp)

"print_filename" :
2c30(1): push %rbp
2c31(1): push %rbx
2c32(3): mov %rdi,%rbx
2c35(4): sub $0x8,%rsp
2c39(3): test %sil,%sil
2c3c(6): jz 0x94(%rip)
2c42(3): movzx (%rdi),%esi
2c45(7): lea 0x6558(%rip),%rbp
2c4c(3): test %sil,%sil
2c4f(2): jnz 0x2b(%rip)
2c51(2): jmp 0x5d(%rip)
2c53(5): nop 0x0(%rax,%rax,1)
2c58(7): lea 0x6548(%rip),%rdi
2c5f(5): mov $0x2,%edx
2c64(5): mov $0x1,%esi
2c69(5): call 0xffffeb67(%rip)
2c6e(4): add $0x1,%rbx
2c72(3): movzx (%rbx),%esi
2c75(3): test %sil,%sil
2c78(2): jz 0x36(%rip)
2c7a(4): cmp $0xa,%sil
2c7e(7): mov 0x209423(%rip),%rcx
2c85(2): jz 0x33(%rip)
2c87(4): cmp $0x5c,%sil
2c8b(2): jz 0xffffffcd(%rip)
2c8d(4): mov 0x28(%rcx),%rax
2c91(4): cmp 0x30(%rcx),%rax
2c95(2): jnb 0x53(%rip)
2c97(4): lea 0x1(%rax),%rdx
2c9b(4): add $0x1,%rbx
2c9f(4): mov %rdx,0x28(%rcx)
2ca3(3): mov %sil,(%rax)
2ca6(3): movzx (%rbx),%esi
2ca9(3): test %sil,%sil
2cac(2): jnz 0xffffffce(%rip)
2cae(4): add $0x8,%rsp
2cb2(1): pop %rbx
2cb3(1): pop %rbp
2cb4(1): ret near (%rsp)
2cb5(3): nop (%rax)
2cb8(5): mov $0x2,%edx
2cbd(5): mov $0x1,%esi
2cc2(3): mov %rbp,%rdi
2cc5(5): call 0xffffeb0b(%rip)
2cca(2): jmp 0xffffffa4(%rip)
2ccc(4): nop 0x0(%rax)
2cd0(7): mov 0x2093d1(%rip),%rsi
2cd7(4): add $0x8,%rsp
2cdb(1): pop %rbx
2cdc(1): pop %rbp
2cdd(5): jmp 0xffffea63(%rip)
2ce2(6): nop 0x0(%rax,%rax,1)
2ce8(3): mov %rcx,%rdi
2ceb(5): call 0xffffe9e5(%rip)
2cf0(5): jmp 0xffffff7e(%rip)

"digest_file.isra.1" :
2d00(2): push %r13
2d02(2): push %r12
2d04(5): mov $0x2,%ecx
2d09(1): push %rbp
2d0a(1): push %rbx
2d0b(3): mov %rdi,%rbp
2d0e(7): lea 0x70ed(%rip),%rdi
2d15(3): mov %rsi,%r12
2d18(3): mov %rbp,%rsi
2d1b(4): sub $0x8,%rsp
2d1f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2d21(3): mov $0x0,(%rdx)
2d24(3): setnbe %al
2d27(2): sbb $0x0,%al
2d29(2): test %al,%al
2d2b(6): jnz 0x95(%rip)
2d31(7): mov 0x209378(%rip),%rbx
2d38(5): mov $0x2,%esi
2d3d(7): mov $0x1,0x2093c4(%rip)
2d44(3): mov %rbx,%rdi
2d47(5): call 0x37a9(%rip)
2d4c(3): mov %r12,%rsi
2d4f(3): mov %rbx,%rdi
2d52(5): call 0x374e(%rip)
2d57(2): test %eax,%eax
2d59(2): jnz 0x17(%rip)
2d5b(6): mov $0x1,%r12d
2d61(4): add $0x8,%rsp
2d65(3): mov %r12d,%eax
2d68(1): pop %rbx
2d69(1): pop %rbp
2d6a(2): pop %r12
2d6c(2): pop %r13
2d6e(1): ret near (%rsp)
2d6f(1): nop 
2d70(3): mov %rbp,%rdx
2d73(2): xor %edi,%edi
2d75(5): mov $0x3,%esi
2d7a(5): call 0x5386(%rip)
2d7f(3): mov %rax,%rbp
2d82(3): xor %r12d,%r12d
2d85(5): call 0xffffe84b(%rip)
2d8a(2): mov (%rax),%esi
2d8c(7): lea 0x6fe2(%rip),%rdx
2d93(2): xor %edi,%edi
2d95(2): xor %eax,%eax
2d97(3): mov %rbp,%rcx
2d9a(5): call 0xffffea96(%rip)
2d9f(7): cmp %rbx,0x20930a(%rip)
2da6(2): jz 0xffffffbb(%rip)
2da8(3): mov %rbx,%rdi
2dab(5): call 0x5e05(%rip)
2db0(4): add $0x8,%rsp
2db4(3): mov %r12d,%eax
2db7(1): pop %rbx
2db8(1): pop %rbp
2db9(2): pop %r12
2dbb(2): pop %r13
2dbd(1): ret near (%rsp)
2dbe(2): nop 
2dc0(7): lea 0x64bb(%rip),%rsi
2dc7(3): mov %rbp,%rdi
2dca(3): mov %rdx,%r13
2dcd(5): call 0x3753(%rip)
2dd2(3): test %rax,%rax
2dd5(3): mov %rax,%rbx
2dd8(2): jz 0x68(%rip)
2dda(3): mov %rax,%rdi
2ddd(5): mov $0x2,%esi
2de2(5): call 0x370e(%rip)
2de7(3): mov %r12,%rsi
2dea(3): mov %rbx,%rdi
2ded(5): call 0x36b3(%rip)
2df2(2): test %eax,%eax
2df4(6): jnz 0xffffff7c(%rip)
2dfa(3): mov %rbx,%rdi
2dfd(5): call 0x5db3(%rip)
2e02(2): test %eax,%eax
2e04(6): jz 0xffffff57(%rip)
2e0a(3): mov %rbp,%rdx
2e0d(5): mov $0x3,%esi
2e12(2): xor %edi,%edi
2e14(5): call 0x52ec(%rip)
2e19(3): mov %rax,%rbx
2e1c(3): xor %r12d,%r12d
2e1f(5): call 0xffffe7b1(%rip)
2e24(2): mov (%rax),%esi
2e26(7): lea 0x6f48(%rip),%rdx
2e2d(3): mov %rbx,%rcx
2e30(2): xor %edi,%edi
2e32(2): xor %eax,%eax
2e34(5): call 0xffffe9fc(%rip)
2e39(5): jmp 0xffffff28(%rip)
2e3e(2): nop 
2e40(8): movzx 0x2092aa(%rip),%r12d
2e48(5): call 0xffffe788(%rip)
2e4d(3): mov %rax,%rbx
2e50(3): test %r12b,%r12b
2e53(2): jz 0x7(%rip)
2e55(3): cmp $0x2,(%rax)
2e58(2): jz 0x38(%rip)
2e5a(3): mov %rbp,%rdx
2e5d(5): mov $0x3,%esi
2e62(2): xor %edi,%edi
2e64(5): call 0x529c(%rip)
2e69(2): mov (%rbx),%esi
2e6b(7): lea 0x6f03(%rip),%rdx
2e72(3): mov %rax,%rcx
2e75(2): xor %edi,%edi
2e77(2): xor %eax,%eax
2e79(3): xor %r12d,%r12d
2e7c(5): call 0xffffe9b4(%rip)
2e81(5): jmp 0xfffffee0(%rip)
2e86(a): nop 0x0(%rax,%rax,1)
2e90(5): mov $0x1,0x0(%r13)
2e95(5): jmp 0xfffffecc(%rip)

"usage" :
2ea0(2): push %r13
2ea2(2): push %r12
2ea4(5): mov $0x5,%edx
2ea9(1): push %rbp
2eaa(1): push %rbx
2eab(2): mov %edi,%ebp
2ead(7): sub $0x88,%rsp
2eb4(7): mov 0x209265(%rip),%rbx
2ebb(9): mov $0x28,%rax
2ec4(5): mov %rax,0x78(%rsp)
2ec9(2): xor %eax,%eax
2ecb(2): test %edi,%edi
2ecd(2): jz 0x30(%rip)
2ecf(7): lea 0x64a2(%rip),%rsi
2ed6(2): xor %edi,%edi
2ed8(5): call 0xffffe788(%rip)
2edd(7): mov 0x2091fc(%rip),%rdi
2ee4(3): mov %rax,%rdx
2ee7(3): mov %rbx,%rcx
2eea(5): mov $0x1,%esi
2eef(2): xor %eax,%eax
2ef1(5): call 0xffffe9af(%rip)
2ef6(2): mov %ebp,%edi
2ef8(5): call 0xffffe988(%rip)
2efd(7): lea 0x649c(%rip),%rsi
2f04(2): xor %edi,%edi
2f06(5): call 0xffffe75a(%rip)
2f0b(7): lea 0x62a2(%rip),%rcx
2f12(6): mov $0x100,%r8d
2f18(3): mov %rbx,%rdx
2f1b(3): mov %rax,%rsi
2f1e(5): mov $0x1,%edi
2f23(2): xor %eax,%eax
2f25(5): call 0xffffe8eb(%rip)
2f2a(7): mov 0x209177(%rip),%rbx
2f31(7): lea 0x64b0(%rip),%rsi
2f38(5): mov $0x5,%edx
2f3d(2): xor %edi,%edi
2f3f(5): call 0xffffe721(%rip)
2f44(3): mov %rbx,%rsi
2f47(3): mov %rax,%rdi
2f4a(5): call 0xffffe7f6(%rip)
2f4f(7): mov 0x209152(%rip),%rbx
2f56(7): lea 0x64c3(%rip),%rsi
2f5d(5): mov $0x5,%edx
2f62(2): xor %edi,%edi
2f64(5): call 0xffffe6fc(%rip)
2f69(3): mov %rbx,%rsi
2f6c(3): mov %rax,%rdi
2f6f(5): call 0xffffe7d1(%rip)
2f74(7): lea 0x64d5(%rip),%rsi
2f7b(2): xor %edi,%edi
2f7d(5): mov $0x5,%edx
2f82(5): call 0xffffe6de(%rip)
2f87(7): lea 0x6226(%rip),%rdx
2f8e(3): mov %rax,%rsi
2f91(5): mov $0x1,%edi
2f96(2): xor %eax,%eax
2f98(5): call 0xffffe878(%rip)
2f9d(7): mov 0x209104(%rip),%rbx
2fa4(7): lea 0x64ed(%rip),%rsi
2fab(5): mov $0x5,%edx
2fb0(2): xor %edi,%edi
2fb2(5): call 0xffffe6ae(%rip)
2fb7(3): mov %rbx,%rsi
2fba(3): mov %rax,%rdi
2fbd(5): call 0xffffe783(%rip)
2fc2(7): mov 0x2090df(%rip),%rbx
2fc9(7): lea 0x6500(%rip),%rsi
2fd0(5): mov $0x5,%edx
2fd5(2): xor %edi,%edi
2fd7(5): call 0xffffe689(%rip)
2fdc(3): mov %rbx,%rsi
2fdf(3): mov %rax,%rdi
2fe2(5): call 0xffffe75e(%rip)
2fe7(7): mov 0x2090ba(%rip),%rbx
2fee(7): lea 0x6513(%rip),%rsi
2ff5(5): mov $0x5,%edx
2ffa(2): xor %edi,%edi
2ffc(5): call 0xffffe664(%rip)
3001(3): mov %rbx,%rsi
3004(3): mov %rax,%rdi
3007(5): call 0xffffe739(%rip)
300c(7): mov 0x209095(%rip),%rbx
3013(7): lea 0x656e(%rip),%rsi
301a(5): mov $0x5,%edx
301f(2): xor %edi,%edi
3021(5): call 0xffffe63f(%rip)
3026(3): mov %rbx,%rsi
3029(3): mov %rax,%rdi
302c(5): call 0xffffe714(%rip)
3031(7): mov 0x209070(%rip),%rbx
3038(7): lea 0x6701(%rip),%rsi
303f(5): mov $0x5,%edx
3044(2): xor %edi,%edi
3046(5): call 0xffffe61a(%rip)
304b(3): mov %rbx,%rsi
304e(3): mov %rax,%rdi
3051(5): call 0xffffe6ef(%rip)
3056(7): mov 0x20904b(%rip),%rbx
305d(7): lea 0x670c(%rip),%rsi
3064(5): mov $0x5,%edx
3069(2): xor %edi,%edi
306b(5): call 0xffffe5f5(%rip)
3070(3): mov %rbx,%rsi
3073(3): mov %rax,%rdi
3076(7): lea 0x612d(%rip),%rbx
307d(5): call 0xffffe6c3(%rip)
3082(7): lea 0x671f(%rip),%rsi
3089(2): xor %edi,%edi
308b(5): mov $0x5,%edx
3090(5): call 0xffffe5d0(%rip)
3095(7): lea 0x611f(%rip),%rdx
309c(3): mov %rax,%rsi
309f(5): mov $0x1,%edi
30a4(2): xor %eax,%eax
30a6(5): call 0xffffe76a(%rip)
30ab(7): lea 0x6114(%rip),%rax
30b2(7): lea 0x614e(%rip),%rcx
30b9(5): mov %rbx,0x30(%rsp)
30be(9): mov $0x0,0x60(%rsp)
30c7(9): mov $0x0,0x68(%rsp)
30d0(3): mov %rsp,%rdx
30d3(4): mov %rax,(%rsp)
30d7(7): lea 0x60ea(%rip),%rax
30de(5): mov %rcx,0x40(%rsp)
30e3(7): lea 0x6127(%rip),%rcx
30ea(5): mov %rax,0x8(%rsp)
30ef(7): lea 0x6140(%rip),%rax
30f6(5): mov %rcx,0x50(%rsp)
30fb(5): mov %rax,0x10(%rsp)
3100(7): lea 0x60d1(%rip),%rax
3107(5): mov %rax,0x18(%rsp)
310c(7): lea 0x60db(%rip),%rax
3113(5): mov %rax,0x20(%rsp)
3118(7): lea 0x60d9(%rip),%rax
311f(5): mov %rax,0x28(%rsp)
3124(5): mov %rax,0x38(%rsp)
3129(5): mov %rax,0x48(%rsp)
312e(5): mov %rax,0x58(%rsp)
3133(5): nop 0x0(%rax,%rax,1)
3138(4): add $0x10,%rdx
313c(3): mov (%rdx),%rdi
313f(3): test %rdi,%rdi
3142(2): jz 0x15(%rip)
3144(5): mov $0xa,%ecx
3149(3): mov %rbx,%rsi
314c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
314e(3): setnbe %al
3151(2): sbb $0x0,%al
3153(2): test %al,%al
3155(2): jnz 0xffffffe3(%rip)
3157(4): mov 0x8(%rdx),%r12
315b(2): xor %edi,%edi
315d(5): mov $0x5,%edx
3162(7): lea 0x60b2(%rip),%rsi
3169(3): test %r12,%r12
316c(6): jz 0xc7(%rip)
3172(5): call 0xffffe4ee(%rip)
3177(7): lea 0x675a(%rip),%rcx
317e(7): lea 0x60ad(%rip),%rdx
3185(3): mov %rax,%rsi
3188(5): mov $0x1,%edi
318d(2): xor %eax,%eax
318f(5): call 0xffffe681(%rip)
3194(2): xor %esi,%esi
3196(5): mov $0x5,%edi
319b(5): call 0xffffe665(%rip)
31a0(3): test %rax,%rax
31a3(2): jz 0x1e(%rip)
31a5(7): lea 0x6094(%rip),%rsi
31ac(5): mov $0x3,%edx
31b1(3): mov %rax,%rdi
31b4(5): call 0xffffe42c(%rip)
31b9(2): test %eax,%eax
31bb(6): jnz 0x10d(%rip)
31c1(7): lea 0x607c(%rip),%rsi
31c8(2): xor %edi,%edi
31ca(5): mov $0x5,%edx
31cf(5): call 0xffffe491(%rip)
31d4(7): lea 0x5fcf(%rip),%rcx
31db(7): lea 0x66f6(%rip),%rdx
31e2(3): mov %rax,%rsi
31e5(5): mov $0x1,%edi
31ea(2): xor %eax,%eax
31ec(5): call 0xffffe624(%rip)
31f1(3): cmp %rbx,%r12
31f4(7): lea 0x5fe7(%rip),%rcx
31fb(7): lea 0x713f(%rip),%rbx
3202(4): cmove %rcx,%rbx
3206(7): lea 0x673b(%rip),%rsi
320d(2): xor %edi,%edi
320f(5): mov $0x5,%edx
3214(5): call 0xffffe44c(%rip)
3219(3): mov %rbx,%rcx
321c(3): mov %rax,%rsi
321f(3): mov %r12,%rdx
3222(5): mov $0x1,%edi
3227(2): xor %eax,%eax
3229(5): call 0xffffe5e7(%rip)
322e(5): jmp 0xfffffcc8(%rip)
3233(5): call 0xffffe42d(%rip)
3238(7): lea 0x6699(%rip),%rcx
323f(7): lea 0x5fec(%rip),%rdx
3246(3): mov %rax,%rsi
3249(5): mov $0x1,%edi
324e(2): xor %eax,%eax
3250(5): call 0xffffe5c0(%rip)
3255(2): xor %esi,%esi
3257(5): mov $0x5,%edi
325c(5): call 0xffffe5a4(%rip)
3261(3): test %rax,%rax
3264(2): jz 0x1a(%rip)
3266(7): lea 0x5fd3(%rip),%rsi
326d(5): mov $0x3,%edx
3272(3): mov %rax,%rdi
3275(5): call 0xffffe36b(%rip)
327a(2): test %eax,%eax
327c(2): jnz 0x45(%rip)
327e(7): lea 0x5fbf(%rip),%rsi
3285(5): mov $0x5,%edx
328a(2): xor %edi,%edi
328c(7): lea 0x5f17(%rip),%r12
3293(7): lea 0x5f48(%rip),%rbx
329a(5): call 0xffffe3c6(%rip)
329f(7): lea 0x5f04(%rip),%rcx
32a6(7): lea 0x662b(%rip),%rdx
32ad(3): mov %rax,%rsi
32b0(5): mov $0x1,%edi
32b5(2): xor %eax,%eax
32b7(5): call 0xffffe559(%rip)
32bc(5): jmp 0xffffff4a(%rip)
32c1(7): lea 0x5ee2(%rip),%r12
32c8(7): mov 0x208dd9(%rip),%r13
32cf(7): lea 0x662a(%rip),%rsi
32d6(2): xor %edi,%edi
32d8(5): mov $0x5,%edx
32dd(5): call 0xffffe383(%rip)
32e2(3): mov %r13,%rsi
32e5(3): mov %rax,%rdi
32e8(5): call 0xffffe458(%rip)
32ed(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
3300(7): mov %rdi,0x208e11(%rip)
3307(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
3310(7): mov %dil,0x208df9(%rip)
3317(1): ret near (%rsp)

"close_stdout" :
3320(1): push %rbp
3321(1): push %rbx
3322(4): sub $0x8,%rsp
3326(7): mov 0x208d7b(%rip),%rdi
332d(5): call 0x5cb3(%rip)
3332(2): test %eax,%eax
3334(2): jz 0x18(%rip)
3336(5): call 0xffffe29a(%rip)
333b(7): cmp $0x0,0x208dce(%rip)
3342(3): mov %rax,%rbx
3345(2): jz 0x1e(%rip)
3347(3): cmp $0x20,(%rax)
334a(2): jnz 0x19(%rip)
334c(7): mov 0x208d8d(%rip),%rdi
3353(5): call 0x5c8d(%rip)
3358(2): test %eax,%eax
335a(2): jnz 0x48(%rip)
335c(4): add $0x8,%rsp
3360(1): pop %rbx
3361(1): pop %rbp
3362(1): ret near (%rsp)
3363(7): lea 0x69fb(%rip),%rsi
336a(2): xor %edi,%edi
336c(5): mov $0x5,%edx
3371(5): call 0xffffe2ef(%rip)
3376(7): mov 0x208d9b(%rip),%rdi
337d(3): mov %rax,%rbp
3380(3): test %rdi,%rdi
3383(2): jz 0x2a(%rip)
3385(5): call 0x4d4b(%rip)
338a(2): mov (%rbx),%esi
338c(7): lea 0x69de(%rip),%rdx
3393(3): mov %rax,%rcx
3396(3): mov %rbp,%r8
3399(2): xor %edi,%edi
339b(2): xor %eax,%eax
339d(5): call 0xffffe493(%rip)
33a2(6): mov 0x208c78(%rip),%edi
33a8(5): call 0xffffe248(%rip)
33ad(2): mov (%rbx),%esi
33af(7): lea 0x69bf(%rip),%rdx
33b6(3): mov %rax,%rcx
33b9(2): xor %edi,%edi
33bb(2): xor %eax,%eax
33bd(5): call 0xffffe473(%rip)
33c2(2): jmp 0xffffffe0(%rip)

"sha256_init_ctx" :
33d0(a): mov $0x-4942790177982912921,%rax
33da(8): mov $0x0,0x20(%rdi)
33e2(8): mov $0x0,0x28(%rdi)
33ea(3): mov %rax,(%rdi)
33ed(a): mov $0x-6534734903820487822,%rax
33f7(4): mov %rax,0x8(%rdi)
33fb(a): mov $0x-7276294671082564993,%rax
3405(4): mov %rax,0x10(%rdi)
3409(a): mov $0x6620516960021240235,%rax
3413(4): mov %rax,0x18(%rdi)
3417(1): ret near (%rsp)

"sha224_init_ctx" :
3420(a): mov $0x3926247204440088280,%rax
342a(8): mov $0x0,0x20(%rdi)
3432(8): mov $0x0,0x28(%rdi)
343a(3): mov %rax,(%rdi)
343d(a): mov $0x-644479594506691305,%rax
3447(4): mov %rax,0x8(%rdi)
344b(a): mov $0x7518782744944446257,%rax
3455(4): mov %rax,0x10(%rdi)
3459(a): mov $0x-4685344894838272089,%rax
3463(4): mov %rax,0x18(%rdi)
3467(1): ret near (%rsp)

"sha256_read_ctx" :
3470(3): mov %rsi,%rax
3473(2): xor %edx,%edx
3475(3): nop (%rax)
3478(3): mov 0x0(%rdi,%rdx,1),%ecx
347b(2): bswap %ecx
347d(3): mov %ecx,0x0(%rax,%rdx,1)
3480(4): add $0x4,%rdx
3484(4): cmp $0x20,%rdx
3488(2): jnz 0xfffffff0(%rip)
348a(2): REP ret near (%rsp)

"sha224_read_ctx" :
3490(3): mov %rsi,%rax
3493(2): xor %edx,%edx
3495(3): nop (%rax)
3498(3): mov 0x0(%rdi,%rdx,1),%ecx
349b(2): bswap %ecx
349d(3): mov %ecx,0x0(%rax,%rdx,1)
34a0(4): add $0x4,%rdx
34a4(4): cmp $0x1c,%rdx
34a8(2): jnz 0xfffffff0(%rip)
34aa(2): REP ret near (%rsp)

"sha256_process_block" :
34b0(2): push %r15
34b2(2): push %r14
34b4(3): mov %rdi,%r15
34b7(2): push %r13
34b9(2): push %r12
34bb(1): push %rbp
34bc(1): push %rbx
34bd(3): mov %rdx,%rbx
34c0(7): sub $0xe8,%rsp
34c7(4): mov 0x4(%rbx),%r12d
34cb(4): mov 0x8(%rbx),%r13d
34cf(9): mov $0x28,%rax
34d8(8): mov %rax,0xd8(%rsp)
34e0(2): xor %eax,%eax
34e2(3): mov %rsi,%rax
34e5(5): mov %rdi,0x40(%rsp)
34ea(8): mov %rdx,0x80(%rsp)
34f2(4): and $0xfffffffc,%rax
34f6(2): mov (%rdx),%edx
34f8(4): mov 0xc(%rbx),%r14d
34fc(3): add %rdi,%rax
34ff(2): xor %edi,%edi
3501(4): mov 0x10(%rbx),%r10d
3505(3): mov %rax,%r11
3508(5): mov %rax,0x78(%rsp)
350d(2): mov %esi,%eax
350f(3): add 0x20(%rbx),%eax
3512(4): mov 0x14(%rbx),%r8d
3516(4): mov 0x18(%rbx),%r9d
351a(3): mov 0x1c(%rbx),%ecx
351d(3): mov %eax,0x20(%rbx)
3520(3): mov 0x24(%rbx),%eax
3523(4): setb %dil
3527(4): shr $0x20,%rsi
352b(2): add %esi,%eax
352d(2): add %edi,%eax
352f(3): cmp %r11,%r15
3532(3): mov %eax,0x24(%rbx)
3535(6): jnb 0x28dc(%rip)
353b(8): lea 0x90(%rsp),%rax
3543(4): mov %ecx,0x64(%rsp)
3547(5): mov %r9d,0x60(%rsp)
354c(5): mov %r8d,0x5c(%rsp)
3551(5): mov %r10d,0x58(%rsp)
3556(3): mov %r8d,%ebx
3559(5): mov %r14d,0x54(%rsp)
355e(5): mov %r13d,0x50(%rsp)
3563(3): mov %r12d,%ebp
3566(5): mov %r12d,0x4c(%rsp)
356b(4): mov %edx,0x74(%rsp)
356f(8): mov %rax,0x88(%rsp)
3577(9): nop 0x0(%rax,%rax,1)
3580(5): mov 0x40(%rsp),%rdi
3585(8): mov 0x88(%rsp),%r8
358d(2): xor %eax,%eax
358f(1): nop 
3590(3): mov 0x0(%rdi,%rax,1),%esi
3593(2): bswap %esi
3595(4): mov %esi,0x0(%r8,%rax,1)
3599(4): add $0x4,%rax
359d(4): cmp $0x40,%rax
35a1(2): jnz 0xffffffef(%rip)
35a3(3): mov %r10d,%esi
35a6(3): mov %r10d,%edi
35a9(3): mov %edx,%r11d
35ac(3): ror $0x6,%esi
35af(3): rol $0x7,%edi
35b2(4): rol $0xa,%r11d
35b6(2): mov %esi,%eax
35b8(3): mov %r10d,%esi
35bb(3): mov %edx,%r8d
35be(3): ror $0xb,%esi
35c1(3): and %ebp,%r8d
35c4(8): mov 0x94(%rsp),%r15d
35cc(2): xor %eax,%esi
35ce(2): mov %edi,%eax
35d0(2): mov %edx,%edi
35d2(2): xor %esi,%eax
35d4(7): mov 0x90(%rsp),%esi
35db(3): ror $0x2,%edi
35de(6): add $0x40,0x40(%rsp)
35e4(8): mov 0x98(%rsp),%r12d
35ec(7): lea 0x428a2f98(%rsi,%rcx,1),%ecx
35f3(3): lea 0x0(%rax,%rcx,1),%esi
35f6(2): mov %edi,%eax
35f8(2): mov %edx,%edi
35fa(3): ror $0xd,%edi
35fd(2): mov %ebx,%ecx
35ff(2): xor %eax,%edi
3601(3): xor %r9d,%ecx
3604(3): xor %r11d,%edi
3607(3): mov %edx,%r11d
360a(3): and %r10d,%ecx
360d(3): or %ebp,%r11d
3610(3): xor %r9d,%ecx
3613(3): mov %r11d,%eax
3616(2): add %esi,%ecx
3618(3): and %r13d,%eax
361b(4): lea 0x0(%rcx,%r14,1),%esi
361f(3): or %r8d,%eax
3622(2): add %edi,%eax
3624(3): mov %r10d,%edi
3627(3): mov %esi,%r11d
362a(2): xor %ebx,%edi
362c(2): add %ecx,%eax
362e(8): lea 0x71374491(%r15,%r9,1),%ecx
3636(2): and %esi,%edi
3638(4): ror $0xb,%r11d
363c(3): mov %eax,%r8d
363f(2): xor %ebx,%edi
3641(2): add %edi,%ecx
3643(2): mov %esi,%edi
3645(3): ror $0x6,%edi
3648(3): xor %edi,%r11d
364b(2): mov %esi,%edi
364d(3): rol $0x7,%edi
3650(3): xor %r11d,%edi
3653(3): mov %eax,%r11d
3656(2): add %ecx,%edi
3658(2): mov %eax,%ecx
365a(4): ror $0x2,%r11d
365e(3): ror $0xd,%ecx
3661(3): and %edx,%r8d
3664(4): lea 0x0(%rdi,%r13,1),%r9d
3668(3): xor %r11d,%ecx
366b(3): mov %eax,%r11d
366e(4): rol $0xa,%r11d
3672(3): xor %r11d,%ecx
3675(3): mov %eax,%r11d
3678(3): or %edx,%r11d
367b(3): and %ebp,%r11d
367e(3): or %r8d,%r11d
3681(8): lea 0xb5c0fbcf(%r12,%rbx,1),%r8d
3689(3): mov %r9d,%ebx
368c(3): add %ecx,%r11d
368f(3): ror $0xb,%ebx
3692(3): add %edi,%r11d
3695(2): mov %esi,%edi
3697(3): xor %r10d,%edi
369a(3): and %r9d,%edi
369d(3): xor %r10d,%edi
36a0(3): add %edi,%r8d
36a3(3): mov %r9d,%edi
36a6(3): ror $0x6,%edi
36a9(2): xor %edi,%ebx
36ab(3): mov %r9d,%edi
36ae(3): rol $0x7,%edi
36b1(2): xor %ebx,%edi
36b3(3): mov %r11d,%ebx
36b6(3): add %r8d,%edi
36b9(3): mov %r11d,%r8d
36bc(3): ror $0x2,%ebx
36bf(4): ror $0xd,%r8d
36c3(3): lea 0x0(%rdi,%rbp,1),%ecx
36c6(2): mov %eax,%ebp
36c8(3): xor %ebx,%r8d
36cb(3): mov %r11d,%ebx
36ce(3): and %r11d,%ebp
36d1(3): rol $0xa,%ebx
36d4(3): xor %ebx,%r8d
36d7(2): mov %eax,%ebx
36d9(3): or %r11d,%ebx
36dc(2): and %edx,%ebx
36de(2): or %ebp,%ebx
36e0(3): mov %r11d,%ebp
36e3(3): add %r8d,%ebx
36e6(3): mov %esi,%r8d
36e9(2): add %edi,%ebx
36eb(7): mov 0x9c(%rsp),%edi
36f2(3): xor %r9d,%r8d
36f5(3): and %ecx,%r8d
36f8(2): and %ebx,%ebp
36fa(3): xor %esi,%r8d
36fd(8): lea 0xe9b5dba5(%rdi,%r10,1),%r10d
3705(2): mov %ecx,%edi
3707(3): ror $0xb,%edi
370a(3): add %r8d,%r10d
370d(3): mov %ecx,%r8d
3710(4): ror $0x6,%r8d
3714(3): xor %r8d,%edi
3717(3): mov %ecx,%r8d
371a(4): rol $0x7,%r8d
371e(3): xor %edi,%r8d
3721(2): mov %ebx,%edi
3723(3): add %r10d,%r8d
3726(3): mov %ebx,%r10d
3729(3): ror $0x2,%edi
372c(4): ror $0xd,%r10d
3730(3): add %r8d,%edx
3733(3): xor %edi,%r10d
3736(2): mov %ebx,%edi
3738(3): rol $0xa,%edi
373b(3): xor %edi,%r10d
373e(3): mov %r11d,%edi
3741(2): or %ebx,%edi
3743(2): and %eax,%edi
3745(2): or %ebp,%edi
3747(2): mov %ebx,%ebp
3749(3): add %r10d,%edi
374c(3): mov %r9d,%r10d
374f(3): add %r8d,%edi
3752(8): mov 0xa0(%rsp),%r8d
375a(3): xor %ecx,%r10d
375d(3): and %edx,%r10d
3760(3): mov %edi,%r14d
3763(3): xor %r9d,%r10d
3766(8): lea 0x3956c25b(%r8,%rsi,1),%r8d
376e(2): mov %edx,%esi
3770(3): ror $0xb,%esi
3773(3): add %r10d,%r8d
3776(3): mov %edx,%r10d
3779(4): ror $0x6,%r10d
377d(3): xor %r10d,%esi
3780(3): mov %edx,%r10d
3783(4): rol $0x7,%r10d
3787(3): xor %esi,%r10d
378a(2): mov %edi,%esi
378c(3): add %r8d,%r10d
378f(3): ror $0x2,%esi
3792(4): ror $0xd,%r14d
3796(4): lea 0x0(%rax,%r10,1),%r8d
379a(3): mov %r14d,%eax
379d(2): and %edi,%ebp
379f(2): xor %esi,%eax
37a1(2): mov %edi,%esi
37a3(8): mov 0xa4(%rsp),%r14d
37ab(3): rol $0xa,%esi
37ae(2): xor %esi,%eax
37b0(2): mov %ebx,%esi
37b2(2): or %edi,%esi
37b4(8): lea 0x59f111f1(%r14,%r9,1),%r9d
37bc(3): mov %r8d,%r14d
37bf(3): and %r11d,%esi
37c2(4): ror $0xb,%r14d
37c6(2): or %ebp,%esi
37c8(2): mov %edi,%ebp
37ca(2): add %eax,%esi
37cc(3): mov %r14d,%eax
37cf(3): add %r10d,%esi
37d2(3): mov %ecx,%r10d
37d5(3): xor %edx,%r10d
37d8(3): mov %esi,%r14d
37db(2): and %esi,%ebp
37dd(3): and %r8d,%r10d
37e0(4): rol $0xa,%r14d
37e4(3): xor %ecx,%r10d
37e7(3): add %r9d,%r10d
37ea(3): mov %r8d,%r9d
37ed(4): ror $0x6,%r9d
37f1(3): xor %r9d,%eax
37f4(3): mov %r8d,%r9d
37f7(4): rol $0x7,%r9d
37fb(3): xor %eax,%r9d
37fe(3): add %r10d,%r9d
3801(3): mov %esi,%r10d
3804(4): ror $0x2,%r10d
3808(3): add %r9d,%r11d
380b(3): mov %r10d,%eax
380e(3): mov %esi,%r10d
3811(4): ror $0xd,%r10d
3815(3): xor %eax,%r10d
3818(3): xor %r14d,%r10d
381b(3): mov %edi,%r14d
381e(3): or %esi,%r14d
3821(3): mov %r14d,%eax
3824(2): and %ebx,%eax
3826(2): or %ebp,%eax
3828(2): mov %esi,%ebp
382a(3): add %r10d,%eax
382d(8): mov 0xa8(%rsp),%r10d
3835(3): add %r9d,%eax
3838(3): mov %edx,%r9d
383b(3): xor %r8d,%r9d
383e(2): and %eax,%ebp
3840(3): and %r11d,%r9d
3843(8): lea 0x923f82a4(%r10,%rcx,1),%r10d
384b(3): mov %r11d,%ecx
384e(3): xor %edx,%r9d
3851(3): ror $0xb,%ecx
3854(3): add %r9d,%r10d
3857(3): mov %r11d,%r9d
385a(4): ror $0x6,%r9d
385e(3): xor %r9d,%ecx
3861(3): mov %r11d,%r9d
3864(4): rol $0x7,%r9d
3868(3): xor %ecx,%r9d
386b(2): mov %eax,%ecx
386d(3): add %r10d,%r9d
3870(3): mov %eax,%r10d
3873(3): ror $0x2,%ecx
3876(4): ror $0xd,%r10d
387a(3): add %r9d,%ebx
387d(3): xor %ecx,%r10d
3880(2): mov %eax,%ecx
3882(3): rol $0xa,%ecx
3885(3): xor %ecx,%r10d
3888(2): mov %esi,%ecx
388a(2): or %eax,%ecx
388c(2): and %edi,%ecx
388e(2): or %ebp,%ecx
3890(2): mov %eax,%ebp
3892(3): add %r10d,%ecx
3895(8): mov 0xac(%rsp),%r10d
389d(3): add %r9d,%ecx
38a0(3): mov %r8d,%r9d
38a3(3): xor %r11d,%r9d
38a6(3): and %ebx,%r9d
38a9(8): lea 0xab1c5ed5(%r10,%rdx,1),%r10d
38b1(2): mov %ebx,%edx
38b3(3): xor %r8d,%r9d
38b6(3): ror $0xb,%edx
38b9(3): add %r9d,%r10d
38bc(3): mov %ebx,%r9d
38bf(4): ror $0x6,%r9d
38c3(3): xor %r9d,%edx
38c6(3): mov %ebx,%r9d
38c9(4): rol $0x7,%r9d
38cd(3): xor %edx,%r9d
38d0(2): mov %ecx,%edx
38d2(3): add %r10d,%r9d
38d5(3): mov %ecx,%r10d
38d8(3): add %r9d,%edi
38db(3): ror $0x2,%edx
38de(4): ror $0xd,%r10d
38e2(3): xor %edx,%r10d
38e5(2): mov %ecx,%edx
38e7(2): and %ecx,%ebp
38e9(3): rol $0xa,%edx
38ec(3): xor %edx,%r10d
38ef(2): mov %eax,%edx
38f1(2): or %ecx,%edx
38f3(2): and %esi,%edx
38f5(2): or %ebp,%edx
38f7(2): mov %ecx,%ebp
38f9(3): add %r10d,%edx
38fc(8): mov 0xb0(%rsp),%r10d
3904(3): add %r9d,%edx
3907(3): mov %r11d,%r9d
390a(3): xor %ebx,%r9d
390d(2): and %edx,%ebp
390f(3): and %edi,%r9d
3912(8): lea 0xd807aa98(%r10,%r8,1),%r8d
391a(3): mov %edi,%r10d
391d(3): xor %r11d,%r9d
3920(4): ror $0xb,%r10d
3924(3): add %r8d,%r9d
3927(3): mov %edi,%r8d
392a(4): ror $0x6,%r8d
392e(3): xor %r8d,%r10d
3931(3): mov %edi,%r8d
3934(4): rol $0x7,%r8d
3938(3): xor %r10d,%r8d
393b(3): mov %edx,%r10d
393e(3): add %r9d,%r8d
3941(3): mov %edx,%r9d
3944(4): ror $0x2,%r10d
3948(4): ror $0xd,%r9d
394c(3): add %r8d,%esi
394f(3): xor %r10d,%r9d
3952(3): mov %edx,%r10d
3955(4): rol $0xa,%r10d
3959(3): xor %r10d,%r9d
395c(3): mov %ecx,%r10d
395f(3): or %edx,%r10d
3962(3): and %eax,%r10d
3965(3): or %ebp,%r10d
3968(2): mov %edx,%ebp
396a(3): add %r9d,%r10d
396d(8): mov 0xb4(%rsp),%r9d
3975(3): add %r8d,%r10d
3978(3): mov %ebx,%r8d
397b(3): xor %edi,%r8d
397e(3): and %r10d,%ebp
3981(3): and %esi,%r8d
3984(8): lea 0x12835b01(%r9,%r11,1),%r11d
398c(3): mov %esi,%r9d
398f(3): xor %ebx,%r8d
3992(4): ror $0xb,%r9d
3996(3): add %r8d,%r11d
3999(3): mov %esi,%r8d
399c(4): ror $0x6,%r8d
39a0(3): xor %r8d,%r9d
39a3(3): mov %esi,%r8d
39a6(4): rol $0x7,%r8d
39aa(3): xor %r9d,%r8d
39ad(3): mov %r10d,%r9d
39b0(3): add %r11d,%r8d
39b3(3): mov %r10d,%r11d
39b6(4): ror $0x2,%r9d
39ba(4): ror $0xd,%r11d
39be(3): add %r8d,%eax
39c1(3): xor %r9d,%r11d
39c4(3): mov %r10d,%r9d
39c7(4): rol $0xa,%r9d
39cb(3): xor %r9d,%r11d
39ce(3): mov %edx,%r9d
39d1(3): or %r10d,%r9d
39d4(3): and %ecx,%r9d
39d7(3): or %ebp,%r9d
39da(3): mov %r10d,%ebp
39dd(3): add %r11d,%r9d
39e0(3): mov %edi,%r11d
39e3(3): add %r8d,%r9d
39e6(8): mov 0xb8(%rsp),%r8d
39ee(3): xor %esi,%r11d
39f1(3): and %eax,%r11d
39f4(3): xor %edi,%r11d
39f7(8): lea 0x243185be(%r8,%rbx,1),%ebx
39ff(3): mov %eax,%r8d
3a02(4): ror $0xb,%r8d
3a06(3): add %r11d,%ebx
3a09(3): mov %eax,%r11d
3a0c(4): ror $0x6,%r11d
3a10(3): xor %r11d,%r8d
3a13(3): mov %eax,%r11d
3a16(4): rol $0x7,%r11d
3a1a(3): xor %r8d,%r11d
3a1d(3): mov %r9d,%r8d
3a20(3): and %r9d,%ebp
3a23(3): add %ebx,%r11d
3a26(3): mov %r9d,%ebx
3a29(4): ror $0x2,%r8d
3a2d(3): ror $0xd,%ebx
3a30(3): add %r11d,%ecx
3a33(3): xor %r8d,%ebx
3a36(3): mov %r9d,%r8d
3a39(4): rol $0xa,%r8d
3a3d(3): xor %r8d,%ebx
3a40(3): mov %r10d,%r8d
3a43(3): or %r9d,%r8d
3a46(3): and %edx,%r8d
3a49(3): or %ebp,%r8d
3a4c(3): mov %r9d,%ebp
3a4f(3): add %ebx,%r8d
3a52(7): mov 0xbc(%rsp),%ebx
3a59(3): add %r11d,%r8d
3a5c(3): mov %esi,%r11d
3a5f(3): xor %eax,%r11d
3a62(3): and %ecx,%r11d
3a65(7): lea 0x550c7dc3(%rbx,%rdi,1),%edi
3a6c(2): mov %ecx,%ebx
3a6e(3): xor %esi,%r11d
3a71(3): ror $0xb,%ebx
3a74(3): add %edi,%r11d
3a77(2): mov %ecx,%edi
3a79(3): ror $0x6,%edi
3a7c(2): xor %edi,%ebx
3a7e(2): mov %ecx,%edi
3a80(3): rol $0x7,%edi
3a83(2): xor %ebx,%edi
3a85(3): mov %r8d,%ebx
3a88(3): add %r11d,%edi
3a8b(3): mov %r8d,%r11d
3a8e(3): ror $0x2,%ebx
3a91(4): ror $0xd,%r11d
3a95(2): add %edi,%edx
3a97(3): xor %ebx,%r11d
3a9a(3): mov %r8d,%ebx
3a9d(3): rol $0xa,%ebx
3aa0(3): xor %ebx,%r11d
3aa3(3): mov %r9d,%ebx
3aa6(3): or %r8d,%ebx
3aa9(3): and %r10d,%ebx
3aac(3): and %r8d,%ebp
3aaf(2): or %ebp,%ebx
3ab1(3): mov %r8d,%ebp
3ab4(3): add %r11d,%ebx
3ab7(8): mov 0xc0(%rsp),%r11d
3abf(2): add %edi,%ebx
3ac1(2): mov %eax,%edi
3ac3(2): xor %ecx,%edi
3ac5(2): and %ebx,%ebp
3ac7(2): and %edx,%edi
3ac9(8): lea 0x72be5d74(%r11,%rsi,1),%r11d
3ad1(2): mov %edx,%esi
3ad3(2): xor %eax,%edi
3ad5(3): ror $0xb,%esi
3ad8(3): add %edi,%r11d
3adb(2): mov %edx,%edi
3add(3): ror $0x6,%edi
3ae0(2): xor %edi,%esi
3ae2(2): mov %edx,%edi
3ae4(3): rol $0x7,%edi
3ae7(2): xor %esi,%edi
3ae9(2): mov %ebx,%esi
3aeb(3): add %r11d,%edi
3aee(3): mov %ebx,%r11d
3af1(3): ror $0x2,%esi
3af4(4): ror $0xd,%r11d
3af8(3): add %edi,%r10d
3afb(3): xor %esi,%r11d
3afe(2): mov %ebx,%esi
3b00(3): mov %r10d,%r14d
3b03(3): rol $0xa,%esi
3b06(3): xor %esi,%r11d
3b09(3): mov %r8d,%esi
3b0c(2): or %ebx,%esi
3b0e(3): and %r9d,%esi
3b11(2): or %ebp,%esi
3b13(2): mov %ebx,%ebp
3b15(3): add %r11d,%esi
3b18(3): mov %ecx,%r11d
3b1b(2): add %edi,%esi
3b1d(7): mov 0xc4(%rsp),%edi
3b24(3): xor %edx,%r11d
3b27(3): and %r10d,%r11d
3b2a(3): xor %ecx,%r11d
3b2d(7): lea 0x80deb1fe(%rdi,%rax,1),%eax
3b34(3): mov %r10d,%edi
3b37(3): ror $0x6,%edi
3b3a(3): add %eax,%r11d
3b3d(2): mov %edi,%eax
3b3f(3): mov %r10d,%edi
3b42(3): ror $0xb,%edi
3b45(2): xor %eax,%edi
3b47(4): rol $0x7,%r14d
3b4b(2): and %esi,%ebp
3b4d(3): mov %r14d,%eax
3b50(2): xor %edi,%eax
3b52(2): mov %esi,%edi
3b54(3): add %r11d,%eax
3b57(3): mov %esi,%r11d
3b5a(3): ror $0x2,%edi
3b5d(4): ror $0xd,%r11d
3b61(3): add %eax,%r9d
3b64(3): xor %edi,%r11d
3b67(2): mov %esi,%edi
3b69(3): mov %r9d,%r14d
3b6c(3): rol $0xa,%edi
3b6f(4): ror $0xb,%r14d
3b73(3): xor %edi,%r11d
3b76(2): mov %ebx,%edi
3b78(2): or %esi,%edi
3b7a(3): and %r8d,%edi
3b7d(2): or %ebp,%edi
3b7f(3): add %r11d,%edi
3b82(3): mov %edx,%r11d
3b85(3): xor %r10d,%r11d
3b88(2): add %eax,%edi
3b8a(3): mov %r11d,%eax
3b8d(8): mov 0xc8(%rsp),%r11d
3b95(3): and %r9d,%eax
3b98(2): xor %edx,%eax
3b9a(8): lea 0x9bdc06a7(%r11,%rcx,1),%ecx
3ba2(3): mov %r9d,%r11d
3ba5(4): ror $0x6,%r11d
3ba9(3): xor %r11d,%r14d
3bac(3): mov %r9d,%r11d
3baf(2): add %eax,%ecx
3bb1(4): rol $0x7,%r11d
3bb5(3): mov %r11d,%eax
3bb8(3): mov %esi,%r11d
3bbb(3): xor %r14d,%eax
3bbe(3): mov %edi,%r14d
3bc1(2): add %ecx,%eax
3bc3(2): mov %edi,%ecx
3bc5(4): ror $0x2,%r14d
3bc9(3): ror $0xd,%ecx
3bcc(3): add %eax,%r8d
3bcf(3): xor %r14d,%ecx
3bd2(3): mov %edi,%r14d
3bd5(4): rol $0xa,%r14d
3bd9(3): xor %r14d,%ecx
3bdc(3): mov %esi,%r14d
3bdf(3): or %edi,%r14d
3be2(3): and %edi,%r11d
3be5(3): and %ebx,%r14d
3be8(3): or %r11d,%r14d
3beb(3): mov %r8d,%r11d
3bee(3): add %ecx,%r14d
3bf1(3): mov %r10d,%ecx
3bf4(4): rol $0x7,%r11d
3bf8(3): xor %r9d,%ecx
3bfb(3): add %eax,%r14d
3bfe(2): mov %ecx,%eax
3c00(7): mov 0xcc(%rsp),%ecx
3c07(3): and %r8d,%eax
3c0a(3): xor %r10d,%eax
3c0d(7): lea 0xc19bf174(%rcx,%rdx,1),%edx
3c14(3): mov %r8d,%ecx
3c17(3): ror $0x6,%ecx
3c1a(2): add %eax,%edx
3c1c(2): mov %ecx,%eax
3c1e(3): mov %r8d,%ecx
3c21(3): ror $0xb,%ecx
3c24(2): xor %eax,%ecx
3c26(3): mov %r11d,%eax
3c29(3): mov %edi,%r11d
3c2c(2): xor %ecx,%eax
3c2e(3): mov %r14d,%ecx
3c31(3): and %r14d,%r11d
3c34(2): add %edx,%eax
3c36(3): mov %r14d,%edx
3c39(3): ror $0x2,%ecx
3c3c(3): ror $0xd,%edx
3c3f(2): add %eax,%ebx
3c41(2): xor %ecx,%edx
3c43(3): mov %r14d,%ecx
3c46(2): mov %ebx,%ebp
3c48(3): rol $0xa,%ecx
3c4b(2): xor %ecx,%edx
3c4d(2): mov %edi,%ecx
3c4f(3): or %r14d,%ecx
3c52(2): and %esi,%ecx
3c54(3): or %r11d,%ecx
3c57(8): mov 0xc8(%rsp),%r11d
3c5f(2): add %edx,%ecx
3c61(7): mov 0xc8(%rsp),%edx
3c68(2): add %eax,%ecx
3c6a(4): rol $0xf,%r11d
3c6e(3): rol $0xd,%edx
3c71(2): mov %edx,%eax
3c73(7): mov 0x90(%rsp),%edx
3c7a(3): xor %r11d,%eax
3c7d(8): mov 0xc8(%rsp),%r11d
3c85(4): shr $0xa,%r11d
3c89(3): xor %eax,%r11d
3c8c(7): add 0xb4(%rsp),%edx
3c93(3): rol $0x7,%ebp
3c96(4): lea 0x0(%r11,%rdx,1),%eax
3c9a(3): mov %r15d,%edx
3c9d(3): mov %r15d,%r11d
3ca0(3): ror $0x7,%edx
3ca3(4): rol $0xe,%r11d
3ca7(3): xor %edx,%r11d
3caa(3): mov %r15d,%edx
3cad(3): shr $0x3,%edx
3cb0(3): xor %edx,%r11d
3cb3(3): mov %r9d,%edx
3cb6(3): xor %r8d,%edx
3cb9(3): add %eax,%r11d
3cbc(2): mov %edx,%eax
3cbe(8): lea 0xe49b69c1(%r10,%r11,1),%r10d
3cc6(2): mov %ebx,%edx
3cc8(2): and %ebx,%eax
3cca(3): ror $0x6,%edx
3ccd(3): xor %r9d,%eax
3cd0(3): add %eax,%r10d
3cd3(2): mov %edx,%eax
3cd5(2): mov %ebx,%edx
3cd7(3): ror $0xb,%edx
3cda(2): xor %eax,%edx
3cdc(2): mov %ebp,%eax
3cde(3): mov %r14d,%ebp
3ce1(2): xor %edx,%eax
3ce3(2): mov %ecx,%edx
3ce5(2): and %ecx,%ebp
3ce7(3): add %r10d,%eax
3cea(3): mov %ecx,%r10d
3ced(3): ror $0x2,%edx
3cf0(4): ror $0xd,%r10d
3cf4(2): add %eax,%esi
3cf6(3): xor %edx,%r10d
3cf9(2): mov %ecx,%edx
3cfb(3): mov %esi,%r13d
3cfe(3): rol $0xa,%edx
3d01(3): xor %edx,%r10d
3d04(3): mov %r14d,%edx
3d07(2): or %ecx,%edx
3d09(2): and %edi,%edx
3d0b(2): or %ebp,%edx
3d0d(7): mov 0xcc(%rsp),%ebp
3d14(3): add %r10d,%edx
3d17(8): mov 0xcc(%rsp),%r10d
3d1f(2): add %eax,%edx
3d21(3): rol $0xd,%ebp
3d24(4): rol $0xf,%r10d
3d28(2): mov %ebp,%eax
3d2a(3): mov %r12d,%ebp
3d2d(3): xor %r10d,%eax
3d30(8): mov 0xcc(%rsp),%r10d
3d38(8): add 0xb8(%rsp),%r15d
3d40(3): ror $0x7,%ebp
3d43(4): ror $0xb,%r13d
3d47(4): shr $0xa,%r10d
3d4b(3): xor %eax,%r10d
3d4e(4): lea 0x0(%r10,%r15,1),%eax
3d52(3): mov %r12d,%r10d
3d55(3): mov %r8d,%r15d
3d58(4): rol $0xe,%r10d
3d5c(3): xor %ebx,%r15d
3d5f(3): xor %ebp,%r10d
3d62(3): mov %r12d,%ebp
3d65(3): shr $0x3,%ebp
3d68(3): xor %ebp,%r10d
3d6b(2): mov %ecx,%ebp
3d6d(3): add %eax,%r10d
3d70(3): mov %r15d,%eax
3d73(3): mov %esi,%r15d
3d76(4): ror $0x6,%r15d
3d7a(2): and %esi,%eax
3d7c(8): lea 0xefbe4786(%r9,%r10,1),%r9d
3d84(3): xor %r15d,%r13d
3d87(3): mov %esi,%r15d
3d8a(3): xor %r8d,%eax
3d8d(4): rol $0x7,%r15d
3d91(3): add %eax,%r9d
3d94(2): and %edx,%ebp
3d96(3): mov %r15d,%eax
3d99(8): mov 0x9c(%rsp),%r15d
3da1(3): xor %r13d,%eax
3da4(3): mov %edx,%r13d
3da7(3): add %r9d,%eax
3daa(3): mov %edx,%r9d
3dad(4): ror $0x2,%r13d
3db1(4): ror $0xd,%r9d
3db5(2): add %eax,%edi
3db7(3): xor %r13d,%r9d
3dba(3): mov %edx,%r13d
3dbd(4): rol $0xa,%r13d
3dc1(3): xor %r13d,%r9d
3dc4(3): mov %ecx,%r13d
3dc7(3): or %edx,%r13d
3dca(3): and %r14d,%r13d
3dcd(3): or %ebp,%r13d
3dd0(3): mov %r11d,%ebp
3dd3(3): add %r9d,%r13d
3dd6(3): mov %r11d,%r9d
3dd9(3): add %eax,%r13d
3ddc(3): rol $0xf,%ebp
3ddf(4): rol $0xd,%r9d
3de3(3): xor %ebp,%r9d
3de6(3): mov %r11d,%ebp
3de9(4): ror $0x7,%r15d
3ded(3): shr $0xa,%ebp
3df0(3): mov %r15d,%eax
3df3(8): add 0xbc(%rsp),%r12d
3dfb(3): xor %r9d,%ebp
3dfe(8): mov 0x9c(%rsp),%r9d
3e06(3): mov %ebx,%r15d
3e09(3): xor %esi,%r15d
3e0c(4): rol $0xe,%r9d
3e10(3): xor %r9d,%eax
3e13(8): mov 0x9c(%rsp),%r9d
3e1b(4): shr $0x3,%r9d
3e1f(3): xor %eax,%r9d
3e22(3): mov %r15d,%eax
3e25(3): mov %edi,%r15d
3e28(3): add %r12d,%r9d
3e2b(3): mov %edi,%r12d
3e2e(4): ror $0x6,%r15d
3e32(3): add %ebp,%r9d
3e35(4): ror $0xb,%r12d
3e39(2): and %edi,%eax
3e3b(3): xor %r15d,%r12d
3e3e(8): lea 0xfc19dc6(%r8,%r9,1),%r8d
3e46(3): mov %edi,%r15d
3e49(2): xor %ebx,%eax
3e4b(4): rol $0x7,%r15d
3e4f(2): mov %edx,%ebp
3e51(3): add %eax,%r8d
3e54(3): mov %r15d,%eax
3e57(3): and %r13d,%ebp
3e5a(3): xor %r12d,%eax
3e5d(3): mov %r13d,%r12d
3e60(8): mov 0xa0(%rsp),%r15d
3e68(3): add %r8d,%eax
3e6b(3): mov %r13d,%r8d
3e6e(4): ror $0x2,%r12d
3e72(4): ror $0xd,%r8d
3e76(3): add %eax,%r14d
3e79(3): xor %r12d,%r8d
3e7c(3): mov %r13d,%r12d
3e7f(4): rol $0xa,%r12d
3e83(3): xor %r12d,%r8d
3e86(3): mov %edx,%r12d
3e89(3): or %r13d,%r12d
3e8c(3): and %ecx,%r12d
3e8f(3): or %ebp,%r12d
3e92(3): mov %r10d,%ebp
3e95(4): ror $0x7,%r15d
3e99(3): add %r8d,%r12d
3e9c(3): mov %r10d,%r8d
3e9f(3): rol $0xf,%ebp
3ea2(4): rol $0xd,%r8d
3ea6(3): add %eax,%r12d
3ea9(3): mov %r15d,%eax
3eac(3): xor %ebp,%r8d
3eaf(3): mov %r10d,%ebp
3eb2(3): shr $0xa,%ebp
3eb5(3): xor %r8d,%ebp
3eb8(8): mov 0xa0(%rsp),%r8d
3ec0(8): mov 0x9c(%rsp),%r15d
3ec8(8): add 0xc0(%rsp),%r15d
3ed0(4): rol $0xe,%r8d
3ed4(3): xor %r8d,%eax
3ed7(8): mov 0xa0(%rsp),%r8d
3edf(4): shr $0x3,%r8d
3ee3(3): xor %eax,%r8d
3ee6(3): add %r15d,%r8d
3ee9(3): mov %esi,%r15d
3eec(3): xor %edi,%r15d
3eef(3): add %ebp,%r8d
3ef2(3): mov %r14d,%ebp
3ef5(3): mov %r15d,%eax
3ef8(3): mov %r14d,%r15d
3efb(3): ror $0xb,%ebp
3efe(4): ror $0x6,%r15d
3f02(3): and %r14d,%eax
3f05(8): lea 0x240ca1cc(%rbx,%r8,1),%ebx
3f0d(3): xor %r15d,%ebp
3f10(3): mov %r14d,%r15d
3f13(2): xor %esi,%eax
3f15(4): rol $0x7,%r15d
3f19(2): add %eax,%ebx
3f1b(3): mov %r15d,%eax
3f1e(3): mov %r13d,%r15d
3f21(2): xor %ebp,%eax
3f23(3): mov %r12d,%ebp
3f26(2): add %ebx,%eax
3f28(3): mov %r12d,%ebx
3f2b(3): ror $0x2,%ebp
3f2e(3): ror $0xd,%ebx
3f31(2): add %eax,%ecx
3f33(2): xor %ebp,%ebx
3f35(3): mov %r12d,%ebp
3f38(3): rol $0xa,%ebp
3f3b(2): xor %ebp,%ebx
3f3d(3): mov %r13d,%ebp
3f40(3): or %r12d,%ebp
3f43(3): and %r12d,%r15d
3f46(2): and %edx,%ebp
3f48(3): or %r15d,%ebp
3f4b(3): mov %r9d,%r15d
3f4e(2): add %ebx,%ebp
3f50(3): mov %r9d,%ebx
3f53(4): shr $0xa,%r15d
3f57(3): rol $0xf,%ebx
3f5a(2): add %eax,%ebp
3f5c(2): mov %ebx,%eax
3f5e(3): mov %r9d,%ebx
3f61(3): rol $0xd,%ebx
3f64(2): xor %eax,%ebx
3f66(3): xor %r15d,%ebx
3f69(8): mov 0xa4(%rsp),%r15d
3f71(4): ror $0x7,%r15d
3f75(3): mov %r15d,%eax
3f78(8): mov 0xa4(%rsp),%r15d
3f80(4): rol $0xe,%r15d
3f84(3): xor %r15d,%eax
3f87(8): mov 0xa4(%rsp),%r15d
3f8f(4): shr $0x3,%r15d
3f93(3): xor %eax,%r15d
3f96(7): mov 0xa0(%rsp),%eax
3f9d(7): add 0xc4(%rsp),%eax
3fa4(3): add %r15d,%eax
3fa7(3): mov %edi,%r15d
3faa(3): xor %r14d,%r15d
3fad(2): add %eax,%ebx
3faf(3): mov %r15d,%eax
3fb2(7): lea 0x2de92c6f(%rsi,%rbx,1),%esi
3fb9(4): mov %ebx,0x8(%rsp)
3fbd(2): and %ecx,%eax
3fbf(2): mov %ecx,%ebx
3fc1(3): mov %r12d,%r15d
3fc4(2): xor %edi,%eax
3fc6(3): ror $0xb,%ebx
3fc9(2): add %eax,%esi
3fcb(2): mov %ecx,%eax
3fcd(3): ror $0x6,%eax
3fd0(2): xor %eax,%ebx
3fd2(2): mov %ecx,%eax
3fd4(3): rol $0x7,%eax
3fd7(2): xor %ebx,%eax
3fd9(2): mov %ebp,%ebx
3fdb(2): add %esi,%eax
3fdd(2): mov %ebp,%esi
3fdf(3): ror $0x2,%ebx
3fe2(3): ror $0xd,%esi
3fe5(2): add %eax,%edx
3fe7(2): xor %ebx,%esi
3fe9(2): mov %ebp,%ebx
3feb(3): and %ebp,%r15d
3fee(3): rol $0xa,%ebx
3ff1(2): xor %ebx,%esi
3ff3(3): mov %r12d,%ebx
3ff6(2): or %ebp,%ebx
3ff8(3): and %r13d,%ebx
3ffb(3): or %r15d,%ebx
3ffe(8): mov 0xa8(%rsp),%r15d
4006(2): add %esi,%ebx
4008(3): mov %r8d,%esi
400b(3): rol $0xf,%esi
400e(2): add %eax,%ebx
4010(2): mov %esi,%eax
4012(3): mov %r8d,%esi
4015(4): rol $0xe,%r15d
4019(3): rol $0xd,%esi
401c(2): xor %eax,%esi
401e(3): mov %r8d,%eax
4021(3): shr $0xa,%eax
4024(2): xor %eax,%esi
4026(7): mov 0xa8(%rsp),%eax
402d(3): ror $0x7,%eax
4030(3): xor %r15d,%eax
4033(8): mov 0xa8(%rsp),%r15d
403b(4): shr $0x3,%r15d
403f(3): xor %eax,%r15d
4042(7): mov 0xa4(%rsp),%eax
4049(7): add 0xc8(%rsp),%eax
4050(3): add %r15d,%eax
4053(3): mov %edx,%r15d
4056(2): add %esi,%eax
4058(3): mov %r14d,%esi
405b(4): ror $0xb,%r15d
405f(2): xor %ecx,%esi
4061(7): lea 0x4a7484aa(%rdi,%rax,1),%edi
4068(4): mov %eax,0xc(%rsp)
406c(2): and %edx,%esi
406e(3): mov %r15d,%eax
4071(3): mov %ebx,%r15d
4074(3): xor %r14d,%esi
4077(2): add %esi,%edi
4079(2): mov %edx,%esi
407b(3): ror $0x6,%esi
407e(2): xor %esi,%eax
4080(2): mov %edx,%esi
4082(3): rol $0x7,%esi
4085(2): xor %eax,%esi
4087(2): add %edi,%esi
4089(2): mov %ebx,%edi
408b(3): add %esi,%r13d
408e(3): ror $0x2,%edi
4091(4): rol $0xa,%r15d
4095(2): mov %edi,%eax
4097(2): mov %ebx,%edi
4099(3): ror $0xd,%edi
409c(2): xor %eax,%edi
409e(3): xor %r15d,%edi
40a1(3): mov %ebp,%r15d
40a4(3): or %ebx,%r15d
40a7(3): mov %r15d,%eax
40aa(3): mov %ebp,%r15d
40ad(3): and %ebx,%r15d
40b0(3): and %r12d,%eax
40b3(3): or %r15d,%eax
40b6(5): mov 0x8(%rsp),%r15d
40bb(2): add %edi,%eax
40bd(2): add %esi,%eax
40bf(3): mov %r15d,%edi
40c2(3): mov %r15d,%esi
40c5(3): rol $0xf,%esi
40c8(3): rol $0xd,%edi
40cb(2): xor %esi,%edi
40cd(3): mov %r15d,%esi
40d0(8): mov 0xac(%rsp),%r15d
40d8(3): shr $0xa,%esi
40db(2): xor %esi,%edi
40dd(7): mov 0xac(%rsp),%esi
40e4(4): rol $0xe,%r15d
40e8(3): ror $0x7,%esi
40eb(3): xor %r15d,%esi
40ee(8): mov 0xac(%rsp),%r15d
40f6(4): shr $0x3,%r15d
40fa(3): xor %esi,%r15d
40fd(7): mov 0xa8(%rsp),%esi
4104(7): add 0xcc(%rsp),%esi
410b(3): add %r15d,%esi
410e(3): mov %ebx,%r15d
4111(2): add %esi,%edi
4113(2): mov %ecx,%esi
4115(2): xor %edx,%esi
4117(8): lea 0x5cb0a9dc(%r14,%rdi,1),%r14d
411f(4): mov %edi,0x10(%rsp)
4123(3): and %r13d,%esi
4126(3): mov %r13d,%edi
4129(2): xor %ecx,%esi
412b(3): ror $0xb,%edi
412e(3): add %esi,%r14d
4131(3): mov %r13d,%esi
4134(3): ror $0x6,%esi
4137(2): xor %esi,%edi
4139(3): mov %r13d,%esi
413c(3): rol $0x7,%esi
413f(3): and %eax,%r15d
4142(2): xor %edi,%esi
4144(2): mov %eax,%edi
4146(3): add %r14d,%esi
4149(3): mov %eax,%r14d
414c(3): ror $0x2,%edi
414f(4): ror $0xd,%r14d
4153(3): add %esi,%r12d
4156(3): xor %edi,%r14d
4159(2): mov %eax,%edi
415b(3): rol $0xa,%edi
415e(3): xor %edi,%r14d
4161(2): mov %ebx,%edi
4163(2): or %eax,%edi
4165(2): and %ebp,%edi
4167(3): or %r15d,%edi
416a(5): mov 0xc(%rsp),%r15d
416f(3): add %r14d,%edi
4172(2): add %esi,%edi
4174(3): mov %r15d,%r14d
4177(3): mov %r15d,%esi
417a(3): rol $0xf,%esi
417d(4): rol $0xd,%r14d
4181(3): xor %esi,%r14d
4184(3): mov %r15d,%esi
4187(3): shr $0xa,%esi
418a(3): xor %esi,%r14d
418d(7): mov 0xb0(%rsp),%esi
4194(3): ror $0x7,%esi
4197(3): mov %esi,%r15d
419a(7): mov 0xb0(%rsp),%esi
41a1(3): rol $0xe,%esi
41a4(3): xor %r15d,%esi
41a7(8): mov 0xb0(%rsp),%r15d
41af(4): shr $0x3,%r15d
41b3(3): xor %r15d,%esi
41b6(7): add 0xac(%rsp),%esi
41bd(3): mov %eax,%r15d
41c0(3): add %r11d,%esi
41c3(3): add %r14d,%esi
41c6(3): mov %edx,%r14d
41c9(3): xor %r13d,%r14d
41cc(7): lea 0x76f988da(%rcx,%rsi,1),%ecx
41d3(4): mov %esi,0x18(%rsp)
41d7(3): and %r12d,%r14d
41da(3): mov %r12d,%esi
41dd(3): xor %edx,%r14d
41e0(3): add %ecx,%r14d
41e3(3): mov %r12d,%ecx
41e6(3): ror $0x6,%ecx
41e9(3): ror $0xb,%esi
41ec(3): and %edi,%r15d
41ef(2): xor %ecx,%esi
41f1(3): mov %r12d,%ecx
41f4(3): rol $0x7,%ecx
41f7(2): xor %esi,%ecx
41f9(3): add %r14d,%ecx
41fc(3): mov %edi,%r14d
41ff(4): ror $0x2,%r14d
4203(2): add %ecx,%ebp
4205(3): mov %r14d,%esi
4208(3): mov %edi,%r14d
420b(4): ror $0xd,%r14d
420f(3): xor %esi,%r14d
4212(2): mov %edi,%esi
4214(3): rol $0xa,%esi
4217(3): xor %esi,%r14d
421a(2): mov %eax,%esi
421c(2): or %edi,%esi
421e(2): and %ebx,%esi
4220(3): or %r15d,%esi
4223(5): mov 0x10(%rsp),%r15d
4228(3): add %r14d,%esi
422b(2): add %ecx,%esi
422d(3): mov %r15d,%r14d
4230(3): mov %r15d,%ecx
4233(3): rol $0xf,%ecx
4236(4): rol $0xd,%r14d
423a(3): xor %ecx,%r14d
423d(3): mov %r15d,%ecx
4240(3): shr $0xa,%ecx
4243(3): xor %ecx,%r14d
4246(7): mov 0xb4(%rsp),%ecx
424d(3): ror $0x7,%ecx
4250(3): mov %ecx,%r15d
4253(7): mov 0xb4(%rsp),%ecx
425a(3): rol $0xe,%ecx
425d(3): xor %r15d,%ecx
4260(8): mov 0xb4(%rsp),%r15d
4268(4): shr $0x3,%r15d
426c(3): xor %r15d,%ecx
426f(7): add 0xb0(%rsp),%ecx
4276(3): mov %edi,%r15d
4279(3): add %r10d,%ecx
427c(3): add %r14d,%ecx
427f(3): mov %r13d,%r14d
4282(3): xor %r12d,%r14d
4285(7): lea 0x983e5152(%rdx,%rcx,1),%edx
428c(4): mov %ecx,0x1c(%rsp)
4290(3): and %ebp,%r14d
4293(2): mov %ebp,%ecx
4295(3): and %esi,%r15d
4298(3): xor %r13d,%r14d
429b(3): ror $0xb,%ecx
429e(3): add %edx,%r14d
42a1(2): mov %ebp,%edx
42a3(3): ror $0x6,%edx
42a6(2): xor %edx,%ecx
42a8(2): mov %ebp,%edx
42aa(3): rol $0x7,%edx
42ad(2): xor %ecx,%edx
42af(2): mov %esi,%ecx
42b1(3): add %r14d,%edx
42b4(3): mov %esi,%r14d
42b7(3): ror $0x2,%ecx
42ba(4): ror $0xd,%r14d
42be(2): add %edx,%ebx
42c0(3): xor %ecx,%r14d
42c3(2): mov %esi,%ecx
42c5(3): rol $0xa,%ecx
42c8(3): xor %ecx,%r14d
42cb(2): mov %edi,%ecx
42cd(2): or %esi,%ecx
42cf(2): and %eax,%ecx
42d1(3): or %r15d,%ecx
42d4(5): mov 0x18(%rsp),%r15d
42d9(3): add %r14d,%ecx
42dc(2): add %edx,%ecx
42de(3): mov %r15d,%r14d
42e1(3): mov %r15d,%edx
42e4(3): rol $0xf,%edx
42e7(4): rol $0xd,%r14d
42eb(3): xor %edx,%r14d
42ee(3): mov %r15d,%edx
42f1(3): shr $0xa,%edx
42f4(3): xor %edx,%r14d
42f7(7): mov 0xb8(%rsp),%edx
42fe(3): ror $0x7,%edx
4301(3): mov %edx,%r15d
4304(7): mov 0xb8(%rsp),%edx
430b(3): rol $0xe,%edx
430e(3): xor %r15d,%edx
4311(8): mov 0xb8(%rsp),%r15d
4319(4): shr $0x3,%r15d
431d(3): xor %r15d,%edx
4320(7): add 0xb4(%rsp),%edx
4327(3): mov %esi,%r15d
432a(3): add %r9d,%edx
432d(3): and %ecx,%r15d
4330(3): add %r14d,%edx
4333(3): mov %r12d,%r14d
4336(3): xor %ebp,%r14d
4339(8): lea 0xa831c66d(%r13,%rdx,1),%r13d
4341(4): mov %edx,0x20(%rsp)
4345(3): and %ebx,%r14d
4348(2): mov %ebx,%edx
434a(3): xor %r12d,%r14d
434d(3): ror $0xb,%edx
4350(3): add %r14d,%r13d
4353(3): mov %ebx,%r14d
4356(4): ror $0x6,%r14d
435a(3): xor %r14d,%edx
435d(3): mov %ebx,%r14d
4360(4): rol $0x7,%r14d
4364(3): xor %edx,%r14d
4367(3): add %r13d,%r14d
436a(4): lea 0x0(%rax,%r14,1),%r13d
436e(2): mov %ecx,%eax
4370(3): ror $0x2,%eax
4373(2): mov %eax,%edx
4375(2): mov %ecx,%eax
4377(3): ror $0xd,%eax
437a(2): xor %edx,%eax
437c(2): mov %ecx,%edx
437e(3): rol $0xa,%edx
4381(2): xor %edx,%eax
4383(2): mov %esi,%edx
4385(2): or %ecx,%edx
4387(2): and %edi,%edx
4389(3): or %r15d,%edx
438c(5): mov 0x1c(%rsp),%r15d
4391(2): add %eax,%edx
4393(3): add %r14d,%edx
4396(3): mov %r15d,%eax
4399(3): mov %r15d,%r14d
439c(3): rol $0xf,%eax
439f(4): rol $0xd,%r14d
43a3(3): xor %eax,%r14d
43a6(3): mov %r15d,%eax
43a9(3): shr $0xa,%eax
43ac(3): xor %eax,%r14d
43af(7): mov 0xbc(%rsp),%eax
43b6(3): ror $0x7,%eax
43b9(3): mov %eax,%r15d
43bc(7): mov 0xbc(%rsp),%eax
43c3(3): rol $0xe,%eax
43c6(3): xor %r15d,%eax
43c9(8): mov 0xbc(%rsp),%r15d
43d1(4): shr $0x3,%r15d
43d5(3): xor %r15d,%eax
43d8(7): add 0xb8(%rsp),%eax
43df(3): mov %ecx,%r15d
43e2(3): and %edx,%r15d
43e5(3): add %r8d,%eax
43e8(3): add %r14d,%eax
43eb(3): mov %ebp,%r14d
43ee(3): xor %ebx,%r14d
43f1(8): lea 0xb00327c8(%r12,%rax,1),%r12d
43f9(4): mov %eax,0x24(%rsp)
43fd(3): and %r13d,%r14d
4400(3): mov %r13d,%eax
4403(3): xor %ebp,%r14d
4406(3): ror $0xb,%eax
4409(3): add %r14d,%r12d
440c(3): mov %r13d,%r14d
440f(4): ror $0x6,%r14d
4413(3): xor %r14d,%eax
4416(3): mov %r13d,%r14d
4419(4): rol $0x7,%r14d
441d(3): xor %eax,%r14d
4420(3): add %r12d,%r14d
4423(4): lea 0x0(%rdi,%r14,1),%r12d
4427(2): mov %edx,%edi
4429(3): ror $0x2,%edi
442c(2): mov %edi,%eax
442e(2): mov %edx,%edi
4430(3): ror $0xd,%edi
4433(2): xor %eax,%edi
4435(2): mov %edx,%eax
4437(3): rol $0xa,%eax
443a(2): xor %eax,%edi
443c(2): mov %ecx,%eax
443e(2): or %edx,%eax
4440(2): and %esi,%eax
4442(3): or %r15d,%eax
4445(5): mov 0x20(%rsp),%r15d
444a(2): add %edi,%eax
444c(3): add %r14d,%eax
444f(3): mov %r15d,%edi
4452(3): mov %r15d,%r14d
4455(3): rol $0xf,%edi
4458(4): rol $0xd,%r14d
445c(3): xor %edi,%r14d
445f(3): mov %r15d,%edi
4462(3): shr $0xa,%edi
4465(3): xor %edi,%r14d
4468(7): mov 0xc0(%rsp),%edi
446f(3): ror $0x7,%edi
4472(3): mov %edi,%r15d
4475(7): mov 0xc0(%rsp),%edi
447c(3): rol $0xe,%edi
447f(3): xor %r15d,%edi
4482(8): mov 0xc0(%rsp),%r15d
448a(4): shr $0x3,%r15d
448e(3): xor %r15d,%edi
4491(7): add 0xbc(%rsp),%edi
4498(3): mov %edx,%r15d
449b(4): add 0x8(%rsp),%edi
449f(3): and %eax,%r15d
44a2(3): add %r14d,%edi
44a5(3): mov %ebx,%r14d
44a8(3): xor %r13d,%r14d
44ab(7): lea 0xbf597fc7(%rbp,%rdi,1),%ebp
44b2(4): mov %edi,0x28(%rsp)
44b6(3): and %r12d,%r14d
44b9(3): mov %r12d,%edi
44bc(3): xor %ebx,%r14d
44bf(3): ror $0xb,%edi
44c2(3): add %r14d,%ebp
44c5(3): mov %r12d,%r14d
44c8(4): ror $0x6,%r14d
44cc(3): xor %r14d,%edi
44cf(3): mov %r12d,%r14d
44d2(4): rol $0x7,%r14d
44d6(3): xor %edi,%r14d
44d9(3): add %ebp,%r14d
44dc(4): lea 0x0(%rsi,%r14,1),%ebp
44e0(2): mov %eax,%esi
44e2(3): ror $0x2,%esi
44e5(2): mov %esi,%edi
44e7(2): mov %eax,%esi
44e9(3): ror $0xd,%esi
44ec(2): xor %edi,%esi
44ee(2): mov %eax,%edi
44f0(3): rol $0xa,%edi
44f3(2): xor %edi,%esi
44f5(2): mov %edx,%edi
44f7(2): or %eax,%edi
44f9(2): and %ecx,%edi
44fb(3): or %r15d,%edi
44fe(5): mov 0x24(%rsp),%r15d
4503(2): add %esi,%edi
4505(3): add %r14d,%edi
4508(3): mov %r15d,%esi
450b(3): mov %r15d,%r14d
450e(3): rol $0xf,%esi
4511(4): rol $0xd,%r14d
4515(3): xor %esi,%r14d
4518(3): mov %r15d,%esi
451b(3): shr $0xa,%esi
451e(3): xor %esi,%r14d
4521(7): mov 0xc4(%rsp),%esi
4528(3): ror $0x7,%esi
452b(3): mov %esi,%r15d
452e(7): mov 0xc4(%rsp),%esi
4535(3): rol $0xe,%esi
4538(3): xor %r15d,%esi
453b(8): mov 0xc4(%rsp),%r15d
4543(4): shr $0x3,%r15d
4547(3): xor %r15d,%esi
454a(7): add 0xc0(%rsp),%esi
4551(3): mov %eax,%r15d
4554(4): add 0xc(%rsp),%esi
4558(3): and %edi,%r15d
455b(3): add %r14d,%esi
455e(3): mov %r13d,%r14d
4561(3): xor %r12d,%r14d
4564(7): lea 0xc6e00bf3(%rbx,%rsi,1),%ebx
456b(4): mov %esi,0x2c(%rsp)
456f(3): and %ebp,%r14d
4572(2): mov %ebp,%esi
4574(3): xor %r13d,%r14d
4577(3): ror $0xb,%esi
457a(3): add %r14d,%ebx
457d(3): mov %ebp,%r14d
4580(4): ror $0x6,%r14d
4584(3): xor %r14d,%esi
4587(3): mov %ebp,%r14d
458a(4): rol $0x7,%r14d
458e(3): xor %esi,%r14d
4591(3): add %ebx,%r14d
4594(4): lea 0x0(%rcx,%r14,1),%ebx
4598(2): mov %edi,%ecx
459a(3): ror $0x2,%ecx
459d(2): mov %ecx,%esi
459f(2): mov %edi,%ecx
45a1(3): ror $0xd,%ecx
45a4(2): xor %esi,%ecx
45a6(2): mov %edi,%esi
45a8(3): rol $0xa,%esi
45ab(2): xor %esi,%ecx
45ad(2): mov %eax,%esi
45af(2): or %edi,%esi
45b1(2): and %edx,%esi
45b3(3): or %r15d,%esi
45b6(5): mov 0x28(%rsp),%r15d
45bb(2): add %ecx,%esi
45bd(3): add %r14d,%esi
45c0(3): mov %r15d,%ecx
45c3(3): mov %r15d,%r14d
45c6(3): rol $0xf,%ecx
45c9(4): rol $0xd,%r14d
45cd(3): xor %ecx,%r14d
45d0(3): mov %r15d,%ecx
45d3(3): shr $0xa,%ecx
45d6(3): xor %ecx,%r14d
45d9(7): mov 0xc8(%rsp),%ecx
45e0(3): ror $0x7,%ecx
45e3(3): mov %ecx,%r15d
45e6(7): mov 0xc8(%rsp),%ecx
45ed(3): rol $0xe,%ecx
45f0(3): xor %r15d,%ecx
45f3(8): mov 0xc8(%rsp),%r15d
45fb(4): shr $0x3,%r15d
45ff(3): xor %r15d,%ecx
4602(7): add 0xc4(%rsp),%ecx
4609(3): mov %edi,%r15d
460c(4): add 0x10(%rsp),%ecx
4610(3): and %esi,%r15d
4613(3): add %r14d,%ecx
4616(3): mov %r12d,%r14d
4619(3): xor %ebp,%r14d
461c(8): lea 0xd5a79147(%r13,%rcx,1),%r13d
4624(4): mov %ecx,0x30(%rsp)
4628(3): and %ebx,%r14d
462b(2): mov %ebx,%ecx
462d(3): xor %r12d,%r14d
4630(3): ror $0xb,%ecx
4633(3): add %r14d,%r13d
4636(3): mov %ebx,%r14d
4639(4): ror $0x6,%r14d
463d(3): xor %r14d,%ecx
4640(3): mov %ebx,%r14d
4643(4): rol $0x7,%r14d
4647(3): xor %ecx,%r14d
464a(3): add %r13d,%r14d
464d(4): lea 0x0(%rdx,%r14,1),%r13d
4651(2): mov %esi,%edx
4653(3): ror $0x2,%edx
4656(2): mov %edx,%ecx
4658(2): mov %esi,%edx
465a(3): ror $0xd,%edx
465d(2): xor %ecx,%edx
465f(2): mov %esi,%ecx
4661(3): rol $0xa,%ecx
4664(2): xor %ecx,%edx
4666(2): mov %edi,%ecx
4668(2): or %esi,%ecx
466a(2): and %eax,%ecx
466c(3): or %r15d,%ecx
466f(5): mov 0x2c(%rsp),%r15d
4674(2): add %edx,%ecx
4676(3): add %r14d,%ecx
4679(3): mov %r15d,%edx
467c(3): mov %r15d,%r14d
467f(3): rol $0xf,%edx
4682(4): rol $0xd,%r14d
4686(3): xor %edx,%r14d
4689(3): mov %r15d,%edx
468c(3): shr $0xa,%edx
468f(3): xor %edx,%r14d
4692(7): mov 0xcc(%rsp),%edx
4699(3): ror $0x7,%edx
469c(3): mov %edx,%r15d
469f(7): mov 0xcc(%rsp),%edx
46a6(3): rol $0xe,%edx
46a9(3): xor %r15d,%edx
46ac(8): mov 0xcc(%rsp),%r15d
46b4(4): shr $0x3,%r15d
46b8(3): xor %r15d,%edx
46bb(7): add 0xc8(%rsp),%edx
46c2(3): mov %esi,%r15d
46c5(4): add 0x18(%rsp),%edx
46c9(3): and %ecx,%r15d
46cc(3): add %r14d,%edx
46cf(3): mov %ebp,%r14d
46d2(3): xor %ebx,%r14d
46d5(8): lea 0x6ca6351(%r12,%rdx,1),%r12d
46dd(4): mov %edx,0x34(%rsp)
46e1(3): and %r13d,%r14d
46e4(3): mov %r13d,%edx
46e7(3): xor %ebp,%r14d
46ea(3): ror $0xb,%edx
46ed(3): add %r12d,%r14d
46f0(3): mov %r13d,%r12d
46f3(4): ror $0x6,%r12d
46f7(3): xor %r12d,%edx
46fa(3): mov %r13d,%r12d
46fd(4): rol $0x7,%r12d
4701(3): xor %edx,%r12d
4704(2): mov %ecx,%edx
4706(3): add %r14d,%r12d
4709(3): ror $0x2,%edx
470c(4): lea 0x0(%rax,%r12,1),%r14d
4710(2): mov %ecx,%eax
4712(3): ror $0xd,%eax
4715(2): xor %edx,%eax
4717(2): mov %ecx,%edx
4719(3): rol $0xa,%edx
471c(2): xor %edx,%eax
471e(2): mov %esi,%edx
4720(2): or %ecx,%edx
4722(2): and %edi,%edx
4724(3): or %r15d,%edx
4727(5): mov 0x30(%rsp),%r15d
472c(2): add %eax,%edx
472e(3): add %r12d,%edx
4731(3): mov %r15d,%eax
4734(3): mov %r15d,%r12d
4737(3): rol $0xf,%eax
473a(4): rol $0xd,%r12d
473e(3): xor %eax,%r12d
4741(3): mov %r15d,%eax
4744(3): shr $0xa,%eax
4747(3): xor %eax,%r12d
474a(3): mov %r11d,%eax
474d(3): ror $0x7,%eax
4750(3): mov %eax,%r15d
4753(3): mov %r11d,%eax
4756(3): rol $0xe,%eax
4759(3): xor %r15d,%eax
475c(3): mov %r11d,%r15d
475f(4): shr $0x3,%r15d
4763(3): xor %r15d,%eax
4766(7): add 0xcc(%rsp),%eax
476d(3): mov %ecx,%r15d
4770(4): add 0x1c(%rsp),%eax
4774(3): add %r12d,%eax
4777(3): mov %ebx,%r12d
477a(3): xor %r13d,%r12d
477d(7): lea 0x14292967(%rbp,%rax,1),%ebp
4784(4): mov %eax,0x38(%rsp)
4788(3): and %r14d,%r12d
478b(3): mov %r14d,%eax
478e(3): xor %ebx,%r12d
4791(3): ror $0xb,%eax
4794(3): add %ebp,%r12d
4797(3): mov %r14d,%ebp
479a(3): ror $0x6,%ebp
479d(2): xor %ebp,%eax
479f(3): mov %r14d,%ebp
47a2(3): rol $0x7,%ebp
47a5(2): xor %eax,%ebp
47a7(2): mov %edx,%eax
47a9(3): add %r12d,%ebp
47ac(3): mov %edx,%r12d
47af(3): ror $0x2,%eax
47b2(4): ror $0xd,%r12d
47b6(2): add %ebp,%edi
47b8(3): xor %eax,%r12d
47bb(2): mov %edx,%eax
47bd(3): rol $0xa,%eax
47c0(3): xor %eax,%r12d
47c3(2): mov %ecx,%eax
47c5(2): or %edx,%eax
47c7(2): and %esi,%eax
47c9(3): and %edx,%r15d
47cc(3): or %r15d,%eax
47cf(5): mov 0x34(%rsp),%r15d
47d4(3): add %r12d,%eax
47d7(2): add %ebp,%eax
47d9(3): mov %r15d,%r12d
47dc(3): mov %r15d,%ebp
47df(3): rol $0xf,%ebp
47e2(4): rol $0xd,%r12d
47e6(3): xor %ebp,%r12d
47e9(3): mov %r15d,%ebp
47ec(3): shr $0xa,%ebp
47ef(3): xor %ebp,%r12d
47f2(3): mov %r10d,%ebp
47f5(3): ror $0x7,%ebp
47f8(3): mov %ebp,%r15d
47fb(3): mov %r10d,%ebp
47fe(3): rol $0xe,%ebp
4801(3): xor %r15d,%ebp
4804(3): mov %r10d,%r15d
4807(4): shr $0x3,%r15d
480b(3): xor %r15d,%ebp
480e(3): add %ebp,%r11d
4811(5): add 0x20(%rsp),%r11d
4816(3): mov %r13d,%ebp
4819(3): xor %r14d,%ebp
481c(2): and %edi,%ebp
481e(3): xor %r13d,%ebp
4821(3): add %r12d,%r11d
4824(3): mov %edx,%r12d
4827(8): lea 0x27b70a85(%rbx,%r11,1),%ebx
482f(3): mov %r11d,%r15d
4832(3): mov %edi,%r11d
4835(4): ror $0xb,%r11d
4839(5): mov %r15d,0x68(%rsp)
483e(2): add %ebx,%ebp
4840(2): mov %edi,%ebx
4842(3): ror $0x6,%ebx
4845(3): xor %ebx,%r11d
4848(2): mov %edi,%ebx
484a(3): rol $0x7,%ebx
484d(3): xor %r11d,%ebx
4850(3): mov %eax,%r11d
4853(2): add %ebp,%ebx
4855(2): mov %eax,%ebp
4857(4): ror $0x2,%r11d
485b(3): ror $0xd,%ebp
485e(2): add %ebx,%esi
4860(3): xor %r11d,%ebp
4863(3): mov %eax,%r11d
4866(4): rol $0xa,%r11d
486a(3): xor %r11d,%ebp
486d(3): mov %edx,%r11d
4870(3): and %eax,%r12d
4873(3): or %eax,%r11d
4876(3): and %ecx,%r11d
4879(3): or %r12d,%r11d
487c(5): mov 0x38(%rsp),%r12d
4881(3): add %ebp,%r11d
4884(3): add %ebx,%r11d
4887(3): mov %r12d,%ebp
488a(3): mov %r12d,%ebx
488d(3): rol $0xf,%ebx
4890(3): rol $0xd,%ebp
4893(2): xor %ebx,%ebp
4895(3): mov %r12d,%ebx
4898(3): shr $0xa,%ebx
489b(2): xor %ebx,%ebp
489d(3): mov %r9d,%ebx
48a0(3): ror $0x7,%ebx
48a3(3): mov %ebx,%r12d
48a6(3): mov %r9d,%ebx
48a9(3): rol $0xe,%ebx
48ac(3): xor %r12d,%ebx
48af(3): mov %r9d,%r12d
48b2(4): shr $0x3,%r12d
48b6(3): xor %r12d,%ebx
48b9(3): mov %r15d,%r12d
48bc(3): add %ebx,%r10d
48bf(5): add 0x24(%rsp),%r10d
48c4(3): mov %r14d,%ebx
48c7(2): xor %edi,%ebx
48c9(2): and %esi,%ebx
48cb(3): xor %r14d,%ebx
48ce(3): add %ebp,%r10d
48d1(8): lea 0x2e1b2138(%r13,%r10,1),%ebp
48d9(3): mov %esi,%r13d
48dc(5): mov %r10d,0x3c(%rsp)
48e1(4): ror $0x6,%r13d
48e5(2): add %ebx,%ebp
48e7(3): mov %r13d,%ebx
48ea(3): mov %esi,%r13d
48ed(4): ror $0xb,%r13d
48f1(3): mov %r13d,%r10d
48f4(3): mov %esi,%r13d
48f7(4): rol $0x7,%r13d
48fb(3): xor %ebx,%r10d
48fe(3): mov %r13d,%ebx
4901(3): mov %r11d,%r13d
4904(3): xor %r10d,%ebx
4907(4): ror $0x2,%r13d
490b(2): add %ebp,%ebx
490d(3): mov %r13d,%r10d
4910(3): mov %r11d,%r13d
4913(2): add %ebx,%ecx
4915(4): ror $0xd,%r13d
4919(4): rol $0xd,%r12d
491d(3): mov %r13d,%ebp
4920(3): mov %r11d,%r13d
4923(3): xor %r10d,%ebp
4926(4): rol $0xa,%r13d
492a(3): xor %r13d,%ebp
492d(3): mov %eax,%r13d
4930(3): or %r11d,%r13d
4933(3): mov %r13d,%r10d
4936(3): mov %eax,%r13d
4939(3): and %r11d,%r13d
493c(3): and %edx,%r10d
493f(3): or %r13d,%r10d
4942(3): mov %r15d,%r13d
4945(3): add %ebp,%r10d
4948(3): mov %r12d,%ebp
494b(3): mov %r8d,%r12d
494e(3): add %ebx,%r10d
4951(3): mov %r15d,%ebx
4954(4): ror $0x7,%r12d
4958(3): rol $0xf,%ebx
495b(4): shr $0xa,%r13d
495f(5): mov 0x8(%rsp),%r15d
4964(2): xor %ebx,%ebp
4966(3): mov %r8d,%ebx
4969(3): rol $0xe,%ebx
496c(3): xor %r13d,%ebp
496f(3): xor %r12d,%ebx
4972(3): mov %r8d,%r12d
4975(4): shr $0x3,%r12d
4979(3): xor %r12d,%ebx
497c(3): mov %r11d,%r12d
497f(3): add %ebx,%r9d
4982(5): add 0x28(%rsp),%r9d
4987(2): mov %edi,%ebx
4989(2): xor %esi,%ebx
498b(2): and %ecx,%ebx
498d(2): xor %edi,%ebx
498f(3): add %ebp,%r9d
4992(3): mov %r9d,%r13d
4995(8): lea 0x4d2c6dfc(%r14,%r9,1),%ebp
499d(3): mov %ecx,%r9d
49a0(4): ror $0x6,%r9d
49a4(5): mov 0xc(%rsp),%r14d
49a9(5): mov %r13d,0x6c(%rsp)
49ae(2): add %ebx,%ebp
49b0(3): mov %r9d,%ebx
49b3(3): mov %ecx,%r9d
49b6(4): ror $0xb,%r9d
49ba(3): xor %ebx,%r9d
49bd(2): mov %ecx,%ebx
49bf(3): rol $0x7,%ebx
49c2(3): xor %r9d,%ebx
49c5(3): mov %r10d,%r9d
49c8(2): add %ebp,%ebx
49ca(4): ror $0x2,%r9d
49ce(3): and %r10d,%r12d
49d1(3): lea 0x0(%rdx,%rbx,1),%ebp
49d4(3): mov %r10d,%edx
49d7(3): ror $0xd,%edx
49da(3): xor %r9d,%edx
49dd(3): mov %r10d,%r9d
49e0(4): rol $0xa,%r9d
49e4(3): xor %r9d,%edx
49e7(3): mov %r11d,%r9d
49ea(3): or %r10d,%r9d
49ed(3): and %eax,%r9d
49f0(3): or %r12d,%r9d
49f3(5): mov 0x3c(%rsp),%r12d
49f8(3): add %edx,%r9d
49fb(3): add %ebx,%r9d
49fe(3): mov %r12d,%edx
4a01(3): mov %r12d,%ebx
4a04(3): rol $0xf,%ebx
4a07(3): rol $0xd,%edx
4a0a(2): xor %ebx,%edx
4a0c(3): mov %r12d,%ebx
4a0f(3): mov %r15d,%r12d
4a12(3): shr $0xa,%ebx
4a15(4): ror $0x7,%r12d
4a19(2): xor %ebx,%edx
4a1b(3): mov %r15d,%ebx
4a1e(3): rol $0xe,%ebx
4a21(3): xor %r12d,%ebx
4a24(3): mov %r15d,%r12d
4a27(4): shr $0x3,%r12d
4a2b(3): xor %r12d,%ebx
4a2e(3): add %ebx,%r8d
4a31(5): add 0x2c(%rsp),%r8d
4a36(3): mov %r10d,%ebx
4a39(3): add %edx,%r8d
4a3c(2): mov %esi,%edx
4a3e(2): xor %ecx,%edx
4a40(8): lea 0x53380d13(%rdi,%r8,1),%edi
4a48(3): mov %r8d,%r12d
4a4b(2): and %ebp,%edx
4a4d(3): mov %ebp,%r8d
4a50(5): mov %r12d,0x70(%rsp)
4a55(2): xor %esi,%edx
4a57(4): ror $0xb,%r8d
4a5b(2): add %edx,%edi
4a5d(2): mov %ebp,%edx
4a5f(3): ror $0x6,%edx
4a62(3): xor %edx,%r8d
4a65(2): mov %ebp,%edx
4a67(3): rol $0x7,%edx
4a6a(3): and %r9d,%ebx
4a6d(3): xor %r8d,%edx
4a70(3): mov %r9d,%r8d
4a73(2): add %edi,%edx
4a75(3): mov %r9d,%edi
4a78(4): ror $0x2,%r8d
4a7c(3): ror $0xd,%edi
4a7f(2): add %edx,%eax
4a81(3): xor %r8d,%edi
4a84(3): mov %r9d,%r8d
4a87(4): rol $0xa,%r8d
4a8b(3): xor %r8d,%edi
4a8e(3): mov %r10d,%r8d
4a91(3): or %r9d,%r8d
4a94(3): and %r11d,%r8d
4a97(3): or %ebx,%r8d
4a9a(3): mov %r14d,%ebx
4a9d(3): add %edi,%r8d
4aa0(3): mov %r13d,%edi
4aa3(3): ror $0x7,%ebx
4aa6(3): add %edx,%r8d
4aa9(3): mov %r13d,%edx
4aac(3): rol $0xd,%edi
4aaf(3): rol $0xf,%edx
4ab2(2): xor %edx,%edi
4ab4(3): mov %r13d,%edx
4ab7(3): shr $0xa,%edx
4aba(2): xor %edx,%edi
4abc(3): mov %r14d,%edx
4abf(3): rol $0xe,%edx
4ac2(2): xor %ebx,%edx
4ac4(3): mov %r14d,%ebx
4ac7(3): shr $0x3,%ebx
4aca(2): xor %ebx,%edx
4acc(3): add %r15d,%edx
4acf(4): add 0x30(%rsp),%edx
4ad3(2): add %edx,%edi
4ad5(2): mov %ecx,%edx
4ad7(2): xor %ebp,%edx
4ad9(7): lea 0x650a7354(%rsi,%rdi,1),%esi
4ae0(3): mov %edi,%r13d
4ae3(2): and %eax,%edx
4ae5(2): mov %eax,%edi
4ae7(2): xor %ecx,%edx
4ae9(2): add %edx,%esi
4aeb(3): ror $0x6,%edi
4aee(2): mov %edi,%edx
4af0(2): mov %eax,%edi
4af2(3): ror $0xb,%edi
4af5(2): mov %edi,%ebx
4af7(2): mov %eax,%edi
4af9(3): rol $0x7,%edi
4afc(2): xor %edx,%ebx
4afe(2): mov %edi,%edx
4b00(3): mov %r8d,%edi
4b03(2): xor %ebx,%edx
4b05(3): rol $0xa,%edi
4b08(2): add %esi,%edx
4b0a(3): mov %r8d,%esi
4b0d(3): ror $0x2,%esi
4b10(3): add %edx,%r11d
4b13(2): mov %esi,%ebx
4b15(3): mov %r8d,%esi
4b18(3): ror $0xd,%esi
4b1b(2): xor %ebx,%esi
4b1d(2): xor %edi,%esi
4b1f(3): mov %r9d,%edi
4b22(3): or %r8d,%edi
4b25(2): mov %edi,%ebx
4b27(3): mov %r9d,%edi
4b2a(3): and %r8d,%edi
4b2d(3): and %r10d,%ebx
4b30(2): or %edi,%ebx
4b32(3): mov %r12d,%edi
4b35(2): add %esi,%ebx
4b37(3): rol $0xf,%edi
4b3a(2): add %edx,%ebx
4b3c(2): mov %edi,%edx
4b3e(3): mov %r12d,%edi
4b41(3): rol $0xd,%edi
4b44(2): xor %edx,%edi
4b46(3): mov %r12d,%edx
4b49(5): mov 0x10(%rsp),%r12d
4b4e(3): shr $0xa,%edx
4b51(2): xor %edx,%edi
4b53(3): mov %r12d,%esi
4b56(3): mov %r12d,%edx
4b59(3): ror $0x7,%esi
4b5c(3): rol $0xe,%edx
4b5f(2): xor %esi,%edx
4b61(3): mov %r12d,%esi
4b64(3): shr $0x3,%esi
4b67(2): xor %esi,%edx
4b69(3): add %r14d,%edx
4b6c(4): add 0x34(%rsp),%edx
4b70(2): add %edx,%edi
4b72(2): mov %ebp,%edx
4b74(2): xor %eax,%edx
4b76(7): lea 0x766a0abb(%rcx,%rdi,1),%ecx
4b7d(4): mov %edi,0x14(%rsp)
4b81(3): and %r11d,%edx
4b84(3): mov %r11d,%edi
4b87(5): mov %r13d,0x48(%rsp)
4b8c(2): xor %ebp,%edx
4b8e(3): ror $0xb,%edi
4b91(5): mov 0x18(%rsp),%r14d
4b96(2): add %edx,%ecx
4b98(3): mov %r11d,%edx
4b9b(3): mov %edi,%r15d
4b9e(3): ror $0x6,%edx
4ba1(2): mov %ebx,%edi
4ba3(3): xor %edx,%r15d
4ba6(3): mov %r11d,%edx
4ba9(3): rol $0xa,%edi
4bac(3): rol $0x7,%edx
4baf(3): mov %r14d,%esi
4bb2(3): xor %r15d,%edx
4bb5(3): rol $0xe,%esi
4bb8(2): add %ecx,%edx
4bba(2): mov %ebx,%ecx
4bbc(3): ror $0x2,%ecx
4bbf(3): add %edx,%r10d
4bc2(3): mov %ecx,%r15d
4bc5(2): mov %ebx,%ecx
4bc7(3): ror $0xd,%ecx
4bca(3): xor %r15d,%ecx
4bcd(2): xor %edi,%ecx
4bcf(3): mov %r8d,%edi
4bd2(2): or %ebx,%edi
4bd4(3): mov %edi,%r15d
4bd7(3): mov %r8d,%edi
4bda(2): and %ebx,%edi
4bdc(3): and %r9d,%r15d
4bdf(3): or %edi,%r15d
4be2(3): mov %r10d,%edi
4be5(3): add %ecx,%r15d
4be8(3): mov %r13d,%ecx
4beb(3): add %edx,%r15d
4bee(3): mov %r13d,%edx
4bf1(3): rol $0xf,%ecx
4bf4(3): rol $0xd,%edx
4bf7(2): xor %ecx,%edx
4bf9(3): mov %r13d,%ecx
4bfc(3): shr $0xa,%ecx
4bff(2): xor %ecx,%edx
4c01(3): mov %r14d,%ecx
4c04(3): ror $0x7,%ecx
4c07(2): xor %ecx,%esi
4c09(3): mov %r14d,%ecx
4c0c(3): shr $0x3,%ecx
4c0f(2): xor %ecx,%esi
4c11(3): add %r12d,%esi
4c14(4): add 0x38(%rsp),%esi
4c18(3): ror $0xb,%edi
4c1b(3): lea 0x0(%rdx,%rsi,1),%ecx
4c1e(2): mov %eax,%edx
4c20(2): mov %ebx,%esi
4c22(3): xor %r11d,%edx
4c25(3): and %r15d,%esi
4c28(3): mov %ecx,%r12d
4c2b(3): and %r10d,%edx
4c2e(7): lea 0x81c2c92e(%rbp,%rcx,1),%ecx
4c35(2): xor %eax,%edx
4c37(4): mov 0x1c(%rsp),%ebp
4c3b(5): mov %r12d,0x1c(%rsp)
4c40(2): add %edx,%ecx
4c42(3): mov %r10d,%edx
4c45(3): ror $0x6,%edx
4c48(2): xor %edx,%edi
4c4a(3): mov %r10d,%edx
4c4d(3): rol $0x7,%edx
4c50(2): xor %edi,%edx
4c52(3): mov %r15d,%edi
4c55(2): add %ecx,%edx
4c57(3): mov %r15d,%ecx
4c5a(3): ror $0x2,%edi
4c5d(3): ror $0xd,%ecx
4c60(3): add %edx,%r9d
4c63(2): xor %edi,%ecx
4c65(3): mov %r15d,%edi
4c68(3): rol $0xa,%edi
4c6b(2): xor %edi,%ecx
4c6d(2): mov %ebx,%edi
4c6f(3): or %r15d,%edi
4c72(3): and %r8d,%edi
4c75(2): or %esi,%edi
4c77(4): mov 0x14(%rsp),%esi
4c7b(2): add %ecx,%edi
4c7d(2): add %edx,%edi
4c7f(2): mov %esi,%ecx
4c81(2): mov %esi,%edx
4c83(3): rol $0xd,%ecx
4c86(3): rol $0xf,%edx
4c89(3): mov %ecx,%r13d
4c8c(3): xor %edx,%r13d
4c8f(2): mov %esi,%edx
4c91(2): mov %ebp,%esi
4c93(3): shr $0xa,%edx
4c96(3): rol $0xe,%esi
4c99(3): xor %edx,%r13d
4c9c(2): mov %ebp,%edx
4c9e(3): ror $0x7,%edx
4ca1(2): xor %edx,%esi
4ca3(2): mov %ebp,%edx
4ca5(3): shr $0x3,%edx
4ca8(2): xor %edx,%esi
4caa(3): mov %r11d,%edx
4cad(3): add %r14d,%esi
4cb0(4): add 0x68(%rsp),%esi
4cb4(3): xor %r10d,%edx
4cb7(3): and %r9d,%edx
4cba(5): mov 0x20(%rsp),%r14d
4cbf(3): xor %r11d,%edx
4cc2(5): lea 0x0(%r13,%rsi,1),%ecx
4cc7(3): mov %r9d,%esi
4cca(3): mov %r15d,%r13d
4ccd(3): ror $0xb,%esi
4cd0(3): and %edi,%r13d
4cd3(7): lea 0x92722c85(%rax,%rcx,1),%eax
4cda(4): mov %ecx,0x8(%rsp)
4cde(3): mov %r14d,%ecx
4ce1(3): rol $0xe,%ecx
4ce4(2): add %eax,%edx
4ce6(3): mov %r9d,%eax
4ce9(3): ror $0x6,%eax
4cec(2): xor %eax,%esi
4cee(3): mov %r9d,%eax
4cf1(3): rol $0x7,%eax
4cf4(2): xor %esi,%eax
4cf6(2): mov %edi,%esi
4cf8(2): add %edx,%eax
4cfa(2): mov %edi,%edx
4cfc(3): ror $0x2,%esi
4cff(3): ror $0xd,%edx
4d02(3): add %eax,%r8d
4d05(2): xor %esi,%edx
4d07(2): mov %edi,%esi
4d09(3): rol $0xa,%esi
4d0c(2): xor %esi,%edx
4d0e(3): mov %r15d,%esi
4d11(2): or %edi,%esi
4d13(2): and %ebx,%esi
4d15(3): or %r13d,%esi
4d18(3): mov %r12d,%r13d
4d1b(2): add %edx,%esi
4d1d(4): rol $0xd,%r13d
4d21(2): add %eax,%esi
4d23(3): mov %r12d,%eax
4d26(3): rol $0xf,%eax
4d29(3): xor %eax,%r13d
4d2c(3): mov %r12d,%eax
4d2f(3): mov %r10d,%r12d
4d32(3): shr $0xa,%eax
4d35(3): xor %eax,%r13d
4d38(3): mov %r14d,%eax
4d3b(3): ror $0x7,%eax
4d3e(2): xor %eax,%ecx
4d40(3): mov %r14d,%eax
4d43(3): xor %r9d,%r12d
4d46(3): shr $0x3,%eax
4d49(2): xor %eax,%ecx
4d4b(3): mov %r12d,%eax
4d4e(3): mov %r8d,%r12d
4d51(2): add %ebp,%ecx
4d53(4): add 0x3c(%rsp),%ecx
4d57(3): and %r8d,%eax
4d5a(3): xor %r10d,%eax
4d5d(4): rol $0x7,%r12d
4d61(4): mov 0x8(%rsp),%ebp
4d65(3): add %ecx,%r13d
4d68(2): mov %esi,%ecx
4d6a(8): lea 0xa2bfe8a1(%r11,%r13,1),%edx
4d72(3): mov %r8d,%r11d
4d75(5): mov %r13d,0x20(%rsp)
4d7a(4): ror $0x6,%r11d
4d7e(2): add %eax,%edx
4d80(3): mov %r11d,%eax
4d83(3): mov %r8d,%r11d
4d86(4): ror $0xb,%r11d
4d8a(3): xor %eax,%r11d
4d8d(3): mov %r12d,%eax
4d90(3): mov %edi,%r12d
4d93(3): xor %r11d,%eax
4d96(3): mov %esi,%r11d
4d99(3): and %esi,%r12d
4d9c(2): add %edx,%eax
4d9e(2): mov %esi,%edx
4da0(4): ror $0x2,%r11d
4da4(3): ror $0xd,%edx
4da7(2): add %eax,%ebx
4da9(3): xor %r11d,%edx
4dac(3): mov %esi,%r11d
4daf(4): rol $0xa,%r11d
4db3(3): xor %r11d,%edx
4db6(3): mov %edi,%r11d
4db9(3): or %esi,%r11d
4dbc(3): and %r15d,%r11d
4dbf(3): or %r12d,%r11d
4dc2(3): mov %ebp,%r12d
4dc5(3): add %edx,%r11d
4dc8(4): rol $0xd,%r12d
4dcc(3): add %eax,%r11d
4dcf(2): mov %ebp,%eax
4dd1(3): rol $0xf,%eax
4dd4(3): xor %eax,%r12d
4dd7(2): mov %ebp,%eax
4dd9(4): mov 0x24(%rsp),%ebp
4ddd(3): shr $0xa,%eax
4de0(3): xor %eax,%r12d
4de3(3): and %r11d,%ecx
4de6(2): mov %ebp,%eax
4de8(2): mov %ebp,%edx
4dea(3): ror $0x7,%eax
4ded(3): rol $0xe,%edx
4df0(2): xor %eax,%edx
4df2(2): mov %ebp,%eax
4df4(3): shr $0x3,%eax
4df7(2): xor %eax,%edx
4df9(3): add %r14d,%edx
4dfc(4): add 0x6c(%rsp),%edx
4e00(5): mov 0x28(%rsp),%r14d
4e05(3): add %r12d,%edx
4e08(3): mov %r9d,%r12d
4e0b(3): xor %r8d,%r12d
4e0e(4): mov %edx,0xc(%rsp)
4e12(8): lea 0xa81a664b(%r10,%rdx,1),%edx
4e1a(3): mov %r12d,%eax
4e1d(3): mov %ebx,%r10d
4e20(3): mov %ebx,%r12d
4e23(2): and %ebx,%eax
4e25(4): ror $0x6,%r10d
4e29(4): rol $0x7,%r12d
4e2d(3): xor %r9d,%eax
4e30(2): add %eax,%edx
4e32(3): mov %r10d,%eax
4e35(3): mov %ebx,%r10d
4e38(4): ror $0xb,%r10d
4e3c(3): xor %eax,%r10d
4e3f(3): mov %r12d,%eax
4e42(3): mov %r11d,%r12d
4e45(3): xor %r10d,%eax
4e48(4): ror $0xd,%r12d
4e4c(3): mov %r11d,%r10d
4e4f(2): add %edx,%eax
4e51(4): ror $0x2,%r10d
4e55(3): mov %r12d,%edx
4e58(3): xor %r10d,%edx
4e5b(3): mov %r11d,%r10d
4e5e(3): mov %r13d,%r12d
4e61(4): rol $0xa,%r10d
4e65(3): add %eax,%r15d
4e68(3): xor %r10d,%edx
4e6b(3): mov %esi,%r10d
4e6e(3): or %r11d,%r10d
4e71(3): and %edi,%r10d
4e74(3): or %ecx,%r10d
4e77(3): mov %r11d,%ecx
4e7a(3): add %edx,%r10d
4e7d(3): mov %r13d,%edx
4e80(3): add %eax,%r10d
4e83(3): rol $0xf,%edx
4e86(4): rol $0xd,%r12d
4e8a(3): xor %edx,%r12d
4e8d(3): mov %r13d,%edx
4e90(3): mov %r14d,%eax
4e93(3): shr $0xa,%edx
4e96(3): rol $0xe,%eax
4e99(3): and %r10d,%ecx
4e9c(3): xor %edx,%r12d
4e9f(3): mov %r14d,%edx
4ea2(3): ror $0x7,%edx
4ea5(2): xor %edx,%eax
4ea7(3): mov %r14d,%edx
4eaa(3): shr $0x3,%edx
4ead(2): xor %edx,%eax
4eaf(2): add %ebp,%eax
4eb1(4): add 0x70(%rsp),%eax
4eb5(4): lea 0x0(%r12,%rax,1),%ebp
4eb9(3): mov %r8d,%r12d
4ebc(3): xor %ebx,%r12d
4ebf(3): mov %r12d,%eax
4ec2(8): lea 0xc24b8b70(%r9,%rbp,1),%edx
4eca(3): mov %r15d,%r9d
4ecd(3): and %r15d,%eax
4ed0(4): ror $0x6,%r9d
4ed4(3): mov %ebp,%r13d
4ed7(3): xor %r8d,%eax
4eda(3): mov %r15d,%ebp
4edd(5): mov %r13d,0x24(%rsp)
4ee2(2): add %eax,%edx
4ee4(3): mov %r9d,%eax
4ee7(3): mov %r15d,%r9d
4eea(3): rol $0x7,%ebp
4eed(4): ror $0xb,%r9d
4ef1(3): xor %eax,%r9d
4ef4(2): mov %ebp,%eax
4ef6(3): xor %r9d,%eax
4ef9(3): mov %r10d,%r9d
4efc(2): add %edx,%eax
4efe(4): ror $0x2,%r9d
4f02(3): lea 0x0(%rdi,%rax,1),%ebp
4f05(3): mov %r10d,%edi
4f08(3): ror $0xd,%edi
4f0b(2): mov %edi,%edx
4f0d(4): mov 0xc(%rsp),%edi
4f11(3): xor %r9d,%edx
4f14(3): mov %r10d,%r9d
4f17(4): rol $0xa,%r9d
4f1b(3): xor %r9d,%edx
4f1e(3): mov %r11d,%r9d
4f21(3): mov %edi,%r12d
4f24(3): or %r10d,%r9d
4f27(3): and %esi,%r9d
4f2a(3): or %ecx,%r9d
4f2d(2): mov %ebx,%ecx
4f2f(3): add %edx,%r9d
4f32(2): mov %edi,%edx
4f34(3): add %eax,%r9d
4f37(3): rol $0xf,%edx
4f3a(4): rol $0xd,%r12d
4f3e(3): mov %r12d,%eax
4f41(5): mov 0x2c(%rsp),%r12d
4f46(3): shr $0xa,%edi
4f49(2): xor %edx,%eax
4f4b(3): xor %r15d,%ecx
4f4e(2): xor %edi,%eax
4f50(2): and %ebp,%ecx
4f52(3): mov %r12d,%edx
4f55(3): mov %r12d,%edi
4f58(2): xor %ebx,%ecx
4f5a(3): ror $0x7,%edx
4f5d(3): rol $0xe,%edi
4f60(2): xor %edx,%edi
4f62(3): mov %r12d,%edx
4f65(3): shr $0x3,%edx
4f68(2): xor %edx,%edi
4f6a(3): add %r14d,%edi
4f6d(4): add 0x48(%rsp),%edi
4f71(4): lea 0x0(%rax,%rdi,1),%r14d
4f75(3): mov %r13d,%edi
4f78(8): lea 0xc76c51a3(%r8,%r14,1),%eax
4f80(3): mov %ebp,%r8d
4f83(5): mov %r14d,0x10(%rsp)
4f88(4): ror $0x6,%r8d
4f8c(3): mov %r13d,%r14d
4f8f(2): add %ecx,%eax
4f91(3): mov %r8d,%ecx
4f94(3): mov %ebp,%r8d
4f97(4): ror $0xb,%r8d
4f9b(3): mov %r8d,%edx
4f9e(3): mov %ebp,%r8d
4fa1(4): rol $0x7,%r8d
4fa5(2): xor %ecx,%edx
4fa7(3): mov %r8d,%ecx
4faa(3): mov %r9d,%r8d
4fad(4): ror $0x2,%r8d
4fb1(2): xor %edx,%ecx
4fb3(3): mov %r8d,%edx
4fb6(3): mov %r9d,%r8d
4fb9(2): add %eax,%ecx
4fbb(4): ror $0xd,%r8d
4fbf(3): lea 0x0(%rsi,%rcx,1),%eax
4fc2(3): mov %r8d,%esi
4fc5(3): mov %r9d,%r8d
4fc8(2): xor %edx,%esi
4fca(4): rol $0xa,%r8d
4fce(3): xor %r8d,%esi
4fd1(3): mov %r10d,%r8d
4fd4(3): or %r9d,%r8d
4fd7(3): mov %r8d,%edx
4fda(3): mov %r10d,%r8d
4fdd(3): and %r9d,%r8d
4fe0(3): and %r11d,%edx
4fe3(3): or %r8d,%edx
4fe6(3): mov %r13d,%r8d
4fe9(2): add %esi,%edx
4feb(2): add %ecx,%edx
4fed(4): rol $0xf,%r14d
4ff1(3): rol $0xd,%edi
4ff4(3): xor %r14d,%edi
4ff7(5): mov 0x30(%rsp),%r14d
4ffc(4): shr $0xa,%r8d
5000(3): xor %r8d,%edi
5003(3): mov %r14d,%ecx
5006(3): mov %r14d,%esi
5009(3): ror $0x7,%ecx
500c(3): rol $0xe,%esi
500f(2): xor %ecx,%esi
5011(3): mov %r14d,%ecx
5014(3): shr $0x3,%ecx
5017(2): xor %ecx,%esi
5019(2): mov %eax,%ecx
501b(3): add %r12d,%esi
501e(4): add 0x14(%rsp),%esi
5022(3): ror $0xb,%ecx
5025(5): mov 0x10(%rsp),%r12d
502a(2): add %edi,%esi
502c(2): mov %esi,%edi
502e(3): mov %r15d,%esi
5031(2): xor %ebp,%esi
5033(4): mov %edi,0x18(%rsp)
5037(7): lea 0xd192e819(%rbx,%rdi,1),%edi
503e(2): and %eax,%esi
5040(4): mov 0x34(%rsp),%ebx
5044(3): xor %r15d,%esi
5047(2): add %esi,%edi
5049(2): mov %eax,%esi
504b(3): ror $0x6,%esi
504e(2): xor %esi,%ecx
5050(2): mov %eax,%esi
5052(3): rol $0x7,%esi
5055(2): xor %ecx,%esi
5057(2): add %edi,%esi
5059(4): lea 0x0(%r11,%rsi,1),%r8d
505d(3): mov %edx,%r11d
5060(4): ror $0x2,%r11d
5064(3): mov %r11d,%ecx
5067(3): mov %edx,%r11d
506a(4): ror $0xd,%r11d
506e(3): mov %r11d,%edi
5071(3): mov %edx,%r11d
5074(2): xor %ecx,%edi
5076(4): rol $0xa,%r11d
507a(3): xor %r11d,%edi
507d(3): mov %r9d,%r11d
5080(3): or %edx,%r11d
5083(3): mov %r11d,%ecx
5086(3): mov %r9d,%r11d
5089(3): and %edx,%r11d
508c(3): and %r10d,%ecx
508f(3): or %r11d,%ecx
5092(3): mov %ebx,%r11d
5095(2): add %edi,%ecx
5097(3): mov %r12d,%edi
509a(4): ror $0x7,%r11d
509e(2): add %esi,%ecx
50a0(3): mov %r12d,%esi
50a3(3): rol $0xd,%edi
50a6(3): rol $0xf,%esi
50a9(2): xor %esi,%edi
50ab(3): mov %r12d,%esi
50ae(3): shr $0xa,%esi
50b1(2): xor %esi,%edi
50b3(2): mov %ebx,%esi
50b5(3): rol $0xe,%esi
50b8(3): xor %r11d,%esi
50bb(3): mov %ebx,%r11d
50be(4): shr $0x3,%r11d
50c2(3): xor %r11d,%esi
50c5(3): add %r14d,%esi
50c8(4): add 0x1c(%rsp),%esi
50cc(4): lea 0x0(%rdi,%rsi,1),%r14d
50d0(2): mov %ebp,%esi
50d2(2): xor %eax,%esi
50d4(3): and %r8d,%esi
50d7(8): lea 0xd6990624(%r15,%r14,1),%edi
50df(3): mov %r14d,%r12d
50e2(2): xor %ebp,%esi
50e4(3): mov %r8d,%r14d
50e7(5): mov 0x38(%rsp),%r15d
50ec(2): add %esi,%edi
50ee(4): ror $0xb,%r14d
50f2(3): mov %r8d,%esi
50f5(3): ror $0x6,%esi
50f8(3): mov %r14d,%r13d
50fb(3): mov %ecx,%r14d
50fe(3): xor %esi,%r13d
5101(3): mov %r8d,%esi
5104(4): ror $0x2,%r14d
5108(3): rol $0x7,%esi
510b(5): mov %r12d,0x28(%rsp)
5110(3): xor %r13d,%esi
5113(3): mov %r14d,%r13d
5116(3): mov %ecx,%r14d
5119(4): ror $0xd,%r14d
511d(2): add %edi,%esi
511f(3): mov %r14d,%edi
5122(3): mov %ecx,%r14d
5125(4): lea 0x0(%r10,%rsi,1),%r11d
5129(3): xor %r13d,%edi
512c(4): rol $0xa,%r14d
5130(3): mov %edx,%r10d
5133(3): xor %r14d,%edi
5136(3): mov %edx,%r14d
5139(3): or %ecx,%r14d
513c(3): mov %r14d,%r13d
513f(3): and %r9d,%r13d
5142(3): and %ecx,%r10d
5145(3): or %r10d,%r13d
5148(5): mov 0x18(%rsp),%r10d
514d(3): add %edi,%r13d
5150(3): add %esi,%r13d
5153(3): mov %r10d,%edi
5156(3): mov %r10d,%esi
5159(3): rol $0xf,%esi
515c(3): rol $0xd,%edi
515f(2): xor %esi,%edi
5161(3): mov %r10d,%esi
5164(3): mov %r15d,%r10d
5167(3): shr $0xa,%esi
516a(4): ror $0x7,%r10d
516e(2): xor %esi,%edi
5170(3): mov %r15d,%esi
5173(3): rol $0xe,%esi
5176(3): xor %r10d,%esi
5179(3): mov %r15d,%r10d
517c(4): shr $0x3,%r10d
5180(3): xor %r10d,%esi
5183(2): add %ebx,%esi
5185(4): add 0x8(%rsp),%esi
5189(4): lea 0x0(%rdi,%rsi,1),%r14d
518d(2): mov %eax,%edi
518f(3): xor %r8d,%edi
5192(3): and %r11d,%edi
5195(8): lea 0xf40e3585(%rbp,%r14,1),%esi
519d(3): mov %r11d,%ebp
51a0(2): xor %eax,%edi
51a2(3): ror $0x6,%ebp
51a5(5): mov %r14d,0x2c(%rsp)
51aa(2): add %edi,%esi
51ac(2): mov %ebp,%edi
51ae(3): mov %r11d,%ebp
51b1(3): ror $0xb,%ebp
51b4(4): mov 0x68(%rsp),%ebx
51b8(3): mov %ebp,%r14d
51bb(3): mov %r11d,%ebp
51be(3): rol $0x7,%ebp
51c1(3): xor %edi,%r14d
51c4(2): mov %ebp,%edi
51c6(3): mov %r13d,%ebp
51c9(3): mov %ebx,%r10d
51cc(3): xor %r14d,%edi
51cf(3): ror $0x2,%ebp
51d2(2): add %esi,%edi
51d4(4): lea 0x0(%r9,%rdi,1),%esi
51d8(3): mov %r13d,%r9d
51db(4): ror $0xd,%r9d
51df(3): xor %ebp,%r9d
51e2(3): mov %r13d,%ebp
51e5(3): rol $0xa,%ebp
51e8(3): xor %ebp,%r9d
51eb(2): mov %ecx,%ebp
51ed(3): or %r13d,%ebp
51f0(3): mov %ebp,%r14d
51f3(2): mov %ecx,%ebp
51f5(3): and %edx,%r14d
51f8(3): and %r13d,%ebp
51fb(4): ror $0x7,%r10d
51ff(3): or %ebp,%r14d
5202(3): mov %r12d,%ebp
5205(3): add %r9d,%r14d
5208(3): mov %r12d,%r9d
520b(3): shr $0xa,%ebp
520e(4): rol $0xf,%r9d
5212(3): add %edi,%r14d
5215(3): mov %r9d,%edi
5218(3): mov %r12d,%r9d
521b(4): rol $0xd,%r9d
521f(3): xor %edi,%r9d
5222(2): mov %ebx,%edi
5224(3): rol $0xe,%edi
5227(3): xor %ebp,%r9d
522a(3): xor %r10d,%edi
522d(3): mov %ebx,%r10d
5230(4): shr $0x3,%r10d
5234(3): xor %r10d,%edi
5237(3): mov %esi,%r10d
523a(3): add %r15d,%edi
523d(4): add 0x20(%rsp),%edi
5241(4): ror $0xb,%r10d
5245(5): mov 0x3c(%rsp),%r15d
524a(3): add %edi,%r9d
524d(3): mov %r8d,%edi
5250(3): xor %r11d,%edi
5253(3): mov %r9d,%ebp
5256(8): lea 0x106aa070(%rax,%r9,1),%r9d
525e(2): and %esi,%edi
5260(3): mov %r10d,%eax
5263(3): mov %r14d,%r10d
5266(3): xor %r8d,%edi
5269(3): mov %ebp,%r12d
526c(4): mov %ebp,0x34(%rsp)
5270(3): add %edi,%r9d
5273(2): mov %esi,%edi
5275(3): ror $0x6,%edi
5278(2): xor %edi,%eax
527a(2): mov %esi,%edi
527c(3): rol $0x7,%edi
527f(2): xor %eax,%edi
5281(3): add %r9d,%edi
5284(3): mov %r14d,%r9d
5287(4): ror $0x2,%r9d
528b(2): add %edi,%edx
528d(3): mov %r9d,%eax
5290(3): mov %r14d,%r9d
5293(4): ror $0xd,%r9d
5297(3): xor %eax,%r9d
529a(4): rol $0xa,%r10d
529e(3): xor %r10d,%r9d
52a1(3): mov %r13d,%r10d
52a4(3): or %r14d,%r10d
52a7(3): mov %r10d,%eax
52aa(3): mov %r13d,%r10d
52ad(3): and %r14d,%r10d
52b0(2): and %ecx,%eax
52b2(3): or %r10d,%eax
52b5(5): mov 0x2c(%rsp),%r10d
52ba(3): add %r9d,%eax
52bd(2): add %edi,%eax
52bf(3): mov %r10d,%r9d
52c2(3): mov %r10d,%edi
52c5(3): rol $0xf,%edi
52c8(4): rol $0xd,%r9d
52cc(3): xor %edi,%r9d
52cf(3): mov %r10d,%edi
52d2(3): mov %r15d,%r10d
52d5(3): shr $0xa,%edi
52d8(4): ror $0x7,%r10d
52dc(3): xor %edi,%r9d
52df(3): mov %r15d,%edi
52e2(3): rol $0xe,%edi
52e5(3): xor %r10d,%edi
52e8(3): mov %r15d,%r10d
52eb(4): shr $0x3,%r10d
52ef(3): xor %r10d,%edi
52f2(2): add %ebx,%edi
52f4(4): add 0xc(%rsp),%edi
52f8(2): mov %edx,%ebx
52fa(3): ror $0xb,%ebx
52fd(3): mov %ebx,%r10d
5300(2): mov %eax,%ebx
5302(3): add %edi,%r9d
5305(3): mov %r11d,%edi
5308(2): xor %esi,%edi
530a(8): lea 0x19a4c116(%r8,%r9,1),%r8d
5312(5): mov %r9d,0x30(%rsp)
5317(2): and %edx,%edi
5319(8): mov %r9d,0x90(%rsp)
5321(3): mov %r14d,%r9d
5324(3): xor %r11d,%edi
5327(3): add %edi,%r8d
532a(2): mov %edx,%edi
532c(3): ror $0x6,%edi
532f(3): xor %edi,%r10d
5332(2): mov %edx,%edi
5334(3): rol $0x7,%edi
5337(3): xor %r10d,%edi
533a(3): add %r8d,%edi
533d(2): add %edi,%ecx
533f(3): ror $0x2,%ebx
5342(3): and %eax,%r9d
5345(3): mov %ebx,%r10d
5348(2): mov %eax,%ebx
534a(4): rol $0xd,%r12d
534e(3): ror $0xd,%ebx
5351(3): mov %ebx,%r8d
5354(2): mov %eax,%ebx
5356(3): xor %r10d,%r8d
5359(3): rol $0xa,%ebx
535c(3): xor %ebx,%r8d
535f(3): mov %r14d,%ebx
5362(2): or %eax,%ebx
5364(3): mov %ebx,%r10d
5367(4): mov 0x6c(%rsp),%ebx
536b(3): and %r13d,%r10d
536e(3): or %r9d,%r10d
5371(3): mov %ebp,%r9d
5374(3): add %r8d,%r10d
5377(3): mov %ebx,%r8d
537a(4): shr $0xa,%r9d
537e(3): add %edi,%r10d
5381(2): mov %ebp,%edi
5383(4): ror $0x7,%r8d
5387(3): rol $0xf,%edi
538a(3): xor %edi,%r12d
538d(2): mov %ebx,%edi
538f(3): rol $0xe,%edi
5392(3): xor %r9d,%r12d
5395(3): xor %r8d,%edi
5398(3): mov %ebx,%r8d
539b(4): shr $0x3,%r8d
539f(3): xor %r8d,%edi
53a2(3): add %r15d,%edi
53a5(4): add 0x24(%rsp),%edi
53a9(5): mov 0x70(%rsp),%r15d
53ae(3): add %edi,%r12d
53b1(2): mov %esi,%edi
53b3(2): xor %edx,%edi
53b5(8): lea 0x1e376c08(%r11,%r12,1),%r8d
53bd(3): mov %ecx,%r11d
53c0(2): and %ecx,%edi
53c2(4): ror $0xb,%r11d
53c6(8): mov %r12d,0x94(%rsp)
53ce(2): xor %esi,%edi
53d0(3): mov %r11d,%r9d
53d3(3): mov %r10d,%r11d
53d6(3): add %edi,%r8d
53d9(2): mov %ecx,%edi
53db(3): ror $0x6,%edi
53de(3): xor %edi,%r9d
53e1(2): mov %ecx,%edi
53e3(3): rol $0x7,%edi
53e6(3): xor %r9d,%edi
53e9(4): rol $0xa,%r11d
53ed(3): add %r8d,%edi
53f0(3): mov %r10d,%r8d
53f3(4): ror $0x2,%r8d
53f7(3): add %edi,%r13d
53fa(3): mov %r8d,%r9d
53fd(3): mov %r10d,%r8d
5400(4): ror $0xd,%r8d
5404(3): xor %r9d,%r8d
5407(3): xor %r11d,%r8d
540a(3): mov %eax,%r11d
540d(3): or %r10d,%r11d
5410(3): mov %r11d,%r9d
5413(3): mov %eax,%r11d
5416(3): and %r10d,%r11d
5419(3): and %r14d,%r9d
541c(3): or %r11d,%r9d
541f(5): mov 0x30(%rsp),%r11d
5424(3): add %r8d,%r9d
5427(3): add %edi,%r9d
542a(3): mov %r11d,%r8d
542d(3): mov %r11d,%edi
5430(4): rol $0xd,%r8d
5434(3): rol $0xf,%edi
5437(3): mov %r8d,%ebp
543a(3): mov %r15d,%r8d
543d(2): xor %edi,%ebp
543f(3): mov %r11d,%edi
5442(4): ror $0x7,%r8d
5446(3): shr $0xa,%edi
5449(5): mov 0x48(%rsp),%r11d
544e(2): xor %edi,%ebp
5450(3): mov %r15d,%edi
5453(3): rol $0xe,%edi
5456(3): xor %r8d,%edi
5459(3): mov %r15d,%r8d
545c(4): shr $0x3,%r8d
5460(3): xor %r8d,%edi
5463(2): add %ebx,%edi
5465(4): add 0x10(%rsp),%edi
5469(2): mov %edx,%ebx
546b(2): xor %ecx,%ebx
546d(2): add %edi,%ebp
546f(2): mov %ebx,%edi
5471(3): mov %r13d,%ebx
5474(3): and %r13d,%edi
5477(7): lea 0x2748774c(%rsi,%rbp,1),%esi
547e(7): mov %ebp,0x98(%rsp)
5485(2): xor %edx,%edi
5487(2): add %esi,%edi
5489(3): mov %r13d,%esi
548c(3): ror $0x6,%esi
548f(3): ror $0xb,%ebx
5492(3): mov %ebx,%r8d
5495(3): mov %r9d,%ebx
5498(3): xor %esi,%r8d
549b(3): mov %r13d,%esi
549e(3): ror $0x2,%ebx
54a1(3): rol $0x7,%esi
54a4(3): xor %r8d,%esi
54a7(3): mov %ebx,%r8d
54aa(3): mov %r9d,%ebx
54ad(3): ror $0xd,%ebx
54b0(2): add %edi,%esi
54b2(2): mov %ebx,%edi
54b4(3): mov %r9d,%ebx
54b7(3): add %esi,%r14d
54ba(3): xor %r8d,%edi
54bd(3): rol $0xa,%ebx
54c0(2): xor %ebx,%edi
54c2(3): mov %r10d,%ebx
54c5(3): or %r9d,%ebx
54c8(3): mov %ebx,%r8d
54cb(3): mov %r10d,%ebx
54ce(3): and %r9d,%ebx
54d1(3): and %eax,%r8d
54d4(3): or %ebx,%r8d
54d7(3): mov %r12d,%ebx
54da(3): add %edi,%r8d
54dd(3): rol $0xd,%ebx
54e0(3): mov %r11d,%edi
54e3(3): add %esi,%r8d
54e6(3): mov %r12d,%esi
54e9(3): ror $0x7,%edi
54ec(3): rol $0xf,%esi
54ef(2): xor %esi,%ebx
54f1(3): mov %r12d,%esi
54f4(3): shr $0xa,%esi
54f7(2): xor %esi,%ebx
54f9(3): mov %r11d,%esi
54fc(3): rol $0xe,%esi
54ff(2): xor %edi,%esi
5501(3): mov %r11d,%edi
5504(3): shr $0x3,%edi
5507(2): xor %edi,%esi
5509(3): add %r15d,%esi
550c(4): add 0x18(%rsp),%esi
5510(3): mov %r14d,%r15d
5513(2): add %esi,%ebx
5515(2): mov %ecx,%esi
5517(3): xor %r13d,%esi
551a(7): lea 0x34b0bcb5(%rdx,%rbx,1),%edx
5521(7): mov %ebx,0x9c(%rsp)
5528(3): and %r14d,%esi
552b(2): xor %ecx,%esi
552d(4): ror $0xb,%r15d
5531(2): add %edx,%esi
5533(3): mov %r14d,%edx
5536(3): mov %r15d,%edi
5539(3): ror $0x6,%edx
553c(3): mov %r8d,%r15d
553f(2): xor %edx,%edi
5541(3): mov %r14d,%edx
5544(4): rol $0xa,%r15d
5548(3): rol $0x7,%edx
554b(2): xor %edi,%edx
554d(2): add %esi,%edx
554f(3): mov %r8d,%esi
5552(3): ror $0x2,%esi
5555(2): add %edx,%eax
5557(2): mov %esi,%edi
5559(3): mov %r8d,%esi
555c(3): ror $0xd,%esi
555f(2): xor %edi,%esi
5561(3): xor %r15d,%esi
5564(3): mov %r9d,%r15d
5567(3): or %r8d,%r15d
556a(3): mov %r15d,%edi
556d(3): mov %r9d,%r15d
5570(3): and %r8d,%r15d
5573(3): and %r10d,%edi
5576(3): or %r15d,%edi
5579(5): mov 0x14(%rsp),%r15d
557e(2): add %esi,%edi
5580(2): mov %ebp,%esi
5582(3): rol $0xf,%esi
5585(2): add %edx,%edi
5587(2): mov %esi,%edx
5589(2): mov %ebp,%esi
558b(3): rol $0xd,%esi
558e(3): mov %esi,%r11d
5591(2): mov %ebp,%esi
5593(3): xor %edx,%r11d
5596(3): shr $0xa,%esi
5599(3): mov %r15d,%edx
559c(3): xor %esi,%r11d
559f(3): mov %r15d,%esi
55a2(3): rol $0xe,%edx
55a5(3): ror $0x7,%esi
55a8(2): xor %esi,%edx
55aa(3): mov %r15d,%esi
55ad(3): mov %r8d,%r15d
55b0(3): shr $0x3,%esi
55b3(2): xor %esi,%edx
55b5(4): add 0x48(%rsp),%edx
55b9(2): mov %eax,%esi
55bb(4): add 0x28(%rsp),%edx
55bf(3): add %edx,%r11d
55c2(3): mov %r13d,%edx
55c5(3): ror $0xb,%esi
55c8(3): xor %r14d,%edx
55cb(8): lea 0x391c0cb3(%rcx,%r11,1),%ecx
55d3(3): and %edi,%r15d
55d6(2): and %eax,%edx
55d8(8): mov %r11d,0xa0(%rsp)
55e0(3): xor %r13d,%edx
55e3(2): add %edx,%ecx
55e5(2): mov %eax,%edx
55e7(3): ror $0x6,%edx
55ea(2): xor %edx,%esi
55ec(2): mov %eax,%edx
55ee(3): rol $0x7,%edx
55f1(2): xor %esi,%edx
55f3(2): add %ecx,%edx
55f5(2): mov %edi,%ecx
55f7(3): ror $0x2,%ecx
55fa(3): add %edx,%r10d
55fd(2): mov %ecx,%esi
55ff(2): mov %edi,%ecx
5601(3): ror $0xd,%ecx
5604(2): xor %esi,%ecx
5606(2): mov %edi,%esi
5608(3): rol $0xa,%esi
560b(2): xor %esi,%ecx
560d(3): mov %r8d,%esi
5610(2): or %edi,%esi
5612(3): and %r9d,%esi
5615(3): or %r15d,%esi
5618(2): add %ecx,%esi
561a(2): mov %ebx,%ecx
561c(3): rol $0xf,%ecx
561f(2): add %edx,%esi
5621(2): mov %ecx,%edx
5623(2): mov %ebx,%ecx
5625(3): rol $0xd,%ecx
5628(2): xor %edx,%ecx
562a(2): mov %ebx,%edx
562c(3): shr $0xa,%edx
562f(2): xor %edx,%ecx
5631(4): mov 0x1c(%rsp),%edx
5635(3): mov %edx,%r15d
5638(3): rol $0xe,%edx
563b(4): ror $0x7,%r15d
563f(3): xor %r15d,%edx
5642(5): mov 0x1c(%rsp),%r15d
5647(4): shr $0x3,%r15d
564b(3): xor %r15d,%edx
564e(4): add 0x14(%rsp),%edx
5652(3): mov %edi,%r15d
5655(4): add 0x2c(%rsp),%edx
5659(3): and %esi,%r15d
565c(2): add %edx,%ecx
565e(3): mov %r14d,%edx
5661(2): xor %eax,%edx
5663(8): lea 0x4ed8aa4a(%r13,%rcx,1),%r13d
566b(7): mov %ecx,0xa4(%rsp)
5672(3): and %r10d,%edx
5675(4): mov %ecx,0x14(%rsp)
5679(3): mov %r10d,%ecx
567c(3): xor %r14d,%edx
567f(3): ror $0xb,%ecx
5682(3): add %edx,%r13d
5685(3): mov %r10d,%edx
5688(3): ror $0x6,%edx
568b(2): xor %edx,%ecx
568d(3): mov %r10d,%edx
5690(3): rol $0x7,%edx
5693(2): xor %ecx,%edx
5695(2): mov %esi,%ecx
5697(3): add %r13d,%edx
569a(3): mov %esi,%r13d
569d(3): ror $0x2,%ecx
56a0(4): ror $0xd,%r13d
56a4(3): add %edx,%r9d
56a7(3): xor %ecx,%r13d
56aa(2): mov %esi,%ecx
56ac(3): rol $0xa,%ecx
56af(3): xor %ecx,%r13d
56b2(2): mov %edi,%ecx
56b4(2): or %esi,%ecx
56b6(3): and %r8d,%ecx
56b9(3): or %r15d,%ecx
56bc(3): add %r13d,%ecx
56bf(3): mov %r11d,%r13d
56c2(2): add %edx,%ecx
56c4(3): mov %r11d,%edx
56c7(4): rol $0xd,%r13d
56cb(3): rol $0xf,%edx
56ce(3): xor %edx,%r13d
56d1(3): mov %r11d,%edx
56d4(3): shr $0xa,%edx
56d7(3): xor %edx,%r13d
56da(4): mov 0x8(%rsp),%edx
56de(3): mov %edx,%r15d
56e1(4): ror $0x7,%r15d
56e5(3): rol $0xe,%edx
56e8(3): xor %r15d,%edx
56eb(5): mov 0x8(%rsp),%r15d
56f0(4): shr $0x3,%r15d
56f4(3): xor %r15d,%edx
56f7(4): add 0x1c(%rsp),%edx
56fb(3): mov %eax,%r15d
56fe(4): add 0x34(%rsp),%edx
5702(3): xor %r10d,%r15d
5705(3): add %r13d,%edx
5708(3): mov %r15d,%r13d
570b(3): mov %r9d,%r15d
570e(7): mov %edx,0xa8(%rsp)
5715(3): and %r9d,%r13d
5718(4): mov %edx,0x1c(%rsp)
571c(8): lea 0x5b9cca4f(%r14,%rdx,1),%r14d
5724(3): mov %r9d,%edx
5727(3): xor %eax,%r13d
572a(3): ror $0x6,%edx
572d(4): rol $0x7,%r15d
5731(3): add %r13d,%r14d
5734(3): mov %edx,%r13d
5737(3): mov %r9d,%edx
573a(3): ror $0xb,%edx
573d(3): xor %r13d,%edx
5740(3): mov %r15d,%r13d
5743(3): mov %esi,%r15d
5746(3): xor %edx,%r13d
5749(2): mov %ecx,%edx
574b(3): and %ecx,%r15d
574e(3): add %r14d,%r13d
5751(3): mov %ecx,%r14d
5754(3): ror $0x2,%edx
5757(4): ror $0xd,%r14d
575b(3): add %r13d,%r8d
575e(3): xor %edx,%r14d
5761(2): mov %ecx,%edx
5763(3): rol $0xa,%edx
5766(3): xor %edx,%r14d
5769(2): mov %esi,%edx
576b(2): or %ecx,%edx
576d(2): and %edi,%edx
576f(3): or %r15d,%edx
5772(3): add %r14d,%edx
5775(5): mov 0x14(%rsp),%r14d
577a(3): add %r13d,%edx
577d(3): mov %r14d,%r15d
5780(4): rol $0xf,%r15d
5784(3): mov %r15d,%r13d
5787(3): mov %r14d,%r15d
578a(4): rol $0xd,%r14d
578e(3): xor %r13d,%r14d
5791(3): mov %r15d,%r13d
5794(4): shr $0xa,%r13d
5798(3): xor %r13d,%r14d
579b(5): mov 0x20(%rsp),%r13d
57a0(3): mov %r13d,%r15d
57a3(4): rol $0xe,%r13d
57a7(4): ror $0x7,%r15d
57ab(3): xor %r15d,%r13d
57ae(5): mov 0x20(%rsp),%r15d
57b3(4): shr $0x3,%r15d
57b7(3): xor %r15d,%r13d
57ba(5): add 0x8(%rsp),%r13d
57bf(3): mov %edx,%r15d
57c2(5): add 0x30(%rsp),%r13d
57c7(4): ror $0xd,%r15d
57cb(3): add %r13d,%r14d
57ce(3): mov %r10d,%r13d
57d1(3): xor %r9d,%r13d
57d4(5): mov %r14d,0x8(%rsp)
57d9(8): mov %r14d,0xac(%rsp)
57e1(3): and %r8d,%r13d
57e4(8): lea 0x682e6ff3(%rax,%r14,1),%r14d
57ec(3): mov %r8d,%eax
57ef(3): xor %r10d,%r13d
57f2(3): ror $0x6,%eax
57f5(3): add %r13d,%r14d
57f8(3): mov %eax,%r13d
57fb(3): mov %r8d,%eax
57fe(3): ror $0xb,%eax
5801(3): xor %r13d,%eax
5804(3): mov %r8d,%r13d
5807(4): rol $0x7,%r13d
580b(3): xor %eax,%r13d
580e(2): mov %edx,%eax
5810(3): add %r14d,%r13d
5813(3): ror $0x2,%eax
5816(3): mov %r15d,%r14d
5819(3): xor %eax,%r14d
581c(2): mov %edx,%eax
581e(3): mov %ecx,%r15d
5821(3): rol $0xa,%eax
5824(3): and %edx,%r15d
5827(3): add %r13d,%edi
582a(3): xor %eax,%r14d
582d(2): mov %ecx,%eax
582f(2): or %edx,%eax
5831(2): and %esi,%eax
5833(3): or %r15d,%eax
5836(5): mov 0x1c(%rsp),%r15d
583b(3): add %r14d,%eax
583e(3): add %r13d,%eax
5841(3): mov %r15d,%r14d
5844(3): mov %r15d,%r13d
5847(4): rol $0xf,%r13d
584b(4): rol $0xd,%r14d
584f(3): xor %r13d,%r14d
5852(3): mov %r15d,%r13d
5855(4): shr $0xa,%r13d
5859(3): xor %r13d,%r14d
585c(5): mov 0xc(%rsp),%r13d
5861(3): mov %r13d,%r15d
5864(4): rol $0xe,%r13d
5868(4): ror $0x7,%r15d
586c(3): xor %r15d,%r13d
586f(5): mov 0xc(%rsp),%r15d
5874(4): shr $0x3,%r15d
5878(3): xor %r15d,%r13d
587b(5): add 0x20(%rsp),%r13d
5880(3): add %r13d,%r12d
5883(4): lea 0x0(%r14,%r12,1),%r15d
5887(3): mov %r9d,%r12d
588a(3): mov %edx,%r14d
588d(3): xor %r8d,%r12d
5890(3): and %eax,%r14d
5893(3): and %edi,%r12d
5896(8): lea 0x748f82ee(%r10,%r15,1),%r13d
589e(3): mov %edi,%r10d
58a1(3): xor %r9d,%r12d
58a4(4): ror $0x6,%r10d
58a8(8): mov %r15d,0xb0(%rsp)
58b0(3): add %r12d,%r13d
58b3(3): mov %r10d,%r12d
58b6(3): mov %edi,%r10d
58b9(4): ror $0xb,%r10d
58bd(3): xor %r12d,%r10d
58c0(3): mov %edi,%r12d
58c3(4): rol $0x7,%r12d
58c7(3): xor %r10d,%r12d
58ca(3): mov %eax,%r10d
58cd(3): add %r13d,%r12d
58d0(3): mov %eax,%r13d
58d3(4): ror $0x2,%r10d
58d7(4): ror $0xd,%r13d
58db(3): add %r12d,%esi
58de(3): xor %r10d,%r13d
58e1(3): mov %eax,%r10d
58e4(4): rol $0xa,%r10d
58e8(3): xor %r10d,%r13d
58eb(3): mov %edx,%r10d
58ee(3): or %eax,%r10d
58f1(3): and %ecx,%r10d
58f4(3): or %r14d,%r10d
58f7(5): mov 0x8(%rsp),%r14d
58fc(3): add %r13d,%r10d
58ff(3): add %r12d,%r10d
5902(3): mov %r14d,%r13d
5905(3): mov %r14d,%r12d
5908(4): rol $0xf,%r12d
590c(4): rol $0xd,%r13d
5910(3): xor %r12d,%r13d
5913(3): mov %r14d,%r12d
5916(4): shr $0xa,%r12d
591a(3): xor %r12d,%r13d
591d(5): mov 0x24(%rsp),%r12d
5922(3): mov %r12d,%r14d
5925(4): rol $0xe,%r12d
5929(4): ror $0x7,%r14d
592d(3): xor %r14d,%r12d
5930(5): mov 0x24(%rsp),%r14d
5935(4): shr $0x3,%r14d
5939(3): xor %r14d,%r12d
593c(5): add 0xc(%rsp),%r12d
5941(3): mov %eax,%r14d
5944(3): add %r12d,%ebp
5947(3): mov %r8d,%r12d
594a(3): add %r13d,%ebp
594d(3): xor %edi,%r12d
5950(3): and %esi,%r12d
5953(8): lea 0x78a5636f(%r9,%rbp,1),%r13d
595b(3): mov %esi,%r9d
595e(3): xor %r8d,%r12d
5961(4): ror $0x6,%r9d
5965(7): mov %ebp,0xb4(%rsp)
596c(3): add %r12d,%r13d
596f(3): mov %r9d,%r12d
5972(3): mov %esi,%r9d
5975(4): ror $0xb,%r9d
5979(3): xor %r12d,%r9d
597c(3): mov %esi,%r12d
597f(4): rol $0x7,%r12d
5983(3): xor %r9d,%r12d
5986(3): mov %r10d,%r9d
5989(3): add %r13d,%r12d
598c(3): mov %r10d,%r13d
598f(4): ror $0x2,%r9d
5993(4): ror $0xd,%r13d
5997(3): add %r12d,%ecx
599a(3): xor %r9d,%r13d
599d(3): mov %r10d,%r9d
59a0(4): rol $0xa,%r9d
59a4(3): xor %r9d,%r13d
59a7(3): mov %eax,%r9d
59aa(3): or %r10d,%r9d
59ad(3): and %edx,%r9d
59b0(3): and %r10d,%r14d
59b3(3): or %r14d,%r9d
59b6(3): add %r13d,%r9d
59b9(3): mov %r15d,%r13d
59bc(3): add %r12d,%r9d
59bf(3): mov %r15d,%r12d
59c2(4): rol $0xd,%r13d
59c6(4): rol $0xf,%r12d
59ca(3): xor %r12d,%r13d
59cd(3): mov %r15d,%r12d
59d0(4): shr $0xa,%r12d
59d4(3): xor %r12d,%r13d
59d7(5): mov 0x10(%rsp),%r12d
59dc(3): mov %r12d,%r14d
59df(4): rol $0xe,%r12d
59e3(4): ror $0x7,%r14d
59e7(3): xor %r14d,%r12d
59ea(5): mov 0x10(%rsp),%r14d
59ef(4): shr $0x3,%r14d
59f3(3): xor %r14d,%r12d
59f6(5): add 0x24(%rsp),%r12d
59fb(3): mov %r10d,%r14d
59fe(3): add %r12d,%ebx
5a01(3): mov %edi,%r12d
5a04(3): add %r13d,%ebx
5a07(3): xor %esi,%r12d
5a0a(3): and %ecx,%r12d
5a0d(8): lea 0x84c87814(%r8,%rbx,1),%r8d
5a15(7): mov %ebx,0xb8(%rsp)
5a1c(3): xor %edi,%r12d
5a1f(3): add %r12d,%r8d
5a22(3): mov %ecx,%r12d
5a25(4): ror $0x6,%r12d
5a29(3): mov %r12d,%r13d
5a2c(3): mov %ecx,%r12d
5a2f(4): ror $0xb,%r12d
5a33(3): xor %r13d,%r12d
5a36(3): mov %ecx,%r13d
5a39(4): rol $0x7,%r13d
5a3d(3): xor %r13d,%r12d
5a40(3): add %r8d,%r12d
5a43(3): mov %r9d,%r8d
5a46(4): ror $0x2,%r8d
5a4a(3): add %r12d,%edx
5a4d(3): mov %r8d,%r13d
5a50(3): mov %r9d,%r8d
5a53(4): ror $0xd,%r8d
5a57(3): xor %r13d,%r8d
5a5a(3): mov %r9d,%r13d
5a5d(4): rol $0xa,%r13d
5a61(3): and %r9d,%r14d
5a64(3): xor %r13d,%r8d
5a67(3): mov %r10d,%r13d
5a6a(3): or %r9d,%r13d
5a6d(3): and %eax,%r13d
5a70(3): or %r14d,%r13d
5a73(5): mov 0x18(%rsp),%r14d
5a78(3): add %r8d,%r13d
5a7b(3): mov %ebp,%r8d
5a7e(4): rol $0xf,%r8d
5a82(3): add %r13d,%r12d
5a85(3): mov %r8d,%r13d
5a88(3): mov %ebp,%r8d
5a8b(3): shr $0xa,%ebp
5a8e(4): rol $0xd,%r8d
5a92(3): xor %r13d,%r8d
5a95(3): mov %r14d,%r13d
5a98(3): xor %r8d,%ebp
5a9b(3): mov %r14d,%r8d
5a9e(4): ror $0x7,%r13d
5aa2(4): rol $0xe,%r8d
5aa6(3): xor %r13d,%r8d
5aa9(3): mov %r14d,%r13d
5aac(4): shr $0x3,%r13d
5ab0(3): xor %r13d,%r8d
5ab3(5): add 0x10(%rsp),%r8d
5ab8(3): mov %r9d,%r13d
5abb(3): add %r8d,%r11d
5abe(3): mov %esi,%r8d
5ac1(3): add %ebp,%r11d
5ac4(3): xor %ecx,%r8d
5ac7(3): and %edx,%r8d
5aca(8): lea 0x8cc70208(%rdi,%r11,1),%edi
5ad2(8): mov %r11d,0xbc(%rsp)
5ada(3): xor %esi,%r8d
5add(3): add %r8d,%edi
5ae0(3): mov %edx,%r8d
5ae3(4): ror $0x6,%r8d
5ae7(3): mov %r8d,%ebp
5aea(3): mov %edx,%r8d
5aed(4): ror $0xb,%r8d
5af1(3): xor %ebp,%r8d
5af4(2): mov %edx,%ebp
5af6(3): rol $0x7,%ebp
5af9(3): xor %ebp,%r8d
5afc(3): add %edi,%r8d
5aff(3): mov %r12d,%edi
5b02(3): add %r8d,%eax
5b05(3): ror $0x2,%edi
5b08(3): and %r12d,%r13d
5b0b(2): mov %edi,%ebp
5b0d(3): mov %r12d,%edi
5b10(3): ror $0xd,%edi
5b13(2): xor %ebp,%edi
5b15(3): mov %r12d,%ebp
5b18(3): rol $0xa,%ebp
5b1b(2): xor %ebp,%edi
5b1d(3): mov %r9d,%ebp
5b20(3): or %r12d,%ebp
5b23(3): and %r10d,%ebp
5b26(3): or %r13d,%ebp
5b29(5): mov 0x28(%rsp),%r13d
5b2e(2): add %edi,%ebp
5b30(2): mov %ebx,%edi
5b32(3): rol $0xf,%edi
5b35(3): add %ebp,%r8d
5b38(2): mov %edi,%ebp
5b3a(2): mov %ebx,%edi
5b3c(3): shr $0xa,%ebx
5b3f(3): rol $0xd,%edi
5b42(2): xor %ebp,%edi
5b44(3): mov %r13d,%ebp
5b47(2): xor %edi,%ebx
5b49(3): mov %r13d,%edi
5b4c(3): rol $0xe,%ebp
5b4f(3): ror $0x7,%edi
5b52(2): xor %edi,%ebp
5b54(3): mov %r13d,%edi
5b57(3): mov %r12d,%r13d
5b5a(3): shr $0x3,%edi
5b5d(2): xor %edi,%ebp
5b5f(5): lea 0x0(%rbp,%r14,1),%edi
5b64(4): add 0x14(%rsp),%edi
5b68(2): mov %eax,%ebp
5b6a(3): ror $0x6,%ebp
5b6d(5): mov 0x2c(%rsp),%r14d
5b72(2): add %ebx,%edi
5b74(2): mov %ecx,%ebx
5b76(2): xor %edx,%ebx
5b78(7): lea 0x90befffa(%rsi,%rdi,1),%esi
5b7f(7): mov %edi,0xc0(%rsp)
5b86(2): and %eax,%ebx
5b88(2): xor %ecx,%ebx
5b8a(2): add %ebx,%esi
5b8c(2): mov %eax,%ebx
5b8e(3): ror $0xb,%ebx
5b91(2): xor %ebp,%ebx
5b93(2): mov %eax,%ebp
5b95(3): rol $0x7,%ebp
5b98(2): xor %ebp,%ebx
5b9a(3): mov %r8d,%ebp
5b9d(2): add %esi,%ebx
5b9f(3): mov %r8d,%esi
5ba2(3): ror $0x2,%ebp
5ba5(3): ror $0xd,%esi
5ba8(3): and %r8d,%r13d
5bab(3): add %ebx,%r10d
5bae(2): xor %ebp,%esi
5bb0(3): mov %r8d,%ebp
5bb3(3): rol $0xa,%ebp
5bb6(2): xor %ebp,%esi
5bb8(3): mov %r12d,%ebp
5bbb(3): or %r8d,%ebp
5bbe(3): and %r9d,%ebp
5bc1(3): or %r13d,%ebp
5bc4(5): mov 0x28(%rsp),%r13d
5bc9(2): add %esi,%ebp
5bcb(3): mov %r11d,%esi
5bce(2): add %ebp,%ebx
5bd0(3): mov %r11d,%ebp
5bd3(3): rol $0xd,%esi
5bd6(3): rol $0xf,%ebp
5bd9(4): shr $0xa,%r11d
5bdd(2): xor %ebp,%esi
5bdf(3): mov %r14d,%ebp
5be2(3): xor %esi,%r11d
5be5(3): mov %r14d,%esi
5be8(3): rol $0xe,%ebp
5beb(3): ror $0x7,%esi
5bee(2): xor %esi,%ebp
5bf0(3): mov %r14d,%esi
5bf3(3): shr $0x3,%esi
5bf6(2): xor %esi,%ebp
5bf8(5): lea 0x0(%rbp,%r13,1),%esi
5bfd(4): add 0x1c(%rsp),%esi
5c01(3): mov %r10d,%ebp
5c04(3): ror $0x6,%ebp
5c07(3): mov %r8d,%r13d
5c0a(3): add %r11d,%esi
5c0d(3): mov %edx,%r11d
5c10(3): xor %eax,%r11d
5c13(7): lea 0xa4506ceb(%rcx,%rsi,1),%ecx
5c1a(7): mov %esi,0xc4(%rsp)
5c21(3): and %r10d,%r11d
5c24(3): xor %edx,%r11d
5c27(3): add %r11d,%ecx
5c2a(3): mov %r10d,%r11d
5c2d(4): ror $0xb,%r11d
5c31(3): xor %ebp,%r11d
5c34(3): mov %r10d,%ebp
5c37(3): rol $0x7,%ebp
5c3a(3): and %ebx,%r13d
5c3d(3): xor %ebp,%r11d
5c40(2): mov %ebx,%ebp
5c42(3): add %ecx,%r11d
5c45(2): mov %ebx,%ecx
5c47(3): ror $0x2,%ebp
5c4a(3): ror $0xd,%ecx
5c4d(3): add %r11d,%r9d
5c50(2): xor %ebp,%ecx
5c52(2): mov %ebx,%ebp
5c54(3): rol $0xa,%ebp
5c57(2): xor %ebp,%ecx
5c59(3): mov %r8d,%ebp
5c5c(2): or %ebx,%ebp
5c5e(3): and %r12d,%ebp
5c61(3): or %r13d,%ebp
5c64(5): mov 0x34(%rsp),%r13d
5c69(2): add %ecx,%ebp
5c6b(2): mov %edi,%ecx
5c6d(3): add %ebp,%r11d
5c70(2): mov %edi,%ebp
5c72(3): rol $0xd,%ecx
5c75(3): rol $0xf,%ebp
5c78(3): shr $0xa,%edi
5c7b(2): xor %ebp,%ecx
5c7d(3): mov %r13d,%ebp
5c80(2): xor %ecx,%edi
5c82(3): mov %r13d,%ecx
5c85(3): ror $0x7,%ebp
5c88(3): rol $0xe,%ecx
5c8b(2): xor %ebp,%ecx
5c8d(3): mov %r13d,%ebp
5c90(3): shr $0x3,%ebp
5c93(2): xor %ebp,%ecx
5c95(2): mov %ebx,%ebp
5c97(3): add %r14d,%ecx
5c9a(4): add 0x8(%rsp),%ecx
5c9e(5): mov 0x30(%rsp),%r14d
5ca3(2): add %ecx,%edi
5ca5(2): mov %eax,%ecx
5ca7(3): xor %r10d,%ecx
5caa(7): lea 0xbef9a3f7(%rdx,%rdi,1),%edx
5cb1(7): mov %edi,0xc8(%rsp)
5cb8(3): and %r9d,%ecx
5cbb(3): mov %r9d,%edi
5cbe(2): xor %eax,%ecx
5cc0(2): add %ecx,%edx
5cc2(3): mov %r9d,%ecx
5cc5(3): ror $0x6,%edi
5cc8(3): ror $0xb,%ecx
5ccb(3): and %r11d,%ebp
5cce(2): xor %edi,%ecx
5cd0(3): mov %r9d,%edi
5cd3(3): rol $0x7,%edi
5cd6(2): xor %edi,%ecx
5cd8(3): mov %r11d,%edi
5cdb(2): add %edx,%ecx
5cdd(3): mov %r11d,%edx
5ce0(3): ror $0x2,%edi
5ce3(3): ror $0xd,%edx
5ce6(3): add %ecx,%r12d
5ce9(2): xor %edi,%edx
5ceb(3): mov %r11d,%edi
5cee(3): rol $0xa,%edi
5cf1(2): xor %edi,%edx
5cf3(2): mov %ebx,%edi
5cf5(3): or %r11d,%edi
5cf8(3): and %r8d,%edi
5cfb(2): or %ebp,%edi
5cfd(2): add %edx,%edi
5cff(2): mov %esi,%edx
5d01(2): add %edi,%ecx
5d03(2): mov %esi,%edi
5d05(3): rol $0xd,%edx
5d08(3): rol $0xf,%edi
5d0b(3): shr $0xa,%esi
5d0e(2): xor %edi,%edx
5d10(3): mov %r14d,%edi
5d13(2): xor %edx,%esi
5d15(3): mov %r14d,%edx
5d18(3): rol $0xe,%edi
5d1b(3): ror $0x7,%edx
5d1e(2): xor %edx,%edi
5d20(3): mov %r14d,%edx
5d23(3): shr $0x3,%edx
5d26(2): xor %edx,%edi
5d28(3): mov %r10d,%edx
5d2b(3): add %r13d,%edi
5d2e(3): xor %r9d,%edx
5d31(3): add %r15d,%edi
5d34(2): add %edi,%esi
5d36(3): and %r12d,%edx
5d39(3): mov %r12d,%edi
5d3c(7): lea 0xc67178f2(%rax,%rsi,1),%eax
5d43(3): xor %r10d,%edx
5d46(3): ror $0xb,%edi
5d49(7): mov %esi,0xcc(%rsp)
5d50(3): mov %r12d,%esi
5d53(4): add %ecx,0x4c(%rsp)
5d57(2): add %eax,%edx
5d59(3): ror $0x6,%esi
5d5c(2): mov %edi,%eax
5d5e(2): xor %esi,%eax
5d60(3): mov %r12d,%esi
5d63(3): mov %r11d,%edi
5d66(3): rol $0x7,%esi
5d69(2): and %ecx,%edi
5d6b(4): add %ebx,0x54(%rsp)
5d6f(2): xor %esi,%eax
5d71(2): mov %ecx,%esi
5d73(5): add %r11d,0x50(%rsp)
5d78(2): add %edx,%eax
5d7a(2): mov %ecx,%edx
5d7c(3): ror $0x2,%esi
5d7f(3): ror $0xd,%edx
5d82(4): mov 0x4c(%rsp),%ebp
5d86(3): add %eax,%r8d
5d89(2): xor %esi,%edx
5d8b(2): mov %ecx,%esi
5d8d(3): rol $0xa,%esi
5d90(5): mov 0x50(%rsp),%r13d
5d95(2): xor %esi,%edx
5d97(3): mov %r11d,%esi
5d9a(5): mov 0x54(%rsp),%r14d
5d9f(2): or %ecx,%esi
5da1(5): add %r8d,0x58(%rsp)
5da6(5): add %r12d,0x5c(%rsp)
5dab(2): and %ebx,%esi
5dad(4): mov 0x5c(%rsp),%ebx
5db1(2): or %edi,%esi
5db3(5): add %r9d,0x60(%rsp)
5db8(2): add %esi,%edx
5dba(4): add 0x74(%rsp),%edx
5dbe(8): mov 0x80(%rsp),%rsi
5dc6(5): mov 0x60(%rsp),%r9d
5dcb(2): add %eax,%edx
5dcd(3): mov %rsi,%rcx
5dd0(3): mov %ebp,0x4(%rsi)
5dd3(2): mov %edx,(%rsi)
5dd5(4): mov %r13d,0x8(%rsi)
5dd9(3): mov %rcx,%rax
5ddc(4): mov %r14d,0xc(%rsi)
5de0(4): mov 0x58(%rsp),%esi
5de4(3): mov %ebx,0x14(%rcx)
5de7(4): mov %edx,0x74(%rsp)
5deb(3): mov %esi,0x10(%rcx)
5dee(4): mov %r9d,0x18(%rcx)
5df2(5): add %r10d,0x64(%rsp)
5df7(3): mov %esi,%r10d
5dfa(4): mov 0x64(%rsp),%ecx
5dfe(3): mov %ecx,0x1c(%rax)
5e01(5): mov 0x40(%rsp),%rax
5e06(5): cmp %rax,0x78(%rsp)
5e0b(6): jnbe 0xffffd775(%rip)
5e11(8): mov 0xd8(%rsp),%rax
5e19(9): xor $0x28,%rax
5e22(2): jnz 0x14(%rip)
5e24(7): add $0xe8,%rsp
5e2b(1): pop %rbx
5e2c(1): pop %rbp
5e2d(2): pop %r12
5e2f(2): pop %r13
5e31(2): pop %r14
5e33(2): pop %r15
5e35(1): ret near (%rsp)
5e36(5): call 0xffffb85a(%rip)

"sha256_conclude_ctx" :
5e40(2): push %r12
5e42(1): push %rbp
5e43(1): push %rbx
5e44(4): mov 0x28(%rdi),%rcx
5e48(3): mov %rdi,%rbx
5e4b(3): mov 0x20(%rbx),%edx
5e4e(3): mov 0x24(%rbx),%eax
5e51(4): cmp $0x38,%rcx
5e55(3): sbb %rbp,%rbp
5e58(4): and $0xffffffc0,%rbp
5e5c(4): sub $0xffffff80,%rbp
5e60(4): cmp $0x38,%rcx
5e64(3): sbb %rsi,%rsi
5e67(4): and $0xfffffff0,%rsi
5e6b(4): add $0x1f,%rsi
5e6f(4): cmp $0x38,%rcx
5e73(3): sbb %rdi,%rdi
5e76(2): add %ecx,%edx
5e78(4): and $0xfffffff0,%rdi
5e7c(3): mov %edx,%r8d
5e7f(3): mov %edx,0x20(%rbx)
5e82(4): add $0x1e,%rdi
5e86(3): cmp %rcx,%r8
5e89(2): jnb 0x8(%rip)
5e8b(3): add $0x1,%eax
5e8e(3): mov %eax,0x24(%rbx)
5e91(3): mov %edx,%r8d
5e94(3): shl/sal $0x3,%eax
5e97(4): lea 0x30(%rbx),%r12
5e9b(4): shr $0x1d,%r8d
5e9f(3): shl/sal $0x3,%edx
5ea2(3): or %r8d,%eax
5ea5(2): bswap %edx
5ea7(2): bswap %eax
5ea9(4): mov %eax,0x30(%rbx,%rdi,4)
5ead(3): mov %rbp,%rax
5eb0(4): mov %edx,0x30(%rbx,%rsi,4)
5eb4(3): sub %rcx,%rax
5eb7(4): lea 0x0(%r12,%rcx,1),%rdi
5ebb(7): lea 0x3ebe(%rip),%rsi
5ec2(4): lea 0xfffffff8(%rax),%rdx
5ec6(5): call 0xffffb8aa(%rip)
5ecb(3): mov %rbx,%rdx
5ece(3): mov %rbp,%rsi
5ed1(3): mov %r12,%rdi
5ed4(1): pop %rbx
5ed5(1): pop %rbp
5ed6(2): pop %r12
5ed8(5): jmp 0xffffd5d8(%rip)

"sha256_finish_ctx" :
5ee0(1): push %rbp
5ee1(1): push %rbx
5ee2(3): mov %rsi,%rbp
5ee5(3): mov %rdi,%rbx
5ee8(4): sub $0x8,%rsp
5eec(5): call 0xffffff54(%rip)
5ef1(4): add $0x8,%rsp
5ef5(3): mov %rbp,%rsi
5ef8(3): mov %rbx,%rdi
5efb(1): pop %rbx
5efc(1): pop %rbp
5efd(5): jmp 0xffffd573(%rip)

"sha224_finish_ctx" :
5f10(1): push %rbp
5f11(1): push %rbx
5f12(3): mov %rsi,%rbp
5f15(3): mov %rdi,%rbx
5f18(4): sub $0x8,%rsp
5f1c(5): call 0xffffff24(%rip)
5f21(4): add $0x8,%rsp
5f25(3): mov %rbp,%rsi
5f28(3): mov %rbx,%rdi
5f2b(1): pop %rbx
5f2c(1): pop %rbp
5f2d(5): jmp 0xffffd563(%rip)

"sha256_process_bytes" :
5f40(2): push %r15
5f42(2): push %r14
5f44(2): push %r13
5f46(2): push %r12
5f48(3): mov %rdx,%r13
5f4b(1): push %rbp
5f4c(1): push %rbx
5f4d(3): mov %rsi,%r12
5f50(3): mov %rdi,%rbx
5f53(4): sub $0x8,%rsp
5f57(4): mov 0x28(%rdx),%rbp
5f5b(3): test %rbp,%rbp
5f5e(6): jnz 0x132(%rip)
5f64(4): cmp $0x3f,%r12
5f68(6): jbe 0x10c(%rip)
5f6e(3): test $0x3,%bl
5f71(6): jz 0xe7(%rip)
5f77(4): cmp $0x40,%r12
5f7b(4): lea 0x30(%r13),%rbp
5f7f(2): jz 0x61(%rip)
5f81(5): lea 0xffffffbf(%r12),%r15
5f86(4): shr $0x6,%r15
5f8a(4): lea 0x1(%r15),%r14
5f8e(4): shl/sal $0x6,%r14
5f92(3): add %rbx,%r14
5f95(3): nop (%rax)
5f98(4): movdqu (%rbx),%xmm0
5f9c(3): mov %r13,%rdx
5f9f(5): mov $0x40,%esi
5fa4(3): mov %rbp,%rdi
5fa7(4): add $0x40,%rbx
5fab(4): movups %xmm0,0x0(%rbp)
5faf(5): movdqu 0xffffffd0(%rbx),%xmm0
5fb4(4): movups %xmm0,0x10(%rbp)
5fb8(5): movdqu 0xffffffe0(%rbx),%xmm0
5fbd(4): movups %xmm0,0x20(%rbp)
5fc1(5): movdqu 0xfffffff0(%rbx),%xmm0
5fc6(4): movups %xmm0,0x30(%rbp)
5fca(5): call 0xffffd4e6(%rip)
5fcf(3): cmp %r14,%rbx
5fd2(2): jnz 0xffffffc6(%rip)
5fd4(3): neg %r15
5fd7(4): shl/sal $0x6,%r15
5fdb(5): lea 0xffffffc0(%r12,%r15,1),%r12
5fe0(4): mov 0x28(%r13),%rdi
5fe4(4): cmp $0x8,%r12d
5fe8(3): mov %r12d,%eax
5feb(5): lea 0x0(%rbp,%rdi,1),%rcx
5ff0(6): jnb 0xe0(%rip)
5ff6(4): test $0x4,%r12b
5ffa(6): jnz 0x1f7(%rip)
6000(3): test %r12d,%r12d
6003(2): jz 0xf(%rip)
6005(3): movzx (%rbx),%edx
6008(2): test $0x2,%al
600a(2): mov %dl,(%rcx)
600c(6): jnz 0x1f9(%rip)
6012(3): add %rdi,%r12
6015(4): cmp $0x3f,%r12
6019(2): jbe 0x25(%rip)
601b(3): mov %r13,%rdx
601e(5): mov $0x40,%esi
6023(3): mov %rbp,%rdi
6026(5): call 0xffffd48a(%rip)
602b(4): sub $0x40,%r12
602f(4): lea 0x70(%r13),%rsi
6033(3): mov %rbp,%rdi
6036(3): mov %r12,%rdx
6039(5): call 0xffffb737(%rip)
603e(4): mov %r12,0x28(%r13)
6042(4): add $0x8,%rsp
6046(1): pop %rbx
6047(1): pop %rbp
6048(2): pop %r12
604a(2): pop %r13
604c(2): pop %r14
604e(2): pop %r15
6050(1): ret near (%rsp)
6051(7): nop 0x0(%rax)
6058(3): mov %r12,%rbp
605b(3): mov %rbx,%rdi
605e(3): mov %r13,%rdx
6061(4): and $0xffffffc0,%rbp
6065(4): and $0x3f,%r12d
6069(3): mov %rbp,%rsi
606c(3): add %rbp,%rbx
606f(5): call 0xffffd441(%rip)
6074(3): test %r12,%r12
6077(6): jnz 0x171(%rip)
607d(4): add $0x8,%rsp
6081(1): pop %rbx
6082(1): pop %rbp
6083(2): pop %r12
6085(2): pop %r13
6087(2): pop %r14
6089(2): pop %r15
608b(1): ret near (%rsp)
608c(4): nop 0x0(%rax)
6090(6): mov $0x80,%r14d
6096(4): lea 0x30(%rdx),%r15
609a(3): sub %rbp,%r14
609d(3): cmp %rsi,%r14
60a0(4): lea 0x0(%r15,%rbp,1),%rdi
60a4(4): cmovnbe %rsi,%r14
60a8(3): mov %rbx,%rsi
60ab(3): mov %r14,%rdx
60ae(5): call 0xffffb6c2(%rip)
60b3(4): mov 0x28(%r13),%rsi
60b7(3): add %r14,%rsi
60ba(4): cmp $0x40,%rsi
60be(4): mov %rsi,0x28(%r13)
60c2(2): jnbe 0x5e(%rip)
60c4(3): add %r14,%rbx
60c7(3): sub %r14,%r12
60ca(5): jmp 0xfffffe9a(%rip)
60cf(1): nop 
60d0(3): mov (%rbx),%rax
60d3(3): mov %r12d,%edx
60d6(3): mov %rax,(%rcx)
60d9(5): mov 0xfffffff8(%rbx,%rdx,1),%rax
60de(5): mov %rax,0xfffffff8(%rcx,%rdx,1)
60e3(4): lea 0x8(%rcx),%rdx
60e7(3): mov %rcx,%rax
60ea(4): and $0xfffffff8,%rdx
60ee(3): sub %rdx,%rax
60f1(3): sub %rax,%rbx
60f4(3): add %r12d,%eax
60f7(3): and $0xf8,%eax
60fa(3): cmp $0x8,%eax
60fd(6): jb 0xffffff15(%rip)
6103(3): and $0xf8,%eax
6106(2): xor %ecx,%ecx
6108(2): mov %ecx,%esi
610a(3): add $0x8,%ecx
610d(4): mov 0x0(%rbx,%rsi,1),%r8
6111(2): cmp %eax,%ecx
6113(4): mov %r8,0x0(%rdx,%rsi,1)
6117(2): jb 0xfffffff1(%rip)
6119(5): jmp 0xfffffef9(%rip)
611e(2): nop 
6120(4): and $0xffffffc0,%rsi
6124(3): mov %r13,%rdx
6127(3): mov %r15,%rdi
612a(5): call 0xffffd386(%rip)
612f(4): mov 0x28(%r13),%rdx
6133(3): add %r14,%rbp
6136(4): and $0xffffffc0,%rbp
613a(4): lea 0x0(%r15,%rbp,1),%rax
613e(3): and $0x3f,%edx
6141(3): cmp $0x8,%edx
6144(4): mov %rdx,0x28(%r13)
6148(2): jnb 0x38(%rip)
614a(3): test $0x4,%dl
614d(6): jnz 0x82(%rip)
6153(2): test %edx,%edx
6155(6): jz 0xffffff6f(%rip)
615b(3): movzx (%rax),%ecx
615e(3): test $0x2,%dl
6161(4): mov %cl,0x30(%r13)
6165(6): jz 0xffffff5f(%rip)
616b(2): mov %edx,%edx
616d(5): movzx 0xfffffffe(%rax,%rdx,1),%eax
6172(6): mov %ax,0xfffffffe(%r15,%rdx,1)
6178(5): jmp 0xffffff4c(%rip)
617d(3): nop (%rax)
6180(3): mov (%rax),%rcx
6183(4): mov %rcx,0x30(%r13)
6187(2): mov %edx,%ecx
6189(5): mov 0xfffffff8(%rax,%rcx,1),%rsi
618e(5): mov %rsi,0xfffffff8(%r15,%rcx,1)
6193(4): lea 0x38(%r13),%rcx
6197(4): and $0xfffffff8,%rcx
619b(3): sub %rcx,%r15
619e(3): sub %r15,%rax
61a1(3): add %edx,%r15d
61a4(4): and $0xf8,%r15d
61a8(4): cmp $0x8,%r15d
61ac(6): jb 0xffffff18(%rip)
61b2(4): and $0xf8,%r15d
61b6(2): xor %edx,%edx
61b8(2): mov %edx,%esi
61ba(3): add $0x8,%edx
61bd(4): mov 0x0(%rax,%rsi,1),%rdi
61c1(3): cmp %r15d,%edx
61c4(4): mov %rdi,0x0(%rcx,%rsi,1)
61c8(2): jb 0xfffffff0(%rip)
61ca(5): jmp 0xfffffefa(%rip)
61cf(2): mov (%rax),%ecx
61d1(2): mov %edx,%edx
61d3(4): mov %ecx,0x30(%r13)
61d7(4): mov 0xfffffffc(%rax,%rdx,1),%eax
61db(5): mov %eax,0xfffffffc(%r15,%rdx,1)
61e0(5): jmp 0xfffffee4(%rip)
61e5(3): nop (%rax)
61e8(4): lea 0x30(%r13),%rbp
61ec(5): jmp 0xfffffdf4(%rip)
61f1(2): mov (%rbx),%edx
61f3(2): mov %edx,(%rcx)
61f5(3): mov %r12d,%edx
61f8(4): mov 0xfffffffc(%rbx,%rdx,1),%eax
61fc(4): mov %eax,0xfffffffc(%rcx,%rdx,1)
6200(5): jmp 0xfffffe12(%rip)
6205(3): mov %r12d,%edx
6208(5): movzx 0xfffffffe(%rbx,%rdx,1),%eax
620d(5): mov %ax,0xfffffffe(%rcx,%rdx,1)
6212(5): jmp 0xfffffe00(%rip)

"sha256_buffer" :
6220(1): push %rbp
6221(1): push %rbx
6222(3): mov %rdx,%rbp
6225(7): sub $0xc8,%rsp
622c(9): mov $0x28,%rax
6235(8): mov %rax,0xb8(%rsp)
623d(2): xor %eax,%eax
623f(a): mov $0x-4942790177982912921,%rax
6249(3): mov %rsp,%rbx
624c(9): mov $0x0,0x20(%rsp)
6255(4): mov %rax,(%rsp)
6259(a): mov $0x-6534734903820487822,%rax
6263(3): mov %rbx,%rdx
6266(5): mov %rax,0x8(%rsp)
626b(a): mov $0x-7276294671082564993,%rax
6275(9): mov $0x0,0x28(%rsp)
627e(5): mov %rax,0x10(%rsp)
6283(a): mov $0x6620516960021240235,%rax
628d(5): mov %rax,0x18(%rsp)
6292(5): call 0xfffffcae(%rip)
6297(3): mov %rbx,%rdi
629a(5): call 0xfffffba6(%rip)
629f(3): mov %rbp,%rsi
62a2(3): mov %rbx,%rdi
62a5(5): call 0xffffd1cb(%rip)
62aa(8): mov 0xb8(%rsp),%rcx
62b2(9): xor $0x28,%rcx
62bb(2): jnz 0xc(%rip)
62bd(7): add $0xc8,%rsp
62c4(1): pop %rbx
62c5(1): pop %rbp
62c6(1): ret near (%rsp)
62c7(5): call 0xffffb3c9(%rip)

"sha224_buffer" :
62d0(1): push %rbp
62d1(1): push %rbx
62d2(3): mov %rdx,%rbp
62d5(7): sub $0xc8,%rsp
62dc(9): mov $0x28,%rax
62e5(8): mov %rax,0xb8(%rsp)
62ed(2): xor %eax,%eax
62ef(a): mov $0x3926247204440088280,%rax
62f9(3): mov %rsp,%rbx
62fc(9): mov $0x0,0x20(%rsp)
6305(4): mov %rax,(%rsp)
6309(a): mov $0x-644479594506691305,%rax
6313(3): mov %rbx,%rdx
6316(5): mov %rax,0x8(%rsp)
631b(a): mov $0x7518782744944446257,%rax
6325(9): mov $0x0,0x28(%rsp)
632e(5): mov %rax,0x10(%rsp)
6333(a): mov $0x-4685344894838272089,%rax
633d(5): mov %rax,0x18(%rsp)
6342(5): call 0xfffffbfe(%rip)
6347(3): mov %rbx,%rdi
634a(5): call 0xfffffaf6(%rip)
634f(3): mov %rbp,%rsi
6352(3): mov %rbx,%rdi
6355(5): call 0xffffd13b(%rip)
635a(8): mov 0xb8(%rsp),%rcx
6362(9): xor $0x28,%rcx
636b(2): jnz 0xc(%rip)
636d(7): add $0xc8,%rsp
6374(1): pop %rbx
6375(1): pop %rbp
6376(1): ret near (%rsp)
6377(5): call 0xffffb319(%rip)

"shaxxx_stream.isra.1" :
6380(2): push %r15
6382(2): push %r14
6384(3): mov %rcx,%r14
6387(2): push %r13
6389(2): push %r12
638b(3): mov %rdx,%r12
638e(1): push %rbp
638f(1): push %rbx
6390(3): mov %rdi,%rbx
6393(5): mov $0x8048,%edi
6398(7): sub $0xd8,%rsp
639f(9): mov $0x28,%rax
63a8(8): mov %rax,0xc8(%rsp)
63b0(2): xor %eax,%eax
63b2(5): mov %rsi,0x8(%rsp)
63b7(5): call 0xffffb3d9(%rip)
63bc(3): test %rax,%rax
63bf(6): jz 0xd1(%rip)
63c5(5): lea 0x10(%rsp),%r13
63ca(3): mov %rax,%rbp
63cd(3): mov %r13,%rdi
63d0(3): call %r12
63d3(6): mov $0x8000,%r12d
63d9(3): xor %r15d,%r15d
63dc(2): jmp 0x2d(%rip)
63de(2): nop 
63e0(5): lea 0x0(%rbp,%r15,1),%rdi
63e5(3): mov %r12,%rdx
63e8(3): mov %rbx,%rcx
63eb(3): sub %r15,%rdx
63ee(5): mov $0x1,%esi
63f3(5): call 0xffffb22d(%rip)
63f8(3): add %rax,%r15
63fb(7): cmp $0x8000,%r15
6402(2): jz 0x4e(%rip)
6404(3): test %rax,%rax
6407(2): jz 0x61(%rip)
6409(3): test $0x10,(%rbx)
640c(2): jz 0xffffffd4(%rip)
640e(3): test %r15,%r15
6411(2): jnz 0x6f(%rip)
6413(5): mov 0x8(%rsp),%rsi
6418(3): mov %r13,%rdi
641b(3): call %r14
641e(3): mov %rbp,%rdi
6421(5): call 0xffffb18f(%rip)
6426(2): xor %eax,%eax
6428(8): mov 0xc8(%rsp),%rcx
6430(9): xor $0x28,%rcx
6439(2): jnz 0x5e(%rip)
643b(7): add $0xd8,%rsp
6442(1): pop %rbx
6443(1): pop %rbp
6444(2): pop %r12
6446(2): pop %r13
6448(2): pop %r14
644a(2): pop %r15
644c(1): ret near (%rsp)
644d(3): nop (%rax)
6450(3): mov %r13,%rdx
6453(5): mov $0x8000,%esi
6458(3): mov %rbp,%rdi
645b(5): call 0xffffd055(%rip)
6460(5): jmp 0xffffff79(%rip)
6465(3): nop (%rax)
6468(3): test $0x20,(%rbx)
646b(2): jz 0xffffffa3(%rip)
646d(3): mov %rbp,%rdi
6470(5): call 0xffffb140(%rip)
6475(5): mov $0x1,%eax
647a(2): jmp 0xffffffae(%rip)
647c(4): nop 0x0(%rax)
6480(3): mov %r13,%rdx
6483(3): mov %r15,%rsi
6486(3): mov %rbp,%rdi
6489(5): call 0xfffffab7(%rip)
648e(2): jmp 0xffffff85(%rip)
6490(5): mov $0x1,%eax
6495(2): jmp 0xffffff93(%rip)
6497(5): call 0xffffb1f9(%rip)

"sha256_stream" :
64a0(7): lea 0xfffffa39(%rip),%rcx
64a7(7): lea 0xffffcf22(%rip),%rdx
64ae(5): jmp 0xfffffed2(%rip)

"sha224_stream" :
64c0(7): lea 0xfffffa49(%rip),%rcx
64c7(7): lea 0xffffcf52(%rip),%rdx
64ce(5): jmp 0xfffffeb2(%rip)

"fadvise" :
64f0(3): test %rdi,%rdi
64f3(2): jz 0x1d(%rip)
64f5(1): push %rbx
64f6(2): mov %esi,%ebx
64f8(5): call 0xffffb288(%rip)
64fd(2): mov %ebx,%ecx
64ff(2): xor %edx,%edx
6501(2): xor %esi,%esi
6503(1): pop %rbx
6504(2): mov %eax,%edi
6506(5): jmp 0xffffb21a(%rip)
650b(5): nop 0x0(%rax,%rax,1)
6510(2): REP ret near (%rsp)

"fopen_safer" :
6520(2): push %r12
6522(1): push %rbp
6523(3): mov %rsi,%rbp
6526(1): push %rbx
6527(5): call 0xffffb329(%rip)
652c(3): test %rax,%rax
652f(3): mov %rax,%rbx
6532(2): jz 0xf(%rip)
6534(3): mov %rax,%rdi
6537(5): call 0xffffb249(%rip)
653c(3): cmp $0x2,%eax
653f(2): jbe 0x11(%rip)
6541(3): mov %rbx,%rax
6544(1): pop %rbx
6545(1): pop %rbp
6546(2): pop %r12
6548(1): ret near (%rsp)
6549(7): nop 0x0(%rax)
6550(2): mov %eax,%edi
6552(5): call 0x1d9e(%rip)
6557(2): test %eax,%eax
6559(3): mov %eax,%r12d
655c(2): js 0x3c(%rip)
655e(3): mov %rbx,%rdi
6561(5): call 0x264f(%rip)
6566(2): test %eax,%eax
6568(2): jnz 0x15(%rip)
656a(3): mov %rbp,%rsi
656d(3): mov %r12d,%edi
6570(5): call 0xffffb280(%rip)
6575(3): test %rax,%rax
6578(3): mov %rax,%rbx
657b(2): jnz 0xffffffc6(%rip)
657d(5): call 0xffffb053(%rip)
6582(2): mov (%rax),%ebp
6584(3): mov %rax,%rbx
6587(3): mov %r12d,%edi
658a(5): call 0xffffb186(%rip)
658f(2): mov %ebp,(%rbx)
6591(2): xor %ebx,%ebx
6593(2): jmp 0xffffffae(%rip)
6595(3): nop (%rax)
6598(5): call 0xffffb038(%rip)
659d(3): mov (%rax),%r12d
65a0(3): mov %rax,%rbp
65a3(3): mov %rbx,%rdi
65a6(5): call 0x260a(%rip)
65ab(2): xor %ebx,%ebx
65ad(4): mov %r12d,0x0(%rbp)
65b1(2): jmp 0xffffff90(%rip)

"set_program_name" :
65c0(3): test %rdi,%rdi
65c3(1): push %rbx
65c4(2): jz 0x79(%rip)
65c6(5): mov $0x2f,%esi
65cb(3): mov %rdi,%rbx
65ce(5): call 0xffffb112(%rip)
65d3(3): test %rax,%rax
65d6(2): jz 0x57(%rip)
65d8(4): lea 0x1(%rax),%r8
65dc(3): mov %r8,%rdx
65df(3): sub %rbx,%rdx
65e2(4): cmp $0x6,%rdx
65e6(2): jle 0x47(%rip)
65e8(4): lea 0xfffffffa(%rax),%rsi
65ec(7): lea 0x3805(%rip),%rdi
65f3(5): mov $0x7,%ecx
65f8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
65fa(3): setnbe %dl
65fd(3): sbb $0x0,%dl
6600(2): test %dl,%dl
6602(2): jnz 0x2b(%rip)
6604(7): lea 0x37f5(%rip),%rdi
660b(5): mov $0x3,%ecx
6610(3): mov %r8,%rsi
6613(3): mov %r8,%rbx
6616(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6618(3): setnbe %dl
661b(3): sbb $0x0,%dl
661e(2): test %dl,%dl
6620(2): jnz 0xd(%rip)
6622(4): lea 0x4(%rax),%rbx
6626(7): mov %rbx,0x205a73(%rip)
662d(7): mov %rbx,0x205aec(%rip)
6634(7): mov %rbx,0x205a85(%rip)
663b(1): pop %rbx
663c(1): ret near (%rsp)
663d(7): mov 0x205a9c(%rip),%rcx
6644(7): lea 0x3775(%rip),%rdi
664b(5): mov $0x37,%edx
6650(5): mov $0x1,%esi
6655(5): call 0xffffb23b(%rip)
665a(5): call 0xffffaf66(%rip)

"gettext_quote.part.1" :
6660(1): push %rbp
6661(1): push %rbx
6662(3): mov %rdi,%rbp
6665(2): mov %esi,%ebx
6667(4): sub $0x8,%rsp
666b(5): call 0x2a55(%rip)
6670(3): movzx (%rax),%edx
6673(3): and $0xdf,%edx
6676(3): cmp $0x55,%dl
6679(2): jz 0x77(%rip)
667b(3): cmp $0x47,%dl
667e(2): jz 0x22(%rip)
6680(7): lea 0x378c(%rip),%rax
6687(7): lea 0x3787(%rip),%rdx
668e(3): cmp $0x9,%ebx
6691(4): cmovne %rdx,%rax
6695(4): add $0x8,%rsp
6699(1): pop %rbx
669a(1): pop %rbp
669b(1): ret near (%rsp)
669c(4): nop 0x0(%rax)
66a0(4): movzx 0x1(%rax),%edx
66a4(3): and $0xdf,%edx
66a7(3): cmp $0x42,%dl
66aa(2): jnz 0xffffffd6(%rip)
66ac(4): cmp $0x31,0x2(%rax)
66b0(2): jnz 0xffffffd0(%rip)
66b2(4): cmp $0x38,0x3(%rax)
66b6(2): jnz 0xffffffca(%rip)
66b8(4): cmp $0x30,0x4(%rax)
66bc(2): jnz 0xffffffc4(%rip)
66be(4): cmp $0x33,0x5(%rax)
66c2(2): jnz 0xffffffbe(%rip)
66c4(4): cmp $0x30,0x6(%rax)
66c8(2): jnz 0xffffffb8(%rip)
66ca(4): cmp $0x0,0x7(%rax)
66ce(2): jnz 0xffffffb2(%rip)
66d0(4): cmp $0x60,0x0(%rbp)
66d4(7): lea 0x3731(%rip),%rax
66db(7): lea 0x372e(%rip),%rdx
66e2(4): cmovne %rdx,%rax
66e6(4): add $0x8,%rsp
66ea(1): pop %rbx
66eb(1): pop %rbp
66ec(1): ret near (%rsp)
66ed(3): nop (%rax)
66f0(4): movzx 0x1(%rax),%edx
66f4(3): and $0xdf,%edx
66f7(3): cmp $0x54,%dl
66fa(2): jnz 0xffffff86(%rip)
66fc(4): movzx 0x2(%rax),%edx
6700(3): and $0xdf,%edx
6703(3): cmp $0x46,%dl
6706(6): jnz 0xffffff7a(%rip)
670c(4): cmp $0x2d,0x3(%rax)
6710(6): jnz 0xffffff70(%rip)
6716(4): cmp $0x38,0x4(%rax)
671a(6): jnz 0xffffff66(%rip)
6720(4): cmp $0x0,0x5(%rax)
6724(6): jnz 0xffffff5c(%rip)
672a(4): cmp $0x60,0x0(%rbp)
672e(7): lea 0x36cf(%rip),%rax
6735(7): lea 0x36cc(%rip),%rdx
673c(4): cmovne %rdx,%rax
6740(4): add $0x8,%rsp
6744(1): pop %rbx
6745(1): pop %rbp
6746(1): ret near (%rsp)

"quotearg_buffer_restyled" :
6750(2): push %r15
6752(2): push %r14
6754(3): mov %r8d,%r15d
6757(2): push %r13
6759(2): push %r12
675b(3): mov %rdi,%r14
675e(1): push %rbp
675f(1): push %rbx
6760(3): mov %r9d,%ebx
6763(3): mov %rsi,%r13
6766(3): mov %rcx,%rbp
6769(3): and $0x2,%ebx
676c(7): sub $0xb8,%rsp
6773(8): mov 0xf0(%rsp),%rax
677b(5): mov %rdx,0x10(%rsp)
6780(5): mov %r8d,0x8(%rsp)
6785(5): mov %r9d,0x78(%rsp)
678a(5): mov %rax,0x20(%rsp)
678f(8): mov 0xf8(%rsp),%rax
6797(5): mov %rax,0x68(%rsp)
679c(8): mov 0x100(%rsp),%rax
67a4(5): mov %rax,0x60(%rsp)
67a9(9): mov $0x28,%rax
67b2(8): mov %rax,0xa8(%rsp)
67ba(2): xor %eax,%eax
67bc(5): call 0xffffaeb4(%rip)
67c1(4): cmp $0xa,%r15d
67c5(5): mov %rax,0x58(%rsp)
67ca(6): jnbe 0x11b5(%rip)
67d0(7): lea 0x36a9(%rip),%rcx
67d7(3): mov %r15d,%edx
67da(4): movsxd 0x0(%rcx,%rdx,4),%rax
67de(3): add %rcx,%rax
67e1(2): jmp %rax
67e3(5): mov $0x1,0xe(%rsp)
67e8(5): mov $0x0,0x7c(%rsp)
67ed(3): xor %r12d,%r12d
67f0(9): mov $0x0,0x50(%rsp)
67f9(5): mov $0x1,0xf(%rsp)
67fe(5): mov $0x0,0xd(%rsp)
6803(7): lea 0x360b(%rip),%rax
680a(9): mov $0x1,0x18(%rsp)
6813(3): xor %r15d,%r15d
6816(8): mov $0x2,0x8(%rsp)
681e(5): mov %rax,0x48(%rsp)
6823(3): xor %r11d,%r11d
6826(3): mov %rbp,%rax
6829(3): mov %r12d,%r8d
682c(3): mov %r11,%rbp
682f(3): mov %rax,%r11
6832(6): nop 0x0(%rax,%rax,1)
6838(3): cmp %rbp,%r11
683b(4): setnz %r12b
683f(4): cmp $0xffffffff,%r11
6843(2): jnz 0xf(%rip)
6845(5): mov 0x10(%rsp),%rax
684a(4): cmp $0x0,0x0(%rax,%rbp,1)
684e(4): setnz %r12b
6852(3): test %r12b,%r12b
6855(6): jz 0x65b(%rip)
685b(5): cmp $0x2,0x8(%rsp)
6860(5): mov 0x10(%rsp),%rdi
6865(4): lea 0x0(%rdi,%rbp,1),%r9
6869(3): setnz %al
686c(4): and 0xd(%rsp),%al
6870(3): mov %eax,%r10d
6873(6): jz 0xad(%rip)
6879(5): mov 0x18(%rsp),%rax
687e(3): test %rax,%rax
6881(6): jz 0x42f(%rip)
6887(4): cmp $0xffffffff,%r11
688b(5): lea 0x0(%rbp,%rax,1),%rbx
6890(2): jnz 0x30(%rip)
6892(4): cmp $0x1,%rax
6896(2): jbe 0x2a(%rip)
6898(5): mov %r8b,0x38(%rsp)
689d(5): mov %r10b,0x30(%rsp)
68a2(5): mov %r9,0x28(%rsp)
68a7(5): call 0xffffadd9(%rip)
68ac(6): movzx 0x38(%rsp),%r8d
68b2(6): movzx 0x30(%rsp),%r10d
68b8(3): mov %rax,%r11
68bb(5): mov 0x28(%rsp),%r9
68c0(3): cmp %r11,%rbx
68c3(5): mov %r10b,0x28(%rsp)
68c8(6): jnbe 0x5b8(%rip)
68ce(5): mov 0x18(%rsp),%rdx
68d3(5): mov 0x48(%rsp),%rsi
68d8(3): mov %r9,%rdi
68db(5): mov %r11,0x40(%rsp)
68e0(5): mov %r8b,0x38(%rsp)
68e5(5): mov %r9,0x30(%rsp)
68ea(5): call 0xffffae46(%rip)
68ef(2): test %eax,%eax
68f1(5): mov 0x30(%rsp),%r9
68f6(6): movzx 0x38(%rsp),%r8d
68fc(5): mov 0x40(%rsp),%r11
6901(6): jnz 0x57f(%rip)
6907(5): cmp $0x0,0xf(%rsp)
690c(6): movzx 0x28(%rsp),%r10d
6912(6): jnz 0xf83(%rip)
6918(8): nop 0x0(%rax,%rax,1)
6920(4): movzx (%r9),%ebx
6924(3): cmp $0x7e,%bl
6927(6): jnbe 0x321(%rip)
692d(7): lea 0x3578(%rip),%rcx
6934(3): movzx %bl,%edx
6937(4): movsxd 0x0(%rcx,%rdx,4),%rax
693b(3): add %rcx,%rax
693e(2): jmp %rax
6940(3): xor %r10d,%r10d
6943(4): cmp $0x1,%r11
6947(3): setnz %al
694a(4): cmp $0xffffffff,%r11
694e(2): jnz 0xe(%rip)
6950(5): mov 0x10(%rsp),%rax
6955(4): cmp $0x0,0x1(%rax)
6959(3): setnz %al
695c(5): cmp $0x2,0x8(%rsp)
6961(3): setz %dl
6964(2): test %al,%al
6966(6): jz 0x252(%rip)
696c(3): xor %r12d,%r12d
696f(2): xor %eax,%eax
6971(7): nop 0x0(%rax)
6978(5): cmp $0x1,0xd(%rsp)
697d(6): jnz 0x115(%rip)
6983(2): test %dl,%dl
6985(6): jnz 0x10d(%rip)
698b(5): mov 0x20(%rsp),%rsi
6990(3): test %rsi,%rsi
6993(2): jz 0x16(%rip)
6995(2): mov %ebx,%edx
6997(3): shr $0x5,%dl
699a(3): movzx %dl,%edx
699d(3): mov 0x0(%rsi,%rdx,4),%edx
69a0(3): bt %ebx,%edx
69a3(6): jb 0x150(%rip)
69a9(3): test %r10b,%r10b
69ac(6): jnz 0x147(%rip)
69b2(3): xor $0x1,%eax
69b5(4): add $0x1,%rbp
69b9(3): and %r8d,%eax
69bc(2): test %al,%al
69be(2): jz 0x22(%rip)
69c0(3): cmp %r15,%r13
69c3(2): jbe 0x7(%rip)
69c5(5): mov $0x27,0x0(%r14,%r15,1)
69ca(4): lea 0x1(%r15),%rax
69ce(3): cmp %rax,%r13
69d1(2): jbe 0x8(%rip)
69d3(6): mov $0x27,0x1(%r14,%r15,1)
69d9(4): add $0x2,%r15
69dd(3): xor %r8d,%r8d
69e0(3): cmp %r13,%r15
69e3(2): jnb 0x6(%rip)
69e5(4): mov %bl,0x0(%r14,%r15,1)
69e9(5): movzx 0xe(%rsp),%edi
69ee(4): add $0x1,%r15
69f2(5): mov $0x0,%eax
69f7(3): test %r12b,%r12b
69fa(3): cmove %eax,%edi
69fd(5): mov %dil,0xe(%rsp)
6a02(5): jmp 0xfffffe36(%rip)
6a07(9): nop 0x0(%rax,%rax,1)
6a10(3): xor %r10d,%r10d
6a13(4): mov 0x8(%rsp),%eax
6a17(3): cmp $0x2,%eax
6a1a(6): jz 0x5be(%rip)
6a20(3): cmp $0x5,%eax
6a23(6): jz 0x575(%rip)
6a29(3): cmp $0x2,%eax
6a2c(5): mov $0x3f,%ebx
6a31(3): setz %dl
6a34(3): xor %r12d,%r12d
6a37(2): xor %eax,%eax
6a39(5): jmp 0xffffff3f(%rip)
6a3e(2): nop 
6a40(3): xor %r10d,%r10d
6a43(5): cmp $0x2,0x8(%rsp)
6a48(6): jz 0x508(%rip)
6a4e(5): mov %r12b,0x7c(%rsp)
6a53(2): xor %edx,%edx
6a55(2): xor %eax,%eax
6a57(5): mov $0x27,%ebx
6a5c(5): jmp 0xffffff1c(%rip)
6a61(7): nop 0x0(%rax)
6a68(5): mov $0x9,%edx
6a6d(5): mov $0x74,%ebx
6a72(5): cmp $0x2,0x8(%rsp)
6a77(3): setz %al
6a7a(4): and 0xf(%rsp),%al
6a7e(6): jnz 0x150(%rip)
6a84(5): cmp $0x0,0xd(%rsp)
6a89(2): jnz 0x67(%rip)
6a8b(2): mov %edx,%ebx
6a8d(3): xor %r12d,%r12d
6a90(2): xor %eax,%eax
6a92(5): cmp $0x0,0xf(%rsp)
6a97(6): jnz 0xfffffef4(%rip)
6a9d(5): jmp 0xffffff0c(%rip)
6aa2(6): nop 0x0(%rax,%rax,1)
6aa8(5): mov $0x8,%edx
6aad(5): mov $0x62,%ebx
6ab2(2): jmp 0xffffffd2(%rip)
6ab4(4): nop 0x0(%rax)
6ab8(5): cmp $0x2,0x8(%rsp)
6abd(6): jz 0x3d3(%rip)
6ac3(5): cmp $0x0,0xd(%rsp)
6ac8(6): jz 0x218(%rip)
6ace(5): cmp $0x0,0xf(%rsp)
6ad3(6): jz 0x20d(%rip)
6ad9(6): cmp $0x0,0x18(%rsp)
6adf(6): jnz 0x3bc(%rip)
6ae5(5): mov $0x5c,%ebx
6aea(6): nop 0x0(%rax,%rax,1)
6af0(3): xor %r12d,%r12d
6af3(5): cmp $0x2,0x8(%rsp)
6af8(3): setz %dl
6afb(5): cmp $0x0,0xf(%rsp)
6b00(2): mov %edx,%eax
6b02(6): jnz 0x856(%rip)
6b08(3): mov %r8d,%eax
6b0b(3): xor $0x1,%eax
6b0e(2): and %dl,%al
6b10(2): jz 0x31(%rip)
6b12(3): cmp %r15,%r13
6b15(2): jbe 0x7(%rip)
6b17(5): mov $0x27,0x0(%r14,%r15,1)
6b1c(4): lea 0x1(%r15),%rdx
6b20(3): cmp %rdx,%r13
6b23(2): jbe 0x8(%rip)
6b25(6): mov $0x24,0x1(%r14,%r15,1)
6b2b(4): lea 0x2(%r15),%rdx
6b2f(3): cmp %rdx,%r13
6b32(2): jbe 0x8(%rip)
6b34(6): mov $0x27,0x2(%r14,%r15,1)
6b3a(4): add $0x3,%r15
6b3e(3): mov %eax,%r8d
6b41(3): cmp %r15,%r13
6b44(2): jbe 0x7(%rip)
6b46(5): mov $0x5c,0x0(%r14,%r15,1)
6b4b(4): add $0x1,%r15
6b4f(4): add $0x1,%rbp
6b53(5): jmp 0xfffffe8d(%rip)
6b58(8): nop 0x0(%rax,%rax,1)
6b60(5): cmp $0x0,0xd(%rsp)
6b65(6): jnz 0x1ce(%rip)
6b6b(2): xor %edx,%edx
6b6d(5): test $0x1,0x78(%rsp)
6b72(6): jz 0xffffff19(%rip)
6b78(4): add $0x1,%rbp
6b7c(5): jmp 0xfffffcbc(%rip)
6b81(7): nop 0x0(%rax)
6b88(5): cmp $0x2,0x8(%rsp)
6b8d(3): setz %dl
6b90(2): xor %eax,%eax
6b92(5): jmp 0xfffffde6(%rip)
6b97(9): nop 0x0(%rax,%rax,1)
6ba0(5): mov $0x7,%edx
6ba5(5): mov $0x61,%ebx
6baa(5): jmp 0xfffffeda(%rip)
6baf(1): nop 
6bb0(5): cmp $0x2,0x8(%rsp)
6bb5(3): setz %dl
6bb8(3): test %rbp,%rbp
6bbb(6): jnz 0xfffffdb1(%rip)
6bc1(5): movzx 0xf(%rsp),%eax
6bc6(2): and %dl,%al
6bc8(6): jz 0xfffffdb0(%rip)
6bce(3): mov %r11,%rbp
6bd1(8): mov $0x2,0x8(%rsp)
6bd9(5): jmp 0x700(%rip)
6bde(2): nop 
6be0(5): cmp $0x2,0x8(%rsp)
6be5(3): setz %dl
6be8(3): xor %r12d,%r12d
6beb(2): jmp 0xffffffd6(%rip)
6bed(3): nop (%rax)
6bf0(5): cmp $0x2,0x8(%rsp)
6bf5(5): mov $0x20,%ebx
6bfa(3): setz %dl
6bfd(2): jmp 0xffffffc4(%rip)
6bff(1): nop 
6c00(5): mov $0xd,%edx
6c05(5): mov $0x72,%ebx
6c0a(5): jmp 0xfffffe68(%rip)
6c0f(1): nop 
6c10(5): mov $0xc,%edx
6c15(5): mov $0x66,%ebx
6c1a(5): jmp 0xfffffe6a(%rip)
6c1f(1): nop 
6c20(5): mov $0xb,%edx
6c25(5): mov $0x76,%ebx
6c2a(5): jmp 0xfffffe5a(%rip)
6c2f(1): nop 
6c30(5): mov $0xa,%edx
6c35(5): mov $0x6e,%ebx
6c3a(5): jmp 0xfffffe38(%rip)
6c3f(1): nop 
6c40(3): xor %r10d,%r10d
6c43(5): nop 0x0(%rax,%rax,1)
6c48(6): cmp $0x1,0x58(%rsp)
6c4e(6): jnz 0x3aa(%rip)
6c54(5): mov %r11,0x38(%rsp)
6c59(5): mov %r8b,0x30(%rsp)
6c5e(5): mov %r10b,0x28(%rsp)
6c63(5): call 0xffffac7d(%rip)
6c68(3): mov (%rax),%rcx
6c6b(3): movzx %bl,%edx
6c6e(6): movzx 0x28(%rsp),%r10d
6c74(6): movzx 0x30(%rsp),%r8d
6c7a(5): mov 0x38(%rsp),%r11
6c7f(5): mov $0x1,%edi
6c84(4): movzx 0x0(%rcx,%rdx,2),%eax
6c88(4): and $0x4000,%ax
6c8c(4): setnz %r12b
6c90(3): setz %al
6c93(4): and 0xd(%rsp),%al
6c97(2): test %al,%al
6c99(6): jnz 0x998(%rip)
6c9f(5): cmp $0x2,0x8(%rsp)
6ca4(3): setz %dl
6ca7(5): jmp 0xfffffcd1(%rip)
6cac(4): nop 0x0(%rax)
6cb0(4): movzx (%r9),%ebx
6cb4(3): cmp $0x7e,%bl
6cb7(2): jnbe 0xffffff89(%rip)
6cb9(7): lea 0x33e8(%rip),%rcx
6cc0(3): movzx %bl,%edx
6cc3(4): movsxd 0x0(%rcx,%rdx,4),%rax
6cc7(3): add %rcx,%rax
6cca(2): jmp %rax
6ccc(4): nop 0x0(%rax)
6cd0(3): xor %r10d,%r10d
6cd3(5): cmp $0x0,0xd(%rsp)
6cd8(6): jnz 0xfffffdf6(%rip)
6cde(2): nop 
6ce0(5): mov $0x5c,%edx
6ce5(5): mov $0x5c,%ebx
6cea(5): jmp 0xfffffd9a(%rip)
6cef(1): nop 
6cf0(5): mov $0xc,%edx
6cf5(3): xor %r10d,%r10d
6cf8(5): mov $0x66,%ebx
6cfd(5): jmp 0xfffffd87(%rip)
6d02(6): nop 0x0(%rax,%rax,1)
6d08(5): mov $0xa,%edx
6d0d(3): xor %r10d,%r10d
6d10(5): mov $0x6e,%ebx
6d15(5): jmp 0xfffffd5d(%rip)
6d1a(6): nop 0x0(%rax,%rax,1)
6d20(5): mov $0x61,%ebx
6d25(5): jmp 0xfffffdcb(%rip)
6d2a(6): nop 0x0(%rax,%rax,1)
6d30(3): xor %r10d,%r10d
6d33(5): cmp $0x2,0x8(%rsp)
6d38(3): setz %dl
6d3b(5): cmp $0x0,0xf(%rsp)
6d40(6): jnz 0xb9a(%rip)
6d46(3): mov %r8d,%eax
6d49(3): mov %r15,%rcx
6d4c(3): xor $0x1,%eax
6d4f(2): and %dl,%al
6d51(2): jz 0x2f(%rip)
6d53(3): cmp %r15,%r13
6d56(2): jbe 0x7(%rip)
6d58(5): mov $0x27,0x0(%r14,%r15,1)
6d5d(4): lea 0x1(%r15),%rcx
6d61(3): cmp %rcx,%r13
6d64(2): jbe 0x8(%rip)
6d66(6): mov $0x24,0x1(%r14,%r15,1)
6d6c(4): lea 0x2(%r15),%rcx
6d70(3): cmp %rcx,%r13
6d73(6): jnbe 0x636(%rip)
6d79(4): lea 0x3(%r15),%rcx
6d7d(3): mov %eax,%r8d
6d80(3): cmp %rcx,%r13
6d83(2): jbe 0x7(%rip)
6d85(5): mov $0x5c,0x0(%r14,%rcx,1)
6d8a(5): cmp $0x2,0x8(%rsp)
6d8f(4): lea 0x1(%rcx),%r15
6d93(6): jz 0x606(%rip)
6d99(4): lea 0x1(%rbp),%rax
6d9d(3): cmp %r11,%rax
6da0(2): jnb 0x1b(%rip)
6da2(5): mov 0x10(%rsp),%rax
6da7(5): movzx 0x1(%rax,%rbp,1),%eax
6dac(4): mov %al,0x28(%rsp)
6db0(3): sub $0x30,%eax
6db3(2): cmp $0x9,%al
6db5(6): jbe 0x834(%rip)
6dbb(3): mov %r12d,%eax
6dbe(5): mov $0x30,%ebx
6dc3(3): xor %r12d,%r12d
6dc6(5): jmp 0xfffffbb2(%rip)
6dcb(5): nop 0x0(%rax,%rax,1)
6dd0(5): cmp $0x2,0x8(%rsp)
6dd5(3): mov %r10d,%r12d
6dd8(3): setz %dl
6ddb(3): xor %r10d,%r10d
6dde(2): xor %eax,%eax
6de0(5): jmp 0xfffffb98(%rip)
6de5(3): nop (%rax)
6de8(5): cmp $0x2,0x8(%rsp)
6ded(3): setz %dl
6df0(3): xor %r10d,%r10d
6df3(5): jmp 0xfffffdc5(%rip)
6df8(8): nop 0x0(%rax,%rax,1)
6e00(5): cmp $0x2,0x8(%rsp)
6e05(3): setz %dl
6e08(3): xor %r10d,%r10d
6e0b(3): xor %r12d,%r12d
6e0e(5): jmp 0xfffffdb3(%rip)
6e13(5): nop 0x0(%rax,%rax,1)
6e18(5): cmp $0x2,0x8(%rsp)
6e1d(3): mov %r10d,%r12d
6e20(5): mov $0x20,%ebx
6e25(3): setz %dl
6e28(3): xor %r10d,%r10d
6e2b(5): jmp 0xfffffd96(%rip)
6e30(5): mov $0xd,%edx
6e35(3): xor %r10d,%r10d
6e38(5): mov $0x72,%ebx
6e3d(5): jmp 0xfffffc35(%rip)
6e42(6): nop 0x0(%rax,%rax,1)
6e48(5): mov $0x76,%ebx
6e4d(5): jmp 0xfffffca3(%rip)
6e52(6): nop 0x0(%rax,%rax,1)
6e58(5): mov $0x9,%edx
6e5d(3): xor %r10d,%r10d
6e60(5): mov $0x74,%ebx
6e65(5): jmp 0xfffffc0d(%rip)
6e6a(6): nop 0x0(%rax,%rax,1)
6e70(5): mov $0x62,%ebx
6e75(5): jmp 0xfffffc7b(%rip)
6e7a(6): nop 0x0(%rax,%rax,1)
6e80(3): xor %r10d,%r10d
6e83(5): jmp 0xfffffa9d(%rip)
6e88(8): nop 0x0(%rax,%rax,1)
6e90(5): cmp $0x0,0xf(%rsp)
6e95(6): jnz 0x96b(%rip)
6e9b(4): add $0x1,%rbp
6e9f(3): mov %r8d,%eax
6ea2(3): xor %r12d,%r12d
6ea5(5): mov $0x5c,%ebx
6eaa(5): jmp 0xfffffb12(%rip)
6eaf(1): nop 
6eb0(5): cmp $0x2,0x8(%rsp)
6eb5(5): movzx 0xf(%rsp),%ebx
6eba(3): mov %r8d,%r12d
6ebd(3): mov %r11,%rbp
6ec0(3): setz %dl
6ec3(2): mov %ebx,%eax
6ec5(3): test %r15,%r15
6ec8(3): setz %cl
6ecb(2): and %edx,%eax
6ecd(2): and %cl,%al
6ecf(6): jnz 0xa67(%rip)
6ed5(2): mov %ebx,%eax
6ed7(3): xor $0x1,%eax
6eda(2): and %al,%dl
6edc(6): jz 0x970(%rip)
6ee2(5): cmp $0x0,0x7c(%rsp)
6ee7(6): jz 0x963(%rip)
6eed(5): cmp $0x0,0xe(%rsp)
6ef2(6): jnz 0x9fb(%rip)
6ef8(3): test %r13,%r13
6efb(3): setz %al
6efe(6): cmp $0x0,0x50(%rsp)
6f04(3): setnz %dl
6f07(2): and %dl,%al
6f09(6): jz 0xa23(%rip)
6f0f(5): mov 0x50(%rsp),%r13
6f14(7): lea 0x2efa(%rip),%rbx
6f1b(4): mov $0x27,(%r14)
6f1f(8): mov $0x2,0x8(%rsp)
6f27(6): mov $0x1,%r15d
6f2d(9): mov $0x1,0x18(%rsp)
6f36(5): mov $0x0,0xf(%rsp)
6f3b(5): mov %rbx,0x48(%rsp)
6f40(4): mov %al,0x7c(%rsp)
6f44(5): jmp 0xfffff8df(%rip)
6f49(7): nop 0x0(%rax)
6f50(5): cmp $0x0,0xf(%rsp)
6f55(6): jnz 0x8ab(%rip)
6f5b(3): test %r13,%r13
6f5e(6): jz 0x402(%rip)
6f64(2): xor %edx,%edx
6f66(6): cmp $0x0,0x50(%rsp)
6f6c(6): jnz 0x3f4(%rip)
6f72(5): mov %r13,0x50(%rsp)
6f77(4): add $0x3,%r15
6f7b(2): xor %eax,%eax
6f7d(5): mov %r12b,0x7c(%rsp)
6f82(3): xor %r8d,%r8d
6f85(3): mov %rdx,%r13
6f88(5): mov $0x27,%ebx
6f8d(5): jmp 0xfffffa1c(%rip)
6f92(6): nop 0x0(%rax,%rax,1)
6f98(5): test $0x4,0x78(%rsp)
6f9d(2): jz 0x23(%rip)
6f9f(4): lea 0x2(%rbp),%rcx
6fa3(3): cmp %r11,%rcx
6fa6(2): jnb 0x1a(%rip)
6fa8(5): mov 0x10(%rsp),%rax
6fad(5): cmp $0x3f,0x1(%rax,%rbp,1)
6fb2(6): jz 0x790(%rip)
6fb8(8): nop 0x0(%rax,%rax,1)
6fc0(2): xor %edx,%edx
6fc2(3): xor %r12d,%r12d
6fc5(2): xor %eax,%eax
6fc7(5): mov $0x3f,%ebx
6fcc(5): jmp 0xfffff9ac(%rip)
6fd1(7): nop 0x0(%rax)
6fd8(5): cmp $0x0,0xf(%rsp)
6fdd(6): jnz 0x823(%rip)
6fe3(3): xor %r12d,%r12d
6fe6(2): xor %eax,%eax
6fe8(5): mov $0x3f,%ebx
6fed(5): jmp 0xfffff9bc(%rip)
6ff2(6): nop 0x0(%rax,%rax,1)
6ff8(8): lea 0xa0(%rsp),%rax
7000(4): cmp $0xffffffff,%r11
7004(c): mov $0x0,0xa0(%rsp)
7010(5): mov %rax,0x28(%rsp)
7015(2): jnz 0x2f(%rip)
7017(5): mov 0x10(%rsp),%rdi
701c(5): mov %r8b,0x40(%rsp)
7021(5): mov %r10b,0x38(%rsp)
7026(5): mov %r9,0x30(%rsp)
702b(5): call 0xffffa655(%rip)
7030(6): movzx 0x40(%rsp),%r8d
7036(6): movzx 0x38(%rsp),%r10d
703c(3): mov %rax,%r11
703f(5): mov 0x30(%rsp),%r9
7044(8): lea 0x9c(%rsp),%rax
704c(2): xor %ecx,%ecx
704e(4): mov %bl,0x7e(%rsp)
7052(5): mov %r8b,0x7d(%rsp)
7057(3): mov %rcx,%rbx
705a(8): mov %r9,0x88(%rsp)
7062(5): mov %rax,0x38(%rsp)
7067(5): mov %r10b,0x7f(%rsp)
706c(8): mov %r15,0x80(%rsp)
7074(5): mov %r14,0x40(%rsp)
7079(5): mov %r13,0x70(%rsp)
707e(5): mov %r11,0x30(%rsp)
7083(5): mov 0x10(%rsp),%rax
7088(5): lea 0x0(%rbp,%rbx,1),%r14
708d(5): mov 0x30(%rsp),%rdx
7092(5): mov 0x28(%rsp),%rcx
7097(5): mov 0x38(%rsp),%rdi
709c(4): lea 0x0(%rax,%r14,1),%r13
70a0(3): sub %r14,%rdx
70a3(3): mov %r13,%rsi
70a6(5): call 0x1eaa(%rip)
70ab(3): test %rax,%rax
70ae(3): mov %rax,%r15
70b1(2): jz 0x50(%rip)
70b3(4): cmp $0xffffffff,%rax
70b7(6): jz 0x61e(%rip)
70bd(4): cmp $0xfffffffe,%rax
70c1(6): jz 0x5a0(%rip)
70c7(5): cmp $0x2,0x8(%rsp)
70cc(3): setz %al
70cf(4): and 0xf(%rsp),%al
70d3(6): jnz 0x19d(%rip)
70d9(7): mov 0x9c(%rsp),%edi
70e0(5): call 0xffffa7e0(%rip)
70e5(5): mov 0x28(%rsp),%rdi
70ea(2): test %eax,%eax
70ec(5): mov $0x0,%eax
70f1(4): cmove %eax,%r12d
70f5(3): add %r15,%rbx
70f8(5): call 0xffffa7b8(%rip)
70fd(2): test %eax,%eax
70ff(2): jz 0xffffff84(%rip)
7101(3): mov %r12d,%edx
7104(3): mov %rbx,%rdi
7107(6): movzx 0x7d(%rsp),%r8d
710d(3): xor $0x1,%edx
7110(5): movzx 0x7e(%rsp),%ebx
7115(6): movzx 0x7f(%rsp),%r10d
711b(4): and 0xd(%rsp),%dl
711f(8): mov 0x80(%rsp),%r15
7127(5): mov 0x40(%rsp),%r14
712c(5): mov 0x70(%rsp),%r13
7131(5): mov 0x30(%rsp),%r11
7136(4): cmp $0x1,%rdi
713a(6): jbe 0x601(%rip)
7140(3): mov %rdi,%rcx
7143(2): xor %esi,%esi
7145(6): movzx 0xf(%rsp),%r9d
714b(3): add %rbp,%rcx
714e(5): mov 0x10(%rsp),%rdi
7153(5): jmp 0xbb(%rip)
7158(8): nop 0x0(%rax,%rax,1)
7160(5): cmp $0x2,0x8(%rsp)
7165(3): setz %al
7168(3): test %r9b,%r9b
716b(6): jnz 0x4b5(%rip)
7171(3): mov %r8d,%esi
7174(3): xor $0x1,%esi
7177(3): and %sil,%al
717a(2): jz 0x31(%rip)
717c(3): cmp %r15,%r13
717f(2): jbe 0x7(%rip)
7181(5): mov $0x27,0x0(%r14,%r15,1)
7186(4): lea 0x1(%r15),%rsi
718a(3): cmp %rsi,%r13
718d(2): jbe 0x8(%rip)
718f(6): mov $0x24,0x1(%r14,%r15,1)
7195(4): lea 0x2(%r15),%rsi
7199(3): cmp %rsi,%r13
719c(2): jbe 0x8(%rip)
719e(6): mov $0x27,0x2(%r14,%r15,1)
71a4(4): add $0x3,%r15
71a8(3): mov %eax,%r8d
71ab(3): cmp %r15,%r13
71ae(2): jbe 0x7(%rip)
71b0(5): mov $0x5c,0x0(%r14,%r15,1)
71b5(4): lea 0x1(%r15),%rax
71b9(3): cmp %rax,%r13
71bc(2): jbe 0xf(%rip)
71be(2): mov %ebx,%eax
71c0(3): shr $0x6,%al
71c3(3): add $0x30,%eax
71c6(5): mov %al,0x1(%r14,%r15,1)
71cb(4): lea 0x2(%r15),%rax
71cf(3): cmp %rax,%r13
71d2(2): jbe 0x12(%rip)
71d4(2): mov %ebx,%eax
71d6(3): shr $0x3,%al
71d9(3): and $0x7,%eax
71dc(3): add $0x30,%eax
71df(5): mov %al,0x2(%r14,%r15,1)
71e4(3): and $0x7,%ebx
71e7(4): add $0x1,%rbp
71eb(4): add $0x3,%r15
71ef(3): add $0x30,%ebx
71f2(3): cmp %rcx,%rbp
71f5(6): jnb 0xfffff7eb(%rip)
71fb(2): mov %edx,%esi
71fd(3): cmp %r15,%r13
7200(2): jbe 0x6(%rip)
7202(4): mov %bl,0x0(%r14,%r15,1)
7206(4): movzx 0x0(%rdi,%rbp,1),%ebx
720a(4): add $0x1,%r15
720e(2): test %dl,%dl
7210(6): jnz 0xffffff50(%rip)
7216(2): mov %esi,%eax
7218(3): xor $0x1,%eax
721b(3): and %r8d,%eax
721e(3): test %r10b,%r10b
7221(2): jz 0x10(%rip)
7223(3): cmp %r15,%r13
7226(2): jbe 0x7(%rip)
7228(5): mov $0x5c,0x0(%r14,%r15,1)
722d(4): add $0x1,%r15
7231(4): add $0x1,%rbp
7235(3): cmp %rcx,%rbp
7238(6): jnb 0xfffff784(%rip)
723e(2): test %al,%al
7240(6): jz 0x3fe(%rip)
7246(3): cmp %r15,%r13
7249(2): jbe 0x7(%rip)
724b(5): mov $0x27,0x0(%r14,%r15,1)
7250(4): lea 0x1(%r15),%rax
7254(3): cmp %rax,%r13
7257(2): jbe 0x8(%rip)
7259(6): mov $0x27,0x1(%r14,%r15,1)
725f(4): add $0x2,%r15
7263(3): xor %r10d,%r10d
7266(3): xor %r8d,%r8d
7269(2): jmp 0xffffff94(%rip)
726b(5): nop 0x0(%rax,%rax,1)
7270(4): cmp $0x1,%r15
7274(6): jz 0xfffffe65(%rip)
727a(5): mov 0x10(%rsp),%rdi
727f(4): lea 0x0(%rdi,%r15,1),%rcx
7283(5): lea 0x1(%rdi,%r14,1),%rdx
7288(4): lea 0x0(%rcx,%r14,1),%r8
728c(2): jmp 0x11(%rip)
728e(2): nop 
7290(4): add $0x1,%rdx
7294(3): cmp %rdx,%r8
7297(6): jz 0xfffffe42(%rip)
729d(3): movzx (%rdx),%ecx
72a0(3): sub $0x5b,%ecx
72a3(3): cmp $0x21,%cl
72a6(2): jnbe 0xffffffea(%rip)
72a8(5): mov $0x1,%esi
72ad(3): shl/sal %cl,%rsi
72b0(3): mov %rsi,%rcx
72b3(a): mov $0x8589934635,%rsi
72bd(3): test %rsi,%rcx
72c0(2): jz 0xffffffd0(%rip)
72c2(5): mov 0x40(%rsp),%r14
72c7(5): mov 0x70(%rsp),%r13
72cc(5): mov 0x30(%rsp),%rbp
72d1(8): mov $0x2,0x8(%rsp)
72d9(5): cmp $0x0,0xd(%rsp)
72de(2): jz 0x12(%rip)
72e0(2): test %al,%al
72e2(5): mov $0x4,%eax
72e7(5): cmove 0x8(%rsp),%eax
72ec(4): mov %eax,0x8(%rsp)
72f0(4): sub $0x8,%rsp
72f4(3): mov %rbp,%rcx
72f7(3): mov %r13,%rsi
72fa(4): push 0x68(%rsp)
72fe(4): push 0x78(%rsp)
7302(3): mov %r14,%rdi
7305(2): push $0x0
7307(8): mov 0x98(%rsp),%r9d
730f(5): mov 0x28(%rsp),%r8d
7314(5): mov 0x30(%rsp),%rdx
7319(4): and $0xfd,%r9d
731d(5): call 0xfffff433(%rip)
7322(4): add $0x20,%rsp
7326(3): mov %rax,%r15
7329(8): mov 0xa8(%rsp),%rbx
7331(9): xor $0x28,%rbx
733a(3): mov %r15,%rax
733d(6): jnz 0x606(%rip)
7343(7): add $0xb8,%rsp
734a(1): pop %rbx
734b(1): pop %rbp
734c(2): pop %r12
734e(2): pop %r13
7350(2): pop %r14
7352(2): pop %r15
7354(1): ret near (%rsp)
7355(3): nop (%rax)
7358(3): mov %r11,%rbp
735b(5): jmp 0xffffff7e(%rip)
7360(3): cmp %r15,%r13
7363(2): jbe 0x7(%rip)
7365(5): mov $0x27,0x0(%r14,%r15,1)
736a(4): lea 0x1(%r15),%rax
736e(3): cmp %rax,%r13
7371(2): jbe 0x8(%rip)
7373(6): mov $0x5c,0x1(%r14,%r15,1)
7379(4): lea 0x2(%r15),%rax
737d(3): cmp %rax,%r13
7380(6): jbe 0x5f2(%rip)
7386(3): mov %r13,%rdx
7389(6): mov $0x27,0x2(%r14,%r15,1)
738f(5): mov 0x50(%rsp),%r13
7394(5): jmp 0xfffffbde(%rip)
7399(3): mov %r12d,%eax
739c(5): mov $0x30,%ebx
73a1(3): xor %r12d,%r12d
73a4(5): jmp 0xfffff605(%rip)
73a9(6): mov $0x27,0x2(%r14,%r15,1)
73af(5): jmp 0xfffff9ca(%rip)
73b4(2): test %ebx,%ebx
73b6(6): jnz 0xfffff42d(%rip)
73bc(5): mov $0x1,0xd(%rsp)
73c1(3): test %r13,%r13
73c4(6): jnz 0x596(%rip)
73ca(7): lea 0x2a44(%rip),%rax
73d1(9): mov $0x0,0x50(%rsp)
73da(5): mov $0x1,0xe(%rsp)
73df(5): mov $0x0,0x7c(%rsp)
73e4(3): xor %r12d,%r12d
73e7(5): mov $0x0,0xf(%rsp)
73ec(9): mov $0x1,0x18(%rsp)
73f5(5): mov %rax,0x48(%rsp)
73fa(6): mov $0x1,%r15d
7400(8): mov $0x2,0x8(%rsp)
7408(5): jmp 0xfffff41b(%rip)
740d(3): nop (%rax)
7410(2): test %ebx,%ebx
7412(6): jnz 0x3fb(%rip)
7418(3): test %r13,%r13
741b(6): jz 0x22b(%rip)
7421(4): mov $0x22,(%r14)
7425(5): mov $0x1,0xe(%rsp)
742a(3): xor %r12d,%r12d
742d(5): mov $0x0,0x7c(%rsp)
7432(9): mov $0x0,0x50(%rsp)
743b(7): lea 0x29d1(%rip),%rax
7442(5): mov $0x0,0xf(%rsp)
7447(5): mov $0x1,0xd(%rsp)
744c(9): mov $0x1,0x18(%rsp)
7455(6): mov $0x1,%r15d
745b(5): mov %rax,0x48(%rsp)
7460(5): jmp 0xfffff3c3(%rip)
7465(7): lea 0x29a7(%rip),%rax
746c(5): mov $0x1,0xe(%rsp)
7471(5): mov $0x0,0x7c(%rsp)
7476(3): xor %r12d,%r12d
7479(9): mov $0x0,0x50(%rsp)
7482(5): mov $0x1,0xf(%rsp)
7487(5): mov $0x1,0xd(%rsp)
748c(9): mov $0x1,0x18(%rsp)
7495(3): xor %r15d,%r15d
7498(5): mov %rax,0x48(%rsp)
749d(8): mov $0x5,0x8(%rsp)
74a5(5): jmp 0xfffff37e(%rip)
74aa(5): mov $0x1,0xe(%rsp)
74af(5): mov $0x0,0x7c(%rsp)
74b4(3): xor %r12d,%r12d
74b7(9): mov $0x0,0x50(%rsp)
74c0(5): mov $0x0,0xf(%rsp)
74c5(3): xor %r15d,%r15d
74c8(5): mov $0x1,0xd(%rsp)
74cd(9): mov $0x0,0x18(%rsp)
74d6(9): mov $0x0,0x48(%rsp)
74df(5): jmp 0xfffff344(%rip)
74e4(5): cmp $0xa,0x8(%rsp)
74e9(2): jz 0x58(%rip)
74eb(7): lea 0x2925(%rip),%rsi
74f2(2): xor %edi,%edi
74f4(5): mov $0x5,%edx
74f9(5): call 0xffffa167(%rip)
74fe(3): mov %rax,%rcx
7501(5): mov %rax,0x68(%rsp)
7506(7): lea 0x290a(%rip),%rax
750d(3): cmp %rax,%rcx
7510(6): jz 0x39e(%rip)
7516(7): lea 0x28f8(%rip),%rsi
751d(2): xor %edi,%edi
751f(5): mov $0x5,%edx
7524(5): call 0xffffa13c(%rip)
7529(3): mov %rax,%rcx
752c(5): mov %rax,0x60(%rsp)
7531(7): lea 0x28dd(%rip),%rax
7538(3): cmp %rax,%rcx
753b(6): jz 0x389(%rip)
7541(3): xor %r15d,%r15d
7544(2): test %ebx,%ebx
7546(6): jz 0x1c7(%rip)
754c(2): test %ebx,%ebx
754e(5): mov 0x60(%rsp),%rbx
7553(5): setnz 0xf(%rsp)
7558(3): xor %r12d,%r12d
755b(3): mov %rbx,%rdi
755e(5): call 0xffffa122(%rip)
7563(5): mov %rbx,0x48(%rsp)
7568(5): mov %rax,0x18(%rsp)
756d(5): mov $0x1,0xe(%rsp)
7572(5): mov $0x0,0x7c(%rsp)
7577(9): mov $0x0,0x50(%rsp)
7580(5): mov $0x1,0xd(%rsp)
7585(5): jmp 0xfffff29e(%rip)
758a(5): mov $0x1,0xe(%rsp)
758f(5): mov $0x0,0x7c(%rsp)
7594(3): xor %r12d,%r12d
7597(9): mov $0x0,0x50(%rsp)
75a0(5): mov $0x0,0xf(%rsp)
75a5(3): xor %r15d,%r15d
75a8(5): mov $0x0,0xd(%rsp)
75ad(9): mov $0x0,0x18(%rsp)
75b6(9): mov $0x0,0x48(%rsp)
75bf(5): jmp 0xfffff264(%rip)
75c4(5): mov $0x1,0xe(%rsp)
75c9(5): mov $0x0,0x7c(%rsp)
75ce(3): xor %r12d,%r12d
75d1(9): mov $0x0,0x50(%rsp)
75da(5): mov $0x1,0xf(%rsp)
75df(5): mov $0x1,0xd(%rsp)
75e4(5): jmp 0xfffff21f(%rip)
75e9(3): cmp %r15,%r13
75ec(2): jbe 0x7(%rip)
75ee(5): mov $0x30,0x0(%r14,%r15,1)
75f3(4): lea 0x2(%rcx),%rax
75f7(3): cmp %rax,%r13
75fa(2): jbe 0x8(%rip)
75fc(6): mov $0x30,0x2(%r14,%rcx,1)
7602(3): mov %r12d,%eax
7605(4): lea 0x3(%rcx),%r15
7609(3): xor %r12d,%r12d
760c(5): mov $0x30,%ebx
7611(5): jmp 0xfffff367(%rip)
7616(a): nop 0x0(%rax,%rax,1)
7620(5): movzx 0xf(%rsp),%ebx
7625(3): mov %r11,%rbp
7628(4): mov %bl,0xd(%rsp)
762c(5): jmp 0xfffffcad(%rip)
7631(5): movzx 0xd(%rsp),%edx
7636(3): xor %r12d,%r12d
7639(5): jmp 0xfffffb07(%rip)
763e(3): xor %r10d,%r10d
7641(5): jmp 0xfffffbbc(%rip)
7646(9): mov $0x0,0x50(%rsp)
764f(5): mov $0x1,0xe(%rsp)
7654(3): xor %r12d,%r12d
7657(5): mov $0x0,0x7c(%rsp)
765c(5): jmp 0xfffffddf(%rip)
7661(5): mov 0x30(%rsp),%r11
7666(3): mov %r14,%rsi
7669(3): mov %r13,%rcx
766c(3): mov %rbx,%rax
766f(3): mov %rbx,%rdi
7672(6): movzx 0x7d(%rsp),%r8d
7678(5): movzx 0x7e(%rsp),%ebx
767d(8): mov 0x88(%rsp),%r9
7685(3): cmp %r11,%rsi
7688(6): movzx 0x7f(%rsp),%r10d
768e(8): mov 0x80(%rsp),%r15
7696(5): mov 0x40(%rsp),%r14
769b(5): mov 0x70(%rsp),%r13
76a0(2): jnb 0x28(%rip)
76a2(3): cmp $0x0,(%rcx)
76a5(2): jnz 0x12(%rip)
76a7(2): jmp 0x21(%rip)
76a9(7): nop 0x0(%rax)
76b0(5): cmp $0x0,0x0(%r9,%rax,1)
76b5(2): jz 0x10(%rip)
76b7(4): add $0x1,%rax
76bb(5): lea 0x0(%rbp,%rax,1),%rdx
76c0(3): cmp %rdx,%r11
76c3(2): jnbe 0xffffffed(%rip)
76c5(3): mov %rax,%rdi
76c8(5): movzx 0xd(%rsp),%edx
76cd(3): xor %r12d,%r12d
76d0(5): jmp 0xfffffa66(%rip)
76d5(3): mov %rbx,%rdi
76d8(6): movzx 0x7d(%rsp),%r8d
76de(5): movzx 0x7e(%rsp),%ebx
76e3(6): movzx 0x7f(%rsp),%r10d
76e9(8): mov 0x80(%rsp),%r15
76f1(3): xor %r12d,%r12d
76f4(5): mov 0x40(%rsp),%r14
76f9(5): mov 0x70(%rsp),%r13
76fe(5): mov 0x30(%rsp),%r11
7703(5): movzx 0xd(%rsp),%edx
7708(5): jmp 0xfffffa2e(%rip)
770d(5): mov 0x68(%rsp),%rdx
7712(3): movzx (%rdx),%eax
7715(2): test %al,%al
7717(6): jz 0xfffffe35(%rip)
771d(3): nop (%rax)
7720(3): cmp %r15,%r13
7723(2): jbe 0x6(%rip)
7725(4): mov %al,0x0(%r14,%r15,1)
7729(4): add $0x1,%r15
772d(5): movzx 0x0(%rdx,%r15,1),%eax
7732(2): test %al,%al
7734(2): jnz 0xffffffec(%rip)
7736(5): jmp 0xfffffe16(%rip)
773b(2): mov %edx,%eax
773d(5): jmp 0xfffff55a(%rip)
7742(4): movzx 0x0(%rax,%rcx,1),%ebx
7746(3): cmp $0x3e,%bl
7749(6): jnbe 0xfffff877(%rip)
774f(a): mov $0x8070630310989004800,%rax
7759(4): bt %rbx,%rax
775d(6): jnb 0xfffff863(%rip)
7763(5): cmp $0x0,0xf(%rsp)
7768(6): jnz 0x1ea(%rip)
776e(3): cmp %r15,%r13
7771(2): jbe 0x7(%rip)
7773(5): mov $0x3f,0x0(%r14,%r15,1)
7778(4): lea 0x1(%r15),%rax
777c(3): cmp %rax,%r13
777f(2): jbe 0x8(%rip)
7781(6): mov $0x22,0x1(%r14,%r15,1)
7787(4): lea 0x2(%r15),%rax
778b(3): cmp %rax,%r13
778e(2): jbe 0x8(%rip)
7790(6): mov $0x22,0x2(%r14,%r15,1)
7796(4): lea 0x3(%r15),%rax
779a(3): cmp %rax,%r13
779d(2): jbe 0x8(%rip)
779f(6): mov $0x3f,0x3(%r14,%r15,1)
77a5(4): add $0x4,%r15
77a9(2): xor %edx,%edx
77ab(3): xor %r12d,%r12d
77ae(2): xor %eax,%eax
77b0(3): mov %rcx,%rbp
77b3(5): jmp 0xfffff1c5(%rip)
77b8(2): test %ebx,%ebx
77ba(6): jz 0x18e(%rip)
77c0(7): lea 0x264e(%rip),%rax
77c7(5): mov $0x1,0xe(%rsp)
77cc(5): mov $0x0,0x7c(%rsp)
77d1(3): xor %r12d,%r12d
77d4(9): mov $0x0,0x50(%rsp)
77dd(5): mov $0x1,0xf(%rsp)
77e2(5): mov $0x0,0xd(%rsp)
77e7(9): mov $0x1,0x18(%rsp)
77f0(3): xor %r15d,%r15d
77f3(5): mov %rax,0x48(%rsp)
77f8(5): jmp 0xfffff02b(%rip)
77fd(3): nop (%rax)
7800(3): mov %r11,%rbp
7803(5): movzx 0xf(%rsp),%eax
7808(5): jmp 0xfffffad1(%rip)
780d(7): lea 0x25ff(%rip),%rax
7814(5): mov $0x1,0xe(%rsp)
7819(5): mov $0x0,0x7c(%rsp)
781e(3): xor %r12d,%r12d
7821(9): mov $0x0,0x50(%rsp)
782a(5): mov $0x1,0xf(%rsp)
782f(5): mov $0x1,0xd(%rsp)
7834(9): mov $0x1,0x18(%rsp)
783d(3): xor %r15d,%r15d
7840(5): mov %rax,0x48(%rsp)
7845(5): jmp 0xffffefde(%rip)
784a(2): mov %edx,%eax
784c(5): mov 0x48(%rsp),%rbx
7851(3): test %rbx,%rbx
7854(2): jz 0x2e(%rip)
7856(2): test %al,%al
7858(2): jz 0x2a(%rip)
785a(3): movzx (%rbx),%ecx
785d(3): mov %rbx,%rax
7860(2): test %cl,%cl
7862(2): jz 0x20(%rip)
7864(3): mov %r15,%rdx
7867(3): sub %r15,%rax
786a(3): cmp %rdx,%r13
786d(2): jbe 0x6(%rip)
786f(4): mov %cl,0x0(%r14,%rdx,1)
7873(4): add $0x1,%rdx
7877(4): movzx 0x0(%rax,%rdx,1),%ecx
787b(2): test %cl,%cl
787d(2): jnz 0xffffffed(%rip)
787f(3): mov %rdx,%r15
7882(3): cmp %r15,%r13
7885(6): jbe 0xfffffaa4(%rip)
788b(5): mov $0x0,0x0(%r14,%r15,1)
7890(5): jmp 0xfffffa99(%rip)
7895(5): cmp $0x2,0x8(%rsp)
789a(5): movzx 0xf(%rsp),%ebx
789f(3): mov %r11,%rbp
78a2(3): setz %al
78a5(4): mov %bl,0xd(%rsp)
78a9(5): jmp 0xfffffa30(%rip)
78ae(4): mov 0x8(%rsp),%esi
78b2(3): mov %rcx,%rdi
78b5(5): call 0xffffedab(%rip)
78ba(5): mov %rax,0x68(%rsp)
78bf(5): jmp 0xfffffc57(%rip)
78c4(4): mov 0x8(%rsp),%esi
78c8(3): mov %rcx,%rdi
78cb(5): call 0xffffed95(%rip)
78d0(5): mov %rax,0x60(%rsp)
78d5(5): jmp 0xfffffc6c(%rip)
78da(5): movzx 0xf(%rsp),%ebx
78df(3): mov %r11,%rbp
78e2(2): mov %edx,%eax
78e4(4): mov %bl,0xd(%rsp)
78e8(5): jmp 0xfffff9f1(%rip)
78ed(4): sub $0x8,%rsp
78f1(6): mov $0x5,%r8d
78f7(3): mov %r11,%rcx
78fa(4): push 0x68(%rsp)
78fe(4): push 0x78(%rsp)
7902(3): mov %r14,%rdi
7905(4): push 0x38(%rsp)
7909(8): mov 0x98(%rsp),%r9d
7911(5): mov 0x30(%rsp),%rdx
7916(5): mov 0x70(%rsp),%rsi
791b(5): call 0xffffee35(%rip)
7920(4): add $0x20,%rsp
7924(3): mov %rax,%r15
7927(5): jmp 0xfffffa02(%rip)
792c(5): movzx 0x7c(%rsp),%eax
7931(5): jmp 0xffffff1b(%rip)
7936(8): mov $0x2,0x8(%rsp)
793e(5): jmp 0xfffff99b(%rip)
7943(5): call 0xffff9d4d(%rip)
7948(5): mov $0x0,0xd(%rsp)
794d(5): jmp 0xfffffa74(%rip)
7952(3): mov %r11,%rbp
7955(5): jmp 0xfffff99b(%rip)
795a(5): mov $0x1,0xe(%rsp)
795f(2): xor %eax,%eax
7961(3): xor %r12d,%r12d
7964(9): mov $0x0,0x50(%rsp)
796d(5): jmp 0xfffff5a7(%rip)
7972(3): mov %r13,%rdx
7975(5): mov 0x50(%rsp),%r13
797a(5): jmp 0xfffff5f8(%rip)
797f(5): call 0xffff9c41(%rip)

"quotearg_n_options" :
7990(2): push %r15
7992(2): push %r14
7994(3): movsxd %edi,%r15
7997(2): push %r13
7999(2): push %r12
799b(3): mov %rdx,%r14
799e(1): push %rbp
799f(1): push %rbx
79a0(3): mov %rcx,%rbp
79a3(4): sub $0x28,%rsp
79a7(5): mov %rsi,0x8(%rsp)
79ac(5): call 0xffff9c24(%rip)
79b1(3): mov %rax,%r13
79b4(2): mov (%rax),%eax
79b6(3): test %r15d,%r15d
79b9(7): mov 0x2046c0(%rip),%rbx
79c0(4): mov %eax,0x18(%rsp)
79c4(6): js 0x16d(%rip)
79ca(7): cmp %r15d,0x2046a7(%rip)
79d1(2): jnle 0x64(%rip)
79d3(7): cmp $0x7fffffff,%r15d
79da(6): jz 0x15c(%rip)
79e0(4): lea 0x1(%r15),%r12d
79e4(7): lea 0x2046a5(%rip),%rax
79eb(3): movsxd %r12d,%rsi
79ee(4): shl/sal $0x4,%rsi
79f2(3): cmp %rax,%rbx
79f5(6): jz 0x11b(%rip)
79fb(3): mov %rbx,%rdi
79fe(5): call 0xf82(%rip)
7a03(3): mov %rax,%rbx
7a06(7): mov %rax,0x204673(%rip)
7a0d(7): movsxd 0x204664(%rip),%rdi
7a14(3): mov %r12d,%edx
7a17(2): xor %esi,%esi
7a19(2): sub %edi,%edx
7a1b(4): shl/sal $0x4,%rdi
7a1f(3): movsxd %edx,%rdx
7a22(3): add %rbx,%rdi
7a25(4): shl/sal $0x4,%rdx
7a29(5): call 0xffff9cd7(%rip)
7a2e(7): mov %r12d,0x204643(%rip)
7a35(3): mov 0x4(%rbp),%eax
7a38(4): shl/sal $0x4,%r15
7a3c(4): sub $0x8,%rsp
7a40(3): add %r15,%rbx
7a43(4): lea 0x8(%rbp),%r15
7a47(4): mov 0x0(%rbp),%r8d
7a4b(3): mov (%rbx),%r11
7a4e(4): mov 0x8(%rbx),%r12
7a52(3): mov %r14,%rcx
7a55(3): or $0x1,%eax
7a58(4): mov %eax,0x24(%rsp)
7a5c(3): push 0x30(%rbp)
7a5f(3): mov %eax,%r9d
7a62(3): push 0x28(%rbp)
7a65(2): push %r15
7a67(3): mov %r11,%rsi
7a6a(5): mov 0x28(%rsp),%rdx
7a6f(3): mov %r12,%rdi
7a72(5): mov %r11,0x30(%rsp)
7a77(5): call 0xffffecd9(%rip)
7a7c(4): add $0x20,%rsp
7a80(5): mov 0x10(%rsp),%r11
7a85(3): cmp %rax,%r11
7a88(2): jnbe 0x69(%rip)
7a8a(4): lea 0x1(%rax),%rsi
7a8e(7): lea 0x2046ab(%rip),%rax
7a95(3): cmp %rax,%r12
7a98(3): mov %rsi,(%rbx)
7a9b(2): jz 0x14(%rip)
7a9d(3): mov %r12,%rdi
7aa0(5): mov %rsi,0x10(%rsp)
7aa5(5): call 0xffff9b0b(%rip)
7aaa(5): mov 0x10(%rsp),%rsi
7aaf(3): mov %rsi,%rdi
7ab2(5): mov %rsi,0x10(%rsp)
7ab7(5): call 0xe69(%rip)
7abc(4): sub $0x8,%rsp
7ac0(4): mov %rax,0x8(%rbx)
7ac4(4): mov 0x0(%rbp),%r8d
7ac8(3): push 0x30(%rbp)
7acb(3): push 0x28(%rbp)
7ace(3): mov %r14,%rcx
7ad1(2): push %r15
7ad3(5): mov 0x3c(%rsp),%r9d
7ad8(3): mov %rax,%rdi
7adb(5): mov 0x28(%rsp),%rdx
7ae0(5): mov 0x30(%rsp),%rsi
7ae5(3): mov %rax,%r12
7ae8(5): call 0xffffec68(%rip)
7aed(4): add $0x20,%rsp
7af1(4): mov 0x18(%rsp),%eax
7af5(4): mov %eax,0x0(%r13)
7af9(4): add $0x28,%rsp
7afd(3): mov %r12,%rax
7b00(1): pop %rbx
7b01(1): pop %rbp
7b02(2): pop %r12
7b04(2): pop %r13
7b06(2): pop %r14
7b08(2): pop %r15
7b0a(1): ret near (%rsp)
7b0b(5): nop 0x0(%rax,%rax,1)
7b10(2): xor %edi,%edi
7b12(5): call 0xe6e(%rip)
7b17(8): movdqa 0x204571(%rip),%xmm0
7b1f(3): mov %rax,%rbx
7b22(7): mov %rax,0x204557(%rip)
7b29(3): movups %xmm0,(%rax)
7b2c(5): jmp 0xfffffee1(%rip)
7b31(5): call 0xffff9a8f(%rip)
7b36(5): call 0x103a(%rip)

"clone_quoting_options" :
7b40(2): push %r12
7b42(1): push %rbp
7b43(1): push %rbx
7b44(3): mov %rdi,%rbx
7b47(5): call 0xffff9a89(%rip)
7b4c(3): mov (%rax),%r12d
7b4f(3): mov %rax,%rbp
7b52(7): lea 0x2046e7(%rip),%rax
7b59(3): test %rbx,%rbx
7b5c(5): mov $0x38,%esi
7b61(4): cmove %rax,%rbx
7b65(3): mov %rbx,%rdi
7b68(5): call 0xfb8(%rip)
7b6d(4): mov %r12d,0x0(%rbp)
7b71(1): pop %rbx
7b72(1): pop %rbp
7b73(2): pop %r12
7b75(1): ret near (%rsp)

"get_quoting_style" :
7b80(7): lea 0x2046b9(%rip),%rax
7b87(3): test %rdi,%rdi
7b8a(4): cmove %rax,%rdi
7b8e(2): mov (%rdi),%eax
7b90(1): ret near (%rsp)

"set_quoting_style" :
7ba0(7): lea 0x204699(%rip),%rax
7ba7(3): test %rdi,%rdi
7baa(4): cmove %rax,%rdi
7bae(2): mov %esi,(%rdi)
7bb0(1): ret near (%rsp)

"set_char_quoting" :
7bc0(7): lea 0x204679(%rip),%rax
7bc7(3): test %rdi,%rdi
7bca(2): mov %esi,%ecx
7bcc(4): cmove %rax,%rdi
7bd0(2): mov %esi,%eax
7bd2(3): and $0x1f,%ecx
7bd5(3): shr $0x5,%al
7bd8(3): movzx %al,%eax
7bdb(5): lea 0x8(%rdi,%rax,4),%rdi
7be0(2): mov (%rdi),%esi
7be2(2): mov %esi,%eax
7be4(2): shr %cl,%eax
7be6(2): xor %eax,%edx
7be8(3): and $0x1,%eax
7beb(3): and $0x1,%edx
7bee(2): shl/sal %cl,%edx
7bf0(2): xor %esi,%edx
7bf2(2): mov %edx,(%rdi)
7bf4(1): ret near (%rsp)

"set_quoting_flags" :
7c00(7): lea 0x204639(%rip),%rax
7c07(3): test %rdi,%rdi
7c0a(4): cmove %rax,%rdi
7c0e(3): mov 0x4(%rdi),%eax
7c11(3): mov %esi,0x4(%rdi)
7c14(1): ret near (%rsp)

"set_custom_quoting" :
7c20(7): lea 0x204619(%rip),%rax
7c27(3): test %rdi,%rdi
7c2a(4): cmove %rax,%rdi
7c2e(3): test %rsi,%rsi
7c31(6): mov $0xa,(%rdi)
7c37(2): jz 0x10(%rip)
7c39(3): test %rdx,%rdx
7c3c(2): jz 0xb(%rip)
7c3e(4): mov %rsi,0x28(%rdi)
7c42(4): mov %rdx,0x30(%rdi)
7c46(1): ret near (%rsp)
7c47(4): sub $0x8,%rsp
7c4b(5): call 0xffff9975(%rip)

"quotearg_buffer" :
7c50(2): push %r15
7c52(2): push %r14
7c54(7): lea 0x2045e5(%rip),%rax
7c5b(2): push %r13
7c5d(2): push %r12
7c5f(3): mov %rdi,%r13
7c62(1): push %rbp
7c63(1): push %rbx
7c64(3): mov %r8,%rbx
7c67(3): mov %rsi,%r14
7c6a(3): mov %rdx,%r15
7c6d(4): sub $0x18,%rsp
7c71(3): test %r8,%r8
7c74(4): cmove %rax,%rbx
7c78(5): mov %rcx,0x8(%rsp)
7c7d(5): call 0xffff9953(%rip)
7c82(3): mov (%rax),%r12d
7c85(3): mov %rax,%rbp
7c88(4): lea 0x8(%rbx),%rax
7c8c(4): sub $0x8,%rsp
7c90(4): mov 0x4(%rbx),%r9d
7c94(3): push 0x30(%rbx)
7c97(3): mov (%rbx),%r8d
7c9a(3): push 0x28(%rbx)
7c9d(3): mov %r15,%rdx
7ca0(1): push %rax
7ca1(5): mov 0x28(%rsp),%rcx
7ca6(3): mov %r14,%rsi
7ca9(3): mov %r13,%rdi
7cac(5): call 0xffffeaa4(%rip)
7cb1(4): mov %r12d,0x0(%rbp)
7cb5(4): add $0x38,%rsp
7cb9(1): pop %rbx
7cba(1): pop %rbp
7cbb(2): pop %r12
7cbd(2): pop %r13
7cbf(2): pop %r14
7cc1(2): pop %r15
7cc3(1): ret near (%rsp)

"quotearg_alloc_mem" :
7cd0(2): push %r15
7cd2(2): push %r14
7cd4(7): lea 0x204565(%rip),%rax
7cdb(2): push %r13
7cdd(2): push %r12
7cdf(3): mov %rdx,%r12
7ce2(1): push %rbp
7ce3(1): push %rbx
7ce4(3): mov %rcx,%rbx
7ce7(3): mov %rdi,%r14
7cea(3): mov %rsi,%r15
7ced(4): sub $0x38,%rsp
7cf1(3): test %rcx,%rcx
7cf4(4): cmove %rax,%rbx
7cf8(2): xor %ebp,%ebp
7cfa(5): call 0xffff98d6(%rip)
7cff(3): test %r12,%r12
7d02(3): mov %rax,%r13
7d05(2): mov (%rax),%eax
7d07(4): setz %bpl
7d0b(3): or 0x4(%rbx),%ebp
7d0e(4): lea 0x8(%rbx),%r10
7d12(4): sub $0x8,%rsp
7d16(3): mov (%rbx),%r8d
7d19(3): mov %r15,%rcx
7d1c(4): mov %eax,0x14(%rsp)
7d20(3): push 0x30(%rbx)
7d23(3): mov %r14,%rdx
7d26(3): push 0x28(%rbx)
7d29(2): push %r10
7d2b(2): xor %esi,%esi
7d2d(3): mov %ebp,%r9d
7d30(2): xor %edi,%edi
7d32(5): mov %r10,0x40(%rsp)
7d37(5): call 0xffffea19(%rip)
7d3c(4): lea 0x1(%rax),%rsi
7d40(5): mov %rax,0x48(%rsp)
7d45(4): add $0x20,%rsp
7d49(3): mov %rsi,%rdi
7d4c(5): mov %rsi,0x18(%rsp)
7d51(5): call 0xbcf(%rip)
7d56(5): mov %rax,0x10(%rsp)
7d5b(4): sub $0x8,%rsp
7d5f(3): push 0x30(%rbx)
7d62(3): push 0x28(%rbx)
7d65(5): mov 0x38(%rsp),%r10
7d6a(3): mov %ebp,%r9d
7d6d(3): mov (%rbx),%r8d
7d70(3): mov %r15,%rcx
7d73(3): mov %r14,%rdx
7d76(3): mov %rax,%rdi
7d79(2): push %r10
7d7b(5): mov 0x38(%rsp),%rsi
7d80(5): call 0xffffe9d0(%rip)
7d85(4): mov 0x2c(%rsp),%eax
7d89(4): add $0x20,%rsp
7d8d(3): test %r12,%r12
7d90(4): mov %eax,0x0(%r13)
7d94(2): jz 0xb(%rip)
7d96(5): mov 0x28(%rsp),%r11
7d9b(4): mov %r11,(%r12)
7d9f(5): mov 0x10(%rsp),%rax
7da4(4): add $0x38,%rsp
7da8(1): pop %rbx
7da9(1): pop %rbp
7daa(2): pop %r12
7dac(2): pop %r13
7dae(2): pop %r14
7db0(2): pop %r15
7db2(1): ret near (%rsp)

"quotearg_alloc" :
7dc0(3): mov %rdx,%rcx
7dc3(2): xor %edx,%edx
7dc5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
7dd0(6): mov 0x2042a2(%rip),%eax
7dd6(2): push %r12
7dd8(7): mov 0x2042a1(%rip),%r12
7ddf(1): push %rbp
7de0(1): push %rbx
7de1(3): cmp $0x1,%eax
7de4(2): jle 0x2d(%rip)
7de6(3): sub $0x2,%eax
7de9(5): lea 0x18(%r12),%rbx
7dee(4): shl/sal $0x4,%rax
7df2(5): lea 0x28(%r12,%rax,1),%rbp
7df7(9): nop 0x0(%rax,%rax,1)
7e00(3): mov (%rbx),%rdi
7e03(4): add $0x10,%rbx
7e07(5): call 0xffff97a9(%rip)
7e0c(3): cmp %rbp,%rbx
7e0f(2): jnz 0xfffffff1(%rip)
7e11(5): mov 0x8(%r12),%rdi
7e16(7): lea 0x204323(%rip),%rbx
7e1d(3): cmp %rbx,%rdi
7e20(2): jz 0x19(%rip)
7e22(5): call 0xffff978e(%rip)
7e27(b): mov $0x100,0x20425e(%rip)
7e32(7): mov %rbx,0x20425f(%rip)
7e39(7): lea 0x204250(%rip),%rbx
7e40(3): cmp %rbx,%r12
7e43(2): jz 0x11(%rip)
7e45(3): mov %r12,%rdi
7e48(5): call 0xffff9768(%rip)
7e4d(7): mov %rbx,0x20422c(%rip)
7e54(1): pop %rbx
7e55(a): mov $0x1,0x204219(%rip)
7e5f(1): pop %rbp
7e60(2): pop %r12
7e62(1): ret near (%rsp)

"quotearg_n" :
7e70(7): lea 0x2043c9(%rip),%rcx
7e77(7): mov $0xffffffff,%rdx
7e7e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
7e90(7): lea 0x2043a9(%rip),%rcx
7e97(5): jmp 0xfffffaf9(%rip)

"quotearg" :
7ea0(7): lea 0x204399(%rip),%rcx
7ea7(3): mov %rdi,%rsi
7eaa(7): mov $0xffffffff,%rdx
7eb1(2): xor %edi,%edi
7eb3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
7ec0(7): lea 0x204379(%rip),%rcx
7ec7(3): mov %rsi,%rdx
7eca(3): mov %rdi,%rsi
7ecd(2): xor %edi,%edi
7ecf(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
7ee0(4): sub $0x48,%rsp
7ee4(3): mov %rdx,%rax
7ee7(9): mov $0x28,%rdx
7ef0(5): mov %rdx,0x38(%rsp)
7ef5(2): xor %edx,%edx
7ef7(3): cmp $0xa,%esi
7efa(2): jz 0x6a(%rip)
7efc(3): mov %esi,(%rsp)
7eff(3): mov %rsp,%rcx
7f02(7): mov $0xffffffff,%rdx
7f09(3): mov %rax,%rsi
7f0c(9): mov $0x0,0x4(%rsp)
7f15(9): mov $0x0,0xc(%rsp)
7f1e(9): mov $0x0,0x14(%rsp)
7f27(9): mov $0x0,0x1c(%rsp)
7f30(9): mov $0x0,0x24(%rsp)
7f39(9): mov $0x0,0x2c(%rsp)
7f42(8): mov $0x0,0x34(%rsp)
7f4a(5): call 0xfffffa46(%rip)
7f4f(5): mov 0x38(%rsp),%rcx
7f54(9): xor $0x28,%rcx
7f5d(2): jnz 0xc(%rip)
7f5f(4): add $0x48,%rsp
7f63(1): ret near (%rsp)
7f64(5): call 0xffff965c(%rip)
7f69(5): call 0xffff9727(%rip)

"quotearg_n_style_mem" :
7f70(4): sub $0x48,%rsp
7f74(3): mov %rdx,%rax
7f77(3): mov %rcx,%rdx
7f7a(9): mov $0x28,%rcx
7f83(5): mov %rcx,0x38(%rsp)
7f88(2): xor %ecx,%ecx
7f8a(3): cmp $0xa,%esi
7f8d(2): jz 0x63(%rip)
7f8f(3): mov %esi,(%rsp)
7f92(3): mov %rsp,%rcx
7f95(3): mov %rax,%rsi
7f98(9): mov $0x0,0x4(%rsp)
7fa1(9): mov $0x0,0xc(%rsp)
7faa(9): mov $0x0,0x14(%rsp)
7fb3(9): mov $0x0,0x1c(%rsp)
7fbc(9): mov $0x0,0x24(%rsp)
7fc5(9): mov $0x0,0x2c(%rsp)
7fce(8): mov $0x0,0x34(%rsp)
7fd6(5): call 0xfffff9ba(%rip)
7fdb(5): mov 0x38(%rsp),%rdx
7fe0(9): xor $0x28,%rdx
7fe9(2): jnz 0xc(%rip)
7feb(4): add $0x48,%rsp
7fef(1): ret near (%rsp)
7ff0(5): call 0xffff95d0(%rip)
7ff5(5): call 0xffff969b(%rip)

"quotearg_style" :
8000(3): mov %rsi,%rdx
8003(2): mov %edi,%esi
8005(2): xor %edi,%edi
8007(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
8010(3): mov %rdx,%rcx
8013(3): mov %rsi,%rdx
8016(2): mov %edi,%esi
8018(2): xor %edi,%edi
801a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
8020(4): sub $0x48,%rsp
8024(2): mov %edx,%ecx
8026(9): mov $0x28,%rax
802f(5): mov %rax,0x38(%rsp)
8034(2): xor %eax,%eax
8036(7): mov 0x204233(%rip),%rax
803d(3): mov %rsp,%r8
8040(3): and $0x1f,%ecx
8043(8): movdqa 0x2041f5(%rip),%xmm0
804b(5): mov %rax,0x30(%rsp)
8050(2): mov %edx,%eax
8052(4): movaps %xmm0,(%rsp)
8056(3): shr $0x5,%al
8059(3): movzx %al,%eax
805c(5): lea 0x8(%r8,%rax,4),%r9
8061(8): movdqa 0x2041e7(%rip),%xmm0
8069(5): movaps %xmm0,0x10(%rsp)
806e(8): movdqa 0x2041ea(%rip),%xmm0
8076(5): movaps %xmm0,0x20(%rsp)
807b(3): mov (%r9),%edx
807e(2): mov %edx,%eax
8080(2): shr %cl,%eax
8082(2): not %eax
8084(3): and $0x1,%eax
8087(2): shl/sal %cl,%eax
8089(3): mov %r8,%rcx
808c(2): xor %edx,%eax
808e(3): mov %rsi,%rdx
8091(3): mov %rdi,%rsi
8094(3): mov %eax,(%r9)
8097(2): xor %edi,%edi
8099(5): call 0xfffff8f7(%rip)
809e(5): mov 0x38(%rsp),%rsi
80a3(9): xor $0x28,%rsi
80ac(2): jnz 0x7(%rip)
80ae(4): add $0x48,%rsp
80b2(1): ret near (%rsp)
80b3(5): call 0xffff95dd(%rip)

"quotearg_char" :
80c0(4): movsx %sil,%edx
80c4(7): mov $0xffffffff,%rsi
80cb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
80d0(5): mov $0x3a,%edx
80d5(7): mov $0xffffffff,%rsi
80dc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
80f0(5): mov $0x3a,%edx
80f5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
8100(4): sub $0x48,%rsp
8104(3): mov %rdx,%rax
8107(9): mov $0x28,%rdx
8110(5): mov %rdx,0x38(%rsp)
8115(2): xor %edx,%edx
8117(3): cmp $0xa,%esi
811a(2): jz 0x6a(%rip)
811c(3): mov %esi,(%rsp)
811f(3): mov %rsp,%rcx
8122(7): mov $0xffffffff,%rdx
8129(3): mov %rax,%rsi
812c(9): mov $0x0,0x4(%rsp)
8135(9): mov $0x4000000,0xc(%rsp)
813e(9): mov $0x0,0x14(%rsp)
8147(9): mov $0x0,0x1c(%rsp)
8150(9): mov $0x0,0x24(%rsp)
8159(9): mov $0x0,0x2c(%rsp)
8162(8): mov $0x0,0x34(%rsp)
816a(5): call 0xfffff826(%rip)
816f(5): mov 0x38(%rsp),%rcx
8174(9): xor $0x28,%rcx
817d(2): jnz 0xc(%rip)
817f(4): add $0x48,%rsp
8183(1): ret near (%rsp)
8184(5): call 0xffff943c(%rip)
8189(5): call 0xffff9507(%rip)

"quotearg_n_custom_mem" :
8190(4): sub $0x48,%rsp
8194(3): mov %rcx,%r9
8197(7): mov 0x2040d2(%rip),%rcx
819e(8): movdqa 0x20409a(%rip),%xmm0
81a6(9): mov $0x28,%rax
81af(5): mov %rax,0x38(%rsp)
81b4(2): xor %eax,%eax
81b6(4): movaps %xmm0,(%rsp)
81ba(3): test %rsi,%rsi
81bd(5): mov %rcx,0x30(%rsp)
81c2(7): mov $0xa,(%rsp)
81c9(8): movdqa 0x20407f(%rip),%xmm0
81d1(5): movaps %xmm0,0x10(%rsp)
81d6(8): movdqa 0x204082(%rip),%xmm0
81de(5): movaps %xmm0,0x20(%rsp)
81e3(2): jz 0x34(%rip)
81e5(3): test %rdx,%rdx
81e8(2): jz 0x2f(%rip)
81ea(5): mov %rsi,0x28(%rsp)
81ef(5): mov %rdx,0x30(%rsp)
81f4(3): mov %rsp,%rcx
81f7(3): mov %r8,%rdx
81fa(3): mov %r9,%rsi
81fd(5): call 0xfffff793(%rip)
8202(5): mov 0x38(%rsp),%rdi
8207(9): xor $0x28,%rdi
8210(2): jnz 0xc(%rip)
8212(4): add $0x48,%rsp
8216(1): ret near (%rsp)
8217(5): call 0xffff93a9(%rip)
821c(5): call 0xffff9474(%rip)

"quotearg_n_custom" :
8230(7): mov $0xffffffff,%r8
8237(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
8240(3): mov %rdx,%rcx
8243(7): mov $0xffffffff,%r8
824a(3): mov %rsi,%rdx
824d(3): mov %rdi,%rsi
8250(2): xor %edi,%edi
8252(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
8260(3): mov %rcx,%r8
8263(3): mov %rdx,%rcx
8266(3): mov %rsi,%rdx
8269(3): mov %rdi,%rsi
826c(2): xor %edi,%edi
826e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
8280(7): lea 0x203db9(%rip),%rcx
8287(5): jmp 0xfffff709(%rip)

"quote_mem" :
8290(7): lea 0x203da9(%rip),%rcx
8297(3): mov %rsi,%rdx
829a(3): mov %rdi,%rsi
829d(2): xor %edi,%edi
829f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
82b0(7): lea 0x203d89(%rip),%rcx
82b7(7): mov $0xffffffff,%rdx
82be(5): jmp 0xfffff6d2(%rip)

"quote" :
82d0(7): lea 0x203d69(%rip),%rcx
82d7(3): mov %rdi,%rsi
82da(7): mov $0xffffffff,%rdx
82e1(2): xor %edi,%edi
82e3(5): jmp 0xfffff6ad(%rip)

"dup_safer" :
82f0(5): mov $0x3,%edx
82f5(2): xor %esi,%esi
82f7(2): xor %eax,%eax
82f9(5): jmp 0x937(%rip)

"version_etc_arn" :
8300(2): push %r15
8302(2): push %r14
8304(2): push %r13
8306(2): push %r12
8308(3): mov %r9,%r12
830b(1): push %rbp
830c(1): push %rbx
830d(3): mov %rdi,%rbp
8310(3): mov %r8,%rbx
8313(4): sub $0x28,%rsp
8317(3): test %rsi,%rsi
831a(6): jz 0x11e(%rip)
8320(3): mov %rdx,%r8
8323(7): lea 0x1fbe(%rip),%rdx
832a(3): mov %rcx,%r9
832d(2): xor %eax,%eax
832f(3): mov %rsi,%rcx
8332(5): mov $0x1,%esi
8337(5): call 0xffff9569(%rip)
833c(7): lea 0x1fb8(%rip),%rsi
8343(2): xor %edi,%edi
8345(5): mov $0x5,%edx
834a(5): call 0xffff9316(%rip)
834f(7): lea 0x22ca(%rip),%rdx
8356(3): mov %rax,%rcx
8359(6): mov $0x7e3,%r8d
835f(5): mov $0x1,%esi
8364(3): mov %rbp,%rdi
8367(2): xor %eax,%eax
8369(5): call 0xffff9537(%rip)
836e(7): lea 0x2013(%rip),%rsi
8375(2): xor %edi,%edi
8377(5): mov $0x5,%edx
837c(5): call 0xffff92e4(%rip)
8381(3): mov %rbp,%rsi
8384(3): mov %rax,%rdi
8387(5): call 0xffff93b9(%rip)
838c(4): cmp $0x9,%r12
8390(6): jnbe 0x340(%rip)
8396(7): lea 0x224b(%rip),%rdx
839d(4): movsxd 0x0(%rdx,%r12,4),%rax
83a1(3): add %rdx,%rax
83a4(2): jmp %rax
83a6(a): nop 0x0(%rax,%rax,1)
83b0(4): mov 0x38(%rbx),%r9
83b4(4): mov 0x10(%rbx),%rax
83b8(7): lea 0x2139(%rip),%rsi
83bf(4): mov 0x8(%rbx),%r8
83c3(5): mov $0x5,%edx
83c8(2): xor %edi,%edi
83ca(4): mov 0x30(%rbx),%r13
83ce(4): mov 0x28(%rbx),%r12
83d2(5): mov %r9,0x10(%rsp)
83d7(4): mov 0x20(%rbx),%r15
83db(4): mov 0x18(%rbx),%r14
83df(4): mov %rax,(%rsp)
83e3(5): mov %r8,0x8(%rsp)
83e8(3): mov (%rbx),%rbx
83eb(5): call 0xffff9275(%rip)
83f0(4): sub $0x8,%rsp
83f4(5): mov 0x18(%rsp),%r9
83f9(3): mov %rax,%rdx
83fc(3): mov %rbx,%rcx
83ff(5): mov $0x1,%esi
8404(3): mov %rbp,%rdi
8407(2): xor %eax,%eax
8409(2): push %r9
840b(2): push %r13
840d(2): push %r12
840f(2): push %r15
8411(2): push %r14
8413(5): mov 0x30(%rsp),%r9
8418(5): mov 0x38(%rsp),%r8
841d(5): call 0xffff9483(%rip)
8422(4): add $0x30,%rsp
8426(4): add $0x28,%rsp
842a(1): pop %rbx
842b(1): pop %rbp
842c(2): pop %r12
842e(2): pop %r13
8430(2): pop %r14
8432(2): pop %r15
8434(1): ret near (%rsp)
8435(3): nop (%rax)
8438(3): mov %rcx,%r8
843b(3): mov %rdx,%rcx
843e(7): lea 0x1eaf(%rip),%rdx
8445(5): mov $0x1,%esi
844a(2): xor %eax,%eax
844c(5): call 0xffff9454(%rip)
8451(5): jmp 0xfffffeeb(%rip)
8456(a): nop 0x0(%rax,%rax,1)
8460(4): mov 0x40(%rbx),%r10
8464(4): mov 0x38(%rbx),%r9
8468(7): lea 0x20b9(%rip),%rsi
846f(4): mov 0x10(%rbx),%rax
8473(4): mov 0x8(%rbx),%r8
8477(5): mov $0x5,%edx
847c(4): mov 0x30(%rbx),%r13
8480(4): mov 0x28(%rbx),%r12
8484(4): mov 0x20(%rbx),%r15
8488(4): mov 0x18(%rbx),%r14
848c(3): mov (%rbx),%rbx
848f(5): mov %r10,0x18(%rsp)
8494(5): mov %r9,0x10(%rsp)
8499(4): mov %rax,(%rsp)
849d(5): mov %r8,0x8(%rsp)
84a2(2): xor %edi,%edi
84a4(5): call 0xffff91bc(%rip)
84a9(5): mov 0x18(%rsp),%r10
84ae(2): push %r10
84b0(5): jmp 0xffffff44(%rip)
84b5(3): nop (%rax)
84b8(3): mov (%rbx),%rbx
84bb(7): lea 0x1e3d(%rip),%rsi
84c2(5): mov $0x5,%edx
84c7(2): xor %edi,%edi
84c9(5): call 0xffff9197(%rip)
84ce(4): add $0x28,%rsp
84d2(3): mov %rbx,%rcx
84d5(3): mov %rbp,%rdi
84d8(1): pop %rbx
84d9(1): pop %rbp
84da(2): pop %r12
84dc(2): pop %r13
84de(2): pop %r14
84e0(2): pop %r15
84e2(3): mov %rax,%rdx
84e5(5): mov $0x1,%esi
84ea(2): xor %eax,%eax
84ec(5): jmp 0xffff93b4(%rip)
84f1(7): nop 0x0(%rax)
84f8(4): mov 0x8(%rbx),%r12
84fc(7): lea 0x1e0c(%rip),%rsi
8503(3): mov (%rbx),%rbx
8506(5): mov $0x5,%edx
850b(2): xor %edi,%edi
850d(5): call 0xffff9153(%rip)
8512(4): add $0x28,%rsp
8516(3): mov %r12,%r8
8519(3): mov %rbx,%rcx
851c(3): mov %rbp,%rdi
851f(3): mov %rax,%rdx
8522(5): mov $0x1,%esi
8527(1): pop %rbx
8528(1): pop %rbp
8529(2): pop %r12
852b(2): pop %r13
852d(2): pop %r14
852f(2): pop %r15
8531(2): xor %eax,%eax
8533(5): jmp 0xffff936d(%rip)
8538(8): nop 0x0(%rax,%rax,1)
8540(4): mov 0x10(%rbx),%r13
8544(4): mov 0x8(%rbx),%r12
8548(7): lea 0x1dd7(%rip),%rsi
854f(3): mov (%rbx),%rbx
8552(5): mov $0x5,%edx
8557(2): xor %edi,%edi
8559(5): call 0xffff9107(%rip)
855e(4): add $0x28,%rsp
8562(3): mov %r13,%r9
8565(3): mov %r12,%r8
8568(3): mov %rbx,%rcx
856b(3): mov %rbp,%rdi
856e(3): mov %rax,%rdx
8571(1): pop %rbx
8572(1): pop %rbp
8573(2): pop %r12
8575(2): pop %r13
8577(2): pop %r14
8579(2): pop %r15
857b(5): mov $0x1,%esi
8580(2): xor %eax,%eax
8582(5): jmp 0xffff931e(%rip)
8587(9): nop 0x0(%rax,%rax,1)
8590(7): lea 0x1ec1(%rip),%rsi
8597(5): mov $0x5,%edx
859c(2): xor %edi,%edi
859e(4): mov 0x18(%rbx),%r14
85a2(4): mov 0x10(%rbx),%r13
85a6(4): mov 0x8(%rbx),%r12
85aa(3): mov (%rbx),%rbx
85ad(5): call 0xffff90b3(%rip)
85b2(4): sub $0x8,%rsp
85b6(2): push %r14
85b8(3): mov %rax,%rdx
85bb(3): mov %r13,%r9
85be(3): mov %r12,%r8
85c1(3): mov %rbx,%rcx
85c4(3): mov %rbp,%rdi
85c7(5): mov $0x1,%esi
85cc(2): xor %eax,%eax
85ce(5): call 0xffff92d2(%rip)
85d3(1): pop %rax
85d4(1): pop %rdx
85d5(4): add $0x28,%rsp
85d9(1): pop %rbx
85da(1): pop %rbp
85db(2): pop %r12
85dd(2): pop %r13
85df(2): pop %r14
85e1(2): pop %r15
85e3(1): ret near (%rsp)
85e4(4): nop 0x0(%rax)
85e8(4): mov 0x20(%rbx),%r15
85ec(7): lea 0x1e85(%rip),%rsi
85f3(5): mov $0x5,%edx
85f8(2): xor %edi,%edi
85fa(4): mov 0x18(%rbx),%r14
85fe(4): mov 0x10(%rbx),%r13
8602(4): mov 0x8(%rbx),%r12
8606(3): mov (%rbx),%rbx
8609(5): call 0xffff9057(%rip)
860e(2): push %r15
8610(2): jmp 0xffffffa6(%rip)
8612(6): nop 0x0(%rax,%rax,1)
8618(4): mov 0x8(%rbx),%r8
861c(4): mov 0x28(%rbx),%r12
8620(7): lea 0x1e79(%rip),%rsi
8627(4): mov 0x20(%rbx),%r15
862b(4): mov 0x18(%rbx),%r14
862f(5): mov $0x5,%edx
8634(4): mov 0x10(%rbx),%r13
8638(2): xor %edi,%edi
863a(3): mov (%rbx),%rbx
863d(4): mov %r8,(%rsp)
8641(5): call 0xffff901f(%rip)
8646(4): sub $0x8,%rsp
864a(3): mov %r13,%r9
864d(2): push %r12
864f(2): push %r15
8651(2): push %r14
8653(5): mov 0x20(%rsp),%r8
8658(3): mov %rbx,%rcx
865b(3): mov %rax,%rdx
865e(3): mov %rbp,%rdi
8661(5): mov $0x1,%esi
8666(2): xor %eax,%eax
8668(5): call 0xffff9238(%rip)
866d(4): add $0x20,%rsp
8671(4): add $0x28,%rsp
8675(1): pop %rbx
8676(1): pop %rbp
8677(2): pop %r12
8679(2): pop %r13
867b(2): pop %r14
867d(2): pop %r15
867f(1): ret near (%rsp)
8680(4): mov 0x10(%rbx),%r9
8684(4): mov 0x30(%rbx),%r13
8688(7): lea 0x1e39(%rip),%rsi
868f(4): mov 0x28(%rbx),%r12
8693(4): mov 0x20(%rbx),%r15
8697(5): mov $0x5,%edx
869c(4): mov 0x18(%rbx),%r14
86a0(4): mov 0x8(%rbx),%r8
86a4(2): xor %edi,%edi
86a6(5): mov %r9,0x8(%rsp)
86ab(3): mov (%rbx),%rbx
86ae(4): mov %r8,(%rsp)
86b2(5): call 0xffff8fae(%rip)
86b7(2): push %r13
86b9(2): push %r12
86bb(2): push %r15
86bd(2): push %r14
86bf(5): mov 0x28(%rsp),%r9
86c4(2): jmp 0xffffff8f(%rip)
86c6(a): nop 0x0(%rax,%rax,1)
86d0(4): mov 0x40(%rbx),%r10
86d4(4): mov 0x38(%rbx),%r9
86d8(5): mov $0x5,%edx
86dd(4): mov 0x10(%rbx),%rax
86e1(4): mov 0x8(%rbx),%r8
86e5(7): lea 0x1e74(%rip),%rsi
86ec(4): mov 0x30(%rbx),%r13
86f0(4): mov 0x28(%rbx),%r12
86f4(4): mov 0x20(%rbx),%r15
86f8(4): mov 0x18(%rbx),%r14
86fc(5): mov %r10,0x18(%rsp)
8701(5): mov %r9,0x10(%rsp)
8706(4): mov %rax,(%rsp)
870a(5): mov %r8,0x8(%rsp)
870f(3): mov (%rbx),%rbx
8712(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
8720(3): xor %r9d,%r9d
8723(4): cmp $0x0,(%r8)
8727(2): jz 0x14(%rip)
8729(7): nop 0x0(%rax)
8730(4): add $0x1,%r9
8734(5): cmp $0x0,0x0(%r8,%r9,8)
8739(2): jnz 0xfffffff7(%rip)
873b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
8740(4): sub $0x68,%rsp
8744(3): mov %r8,%r10
8747(3): xor %r9d,%r9d
874a(9): mov $0x28,%rax
8753(5): mov %rax,0x58(%rsp)
8758(2): xor %eax,%eax
875a(3): mov %rsp,%r8
875d(3): nop (%rax)
8760(3): mov (%r10),%eax
8763(3): cmp $0x2f,%eax
8766(2): jnbe 0x44(%rip)
8768(3): mov %eax,%r11d
876b(4): add 0x10(%r10),%r11
876f(3): add $0x8,%eax
8772(3): mov %eax,(%r10)
8775(3): mov (%r11),%rax
8778(3): test %rax,%rax
877b(4): mov %rax,0x0(%r8,%r9,8)
877f(2): jz 0xc(%rip)
8781(4): add $0x1,%r9
8785(4): cmp $0xa,%r9
8789(2): jnz 0xffffffd7(%rip)
878b(5): call 0xfffffb75(%rip)
8790(5): mov 0x58(%rsp),%rax
8795(9): xor $0x28,%rax
879e(2): jnz 0x7(%rip)
87a0(4): add $0x68,%rsp
87a4(1): ret near (%rsp)
87a5(5): call 0xffff8eeb(%rip)
87aa(4): mov 0x8(%r10),%r11
87ae(4): lea 0x8(%r11),%rax
87b2(4): mov %rax,0x8(%r10)
87b6(2): jmp 0xffffffbf(%rip)

"version_etc" :
87c0(1): push %rbp
87c1(1): push %rbx
87c2(6): mov $0x20,%r10d
87c8(3): xor %r11d,%r11d
87cb(7): sub $0xb8,%rsp
87d2(9): mov $0x28,%rax
87db(5): mov %rax,0x78(%rsp)
87e0(2): xor %eax,%eax
87e2(8): lea 0xd0(%rsp),%rax
87ea(8): mov %r8,0xa0(%rsp)
87f2(8): lea 0xd0(%rsp),%rbx
87fa(5): lea 0x20(%rsp),%r8
87ff(8): mov %r9,0xa8(%rsp)
8807(8): mov $0x20,0x8(%rsp)
880f(5): mov %rax,0x10(%rsp)
8814(8): lea 0x80(%rsp),%rax
881c(3): xor %r9d,%r9d
881f(5): mov %rax,0x18(%rsp)
8824(3): mov %rax,%rbp
8827(9): nop 0x0(%rax,%rax,1)
8830(4): cmp $0x2f,%r10d
8834(2): jnbe 0x58(%rip)
8836(3): mov %r10d,%eax
8839(6): mov $0x1,%r11d
883f(4): add $0x8,%r10d
8843(3): add %rbp,%rax
8846(3): mov (%rax),%rax
8849(3): test %rax,%rax
884c(4): mov %rax,0x0(%r8,%r9,8)
8850(2): jz 0xc(%rip)
8852(4): add $0x1,%r9
8856(4): cmp $0xa,%r9
885a(2): jnz 0xffffffd6(%rip)
885c(3): test %r11b,%r11b
885f(2): jnz 0x26(%rip)
8861(5): call 0xfffffa9f(%rip)
8866(5): mov 0x78(%rsp),%rax
886b(9): xor $0x28,%rax
8874(2): jnz 0xc(%rip)
8876(7): add $0xb8,%rsp
887d(1): pop %rbx
887e(1): pop %rbp
887f(1): ret near (%rsp)
8880(5): call 0xffff8e10(%rip)
8885(5): mov %r10d,0x8(%rsp)
888a(2): jmp 0xffffffd7(%rip)
888c(3): mov %rbx,%rax
888f(4): add $0x8,%rbx
8893(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
88a0(1): push %rbx
88a1(7): lea 0x1a9a(%rip),%rsi
88a8(5): mov $0x5,%edx
88ad(2): xor %edi,%edi
88af(5): call 0xffff8db1(%rip)
88b4(7): lea 0x1a9c(%rip),%rdx
88bb(3): mov %rax,%rsi
88be(5): mov $0x1,%edi
88c3(2): xor %eax,%eax
88c5(5): call 0xffff8f4b(%rip)
88ca(7): lea 0x1a9c(%rip),%rsi
88d1(5): mov $0x5,%edx
88d6(2): xor %edi,%edi
88d8(5): call 0xffff8d88(%rip)
88dd(7): lea 0xff4(%rip),%rcx
88e4(7): lea 0x947(%rip),%rdx
88eb(3): mov %rax,%rsi
88ee(5): mov $0x1,%edi
88f3(2): xor %eax,%eax
88f5(5): call 0xffff8f1b(%rip)
88fa(7): mov 0x2037a7(%rip),%rbx
8901(7): lea 0x1c98(%rip),%rsi
8908(2): xor %edi,%edi
890a(5): mov $0x5,%edx
890f(5): call 0xffff8d51(%rip)
8914(3): mov %rbx,%rsi
8917(3): mov %rax,%rdi
891a(1): pop %rbx
891b(5): jmp 0xffff8e25(%rip)

"xmalloc" :
8920(1): push %rbx
8921(3): mov %rdi,%rbx
8924(5): call 0xffff8e6c(%rip)
8929(3): test %rax,%rax
892c(2): jnz 0x7(%rip)
892e(3): test %rbx,%rbx
8931(2): jnz 0x4(%rip)
8933(1): pop %rbx
8934(1): ret near (%rsp)
8935(5): call 0x23b(%rip)

"xnmalloc" :
8940(3): mov %rdi,%rax
8943(3): mul %rax,%rsi,%rdx
8946(3): mov %rax,%rdi
8949(3): seto %al
894c(3): test %rdi,%rdi
894f(2): js 0xc(%rip)
8951(3): movzx %al,%eax
8954(3): test %rax,%rax
8957(2): jnz 0x4(%rip)
8959(2): jmp 0xffffffc7(%rip)
895b(4): sub $0x8,%rsp
895f(5): call 0x211(%rip)

"xrealloc" :
8980(3): test %rsi,%rsi
8983(1): push %rbx
8984(3): mov %rsi,%rbx
8987(2): jnz 0x7(%rip)
8989(3): test %rdi,%rdi
898c(2): jnz 0x1c(%rip)
898e(3): mov %rbx,%rsi
8991(5): call 0xffff8e4f(%rip)
8996(3): test %rax,%rax
8999(2): jnz 0x7(%rip)
899b(3): test %rbx,%rbx
899e(2): jnz 0x13(%rip)
89a0(1): pop %rbx
89a1(1): ret near (%rsp)
89a2(6): nop 0x0(%rax,%rax,1)
89a8(5): call 0xffff8c08(%rip)
89ad(2): xor %eax,%eax
89af(1): pop %rbx
89b0(1): ret near (%rsp)
89b1(5): call 0x1bf(%rip)

"xnrealloc" :
89c0(3): mov %rsi,%rax
89c3(3): mul %rax,%rdx,%rdx
89c6(3): mov %rax,%rsi
89c9(3): seto %al
89cc(3): test %rsi,%rsi
89cf(2): js 0xc(%rip)
89d1(3): movzx %al,%eax
89d4(3): test %rax,%rax
89d7(2): jnz 0x4(%rip)
89d9(2): jmp 0xffffffa7(%rip)
89db(4): sub $0x8,%rsp
89df(5): call 0x191(%rip)

"x2nrealloc" :
89f0(3): test %rdi,%rdi
89f3(3): mov %rdx,%r9
89f6(3): mov (%rsi),%rcx
89f9(2): jz 0x37(%rip)
89fb(2): xor %edx,%edx
89fd(a): mov $0x6148914691236517204,%rax
8a07(3): div %r9,%rax
8a0a(3): cmp %rcx,%rax
8a0d(2): jbe 0x3e(%rip)
8a0f(3): mov %rcx,%rax
8a12(3): shr $0x1,%rax
8a15(5): lea 0x1(%rax,%rcx,1),%rcx
8a1a(3): mov %rcx,(%rsi)
8a1d(4): imul %r9,%rcx
8a21(3): mov %rcx,%rsi
8a24(5): jmp 0xffffff5c(%rip)
8a29(7): nop 0x0(%rax)
8a30(3): test %rcx,%rcx
8a33(2): jz 0x25(%rip)
8a35(3): mov %rcx,%rax
8a38(3): mul %rax,%r9,%rdx
8a3b(3): seto %dl
8a3e(3): test %rax,%rax
8a41(3): movzx %dl,%edx
8a44(2): js 0x7(%rip)
8a46(3): test %rdx,%rdx
8a49(2): jz 0xffffffd1(%rip)
8a4b(4): sub $0x8,%rsp
8a4f(5): call 0x121(%rip)
8a54(4): nop 0x0(%rax)
8a58(2): xor %edx,%edx
8a5a(5): mov $0x80,%eax
8a5f(3): xor %r8d,%r8d
8a62(3): div %r9,%rax
8a65(3): test %rax,%rax
8a68(4): setz %r8b
8a6c(4): lea 0x0(%r8,%rax,1),%rcx
8a70(2): jmp 0xffffffc5(%rip)

"x2realloc" :
8a80(3): test %rdi,%rdi
8a83(3): mov (%rsi),%rax
8a86(2): jz 0x2a(%rip)
8a88(a): mov $0x6148914691236517203,%rdx
8a92(3): cmp %rdx,%rax
8a95(2): jnbe 0x2c(%rip)
8a97(3): mov %rax,%rdx
8a9a(3): shr $0x1,%rdx
8a9d(5): lea 0x1(%rdx,%rax,1),%rax
8aa2(3): mov %rax,(%rsi)
8aa5(3): mov %rax,%rsi
8aa8(5): jmp 0xfffffed8(%rip)
8aad(3): nop (%rax)
8ab0(3): test %rax,%rax
8ab3(5): mov $0x80,%edx
8ab8(4): cmove %rdx,%rax
8abc(3): test %rax,%rax
8abf(2): jns 0xffffffe3(%rip)
8ac1(4): sub $0x8,%rsp
8ac5(5): call 0xab(%rip)

"xzalloc" :
8ad0(1): push %rbx
8ad1(3): mov %rdi,%rbx
8ad4(5): call 0xfffffe4c(%rip)
8ad9(3): mov %rbx,%rdx
8adc(2): xor %esi,%esi
8ade(3): mov %rax,%rdi
8ae1(1): pop %rbx
8ae2(5): jmp 0xffff8c1e(%rip)

"xcalloc" :
8af0(3): mov %rdi,%rax
8af3(4): sub $0x8,%rsp
8af7(3): mul %rax,%rsi,%rdx
8afa(3): seto %dl
8afd(3): test %rax,%rax
8b00(2): js 0x19(%rip)
8b02(3): movzx %dl,%edx
8b05(3): test %rdx,%rdx
8b08(2): jnz 0x11(%rip)
8b0a(5): call 0xffff8c46(%rip)
8b0f(3): test %rax,%rax
8b12(2): jz 0x7(%rip)
8b14(4): add $0x8,%rsp
8b18(1): ret near (%rsp)
8b19(5): call 0x57(%rip)

"xmemdup" :
8b20(1): push %rbp
8b21(1): push %rbx
8b22(3): mov %rdi,%rbp
8b25(3): mov %rsi,%rdi
8b28(3): mov %rsi,%rbx
8b2b(4): sub $0x8,%rsp
8b2f(5): call 0xfffffdf1(%rip)
8b34(4): add $0x8,%rsp
8b38(3): mov %rbx,%rdx
8b3b(3): mov %rbp,%rsi
8b3e(1): pop %rbx
8b3f(1): pop %rbp
8b40(3): mov %rax,%rdi
8b43(5): jmp 0xffff8c2d(%rip)

"xstrdup" :
8b50(1): push %rbx
8b51(3): mov %rdi,%rbx
8b54(5): call 0xffff8b2c(%rip)
8b59(3): mov %rbx,%rdi
8b5c(4): lea 0x1(%rax),%rsi
8b60(1): pop %rbx
8b61(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
8b70(7): lea 0x1ad8(%rip),%rsi
8b77(4): sub $0x8,%rsp
8b7b(5): mov $0x5,%edx
8b80(2): xor %edi,%edi
8b82(5): call 0xffff8ade(%rip)
8b87(6): mov 0x203493(%rip),%edi
8b8d(7): lea 0x11e1(%rip),%rdx
8b94(3): mov %rax,%rcx
8b97(2): xor %esi,%esi
8b99(2): xor %eax,%eax
8b9b(5): call 0xffff8c95(%rip)
8ba0(5): call 0xffff8a20(%rip)

"rpl_fclose" :
8bb0(2): push %r12
8bb2(1): push %rbp
8bb3(1): push %rbx
8bb4(3): mov %rdi,%rbx
8bb7(5): call 0xffff8bc9(%rip)
8bbc(2): test %eax,%eax
8bbe(3): mov %rbx,%rdi
8bc1(2): js 0x56(%rip)
8bc3(5): call 0xffff8bfd(%rip)
8bc8(2): test %eax,%eax
8bca(2): jnz 0x2e(%rip)
8bcc(3): mov %rbx,%rdi
8bcf(5): call 0x2e1(%rip)
8bd4(2): test %eax,%eax
8bd6(2): jz 0x3e(%rip)
8bd8(5): call 0xffff89f8(%rip)
8bdd(3): mov (%rax),%r12d
8be0(3): mov %rbx,%rdi
8be3(3): mov %rax,%rbp
8be6(5): call 0xffff8a5a(%rip)
8beb(3): test %r12d,%r12d
8bee(2): jnz 0x32(%rip)
8bf0(1): pop %rbx
8bf1(1): pop %rbp
8bf2(2): pop %r12
8bf4(1): ret near (%rsp)
8bf5(3): nop (%rax)
8bf8(3): mov %rbx,%rdi
8bfb(5): call 0xffff8b85(%rip)
8c00(2): xor %esi,%esi
8c02(5): mov $0x1,%edx
8c07(2): mov %eax,%edi
8c09(5): call 0xffff8ae7(%rip)
8c0e(4): cmp $0xffffffff,%rax
8c12(2): jnz 0xffffffba(%rip)
8c14(3): mov %rbx,%rdi
8c17(1): pop %rbx
8c18(1): pop %rbp
8c19(2): pop %r12
8c1b(5): jmp 0xffff8a25(%rip)
8c20(4): mov %r12d,0x0(%rbp)
8c24(5): mov $0xffffffff,%eax
8c29(2): jmp 0xffffffc7(%rip)

"rpl_fcntl" :
8c30(2): push %r12
8c32(1): push %rbp
8c33(2): mov %edi,%ebp
8c35(1): push %rbx
8c36(4): sub $0x50,%rsp
8c3a(9): mov $0x28,%rax
8c43(5): mov %rax,0x18(%rsp)
8c48(2): xor %eax,%eax
8c4a(5): lea 0x70(%rsp),%rax
8c4f(2): test %esi,%esi
8c51(5): mov %rdx,0x30(%rsp)
8c56(5): mov %rcx,0x38(%rsp)
8c5b(5): mov %r8,0x40(%rsp)
8c60(5): mov %rax,0x8(%rsp)
8c65(5): lea 0x20(%rsp),%rax
8c6a(5): mov %r9,0x48(%rsp)
8c6f(7): mov $0x10,(%rsp)
8c76(5): mov %rax,0x10(%rsp)
8c7b(6): jz 0x207(%rip)
8c81(6): cmp $0x406,%esi
8c87(2): jnz 0x49(%rip)
8c89(5): mov 0x10(%rsp),%rax
8c8e(7): cmp $0x0,0x2035e3(%rip)
8c95(7): mov $0x18,(%rsp)
8c9c(4): mov 0x10(%rax),%r12d
8ca0(3): mov %r12d,%edx
8ca3(6): js 0x130(%rip)
8ca9(2): xor %eax,%eax
8cab(5): mov $0x406,%esi
8cb0(5): call 0xffff8960(%rip)
8cb5(2): test %eax,%eax
8cb7(2): mov %eax,%ebx
8cb9(6): js 0x18f(%rip)
8cbf(a): mov $0x1,0x2035af(%rip)
8cc9(2): jmp 0x47(%rip)
8ccb(5): nop 0x0(%rax,%rax,1)
8cd0(3): cmp $0xb,%esi
8cd3(2): jz 0x2d(%rip)
8cd5(2): jnle 0x5b(%rip)
8cd7(3): cmp $0x4,%esi
8cda(6): jz 0xd6(%rip)
8ce0(6): jnle 0xc0(%rip)
8ce6(3): cmp $0x2,%esi
8ce9(6): jz 0xc7(%rip)
8cef(2): jnle 0x11(%rip)
8cf1(3): cmp $0x1,%esi
8cf4(2): jnz 0x64(%rip)
8cf6(a): nop 0x0(%rax,%rax,1)
8d00(2): mov %ebp,%edi
8d02(2): xor %eax,%eax
8d04(5): call 0xffff890c(%rip)
8d09(2): mov %eax,%ebx
8d0b(5): nop 0x0(%rax,%rax,1)
8d10(5): mov 0x18(%rsp),%rcx
8d15(9): xor $0x28,%rcx
8d1e(2): mov %ebx,%eax
8d20(6): jnz 0x15d(%rip)
8d26(4): add $0x50,%rsp
8d2a(1): pop %rbx
8d2b(1): pop %rbp
8d2c(2): pop %r12
8d2e(1): ret near (%rsp)
8d2f(1): nop 
8d30(6): cmp $0x407,%esi
8d36(2): jnle 0x4a(%rip)
8d38(6): cmp $0x406,%esi
8d3e(2): jnl 0x72(%rip)
8d40(6): cmp $0x401,%esi
8d46(2): jz 0xffffffba(%rip)
8d48(6): cmp $0x402,%esi
8d4e(2): jz 0x62(%rip)
8d50(6): cmp $0x400,%esi
8d56(2): jz 0x5a(%rip)
8d58(3): mov (%rsp),%eax
8d5b(3): cmp $0x2f,%eax
8d5e(6): jnbe 0x13c(%rip)
8d64(5): add 0x10(%rsp),%rax
8d69(3): mov (%rax),%rdx
8d6c(2): mov %ebp,%edi
8d6e(2): xor %eax,%eax
8d70(5): call 0xffff88a0(%rip)
8d75(2): mov %eax,%ebx
8d77(2): jmp 0xffffff99(%rip)
8d79(7): nop 0x0(%rax)
8d80(6): cmp $0x409,%esi
8d86(2): jz 0x2a(%rip)
8d88(6): jl 0xffffff78(%rip)
8d8e(6): cmp $0x40a,%esi
8d94(2): jnz 0xffffffc4(%rip)
8d96(5): jmp 0xffffff6a(%rip)
8d9b(5): nop 0x0(%rax,%rax,1)
8da0(3): cmp $0x9,%esi
8da3(6): jz 0xffffff5d(%rip)
8da9(2): jnle 0x7(%rip)
8dab(3): cmp $0x8,%esi
8dae(2): jnz 0xffffffaa(%rip)
8db0(3): mov (%rsp),%eax
8db3(3): cmp $0x2f,%eax
8db6(6): jnbe 0xee(%rip)
8dbc(5): add 0x10(%rsp),%rax
8dc1(2): mov (%rax),%edx
8dc3(2): mov %ebp,%edi
8dc5(2): xor %eax,%eax
8dc7(5): call 0xffff8849(%rip)
8dcc(2): mov %eax,%ebx
8dce(5): jmp 0xffffff42(%rip)
8dd3(2): xor %esi,%esi
8dd5(2): xor %eax,%eax
8dd7(5): call 0xffff8839(%rip)
8ddc(2): test %eax,%eax
8dde(2): mov %eax,%ebx
8de0(6): js 0xffffff30(%rip)
8de6(7): cmp $0xff,0x20348b(%rip)
8ded(6): jnz 0xffffff23(%rip)
8df3(2): xor %eax,%eax
8df5(5): mov $0x1,%esi
8dfa(2): mov %ebx,%edi
8dfc(5): call 0xffff8814(%rip)
8e01(2): test %eax,%eax
8e03(2): js 0x1e(%rip)
8e05(3): or $0x1,%eax
8e08(5): mov $0x2,%esi
8e0d(2): mov %ebx,%edi
8e0f(2): mov %eax,%edx
8e11(2): xor %eax,%eax
8e13(5): call 0xffff87fd(%rip)
8e18(3): cmp $0xff,%eax
8e1b(6): jnz 0xfffffef5(%rip)
8e21(5): call 0xffff87af(%rip)
8e26(3): mov (%rax),%r12d
8e29(3): mov %rax,%rbp
8e2c(2): mov %ebx,%edi
8e2e(5): call 0xffff88e2(%rip)
8e33(5): mov $0xffffffff,%ebx
8e38(4): mov %r12d,0x0(%rbp)
8e3c(5): jmp 0xfffffed4(%rip)
8e41(7): nop 0x0(%rax)
8e48(5): call 0xffff8788(%rip)
8e4d(3): cmp $0x16,(%rax)
8e50(6): jnz 0xfffffe6f(%rip)
8e56(2): xor %esi,%esi
8e58(2): xor %eax,%eax
8e5a(3): mov %r12d,%edx
8e5d(2): mov %ebp,%edi
8e5f(5): call 0xffff87b1(%rip)
8e64(2): test %eax,%eax
8e66(2): mov %eax,%ebx
8e68(6): js 0xfffffea8(%rip)
8e6e(a): mov $0xffffffff,0x203400(%rip)
8e78(5): jmp 0xffffff7b(%rip)
8e7d(5): call 0xffff8813(%rip)
8e82(5): mov 0x10(%rsp),%rax
8e87(2): xor %esi,%esi
8e89(3): mov 0x10(%rax),%edx
8e8c(2): xor %eax,%eax
8e8e(5): call 0xffff8782(%rip)
8e93(2): mov %eax,%ebx
8e95(5): jmp 0xfffffe7b(%rip)
8e9a(5): mov 0x8(%rsp),%rax
8e9f(5): jmp 0xfffffeca(%rip)
8ea4(5): mov 0x8(%rsp),%rax
8ea9(5): jmp 0xffffff18(%rip)

"rpl_fflush" :
8eb0(3): test %rdi,%rdi
8eb3(1): push %rbx
8eb4(3): mov %rdi,%rbx
8eb7(2): jz 0x13(%rip)
8eb9(5): call 0xffff8907(%rip)
8ebe(2): test %eax,%eax
8ec0(2): jz 0xa(%rip)
8ec2(6): test $0x100,(%rbx)
8ec8(2): jnz 0x10(%rip)
8eca(3): mov %rbx,%rdi
8ecd(1): pop %rbx
8ece(5): jmp 0xffff88d2(%rip)
8ed3(5): nop 0x0(%rax,%rax,1)
8ed8(3): mov %rbx,%rdi
8edb(5): mov $0x1,%edx
8ee0(2): xor %esi,%esi
8ee2(5): call 0xe(%rip)
8ee7(3): mov %rbx,%rdi
8eea(1): pop %rbx
8eeb(5): jmp 0xffff88b5(%rip)

"rpl_fseeko" :
8ef0(4): mov 0x8(%rdi),%rax
8ef4(4): cmp %rax,0x10(%rdi)
8ef8(2): jz 0x8(%rip)
8efa(5): jmp 0xffff8946(%rip)
8eff(1): nop 
8f00(4): mov 0x20(%rdi),%rax
8f04(4): cmp %rax,0x28(%rdi)
8f08(2): jnz 0xfffffff2(%rip)
8f0a(5): cmp $0x0,0x48(%rdi)
8f0f(2): jnz 0xffffffeb(%rip)
8f11(2): push %r12
8f13(1): push %rbp
8f14(3): mov %edx,%r12d
8f17(1): push %rbx
8f18(3): mov %rsi,%rbp
8f1b(3): mov %rdi,%rbx
8f1e(5): call 0xffff8862(%rip)
8f23(3): mov %r12d,%edx
8f26(3): mov %rbp,%rsi
8f29(2): mov %eax,%edi
8f2b(5): call 0xffff87c5(%rip)
8f30(4): cmp $0xffffffff,%rax
8f34(2): jz 0xe(%rip)
8f36(3): and $0xef,(%rbx)
8f39(7): mov %rax,0x90(%rbx)
8f40(2): xor %eax,%eax
8f42(1): pop %rbx
8f43(1): pop %rbp
8f44(2): pop %r12
8f46(1): ret near (%rsp)

"rpl_mbrtowc" :
8f50(2): push %r13
8f52(2): push %r12
8f54(3): mov %rsi,%r13
8f57(1): push %rbp
8f58(1): push %rbx
8f59(3): mov %rdi,%rbx
8f5c(3): mov %rdx,%r12
8f5f(4): sub $0x18,%rsp
8f63(9): mov $0x28,%rax
8f6c(5): mov %rax,0x8(%rsp)
8f71(2): xor %eax,%eax
8f73(5): lea 0x4(%rsp),%rax
8f78(3): test %rdi,%rdi
8f7b(4): cmove %rax,%rbx
8f7f(3): mov %rbx,%rdi
8f82(5): call 0xffff872e(%rip)
8f87(4): cmp $0xfffffffd,%rax
8f8b(3): mov %rax,%rbp
8f8e(2): jbe 0x22(%rip)
8f90(3): test %r12,%r12
8f93(2): jz 0x1d(%rip)
8f95(2): xor %edi,%edi
8f97(5): call 0xc9(%rip)
8f9c(2): test %al,%al
8f9e(2): jnz 0x12(%rip)
8fa0(5): movzx 0x0(%r13),%eax
8fa5(5): mov $0x1,%ebp
8faa(2): mov %eax,(%rbx)
8fac(4): nop 0x0(%rax)
8fb0(5): mov 0x8(%rsp),%rdx
8fb5(9): xor $0x28,%rdx
8fbe(3): mov %rbp,%rax
8fc1(2): jnz 0xd(%rip)
8fc3(4): add $0x18,%rsp
8fc7(1): pop %rbx
8fc8(1): pop %rbp
8fc9(2): pop %r12
8fcb(2): pop %r13
8fcd(1): ret near (%rsp)
8fce(5): call 0xffff86c2(%rip)

"close_stream" :
8fe0(2): push %r12
8fe2(1): push %rbp
8fe3(3): mov %rdi,%rbp
8fe6(1): push %rbx
8fe7(5): call 0xffff8619(%rip)
8fec(3): mov 0x0(%rbp),%ebx
8fef(3): mov %rbp,%rdi
8ff2(3): mov %rax,%r12
8ff5(5): call 0xfffffbbb(%rip)
8ffa(3): and $0x20,%ebx
8ffd(2): test %ebx,%ebx
8fff(2): jnz 0x19(%rip)
9001(2): test %eax,%eax
9003(2): jz 0xc(%rip)
9005(3): test %r12,%r12
9008(5): mov $0xffffffff,%eax
900d(2): jz 0x3b(%rip)
900f(1): pop %rbx
9010(1): pop %rbp
9011(2): pop %r12
9013(1): ret near (%rsp)
9014(4): nop 0x0(%rax)
9018(2): test %eax,%eax
901a(2): jnz 0x1e(%rip)
901c(5): call 0xffff85b4(%rip)
9021(6): mov $0x0,(%rax)
9027(5): mov $0xffffffff,%eax
902c(1): pop %rbx
902d(1): pop %rbp
902e(2): pop %r12
9030(1): ret near (%rsp)
9031(7): nop 0x0(%rax)
9038(1): pop %rbx
9039(5): mov $0xffffffff,%eax
903e(1): pop %rbp
903f(2): pop %r12
9041(1): ret near (%rsp)
9042(6): nop 0x0(%rax,%rax,1)
9048(5): call 0xffff8588(%rip)
904d(3): cmp $0x9,(%rax)
9050(1): pop %rbx
9051(1): pop %rbp
9052(2): pop %r12
9054(3): setnz %al
9057(3): movzx %al,%eax
905a(2): neg %eax
905c(1): ret near (%rsp)

"hard_locale" :
9060(4): sub $0x8,%rsp
9064(2): xor %esi,%esi
9066(5): call 0xffff879a(%rip)
906b(3): mov %rax,%rdx
906e(5): mov $0x1,%eax
9073(3): test %rdx,%rdx
9076(2): jz 0x1f(%rip)
9078(7): lea 0x15e1(%rip),%rdi
907f(5): mov $0x2,%ecx
9084(3): mov %rdx,%rsi
9087(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
9089(3): setnbe %cl
908c(3): sbb $0x0,%cl
908f(2): xor %eax,%eax
9091(2): test %cl,%cl
9093(2): jnz 0xd(%rip)
9095(4): add $0x8,%rsp
9099(1): ret near (%rsp)
909a(6): nop 0x0(%rax,%rax,1)
90a0(7): lea 0x15bb(%rip),%rdi
90a7(5): mov $0x6,%ecx
90ac(3): mov %rdx,%rsi
90af(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
90b1(3): setnbe %al
90b4(2): sbb $0x0,%al
90b6(2): test %al,%al
90b8(3): setnz %al
90bb(4): add $0x8,%rsp
90bf(1): ret near (%rsp)

"locale_charset" :
90c0(4): sub $0x8,%rsp
90c4(5): mov $0xe,%edi
90c9(5): call 0xffff86e7(%rip)
90ce(3): test %rax,%rax
90d1(2): jz 0x1f(%rip)
90d3(3): cmp $0x0,(%rax)
90d6(7): lea 0x158b(%rip),%rdx
90dd(4): cmove %rdx,%rax
90e1(4): add $0x8,%rsp
90e5(1): ret near (%rsp)
90e6(a): nop 0x0(%rax,%rax,1)
90f0(7): lea 0x1571(%rip),%rax
90f7(4): add $0x8,%rsp
90fb(1): ret near (%rsp)

"__libc_csu_init" :
9100(2): push %r15
9102(2): push %r14
9104(3): mov %rdx,%r15
9107(2): push %r13
9109(2): push %r12
910b(7): lea 0x2028fe(%rip),%r12
9112(1): push %rbp
9113(7): lea 0x2028fe(%rip),%rbp
911a(1): push %rbx
911b(3): mov %edi,%r13d
911e(3): mov %rsi,%r14
9121(3): sub %r12,%rbp
9124(4): sub $0x8,%rsp
9128(4): sar $0x3,%rbp
912c(5): call 0xffff8454(%rip)
9131(3): test %rbp,%rbp
9134(2): jz 0x22(%rip)
9136(2): xor %ebx,%ebx
9138(8): nop 0x0(%rax,%rax,1)
9140(3): mov %r15,%rdx
9143(3): mov %r14,%rsi
9146(3): mov %r13d,%edi
9149(4): call 0x0(%r12,%rbx,8)
914d(4): add $0x1,%rbx
9151(3): cmp %rbx,%rbp
9154(2): jnz 0xffffffec(%rip)
9156(4): add $0x8,%rsp
915a(1): pop %rbx
915b(1): pop %rbp
915c(2): pop %r12
915e(2): pop %r13
9160(2): pop %r14
9162(2): pop %r15
9164(1): ret near (%rsp)

"atexit" :
9180(7): mov 0x202e81(%rip),%rdx
9187(2): xor %esi,%esi
9189(5): jmp 0xffff86e7(%rip)

"_fini" :
9190(4): sub $0x8,%rsp
9194(4): add $0x8,%rsp
9198(1): ret near (%rsp)

