0x13e8: sub rsp,0x8
0x13ec: mov rax,qword ptr [rip+0x206bf5]
0x13f3: test rax,rax
0x13f6: jz 0x13fa
0x13f8: call rax
0x13fa: add rsp,0x8
0x13fe: ret
0x1416: push 0x0
0x1426: push 0x1
0x1436: push 0x2
0x1446: push 0x3
0x1456: push 0x4
0x1460: jmp qword ptr [rip+0x206a22]
0x1466: push 0x5
0x1470: jmp qword ptr [rip+0x206a1a]
0x1476: push 0x6
0x1486: push 0x7
0x1496: push 0x8
0x14a6: push 0x9
0x14b6: push 0xa
0x14c6: push 0xb
0x14d6: push 0xc
0x14e6: push 0xd
0x14f6: push 0xe
0x1506: push 0xf
0x1516: push 0x10
0x1526: push 0x11
0x1536: push 0x12
0x1546: push 0x13
0x1556: push 0x14
0x1566: push 0x15
0x1576: push 0x16
0x1586: push 0x17
0x1596: push 0x18
0x15a6: push 0x19
0x15b6: push 0x1a
0x15c0: jmp qword ptr [rip+0x206972]
0x15c6: push 0x1b
0x15d0: jmp qword ptr [rip+0x20696a]
0x15d6: push 0x1c
0x15e6: push 0x1d
0x15f6: push 0x1e
0x1606: push 0x1f
0x1616: push 0x20
0x1626: push 0x21
0x1636: push 0x22
0x1646: push 0x23
0x1656: push 0x24
0x1666: push 0x25
0x1676: push 0x26
0x1686: push 0x27
0x1696: push 0x28
0x16a6: push 0x29
0x16b6: push 0x2a
0x16c6: push 0x2b
0x16d6: push 0x2c
0x16e6: push 0x2d
0x16f6: push 0x2e
0x1700: jmp qword ptr [rip+0x2068f2]
0x1706: nop 
0x180f: nop 
0x182a: nop qword ptr [rax+rax*1+0x0]
0x189e: nop 
0x19aa: test eax,eax
0x19ac: jns 0x18f2
0x19b2: lea rsi,[rip+0x3b34]
0x19b9: mov edx,0x5
0x19be: xor edi,edi
0x19c0: call 0x14c0
0x19c5: mov rbx,rax
0x19c8: call 0x1440
0x19cd: mov esi,dword ptr [rax]
0x19cf: mov rdx,rbx
0x19d2: mov edi,0x1
0x19d7: xor eax,eax
0x19d9: call 0x1660
0x1a1b: nop qword ptr [rax+rax*1+0x0]
0x1a4f: test eax,eax
0x1a51: jns 0x1a2b
0x1a53: lea rsi,[rip+0x3a93]
0x1a5a: mov edx,0x5
0x1a5f: xor edi,edi
0x1a61: call 0x14c0
0x1a66: mov rbx,rax
0x1a69: call 0x1440
0x1a6e: mov esi,dword ptr [rax]
0x1a70: mov rdx,rbx
0x1a73: mov edi,0x1
0x1a78: xor eax,eax
0x1a7a: call 0x1660
0x1a97: call 0x14f0
0x1ae4: nop qword ptr [rax+rax*1+0x0]
0x1aee: nop 
0x1b1a: hlt 
0x1b20: lea rdi,[rip+0x206579]
0x1b27: push rbp
0x1b28: lea rax,[rip+0x206571]
0x1b2f: cmp rax,rdi
0x1b32: mov rbp,rsp
0x1b35: jz 0x1b50
0x1b37: mov rax,qword ptr [rip+0x20649a]
0x1b3e: test rax,rax
0x1b41: jz 0x1b50
0x1b43: pop rbp
0x1b44: jmp rax
0x1b46: nop qword ptr [rax+rax*1+0x0]
0x1b50: pop rbp
0x1b51: ret
0x1b60: lea rdi,[rip+0x206539]
0x1b67: lea rsi,[rip+0x206532]
0x1b6e: push rbp
0x1b6f: sub rsi,rdi
0x1b72: mov rbp,rsp
0x1b75: sar rsi,0x3
0x1b79: mov rax,rsi
0x1b7c: shr rax,0x3f
0x1b80: add rsi,rax
0x1b83: sar rsi,0x1
0x1b86: jz 0x1ba0
0x1b88: mov rax,qword ptr [rip+0x206461]
0x1b8f: test rax,rax
0x1b92: jz 0x1ba0
0x1b94: pop rbp
0x1b95: jmp rax
0x1b97: nop qword ptr [rax+rax*1+0x0]
0x1ba0: pop rbp
0x1ba1: ret
0x1bb0: cmp [rip+0x206531],0x0
0x1bb7: jnz 0x1be8
0x1bb9: cmp [rip+0x206437],0x0
0x1bc1: push rbp
0x1bc2: mov rbp,rsp
0x1bc5: jz 0x1bd3
0x1bc7: mov rdi,qword ptr [rip+0x20643a]
0x1bce: call 0x1700
0x1bd3: call 0x1b20
0x1bd8: mov [rip+0x206509],0x1
0x1bdf: pop rbp
0x1be0: ret
0x1be1: nop qword ptr [rax+0x0]
0x1be8: rep ret
0x1bf0: push rbp
0x1bf1: mov rbp,rsp
0x1bf4: pop rbp
0x1bf5: jmp 0x1b60
0x1ff4: xor eax,eax
0x2034: xor eax,eax
0x2094: nop qword ptr [rax+0x0]
0x20c6: nop qword ptr [rax+rax*1+0x0]
0x2114: nop qword ptr [rax+0x0]
0x2198: nop qword ptr [rax+rax*1+0x0]
0x22b8: nop qword ptr [rax+rax*1+0x0]
0x22d2: nop qword ptr [rax+rax*1+0x0]
0x22f2: nop qword ptr [rax+rax*1+0x0]
0x2312: nop qword ptr [rax+rax*1+0x0]
0x2332: nop qword ptr [rax+rax*1+0x0]
0x23a6: mov rdi,r15
0x23a9: call 0x1420
0x23ae: mov rax,qword ptr [rsp]
0x23b2: mov [rsp+0x8],0x0
0x23b7: lea rax,[rax+rbx*1-0x1]
0x23bc: jmp 0x21f0
0x23c1: nop qword ptr [rax+0x0]
0x23fd: mov rax,rbx
0x2400: mov [rsp+0x8],0x0
0x2405: jmp 0x21f0
0x240a: nop qword ptr [rax+rax*1+0x0]
0x2445: mov rax,rbx
0x2448: mov [rsp+0x8],0x0
0x244d: jmp 0x21f0
0x247b: nop qword ptr [rax+rax*1+0x0]
0x24ea: nop qword ptr [rax+rax*1+0x0]
0x25fc: nop qword ptr [rax+0x0]
0x2634: nop qword ptr [rax+0x0]
0x266b: nop qword ptr [rax+rax*1+0x0]
0x2683: nop qword ptr [rax+rax*1+0x0]
0x274d: nop qword ptr [rax]
0x276f: mov r12,rax
0x2772: call 0x1440
0x2777: mov esi,dword ptr [rax]
0x2779: lea rdx,[rip+0x33d3]
0x2780: xor eax,eax
0x2782: xor edi,edi
0x2784: mov rcx,r12
0x2787: call 0x1660
0x278c: mov rax,qword ptr [rip+0x205975]
0x2793: mov [rip+0x205953],0x1
0x279d: lea rdx,[rax+0x8]
0x27a1: mov qword ptr [rip+0x205960],rdx
0x27a8: mov rdx,qword ptr [rax]
0x27ab: test rdx,rdx
0x27ae: jz 0x2810
0x2807: nop qword ptr [rax+rax*1+0x0]
0x281b: nop qword ptr [rax+rax*1+0x0]
0x2840: mov rbx,rax
0x2843: call 0x1440
0x2848: mov esi,dword ptr [rax]
0x284a: lea rdx,[rip+0x3302]
0x2851: mov rcx,rbx
0x2854: xor edi,edi
0x2856: xor eax,eax
0x2858: call 0x1660
0x285d: mov [rip+0x205889],0x1
0x2867: jmp 0x271f
0x286c: nop qword ptr [rax+0x0]
0x287f: mov rbx,rax
0x2882: call 0x1440
0x2887: mov esi,dword ptr [rax]
0x2889: lea rdx,[rip+0x32c3]
0x2890: mov rcx,rbx
0x2893: xor edi,edi
0x2895: xor eax,eax
0x2897: call 0x1660
0x289c: mov [rip+0x20584a],0x1
0x28a6: mov rsi,qword ptr [rip+0x20584b]
0x28ad: jmp 0x26f9
0x28eb: nop qword ptr [rax+rax*1+0x0]
0x28f0: sub rsp,0x8
0x28f4: mov rdi,qword ptr [rip+0x2057b5]
0x28fb: call 0x5090
0x2900: test eax,eax
0x2902: jnz 0x2909
0x2904: add rsp,0x8
0x2908: ret
0x2909: call 0x1440
0x290e: mov esi,dword ptr [rax]
0x2910: lea rdx,[rip+0x3283]
0x2917: mov edi,0x1
0x291c: xor eax,eax
0x291e: call 0x1660
0x2923: nop qword ptr [rax]
0x2926: nop qword ptr [rax+rax*1+0x0]
0x2980: mov qword ptr [rip+0x2057c1],rdi
0x2987: ret
0x2990: mov byte ptr [rip+0x2057a9],dil
0x2997: ret
0x29a0: push rbp
0x29a1: push rbx
0x29a2: sub rsp,0x8
0x29a6: mov rdi,qword ptr [rip+0x2056fb]
0x29ad: call 0x5240
0x29b2: test eax,eax
0x29b4: jz 0x29cc
0x29b6: call 0x1440
0x29bb: cmp [rip+0x20577e],0x0
0x29c2: mov rbx,rax
0x29c5: jz 0x29e3
0x29c7: cmp [rax],0x20
0x29ca: jnz 0x29e3
0x29cc: mov rdi,qword ptr [rip+0x20570d]
0x29d3: call 0x5240
0x29d8: test eax,eax
0x29da: jnz 0x2a22
0x29dc: add rsp,0x8
0x29e0: pop rbx
0x29e1: pop rbp
0x29e2: ret
0x29e3: lea rsi,[rip+0x2b03]
0x29ea: xor edi,edi
0x29ec: mov edx,0x5
0x29f1: call 0x14c0
0x29f6: mov rdi,qword ptr [rip+0x20574b]
0x29fd: mov rbp,rax
0x2a00: test rdi,rdi
0x2a03: jz 0x2a2d
0x2a05: call 0x45a0
0x2a0a: mov esi,dword ptr [rbx]
0x2a0c: lea rdx,[rip+0x313c]
0x2a13: mov rcx,rax
0x2a16: mov r8,rbp
0x2a19: xor edi,edi
0x2a1b: xor eax,eax
0x2a1d: call 0x1660
0x2a22: mov edi,dword ptr [rip+0x205600]
0x2a28: call 0x1460
0x2a2d: mov esi,dword ptr [rbx]
0x2a2f: lea rdx,[rip+0x311d]
0x2a36: mov rcx,rax
0x2a39: xor edi,edi
0x2a3b: xor eax,eax
0x2a3d: call 0x1660
0x2a42: jmp 0x2a22
0x2a7b: nop qword ptr [rax+rax*1+0x0]
0x2b6c: nop qword ptr [rax+0x0]
0x2bbd: nop qword ptr [rax]
0x2ed7: nop qword ptr [rax+rax*1+0x0]
0x2f0e: nop 
0x2f31: nop qword ptr [rax+0x0]
0x2f72: nop qword ptr [rax+rax*1+0x0]
0x2f84: nop qword ptr [rax+0x0]
0x3028: nop qword ptr [rax+rax*1+0x0]
0x303b: xor edx,edx
0x303d: test [rsp+0x78],0x1
0x3042: jz 0x2f5b
0x3048: add rbp,0x1
0x304c: jmp 0x2d08
0x3051: nop qword ptr [rax+0x0]
0x3067: nop qword ptr [rax+rax*1+0x0]
0x307f: nop 
0x30ae: nop 
0x30bd: nop qword ptr [rax]
0x30cf: nop 
0x30df: nop 
0x30ef: nop 
0x30ff: nop 
0x310f: nop 
0x317c: nop qword ptr [rax+0x0]
0x319c: nop qword ptr [rax+0x0]
0x31bf: nop 
0x31d2: nop qword ptr [rax+rax*1+0x0]
0x31ea: nop qword ptr [rax+rax*1+0x0]
0x31fa: nop qword ptr [rax+rax*1+0x0]
0x329b: nop qword ptr [rax+rax*1+0x0]
0x32b5: nop qword ptr [rax]
0x32c8: nop qword ptr [rax+rax*1+0x0]
0x32e3: nop qword ptr [rax+rax*1+0x0]
0x3312: nop qword ptr [rax+rax*1+0x0]
0x3322: nop qword ptr [rax+rax*1+0x0]
0x333a: nop qword ptr [rax+rax*1+0x0]
0x334a: nop qword ptr [rax+rax*1+0x0]
0x3358: nop qword ptr [rax+rax*1+0x0]
0x337f: nop 
0x3419: nop qword ptr [rax+0x0]
0x3462: nop qword ptr [rax+rax*1+0x0]
0x34a1: nop qword ptr [rax+0x0]
0x34c2: nop qword ptr [rax+rax*1+0x0]
0x3628: nop qword ptr [rax+rax*1+0x0]
0x373b: nop qword ptr [rax+rax*1+0x0]
0x3740: cmp r15,0x1
0x3744: jz 0x35a9
0x374a: mov rdi,qword ptr [rsp+0x10]
0x374f: lea rcx,[rdi+r15*1+0x0]
0x3753: lea rdx,[rdi+r14*1+0x1]
0x3758: lea r8,[rcx+r14*1+0x0]
0x375c: jmp 0x376d
0x375e: nop 
0x3760: add rdx,0x1
0x3764: cmp r8,rdx
0x3767: jz 0x35a9
0x376d: movzx ecx,byte ptr [rdx]
0x3770: sub ecx,0x5b
0x3773: cmp cl,0x21
0x3776: jnbe 0x3760
0x3778: mov esi,0x1
0x377d: shl rsi,cl
0x3780: mov rcx,rsi
0x3783: mov rsi,0x8589934635
0x378d: test rcx,rsi
0x3790: jz 0x3760
0x3792: mov r14,qword ptr [rsp+0x40]
0x3797: mov r13,qword ptr [rsp+0x70]
0x379c: mov rbp,qword ptr [rsp+0x30]
0x37a1: mov [rsp+0x8],0x2
0x3825: nop qword ptr [rax]
0x38dd: nop qword ptr [rax]
0x3ae6: nop qword ptr [rax+rax*1+0x0]
0x3af0: movzx ebx,byte ptr [rsp+0xf]
0x3af5: mov rbp,r11
0x3af8: mov byte ptr [rsp+0xd],bl
0x3afc: jmp 0x37a9
0x3b79: nop qword ptr [rax+0x0]
0x3ccd: nop qword ptr [rax]
0x3fdb: nop qword ptr [rax+rax*1+0x0]
0x4001: call 0x1430
0x4006: call 0x5030
0x4010: push r12
0x4012: push rbp
0x4013: push rbx
0x4014: mov rbx,rdi
0x4017: call 0x1440
0x401c: mov r12d,dword ptr [rax]
0x401f: mov rbp,rax
0x4022: lea rax,[rip+0x204237]
0x4029: test rbx,rbx
0x402c: mov esi,0x38
0x4031: cmove rbx,rax
0x4035: mov rdi,rbx
0x4038: call 0x4fe0
0x403d: mov dword ptr [rbp+0x0],r12d
0x4041: pop rbx
0x4042: pop rbp
0x4043: pop r12
0x4045: ret
0x4050: lea rax,[rip+0x204209]
0x4057: test rdi,rdi
0x405a: cmove rdi,rax
0x405e: mov eax,dword ptr [rdi]
0x4060: ret
0x4070: lea rax,[rip+0x2041e9]
0x4077: test rdi,rdi
0x407a: cmove rdi,rax
0x407e: mov dword ptr [rdi],esi
0x4080: ret
0x4090: lea rax,[rip+0x2041c9]
0x4097: test rdi,rdi
0x409a: mov ecx,esi
0x409c: cmove rdi,rax
0x40a0: mov eax,esi
0x40a2: and ecx,0x1f
0x40a5: shr al,0x5
0x40a8: movzx eax,al
0x40ab: lea rdi,[rdi+rax*4+0x8]
0x40b0: mov esi,dword ptr [rdi]
0x40b2: mov eax,esi
0x40b4: shr eax,cl
0x40b6: xor edx,eax
0x40b8: and eax,0x1
0x40bb: and edx,0x1
0x40be: shl edx,cl
0x40c0: xor edx,esi
0x40c2: mov dword ptr [rdi],edx
0x40c4: ret
0x40d0: lea rax,[rip+0x204189]
0x40d7: test rdi,rdi
0x40da: cmove rdi,rax
0x40de: mov eax,dword ptr [rdi+0x4]
0x40e1: mov dword ptr [rdi+0x4],esi
0x40e4: ret
0x40f0: lea rax,[rip+0x204169]
0x40f7: test rdi,rdi
0x40fa: cmove rdi,rax
0x40fe: test rsi,rsi
0x4101: mov [rdi],0xa
0x4107: jz 0x4117
0x4109: test rdx,rdx
0x410c: jz 0x4117
0x410e: mov qword ptr [rdi+0x28],rsi
0x4112: mov qword ptr [rdi+0x30],rdx
0x4116: ret
0x4117: sub rsp,0x8
0x411b: call 0x1430
0x4120: push r15
0x4122: push r14
0x4124: lea rax,[rip+0x204135]
0x412b: push r13
0x412d: push r12
0x412f: mov r13,rdi
0x4132: push rbp
0x4133: push rbx
0x4134: mov rbx,r8
0x4137: mov r14,rsi
0x413a: mov r15,rdx
0x413d: sub rsp,0x18
0x4141: test r8,r8
0x4144: cmove rbx,rax
0x4148: mov qword ptr [rsp+0x8],rcx
0x414d: call 0x1440
0x4152: mov r12d,dword ptr [rax]
0x4155: mov rbp,rax
0x4158: lea rax,[rbx+0x8]
0x415c: sub rsp,0x8
0x4160: mov r9d,dword ptr [rbx+0x4]
0x4164: push qword ptr [rbx+0x30]
0x4167: mov r8d,dword ptr [rbx]
0x416a: push qword ptr [rbx+0x28]
0x416d: mov rdx,r15
0x4170: push rax
0x4171: mov rcx,qword ptr [rsp+0x28]
0x4176: mov rsi,r14
0x4179: mov rdi,r13
0x417c: call 0x2c20
0x4181: mov dword ptr [rbp+0x0],r12d
0x4185: add rsp,0x38
0x4189: pop rbx
0x418a: pop rbp
0x418b: pop r12
0x418d: pop r13
0x418f: pop r14
0x4191: pop r15
0x4193: ret
0x41a0: push r15
0x41a2: push r14
0x41a4: lea rax,[rip+0x2040b5]
0x41ab: push r13
0x41ad: push r12
0x41af: mov r12,rdx
0x41b2: push rbp
0x41b3: push rbx
0x41b4: mov rbx,rcx
0x41b7: mov r14,rdi
0x41ba: mov r15,rsi
0x41bd: sub rsp,0x38
0x41c1: test rcx,rcx
0x41c4: cmove rbx,rax
0x41c8: xor ebp,ebp
0x41ca: call 0x1440
0x41cf: test r12,r12
0x41d2: mov r13,rax
0x41d5: mov eax,dword ptr [rax]
0x41d7: setz bpl
0x41db: or ebp,dword ptr [rbx+0x4]
0x41de: lea r10,[rbx+0x8]
0x41e2: sub rsp,0x8
0x41e6: mov r8d,dword ptr [rbx]
0x41e9: mov rcx,r15
0x41ec: mov dword ptr [rsp+0x14],eax
0x41f0: push qword ptr [rbx+0x30]
0x41f3: mov rdx,r14
0x41f6: push qword ptr [rbx+0x28]
0x41f9: push r10
0x41fb: xor esi,esi
0x41fd: mov r9d,ebp
0x4200: xor edi,edi
0x4202: mov qword ptr [rsp+0x40],r10
0x4207: call 0x2c20
0x420c: lea rsi,[rax+0x1]
0x4210: mov qword ptr [rsp+0x48],rax
0x4215: add rsp,0x20
0x4219: mov rdi,rsi
0x421c: mov qword ptr [rsp+0x18],rsi
0x4221: call 0x4de0
0x4226: mov qword ptr [rsp+0x10],rax
0x422b: sub rsp,0x8
0x422f: push qword ptr [rbx+0x30]
0x4232: push qword ptr [rbx+0x28]
0x4235: mov r10,qword ptr [rsp+0x38]
0x423a: mov r9d,ebp
0x423d: mov r8d,dword ptr [rbx]
0x4240: mov rcx,r15
0x4243: mov rdx,r14
0x4246: mov rdi,rax
0x4249: push r10
0x424b: mov rsi,qword ptr [rsp+0x38]
0x4250: call 0x2c20
0x4255: mov eax,dword ptr [rsp+0x2c]
0x4259: add rsp,0x20
0x425d: test r12,r12
0x4260: mov dword ptr [r13+0x0],eax
0x4264: jz 0x426f
0x4266: mov r11,qword ptr [rsp+0x28]
0x426b: mov qword ptr [r12],r11
0x426f: mov rax,qword ptr [rsp+0x10]
0x4274: add rsp,0x38
0x4278: pop rbx
0x4279: pop rbp
0x427a: pop r12
0x427c: pop r13
0x427e: pop r14
0x4280: pop r15
0x4282: ret
0x4290: mov rcx,rdx
0x4293: xor edx,edx
0x4295: jmp 0x41a0
0x42a0: mov eax,dword ptr [rip+0x203dd2]
0x42a6: push r12
0x42a8: mov r12,qword ptr [rip+0x203dd1]
0x42af: push rbp
0x42b0: push rbx
0x42b1: cmp eax,0x1
0x42b4: jle 0x42e1
0x42b6: sub eax,0x2
0x42b9: lea rbx,[r12+0x18]
0x42be: shl rax,0x4
0x42c2: lea rbp,[r12+rax*1+0x28]
0x42c7: nop qword ptr [rax+rax*1+0x0]
0x42d0: mov rdi,qword ptr [rbx]
0x42d3: add rbx,0x10
0x42d7: call 0x1420
0x42dc: cmp rbx,rbp
0x42df: jnz 0x42d0
0x42e1: mov rdi,qword ptr [r12+0x8]
0x42e6: lea rbx,[rip+0x203e73]
0x42ed: cmp rdi,rbx
0x42f0: jz 0x4309
0x42f2: call 0x1420
0x42f7: mov [rip+0x203d8e],0x100
0x4302: mov qword ptr [rip+0x203d8f],rbx
0x4309: lea rbx,[rip+0x203d80]
0x4310: cmp r12,rbx
0x4313: jz 0x4324
0x4315: mov rdi,r12
0x4318: call 0x1420
0x431d: mov qword ptr [rip+0x203d5c],rbx
0x4324: pop rbx
0x4325: mov [rip+0x203d49],0x1
0x432f: pop rbp
0x4330: pop r12
0x4332: ret
0x4340: lea rcx,[rip+0x203f19]
0x4347: mov rdx,0xffffffff
0x434e: jmp 0x3e60
0x4360: lea rcx,[rip+0x203ef9]
0x4367: jmp 0x3e60
0x4370: lea rcx,[rip+0x203ee9]
0x4377: mov rsi,rdi
0x437a: mov rdx,0xffffffff
0x4381: xor edi,edi
0x4383: jmp 0x3e60
0x4390: lea rcx,[rip+0x203ec9]
0x4397: mov rdx,rsi
0x439a: mov rsi,rdi
0x439d: xor edi,edi
0x439f: jmp 0x3e60
0x43b0: sub rsp,0x48
0x43b4: mov rax,rdx
0x43b7: mov rdx,0x28
0x43c0: mov qword ptr [rsp+0x38],rdx
0x43c5: xor edx,edx
0x43c7: cmp esi,0xa
0x43ca: jz 0x4434
0x43cc: mov dword ptr [rsp],esi
0x43cf: mov rcx,rsp
0x43d2: mov rdx,0xffffffff
0x43d9: mov rsi,rax
0x43dc: mov [rsp+0x4],0x0
0x43e5: mov [rsp+0xc],0x0
0x43ee: mov [rsp+0x14],0x0
0x43f7: mov [rsp+0x1c],0x0
0x4400: mov [rsp+0x24],0x0
0x4409: mov [rsp+0x2c],0x0
0x4412: mov [rsp+0x34],0x0
0x441a: call 0x3e60
0x441f: mov rcx,qword ptr [rsp+0x38]
0x4424: xor rcx,0x28
0x442d: jnz 0x4439
0x442f: add rsp,0x48
0x4433: ret
0x4434: call 0x1430
0x4439: call 0x14f0
0x4440: sub rsp,0x48
0x4444: mov rax,rdx
0x4447: mov rdx,rcx
0x444a: mov rcx,0x28
0x4453: mov qword ptr [rsp+0x38],rcx
0x4458: xor ecx,ecx
0x445a: cmp esi,0xa
0x445d: jz 0x44c0
0x445f: mov dword ptr [rsp],esi
0x4462: mov rcx,rsp
0x4465: mov rsi,rax
0x4468: mov [rsp+0x4],0x0
0x4471: mov [rsp+0xc],0x0
0x447a: mov [rsp+0x14],0x0
0x4483: mov [rsp+0x1c],0x0
0x448c: mov [rsp+0x24],0x0
0x4495: mov [rsp+0x2c],0x0
0x449e: mov [rsp+0x34],0x0
0x44a6: call 0x3e60
0x44ab: mov rdx,qword ptr [rsp+0x38]
0x44b0: xor rdx,0x28
0x44b9: jnz 0x44c5
0x44bb: add rsp,0x48
0x44bf: ret
0x44c0: call 0x1430
0x44c5: call 0x14f0
0x44d0: mov rdx,rsi
0x44d3: mov esi,edi
0x44d5: xor edi,edi
0x44d7: jmp 0x43b0
0x44e0: mov rcx,rdx
0x44e3: mov rdx,rsi
0x44e6: mov esi,edi
0x44e8: xor edi,edi
0x44ea: jmp 0x4440
0x44f0: sub rsp,0x48
0x44f4: mov ecx,edx
0x44f6: mov rax,0x28
0x44ff: mov qword ptr [rsp+0x38],rax
0x4504: xor eax,eax
0x4506: mov rax,qword ptr [rip+0x203d83]
0x450d: mov r8,rsp
0x4510: and ecx,0x1f
0x4513: movdqa xmm0,[rip+0x203d45]
0x451b: mov qword ptr [rsp+0x30],rax
0x4520: mov eax,edx
0x4522: movaps [rsp],xmm0
0x4526: shr al,0x5
0x4529: movzx eax,al
0x452c: lea r9,[r8+rax*4+0x8]
0x4531: movdqa xmm0,[rip+0x203d37]
0x4539: movaps [rsp+0x10],xmm0
0x453e: movdqa xmm0,[rip+0x203d3a]
0x4546: movaps [rsp+0x20],xmm0
0x454b: mov edx,dword ptr [r9]
0x454e: mov eax,edx
0x4550: shr eax,cl
0x4552: not eax
0x4554: and eax,0x1
0x4557: shl eax,cl
0x4559: mov rcx,r8
0x455c: xor eax,edx
0x455e: mov rdx,rsi
0x4561: mov rsi,rdi
0x4564: mov dword ptr [r9],eax
0x4567: xor edi,edi
0x4569: call 0x3e60
0x456e: mov rsi,qword ptr [rsp+0x38]
0x4573: xor rsi,0x28
0x457c: jnz 0x4583
0x457e: add rsp,0x48
0x4582: ret
0x4583: call 0x14f0
0x4590: movsx edx,sil
0x4594: mov rsi,0xffffffff
0x459b: jmp 0x44f0
0x45a0: mov edx,0x3a
0x45a5: mov rsi,0xffffffff
0x45ac: jmp 0x44f0
0x45c0: mov edx,0x3a
0x45c5: jmp 0x44f0
0x463f: mov rcx,qword ptr [rsp+0x38]
0x4644: xor rcx,0x28
0x464d: jnz 0x4659
0x464f: add rsp,0x48
0x4653: ret
0x4654: call 0x1430
0x4659: call 0x14f0
0x4660: sub rsp,0x48
0x4664: mov r9,rcx
0x4667: mov rcx,qword ptr [rip+0x203c22]
0x466e: movdqa xmm0,[rip+0x203bea]
0x4676: mov rax,0x28
0x467f: mov qword ptr [rsp+0x38],rax
0x4684: xor eax,eax
0x4686: movaps [rsp],xmm0
0x468a: test rsi,rsi
0x468d: mov qword ptr [rsp+0x30],rcx
0x4692: mov [rsp],0xa
0x4699: movdqa xmm0,[rip+0x203bcf]
0x46a1: movaps [rsp+0x10],xmm0
0x46a6: movdqa xmm0,[rip+0x203bd2]
0x46ae: movaps [rsp+0x20],xmm0
0x46b3: jz 0x46e7
0x46b5: test rdx,rdx
0x46b8: jz 0x46e7
0x46ba: mov qword ptr [rsp+0x28],rsi
0x46bf: mov qword ptr [rsp+0x30],rdx
0x46c4: mov rcx,rsp
0x46c7: mov rdx,r8
0x46ca: mov rsi,r9
0x46cd: call 0x3e60
0x46d2: mov rdi,qword ptr [rsp+0x38]
0x46d7: xor rdi,0x28
0x46e0: jnz 0x46ec
0x46e2: add rsp,0x48
0x46e6: ret
0x46e7: call 0x1430
0x46ec: call 0x14f0
0x4700: mov r8,0xffffffff
0x4707: jmp 0x4660
0x4710: mov rcx,rdx
0x4713: mov r8,0xffffffff
0x471a: mov rdx,rsi
0x471d: mov rsi,rdi
0x4720: xor edi,edi
0x4722: jmp 0x4660
0x4730: mov r8,rcx
0x4733: mov rcx,rdx
0x4736: mov rdx,rsi
0x4739: mov rsi,rdi
0x473c: xor edi,edi
0x473e: jmp 0x4660
0x4750: lea rcx,[rip+0x2038e9]
0x4757: jmp 0x3e60
0x4760: lea rcx,[rip+0x2038d9]
0x4767: mov rdx,rsi
0x476a: mov rsi,rdi
0x476d: xor edi,edi
0x476f: jmp 0x3e60
0x4780: lea rcx,[rip+0x2038b9]
0x4787: mov rdx,0xffffffff
0x478e: jmp 0x3e60
0x4866: nop qword ptr [rax+rax*1+0x0]
0x48f5: nop qword ptr [rax]
0x48f8: mov r8,rcx
0x48fb: mov rcx,rdx
0x48fe: lea rdx,[rip+0x176f]
0x4905: mov esi,0x1
0x490a: xor eax,eax
0x490c: call 0x16c0
0x4911: jmp 0x47fc
0x4916: nop qword ptr [rax+rax*1+0x0]
0x4975: nop qword ptr [rax]
0x49b1: nop qword ptr [rax+0x0]
0x49f8: nop qword ptr [rax+rax*1+0x0]
0x4a47: nop qword ptr [rax+rax*1+0x0]
0x4aa4: nop qword ptr [rax+0x0]
0x4ad2: nop qword ptr [rax+rax*1+0x0]
0x4b86: nop qword ptr [rax+rax*1+0x0]
0x4be0: xor r9d,r9d
0x4be3: cmp [r8],0x0
0x4be7: jz 0x4bfb
0x4be9: nop qword ptr [rax+0x0]
0x4bf0: add r9,0x1
0x4bf4: cmp [r8+r9*8+0x0],0x0
0x4bf9: jnz 0x4bf0
0x4bfb: jmp 0x47c0
0x4c00: sub rsp,0x68
0x4c04: mov r10,r8
0x4c07: xor r9d,r9d
0x4c0a: mov rax,0x28
0x4c13: mov qword ptr [rsp+0x58],rax
0x4c18: xor eax,eax
0x4c1a: mov r8,rsp
0x4c1d: nop qword ptr [rax]
0x4c20: mov eax,dword ptr [r10]
0x4c23: cmp eax,0x2f
0x4c26: jnbe 0x4c6a
0x4c28: mov r11d,eax
0x4c2b: add r11,qword ptr [r10+0x10]
0x4c2f: add eax,0x8
0x4c32: mov dword ptr [r10],eax
0x4c35: mov rax,qword ptr [r11]
0x4c38: test rax,rax
0x4c3b: mov qword ptr [r8+r9*8+0x0],rax
0x4c3f: jz 0x4c4b
0x4c41: add r9,0x1
0x4c45: cmp r9,0xa
0x4c49: jnz 0x4c20
0x4c4b: call 0x47c0
0x4c50: mov rax,qword ptr [rsp+0x58]
0x4c55: xor rax,0x28
0x4c5e: jnz 0x4c65
0x4c60: add rsp,0x68
0x4c64: ret
0x4c65: call 0x14f0
0x4c6a: mov r11,qword ptr [r10+0x8]
0x4c6e: lea rax,[r11+0x8]
0x4c72: mov qword ptr [r10+0x8],rax
0x4c76: jmp 0x4c35
0x4d40: call 0x14f0
0x4d60: push rbx
0x4d61: lea rsi,[rip+0x135a]
0x4d68: mov edx,0x5
0x4d6d: xor edi,edi
0x4d6f: call 0x14c0
0x4d74: lea rdx,[rip+0x135c]
0x4d7b: mov rsi,rax
0x4d7e: mov edi,0x1
0x4d83: xor eax,eax
0x4d85: call 0x1650
0x4d8a: lea rsi,[rip+0x135c]
0x4d91: mov edx,0x5
0x4d96: xor edi,edi
0x4d98: call 0x14c0
0x4d9d: lea rcx,[rip+0x96c]
0x4da4: lea rdx,[rip+0x6d6]
0x4dab: mov rsi,rax
0x4dae: mov edi,0x1
0x4db3: xor eax,eax
0x4db5: call 0x1650
0x4dba: mov rbx,qword ptr [rip+0x2032e7]
0x4dc1: lea rsi,[rip+0x1558]
0x4dc8: xor edi,edi
0x4dca: mov edx,0x5
0x4dcf: call 0x14c0
0x4dd4: mov rsi,rbx
0x4dd7: mov rdi,rax
0x4dda: pop rbx
0x4ddb: jmp 0x15b0
0x4dee: test rbx,rbx
0x4df1: jnz 0x4df5
0x4df5: call 0x5030
0x4e00: mov rax,rdi
0x4e03: mul rsi
0x4e06: mov rdi,rax
0x4e09: seto al
0x4e0c: test rdi,rdi
0x4e0f: js 0x4e1b
0x4e11: movzx eax,al
0x4e14: test rax,rax
0x4e17: jnz 0x4e1b
0x4e19: jmp 0x4de0
0x4e1b: sub rsp,0x8
0x4e1f: call 0x5030
0x4e5b: test rbx,rbx
0x4e5e: jnz 0x4e71
0x4e62: nop qword ptr [rax+rax*1+0x0]
0x4e71: call 0x5030
0x4e80: mov rax,rsi
0x4e83: mul rdx
0x4e86: mov rsi,rax
0x4e89: seto al
0x4e8c: test rsi,rsi
0x4e8f: js 0x4e9b
0x4e91: movzx eax,al
0x4e94: test rax,rax
0x4e97: jnz 0x4e9b
0x4e99: jmp 0x4e40
0x4e9b: sub rsp,0x8
0x4e9f: call 0x5030
0x4eb0: test rdi,rdi
0x4eb3: mov r9,rdx
0x4eb6: mov rcx,qword ptr [rsi]
0x4eb9: jz 0x4ef0
0x4ebb: xor edx,edx
0x4ebd: mov rax,0x6148914691236517204
0x4ec7: div r9
0x4eca: cmp rax,rcx
0x4ecd: jbe 0x4f0b
0x4ecf: mov rax,rcx
0x4ed2: shr rax,0x1
0x4ed5: lea rcx,[rax+rcx*1+0x1]
0x4eda: mov qword ptr [rsi],rcx
0x4edd: imul rcx,r9
0x4ee1: mov rsi,rcx
0x4ee4: jmp 0x4e40
0x4ee9: nop qword ptr [rax+0x0]
0x4ef0: test rcx,rcx
0x4ef3: jz 0x4f18
0x4ef5: mov rax,rcx
0x4ef8: mul r9
0x4efb: seto dl
0x4efe: test rax,rax
0x4f01: movzx edx,dl
0x4f04: js 0x4f0b
0x4f06: test rdx,rdx
0x4f09: jz 0x4eda
0x4f0b: sub rsp,0x8
0x4f0f: call 0x5030
0x4f14: nop qword ptr [rax+0x0]
0x4f18: xor edx,edx
0x4f1a: mov eax,0x80
0x4f1f: xor r8d,r8d
0x4f22: div r9
0x4f25: test rax,rax
0x4f28: setz r8b
0x4f2c: lea rcx,[r8+rax*1+0x0]
0x4f30: jmp 0x4ef5
0x4f40: test rdi,rdi
0x4f43: mov rax,qword ptr [rsi]
0x4f46: jz 0x4f70
0x4f48: mov rdx,0x6148914691236517203
0x4f52: cmp rax,rdx
0x4f55: jnbe 0x4f81
0x4f57: mov rdx,rax
0x4f5a: shr rdx,0x1
0x4f5d: lea rax,[rdx+rax*1+0x1]
0x4f62: mov qword ptr [rsi],rax
0x4f65: mov rsi,rax
0x4f68: jmp 0x4e40
0x4f6d: nop qword ptr [rax]
0x4f70: test rax,rax
0x4f73: mov edx,0x80
0x4f78: cmove rax,rdx
0x4f7c: test rax,rax
0x4f7f: jns 0x4f62
0x4f81: sub rsp,0x8
0x4f85: call 0x5030
0x4f90: push rbx
0x4f91: mov rbx,rdi
0x4f94: call 0x4de0
0x4f99: mov rdx,rbx
0x4f9c: xor esi,esi
0x4f9e: mov rdi,rax
0x4fa1: pop rbx
0x4fa2: jmp 0x1560
0x4fb0: mov rax,rdi
0x4fb3: sub rsp,0x8
0x4fb7: mul rsi
0x4fba: seto dl
0x4fbd: test rax,rax
0x4fc0: js 0x4fd9
0x4fc2: movzx edx,dl
0x4fc5: test rdx,rdx
0x4fc8: jnz 0x4fd9
0x4fca: call 0x15c0
0x4fcf: test rax,rax
0x4fd2: jz 0x4fd9
0x4fd4: add rsp,0x8
0x4fd8: ret
0x4fd9: call 0x5030
0x4fe0: push rbp
0x4fe1: push rbx
0x4fe2: mov rbp,rdi
0x4fe5: mov rdi,rsi
0x4fe8: mov rbx,rsi
0x4feb: sub rsp,0x8
0x4fef: call 0x4de0
0x4ff4: add rsp,0x8
0x4ff8: mov rdx,rbx
0x4ffb: mov rsi,rbp
0x4ffe: pop rbx
0x4fff: pop rbp
0x5000: mov rdi,rax
0x5003: jmp 0x15d0
0x5010: push rbx
0x5011: mov rbx,rdi
0x5014: call 0x14e0
0x5019: mov rdi,rbx
0x501c: lea rsi,[rax+0x1]
0x5020: pop rbx
0x5021: jmp 0x4fe0
0x5060: call 0x1430
0x50d5: nop qword ptr [rax]
0x5133: nop qword ptr [rax+rax*1+0x0]
0x515f: nop 
0x522e: call 0x14f0
0x5240: push r12
0x5242: push rbp
0x5243: mov rbp,rdi
0x5246: push rbx
0x5247: call 0x1470
0x524c: mov ebx,dword ptr [rbp+0x0]
0x524f: mov rdi,rbp
0x5252: mov r12,rax
0x5255: call 0x5090
0x525a: and ebx,0x20
0x525d: test ebx,ebx
0x525f: jnz 0x5278
0x5261: test eax,eax
0x5263: jz 0x526f
0x5265: test r12,r12
0x5268: mov eax,0xffffffff
0x526d: jz 0x52a8
0x526f: pop rbx
0x5270: pop rbp
0x5271: pop r12
0x5273: ret
0x5274: nop qword ptr [rax+0x0]
0x5278: test eax,eax
0x527a: jnz 0x5298
0x527c: call 0x1440
0x5281: mov [rax],0x0
0x5287: mov eax,0xffffffff
0x528c: pop rbx
0x528d: pop rbp
0x528e: pop r12
0x5290: ret
0x5291: nop qword ptr [rax+0x0]
0x5298: pop rbx
0x5299: mov eax,0xffffffff
0x529e: pop rbp
0x529f: pop r12
0x52a1: ret
0x52a2: nop qword ptr [rax+rax*1+0x0]
0x52a8: call 0x1440
0x52ad: cmp [rax],0x9
0x52b0: pop rbx
0x52b1: pop rbp
0x52b2: pop r12
0x52b4: setnz al
0x52b7: movzx eax,al
0x52ba: neg eax
0x52bc: ret
0x52fa: nop qword ptr [rax+rax*1+0x0]
0x5346: nop qword ptr [rax+rax*1+0x0]
0x5360: push r15
0x5362: push r14
0x5364: mov r15,rdx
0x5367: push r13
0x5369: push r12
0x536b: lea r12,[rip+0x2027de]
0x5372: push rbp
0x5373: lea rbp,[rip+0x2027de]
0x537a: push rbx
0x537b: mov r13d,edi
0x537e: mov r14,rsi
0x5381: sub rbp,r12
0x5384: sub rsp,0x8
0x5388: sar rbp,0x3
0x538c: call 0x13e8
0x5391: test rbp,rbp
0x5394: jz 0x53b6
0x5396: xor ebx,ebx
0x5398: nop qword ptr [rax+rax*1+0x0]
0x53a0: mov rdx,r15
0x53a3: mov rsi,r14
0x53a6: mov edi,r13d
0x53a9: call qword ptr [r12+rbx*8+0x0]
0x53ad: add rbx,0x1
0x53b1: cmp rbp,rbx
0x53b4: jnz 0x53a0
0x53b6: add rsp,0x8
0x53ba: pop rbx
0x53bb: pop rbp
0x53bc: pop r12
0x53be: pop r13
0x53c0: pop r14
0x53c2: pop r15
0x53c4: ret
0x53f0: sub rsp,0x8
0x53f4: add rsp,0x8
0x53f8: ret
