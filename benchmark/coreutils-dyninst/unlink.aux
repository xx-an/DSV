0x11c0: sub rsp,0x8
0x11c4: mov rax,qword ptr [rip+0x205e05]
0x11cb: test rax,rax
0x11ce: jz 0x11d2
0x11d0: call rax
0x11d2: add rsp,0x8
0x11d6: ret
0x11f6: push 0x0
0x1206: push 0x1
0x1216: push 0x2
0x1226: push 0x3
0x1236: push 0x4
0x1240: jmp qword ptr [rip+0x205c62]
0x1246: push 0x5
0x1250: jmp qword ptr [rip+0x205c5a]
0x1256: push 0x6
0x1266: push 0x7
0x1270: jmp qword ptr [rip+0x205c4a]
0x1276: push 0x8
0x1286: push 0x9
0x1296: push 0xa
0x12a6: push 0xb
0x12b6: push 0xc
0x12c0: jmp qword ptr [rip+0x205c22]
0x12c6: push 0xd
0x12d6: push 0xe
0x12e6: push 0xf
0x12f6: push 0x10
0x1300: jmp qword ptr [rip+0x205c02]
0x1306: push 0x11
0x1316: push 0x12
0x1326: push 0x13
0x1336: push 0x14
0x1340: jmp qword ptr [rip+0x205be2]
0x1346: push 0x15
0x1350: jmp qword ptr [rip+0x205bda]
0x1356: push 0x16
0x1360: jmp qword ptr [rip+0x205bd2]
0x1366: push 0x17
0x1376: push 0x18
0x1380: jmp qword ptr [rip+0x205bc2]
0x1386: push 0x19
0x1396: push 0x1a
0x13a0: jmp qword ptr [rip+0x205bb2]
0x13a6: push 0x1b
0x13b6: push 0x1c
0x13c6: push 0x1d
0x13d6: push 0x1e
0x13e6: push 0x1f
0x13f0: jmp qword ptr [rip+0x205b8a]
0x13f6: push 0x20
0x1406: push 0x21
0x1416: push 0x22
0x1426: push 0x23
0x1436: push 0x24
0x1446: push 0x25
0x1456: push 0x26
0x1466: push 0x27
0x1470: jmp qword ptr [rip+0x205b6a]
0x1476: nop 
0x155f: mov edi,0x1
0x1564: call 0x1700
0x157e: lea rsi,[rip+0x3270]
0x1585: mov edx,0x5
0x158a: xor edi,edi
0x158c: mov rbp,rax
0x158f: call 0x1290
0x1594: mov rbx,rax
0x1597: call 0x1210
0x159c: mov esi,dword ptr [rax]
0x159e: mov rcx,rbp
0x15a1: mov rdx,rbx
0x15a4: mov edi,0x1
0x15a9: xor eax,eax
0x15ab: call 0x13e0
0x15ba: lea rsi,[rip+0x3223]
0x15c1: mov rbx,rax
0x15c4: mov edx,0x5
0x15c9: xor edi,edi
0x15cb: call 0x1290
0x15d0: xor edi,edi
0x15d2: mov rdx,rax
0x15d5: mov rcx,rbx
0x15d8: xor esi,esi
0x15da: xor eax,eax
0x15dc: call 0x13e0
0x15e1: mov edi,0x1
0x15e6: call 0x1700
0x161a: hlt 
0x1620: lea rdi,[rip+0x205a59]
0x1627: push rbp
0x1628: lea rax,[rip+0x205a51]
0x162f: cmp rax,rdi
0x1632: mov rbp,rsp
0x1635: jz 0x1650
0x1637: mov rax,qword ptr [rip+0x205982]
0x163e: test rax,rax
0x1641: jz 0x1650
0x1643: pop rbp
0x1644: jmp rax
0x1646: nop qword ptr [rax+rax*1+0x0]
0x1650: pop rbp
0x1651: ret
0x1660: lea rdi,[rip+0x205a19]
0x1667: lea rsi,[rip+0x205a12]
0x166e: push rbp
0x166f: sub rsi,rdi
0x1672: mov rbp,rsp
0x1675: sar rsi,0x3
0x1679: mov rax,rsi
0x167c: shr rax,0x3f
0x1680: add rsi,rax
0x1683: sar rsi,0x1
0x1686: jz 0x16a0
0x1688: mov rax,qword ptr [rip+0x205949]
0x168f: test rax,rax
0x1692: jz 0x16a0
0x1694: pop rbp
0x1695: jmp rax
0x1697: nop qword ptr [rax+rax*1+0x0]
0x16a0: pop rbp
0x16a1: ret
0x16b0: cmp [rip+0x205a11],0x0
0x16b7: jnz 0x16e8
0x16b9: cmp [rip+0x20591f],0x0
0x16c1: push rbp
0x16c2: mov rbp,rsp
0x16c5: jz 0x16d3
0x16c7: mov rdi,qword ptr [rip+0x20593a]
0x16ce: call 0x1470
0x16d3: call 0x1620
0x16d8: mov [rip+0x2059e9],0x1
0x16df: pop rbp
0x16e0: ret
0x16e1: nop qword ptr [rax+0x0]
0x16e8: rep ret
0x16f0: push rbp
0x16f1: mov rbp,rsp
0x16f4: pop rbp
0x16f5: jmp 0x1660
0x1a50: mov qword ptr [rip+0x205681],rdi
0x1a57: ret
0x1a60: mov byte ptr [rip+0x205669],dil
0x1a67: ret
0x1a70: push rbp
0x1a71: push rbx
0x1a72: sub rsp,0x8
0x1a76: mov rdi,qword ptr [rip+0x20560b]
0x1a7d: call 0x4410
0x1a82: test eax,eax
0x1a84: jz 0x1a9c
0x1a86: call 0x1210
0x1a8b: cmp [rip+0x20563e],0x0
0x1a92: mov rbx,rax
0x1a95: jz 0x1ab3
0x1a97: cmp [rax],0x20
0x1a9a: jnz 0x1ab3
0x1a9c: mov rdi,qword ptr [rip+0x20561d]
0x1aa3: call 0x4410
0x1aa8: test eax,eax
0x1aaa: jnz 0x1af2
0x1aac: add rsp,0x8
0x1ab0: pop rbx
0x1ab1: pop rbp
0x1ab2: ret
0x1ab3: lea rsi,[rip+0x2eee]
0x1aba: xor edi,edi
0x1abc: mov edx,0x5
0x1ac1: call 0x1290
0x1ac6: mov rdi,qword ptr [rip+0x20560b]
0x1acd: mov rbp,rax
0x1ad0: test rdi,rdi
0x1ad3: jz 0x1afd
0x1ad5: call 0x38b0
0x1ada: mov esi,dword ptr [rbx]
0x1adc: lea rdx,[rip+0x2ed1]
0x1ae3: mov rcx,rax
0x1ae6: mov r8,rbp
0x1ae9: xor edi,edi
0x1aeb: xor eax,eax
0x1aed: call 0x13e0
0x1af2: mov edi,dword ptr [rip+0x205520]
0x1af8: call 0x1240
0x1afd: mov esi,dword ptr [rbx]
0x1aff: lea rdx,[rip+0x2eb2]
0x1b06: mov rcx,rax
0x1b09: xor edi,edi
0x1b0b: xor eax,eax
0x1b0d: call 0x13e0
0x1b12: jmp 0x1af2
0x1b20: push r13
0x1b22: push r12
0x1b24: mov r13,r8
0x1b27: push rbp
0x1b28: push rbx
0x1b29: mov rbp,rdx
0x1b2c: mov r12,rcx
0x1b2f: sub rsp,0xe8
0x1b36: test al,al
0x1b38: jz 0x1b74
0x1b3a: movaps [rsp+0x60],xmm0
0x1b3f: movaps [rsp+0x70],xmm1
0x1b44: movaps [rsp+0x80],xmm2
0x1b4c: movaps [rsp+0x90],xmm3
0x1b54: movaps [rsp+0xa0],xmm4
0x1b5c: movaps [rsp+0xb0],xmm5
0x1b64: movaps [rsp+0xc0],xmm6
0x1b6c: movaps [rsp+0xd0],xmm7
0x1b74: mov rax,0x28
0x1b7d: mov qword ptr [rsp+0x28],rax
0x1b82: xor eax,eax
0x1b84: cmp edi,0x2
0x1b87: mov ebx,dword ptr [rip+0x205513]
0x1b8d: mov [rip+0x205509],0x0
0x1b97: jz 0x1bd0
0x1b99: mov rax,qword ptr [rsp+0x28]
0x1b9e: xor rax,0x28
0x1ba7: mov dword ptr [rip+0x2054f3],ebx
0x1bad: mov [rip+0x2054d9],0x0
0x1bb7: jnz 0x1c5a
0x1bbd: add rsp,0xe8
0x1bc4: pop rbx
0x1bc5: pop rbp
0x1bc6: pop r12
0x1bc8: pop r13
0x1bca: ret
0x1bcb: nop qword ptr [rax+rax*1+0x0]
0x1bd0: lea rcx,[rip+0x204fe9]
0x1bd7: lea rdx,[rip+0x2ddd]
0x1bde: xor r8d,r8d
0x1be1: mov qword ptr [rsp+0x8],r9
0x1be6: call 0x12d0
0x1beb: cmp eax,0xff
0x1bee: jz 0x1b99
0x1bf0: cmp eax,0x68
0x1bf3: mov r9,qword ptr [rsp+0x8]
0x1bf8: jz 0x1c50
0x1bfa: cmp eax,0x76
0x1bfd: jnz 0x1b99
0x1bff: lea rax,[rsp+0x110]
0x1c07: mov rdi,qword ptr [rip+0x20547a]
0x1c0e: lea r8,[rsp+0x10]
0x1c13: mov rcx,r13
0x1c16: mov rdx,r12
0x1c19: mov rsi,rbp
0x1c1c: mov qword ptr [rsp+0x18],rax
0x1c21: lea rax,[rsp+0x30]
0x1c26: mov [rsp+0x10],0x30
0x1c2e: mov [rsp+0x14],0x30
0x1c36: mov qword ptr [rsp+0x20],rax
0x1c3b: call 0x3f10
0x1c40: xor edi,edi
0x1c42: call 0x1410
0x1c47: nop qword ptr [rax+rax*1+0x0]
0x1c50: xor edi,edi
0x1c52: call r9
0x1c55: jmp 0x1b99
0x1c5a: call 0x12c0
0x1c84: movaps [rsp+0x50],xmm0
0x1c89: movaps [rsp+0x60],xmm1
0x1c8e: movaps [rsp+0x70],xmm2
0x1c93: movaps [rsp+0x80],xmm3
0x1c9b: movaps [rsp+0x90],xmm4
0x1ca3: movaps [rsp+0xa0],xmm5
0x1cab: movaps [rsp+0xb0],xmm6
0x1cb3: movaps [rsp+0xc0],xmm7
0x1d57: nop qword ptr [rax+rax*1+0x0]
0x1d8e: nop 
0x1d94: jmp 0x1d68
0x1d96: call 0x12c0
0x1e7c: nop qword ptr [rax+0x0]
0x1ecd: nop qword ptr [rax]
0x21e7: nop qword ptr [rax+rax*1+0x0]
0x221e: nop 
0x2241: nop qword ptr [rax+0x0]
0x2282: nop qword ptr [rax+rax*1+0x0]
0x2294: nop qword ptr [rax+0x0]
0x2338: nop qword ptr [rax+rax*1+0x0]
0x2361: nop qword ptr [rax+0x0]
0x2377: nop qword ptr [rax+rax*1+0x0]
0x238f: nop 
0x23be: nop 
0x23cd: nop qword ptr [rax]
0x23df: nop 
0x23ef: nop 
0x23ff: nop 
0x240f: nop 
0x241f: nop 
0x248c: nop qword ptr [rax+0x0]
0x24ac: nop qword ptr [rax+0x0]
0x24cf: nop 
0x24e2: nop qword ptr [rax+rax*1+0x0]
0x24fa: nop qword ptr [rax+rax*1+0x0]
0x250a: nop qword ptr [rax+rax*1+0x0]
0x25ab: nop qword ptr [rax+rax*1+0x0]
0x25c5: nop qword ptr [rax]
0x25d8: nop qword ptr [rax+rax*1+0x0]
0x25f3: nop qword ptr [rax+rax*1+0x0]
0x2622: nop qword ptr [rax+rax*1+0x0]
0x2632: nop qword ptr [rax+rax*1+0x0]
0x264a: nop qword ptr [rax+rax*1+0x0]
0x265a: nop qword ptr [rax+rax*1+0x0]
0x2668: nop qword ptr [rax+rax*1+0x0]
0x268f: nop 
0x2729: nop qword ptr [rax+0x0]
0x2772: nop qword ptr [rax+rax*1+0x0]
0x27b1: nop qword ptr [rax+0x0]
0x27d2: nop qword ptr [rax+rax*1+0x0]
0x2938: nop qword ptr [rax+rax*1+0x0]
0x2a4b: nop qword ptr [rax+rax*1+0x0]
0x2a6e: nop 
0x2b35: nop qword ptr [rax]
0x2bed: nop qword ptr [rax]
0x2df6: nop qword ptr [rax+rax*1+0x0]
0x2e89: nop qword ptr [rax+0x0]
0x2fdd: nop qword ptr [rax]
0x3123: call 0x12c0
0x32eb: nop qword ptr [rax+rax*1+0x0]
0x3311: call 0x1200
0x3316: call 0x4340
0x3320: push r12
0x3322: push rbp
0x3323: push rbx
0x3324: mov rbx,rdi
0x3327: call 0x1210
0x332c: mov r12d,dword ptr [rax]
0x332f: mov rbp,rax
0x3332: lea rax,[rip+0x203ec7]
0x3339: test rbx,rbx
0x333c: mov esi,0x38
0x3341: cmove rbx,rax
0x3345: mov rdi,rbx
0x3348: call 0x42f0
0x334d: mov dword ptr [rbp+0x0],r12d
0x3351: pop rbx
0x3352: pop rbp
0x3353: pop r12
0x3355: ret
0x3360: lea rax,[rip+0x203e99]
0x3367: test rdi,rdi
0x336a: cmove rdi,rax
0x336e: mov eax,dword ptr [rdi]
0x3370: ret
0x3380: lea rax,[rip+0x203e79]
0x3387: test rdi,rdi
0x338a: cmove rdi,rax
0x338e: mov dword ptr [rdi],esi
0x3390: ret
0x33a0: lea rax,[rip+0x203e59]
0x33a7: test rdi,rdi
0x33aa: mov ecx,esi
0x33ac: cmove rdi,rax
0x33b0: mov eax,esi
0x33b2: and ecx,0x1f
0x33b5: shr al,0x5
0x33b8: movzx eax,al
0x33bb: lea rdi,[rdi+rax*4+0x8]
0x33c0: mov esi,dword ptr [rdi]
0x33c2: mov eax,esi
0x33c4: shr eax,cl
0x33c6: xor edx,eax
0x33c8: and eax,0x1
0x33cb: and edx,0x1
0x33ce: shl edx,cl
0x33d0: xor edx,esi
0x33d2: mov dword ptr [rdi],edx
0x33d4: ret
0x33e0: lea rax,[rip+0x203e19]
0x33e7: test rdi,rdi
0x33ea: cmove rdi,rax
0x33ee: mov eax,dword ptr [rdi+0x4]
0x33f1: mov dword ptr [rdi+0x4],esi
0x33f4: ret
0x3400: lea rax,[rip+0x203df9]
0x3407: test rdi,rdi
0x340a: cmove rdi,rax
0x340e: test rsi,rsi
0x3411: mov [rdi],0xa
0x3417: jz 0x3427
0x3419: test rdx,rdx
0x341c: jz 0x3427
0x341e: mov qword ptr [rdi+0x28],rsi
0x3422: mov qword ptr [rdi+0x30],rdx
0x3426: ret
0x3427: sub rsp,0x8
0x342b: call 0x1200
0x3430: push r15
0x3432: push r14
0x3434: lea rax,[rip+0x203dc5]
0x343b: push r13
0x343d: push r12
0x343f: mov r13,rdi
0x3442: push rbp
0x3443: push rbx
0x3444: mov rbx,r8
0x3447: mov r14,rsi
0x344a: mov r15,rdx
0x344d: sub rsp,0x18
0x3451: test r8,r8
0x3454: cmove rbx,rax
0x3458: mov qword ptr [rsp+0x8],rcx
0x345d: call 0x1210
0x3462: mov r12d,dword ptr [rax]
0x3465: mov rbp,rax
0x3468: lea rax,[rbx+0x8]
0x346c: sub rsp,0x8
0x3470: mov r9d,dword ptr [rbx+0x4]
0x3474: push qword ptr [rbx+0x30]
0x3477: mov r8d,dword ptr [rbx]
0x347a: push qword ptr [rbx+0x28]
0x347d: mov rdx,r15
0x3480: push rax
0x3481: mov rcx,qword ptr [rsp+0x28]
0x3486: mov rsi,r14
0x3489: mov rdi,r13
0x348c: call 0x1f30
0x3491: mov dword ptr [rbp+0x0],r12d
0x3495: add rsp,0x38
0x3499: pop rbx
0x349a: pop rbp
0x349b: pop r12
0x349d: pop r13
0x349f: pop r14
0x34a1: pop r15
0x34a3: ret
0x34b0: push r15
0x34b2: push r14
0x34b4: lea rax,[rip+0x203d45]
0x34bb: push r13
0x34bd: push r12
0x34bf: mov r12,rdx
0x34c2: push rbp
0x34c3: push rbx
0x34c4: mov rbx,rcx
0x34c7: mov r14,rdi
0x34ca: mov r15,rsi
0x34cd: sub rsp,0x38
0x34d1: test rcx,rcx
0x34d4: cmove rbx,rax
0x34d8: xor ebp,ebp
0x34da: call 0x1210
0x34df: test r12,r12
0x34e2: mov r13,rax
0x34e5: mov eax,dword ptr [rax]
0x34e7: setz bpl
0x34eb: or ebp,dword ptr [rbx+0x4]
0x34ee: lea r10,[rbx+0x8]
0x34f2: sub rsp,0x8
0x34f6: mov r8d,dword ptr [rbx]
0x34f9: mov rcx,r15
0x34fc: mov dword ptr [rsp+0x14],eax
0x3500: push qword ptr [rbx+0x30]
0x3503: mov rdx,r14
0x3506: push qword ptr [rbx+0x28]
0x3509: push r10
0x350b: xor esi,esi
0x350d: mov r9d,ebp
0x3510: xor edi,edi
0x3512: mov qword ptr [rsp+0x40],r10
0x3517: call 0x1f30
0x351c: lea rsi,[rax+0x1]
0x3520: mov qword ptr [rsp+0x48],rax
0x3525: add rsp,0x20
0x3529: mov rdi,rsi
0x352c: mov qword ptr [rsp+0x18],rsi
0x3531: call 0x40f0
0x3536: mov qword ptr [rsp+0x10],rax
0x353b: sub rsp,0x8
0x353f: push qword ptr [rbx+0x30]
0x3542: push qword ptr [rbx+0x28]
0x3545: mov r10,qword ptr [rsp+0x38]
0x354a: mov r9d,ebp
0x354d: mov r8d,dword ptr [rbx]
0x3550: mov rcx,r15
0x3553: mov rdx,r14
0x3556: mov rdi,rax
0x3559: push r10
0x355b: mov rsi,qword ptr [rsp+0x38]
0x3560: call 0x1f30
0x3565: mov eax,dword ptr [rsp+0x2c]
0x3569: add rsp,0x20
0x356d: test r12,r12
0x3570: mov dword ptr [r13+0x0],eax
0x3574: jz 0x357f
0x3576: mov r11,qword ptr [rsp+0x28]
0x357b: mov qword ptr [r12],r11
0x357f: mov rax,qword ptr [rsp+0x10]
0x3584: add rsp,0x38
0x3588: pop rbx
0x3589: pop rbp
0x358a: pop r12
0x358c: pop r13
0x358e: pop r14
0x3590: pop r15
0x3592: ret
0x35a0: mov rcx,rdx
0x35a3: xor edx,edx
0x35a5: jmp 0x34b0
0x35b0: mov eax,dword ptr [rip+0x203aa2]
0x35b6: push r12
0x35b8: mov r12,qword ptr [rip+0x203aa1]
0x35bf: push rbp
0x35c0: push rbx
0x35c1: cmp eax,0x1
0x35c4: jle 0x35f1
0x35c6: sub eax,0x2
0x35c9: lea rbx,[r12+0x18]
0x35ce: shl rax,0x4
0x35d2: lea rbp,[r12+rax*1+0x28]
0x35d7: nop qword ptr [rax+rax*1+0x0]
0x35e0: mov rdi,qword ptr [rbx]
0x35e3: add rbx,0x10
0x35e7: call 0x11f0
0x35ec: cmp rbx,rbp
0x35ef: jnz 0x35e0
0x35f1: mov rdi,qword ptr [r12+0x8]
0x35f6: lea rbx,[rip+0x203b03]
0x35fd: cmp rdi,rbx
0x3600: jz 0x3619
0x3602: call 0x11f0
0x3607: mov [rip+0x203a5e],0x100
0x3612: mov qword ptr [rip+0x203a5f],rbx
0x3619: lea rbx,[rip+0x203a50]
0x3620: cmp r12,rbx
0x3623: jz 0x3634
0x3625: mov rdi,r12
0x3628: call 0x11f0
0x362d: mov qword ptr [rip+0x203a2c],rbx
0x3634: pop rbx
0x3635: mov [rip+0x203a19],0x1
0x363f: pop rbp
0x3640: pop r12
0x3642: ret
0x3650: lea rcx,[rip+0x203ba9]
0x3657: mov rdx,0xffffffff
0x365e: jmp 0x3170
0x3670: lea rcx,[rip+0x203b89]
0x3677: jmp 0x3170
0x3680: lea rcx,[rip+0x203b79]
0x3687: mov rsi,rdi
0x368a: mov rdx,0xffffffff
0x3691: xor edi,edi
0x3693: jmp 0x3170
0x36a0: lea rcx,[rip+0x203b59]
0x36a7: mov rdx,rsi
0x36aa: mov rsi,rdi
0x36ad: xor edi,edi
0x36af: jmp 0x3170
0x372f: mov rcx,qword ptr [rsp+0x38]
0x3734: xor rcx,0x28
0x373d: jnz 0x3749
0x373f: add rsp,0x48
0x3743: ret
0x3744: call 0x1200
0x3749: call 0x12c0
0x3750: sub rsp,0x48
0x3754: mov rax,rdx
0x3757: mov rdx,rcx
0x375a: mov rcx,0x28
0x3763: mov qword ptr [rsp+0x38],rcx
0x3768: xor ecx,ecx
0x376a: cmp esi,0xa
0x376d: jz 0x37d0
0x376f: mov dword ptr [rsp],esi
0x3772: mov rcx,rsp
0x3775: mov rsi,rax
0x3778: mov [rsp+0x4],0x0
0x3781: mov [rsp+0xc],0x0
0x378a: mov [rsp+0x14],0x0
0x3793: mov [rsp+0x1c],0x0
0x379c: mov [rsp+0x24],0x0
0x37a5: mov [rsp+0x2c],0x0
0x37ae: mov [rsp+0x34],0x0
0x37b6: call 0x3170
0x37bb: mov rdx,qword ptr [rsp+0x38]
0x37c0: xor rdx,0x28
0x37c9: jnz 0x37d5
0x37cb: add rsp,0x48
0x37cf: ret
0x37d0: call 0x1200
0x37d5: call 0x12c0
0x37f0: mov rcx,rdx
0x37f3: mov rdx,rsi
0x37f6: mov esi,edi
0x37f8: xor edi,edi
0x37fa: jmp 0x3750
0x3800: sub rsp,0x48
0x3804: mov ecx,edx
0x3806: mov rax,0x28
0x380f: mov qword ptr [rsp+0x38],rax
0x3814: xor eax,eax
0x3816: mov rax,qword ptr [rip+0x203a13]
0x381d: mov r8,rsp
0x3820: and ecx,0x1f
0x3823: movdqa xmm0,[rip+0x2039d5]
0x382b: mov qword ptr [rsp+0x30],rax
0x3830: mov eax,edx
0x3832: movaps [rsp],xmm0
0x3836: shr al,0x5
0x3839: movzx eax,al
0x383c: lea r9,[r8+rax*4+0x8]
0x3841: movdqa xmm0,[rip+0x2039c7]
0x3849: movaps [rsp+0x10],xmm0
0x384e: movdqa xmm0,[rip+0x2039ca]
0x3856: movaps [rsp+0x20],xmm0
0x385b: mov edx,dword ptr [r9]
0x385e: mov eax,edx
0x3860: shr eax,cl
0x3862: not eax
0x3864: and eax,0x1
0x3867: shl eax,cl
0x3869: mov rcx,r8
0x386c: xor eax,edx
0x386e: mov rdx,rsi
0x3871: mov rsi,rdi
0x3874: mov dword ptr [r9],eax
0x3877: xor edi,edi
0x3879: call 0x3170
0x387e: mov rsi,qword ptr [rsp+0x38]
0x3883: xor rsi,0x28
0x388c: jnz 0x3893
0x388e: add rsp,0x48
0x3892: ret
0x3893: call 0x12c0
0x38a0: movsx edx,sil
0x38a4: mov rsi,0xffffffff
0x38ab: jmp 0x3800
0x38b0: mov edx,0x3a
0x38b5: mov rsi,0xffffffff
0x38bc: jmp 0x3800
0x38d0: mov edx,0x3a
0x38d5: jmp 0x3800
0x38e0: sub rsp,0x48
0x38e4: mov rax,rdx
0x38e7: mov rdx,0x28
0x38f0: mov qword ptr [rsp+0x38],rdx
0x38f5: xor edx,edx
0x38f7: cmp esi,0xa
0x38fa: jz 0x3964
0x38fc: mov dword ptr [rsp],esi
0x38ff: mov rcx,rsp
0x3902: mov rdx,0xffffffff
0x3909: mov rsi,rax
0x390c: mov [rsp+0x4],0x0
0x3915: mov [rsp+0xc],0x4000000
0x391e: mov [rsp+0x14],0x0
0x3927: mov [rsp+0x1c],0x0
0x3930: mov [rsp+0x24],0x0
0x3939: mov [rsp+0x2c],0x0
0x3942: mov [rsp+0x34],0x0
0x394a: call 0x3170
0x394f: mov rcx,qword ptr [rsp+0x38]
0x3954: xor rcx,0x28
0x395d: jnz 0x3969
0x395f: add rsp,0x48
0x3963: ret
0x3964: call 0x1200
0x3969: call 0x12c0
0x3970: sub rsp,0x48
0x3974: mov r9,rcx
0x3977: mov rcx,qword ptr [rip+0x2038b2]
0x397e: movdqa xmm0,[rip+0x20387a]
0x3986: mov rax,0x28
0x398f: mov qword ptr [rsp+0x38],rax
0x3994: xor eax,eax
0x3996: movaps [rsp],xmm0
0x399a: test rsi,rsi
0x399d: mov qword ptr [rsp+0x30],rcx
0x39a2: mov [rsp],0xa
0x39a9: movdqa xmm0,[rip+0x20385f]
0x39b1: movaps [rsp+0x10],xmm0
0x39b6: movdqa xmm0,[rip+0x203862]
0x39be: movaps [rsp+0x20],xmm0
0x39c3: jz 0x39f7
0x39c5: test rdx,rdx
0x39c8: jz 0x39f7
0x39ca: mov qword ptr [rsp+0x28],rsi
0x39cf: mov qword ptr [rsp+0x30],rdx
0x39d4: mov rcx,rsp
0x39d7: mov rdx,r8
0x39da: mov rsi,r9
0x39dd: call 0x3170
0x39e2: mov rdi,qword ptr [rsp+0x38]
0x39e7: xor rdi,0x28
0x39f0: jnz 0x39fc
0x39f2: add rsp,0x48
0x39f6: ret
0x39f7: call 0x1200
0x39fc: call 0x12c0
0x3a10: mov r8,0xffffffff
0x3a17: jmp 0x3970
0x3a20: mov rcx,rdx
0x3a23: mov r8,0xffffffff
0x3a2a: mov rdx,rsi
0x3a2d: mov rsi,rdi
0x3a30: xor edi,edi
0x3a32: jmp 0x3970
0x3a40: mov r8,rcx
0x3a43: mov rcx,rdx
0x3a46: mov rdx,rsi
0x3a49: mov rsi,rdi
0x3a4c: xor edi,edi
0x3a4e: jmp 0x3970
0x3a60: lea rcx,[rip+0x2035b9]
0x3a67: jmp 0x3170
0x3a70: lea rcx,[rip+0x2035a9]
0x3a77: mov rdx,rsi
0x3a7a: mov rsi,rdi
0x3a7d: xor edi,edi
0x3a7f: jmp 0x3170
0x3a90: lea rcx,[rip+0x203589]
0x3a97: mov rdx,0xffffffff
0x3a9e: jmp 0x3170
0x3b76: nop qword ptr [rax+rax*1+0x0]
0x3c05: nop qword ptr [rax]
0x3c08: mov r8,rcx
0x3c0b: mov rcx,rdx
0x3c0e: lea rdx,[rip+0x12df]
0x3c15: mov esi,0x1
0x3c1a: xor eax,eax
0x3c1c: call 0x1430
0x3c21: jmp 0x3b0c
0x3c26: nop qword ptr [rax+rax*1+0x0]
0x3c85: nop qword ptr [rax]
0x3cc1: nop qword ptr [rax+0x0]
0x3d08: nop qword ptr [rax+rax*1+0x0]
0x3d57: nop qword ptr [rax+rax*1+0x0]
0x3db4: nop qword ptr [rax+0x0]
0x3de2: nop qword ptr [rax+rax*1+0x0]
0x3e96: nop qword ptr [rax+rax*1+0x0]
0x3ef0: xor r9d,r9d
0x3ef3: cmp [r8],0x0
0x3ef7: jz 0x3f0b
0x3ef9: nop qword ptr [rax+0x0]
0x3f00: add r9,0x1
0x3f04: cmp [r8+r9*8+0x0],0x0
0x3f09: jnz 0x3f00
0x3f0b: jmp 0x3ad0
0x3f38: mov r11d,eax
0x3f3b: add r11,qword ptr [r10+0x10]
0x3f3f: add eax,0x8
0x3f42: mov dword ptr [r10],eax
0x3f75: call 0x12c0
0x3f90: push rbp
0x3f91: push rbx
0x3f92: mov r10d,0x20
0x3f98: xor r11d,r11d
0x3f9b: sub rsp,0xb8
0x3fa2: mov rax,0x28
0x3fab: mov qword ptr [rsp+0x78],rax
0x3fb0: xor eax,eax
0x3fb2: lea rax,[rsp+0xd0]
0x3fba: mov qword ptr [rsp+0xa0],r8
0x3fc2: lea rbx,[rsp+0xd0]
0x3fca: lea r8,[rsp+0x20]
0x3fcf: mov qword ptr [rsp+0xa8],r9
0x3fd7: mov [rsp+0x8],0x20
0x3fdf: mov qword ptr [rsp+0x10],rax
0x3fe4: lea rax,[rsp+0x80]
0x3fec: xor r9d,r9d
0x3fef: mov qword ptr [rsp+0x18],rax
0x3ff4: mov rbp,rax
0x3ff7: nop qword ptr [rax+rax*1+0x0]
0x4000: cmp r10d,0x2f
0x4004: jnbe 0x405c
0x4006: mov eax,r10d
0x4009: mov r11d,0x1
0x400f: add r10d,0x8
0x4013: add rax,rbp
0x4016: mov rax,qword ptr [rax]
0x4019: test rax,rax
0x401c: mov qword ptr [r8+r9*8+0x0],rax
0x4020: jz 0x402c
0x4022: add r9,0x1
0x4026: cmp r9,0xa
0x402a: jnz 0x4000
0x402c: test r11b,r11b
0x402f: jnz 0x4055
0x4031: call 0x3ad0
0x4036: mov rax,qword ptr [rsp+0x78]
0x403b: xor rax,0x28
0x4044: jnz 0x4050
0x4046: add rsp,0xb8
0x404d: pop rbx
0x404e: pop rbp
0x404f: ret
0x4050: call 0x12c0
0x4055: mov dword ptr [rsp+0x8],r10d
0x405a: jmp 0x4031
0x405c: mov rax,rbx
0x405f: add rbx,0x8
0x4063: jmp 0x4016
0x4070: push rbx
0x4071: lea rsi,[rip+0xeca]
0x4078: mov edx,0x5
0x407d: xor edi,edi
0x407f: call 0x1290
0x4084: lea rdx,[rip+0xecc]
0x408b: mov rsi,rax
0x408e: mov edi,0x1
0x4093: xor eax,eax
0x4095: call 0x13d0
0x409a: lea rsi,[rip+0xecc]
0x40a1: mov edx,0x5
0x40a6: xor edi,edi
0x40a8: call 0x1290
0x40ad: lea rcx,[rip+0x84c]
0x40b4: lea rdx,[rip+0x6c6]
0x40bb: mov rsi,rax
0x40be: mov edi,0x1
0x40c3: xor eax,eax
0x40c5: call 0x13d0
0x40ca: mov rbx,qword ptr [rip+0x202fb7]
0x40d1: lea rsi,[rip+0x10c8]
0x40d8: xor edi,edi
0x40da: mov edx,0x5
0x40df: call 0x1290
0x40e4: mov rsi,rbx
0x40e7: mov rdi,rax
0x40ea: pop rbx
0x40eb: jmp 0x1330
0x40fe: test rbx,rbx
0x4101: jnz 0x4105
0x4105: call 0x4340
0x4110: mov rax,rdi
0x4113: mul rsi
0x4116: mov rdi,rax
0x4119: seto al
0x411c: test rdi,rdi
0x411f: js 0x412b
0x4121: movzx eax,al
0x4124: test rax,rax
0x4127: jnz 0x412b
0x4129: jmp 0x40f0
0x412b: sub rsp,0x8
0x412f: call 0x4340
0x4159: test rdi,rdi
0x415c: jnz 0x4178
0x416b: test rbx,rbx
0x416e: jnz 0x4181
0x4172: nop qword ptr [rax+rax*1+0x0]
0x4178: call 0x11f0
0x417d: xor eax,eax
0x417f: pop rbx
0x4180: ret
0x4181: call 0x4340
0x4190: mov rax,rsi
0x4193: mul rdx
0x4196: mov rsi,rax
0x4199: seto al
0x419c: test rsi,rsi
0x419f: js 0x41ab
0x41a1: movzx eax,al
0x41a4: test rax,rax
0x41a7: jnz 0x41ab
0x41a9: jmp 0x4150
0x41ab: sub rsp,0x8
0x41af: call 0x4340
0x41c0: test rdi,rdi
0x41c3: mov r9,rdx
0x41c6: mov rcx,qword ptr [rsi]
0x41c9: jz 0x4200
0x41cb: xor edx,edx
0x41cd: mov rax,0x6148914691236517204
0x41d7: div r9
0x41da: cmp rax,rcx
0x41dd: jbe 0x421b
0x41df: mov rax,rcx
0x41e2: shr rax,0x1
0x41e5: lea rcx,[rax+rcx*1+0x1]
0x41ea: mov qword ptr [rsi],rcx
0x41ed: imul rcx,r9
0x41f1: mov rsi,rcx
0x41f4: jmp 0x4150
0x41f9: nop qword ptr [rax+0x0]
0x4200: test rcx,rcx
0x4203: jz 0x4228
0x4205: mov rax,rcx
0x4208: mul r9
0x420b: seto dl
0x420e: test rax,rax
0x4211: movzx edx,dl
0x4214: js 0x421b
0x4216: test rdx,rdx
0x4219: jz 0x41ea
0x421b: sub rsp,0x8
0x421f: call 0x4340
0x4224: nop qword ptr [rax+0x0]
0x4228: xor edx,edx
0x422a: mov eax,0x80
0x422f: xor r8d,r8d
0x4232: div r9
0x4235: test rax,rax
0x4238: setz r8b
0x423c: lea rcx,[r8+rax*1+0x0]
0x4240: jmp 0x4205
0x4250: test rdi,rdi
0x4253: mov rax,qword ptr [rsi]
0x4256: jz 0x4280
0x4258: mov rdx,0x6148914691236517203
0x4262: cmp rax,rdx
0x4265: jnbe 0x4291
0x4267: mov rdx,rax
0x426a: shr rdx,0x1
0x426d: lea rax,[rdx+rax*1+0x1]
0x4272: mov qword ptr [rsi],rax
0x4275: mov rsi,rax
0x4278: jmp 0x4150
0x427d: nop qword ptr [rax]
0x4280: test rax,rax
0x4283: mov edx,0x80
0x4288: cmove rax,rdx
0x428c: test rax,rax
0x428f: jns 0x4272
0x4291: sub rsp,0x8
0x4295: call 0x4340
0x42a0: push rbx
0x42a1: mov rbx,rdi
0x42a4: call 0x40f0
0x42a9: mov rdx,rbx
0x42ac: xor esi,esi
0x42ae: mov rdi,rax
0x42b1: pop rbx
0x42b2: jmp 0x1310
0x42c0: mov rax,rdi
0x42c3: sub rsp,0x8
0x42c7: mul rsi
0x42ca: seto dl
0x42cd: test rax,rax
0x42d0: js 0x42e9
0x42d2: movzx edx,dl
0x42d5: test rdx,rdx
0x42d8: jnz 0x42e9
0x42da: call 0x1340
0x42df: test rax,rax
0x42e2: jz 0x42e9
0x42e4: add rsp,0x8
0x42e8: ret
0x42e9: call 0x4340
0x42f0: push rbp
0x42f1: push rbx
0x42f2: mov rbp,rdi
0x42f5: mov rdi,rsi
0x42f8: mov rbx,rsi
0x42fb: sub rsp,0x8
0x42ff: call 0x40f0
0x4304: add rsp,0x8
0x4308: mov rdx,rbx
0x430b: mov rsi,rbp
0x430e: pop rbx
0x430f: pop rbp
0x4310: mov rdi,rax
0x4313: jmp 0x1350
0x4320: push rbx
0x4321: mov rbx,rdi
0x4324: call 0x12b0
0x4329: mov rdi,rbx
0x432c: lea rsi,[rax+0x1]
0x4330: pop rbx
0x4331: jmp 0x42f0
0x4340: lea rsi,[rip+0xf08]
0x4347: sub rsp,0x8
0x434b: mov edx,0x5
0x4350: xor edi,edi
0x4352: call 0x1290
0x4357: mov edi,dword ptr [rip+0x202cbb]
0x435d: lea rdx,[rip+0x654]
0x4364: mov rcx,rax
0x4367: xor esi,esi
0x4369: xor eax,eax
0x436b: call 0x13e0
0x4370: call 0x1200
0x43fe: call 0x12c0
0x4410: push r12
0x4412: push rbp
0x4413: mov rbp,rdi
0x4416: push rbx
0x4417: call 0x1250
0x441c: mov ebx,dword ptr [rbp+0x0]
0x441f: mov rdi,rbp
0x4422: mov r12,rax
0x4425: call 0x4530
0x442a: and ebx,0x20
0x442d: test ebx,ebx
0x442f: jnz 0x4448
0x4431: test eax,eax
0x4433: jz 0x443f
0x4435: test r12,r12
0x4438: mov eax,0xffffffff
0x443d: jz 0x4478
0x443f: pop rbx
0x4440: pop rbp
0x4441: pop r12
0x4443: ret
0x4444: nop qword ptr [rax+0x0]
0x4448: test eax,eax
0x444a: jnz 0x4468
0x444c: call 0x1210
0x4451: mov [rax],0x0
0x4457: mov eax,0xffffffff
0x445c: pop rbx
0x445d: pop rbp
0x445e: pop r12
0x4460: ret
0x4461: nop qword ptr [rax+0x0]
0x4468: pop rbx
0x4469: mov eax,0xffffffff
0x446e: pop rbp
0x446f: pop r12
0x4471: ret
0x4472: nop qword ptr [rax+rax*1+0x0]
0x4478: call 0x1210
0x447d: cmp [rax],0x9
0x4480: pop rbx
0x4481: pop rbp
0x4482: pop r12
0x4484: setnz al
0x4487: movzx eax,al
0x448a: neg eax
0x448c: ret
0x44ca: nop qword ptr [rax+rax*1+0x0]
0x4516: nop qword ptr [rax+rax*1+0x0]
0x4530: push r12
0x4532: push rbp
0x4533: push rbx
0x4534: mov rbx,rdi
0x4537: call 0x1360
0x453c: test eax,eax
0x453e: mov rdi,rbx
0x4541: js 0x4597
0x4543: call 0x13a0
0x4548: test eax,eax
0x454a: jnz 0x4578
0x454c: mov rdi,rbx
0x454f: call 0x45b0
0x4554: test eax,eax
0x4556: jz 0x4594
0x4558: call 0x1210
0x455d: mov r12d,dword ptr [rax]
0x4560: mov rdi,rbx
0x4563: mov rbp,rax
0x4566: call 0x1270
0x456b: test r12d,r12d
0x456e: jnz 0x45a0
0x4570: pop rbx
0x4571: pop rbp
0x4572: pop r12
0x4574: ret
0x4575: nop qword ptr [rax]
0x4578: mov rdi,rbx
0x457b: call 0x1360
0x4580: xor esi,esi
0x4582: mov edx,0x1
0x4587: mov edi,eax
0x4589: call 0x1300
0x458e: cmp rax,0xffffffff
0x4592: jnz 0x454c
0x4594: mov rdi,rbx
0x4597: pop rbx
0x4598: pop rbp
0x4599: pop r12
0x459b: jmp 0x1270
0x45a0: mov dword ptr [rbp+0x0],r12d
0x45a4: mov eax,0xffffffff
0x45a9: jmp 0x4570
0x45b0: test rdi,rdi
0x45b3: push rbx
0x45b4: mov rbx,rdi
0x45b7: jz 0x45ca
0x45b9: call 0x13a0
0x45be: test eax,eax
0x45c0: jz 0x45ca
0x45c2: test [rbx],0x100
0x45c8: jnz 0x45d8
0x45ca: mov rdi,rbx
0x45cd: pop rbx
0x45ce: jmp 0x1380
0x45d3: nop qword ptr [rax+rax*1+0x0]
0x45d8: mov rdi,rbx
0x45db: mov edx,0x1
0x45e0: xor esi,esi
0x45e2: call 0x45f0
0x45e7: mov rdi,rbx
0x45ea: pop rbx
0x45eb: jmp 0x1380
0x45f0: mov rax,qword ptr [rdi+0x8]
0x45f4: cmp qword ptr [rdi+0x10],rax
0x45f8: jz 0x4600
0x45fa: jmp 0x13f0
0x45ff: nop 
0x4600: mov rax,qword ptr [rdi+0x20]
0x4604: cmp qword ptr [rdi+0x28],rax
0x4608: jnz 0x45fa
0x460a: cmp [rdi+0x48],0x0
0x460f: jnz 0x45fa
0x4611: push r12
0x4613: push rbp
0x4614: mov r12d,edx
0x4617: push rbx
0x4618: mov rbp,rsi
0x461b: mov rbx,rdi
0x461e: call 0x1360
0x4623: mov edx,r12d
0x4626: mov rsi,rbp
0x4629: mov edi,eax
0x462b: call 0x1300
0x4630: cmp rax,0xffffffff
0x4634: jz 0x4642
0x4636: and [rbx],0xef
0x4639: mov qword ptr [rbx+0x90],rax
0x4640: xor eax,eax
0x4642: pop rbx
0x4643: pop rbp
0x4644: pop r12
0x4646: ret
0x4650: push r15
0x4652: push r14
0x4654: mov r15,rdx
0x4657: push r13
0x4659: push r12
0x465b: lea r12,[rip+0x20254e]
0x4662: push rbp
0x4663: lea rbp,[rip+0x20254e]
0x466a: push rbx
0x466b: mov r13d,edi
0x466e: mov r14,rsi
0x4671: sub rbp,r12
0x4674: sub rsp,0x8
0x4678: sar rbp,0x3
0x467c: call 0x11c0
0x4681: test rbp,rbp
0x4684: jz 0x46a6
0x4686: xor ebx,ebx
0x4688: nop qword ptr [rax+rax*1+0x0]
0x4690: mov rdx,r15
0x4693: mov rsi,r14
0x4696: mov edi,r13d
0x4699: call qword ptr [r12+rbx*8+0x0]
0x469d: add rbx,0x1
0x46a1: cmp rbp,rbx
0x46a4: jnz 0x4690
0x46a6: add rsp,0x8
0x46aa: pop rbx
0x46ab: pop rbp
0x46ac: pop r12
0x46ae: pop r13
0x46b0: pop r14
0x46b2: pop r15
0x46b4: ret
0x46e0: sub rsp,0x8
0x46e4: add rsp,0x8
0x46e8: ret
