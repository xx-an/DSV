0x26b0: sub rsp,0x8
0x26b4: mov rax,qword ptr [rip+0x21292d]
0x26bb: test rax,rax
0x26be: jz 0x26c2
0x26c0: call rax
0x26c2: add rsp,0x8
0x26c6: ret
0x26e0: jmp qword ptr [rip+0x2126ba]
0x26e6: push 0x0
0x26f6: push 0x1
0x2706: push 0x2
0x2716: push 0x3
0x2726: push 0x4
0x2736: push 0x5
0x2746: push 0x6
0x2756: push 0x7
0x2766: push 0x8
0x2776: push 0x9
0x2780: jmp qword ptr [rip+0x21266a]
0x2786: push 0xa
0x2790: jmp qword ptr [rip+0x212662]
0x2796: push 0xb
0x27a6: push 0xc
0x27b6: push 0xd
0x27c6: push 0xe
0x27d0: jmp qword ptr [rip+0x212642]
0x27d6: push 0xf
0x27e6: push 0x10
0x27f6: push 0x11
0x2806: push 0x12
0x2816: push 0x13
0x2826: push 0x14
0x2836: push 0x15
0x2846: push 0x16
0x2856: push 0x17
0x2866: push 0x18
0x2876: push 0x19
0x2886: push 0x1a
0x2890: jmp qword ptr [rip+0x2125e2]
0x2896: push 0x1b
0x28a6: push 0x1c
0x28b6: push 0x1d
0x28c0: jmp qword ptr [rip+0x2125ca]
0x28c6: push 0x1e
0x28d6: push 0x1f
0x28e0: jmp qword ptr [rip+0x2125ba]
0x28e6: push 0x20
0x28f6: push 0x21
0x2906: push 0x22
0x2910: jmp qword ptr [rip+0x2125a2]
0x2916: push 0x23
0x2926: push 0x24
0x2936: push 0x25
0x2940: jmp qword ptr [rip+0x21258a]
0x2946: push 0x26
0x2956: push 0x27
0x2966: push 0x28
0x2976: push 0x29
0x2986: push 0x2a
0x2996: push 0x2b
0x29a0: jmp qword ptr [rip+0x21255a]
0x29a6: push 0x2c
0x29b0: jmp qword ptr [rip+0x212552]
0x29b6: push 0x2d
0x29c6: push 0x2e
0x29d6: push 0x2f
0x29e0: jmp qword ptr [rip+0x21253a]
0x29e6: push 0x30
0x29f6: push 0x31
0x2a06: push 0x32
0x2a10: jmp qword ptr [rip+0x212522]
0x2a16: push 0x33
0x2a26: push 0x34
0x2a36: push 0x35
0x2a46: push 0x36
0x2a56: push 0x37
0x2a60: jmp qword ptr [rip+0x2124fa]
0x2a66: push 0x38
0x2a76: push 0x39
0x2a86: push 0x3a
0x2a90: jmp qword ptr [rip+0x2124e2]
0x2a96: push 0x3b
0x2aa6: push 0x3c
0x2ab6: push 0x3d
0x2ac6: push 0x3e
0x2ad6: push 0x3f
0x2ae6: push 0x40
0x2af6: push 0x41
0x2b06: push 0x42
0x2b16: push 0x43
0x2b20: jmp qword ptr [rip+0x21249a]
0x2b26: push 0x44
0x2b36: push 0x45
0x2b46: push 0x46
0x2b50: jmp qword ptr [rip+0x2124a2]
0x2b56: nop 
0x2ca8: nop qword ptr [rax+rax*1+0x0]
0x2cd6: nop qword ptr [rax+rax*1+0x0]
0x2d35: nop qword ptr [rax]
0x2d9a: nop qword ptr [rax+rax*1+0x0]
0x2dac: nop qword ptr [rax+0x0]
0x2dca: nop qword ptr [rax+rax*1+0x0]
0x2ddc: nop qword ptr [rax+0x0]
0x2dec: nop qword ptr [rax+0x0]
0x2f01: lea rsi,[rip+0xc9c8]
0x2f08: mov edx,0x5
0x2f0d: xor edi,edi
0x2f0f: mov r14,rax
0x2f12: call 0x27f0
0x2f17: mov r13,rax
0x2f1a: call 0x2750
0x2f1f: mov esi,dword ptr [rax]
0x2f21: mov rcx,r14
0x2f24: mov rdx,r13
0x2f27: xor edi,edi
0x2f29: xor eax,eax
0x2f2b: call 0x2a70
0x2f30: xor r10d,r10d
0x3046: lea rsi,[rip+0xc873]
0x304d: mov r13,rax
0x3050: mov edx,0x5
0x3055: xor edi,edi
0x3057: call 0x27f0
0x305c: mov rcx,r13
0x305f: mov rdx,rax
0x3062: mov esi,r14d
0x3065: xor edi,edi
0x3067: xor eax,eax
0x3069: call 0x2a70
0x306e: xor r10d,r10d
0x3071: jmp 0x2f33
0x31e1: lea rsi,[rip+0xc6c5]
0x31e8: mov edx,0x5
0x31ed: xor edi,edi
0x31ef: mov r14,rax
0x31f2: call 0x27f0
0x31f7: mov r13,rax
0x31fa: call 0x2750
0x31ff: mov esi,dword ptr [rax]
0x3201: mov rcx,r14
0x3204: mov rdx,r13
0x3207: xor edi,edi
0x3209: xor eax,eax
0x320b: call 0x2a70
0x3210: movzx r10d,byte ptr [rsp+0x10]
0x3216: jmp 0x2f33
0x33e0: call 0x2830
0x34ce: add rsp,0x20
0x34d2: jmp 0x339a
0x34e4: lea rsi,[rip+0xcac5]
0x34eb: mov edx,0x5
0x34f0: xor edi,edi
0x34f2: mov rbp,rax
0x34f5: call 0x27f0
0x34fa: mov rbx,rax
0x34fd: call 0x2750
0x3502: mov esi,dword ptr [rax]
0x3504: mov rcx,rbp
0x3507: mov rdx,rbx
0x350a: mov edi,0x1
0x350f: xor eax,eax
0x3511: call 0x2a70
0x355a: hlt 
0x3560: lea rdi,[rip+0x211b39]
0x3567: push rbp
0x3568: lea rax,[rip+0x211b31]
0x356f: cmp rax,rdi
0x3572: mov rbp,rsp
0x3575: jz 0x3590
0x3577: mov rax,qword ptr [rip+0x211a5a]
0x357e: test rax,rax
0x3581: jz 0x3590
0x3583: pop rbp
0x3584: jmp rax
0x3586: nop qword ptr [rax+rax*1+0x0]
0x3590: pop rbp
0x3591: ret
0x35a0: lea rdi,[rip+0x211af9]
0x35a7: lea rsi,[rip+0x211af2]
0x35ae: push rbp
0x35af: sub rsi,rdi
0x35b2: mov rbp,rsp
0x35b5: sar rsi,0x3
0x35b9: mov rax,rsi
0x35bc: shr rax,0x3f
0x35c0: add rsi,rax
0x35c3: sar rsi,0x1
0x35c6: jz 0x35e0
0x35c8: mov rax,qword ptr [rip+0x211a21]
0x35cf: test rax,rax
0x35d2: jz 0x35e0
0x35d4: pop rbp
0x35d5: jmp rax
0x35d7: nop qword ptr [rax+rax*1+0x0]
0x35e0: pop rbp
0x35e1: ret
0x35f0: cmp [rip+0x211af1],0x0
0x35f7: jnz 0x3628
0x35f9: cmp [rip+0x2119f7],0x0
0x3601: push rbp
0x3602: mov rbp,rsp
0x3605: jz 0x3613
0x3607: mov rdi,qword ptr [rip+0x2119fa]
0x360e: call 0x2b50
0x3613: call 0x3560
0x3618: mov [rip+0x211ac9],0x1
0x361f: pop rbp
0x3620: ret
0x3621: nop qword ptr [rax+0x0]
0x3628: rep ret
0x3630: push rbp
0x3631: mov rbp,rsp
0x3634: pop rbp
0x3635: jmp 0x35a0
0x3681: nop qword ptr [rax+rax*1+0x0]
0x3686: nop qword ptr [rax+rax*1+0x0]
0x3a90: mov edi,0x1
0x3a95: jmp 0x3690
0x3ae6: nop qword ptr [rax+rax*1+0x0]
0x3ba7: nop qword ptr [rax+rax*1+0x0]
0x3c05: mov r8,rbp
0x3c08: mov rdx,rbx
0x3c0b: mov rcx,rax
0x3c0e: pop rbx
0x3c0f: pop rbp
0x3c10: pop r12
0x3c12: xor esi,esi
0x3c14: xor edi,edi
0x3c16: xor eax,eax
0x3c18: jmp 0x2a70
0x3c1d: nop qword ptr [rax]
0x3c40: push r15
0x3c42: push r14
0x3c44: mov r14,rdi
0x3c47: push r13
0x3c49: push r12
0x3c4b: xor edi,edi
0x3c4d: push rbp
0x3c4e: push rbx
0x3c4f: mov rbp,rsi
0x3c52: lea rsi,[rip+0xc428]
0x3c59: mov r12,rdx
0x3c5c: mov edx,0x5
0x3c61: sub rsp,0x8
0x3c65: mov rbx,qword ptr [rip+0x211474]
0x3c6c: call 0x27f0
0x3c71: mov rdi,rax
0x3c74: mov rsi,rbx
0x3c77: call 0x2930
0x3c7c: mov r15,qword ptr [r14]
0x3c7f: test r15,r15
0x3c82: jz 0x3d18
0x3c88: xor r13d,r13d
0x3c8b: xor ebx,ebx
0x3c8d: jmp 0x3cc8
0x3c8f: nop 
0x3c90: mov rdi,r15
0x3c93: add rbx,0x1
0x3c97: mov r13,rbp
0x3c9a: call 0xa890
0x3c9f: mov rdi,qword ptr [rip+0x21143a]
0x3ca6: lea rdx,[rip+0xc3e9]
0x3cad: mov rcx,rax
0x3cb0: mov esi,0x1
0x3cb5: xor eax,eax
0x3cb7: add rbp,r12
0x3cba: call 0x2af0
0x3cbf: mov r15,qword ptr [r14+rbx*8+0x0]
0x3cc3: test r15,r15
0x3cc6: jz 0x3d18
0x3cc8: test rbx,rbx
0x3ccb: jz 0x3c90
0x3ccd: mov rdx,r12
0x3cd0: mov rsi,rbp
0x3cd3: mov rdi,r13
0x3cd6: call 0x2920
0x3cdb: test eax,eax
0x3cdd: jnz 0x3c90
0x3cdf: mov rdi,r15
0x3ce2: add rbx,0x1
0x3ce6: add rbp,r12
0x3ce9: call 0xa890
0x3cee: mov rdi,qword ptr [rip+0x2113eb]
0x3cf5: lea rdx,[rip+0xc3a2]
0x3cfc: mov rcx,rax
0x3cff: mov esi,0x1
0x3d04: xor eax,eax
0x3d06: call 0x2af0
0x3d0b: mov r15,qword ptr [r14+rbx*8+0x0]
0x3d0f: test r15,r15
0x3d12: jnz 0x3cc8
0x3d14: nop qword ptr [rax+0x0]
0x3d18: mov rdi,qword ptr [rip+0x2113c1]
0x3d1f: mov rax,qword ptr [rdi+0x28]
0x3d23: cmp rax,qword ptr [rdi+0x30]
0x3d27: jnb 0x3d48
0x3d29: lea rdx,[rax+0x1]
0x3d2d: mov qword ptr [rdi+0x28],rdx
0x3d31: mov [rax],0xa
0x3d34: add rsp,0x8
0x3d38: pop rbx
0x3d39: pop rbp
0x3d3a: pop r12
0x3d3c: pop r13
0x3d3e: pop r14
0x3d40: pop r15
0x3d42: ret
0x3d43: nop qword ptr [rax+rax*1+0x0]
0x3d48: add rsp,0x8
0x3d4c: mov esi,0xa
0x3d51: pop rbx
0x3d52: pop rbp
0x3d53: pop r12
0x3d55: pop r13
0x3d57: pop r14
0x3d59: pop r15
0x3d5b: jmp 0x2890
0x3db3: mov rdx,r15
0x3db6: mov rsi,rbp
0x3db9: mov rdi,rbx
0x3dbc: call 0x3c40
0x3dc1: call r13
0x3dc4: mov rax,0xffffffff
0x3dcb: jmp 0x3d96
0x3dd0: push r14
0x3dd2: push r13
0x3dd4: push r12
0x3dd6: push rbp
0x3dd7: push rbx
0x3dd8: mov r14,qword ptr [rsi]
0x3ddb: test r14,r14
0x3dde: jz 0x3e11
0x3de0: mov r12,rcx
0x3de3: mov r13,rdi
0x3de6: mov rbp,rdx
0x3de9: lea rbx,[rsi+0x8]
0x3ded: jmp 0x3dff
0x3def: nop 
0x3df0: mov r14,qword ptr [rbx]
0x3df3: add rbp,r12
0x3df6: add rbx,0x8
0x3dfa: test r14,r14
0x3dfd: jz 0x3e11
0x3dff: mov rdx,r12
0x3e02: mov rsi,rbp
0x3e05: mov rdi,r13
0x3e08: call 0x2920
0x3e0d: test eax,eax
0x3e0f: jnz 0x3df0
0x3e11: pop rbx
0x3e12: mov rax,r14
0x3e15: pop rbp
0x3e16: pop r12
0x3e18: pop r13
0x3e1a: pop r14
0x3e1c: ret
0x3e20: mov qword ptr [rip+0x211329],rdi
0x3e27: ret
0x3e30: mov byte ptr [rip+0x211311],dil
0x3e37: ret
0x3e40: push rbp
0x3e41: push rbx
0x3e42: sub rsp,0x8
0x3e46: mov rdi,qword ptr [rip+0x21125b]
0x3e4d: call 0xb870
0x3e52: test eax,eax
0x3e54: jz 0x3e6c
0x3e56: call 0x2750
0x3e5b: cmp [rip+0x2112e6],0x0
0x3e62: mov rbx,rax
0x3e65: jz 0x3e83
0x3e67: cmp [rax],0x20
0x3e6a: jnz 0x3e83
0x3e6c: mov rdi,qword ptr [rip+0x21126d]
0x3e73: call 0xb870
0x3e78: test eax,eax
0x3e7a: jnz 0x3ec2
0x3e7c: add rsp,0x8
0x3e80: pop rbx
0x3e81: pop rbp
0x3e82: ret
0x3e83: lea rsi,[rip+0xc219]
0x3e8a: xor edi,edi
0x3e8c: mov edx,0x5
0x3e91: call 0x27f0
0x3e96: mov rdi,qword ptr [rip+0x2112b3]
0x3e9d: mov rbp,rax
0x3ea0: test rdi,rdi
0x3ea3: jz 0x3ecd
0x3ea5: call 0xa690
0x3eaa: mov esi,dword ptr [rbx]
0x3eac: lea rdx,[rip+0xc1fc]
0x3eb3: mov rcx,rax
0x3eb6: mov r8,rbp
0x3eb9: xor edi,edi
0x3ebb: xor eax,eax
0x3ebd: call 0x2a70
0x3ec2: mov edi,dword ptr [rip+0x211158]
0x3ec8: call 0x2780
0x3ecd: mov esi,dword ptr [rbx]
0x3ecf: lea rdx,[rip+0xc1ca]
0x3ed6: mov rcx,rax
0x3ed9: xor edi,edi
0x3edb: xor eax,eax
0x3edd: call 0x2a70
0x3ee2: jmp 0x3ec2
0x3fbc: nop qword ptr [rax+0x0]
0x3ff0: sub rsp,0x28
0x3ff4: xor edi,edi
0x3ff6: mov rsi,rsp
0x3ff9: mov rax,0x28
0x4002: mov qword ptr [rsp+0x18],rax
0x4007: xor eax,eax
0x4009: call 0x27a0
0x400e: mov rcx,qword ptr [rsp+0x18]
0x4013: xor rcx,0x28
0x401c: mov rax,qword ptr [rsp]
0x4020: mov rdx,qword ptr [rsp+0x8]
0x4025: jnz 0x402c
0x4027: add rsp,0x28
0x402b: ret
0x402c: call 0x2830
0x4095: nop qword ptr [rax]
0x4192: nop qword ptr [rax+rax*1+0x0]
0x428a: nop qword ptr [rax+rax*1+0x0]
0x42e8: movaps [rsp+0x50],xmm0
0x42ed: movaps [rsp+0x60],xmm1
0x42f2: movaps [rsp+0x70],xmm2
0x42f7: movaps [rsp+0x80],xmm3
0x42ff: movaps [rsp+0x90],xmm4
0x4307: movaps [rsp+0xa0],xmm5
0x430f: movaps [rsp+0xb0],xmm6
0x4317: movaps [rsp+0xc0],xmm7
0x4384: mov rax,qword ptr [rsp+0x18]
0x4389: xor rax,0x28
0x4392: jnz 0x439d
0x4394: add rsp,0xd0
0x439b: pop rbx
0x439c: ret
0x439d: call 0x2830
0x43b0: mov r8,rdx
0x43b3: xor edi,0x1
0x43b6: lea rdx,[rip+0xbd11]
0x43bd: movzx edi,dil
0x43c1: sub rsp,0x8
0x43c5: mov rcx,rsi
0x43c8: add rdx,rdi
0x43cb: mov rdi,qword ptr [rip+0x210d0e]
0x43d2: mov esi,0x1
0x43d7: xor eax,eax
0x43d9: call 0x2af0
0x43de: mov eax,0x1
0x43e3: add rsp,0x8
0x43e7: ret
0x443e: nop 
0x447b: nop qword ptr [rax+rax*1+0x0]
0x448a: nop qword ptr [rax+rax*1+0x0]
0x4500: push r12
0x4502: mov r12,rdi
0x4505: push rbp
0x4506: mov rbp,rsi
0x4509: push rbx
0x450a: lea rsi,[rip+0xbbc6]
0x4511: lea rbx,[rip+0x2101c8]
0x4518: jmp 0x452c
0x451a: nop qword ptr [rax+rax*1+0x0]
0x4520: add rbx,0x10
0x4524: mov rsi,qword ptr [rbx]
0x4527: test rsi,rsi
0x452a: jz 0x4540
0x452c: mov rdi,rbp
0x452f: call 0x2950
0x4534: test eax,eax
0x4536: jnz 0x4520
0x4538: mov rax,rbx
0x453b: pop rbx
0x453c: pop rbp
0x453d: pop r12
0x453f: ret
0x4540: mov rsi,qword ptr [r12+0xe8]
0x4548: lea rbx,[r12+0xe8]
0x4550: test rsi,rsi
0x4553: jnz 0x459c
0x4555: nop qword ptr [rax]
0x4558: lea rbx,[rip+0x20fe81]
0x455f: lea rsi,[rip+0xbb75]
0x4566: jmp 0x457c
0x4568: nop qword ptr [rax+rax*1+0x0]
0x4570: add rbx,0x10
0x4574: mov rsi,qword ptr [rbx]
0x4577: test rsi,rsi
0x457a: jz 0x45b0
0x457c: mov rdi,rbp
0x457f: call 0x2950
0x4584: test eax,eax
0x4586: jnz 0x4570
0x4588: jmp 0x4538
0x458a: nop qword ptr [rax+rax*1+0x0]
0x4590: add rbx,0x10
0x4594: mov rsi,qword ptr [rbx]
0x4597: test rsi,rsi
0x459a: jz 0x4558
0x459c: mov rdi,rbp
0x459f: call 0x2950
0x45a4: test eax,eax
0x45a6: jnz 0x4590
0x45a8: mov rax,rbx
0x45ab: pop rbx
0x45ac: pop rbp
0x45ad: pop r12
0x45af: ret
0x45b0: xor ebx,ebx
0x45b2: mov rax,rbx
0x45b5: pop rbx
0x45b6: pop rbp
0x45b7: pop r12
0x45b9: ret
0x45ec: mov rsi,qword ptr [rbx+0x68]
0x45f0: test rsi,rsi
0x45f3: jnz 0x4780
0x45f9: mov rsi,qword ptr [rbx+0x70]
0x45fd: test rsi,rsi
0x4600: jz 0x4680
0x4602: xor edi,edi
0x4604: lea rdx,[rip+0xbafd]
0x460b: call 0x43b0
0x4610: mov rsi,qword ptr [rbx+0x78]
0x4614: movzx edi,al
0x4617: test rsi,rsi
0x461a: jnz 0x46f0
0x4620: mov rsi,qword ptr [rbx+0x80]
0x4627: test rsi,rsi
0x462a: jnz 0x470f
0x4630: mov rsi,qword ptr [rbx+0x88]
0x4637: test rsi,rsi
0x463a: jnz 0x472e
0x4640: mov rsi,qword ptr [rbx+0x90]
0x4647: test rsi,rsi
0x464a: jnz 0x474d
0x4650: movsxd rsi,dword ptr [rbx+0x98]
0x4657: test rsi,rsi
0x465a: jnz 0x476c
0x4660: mov rsi,qword ptr [rip+0x210a79]
0x4667: add rsp,0x8
0x466b: mov edi,0xa
0x4670: pop rbx
0x4671: pop rbp
0x4672: jmp 0x2910
0x4677: nop qword ptr [rax+rax*1+0x0]
0x4680: mov rsi,qword ptr [rbx+0x78]
0x4684: xor edi,edi
0x4686: test rsi,rsi
0x4689: jnz 0x46f0
0x468b: cmp [rbx+0x80],0x0
0x4693: jnz 0x4620
0x4695: cmp [rbx+0x88],0x0
0x469d: jnz 0x4620
0x469f: cmp [rbx+0x90],0x0
0x46a7: jnz 0x4620
0x46ad: mov eax,dword ptr [rbx+0x98]
0x46b3: test eax,eax
0x46b5: jnz 0x4620
0x46bb: mov rbx,qword ptr [rip+0x210a1e]
0x46c2: lea rsi,[rip+0xba27]
0x46c9: xor edi,edi
0x46cb: mov edx,0x5
0x46d0: call 0x27f0
0x46d5: add rsp,0x8
0x46d9: mov rsi,rbx
0x46dc: mov rdi,rax
0x46df: pop rbx
0x46e0: pop rbp
0x46e1: jmp 0x28e0
0x46e6: nop qword ptr [rax+rax*1+0x0]
0x46f0: lea rdx,[rip+0xba1a]
0x46f7: call 0x43b0
0x46fc: mov rsi,qword ptr [rbx+0x80]
0x4703: movzx edi,al
0x4706: test rsi,rsi
0x4709: jz 0x4630
0x470f: lea rdx,[rip+0xba02]
0x4716: call 0x43b0
0x471b: mov rsi,qword ptr [rbx+0x88]
0x4722: movzx edi,al
0x4725: test rsi,rsi
0x4728: jz 0x4640
0x472e: lea rdx,[rip+0xb9eb]
0x4735: call 0x43b0
0x473a: mov rsi,qword ptr [rbx+0x90]
0x4741: movzx edi,al
0x4744: test rsi,rsi
0x4747: jz 0x4650
0x474d: lea rdx,[rip+0xbab1]
0x4754: call 0x43b0
0x4759: movsxd rsi,dword ptr [rbx+0x98]
0x4760: movzx edi,al
0x4763: test rsi,rsi
0x4766: jz 0x4660
0x476c: lea rdx,[rip+0xb9b5]
0x4773: call 0x43b0
0x4778: jmp 0x4660
0x477d: nop qword ptr [rax]
0x4780: lea rdx,[rip+0xb979]
0x4787: xor edi,edi
0x4789: call 0x43b0
0x478e: mov rsi,qword ptr [rbx+0x70]
0x4792: movzx edi,al
0x4795: test rsi,rsi
0x4798: jnz 0x4604
0x479e: mov rsi,qword ptr [rbx+0x78]
0x47a2: jmp 0x4617
0x47eb: test r12,r12
0x47ee: jz 0x4803
0x47f0: cmp eax,0x63
0x47f3: mov rbp,rax
0x47f6: jnle 0x4803
0x47f8: cmp [r12+0xd0],0x0
0x4801: jnz 0x4820
0x4803: mov rdx,qword ptr [rsp+0x28]
0x4808: xor rdx,0x28
0x4811: mov rax,rbx
0x4814: jnz 0x485c
0x4816: add rsp,0x30
0x481a: pop rbx
0x481b: pop rbp
0x481c: pop r12
0x481e: ret
0x481f: nop 
0x4820: mov edi,dword ptr [r12+0x18]
0x4825: mov rsi,rsp
0x4828: call 0x41c0
0x482d: mov esi,0x64
0x4832: movsxd rdi,ebp
0x4835: lea r8,[rip+0xb912]
0x483c: sub esi,ebp
0x483e: mov r9,rax
0x4841: add rdi,rbx
0x4844: movsxd rsi,esi
0x4847: mov rcx,0xffffffff
0x484e: mov edx,0x1
0x4853: xor eax,eax
0x4855: call 0x2700
0x485a: jmp 0x4803
0x485c: call 0x2830
0x48d5: nop qword ptr [rax]
0x4924: nop qword ptr [rax+0x0]
0x49b0: cmp [rbx+0xa8],0x0
0x49b8: jz 0x49c7
0x49ba: cmp [rbx+0xda],0x0
0x49c1: jz 0x4bc0
0x49c7: movzx eax,byte ptr [rbx+0xdf]
0x49ce: cmp byte ptr [rbx+0xd8],al
0x49d4: jz 0x4bb4
0x49da: lea rsi,[rip+0xb79a]
0x49e1: mov rbp,qword ptr [rbx+0x28]
0x49e5: mov edx,0x5
0x49ea: xor edi,edi
0x49ec: call 0x27f0
0x49f1: mov rdi,qword ptr [rip+0x2106e8]
0x49f8: mov rdx,rax
0x49fb: mov rcx,rbp
0x49fe: mov esi,0x1
0x4a03: xor eax,eax
0x4a05: call 0x2af0
0x4a0a: movzx eax,byte ptr [rbx+0xd8]
0x4a11: mov edx,0x1
0x4a16: mov byte ptr [rbx+0xdf],al
0x4a1c: cmp [rbx+0xc8],0x0
0x4a24: jz 0x4a33
0x4a26: cmp [rbx+0xdd],0x0
0x4a2d: jz 0x4c20
0x4a33: cmp [rbx+0xb0],0x0
0x4a3b: jz 0x4aa2
0x4a3d: cmp [rbx+0xdb],0x0
0x4a44: jnz 0x4aa2
0x4a46: test dl,dl
0x4a48: jnz 0x4c8f
0x4a4e: mov rsi,rsp
0x4a51: mov rdi,rbx
0x4a54: mov r13d,dword ptr [rbx+0x10]
0x4a58: mov r12,qword ptr [rbx+0x8]
0x4a5c: call 0x4870
0x4a61: lea rsi,[rip+0xbc90]
0x4a68: mov edx,0x5
0x4a6d: xor edi,edi
0x4a6f: mov rbp,rax
0x4a72: call 0x27f0
0x4a77: mov rdi,qword ptr [rip+0x210662]
0x4a7e: mov rdx,rax
0x4a81: mov r9d,r13d
0x4a84: mov r8,r12
0x4a87: mov rcx,rbp
0x4a8a: mov esi,0x1
0x4a8f: xor eax,eax
0x4a91: call 0x2af0
0x4a96: mov [rbx+0xdb],0x1
0x4a9d: mov edx,0x1
0x4aa2: cmp [rbx+0xb8],0x0
0x4aaa: jz 0x4b30
0x4ab0: cmp [rbx+0xdc],0x0
0x4ab7: jnz 0x4b30
0x4ab9: cmp [rbx+0xc0],0x0
0x4ac1: lea rax,[rip+0xb68d]
0x4ac8: lea r8,[rip+0xb8a7]
0x4acf: mov ecx,dword ptr [rbx+0x14]
0x4ad2: mov rdi,qword ptr [rip+0x210607]
0x4ad9: mov esi,0x1
0x4ade: cmovne r8,rax
0x4ae2: xor edx,0x1
0x4ae5: lea rax,[rip+0xb6b7]
0x4aec: movzx edx,dl
0x4aef: add rdx,rax
0x4af2: xor eax,eax
0x4af4: call 0x2af0
0x4af9: cmp [rbx+0xd0],0x0
0x4b01: mov [rbx+0xdc],0x1
0x4b08: jnz 0x4ca8
0x4b0e: cmp [rbx+0xa0],0x0
0x4b15: jz 0x4b84
0x4b17: mov rbx,qword ptr [rbx+0x58]
0x4b1b: mov rsi,qword ptr [rip+0x2105be]
0x4b22: mov edi,0x20
0x4b27: call 0x2910
0x4b2c: jmp 0x4b58
0x4b2e: nop 
0x4b30: cmp [rbx+0xd0],0x0
0x4b38: jz 0x4b47
0x4b3a: cmp [rbx+0xde],0x0
0x4b41: jz 0x4cc0
0x4b47: cmp [rbx+0xa0],0x0
0x4b4e: jz 0x4b84
0x4b50: test dl,dl
0x4b52: mov rbx,qword ptr [rbx+0x58]
0x4b56: jnz 0x4b1b
0x4b58: lea rsi,[rip+0xb650]
0x4b5f: mov edx,0x5
0x4b64: xor edi,edi
0x4b66: call 0x27f0
0x4b6b: mov rdi,qword ptr [rip+0x21056e]
0x4b72: mov rdx,rax
0x4b75: mov rcx,rbx
0x4b78: mov esi,0x1
0x4b7d: xor eax,eax
0x4b7f: call 0x2af0
0x4b84: mov rsi,qword ptr [rip+0x210555]
0x4b8b: mov edi,0xa
0x4b90: call 0x2910
0x4b95: mov rax,qword ptr [rsp+0x68]
0x4b9a: xor rax,0x28
0x4ba3: jnz 0x4d42
0x4ba9: add rsp,0x78
0x4bad: pop rbx
0x4bae: pop rbp
0x4baf: pop r12
0x4bb1: pop r13
0x4bb3: ret
0x4bb4: xor edx,edx
0x4bb6: jmp 0x4a1c
0x4bbb: nop qword ptr [rax+rax*1+0x0]
0x4bc0: mov rcx,qword ptr [rbx+0x28]
0x4bc4: mov r9,qword ptr [rbx+0x40]
0x4bc8: lea rdx,[rip+0xb592]
0x4bcf: mov r8,qword ptr [rbx+0x38]
0x4bd3: mov rdi,qword ptr [rip+0x210506]
0x4bda: xor eax,eax
0x4bdc: mov esi,0x1
0x4be1: call 0x2af0
0x4be6: movzx eax,byte ptr [rbx+0xdf]
0x4bed: mov [rbx+0xda],0x1
0x4bf4: mov edx,0x1
0x4bf9: cmp byte ptr [rbx+0xd8],al
0x4bff: jz 0x4a1c
0x4c05: mov rsi,qword ptr [rip+0x2104d4]
0x4c0c: mov edi,0x20
0x4c11: call 0x2910
0x4c16: jmp 0x49da
0x4c1b: nop qword ptr [rax+rax*1+0x0]
0x4c20: mov rcx,qword ptr [rbx+0x48]
0x4c24: xor edx,0x1
0x4c27: lea rax,[rip+0xb559]
0x4c2e: mov r9,qword ptr [rbx+0x58]
0x4c32: mov r8,qword ptr [rbx+0x50]
0x4c36: movzx edx,dl
0x4c39: mov rdi,qword ptr [rip+0x2104a0]
0x4c40: add rdx,rax
0x4c43: mov esi,0x1
0x4c48: xor eax,eax
0x4c4a: call 0x2af0
0x4c4f: mov rcx,qword ptr [rbx+0x60]
0x4c53: test rcx,rcx
0x4c56: jnz 0x4d00
0x4c5c: cmp [rbx+0x1c],0x1
0x4c60: jz 0x4d20
0x4c66: cmp [rbx+0xb0],0x0
0x4c6e: mov [rbx+0xdd],0x1
0x4c75: mov edx,0x1
0x4c7a: jz 0x4aa2
0x4c80: movzx edx,byte ptr [rbx+0xdb]
0x4c87: test dl,dl
0x4c89: jnz 0x4aa2
0x4c8f: mov rsi,qword ptr [rip+0x21044a]
0x4c96: mov edi,0x20
0x4c9b: call 0x2910
0x4ca0: jmp 0x4a4e
0x4ca5: nop qword ptr [rax]
0x4ca8: cmp [rbx+0xde],0x0
0x4caf: jnz 0x4b0e
0x4cb5: lea rbp,[rip+0xb49e]
0x4cbc: jmp 0x4cd0
0x4cbe: nop 
0x4cc0: xor edx,0x1
0x4cc3: movzx ebp,dl
0x4cc6: lea rdx,[rip+0xb48d]
0x4ccd: add rbp,rdx
0x4cd0: mov edi,dword ptr [rbx+0x18]
0x4cd3: mov rsi,rsp
0x4cd6: call 0x41c0
0x4cdb: mov rdi,qword ptr [rip+0x2103fe]
0x4ce2: mov rcx,rax
0x4ce5: mov rdx,rbp
0x4ce8: mov esi,0x1
0x4ced: xor eax,eax
0x4cef: call 0x2af0
0x4cf4: mov [rbx+0xde],0x1
0x4cfb: jmp 0x4b0e
0x4d00: mov rdi,qword ptr [rip+0x2103d9]
0x4d07: lea rdx,[rip+0xb48c]
0x4d0e: mov esi,0x1
0x4d13: xor eax,eax
0x4d15: call 0x2af0
0x4d1a: jmp 0x4c5c
0x4d1f: nop 
0x4d20: mov rcx,qword ptr [rip+0x2103b9]
0x4d27: lea rdi,[rip+0xb472]
0x4d2e: mov edx,0x2
0x4d33: mov esi,0x1
0x4d38: call 0x2ae0
0x4d3d: jmp 0x4c66
0x4d42: call 0x2830
0x4fdc: mov r11,qword ptr [rsp+0x48]
0x4fe1: mov r10,qword ptr [rsp+0x50]
0x4fe6: mov r9d,dword ptr [rsp+0x58]
0x4feb: nop qword ptr [rax+rax*1+0x0]
0x5111: nop qword ptr [rax+0x0]
0x5146: nop qword ptr [rax+rax*1+0x0]
0x541d: nop qword ptr [rax]
0x5436: nop qword ptr [rax+rax*1+0x0]
0x547f: nop 
0x5514: nop qword ptr [rax+0x0]
0x5542: nop qword ptr [rax+rax*1+0x0]
0x557c: nop qword ptr [rax+0x0]
0x559b: nop qword ptr [rax+rax*1+0x0]
0x5613: mov rdx,r14
0x5616: movzx ecx,al
0x5619: sub eax,0x61
0x561c: lea esi,[rcx-0x20]
0x561f: cmp al,0x1a
0x5621: cmovnae ecx,esi
0x5624: add rdx,0x1
0x5628: mov byte ptr [rdx-0x1],cl
0x562b: movzx eax,byte ptr [rdx]
0x562e: test al,al
0x5630: jnz 0x5616
0x568e: nop 
0x59fb: mov r11,qword ptr [rsp+0x68]
0x5a00: mov r9d,dword ptr [rsp+0x60]
0x5a05: mov r10,qword ptr [rsp+0x58]
0x5af8: mov r11,qword ptr [rsp+0x48]
0x5afd: mov r10,qword ptr [rsp+0x50]
0x5b02: mov r9d,dword ptr [rsp+0x58]
0x5b07: jmp 0x4ff0
0x5c56: nop qword ptr [rax+rax*1+0x0]
0x5cef: nop 
0x5dea: nop qword ptr [rax+rax*1+0x0]
0x5eb2: nop qword ptr [rax+rax*1+0x0]
0x5eee: nop 
0x5ff8: nop qword ptr [rax+rax*1+0x0]
0x6096: nop qword ptr [rax+rax*1+0x0]
0x6347: nop qword ptr [rax+rax*1+0x0]
0x63f3: nop qword ptr [rax+rax*1+0x0]
0x6473: nop qword ptr [rax+rax*1+0x0]
0x6549: mov r11,qword ptr [rsp+0x60]
0x654e: mov r9d,dword ptr [rsp+0x58]
0x6553: mov r10,qword ptr [rsp+0x50]
0x6610: mov edx,eax
0x6612: mov r9d,0x1
0x6618: shr edx,0x10
0x661b: test eax,0x8080
0x6620: cmove eax,edx
0x6623: lea rdx,[rbp+0x2]
0x6627: mov edi,eax
0x6629: cmove rbp,rdx
0x662d: add dil,al
0x6630: sbb rbp,0x3
0x6634: sub rbp,r14
0x6637: cmp rbp,0x3
0x663b: jz 0x664a
0x663d: xor r9d,r9d
0x6640: cmp rbp,0x4
0x6644: jz 0x6811
0x664a: lea rcx,[rip+0x20e2ef]
0x6651: lea rsi,[rip+0x9b71]
0x6658: mov dword ptr [rsp+0x8],ebx
0x665c: mov qword ptr [rsp+0x20],rbp
0x6661: mov dword ptr [rsp+0x10],r8d
0x6666: mov ebx,r9d
0x6669: mov rbp,rcx
0x666c: mov qword ptr [rsp+0x18],r11
0x6671: test ebx,ebx
0x6673: jz 0x67e8
0x6679: mov edx,0x3
0x667e: mov rdi,r14
0x6681: call 0x2760
0x6686: test eax,eax
0x6688: setz al
0x668b: test al,al
0x668d: jnz 0x67fa
0x6693: add rbp,0x10
0x6697: mov rsi,qword ptr [rbp+0x0]
0x669b: test rsi,rsi
0x669e: jnz 0x6671
0x66a0: mov r11,qword ptr [rsp+0x18]
0x66a5: mov r8d,dword ptr [rsp+0x10]
0x66aa: mov rsi,r14
0x66ad: movsxd rbx,dword ptr [rsp+0x8]
0x66b2: mov byte ptr [rsp+0x8],al
0x66b6: mov rbp,qword ptr [rsp+0x20]
0x66bb: mov rdi,r11
0x66be: mov dword ptr [rsp+0x28],r8d
0x66c3: mov qword ptr [rsp+0x10],r11
0x66c8: call 0x4500
0x66cd: test rax,rax
0x66d0: mov rcx,rax
0x66d3: mov r11,qword ptr [rsp+0x10]
0x66d8: mov r8d,dword ptr [rsp+0x28]
0x66dd: jnz 0x5679
0x66e3: lea rsi,[rip+0x9a6c]
0x66ea: mov rdi,r14
0x66ed: mov qword ptr [rsp+0x18],r11
0x66f2: mov dword ptr [rsp+0x10],r8d
0x66f7: call 0x2950
0x66fc: test eax,eax
0x66fe: mov r8d,dword ptr [rsp+0x10]
0x6703: mov r11,qword ptr [rsp+0x18]
0x6708: jz 0x6835
0x670e: lea rcx,[rip+0x20e16b]
0x6715: lea rsi,[rip+0x9ab5]
0x671c: mov rdi,r14
0x671f: mov qword ptr [rsp+0x20],r11
0x6724: mov qword ptr [rsp+0x18],rcx
0x6729: mov dword ptr [rsp+0x10],r8d
0x672e: call 0x2950
0x6733: test eax,eax
0x6735: mov r8d,dword ptr [rsp+0x10]
0x673a: mov rcx,qword ptr [rsp+0x18]
0x673f: mov r11,qword ptr [rsp+0x20]
0x6744: jz 0x5679
0x674a: add rcx,0x10
0x674e: mov rsi,qword ptr [rcx]
0x6751: test rsi,rsi
0x6754: jnz 0x671c
0x6756: lea rdx,[r14+rbp*1-0x1]
0x675b: cmp [rdx],0x53
0x675e: jz 0x6841
0x6764: lea rcx,[rip+0x20dfb5]
0x676b: lea rsi,[rip+0x9a64]
0x6772: mov rdi,r14
0x6775: mov qword ptr [rsp+0x20],r11
0x677a: mov qword ptr [rsp+0x18],rcx
0x677f: mov dword ptr [rsp+0x10],r8d
0x6784: call 0x2950
0x6789: test eax,eax
0x678b: mov r8d,dword ptr [rsp+0x10]
0x6790: mov rcx,qword ptr [rsp+0x18]
0x6795: mov r11,qword ptr [rsp+0x20]
0x679a: jz 0x5679
0x67a0: add rcx,0x10
0x67a4: mov rsi,qword ptr [rcx]
0x67a7: test rsi,rsi
0x67aa: jnz 0x6772
0x67ac: sub rbp,0x1
0x67b0: movzx edx,byte ptr [rsp+0x5a0]
0x67b8: jz 0x692c
0x67be: mov rax,r14
0x67c1: mov rdx,r14
0x67c4: movzx ecx,byte ptr [rax]
0x67c7: test cl,cl
0x67c9: mov byte ptr [rdx],cl
0x67cb: jz 0x68a8
0x67d1: cmp [rax],0x2e
0x67d4: jz 0x689e
0x67da: add rdx,0x1
0x67de: add rax,0x1
0x67e2: jmp 0x67c4
0x67e4: nop qword ptr [rax+0x0]
0x67e8: mov rdi,r14
0x67eb: call 0x2950
0x67f0: test eax,eax
0x67f2: setz al
0x67f5: jmp 0x668b
0x67fa: movsxd rbx,dword ptr [rsp+0x8]
0x67ff: mov r8d,dword ptr [rsp+0x10]
0x6804: mov rcx,rbp
0x6807: mov r11,qword ptr [rsp+0x18]
0x680c: jmp 0x5679
0x6811: xor r9d,r9d
0x6814: cmp [rsp+0x5a3],0x2e
0x681c: setz r9b
0x6820: jmp 0x664a
0x6830: call 0x2830
0x6835: lea rcx,[rip+0x20e294]
0x683c: jmp 0x5679
0x6841: lea rcx,[rip+0x20e038]
0x6848: lea rsi,[rip+0x9982]
0x684f: mov [rdx],0x0
0x6852: mov rdi,r14
0x6855: mov qword ptr [rsp+0x28],r11
0x685a: mov qword ptr [rsp+0x20],rcx
0x685f: mov dword ptr [rsp+0x10],r8d
0x6864: mov qword ptr [rsp+0x18],rdx
0x6869: call 0x2950
0x686e: test eax,eax
0x6870: mov r8d,dword ptr [rsp+0x10]
0x6875: mov rcx,qword ptr [rsp+0x20]
0x687a: mov r11,qword ptr [rsp+0x28]
0x687f: jz 0x5679
0x6885: add rcx,0x10
0x6889: mov rsi,qword ptr [rcx]
0x688c: mov rdx,qword ptr [rsp+0x18]
0x6891: test rsi,rsi
0x6894: jnz 0x6852
0x6896: mov [rdx],0x53
0x6899: jmp 0x6764
0x689e: mov [rsp+0x8],0x1
0x68a3: jmp 0x67de
0x68a8: cmp [rsp+0x8],0x0
0x68ad: jz 0x68da
0x68af: mov rdi,r11
0x68b2: mov rsi,r14
0x68b5: mov dword ptr [rsp+0x10],r8d
0x68ba: mov qword ptr [rsp+0x8],r11
0x68bf: call 0x4500
0x68c4: test rax,rax
0x68c7: mov rcx,rax
0x68ca: mov r11,qword ptr [rsp+0x8]
0x68cf: mov r8d,dword ptr [rsp+0x10]
0x68d4: jnz 0x5679
0x68da: cmp [r11+0xd9],0x0
0x68e2: jz 0x6387
0x68e8: lea rsi,[rip+0x98f2]
0x68ef: mov edx,0x5
0x68f4: xor edi,edi
0x68f6: mov qword ptr [rsp+0x10],r11
0x68fb: mov dword ptr [rsp+0x8],r8d
0x6900: call 0x27f0
0x6905: mov rsi,r14
0x6908: mov rdi,rax
0x690b: xor eax,eax
0x690d: call 0x42c0
0x6912: mov eax,0x2
0x6917: mov r9d,0x3f
0x691d: mov r8d,dword ptr [rsp+0x8]
0x6922: mov r11,qword ptr [rsp+0x10]
0x6927: jmp 0x542e
0x692c: lea rcx,[rip+0x20d90d]
0x6933: lea rax,[rip+0x98a5]
0x693a: cmp byte ptr [rax],dl
0x693c: jz 0x5679
0x6942: add rcx,0x10
0x6946: mov rax,qword ptr [rcx]
0x6949: test rax,rax
0x694c: jnz 0x693a
0x694e: jmp 0x67be
0x69e7: nop qword ptr [rax+rax*1+0x0]
0x6a3e: nop 
0x6de2: nop qword ptr [rax+rax*1+0x0]
0x6e2f: jmp 0x6d9e
0x6e34: nop qword ptr [rax+0x0]
0x6e71: nop qword ptr [rax+0x0]
0x6f11: nop qword ptr [rax+0x0]
0x6f55: nop qword ptr [rax]
0x6f6e: nop 
0x6f70: lea r14,[rsp+0x60]
0x6f75: mov rdi,r14
0x6f78: call 0x3fe0
0x6f7d: jmp 0x69b2
0x6f82: nop qword ptr [rax+rax*1+0x0]
0x6fa5: cmp [rsp+0x250],0x0
0x6fad: mov edx,0x5
0x6fb2: lea rsi,[rip+0x92b8]
0x6fb9: jnz 0x7020
0x6fbb: cmp [rsp+0x280],0x0
0x6fc4: mov edx,0x5
0x6fc9: lea rsi,[rip+0x92ba]
0x6fd0: jnz 0x7020
0x6fd2: mov rbx,qword ptr [rsp+0x10]
0x6fd7: test rbx,rbx
0x6fda: jz 0x7014
0x6fdc: cmp qword ptr [rsp],r15
0x6fe0: jz 0x747f
0x6fe6: lea rsi,[rip+0x92b5]
0x6fed: mov edx,0x5
0x6ff2: xor edi,edi
0x6ff4: call 0x27f0
0x6ff9: mov rcx,rbx
0x6ffc: mov rdi,qword ptr [rip+0x20e0dd]
0x7003: mov rdx,rax
0x7006: mov esi,0x1
0x700b: xor eax,eax
0x700d: call 0x2af0
0x7012: jmp 0x703d
0x7014: lea rsi,[rip+0x92bd]
0x701b: mov edx,0x5
0x7020: xor edi,edi
0x7022: call 0x27f0
0x7027: mov rdi,qword ptr [rip+0x20e0b2]
0x702e: mov rdx,rax
0x7031: mov esi,0x1
0x7036: xor eax,eax
0x7038: call 0x2af0
0x703d: cmp [rsp+0x268],0x0
0x7046: mov rax,qword ptr [rsp+0x280]
0x704e: jz 0x7090
0x7050: test rax,rax
0x7053: jnz 0x7356
0x7059: mov r8d,dword ptr [rsp+0x1c4]
0x7061: mov rsi,qword ptr [rip+0x20e078]
0x7068: test r8d,r8d
0x706b: jle 0x70a0
0x706d: lea rdi,[rip+0x9279]
0x7074: mov rcx,rsi
0x7077: mov edx,0x5
0x707c: mov esi,0x1
0x7081: call 0x2ae0
0x7086: mov rax,qword ptr [rsp+0x280]
0x708e: nop 
0x7090: test rax,rax
0x7093: jnz 0x7356
0x7099: mov rsi,qword ptr [rip+0x20e040]
0x70a0: mov edi,0xa
0x70a5: call 0x2910
0x70aa: cmp [rsp+0x250],0x0
0x70b2: movzx r12d,byte ptr [rsp+0x289]
0x70bb: jz 0x7248
0x70c1: mov rax,qword ptr [rsp+0x28]
0x70c6: movdqu xmm0,[rsp+0x208]
0x70cf: movups [rax],xmm0
0x7135: mov r14,qword ptr [rsp+0x28]
0x713a: lea rsi,[rip+0x9d57]
0x7141: xor edi,edi
0x7143: mov edx,0x5
0x7148: mov rbx,qword ptr [r14]
0x714b: mov rbp,qword ptr [r14+0x8]
0x714f: call 0x27f0
0x7154: mov rdi,rax
0x7157: xor eax,eax
0x7159: mov rsi,rbx
0x715c: lea rbx,[rsp+0x130]
0x7164: mov edx,ebp
0x7166: call 0x42c0
0x716b: mov rsi,rbx
0x716e: mov rdi,r14
0x7171: call 0x28b0
0x7176: test rax,rax
0x7179: jz 0x71b0
0x717b: lea rdx,[rsp+0x300]
0x7183: mov rdi,rbx
0x7186: xor esi,esi
0x7188: call 0x47b0
0x718d: lea rsi,[rip+0x931c]
0x7194: mov rbx,rax
0x7197: xor edi,edi
0x7199: mov edx,0x5
0x719e: call 0x27f0
0x71a3: mov rsi,rbx
0x71a6: mov rdi,rax
0x71a9: xor eax,eax
0x71ab: call 0x42c0
0x71b0: lea rbx,[rsp+0x170]
0x71b8: mov rsi,qword ptr [rsp+0x28]
0x71bd: mov rdi,r15
0x71c0: mov rdx,rbx
0x71c3: call 0xb570
0x71c8: test rax,rax
0x71cb: jz 0x6d9e
0x71d1: mov edi,dword ptr [rsp+0x198]
0x71d8: lea rsi,[rsp+0x2e0]
0x71e0: call 0x41c0
0x71e5: lea rdx,[rsp+0x300]
0x71ed: xor esi,esi
0x71ef: mov rdi,rbx
0x71f2: mov rbp,rax
0x71f5: call 0x47b0
0x71fa: lea rsi,[rip+0x92c0]
0x7201: mov rbx,rax
0x7204: xor edi,edi
0x7206: mov edx,0x5
0x720b: call 0x27f0
0x7210: mov rdx,rbp
0x7213: mov rdi,rax
0x7216: mov rsi,rbx
0x7219: xor eax,eax
0x721b: call 0x42c0
0x7220: jmp 0x6d9e
0x7225: nop qword ptr [rax]
0x723e: nop 
0x7248: mov rsi,qword ptr [rsp+0x278]
0x7250: mov rcx,qword ptr [rsp+0x258]
0x7258: mov rdx,qword ptr [rsp+0x280]
0x7260: add rdx,qword ptr [rsp+0x268]
0x7268: mov rax,rsi
0x726b: or rax,rcx
0x726e: or rax,qword ptr [rsp+0x260]
0x7276: or rax,qword ptr [rsp+0x270]
0x727e: or rax,rdx
0x7281: cmp rax,0x1
0x7285: jle 0x73c9
0x728b: test r12b,r12b
0x728e: jz 0x6d9b
0x7294: cmp rsi,0x1
0x7298: jnle 0x733b
0x729e: cmp rcx,0x1
0x72a2: jnle 0x7328
0x72a8: cmp [rsp+0x260],0x1
0x72b1: jnle 0x7318
0x72b3: cmp [rsp+0x270],0x1
0x72bc: jnle 0x7308
0x72be: mov rax,qword ptr [rsp+0x280]
0x72c6: add rax,qword ptr [rsp+0x268]
0x72ce: cmp rax,0x1
0x72d2: jle 0x6d9b
0x72d8: lea rdi,[rip+0x95b1]
0x72df: xor eax,eax
0x72e1: call 0x42c0
0x72e6: jmp 0x6d9b
0x7303: jmp 0x7135
0x7308: lea rdi,[rip+0x9551]
0x730f: xor eax,eax
0x7311: call 0x42c0
0x7316: jmp 0x72be
0x7318: lea rdi,[rip+0x9519]
0x731f: xor eax,eax
0x7321: call 0x42c0
0x7326: jmp 0x72b3
0x7328: lea rdi,[rip+0x94e1]
0x732f: xor eax,eax
0x7331: call 0x42c0
0x7336: jmp 0x72a8
0x733b: lea rdi,[rip+0x94a6]
0x7342: xor eax,eax
0x7344: call 0x42c0
0x7349: mov rcx,qword ptr [rsp+0x258]
0x7351: jmp 0x729e
0x7356: mov edi,dword ptr [rsp+0x1c8]
0x735d: lea rsi,[rsp+0x2e0]
0x7365: call 0x41c0
0x736a: mov rdi,qword ptr [rip+0x20dd6f]
0x7371: lea rdx,[rip+0x8f6f]
0x7378: mov rcx,rax
0x737b: mov esi,0x1
0x7380: xor eax,eax
0x7382: call 0x2af0
0x7387: mov rsi,qword ptr [rip+0x20dd52]
0x738e: jmp 0x70a0
0x747a: jmp 0x6d9b
0x747f: mov rsi,qword ptr [rsp+0x10]
0x7484: lea rdi,[rip+0x8e2e]
0x748b: mov ecx,0x5
0x7490: mov edx,0x5
0x7495: rep cmpsb ds:[rsi],es:[rdi]
0x7497: lea rsi,[rip+0x9322]
0x749e: setnbe al
0x74a1: sbb al,0x0
0x74a3: test al,al
0x74a5: jz 0x7020
0x74ab: lea rsi,[rip+0x8e0c]
0x74b2: xor edi,edi
0x74b4: call 0x27f0
0x74b9: mov rcx,qword ptr [rsp+0x10]
0x74be: jmp 0x6ffc
0x761d: lea rdi,[rsp+0xb0]
0x7625: mov rsi,rbp
0x7628: call 0x44d0
0x762d: test al,al
0x762f: jnz 0x7a58
0x76db: cmp r14d,ebp
0x76de: jnz 0x822d
0x76e4: mov ebx,dword ptr [rsp+0x28]
0x76e8: cmp r11d,ebx
0x76eb: jnz 0x822d
0x76f1: test al,al
0x76f3: jz 0x6d9b
0x76f9: lea rsi,[rip+0x92a8]
0x7700: mov edx,0x5
0x7705: xor edi,edi
0x7707: lea rbx,[rsp+0x3e0]
0x770f: call 0x27f0
0x7714: mov rdi,rax
0x7717: xor eax,eax
0x7719: call 0x42c0
0x771e: lea rdi,[rsp+0xb0]
0x7726: mov rdx,rbx
0x7729: mov rsi,r13
0x772c: call 0x47b0
0x7731: lea rsi,[rip+0x8c21]
0x7738: mov r12,rax
0x773b: mov edx,0x5
0x7740: xor edi,edi
0x7742: call 0x27f0
0x7747: mov rsi,r12
0x774a: mov rdi,rax
0x774d: xor eax,eax
0x774f: call 0x42c0
0x7754: mov rdi,qword ptr [rsp+0x18]
0x7759: mov rdx,rbx
0x775c: mov rsi,r13
0x775f: call 0x47b0
0x7764: lea rsi,[rip+0x8c0c]
0x776b: mov r12,rax
0x776e: mov edx,0x5
0x7773: xor edi,edi
0x7775: call 0x27f0
0x777a: mov rsi,r12
0x777d: mov rdi,rax
0x7780: xor eax,eax
0x7782: call 0x42c0
0x7787: lea rsi,[rip+0x8be8]
0x778e: mov r12d,0x1
0x7794: mov rax,rsi
0x7797: mov r11d,dword ptr [rsp+0x40]
0x779c: cmp dword ptr [rsp+0x38],r11d
0x77a1: lea rcx,[rip+0x8bce]
0x77a8: lea rdx,[rip+0x8a92]
0x77af: mov r11d,dword ptr [rsp+0x20]
0x77b4: lea r9,[rip+0x8a84]
0x77bb: mov r8,rcx
0x77be: mov rdi,rcx
0x77c1: cmovne r8,rdx
0x77c5: cmp dword ptr [rsp+0x10],r11d
0x77ca: mov r11d,dword ptr [rsp+0x28]
0x77cf: cmovne rdi,rdx
0x77d3: cmp r14d,ebp
0x77d6: cmove rdx,rcx
0x77da: cmp dword ptr [rsp+0x44],r11d
0x77df: cmove r9,rcx
0x77e3: sub rsp,0x8
0x77e7: mov ecx,0x64
0x77ec: push rsi
0x77ed: push rax
0x77ee: mov esi,0x64
0x77f3: push r8
0x77f5: lea r8,[rip+0x91d4]
0x77fc: push rdi
0x77fd: push rdx
0x77fe: mov rdi,rbx
0x7801: mov edx,0x1
0x7806: xor eax,eax
0x7808: call 0x2700
0x780d: add rsp,0x30
0x7811: mov eax,0x34
0x7816: jmp 0x7822
0x7818: sub rax,0x1
0x781c: cmp [rbx+rax*1+0x0],0x20
0x7820: jnz 0x7828
0x7822: test eax,eax
0x7824: mov edx,eax
0x7826: jnz 0x7818
0x7828: movsxd rax,edx
0x782b: lea rdi,[rip+0x8ba6]
0x7832: mov rsi,rbx
0x7835: mov [rsp+rax*1+0x3e0],0x0
0x783d: xor eax,eax
0x783f: call 0x42c0
0x7844: lea rsi,[rip+0x8b4a]
0x784b: xor edi,edi
0x784d: mov edx,0x5
0x7852: call 0x27f0
0x7857: mov rdi,rax
0x785a: xor eax,eax
0x785c: call 0x42c0
0x7861: test r12d,r12d
0x7864: jz 0x7883
0x7866: lea rsi,[rip+0x91a3]
0x786d: xor edi,edi
0x786f: mov edx,0x5
0x7874: call 0x27f0
0x7879: mov rdi,rax
0x787c: xor eax,eax
0x787e: call 0x42c0
0x7883: mov ebx,dword ptr [rsp+0x20]
0x7887: cmp dword ptr [rsp+0x10],ebx
0x788b: jz 0x78af
0x788d: cmp r14d,ebp
0x7890: jz 0x78af
0x7892: lea rsi,[rip+0x91af]
0x7899: xor edi,edi
0x789b: mov edx,0x5
0x78a0: call 0x27f0
0x78a5: mov rdi,rax
0x78a8: xor eax,eax
0x78aa: call 0x42c0
0x78af: lea rsi,[rip+0x91ba]
0x78b6: mov edx,0x5
0x78bb: xor edi,edi
0x78bd: call 0x27f0
0x78c2: mov rdi,rax
0x78c5: xor eax,eax
0x78c7: call 0x42c0
0x78cc: cmp [rsp+0x30],0x0
0x78d2: mov edx,0x5
0x78d7: jz 0x86b6
0x78dd: lea rsi,[rip+0x8ac9]
0x78e4: xor edi,edi
0x78e6: call 0x27f0
0x78eb: lea rdi,[rip+0x8adf]
0x78f2: mov rsi,rax
0x78f5: xor eax,eax
0x78f7: call 0x42c0
0x78fc: jmp 0x6d9b
0x7901: nop qword ptr [rax+0x0]
0x7924: nop qword ptr [rax+0x0]
0x7933: nop qword ptr [rax+rax*1+0x0]
0x7b0d: lea rsi,[rsp+0x3e0]
0x7b15: mov r14d,dword ptr [rsp+0x1c0]
0x7b1d: mov rbp,qword ptr [rsp+0x1b8]
0x7b25: mov rdi,r13
0x7b28: mov r12,rax
0x7b2b: call 0x4870
0x7b30: lea rsi,[rip+0x8f61]
0x7b37: mov rbx,rax
0x7b3a: xor edi,edi
0x7b3c: mov edx,0x5
0x7b41: call 0x27f0
0x7b46: mov r8,r12
0x7b49: mov rdi,rax
0x7b4c: mov ecx,r14d
0x7b4f: mov rdx,rbp
0x7b52: mov rsi,rbx
0x7b55: xor eax,eax
0x7b57: call 0x42c0
0x7b5c: jmp 0x6d9b
0x7b61: nop qword ptr [rax+0x0]
0x7b8e: jmp 0x73e9
0x7c71: jmp 0x7bf8
0x7cbe: lea rsi,[rsp+0x3e0]
0x7cc6: mov rdi,r13
0x7cc9: mov rbp,rax
0x7ccc: call 0x4870
0x7cd1: lea rsi,[rip+0x8704]
0x7cd8: mov r12,rax
0x7cdb: mov edx,0x5
0x7ce0: xor edi,edi
0x7ce2: call 0x27f0
0x7ce7: mov rdx,rbp
0x7cea: mov rdi,rax
0x7ced: mov rsi,r12
0x7cf0: xor eax,eax
0x7cf2: call 0x42c0
0x7d3d: lea rsi,[rip+0x86cb]
0x7d44: mov rbx,rax
0x7d47: mov edx,0x5
0x7d4c: xor edi,edi
0x7d4e: call 0x27f0
0x7d53: mov rsi,rbx
0x7d56: mov rdi,rax
0x7d59: xor eax,eax
0x7d5b: call 0x42c0
0x7d60: mov rax,qword ptr [rsp+0x218]
0x7d68: mov rdx,qword ptr [rsp+0x220]
0x7d70: movzx ebx,byte ptr [rsp+0x289]
0x7d78: or rdx,rax
0x7d7b: mov rsi,rdx
0x7d7e: or rsi,qword ptr [rsp+0x228]
0x7d86: jz 0x7e6b
0x7d8c: test bl,bl
0x7d8e: jz 0x7ed5
0x7d94: test rdx,rdx
0x7d97: jz 0x8689
0x7d9d: cmp [rsp+0x7c],0xf
0x7da2: jz 0x7dc1
0x7da4: lea rsi,[rip+0x8dad]
0x7dab: xor edi,edi
0x7dad: mov edx,0x5
0x7db2: call 0x27f0
0x7db7: mov rdi,rax
0x7dba: xor eax,eax
0x7dbc: call 0x42c0
0x7dc1: cmp [rsp+0x228],0x0
0x7dca: jnz 0x8689
0x7dd0: movsxd rdx,dword ptr [rsp+0x84]
0x7dd8: xor eax,eax
0x7dda: mov rcx,rdx
0x7ddd: add rcx,qword ptr [rsp+0x218]
0x7de5: movsxd rdx,ecx
0x7de8: seto al
0x7deb: mov dword ptr [rsp+0x20],ecx
0x7def: cmp rcx,rdx
0x7df2: mov edx,0x1
0x7df7: cmovne eax,edx
0x7dfa: test eax,eax
0x7dfc: jz 0x7f00
0x7e39: jmp 0x6d9b
0x7ecb: jmp 0x6d9b
0x7ed0: call 0x2830
0x800b: mov rdi,qword ptr [rsp+0x18]
0x8010: lea rdx,[rsp+0x300]
0x8018: mov rsi,r13
0x801b: call 0x47b0
0x8020: lea rsi,[rip+0x8421]
0x8027: xor edi,edi
0x8029: mov rbx,rax
0x802c: mov edx,0x5
0x8031: call 0x27f0
0x8036: mov rsi,rbx
0x8039: mov rdi,rax
0x803c: xor eax,eax
0x803e: call 0x42c0
0x8043: mov eax,dword ptr [rsp+0xd0]
0x804a: cmp eax,0xff
0x804d: jz 0x8075
0x804f: cmp eax,dword ptr [rsp+0x90]
0x8056: jz 0x8075
0x8058: lea rsi,[rip+0x8c29]
0x805f: xor edi,edi
0x8061: mov edx,0x5
0x8066: call 0x27f0
0x806b: mov rdi,rax
0x806e: xor eax,eax
0x8070: call 0x42c0
0x8075: cmp [rsp+0x228],0x0
0x807e: jnz 0x8152
0x8084: cmp ebp,dword ptr [rsp+0x7c]
0x8088: jnz 0x80a7
0x808a: cmp [rsp+0x220],0x0
0x8093: jnz 0x8152
0x8099: cmp r12d,dword ptr [rsp+0x80]
0x80a1: jz 0x8152
0x80a7: lea rsi,[rip+0x8c1a]
0x80ae: mov edx,0x5
0x80b3: xor edi,edi
0x80b5: call 0x27f0
0x80ba: mov rdi,rax
0x80bd: xor eax,eax
0x80bf: call 0x42c0
0x80c4: lea r8,[rsp+0x2d3]
0x80cc: mov edi,dword ptr [rsp+0x20]
0x80d0: mov rsi,r8
0x80d3: mov qword ptr [rsp+0x30],r8
0x80d8: call 0x2b60
0x80dd: lea rsi,[rip+0x8c24]
0x80e4: mov edx,0x5
0x80e9: xor edi,edi
0x80eb: mov rbx,rax
0x80ee: call 0x27f0
0x80f3: lea edx,[r12+0x1]
0x80f8: mov ecx,ebp
0x80fa: mov rsi,rbx
0x80fd: mov rdi,rax
0x8100: xor eax,eax
0x8102: call 0x42c0
0x8107: mov r8,qword ptr [rsp+0x30]
0x810c: mov eax,dword ptr [rsp+0x80]
0x8113: mov edi,dword ptr [rsp+0x84]
0x811a: mov r12d,dword ptr [rsp+0x7c]
0x811f: mov rsi,r8
0x8122: lea ebx,[rax+0x1]
0x8125: call 0x2b60
0x812a: lea rsi,[rip+0x8bff]
0x8131: mov rbp,rax
0x8134: mov edx,0x5
0x8139: xor edi,edi
0x813b: call 0x27f0
0x8140: mov ecx,r12d
0x8143: mov rdi,rax
0x8146: mov edx,ebx
0x8148: mov rsi,rbp
0x814b: xor eax,eax
0x814d: call 0x42c0
0x8152: movzx ebx,byte ptr [rsp+0x289]
0x815a: jmp 0x7e6b
0x81a3: jmp 0x7d2d
0x8203: jmp 0x7bf8
0x826d: lea rdi,[rsp+0xb0]
0x8275: mov rsi,r13
0x8278: mov rdx,rbx
0x827b: call 0x47b0
0x8280: lea rsi,[rip+0x80d2]
0x8287: mov edx,0x5
0x828c: xor edi,edi
0x828e: mov qword ptr [rsp+0x48],rax
0x8293: call 0x27f0
0x8298: mov rsi,qword ptr [rsp+0x48]
0x829d: mov rdi,rax
0x82a0: xor eax,eax
0x82a2: call 0x42c0
0x82a7: mov rdi,qword ptr [rsp+0x18]
0x82ac: mov rsi,r13
0x82af: mov rdx,rbx
0x82b2: call 0x47b0
0x82b7: lea rsi,[rip+0x80b9]
0x82be: mov edx,0x5
0x82c3: xor edi,edi
0x82c5: mov r13,rax
0x82c8: call 0x27f0
0x82cd: mov rsi,r13
0x82d0: mov rdi,rax
0x82d3: xor eax,eax
0x82d5: call 0x42c0
0x82da: mov r10d,dword ptr [rsp+0x50]
0x82df: mov r9d,dword ptr [rsp+0x54]
0x82e4: lea rdx,[rip+0x808b]
0x82eb: mov r8d,dword ptr [rsp+0x58]
0x82f0: mov ecx,dword ptr [rsp+0x5c]
0x82f4: lea rax,[rip+0x7f46]
0x82fb: mov rsi,rdx
0x82fe: cmp r10d,r9d
0x8301: cmovne rsi,rax
0x8305: cmp r8d,ecx
0x8308: cmove rax,rdx
0x830c: jmp 0x7797
0x840e: lea rsi,[rip+0x89f3]
0x8415: xor edi,edi
0x8417: mov edx,0x5
0x841c: call 0x27f0
0x8421: mov rsi,rbx
0x8424: mov rdi,rax
0x8427: xor eax,eax
0x8429: call 0x42c0
0x842e: cmp [rsp+0x90],0xff
0x8436: jz 0x847f
0x8438: mov rsi,qword ptr [rsp+0x28]
0x843d: lea rdx,[rsp+0x170]
0x8445: mov rdi,r15
0x8448: call 0xb570
0x844d: test rax,rax
0x8450: jz 0x847f
0x8452: mov eax,dword ptr [rsp+0x190]
0x8459: cmp dword ptr [rsp+0x90],eax
0x8460: jz 0x847f
0x8462: lea rsi,[rip+0x89c7]
0x8469: xor edi,edi
0x846b: mov edx,0x5
0x8470: call 0x27f0
0x8475: mov rdi,rax
0x8478: xor eax,eax
0x847a: call 0x42c0
0x847f: movzx r12d,byte ptr [rsp+0x289]
0x8488: jmp 0x70d2
0x84d5: jmp 0x6d9b
0x8514: jmp 0x6d9b
0x8549: lea rsi,[rip+0x7f12]
0x8550: mov rbx,rax
0x8553: xor edi,edi
0x8555: mov edx,0x5
0x855a: call 0x27f0
0x855f: mov rdx,r14
0x8562: mov rdi,rax
0x8565: mov rsi,rbx
0x8568: xor eax,eax
0x856a: call 0x42c0
0x856f: jmp 0x8319
0x8574: mov rdi,rdx
0x8577: call 0xb560
0x857c: jmp 0x764b
0x85f2: pop rax
0x85f3: pop rdx
0x85f4: cmp [rsp+0x260],0x0
0x85fd: jz 0x7d2d
0x8603: cmp [rsp+0x258],0x0
0x860c: jnz 0x8170
0x8612: jmp 0x7d2d
0x863a: lea rsi,[rip+0x85c7]
0x8641: mov rbx,rax
0x8644: xor edi,edi
0x8646: mov edx,0x5
0x864b: call 0x27f0
0x8650: mov rsi,rbx
0x8653: mov rdi,rax
0x8656: xor eax,eax
0x8658: call 0x42c0
0x865d: jmp 0x6d9b
0x8689: cmp [rsp+0x78],0xc
0x868e: jz 0x7dd0
0x8694: lea rsi,[rip+0x8525]
0x869b: xor edi,edi
0x869d: mov edx,0x5
0x86a2: call 0x27f0
0x86a7: mov rdi,rax
0x86aa: xor eax,eax
0x86ac: call 0x42c0
0x86b1: jmp 0x7dd0
0x86b6: lea rsi,[rip+0x7d03]
0x86bd: xor edi,edi
0x86bf: call 0x27f0
0x86c4: jmp 0x78eb
0x8774: nop qword ptr [rax+0x0]
0x87b1: nop qword ptr [rax+0x0]
0x87d2: nop qword ptr [rax+rax*1+0x0]
0x87ec: call 0x2830
0x888d: nop qword ptr [rax]
0x88d3: nop qword ptr [rax+rax*1+0x0]
0x89de: mov edx,dword ptr [rsp+0x24]
0x89e2: mov ecx,dword ptr [rsp+0x20]
0x89e6: xor edx,dword ptr [rsp+0x64]
0x89ea: xor ecx,dword ptr [rsp+0x60]
0x89ee: mov esi,dword ptr [rsp+0x10]
0x89f2: or edx,ecx
0x89f4: mov ecx,dword ptr [rsp+0x1c]
0x89f8: xor ecx,dword ptr [rsp+0x5c]
0x89fc: or edx,ecx
0x89fe: mov ecx,dword ptr [rsp+0x18]
0x8a02: xor ecx,dword ptr [rsp+0x58]
0x8a06: or edx,ecx
0x8a08: mov ecx,dword ptr [rsp+0x14]
0x8a0c: xor ecx,dword ptr [rsp+0x54]
0x8a10: or edx,ecx
0x8a12: mov ecx,dword ptr [rsp+0x50]
0x8a16: xor ecx,esi
0x8a18: or edx,ecx
0x8a1a: jz 0x8a60
0x8a1c: cmp esi,0x3c
0x8a1f: jnz 0x8864
0x8a25: lea r14,[rsp+0xb0]
0x8a2d: mov edx,0x10
0x8a32: mov rsi,rbx
0x8a35: mov rdi,r14
0x8a38: call 0x29b0
0x8a3d: mov edx,0x3935
0x8a42: lea rdi,[rsp+0x8]
0x8a47: mov [rax],0x0
0x8a4a: mov word ptr [rax-0x2],dx
0x8a4e: mov rsi,r14
0x8a51: mov edx,ebp
0x8a53: call 0x8800
0x8a58: test al,al
0x8a5a: jz 0x8864
0x8a60: mov qword ptr [r12],r13
0x8a64: mov eax,0x1
0x8a69: jmp 0x8864
0x8a6e: nop 
0x8a86: nop qword ptr [rax+rax*1+0x0]
0x8acf: nop 
0x8adf: call 0x2830
0x8b38: nop qword ptr [rax+rax*1+0x0]
0x8b79: call 0x2830
0x8c5c: nop qword ptr [rax+0x0]
0x8cad: nop qword ptr [rax]
0x8fc7: nop qword ptr [rax+rax*1+0x0]
0x8ffe: nop 
0x9021: nop qword ptr [rax+0x0]
0x9062: nop qword ptr [rax+rax*1+0x0]
0x9074: nop qword ptr [rax+0x0]
0x9118: nop qword ptr [rax+rax*1+0x0]
0x9141: nop qword ptr [rax+0x0]
0x9157: nop qword ptr [rax+rax*1+0x0]
0x916f: nop 
0x919e: nop 
0x91ad: nop qword ptr [rax]
0x91bf: nop 
0x91cf: nop 
0x91df: nop 
0x91ef: nop 
0x91ff: nop 
0x926c: nop qword ptr [rax+0x0]
0x928c: nop qword ptr [rax+0x0]
0x92af: nop 
0x92c2: nop qword ptr [rax+rax*1+0x0]
0x92da: nop qword ptr [rax+rax*1+0x0]
0x92ea: nop qword ptr [rax+rax*1+0x0]
0x938b: nop qword ptr [rax+rax*1+0x0]
0x93a5: nop qword ptr [rax]
0x93b8: nop qword ptr [rax+rax*1+0x0]
0x93d3: nop qword ptr [rax+rax*1+0x0]
0x9402: nop qword ptr [rax+rax*1+0x0]
0x9412: nop qword ptr [rax+rax*1+0x0]
0x942a: nop qword ptr [rax+rax*1+0x0]
0x943a: nop qword ptr [rax+rax*1+0x0]
0x9448: nop qword ptr [rax+rax*1+0x0]
0x946f: nop 
0x94ad: cmp [rsp+0xe],0x0
0x94b2: jnz 0x9ead
0x94b8: test r13,r13
0x94bb: setz al
0x94be: cmp [rsp+0x50],0x0
0x94c4: setnz dl
0x94c7: and al,dl
0x94c9: jz 0x9eec
0x94cf: mov r13,qword ptr [rsp+0x50]
0x9509: nop qword ptr [rax+0x0]
0x9552: nop qword ptr [rax+rax*1+0x0]
0x9591: nop qword ptr [rax+0x0]
0x95b2: nop qword ptr [rax+rax*1+0x0]
0x9718: nop qword ptr [rax+rax*1+0x0]
0x982b: nop qword ptr [rax+rax*1+0x0]
0x984e: nop 
0x9915: nop qword ptr [rax]
0x99cd: nop qword ptr [rax]
0x9bd6: nop qword ptr [rax+rax*1+0x0]
0x9c69: nop qword ptr [rax+0x0]
0x9dbd: nop qword ptr [rax]
0x9ead: sub rsp,0x8
0x9eb1: mov r8d,0x5
0x9eb7: mov rcx,r11
0x9eba: push qword ptr [rsp+0x68]
0x9ebe: push qword ptr [rsp+0x78]
0x9ec2: mov rdi,r14
0x9ec5: push qword ptr [rsp+0x38]
0x9ec9: mov r9d,dword ptr [rsp+0x98]
0x9ed1: mov rdx,qword ptr [rsp+0x30]
0x9ed6: mov rsi,qword ptr [rsp+0x70]
0x9edb: call 0x8d10
0x9ee0: add rsp,0x20
0x9ee4: mov r15,rax
0x9ee7: jmp 0x98e9
0x9eec: movzx eax,byte ptr [rsp+0x7c]
0x9ef1: jmp 0x9e0c
0x9f03: call 0x2830
0xa0cb: nop qword ptr [rax+rax*1+0x0]
0xa100: push r12
0xa102: push rbp
0xa103: push rbx
0xa104: mov rbx,rdi
0xa107: call 0x2750
0xa10c: mov r12d,dword ptr [rax]
0xa10f: mov rbp,rax
0xa112: lea rax,[rip+0x20b147]
0xa119: test rbx,rbx
0xa11c: mov esi,0x38
0xa121: cmove rbx,rax
0xa125: mov rdi,rbx
0xa128: call 0xb0d0
0xa12d: mov dword ptr [rbp+0x0],r12d
0xa131: pop rbx
0xa132: pop rbp
0xa133: pop r12
0xa135: ret
0xa140: lea rax,[rip+0x20b119]
0xa147: test rdi,rdi
0xa14a: cmove rdi,rax
0xa14e: mov eax,dword ptr [rdi]
0xa150: ret
0xa160: lea rax,[rip+0x20b0f9]
0xa167: test rdi,rdi
0xa16a: cmove rdi,rax
0xa16e: mov dword ptr [rdi],esi
0xa170: ret
0xa180: lea rax,[rip+0x20b0d9]
0xa187: test rdi,rdi
0xa18a: mov ecx,esi
0xa18c: cmove rdi,rax
0xa190: mov eax,esi
0xa192: and ecx,0x1f
0xa195: shr al,0x5
0xa198: movzx eax,al
0xa19b: lea rdi,[rdi+rax*4+0x8]
0xa1a0: mov esi,dword ptr [rdi]
0xa1a2: mov eax,esi
0xa1a4: shr eax,cl
0xa1a6: xor edx,eax
0xa1a8: and eax,0x1
0xa1ab: and edx,0x1
0xa1ae: shl edx,cl
0xa1b0: xor edx,esi
0xa1b2: mov dword ptr [rdi],edx
0xa1b4: ret
0xa1c0: lea rax,[rip+0x20b099]
0xa1c7: test rdi,rdi
0xa1ca: cmove rdi,rax
0xa1ce: mov eax,dword ptr [rdi+0x4]
0xa1d1: mov dword ptr [rdi+0x4],esi
0xa1d4: ret
0xa1e0: lea rax,[rip+0x20b079]
0xa1e7: test rdi,rdi
0xa1ea: cmove rdi,rax
0xa1ee: test rsi,rsi
0xa1f1: mov [rdi],0xa
0xa1f7: jz 0xa207
0xa1f9: test rdx,rdx
0xa1fc: jz 0xa207
0xa1fe: mov qword ptr [rdi+0x28],rsi
0xa202: mov qword ptr [rdi+0x30],rdx
0xa206: ret
0xa207: sub rsp,0x8
0xa20b: call 0x2740
0xa210: push r15
0xa212: push r14
0xa214: lea rax,[rip+0x20b045]
0xa21b: push r13
0xa21d: push r12
0xa21f: mov r13,rdi
0xa222: push rbp
0xa223: push rbx
0xa224: mov rbx,r8
0xa227: mov r14,rsi
0xa22a: mov r15,rdx
0xa22d: sub rsp,0x18
0xa231: test r8,r8
0xa234: cmove rbx,rax
0xa238: mov qword ptr [rsp+0x8],rcx
0xa23d: call 0x2750
0xa242: mov r12d,dword ptr [rax]
0xa245: mov rbp,rax
0xa248: lea rax,[rbx+0x8]
0xa24c: sub rsp,0x8
0xa250: mov r9d,dword ptr [rbx+0x4]
0xa254: push qword ptr [rbx+0x30]
0xa257: mov r8d,dword ptr [rbx]
0xa25a: push qword ptr [rbx+0x28]
0xa25d: mov rdx,r15
0xa260: push rax
0xa261: mov rcx,qword ptr [rsp+0x28]
0xa266: mov rsi,r14
0xa269: mov rdi,r13
0xa26c: call 0x8d10
0xa271: mov dword ptr [rbp+0x0],r12d
0xa275: add rsp,0x38
0xa279: pop rbx
0xa27a: pop rbp
0xa27b: pop r12
0xa27d: pop r13
0xa27f: pop r14
0xa281: pop r15
0xa283: ret
0xa290: push r15
0xa292: push r14
0xa294: lea rax,[rip+0x20afc5]
0xa29b: push r13
0xa29d: push r12
0xa29f: mov r12,rdx
0xa2a2: push rbp
0xa2a3: push rbx
0xa2a4: mov rbx,rcx
0xa2a7: mov r14,rdi
0xa2aa: mov r15,rsi
0xa2ad: sub rsp,0x38
0xa2b1: test rcx,rcx
0xa2b4: cmove rbx,rax
0xa2b8: xor ebp,ebp
0xa2ba: call 0x2750
0xa2bf: test r12,r12
0xa2c2: mov r13,rax
0xa2c5: mov eax,dword ptr [rax]
0xa2c7: setz bpl
0xa2cb: or ebp,dword ptr [rbx+0x4]
0xa2ce: lea r10,[rbx+0x8]
0xa2d2: sub rsp,0x8
0xa2d6: mov r8d,dword ptr [rbx]
0xa2d9: mov rcx,r15
0xa2dc: mov dword ptr [rsp+0x14],eax
0xa2e0: push qword ptr [rbx+0x30]
0xa2e3: mov rdx,r14
0xa2e6: push qword ptr [rbx+0x28]
0xa2e9: push r10
0xa2eb: xor esi,esi
0xa2ed: mov r9d,ebp
0xa2f0: xor edi,edi
0xa2f2: mov qword ptr [rsp+0x40],r10
0xa2f7: call 0x8d10
0xa2fc: lea rsi,[rax+0x1]
0xa300: mov qword ptr [rsp+0x48],rax
0xa305: add rsp,0x20
0xa309: mov rdi,rsi
0xa30c: mov qword ptr [rsp+0x18],rsi
0xa311: call 0xaed0
0xa316: mov qword ptr [rsp+0x10],rax
0xa31b: sub rsp,0x8
0xa31f: push qword ptr [rbx+0x30]
0xa322: push qword ptr [rbx+0x28]
0xa325: mov r10,qword ptr [rsp+0x38]
0xa32a: mov r9d,ebp
0xa32d: mov r8d,dword ptr [rbx]
0xa330: mov rcx,r15
0xa333: mov rdx,r14
0xa336: mov rdi,rax
0xa339: push r10
0xa33b: mov rsi,qword ptr [rsp+0x38]
0xa340: call 0x8d10
0xa345: mov eax,dword ptr [rsp+0x2c]
0xa349: add rsp,0x20
0xa34d: test r12,r12
0xa350: mov dword ptr [r13+0x0],eax
0xa354: jz 0xa35f
0xa356: mov r11,qword ptr [rsp+0x28]
0xa35b: mov qword ptr [r12],r11
0xa35f: mov rax,qword ptr [rsp+0x10]
0xa364: add rsp,0x38
0xa368: pop rbx
0xa369: pop rbp
0xa36a: pop r12
0xa36c: pop r13
0xa36e: pop r14
0xa370: pop r15
0xa372: ret
0xa380: mov rcx,rdx
0xa383: xor edx,edx
0xa385: jmp 0xa290
0xa390: mov eax,dword ptr [rip+0x20ace2]
0xa396: push r12
0xa398: mov r12,qword ptr [rip+0x20ace1]
0xa39f: push rbp
0xa3a0: push rbx
0xa3a1: cmp eax,0x1
0xa3a4: jle 0xa3d1
0xa3a6: sub eax,0x2
0xa3a9: lea rbx,[r12+0x18]
0xa3ae: shl rax,0x4
0xa3b2: lea rbp,[r12+rax*1+0x28]
0xa3b7: nop qword ptr [rax+rax*1+0x0]
0xa3c0: mov rdi,qword ptr [rbx]
0xa3c3: add rbx,0x10
0xa3c7: call 0x2710
0xa3cc: cmp rbx,rbp
0xa3cf: jnz 0xa3c0
0xa3d1: mov rdi,qword ptr [r12+0x8]
0xa3d6: lea rbx,[rip+0x20ad83]
0xa3dd: cmp rdi,rbx
0xa3e0: jz 0xa3f9
0xa3e2: call 0x2710
0xa3e7: mov [rip+0x20ac9e],0x100
0xa3f2: mov qword ptr [rip+0x20ac9f],rbx
0xa3f9: lea rbx,[rip+0x20ac90]
0xa400: cmp r12,rbx
0xa403: jz 0xa414
0xa405: mov rdi,r12
0xa408: call 0x2710
0xa40d: mov qword ptr [rip+0x20ac6c],rbx
0xa414: pop rbx
0xa415: mov [rip+0x20ac59],0x1
0xa41f: pop rbp
0xa420: pop r12
0xa422: ret
0xa430: lea rcx,[rip+0x20ae29]
0xa437: mov rdx,0xffffffff
0xa43e: jmp 0x9f50
0xa450: lea rcx,[rip+0x20ae09]
0xa457: jmp 0x9f50
0xa460: lea rcx,[rip+0x20adf9]
0xa467: mov rsi,rdi
0xa46a: mov rdx,0xffffffff
0xa471: xor edi,edi
0xa473: jmp 0x9f50
0xa480: lea rcx,[rip+0x20add9]
0xa487: mov rdx,rsi
0xa48a: mov rsi,rdi
0xa48d: xor edi,edi
0xa48f: jmp 0x9f50
0xa51f: add rsp,0x48
0xa523: ret
0xa530: sub rsp,0x48
0xa534: mov rax,rdx
0xa537: mov rdx,rcx
0xa53a: mov rcx,0x28
0xa543: mov qword ptr [rsp+0x38],rcx
0xa548: xor ecx,ecx
0xa54a: cmp esi,0xa
0xa54d: jz 0xa5b0
0xa54f: mov dword ptr [rsp],esi
0xa552: mov rcx,rsp
0xa555: mov rsi,rax
0xa558: mov [rsp+0x4],0x0
0xa561: mov [rsp+0xc],0x0
0xa56a: mov [rsp+0x14],0x0
0xa573: mov [rsp+0x1c],0x0
0xa57c: mov [rsp+0x24],0x0
0xa585: mov [rsp+0x2c],0x0
0xa58e: mov [rsp+0x34],0x0
0xa596: call 0x9f50
0xa59b: mov rdx,qword ptr [rsp+0x38]
0xa5a0: xor rdx,0x28
0xa5a9: jnz 0xa5b5
0xa5ab: add rsp,0x48
0xa5af: ret
0xa5b0: call 0x2740
0xa5b5: call 0x2830
0xa5d0: mov rcx,rdx
0xa5d3: mov rdx,rsi
0xa5d6: mov esi,edi
0xa5d8: xor edi,edi
0xa5da: jmp 0xa530
0xa5e0: sub rsp,0x48
0xa5e4: mov ecx,edx
0xa5e6: mov rax,0x28
0xa5ef: mov qword ptr [rsp+0x38],rax
0xa5f4: xor eax,eax
0xa5f6: mov rax,qword ptr [rip+0x20ac93]
0xa5fd: mov r8,rsp
0xa600: and ecx,0x1f
0xa603: movdqa xmm0,[rip+0x20ac55]
0xa60b: mov qword ptr [rsp+0x30],rax
0xa610: mov eax,edx
0xa612: movaps [rsp],xmm0
0xa616: shr al,0x5
0xa619: movzx eax,al
0xa61c: lea r9,[r8+rax*4+0x8]
0xa621: movdqa xmm0,[rip+0x20ac47]
0xa629: movaps [rsp+0x10],xmm0
0xa62e: movdqa xmm0,[rip+0x20ac4a]
0xa636: movaps [rsp+0x20],xmm0
0xa63b: mov edx,dword ptr [r9]
0xa63e: mov eax,edx
0xa640: shr eax,cl
0xa642: not eax
0xa644: and eax,0x1
0xa647: shl eax,cl
0xa649: mov rcx,r8
0xa64c: xor eax,edx
0xa64e: mov rdx,rsi
0xa651: mov rsi,rdi
0xa654: mov dword ptr [r9],eax
0xa657: xor edi,edi
0xa659: call 0x9f50
0xa65e: mov rsi,qword ptr [rsp+0x38]
0xa663: xor rsi,0x28
0xa66c: jnz 0xa673
0xa66e: add rsp,0x48
0xa672: ret
0xa673: call 0x2830
0xa680: movsx edx,sil
0xa684: mov rsi,0xffffffff
0xa68b: jmp 0xa5e0
0xa690: mov edx,0x3a
0xa695: mov rsi,0xffffffff
0xa69c: jmp 0xa5e0
0xa6b0: mov edx,0x3a
0xa6b5: jmp 0xa5e0
0xa6c0: sub rsp,0x48
0xa6c4: mov rax,rdx
0xa6c7: mov rdx,0x28
0xa6d0: mov qword ptr [rsp+0x38],rdx
0xa6d5: xor edx,edx
0xa6d7: cmp esi,0xa
0xa6da: jz 0xa744
0xa6dc: mov dword ptr [rsp],esi
0xa6df: mov rcx,rsp
0xa6e2: mov rdx,0xffffffff
0xa6e9: mov rsi,rax
0xa6ec: mov [rsp+0x4],0x0
0xa6f5: mov [rsp+0xc],0x4000000
0xa6fe: mov [rsp+0x14],0x0
0xa707: mov [rsp+0x1c],0x0
0xa710: mov [rsp+0x24],0x0
0xa719: mov [rsp+0x2c],0x0
0xa722: mov [rsp+0x34],0x0
0xa72a: call 0x9f50
0xa72f: mov rcx,qword ptr [rsp+0x38]
0xa734: xor rcx,0x28
0xa73d: jnz 0xa749
0xa73f: add rsp,0x48
0xa743: ret
0xa744: call 0x2740
0xa749: call 0x2830
0xa750: sub rsp,0x48
0xa754: mov r9,rcx
0xa757: mov rcx,qword ptr [rip+0x20ab32]
0xa75e: movdqa xmm0,[rip+0x20aafa]
0xa766: mov rax,0x28
0xa76f: mov qword ptr [rsp+0x38],rax
0xa774: xor eax,eax
0xa776: movaps [rsp],xmm0
0xa77a: test rsi,rsi
0xa77d: mov qword ptr [rsp+0x30],rcx
0xa782: mov [rsp],0xa
0xa789: movdqa xmm0,[rip+0x20aadf]
0xa791: movaps [rsp+0x10],xmm0
0xa796: movdqa xmm0,[rip+0x20aae2]
0xa79e: movaps [rsp+0x20],xmm0
0xa7a3: jz 0xa7d7
0xa7a5: test rdx,rdx
0xa7a8: jz 0xa7d7
0xa7aa: mov qword ptr [rsp+0x28],rsi
0xa7af: mov qword ptr [rsp+0x30],rdx
0xa7b4: mov rcx,rsp
0xa7b7: mov rdx,r8
0xa7ba: mov rsi,r9
0xa7bd: call 0x9f50
0xa7c2: mov rdi,qword ptr [rsp+0x38]
0xa7c7: xor rdi,0x28
0xa7d0: jnz 0xa7dc
0xa7d2: add rsp,0x48
0xa7d6: ret
0xa7d7: call 0x2740
0xa7dc: call 0x2830
0xa7f0: mov r8,0xffffffff
0xa7f7: jmp 0xa750
0xa800: mov rcx,rdx
0xa803: mov r8,0xffffffff
0xa80a: mov rdx,rsi
0xa80d: mov rsi,rdi
0xa810: xor edi,edi
0xa812: jmp 0xa750
0xa820: mov r8,rcx
0xa823: mov rcx,rdx
0xa826: mov rdx,rsi
0xa829: mov rsi,rdi
0xa82c: xor edi,edi
0xa82e: jmp 0xa750
0xa840: lea rcx,[rip+0x20a7f9]
0xa847: jmp 0x9f50
0xa850: lea rcx,[rip+0x20a7e9]
0xa857: mov rdx,rsi
0xa85a: mov rsi,rdi
0xa85d: xor edi,edi
0xa85f: jmp 0x9f50
0xa956: nop qword ptr [rax+rax*1+0x0]
0xa9e5: nop qword ptr [rax]
0xa9e8: mov r8,rcx
0xa9eb: mov rcx,rdx
0xa9ee: lea rdx,[rip+0x703f]
0xa9f5: mov esi,0x1
0xa9fa: xor eax,eax
0xa9fc: call 0x2af0
0xaa01: jmp 0xa8ec
0xaa06: nop qword ptr [rax+rax*1+0x0]
0xaa65: nop qword ptr [rax]
0xaaa1: nop qword ptr [rax+0x0]
0xaae8: nop qword ptr [rax+rax*1+0x0]
0xab37: nop qword ptr [rax+rax*1+0x0]
0xab94: nop qword ptr [rax+0x0]
0xabc2: nop qword ptr [rax+rax*1+0x0]
0xac76: nop qword ptr [rax+rax*1+0x0]
0xacd0: xor r9d,r9d
0xacd3: cmp [r8],0x0
0xacd7: jz 0xaceb
0xacd9: nop qword ptr [rax+0x0]
0xace0: add r9,0x1
0xace4: cmp [r8+r9*8+0x0],0x0
0xace9: jnz 0xace0
0xaceb: jmp 0xa8b0
0xacf0: sub rsp,0x68
0xacf4: mov r10,r8
0xacf7: xor r9d,r9d
0xacfa: mov rax,0x28
0xad03: mov qword ptr [rsp+0x58],rax
0xad08: xor eax,eax
0xad0a: mov r8,rsp
0xad0d: nop qword ptr [rax]
0xad10: mov eax,dword ptr [r10]
0xad13: cmp eax,0x2f
0xad16: jnbe 0xad5a
0xad18: mov r11d,eax
0xad1b: add r11,qword ptr [r10+0x10]
0xad1f: add eax,0x8
0xad22: mov dword ptr [r10],eax
0xad25: mov rax,qword ptr [r11]
0xad28: test rax,rax
0xad2b: mov qword ptr [r8+r9*8+0x0],rax
0xad2f: jz 0xad3b
0xad31: add r9,0x1
0xad35: cmp r9,0xa
0xad39: jnz 0xad10
0xad3b: call 0xa8b0
0xad40: mov rax,qword ptr [rsp+0x58]
0xad45: xor rax,0x28
0xad4e: jnz 0xad55
0xad50: add rsp,0x68
0xad54: ret
0xad55: call 0x2830
0xad5a: mov r11,qword ptr [r10+0x8]
0xad5e: lea rax,[r11+0x8]
0xad62: mov qword ptr [r10+0x8],rax
0xad66: jmp 0xad25
0xae30: call 0x2830
0xae3c: mov rax,rbx
0xae3f: add rbx,0x8
0xae43: jmp 0xadf6
0xae50: push rbx
0xae51: lea rsi,[rip+0x6c2a]
0xae58: mov edx,0x5
0xae5d: xor edi,edi
0xae5f: call 0x27f0
0xae64: lea rdx,[rip+0x6c2c]
0xae6b: mov rsi,rax
0xae6e: mov edi,0x1
0xae73: xor eax,eax
0xae75: call 0x2a40
0xae7a: lea rsi,[rip+0x6c2c]
0xae81: mov edx,0x5
0xae86: xor edi,edi
0xae88: call 0x27f0
0xae8d: lea rcx,[rip+0x5044]
0xae94: lea rdx,[rip+0x491c]
0xae9b: mov rsi,rax
0xae9e: mov edi,0x1
0xaea3: xor eax,eax
0xaea5: call 0x2a40
0xaeaa: mov rbx,qword ptr [rip+0x20a1f7]
0xaeb1: lea rsi,[rip+0x6e28]
0xaeb8: xor edi,edi
0xaeba: mov edx,0x5
0xaebf: call 0x27f0
0xaec4: mov rsi,rbx
0xaec7: mov rdi,rax
0xaeca: pop rbx
0xaecb: jmp 0x2930
0xaef0: mov rax,rdi
0xaef3: mul rsi
0xaef6: mov rdi,rax
0xaef9: seto al
0xaefc: test rdi,rdi
0xaeff: js 0xaf0b
0xaf01: movzx eax,al
0xaf04: test rax,rax
0xaf07: jnz 0xaf0b
0xaf09: jmp 0xaed0
0xaf0b: sub rsp,0x8
0xaf0f: call 0xb120
0xaf52: nop qword ptr [rax+rax*1+0x0]
0xaf70: mov rax,rsi
0xaf73: mul rdx
0xaf76: mov rsi,rax
0xaf79: seto al
0xaf7c: test rsi,rsi
0xaf7f: js 0xaf8b
0xaf81: movzx eax,al
0xaf84: test rax,rax
0xaf87: jnz 0xaf8b
0xaf89: jmp 0xaf30
0xaf8b: sub rsp,0x8
0xaf8f: call 0xb120
0xafa0: test rdi,rdi
0xafa3: mov r9,rdx
0xafa6: mov rcx,qword ptr [rsi]
0xafa9: jz 0xafe0
0xafab: xor edx,edx
0xafad: mov rax,0x6148914691236517204
0xafb7: div r9
0xafba: cmp rax,rcx
0xafbd: jbe 0xaffb
0xafbf: mov rax,rcx
0xafc2: shr rax,0x1
0xafc5: lea rcx,[rax+rcx*1+0x1]
0xafca: mov qword ptr [rsi],rcx
0xafcd: imul rcx,r9
0xafd1: mov rsi,rcx
0xafd4: jmp 0xaf30
0xafd9: nop qword ptr [rax+0x0]
0xafe0: test rcx,rcx
0xafe3: jz 0xb008
0xafe5: mov rax,rcx
0xafe8: mul r9
0xafeb: seto dl
0xafee: test rax,rax
0xaff1: movzx edx,dl
0xaff4: js 0xaffb
0xaff6: test rdx,rdx
0xaff9: jz 0xafca
0xaffb: sub rsp,0x8
0xafff: call 0xb120
0xb004: nop qword ptr [rax+0x0]
0xb008: xor edx,edx
0xb00a: mov eax,0x80
0xb00f: xor r8d,r8d
0xb012: div r9
0xb015: test rax,rax
0xb018: setz r8b
0xb01c: lea rcx,[r8+rax*1+0x0]
0xb020: jmp 0xafe5
0xb030: test rdi,rdi
0xb033: mov rax,qword ptr [rsi]
0xb036: jz 0xb060
0xb038: mov rdx,0x6148914691236517203
0xb042: cmp rax,rdx
0xb045: jnbe 0xb071
0xb047: mov rdx,rax
0xb04a: shr rdx,0x1
0xb04d: lea rax,[rdx+rax*1+0x1]
0xb052: mov qword ptr [rsi],rax
0xb055: mov rsi,rax
0xb058: jmp 0xaf30
0xb05d: nop qword ptr [rax]
0xb060: test rax,rax
0xb063: mov edx,0x80
0xb068: cmove rax,rdx
0xb06c: test rax,rax
0xb06f: jns 0xb052
0xb071: sub rsp,0x8
0xb075: call 0xb120
0xb080: push rbx
0xb081: mov rbx,rdi
0xb084: call 0xaed0
0xb089: mov rdx,rbx
0xb08c: xor esi,esi
0xb08e: mov rdi,rax
0xb091: pop rbx
0xb092: jmp 0x28f0
0xb0a0: mov rax,rdi
0xb0a3: sub rsp,0x8
0xb0a7: mul rsi
0xb0aa: seto dl
0xb0ad: test rax,rax
0xb0b0: js 0xb0c9
0xb0b2: movzx edx,dl
0xb0b5: test rdx,rdx
0xb0b8: jnz 0xb0c9
0xb0ba: call 0x2940
0xb0bf: test rax,rax
0xb0c2: jz 0xb0c9
0xb0c4: add rsp,0x8
0xb0c8: ret
0xb0c9: call 0xb120
0xb0d0: push rbp
0xb0d1: push rbx
0xb0d2: mov rbp,rdi
0xb0d5: mov rdi,rsi
0xb0d8: mov rbx,rsi
0xb0db: sub rsp,0x8
0xb0df: call 0xaed0
0xb0e4: add rsp,0x8
0xb0e8: mov rdx,rbx
0xb0eb: mov rsi,rbp
0xb0ee: pop rbx
0xb0ef: pop rbp
0xb0f0: mov rdi,rax
0xb0f3: jmp 0x2970
0xb100: push rbx
0xb101: mov rbx,rdi
0xb104: call 0x2810
0xb109: mov rdi,rbx
0xb10c: lea rsi,[rax+0x1]
0xb110: pop rbx
0xb111: jmp 0xb0d0
0xb150: call 0x2740
0xb1de: call 0x2830
0xb209: nop qword ptr [rax+0x0]
0xb242: nop qword ptr [rax+rax*1+0x0]
0xb29c: nop qword ptr [rax+0x0]
0xb313: nop qword ptr [rax+rax*1+0x0]
0xb3d9: nop qword ptr [rax+0x0]
0xb3ff: nop 
0xb449: nop qword ptr [rax+0x0]
0xb45f: nop 
0xb509: nop qword ptr [rax+0x0]
0xb532: nop qword ptr [rax+rax*1+0x0]
0xb554: nop qword ptr [rax+0x0]
0xb5c8: nop qword ptr [rax+rax*1+0x0]
0xb5eb: nop qword ptr [rax+rax*1+0x0]
0xb6bb: nop qword ptr [rax+rax*1+0x0]
0xb738: nop qword ptr [rax+rax*1+0x0]
0xb74d: nop qword ptr [rax]
0xb7b7: test rax,rax
0xb7ba: mov rbx,qword ptr [rsp+0x8]
0xb7bf: jz 0xb84e
0xb7c5: mov rcx,r13
0xb7c8: mov rdx,rbx
0xb7cb: mov esi,0x1
0xb7d0: mov rdi,rax
0xb7d3: mov rbp,rax
0xb7d6: call 0x2ae0
0xb7db: cmp rax,rbx
0xb7de: jb 0xb820
0xb7e0: cmp rbp,r12
0xb7e3: jz 0xb7ed
0xb7e5: mov rdi,rbp
0xb7e8: call 0x2710
0xb7ed: cmp rbx,0x7fffffff
0xb7f4: jnbe 0xb843
0xb7f6: mov rcx,qword ptr [rsp+0x7e8]
0xb7fe: xor rcx,0x28
0xb807: mov eax,ebx
0xb809: jnz 0xb85d
0xb80b: add rsp,0x7f8
0xb812: pop rbx
0xb813: pop rbp
0xb814: pop r12
0xb816: pop r13
0xb818: ret
0xb819: nop qword ptr [rax+0x0]
0xb820: cmp rbp,r12
0xb823: mov ebx,0xffffffff
0xb828: jz 0xb7f6
0xb82a: call 0x2750
0xb82f: mov r13d,dword ptr [rax]
0xb832: mov r12,rax
0xb835: mov rdi,rbp
0xb838: call 0x2710
0xb83d: mov dword ptr [r12],r13d
0xb841: jmp 0xb7f6
0xb843: call 0x2750
0xb848: mov [rax],0x4b
0xb84e: mov rdi,r13
0xb851: mov ebx,0xffffffff
0xb856: call 0xd660
0xb85b: jmp 0xb7f6
0xb85d: call 0x2830
0xb870: push r12
0xb872: push rbp
0xb873: mov rbp,rdi
0xb876: push rbx
0xb877: call 0x2790
0xb87c: mov ebx,dword ptr [rbp+0x0]
0xb87f: mov rdi,rbp
0xb882: mov r12,rax
0xb885: call 0xd540
0xb88a: and ebx,0x20
0xb88d: test ebx,ebx
0xb88f: jnz 0xb8a8
0xb891: test eax,eax
0xb893: jz 0xb89f
0xb895: test r12,r12
0xb898: mov eax,0xffffffff
0xb89d: jz 0xb8d8
0xb89f: pop rbx
0xb8a0: pop rbp
0xb8a1: pop r12
0xb8a3: ret
0xb8a4: nop qword ptr [rax+0x0]
0xb8a8: test eax,eax
0xb8aa: jnz 0xb8c8
0xb8ac: call 0x2750
0xb8b1: mov [rax],0x0
0xb8b7: mov eax,0xffffffff
0xb8bc: pop rbx
0xb8bd: pop rbp
0xb8be: pop r12
0xb8c0: ret
0xb8c1: nop qword ptr [rax+0x0]
0xb8c8: pop rbx
0xb8c9: mov eax,0xffffffff
0xb8ce: pop rbp
0xb8cf: pop r12
0xb8d1: ret
0xb8d2: nop qword ptr [rax+rax*1+0x0]
0xb8d8: call 0x2750
0xb8dd: cmp [rax],0x9
0xb8e0: pop rbx
0xb8e1: pop rbp
0xb8e2: pop r12
0xb8e4: setnz al
0xb8e7: movzx eax,al
0xb8ea: neg eax
0xb8ec: ret
0xb92a: nop qword ptr [rax+rax*1+0x0]
0xb976: nop qword ptr [rax+rax*1+0x0]
0xb990: test rdx,rdx
0xb993: push r12
0xb995: push rbp
0xb996: mov rbp,rdi
0xb999: push rbx
0xb99a: jz 0xb9c9
0xb99c: mov r12,rsi
0xb99f: lea rbx,[rdx-0x1]
0xb9a3: call 0x2b20
0xb9a8: nop qword ptr [rax+rax*1+0x0]
0xb9b0: movzx ecx,byte ptr [r12+rbx*1+0x0]
0xb9b5: mov rdx,qword ptr [rax]
0xb9b8: mov edx,dword ptr [rdx+rcx*4+0x0]
0xb9bb: mov byte ptr [rbp+rbx*1+0x0],dl
0xb9bf: sub rbx,0x1
0xb9c3: cmp rbx,0xffffffff
0xb9c7: jnz 0xb9b0
0xb9c9: mov rax,rbp
0xb9cc: pop rbx
0xb9cd: pop rbp
0xb9ce: pop r12
0xb9d0: ret
0xb9e0: test rdx,rdx
0xb9e3: push r12
0xb9e5: push rbp
0xb9e6: mov rbp,rdi
0xb9e9: push rbx
0xb9ea: jz 0xba19
0xb9ec: mov r12,rsi
0xb9ef: lea rbx,[rdx-0x1]
0xb9f3: call 0x26e0
0xb9f8: nop qword ptr [rax+rax*1+0x0]
0xba00: movzx ecx,byte ptr [r12+rbx*1+0x0]
0xba05: mov rdx,qword ptr [rax]
0xba08: mov edx,dword ptr [rdx+rcx*4+0x0]
0xba0b: mov byte ptr [rbp+rbx*1+0x0],dl
0xba0f: sub rbx,0x1
0xba13: cmp rbx,0xffffffff
0xba17: jnz 0xba00
0xba19: mov rax,rbp
0xba1c: pop rbx
0xba1d: pop rbp
0xba1e: pop r12
0xba20: ret
0xbb2b: nop qword ptr [rax+rax*1+0x0]
0xbb30: test rbp,rbp
0xbb33: jz 0xbb5c
0xbb35: cmp r10d,0x1
0xbb39: jle 0xbb52
0xbb3b: lea r15,[r10-0x1]
0xbb3f: mov rdi,rbp
0xbb42: mov esi,0x20
0xbb47: mov rdx,r15
0xbb4a: add rbp,r15
0xbb4d: call 0x28f0
0xbb52: movzx eax,byte ptr [rbx]
0xbb55: add rbp,0x1
0xbb59: mov byte ptr [rbp-0x1],al
0xbb5c: add r14,r12
0xbb5f: mov r12,rbx
0xbb62: movzx eax,byte ptr [r12+0x1]
0xbb68: lea rbx,[r12+0x1]
0xbb6d: mov r10,0xffffffff
0xbb74: test al,al
0xbb76: jnz 0xbace
0xbb7c: test rbp,rbp
0xbb7f: jz 0xbaff
0xbb85: cmp [rsp+0x8],0x0
0xbb8b: jz 0xbaff
0xbb91: mov [rbp+0x0],0x0
0xbb95: jmp 0xbaff
0xbb9a: nop qword ptr [rax+rax*1+0x0]
0xbbb1: nop qword ptr [rax+0x0]
0xbbb8: movzx eax,byte ptr [rsp+0x2b]
0xbbbd: xor r8d,r8d
0xbbc0: xor r15d,r15d
0xbbc3: mov edx,0x1
0xbbc8: mov byte ptr [rsp+0x30],al
0xbbcc: add rbx,0x1
0xbbd0: movsx eax,byte ptr [rbx]
0xbbd3: lea ecx,[rax-0x23]
0xbbd6: mov esi,eax
0xbbd8: mov r9d,eax
0xbbdb: cmp cl,0x3c
0xbbde: jnbe 0xbc0c
0xbbe0: mov rdi,rdx
0xbbe3: mov r11,0x1152921504606856448
0xbbed: shl rdi,cl
0xbbf0: test rdi,r11
0xbbf3: jnz 0xbc60
0xbbf5: test cl,cl
0xbbf7: jz 0xbc70
0xbbf9: mov rcx,0x576460752303423488
0xbc03: test rdi,rcx
0xbc06: jnz 0xbd60
0xbc0c: lea edx,[rax-0x30]
0xbc0f: cmp edx,0x9
0xbc12: jbe 0xbd70
0xbc18: cmp sil,0x45
0xbc1c: jz 0xbc48
0xbc1e: xor r11d,r11d
0xbc21: cmp sil,0x4f
0xbc25: jz 0xbc48
0xbc27: cmp sil,0x7a
0xbc2b: jnbe 0xbc80
0xbc2d: lea rdx,[rip+0x6190]
0xbc34: movzx eax,sil
0xbc38: movsxd rax,dword ptr [rdx+rax*4+0x0]
0xbc3c: add rax,rdx
0xbc3f: jmp rax
0xbc41: nop qword ptr [rax+0x0]
0xbc48: movsx r9d,byte ptr [rbx+0x1]
0xbc4d: mov r11d,eax
0xbc50: add rbx,0x1
0xbc54: mov esi,r9d
0xbc57: jmp 0xbc27
0xbc59: nop qword ptr [rax+0x0]
0xbc60: mov r15d,eax
0xbc63: jmp 0xbbcc
0xbc68: nop qword ptr [rax+rax*1+0x0]
0xbc70: mov r8d,0x1
0xbc76: jmp 0xbbcc
0xbc7b: mov rbx,r9
0xbc7e: nop 
0xbc80: lea rax,[rbx-0x1]
0xbc84: mov r8d,0x1
0xbc8a: mov r9,rax
0xbc8d: lea rax,[rax-0x1]
0xbc91: add r8d,0x1
0xbc95: cmp [rax+0x1],0x25
0xbc99: jnz 0xbc8a
0xbc9b: mov rdx,qword ptr [rsp+0x8]
0xbca0: mov eax,0x0
0xbca5: movsxd r8,r8d
0xbca8: mov rcx,r8
0xbcab: mov r12,rbx
0xbcae: sub rdx,r14
0xbcb1: test r10d,r10d
0xbcb4: cmovns eax,r10d
0xbcb8: cwde 
0xbcba: cmp rax,r8
0xbcbd: cmovnb rcx,rax
0xbcc1: cmp rcx,rdx
0xbcc4: jnb 0xbafc
0xbcca: test rbp,rbp
0xbccd: jz 0xbd55
0xbcd3: cmp rax,r8
0xbcd6: jbe 0xbd25
0xbcd8: movsxd rdx,r10d
0xbcdb: mov qword ptr [rsp+0x48],r8
0xbce0: mov qword ptr [rsp+0x40],rcx
0xbce5: sub rdx,r8
0xbce8: cmp r15d,0x30
0xbcec: mov qword ptr [rsp+0x38],r9
0xbcf1: lea rbx,[rbp+rdx*1+0x0]
0xbcf6: jz 0xcf66
0xbcfc: cmp r15d,0x2b
0xbd00: jz 0xcf66
0xbd06: mov rdi,rbp
0xbd09: mov esi,0x20
0xbd0e: mov rbp,rbx
0xbd11: call 0x28f0
0xbd16: mov r8,qword ptr [rsp+0x48]
0xbd1b: mov rcx,qword ptr [rsp+0x40]
0xbd20: mov r9,qword ptr [rsp+0x38]
0xbd25: cmp [rsp+0x30],0x0
0xbd2a: mov qword ptr [rsp+0x38],rcx
0xbd2f: mov rdx,r8
0xbd32: mov qword ptr [rsp+0x30],r8
0xbd37: mov rsi,r9
0xbd3a: mov rdi,rbp
0xbd3d: jz 0xcf10
0xbd43: call 0xb9e0
0xbd48: mov r8,qword ptr [rsp+0x30]
0xbd4d: mov rcx,qword ptr [rsp+0x38]
0xbd52: add rbp,r8
0xbd55: add r14,rcx
0xbd58: jmp 0xbb62
0xbd5d: nop qword ptr [rax]
0xbd60: mov [rsp+0x30],0x1
0xbd65: jmp 0xbbcc
0xbd6a: nop qword ptr [rax+rax*1+0x0]
0xbd70: xor r10d,r10d
0xbd73: movsx eax,byte ptr [rbx+0x1]
0xbd77: cmp r10d,0xccccccc
0xbd7e: lea rcx,[rbx+0x1]
0xbd82: mov esi,eax
0xbd84: lea edx,[rax-0x30]
0xbd87: jnle 0xbdb6
0xbd89: movsx edi,byte ptr [rbx]
0xbd8c: jz 0xbdb0
0xbd8e: lea r9d,[r10+r10*4+0x0]
0xbd92: mov rbx,rcx
0xbd95: lea r10d,[rdi+r9*2-0x30]
0xbd9a: cmp edx,0x9
0xbd9d: jbe 0xbd73
0xbd9f: mov r9d,eax
0xbda2: jmp 0xbc18
0xbda7: nop qword ptr [rax+rax*1+0x0]
0xbdb0: cmp dil,0x37
0xbdb4: jle 0xbd8e
0xbdb6: cmp edx,0x9
0xbdb9: jnbe 0xbdd0
0xbdbb: movsx eax,byte ptr [rbx+0x2]
0xbdbf: mov r10d,0x7fffffff
0xbdc5: add rbx,0x2
0xbdc9: mov esi,eax
0xbdcb: lea edx,[rax-0x30]
0xbdce: jmp 0xbd9a
0xbdd0: mov r9d,eax
0xbdd3: mov rbx,rcx
0xbdd6: mov r10d,0x7fffffff
0xbddc: jmp 0xbc18
0xbde1: nop qword ptr [rax+0x0]
0xbde8: cmp r11d,0x4f
0xbdec: jz 0xbc80
0xbdf2: xor r8d,r8d
0xbdf5: mov eax,0x2520
0xbdfa: test r11d,r11d
0xbdfd: mov word ptr [rsp+0xab],ax
0xbe05: jnz 0xd4db
0xbe0b: lea rdx,[rsp+0xab]
0xbe13: mov r12,rbx
0xbe16: lea rax,[rdx+0x2]
0xbe1a: lea r9,[rsp+0xb0]
0xbe22: mov byte ptr [rax],sil
0xbe25: mov [rax+0x1],0x0
0xbe29: mov rcx,r13
0xbe2c: mov esi,0x400
0xbe31: mov dword ptr [rsp+0x38],r10d
0xbe36: mov rdi,r9
0xbe39: mov byte ptr [rsp+0x50],r8b
0xbe3e: mov dword ptr [rsp+0x48],r11d
0xbe43: mov qword ptr [rsp+0x40],r9
0xbe48: call 0x2a60
0xbe4d: test rax,rax
0xbe50: jz 0xbb62
0xbe56: movsxd r10,dword ptr [rsp+0x38]
0xbe5b: lea rcx,[rax-0x1]
0xbe5f: mov rdx,qword ptr [rsp+0x8]
0xbe64: mov eax,0x0
0xbe69: test r10d,r10d
0xbe6c: cmovns rax,r10
0xbe70: cmp rcx,rax
0xbe73: mov rbx,rax
0xbe76: cmovnb rbx,rcx
0xbe7a: sub rdx,r14
0xbe7d: cmp rdx,rbx
0xbe80: jbe 0xbafc
0xbe86: test rbp,rbp
0xbe89: jz 0xbf2e
0xbe8f: mov r11d,dword ptr [rsp+0x48]
0xbe94: mov r9,qword ptr [rsp+0x40]
0xbe99: movzx r8d,byte ptr [rsp+0x50]
0xbe9f: test r11d,r11d
0xbea2: jnz 0xbefe
0xbea4: cmp rcx,rax
0xbea7: jnb 0xbefe
0xbea9: movsxd rdx,r10d
0xbeac: mov qword ptr [rsp+0x50],r9
0xbeb1: mov qword ptr [rsp+0x48],rcx
0xbeb6: sub rdx,rcx
0xbeb9: cmp r15d,0x30
0xbebd: mov byte ptr [rsp+0x40],r8b
0xbec2: lea rax,[rbp+rdx*1+0x0]
0xbec7: mov qword ptr [rsp+0x38],rax
0xbecc: jz 0xcf3f
0xbed2: cmp r15d,0x2b
0xbed6: jz 0xcf3f
0xbedc: mov rdi,rbp
0xbedf: mov esi,0x20
0xbee4: call 0x28f0
0xbee9: movzx r8d,byte ptr [rsp+0x40]
0xbeef: mov rbp,qword ptr [rsp+0x38]
0xbef4: mov r9,qword ptr [rsp+0x50]
0xbef9: mov rcx,qword ptr [rsp+0x48]
0xbefe: test r8b,r8b
0xbf01: lea rsi,[r9+0x1]
0xbf05: mov rdx,rcx
0xbf08: jnz 0xcf28
0xbf0e: cmp [rsp+0x30],0x0
0xbf13: mov rdi,rbp
0xbf16: mov qword ptr [rsp+0x30],rcx
0xbf1b: jz 0xc791
0xbf21: call 0xb9e0
0xbf26: mov rcx,qword ptr [rsp+0x30]
0xbf2b: add rbp,rcx
0xbf2e: add r14,rbx
0xbf31: jmp 0xbb62
0xbf36: test r11d,r11d
0xbf39: jnz 0xbc80
0xbf3f: movzx eax,byte ptr [rsp+0x30]
0xbf44: test r8b,r8b
0xbf47: lea rdx,[rsp+0xab]
0xbf4f: mov r12,rbx
0xbf52: cmovne eax,r8d
0xbf56: xor r8d,r8d
0xbf59: xor r11d,r11d
0xbf5c: mov byte ptr [rsp+0x30],al
0xbf60: mov eax,0x2520
0xbf65: mov word ptr [rsp+0xab],ax
0xbf6d: lea rax,[rdx+0x2]
0xbf71: jmp 0xbe1a
0xbf76: cmp r11d,0x45
0xbf7a: jz 0xbc80
0xbf80: mov ecx,dword ptr [r13+0x0]
0xbf84: mov edi,0x2
0xbf89: nop qword ptr [rax+0x0]
0xbf90: mov eax,ecx
0xbf92: xor esi,esi
0xbf94: mov [rsp+0x40],0x0
0xbf99: shr eax,0x1f
0xbf9c: mov dword ptr [rsp+0x38],eax
0xbfa0: mov eax,ecx
0xbfa2: not eax
0xbfa4: shr eax,0x1f
0xbfa7: cmp r11d,0x4f
0xbfab: jnz 0xce30
0xbfb1: test al,al
0xbfb3: jz 0xce30
0xbfb9: mov esi,r9d
0xbfbc: mov edx,0x2520
0xbfc1: xor r8d,r8d
0xbfc4: mov word ptr [rsp+0xab],dx
0xbfcc: lea rdx,[rsp+0xab]
0xbfd4: mov byte ptr [rsp+0xad],r11b
0xbfdc: mov r12,rbx
0xbfdf: mov r11d,edi
0xbfe2: lea rax,[rdx+0x3]
0xbfe6: jmp 0xbe1a
0xbfeb: test r10d,r10d
0xbfee: mov ecx,0x0
0xbff3: mov eax,0x1
0xbff8: cmovns ecx,r10d
0xbffc: movsxd rcx,ecx
0xbfff: test rcx,rcx
0xc002: cmove rcx,rax
0xc006: mov rax,qword ptr [rsp+0x8]
0xc00b: sub rax,r14
0xc00e: cmp rax,rcx
0xc011: jbe 0xbafc
0xc017: test rbp,rbp
0xc01a: jz 0xc068
0xc01c: cmp r10d,0x1
0xc020: jle 0xc05c
0xc022: movsxd rdx,r10d
0xc025: mov qword ptr [rsp+0x30],rcx
0xc02a: sub rdx,0x1
0xc02e: cmp r15d,0x30
0xc032: lea r12,[rbp+rdx*1+0x0]
0xc037: jz 0xd354
0xc03d: cmp r15d,0x2b
0xc041: jz 0xd354
0xc047: mov rdi,rbp
0xc04a: mov esi,0x20
0xc04f: mov rbp,r12
0xc052: call 0x28f0
0xc057: mov rcx,qword ptr [rsp+0x30]
0xc05c: mov [rbp+0x0],0x9
0xc060: add rbp,0x1
0xc064: nop qword ptr [rax+0x0]
0xc068: add r14,rcx
0xc06b: mov r12,rbx
0xc06e: jmp 0xbb62
0xc073: mov eax,0x1
0xc078: test r8b,r8b
0xc07b: jnz 0xcfab
0xc081: mov r8d,eax
0xc084: mov esi,0x70
0xc089: jmp 0xbdf5
0xc08e: lea rax,[rip+0x5d17]
0xc095: mov [rsp+0x38],0xffffffff
0xc09d: mov qword ptr [rsp+0x40],rax
0xc0a2: movzx r8d,byte ptr [rsp+0x30]
0xc0a8: mov eax,dword ptr [rsp+0x518]
0xc0af: mov rsi,0xffffffff
0xc0b6: mov dword ptr [rsp+0x48],r10d
0xc0bb: xor edi,edi
0xc0bd: mov r9d,r15d
0xc0c0: mov rcx,r13
0xc0c3: mov dword ptr [rsp+0x30],r8d
0xc0c8: push rax
0xc0c9: push qword ptr [rsp+0x18]
0xc0cd: push qword ptr [rsp+0x28]
0xc0d1: mov eax,dword ptr [rsp+0x50]
0xc0d5: push rax
0xc0d6: mov rdx,qword ptr [rsp+0x60]
0xc0db: call 0xba30
0xc0e0: add rsp,0x20
0xc0e4: movsxd r10,dword ptr [rsp+0x48]
0xc0e9: mov r11,rax
0xc0ec: mov rsi,qword ptr [rsp+0x8]
0xc0f1: mov eax,0x0
0xc0f6: test r10d,r10d
0xc0f9: cmovns rax,r10
0xc0fd: cmp r11,rax
0xc100: mov r12,rax
0xc103: cmovnb r12,r11
0xc107: sub rsi,r14
0xc10a: cmp rsi,r12
0xc10d: mov qword ptr [rsp+0x48],rsi
0xc112: jbe 0xbafc
0xc118: test rbp,rbp
0xc11b: jz 0xbb5c
0xc121: cmp r11,rax
0xc124: jnb 0xc166
0xc126: movsxd rdx,r10d
0xc129: mov qword ptr [rsp+0x58],r11
0xc12e: sub rdx,r11
0xc131: cmp r15d,0x30
0xc135: lea rax,[rbp+rdx*1+0x0]
0xc13a: mov qword ptr [rsp+0x50],rax
0xc13f: jz 0xd23c
0xc145: cmp r15d,0x2b
0xc149: jz 0xd23c
0xc14f: mov rdi,rbp
0xc152: mov esi,0x20
0xc157: call 0x28f0
0xc15c: mov rbp,qword ptr [rsp+0x50]
0xc161: mov r11,qword ptr [rsp+0x58]
0xc166: mov eax,dword ptr [rsp+0x518]
0xc16d: mov qword ptr [rsp+0x50],r11
0xc172: mov rdi,rbp
0xc175: mov r9d,r15d
0xc178: mov rcx,r13
0xc17b: push rax
0xc17c: push qword ptr [rsp+0x18]
0xc180: push qword ptr [rsp+0x28]
0xc184: mov eax,dword ptr [rsp+0x50]
0xc188: push rax
0xc189: mov r8d,dword ptr [rsp+0x50]
0xc18e: mov rdx,qword ptr [rsp+0x60]
0xc193: mov rsi,qword ptr [rsp+0x68]
0xc198: call 0xba30
0xc19d: mov r11,qword ptr [rsp+0x70]
0xc1a2: add rsp,0x20
0xc1a6: add rbp,r11
0xc1a9: jmp 0xbb5c
0xc1ae: mov rdx,qword ptr [rsp+0x8]
0xc1b3: mov eax,0x0
0xc1b8: mov ecx,0x1
0xc1bd: sub rdx,r14
0xc1c0: test r10d,r10d
0xc1c3: cmovns eax,r10d
0xc1c7: cwde 
0xc1c9: test rax,rax
0xc1cc: cmovne rcx,rax
0xc1d0: test r11d,r11d
0xc1d3: jnz 0xd208
0xc1d9: cmp rcx,rdx
0xc1dc: jnb 0xbafc
0xc1e2: test rbp,rbp
0xc1e5: jz 0xc068
0xc1eb: cmp r10d,0x1
0xc1ef: jle 0xc22e
0xc1f1: movsxd rdx,r10d
0xc1f4: mov qword ptr [rsp+0x30],rcx
0xc1f9: sub rdx,0x1
0xc1fd: cmp r15d,0x30
0xc201: lea r12,[rbp+rdx*1+0x0]
0xc206: jz 0xd475
0xc20c: cmp r15d,0x2b
0xc210: mov esi,0x20
0xc215: jz 0xd475
0xc21b: mov rdi,rbp
0xc21e: mov rbp,r12
0xc221: call 0x28f0
0xc226: movzx esi,byte ptr [rbx]
0xc229: mov rcx,qword ptr [rsp+0x30]
0xc22e: mov byte ptr [rbp+0x0],sil
0xc232: add rbp,0x1
0xc236: jmp 0xc068
0xc23b: lea rax,[rip+0x3f03]
0xc242: mov [rsp+0x38],0xffffffff
0xc24a: mov qword ptr [rsp+0x40],rax
0xc24f: jmp 0xc0a2
0xc254: cmp r11d,0x45
0xc258: jz 0xbc80
0xc25e: mov esi,dword ptr [r13+0x1c]
0xc262: sub esi,dword ptr [r13+0x18]
0xc266: mov edx,0x92492493
0xc26b: add esi,0x7
0xc26e: mov eax,esi
0xc270: imul edx,eax,edx
0xc272: lea ecx,[rdx+rsi*1+0x0]
0xc275: sar esi,0x1f
0xc278: mov edi,0x2
0xc27d: sar ecx,0x2
0xc280: sub ecx,esi
0xc282: jmp 0xbf90
0xc287: cmp r11d,0x45
0xc28b: jz 0xcfba
0xc291: cmp r11d,0x4f
0xc295: jz 0xbc80
0xc29b: mov eax,dword ptr [r13+0x14]
0xc29f: cmp eax,0xfffff894
0xc2a4: lea ecx,[rax+0x76c]
0xc2aa: setl qword ptr [rsp+0x38]
0xc2af: cmp eax,0xfffff894
0xc2b4: setnl al
0xc2b7: test r15d,r15d
0xc2ba: jnz 0xd139
0xc2c0: mov r15d,dword ptr [rsp+0x2c]
0xc2c5: cmp r15d,0x2b
0xc2c9: jz 0xd143
0xc2cf: mov [rsp+0x40],0x0
0xc2d4: mov edi,0x4
0xc2d9: xor esi,esi
0xc2db: jmp 0xbfa7
0xc2e0: movzx esi,byte ptr [rsp+0x30]
0xc2e5: mov rdi,qword ptr [rsp+0x20]
0xc2ea: test r8b,r8b
0xc2ed: mov eax,0x0
0xc2f2: mov dword ptr [rsp+0x38],r10d
0xc2f7: mov byte ptr [rsp+0x40],r8b
0xc2fc: cmovne esi,eax
0xc2ff: mov byte ptr [rsp+0x30],sil
0xc304: call 0x2810
0xc309: movsxd r10,dword ptr [rsp+0x38]
0xc30e: mov r12,rax
0xc311: mov rdx,qword ptr [rsp+0x8]
0xc316: mov eax,0x0
0xc31b: test r10d,r10d
0xc31e: cmovns rax,r10
0xc322: cmp r12,rax
0xc325: mov rcx,rax
0xc328: cmovnb rcx,r12
0xc32c: sub rdx,r14
0xc32f: cmp rdx,rcx
0xc332: jbe 0xbafc
0xc338: test rbp,rbp
0xc33b: jz 0xc068
0xc341: cmp r12,rax
0xc344: movzx r8d,byte ptr [rsp+0x40]
0xc34a: jnb 0xc397
0xc34c: movsxd rdx,r10d
0xc34f: mov qword ptr [rsp+0x48],rcx
0xc354: mov byte ptr [rsp+0x40],r8b
0xc359: sub rdx,r12
0xc35c: cmp r15d,0x30
0xc360: lea rax,[rbp+rdx*1+0x0]
0xc365: mov qword ptr [rsp+0x38],rax
0xc36a: jz 0xd42f
0xc370: cmp r15d,0x2b
0xc374: jz 0xd42f
0xc37a: mov rdi,rbp
0xc37d: mov esi,0x20
0xc382: call 0x28f0
0xc387: movzx r8d,byte ptr [rsp+0x40]
0xc38d: mov rbp,qword ptr [rsp+0x38]
0xc392: mov rcx,qword ptr [rsp+0x48]
0xc397: test r8b,r8b
0xc39a: jnz 0xd397
0xc3a0: cmp [rsp+0x30],0x0
0xc3a5: mov rdx,r12
0xc3a8: mov qword ptr [rsp+0x30],rcx
0xc3ad: mov rsi,qword ptr [rsp+0x20]
0xc3b2: mov rdi,rbp
0xc3b5: jz 0xd388
0xc3bb: call 0xb9e0
0xc3c0: mov rcx,qword ptr [rsp+0x30]
0xc3c5: add rbp,r12
0xc3c8: jmp 0xc068
0xc3cd: cmp r11d,0x45
0xc3d1: jz 0xcfba
0xc3d7: mov esi,dword ptr [r13+0x14]
0xc3db: mov edx,0x51eb851f
0xc3e0: mov eax,esi
0xc3e2: imul edx,eax,edx
0xc3e4: mov eax,esi
0xc3e6: sar eax,0x1f
0xc3e9: mov ecx,edx
0xc3eb: sar ecx,0x5
0xc3ee: sub ecx,eax
0xc3f0: mov eax,esi
0xc3f2: imul ecx,ecx,0x64
0xc3f5: sub eax,ecx
0xc3f7: mov ecx,eax
0xc3f9: jns 0xc409
0xc3fb: neg eax
0xc3fd: add ecx,0x64
0xc400: cmp esi,0xfffff893
0xc406: cmovng ecx,eax
0xc409: test r15d,r15d
0xc40c: jz 0xca3a
0xc412: mov eax,0x1
0xc417: mov [rsp+0x38],0x0
0xc41c: cmp r15d,0x2b
0xc420: jz 0xcb93
0xc426: mov [rsp+0x40],0x0
0xc42b: mov edi,0x2
0xc430: xor esi,esi
0xc432: jmp 0xbfa7
0xc437: movzx eax,byte ptr [rsp+0x30]
0xc43c: test r8b,r8b
0xc43f: cmovne eax,r8d
0xc443: cmp r11d,0x45
0xc447: jz 0xd3b6
0xc44d: mov esi,r9d
0xc450: mov byte ptr [rsp+0x30],al
0xc454: xor r8d,r8d
0xc457: jmp 0xbdf5
0xc45c: xor r8d,r8d
0xc45f: mov ecx,dword ptr [r13+0x20]
0xc463: test ecx,ecx
0xc465: js 0xd10e
0xc46b: mov rcx,qword ptr [r13+0x28]
0xc46f: mov [rsp+0x38],0x1
0xc474: test ecx,ecx
0xc476: js 0xc48c
0xc478: mov [rsp+0x38],0x0
0xc47d: jnz 0xc48c
0xc47f: mov rax,qword ptr [rsp+0x20]
0xc484: cmp [rax],0x2d
0xc487: setz qword ptr [rsp+0x38]
0xc48c: mov eax,ecx
0xc48e: mov edx,0x91a2b3c5
0xc493: mov esi,0x88888889
0xc498: imul edx,eax,edx
0xc49a: mov eax,ecx
0xc49c: sar eax,0x1f
0xc49f: mov dword ptr [rsp+0x40],eax
0xc4a3: lea r12d,[rdx+rcx*1+0x0]
0xc4a7: sar r12d,0xb
0xc4ab: sub r12d,eax
0xc4ae: mov eax,ecx
0xc4b0: imul edx,eax,esi
0xc4b2: lea edi,[rdx+rcx*1+0x0]
0xc4b5: sar edi,0x5
0xc4b8: sub edi,dword ptr [rsp+0x40]
0xc4bc: mov eax,edi
0xc4be: imul edx,eax,esi
0xc4c0: mov eax,edi
0xc4c2: sar eax,0x1f
0xc4c5: lea esi,[rdx+rdi*1+0x0]
0xc4c8: sar esi,0x5
0xc4cb: sub esi,eax
0xc4cd: mov eax,edi
0xc4cf: imul esi,esi,0x3c
0xc4d2: imul edi,edi,0x3c
0xc4d5: sub eax,esi
0xc4d7: sub ecx,edi
0xc4d9: cmp r8,0x1
0xc4dd: mov esi,eax
0xc4df: jz 0xd332
0xc4e5: jb 0xd410
0xc4eb: cmp r8,0x2
0xc4ef: jz 0xd2e5
0xc4f5: cmp r8,0x3
0xc4f9: jnz 0xd3bf
0xc4ff: test ecx,ecx
0xc501: jnz 0xd2e5
0xc507: test eax,eax
0xc509: jnz 0xd332
0xc50f: movzx eax,byte ptr [rsp+0x38]
0xc514: mov ecx,r12d
0xc517: mov [rsp+0x40],0x1
0xc51c: mov edi,0x3
0xc521: xor eax,0x1
0xc524: jmp 0xbfa7
0xc529: nop qword ptr [rax+0x0]
0xc530: cmp r11d,0x4f
0xc534: mov eax,dword ptr [r13+0x10]
0xc538: mov edi,0x1
0xc53d: jz 0xbfbc
0xc543: lea edx,[rax+rax*4+0x0]
0xc546: mov [rsp+0x40],0x0
0xc54b: mov [rsp+0x38],0x0
0xc550: xor esi,esi
0xc552: lea ecx,[rax+rdx*2+0x0]
0xc555: sar ecx,0x5
0xc558: add ecx,0x1
0xc55b: nop qword ptr [rax+rax*1+0x0]
0xc560: lea r9,[rsp+0xb0]
0xc568: mov r12d,0xcccccccd
0xc56e: lea r11,[r9+0x17]
0xc572: nop qword ptr [rax+rax*1+0x0]
0xc578: test sil,0x1
0xc57c: lea r8,[r11-0x1]
0xc580: jz 0xc591
0xc582: lea rax,[r11-0x2]
0xc586: mov [r11-0x1],0x3a
0xc58b: mov r11,r8
0xc58e: mov r8,rax
0xc591: mov eax,ecx
0xc593: sar esi,0x1
0xc595: mul r12d
0xc598: shr edx,0x3
0xc59b: lea eax,[rdx+rdx*4+0x0]
0xc59e: add eax,eax
0xc5a0: sub ecx,eax
0xc5a2: mov eax,esi
0xc5a4: add ecx,0x30
0xc5a7: or eax,edx
0xc5a9: mov byte ptr [r11-0x1],cl
0xc5ad: mov ecx,edx
0xc5af: mov r11,r8
0xc5b2: jnz 0xc578
0xc5b4: cmp r10d,edi
0xc5b7: cmovnl edi,r10d
0xc5bb: cmp [rsp+0x38],0x0
0xc5c0: mov dword ptr [rsp+0x48],edi
0xc5c4: jnz 0xce48
0xc5ca: cmp [rsp+0x40],0x0
0xc5cf: jz 0xc869
0xc5d5: cmp r15d,0x2d
0xc5d9: jz 0xd103
0xc5df: mov [rsp+0x38],0x2b
0xc5e4: mov eax,dword ptr [rsp+0x48]
0xc5e8: lea rcx,[r9+0x17]
0xc5ec: mov rdx,qword ptr [rsp+0x8]
0xc5f1: sub rcx,r8
0xc5f4: lea r12d,[rax-0x1]
0xc5f8: sub rdx,r14
0xc5fb: sub r12d,ecx
0xc5fe: test r12d,r12d
0xc601: jle 0xd04c
0xc607: cmp r15d,0x5f
0xc60b: jz 0xcfc6
0xc611: movsxd rax,dword ptr [rsp+0x48]
0xc616: cmp rax,rdx
0xc619: mov rdi,rax
0xc61c: jnb 0xbafc
0xc622: test r10d,r10d
0xc625: mov eax,0x0
0xc62a: mov esi,0x1
0xc62f: cmovns eax,r10d
0xc633: cwde 
0xc635: test rax,rax
0xc638: cmovne rsi,rax
0xc63c: cmp rsi,rdx
0xc63f: jnb 0xbafc
0xc645: add r14,rsi
0xc648: test rbp,rbp
0xc64b: movsxd r9,r12d
0xc64e: mov r12,rbx
0xc651: jz 0xc6f4
0xc657: test edi,edi
0xc659: jnz 0xc6af
0xc65b: cmp rax,0x1
0xc65f: jbe 0xc6af
0xc661: movsxd rdx,r10d
0xc664: mov qword ptr [rsp+0x58],r8
0xc669: mov qword ptr [rsp+0x50],r9
0xc66e: sub rdx,0x1
0xc672: cmp r15d,0x30
0xc676: mov qword ptr [rsp+0x40],rcx
0xc67b: lea r12,[rbp+rdx*1+0x0]
0xc680: jz 0xd451
0xc686: cmp r15d,0x2b
0xc68a: jz 0xd451
0xc690: mov rdi,rbp
0xc693: mov esi,0x20
0xc698: mov rbp,r12
0xc69b: call 0x28f0
0xc6a0: mov r8,qword ptr [rsp+0x58]
0xc6a5: mov r9,qword ptr [rsp+0x50]
0xc6aa: mov rcx,qword ptr [rsp+0x40]
0xc6af: movzx eax,byte ptr [rsp+0x38]
0xc6b4: add rbp,0x1
0xc6b8: mov r12,rbx
0xc6bb: mov byte ptr [rbp-0x1],al
0xc6be: test rbp,rbp
0xc6c1: jz 0xc6f4
0xc6c3: mov rdx,r9
0xc6c6: mov rdi,rbp
0xc6c9: mov esi,0x30
0xc6ce: mov qword ptr [rsp+0x50],r8
0xc6d3: mov qword ptr [rsp+0x40],rcx
0xc6d8: mov qword ptr [rsp+0x38],r9
0xc6dd: call 0x28f0
0xc6e2: mov r9,qword ptr [rsp+0x38]
0xc6e7: mov r8,qword ptr [rsp+0x50]
0xc6ec: mov rcx,qword ptr [rsp+0x40]
0xc6f1: add rbp,r9
0xc6f4: mov rdx,qword ptr [rsp+0x8]
0xc6f9: add r14,r9
0xc6fc: xor r11d,r11d
0xc6ff: xor r10d,r10d
0xc702: sub rdx,r14
0xc705: cmp rcx,r11
0xc708: mov rbx,r11
0xc70b: cmovnb rbx,rcx
0xc70f: cmp rbx,rdx
0xc712: jnb 0xbafc
0xc718: test rbp,rbp
0xc71b: jz 0xbf2e
0xc721: mov esi,dword ptr [rsp+0x48]
0xc725: test esi,esi
0xc727: jnz 0xc778
0xc729: cmp rcx,r11
0xc72c: jnb 0xc778
0xc72e: movsxd rdx,r10d
0xc731: mov qword ptr [rsp+0x48],r8
0xc736: mov qword ptr [rsp+0x40],rcx
0xc73b: sub rdx,rcx
0xc73e: cmp r15d,0x30
0xc742: lea rax,[rbp+rdx*1+0x0]
0xc747: mov qword ptr [rsp+0x38],rax
0xc74c: jz 0xcf8a
0xc752: cmp r15d,0x2b
0xc756: jz 0xcf8a
0xc75c: mov rdi,rbp
0xc75f: mov esi,0x20
0xc764: call 0x28f0
0xc769: mov rbp,qword ptr [rsp+0x38]
0xc76e: mov r8,qword ptr [rsp+0x48]
0xc773: mov rcx,qword ptr [rsp+0x40]
0xc778: cmp [rsp+0x30],0x0
0xc77d: mov rdx,rcx
0xc780: mov qword ptr [rsp+0x30],rcx
0xc785: mov rsi,r8
0xc788: mov rdi,rbp
0xc78b: jnz 0xbf21
0xc791: call 0x2970
0xc796: mov rcx,qword ptr [rsp+0x30]
0xc79b: jmp 0xbf2b
0xc7a0: movdqu xmm0,[r13+0x0]
0xc7a6: lea rsi,[rsp+0x70]
0xc7ab: mov rax,qword ptr [r13+0x30]
0xc7af: mov rdi,qword ptr [rsp+0x10]
0xc7b4: movaps [rsp+0x70],xmm0
0xc7b9: mov dword ptr [rsp+0x38],r10d
0xc7be: movdqu xmm0,[r13+0x10]
0xc7c4: mov qword ptr [rsp+0xa0],rax
0xc7cc: movaps [rsp+0x80],xmm0
0xc7d4: movdqu xmm0,[r13+0x20]
0xc7da: movaps [rsp+0x90],xmm0
0xc7e2: call 0xb620
0xc7e7: lea r9,[rsp+0xb0]
0xc7ef: mov rsi,rax
0xc7f2: mov rcx,rax
0xc7f5: mov r11,0x7378697629483820647
0xc7ff: mov edi,0x30
0xc804: mov r10d,dword ptr [rsp+0x38]
0xc809: lea r8,[r9+0x17]
0xc80d: nop qword ptr [rax]
0xc810: mov rax,rcx
0xc813: imul rdx,rax,r11
0xc816: mov rax,rcx
0xc819: sar rax,0x3f
0xc81d: sar rdx,0x2
0xc821: sub rdx,rax
0xc824: mov rax,rdx
0xc827: lea rdx,[rdx+rdx*4+0x0]
0xc82b: add rdx,rdx
0xc82e: sub rcx,rdx
0xc831: mov rdx,rcx
0xc834: mov rcx,rax
0xc837: mov eax,edi
0xc839: sub eax,edx
0xc83b: add edx,0x30
0xc83e: test rsi,rsi
0xc841: cmovs edx,eax
0xc844: sub r8,0x1
0xc848: test rcx,rcx
0xc84b: mov byte ptr [r8],dl
0xc84e: jnz 0xc810
0xc850: test r10d,r10d
0xc853: mov edi,0x1
0xc858: cmovnl edi,r10d
0xc85c: test rsi,rsi
0xc85f: mov dword ptr [rsp+0x48],edi
0xc863: js 0xce48
0xc869: mov rdx,qword ptr [rsp+0x8]
0xc86e: lea rcx,[r9+0x17]
0xc872: sub rcx,r8
0xc875: sub rdx,r14
0xc878: cmp r15d,0x2d
0xc87c: jz 0xc88f
0xc87e: mov r12d,dword ptr [rsp+0x48]
0xc883: sub r12d,ecx
0xc886: test r12d,r12d
0xc889: jnle 0xd219
0xc88f: test r10d,r10d
0xc892: mov r11d,0x0
0xc898: mov r12,rbx
0xc89b: cmovns r11d,r10d
0xc89f: movsxd r11,r11d
0xc8a2: jmp 0xc705
0xc8a7: movzx eax,byte ptr [rbx+0x1]
0xc8ab: lea rdx,[rbx+0x1]
0xc8af: cmp al,0x3a
0xc8b1: jz 0xd3ca
0xc8b7: mov r8d,0x1
0xc8bd: cmp al,0x7a
0xc8bf: jnz 0xbc80
0xc8c5: mov rbx,rdx
0xc8c8: jmp 0xc45f
0xc8cd: cmp r11d,0x45
0xc8d1: jz 0xbc80
0xc8d7: mov edi,dword ptr [r13+0x14]
0xc8db: mov r8d,dword ptr [r13+0x1c]
0xc8df: mov edx,0x92492493
0xc8e4: mov eax,edi
0xc8e6: mov ecx,r8d
0xc8e9: sar eax,0x1f
0xc8ec: and eax,0x190
0xc8f1: lea r12d,[rdi+rax*1-0x64]
0xc8f6: mov eax,dword ptr [r13+0x18]
0xc8fa: sub ecx,eax
0xc8fc: mov dword ptr [rsp+0x38],eax
0xc900: add ecx,0x17e
0xc906: mov eax,ecx
0xc908: imul edx,eax,edx
0xc90a: lea eax,[rdx+rcx*1+0x0]
0xc90d: mov edx,ecx
0xc90f: sar edx,0x1f
0xc912: sar eax,0x2
0xc915: sub eax,edx
0xc917: lea edx,[rax*8+0x0]
0xc91e: sub edx,eax
0xc920: mov eax,edx
0xc922: mov edx,r8d
0xc925: sub edx,ecx
0xc927: lea eax,[rdx+rax*1+0x3]
0xc92b: test eax,eax
0xc92d: mov dword ptr [rsp+0x40],eax
0xc931: js 0xd258
0xc937: test r12b,0x3
0xc93b: mov eax,0x16d
0xc940: jnz 0xc987
0xc942: mov ecx,0x51eb851f
0xc947: mov eax,r12d
0xc94a: imul edx,eax,ecx
0xc94c: mov eax,r12d
0xc94f: sar eax,0x1f
0xc952: mov dword ptr [rsp+0x48],eax
0xc956: mov ecx,edx
0xc958: sar edx,0x5
0xc95b: sub edx,eax
0xc95d: mov eax,0x16e
0xc962: imul edx,edx,0x64
0xc965: cmp r12d,edx
0xc968: jnz 0xc987
0xc96a: sar ecx,0x7
0xc96d: mov eax,ecx
0xc96f: sub eax,dword ptr [rsp+0x48]
0xc973: imul eax,eax,0x190
0xc979: cmp r12d,eax
0xc97c: setz al
0xc97f: movzx eax,al
0xc982: add eax,0x16d
0xc987: sub r8d,eax
0xc98a: mov edx,0x92492493
0xc98f: mov ecx,r8d
0xc992: sub ecx,dword ptr [rsp+0x38]
0xc996: add ecx,0x17e
0xc99c: mov eax,ecx
0xc99e: sub r8d,ecx
0xc9a1: imul edx,eax,edx
0xc9a3: lea eax,[rdx+rcx*1+0x0]
0xc9a6: mov edx,ecx
0xc9a8: sar edx,0x1f
0xc9ab: sar eax,0x2
0xc9ae: sub eax,edx
0xc9b0: lea edx,[rax*8+0x0]
0xc9b7: sub edx,eax
0xc9b9: lea ecx,[r8+rdx*1+0x3]
0xc9be: mov r8d,0x1
0xc9c4: test ecx,ecx
0xc9c6: jns 0xc9cf
0xc9c8: mov ecx,dword ptr [rsp+0x40]
0xc9cc: xor r8d,r8d
0xc9cf: cmp sil,0x47
0xc9d3: jz 0xd116
0xc9d9: cmp sil,0x67
0xc9dd: jnz 0xd30f
0xc9e3: mov ecx,0x51eb851f
0xc9e8: mov eax,edi
0xc9ea: mov esi,edi
0xc9ec: imul edx,eax,ecx
0xc9ee: mov eax,edx
0xc9f0: mov edx,edi
0xc9f2: sar edx,0x1f
0xc9f5: sar eax,0x5
0xc9f8: sub eax,edx
0xc9fa: imul eax,eax,0x64
0xc9fd: sub esi,eax
0xc9ff: add esi,r8d
0xca02: mov eax,esi
0xca04: imul edx,eax,ecx
0xca06: mov eax,esi
0xca08: sar eax,0x1f
0xca0b: mov ecx,edx
0xca0d: sar ecx,0x5
0xca10: sub ecx,eax
0xca12: imul ecx,ecx,0x64
0xca15: sub esi,ecx
0xca17: mov ecx,esi
0xca19: jns 0xc409
0xca1f: mov eax,0xfffff894
0xca24: sub eax,r8d
0xca27: cmp edi,eax
0xca29: jnl 0xd4ca
0xca2f: neg ecx
0xca31: test r15d,r15d
0xca34: jnz 0xc412
0xca3a: mov r15d,dword ptr [rsp+0x2c]
0xca3f: mov eax,0x1
0xca44: cmp r15d,0x2b
0xca48: jz 0xd4aa
0xca4e: mov [rsp+0x40],0x0
0xca53: mov [rsp+0x38],0x0
0xca58: mov edi,0x2
0xca5d: xor esi,esi
0xca5f: jmp 0xbfa7
0xca64: cmp r11d,0x45
0xca68: jz 0xbc80
0xca6e: mov ecx,dword ptr [r13+0xc]
0xca72: mov edi,0x2
0xca77: jmp 0xbf90
0xca7c: mov eax,dword ptr [r13+0x18]
0xca80: mov edx,0x92492493
0xca85: mov edi,0x1
0xca8a: lea ecx,[rax+0x6]
0xca8d: mov eax,ecx
0xca8f: imul edx,eax,edx
0xca91: lea eax,[rdx+rcx*1+0x0]
0xca94: mov edx,ecx
0xca96: sar edx,0x1f
0xca99: sar eax,0x2
0xca9c: sub eax,edx
0xca9e: lea edx,[rax*8+0x0]
0xcaa5: sub edx,eax
0xcaa7: sub ecx,edx
0xcaa9: add ecx,0x1
0xcaac: jmp 0xbf90
0xcab1: cmp r11d,0x45
0xcab5: jz 0xbc80
0xcabb: mov ecx,dword ptr [r13+0x18]
0xcabf: mov edi,0x1
0xcac4: jmp 0xbf90
0xcac9: cmp r11d,0x45
0xcacd: jz 0xbc80
0xcad3: mov eax,dword ptr [r13+0x18]
0xcad7: mov ecx,0x92492493
0xcadc: lea esi,[rax+0x6]
0xcadf: mov eax,esi
0xcae1: imul edx,eax,ecx
0xcae3: lea eax,[rdx+rsi*1+0x0]
0xcae6: mov edx,esi
0xcae8: sar edx,0x1f
0xcaeb: sar eax,0x2
0xcaee: sub eax,edx
0xcaf0: lea edx,[rax*8+0x0]
0xcaf7: sub edx,eax
0xcaf9: mov eax,edx
0xcafb: mov edx,dword ptr [r13+0x1c]
0xcaff: sub eax,esi
0xcb01: lea esi,[rax+rdx*1+0x7]
0xcb05: mov eax,esi
0xcb07: imul edx,eax,ecx
0xcb09: jmp 0xc272
0xcb0e: cmp r11d,0x45
0xcb12: jz 0xbc80
0xcb18: test r8b,r8b
0xcb1b: jz 0xbdf5
0xcb21: mov byte ptr [rsp+0x30],r8b
0xcb26: jmp 0xbdf2
0xcb2b: cmp r11d,0x45
0xcb2f: jz 0xcfba
0xcb35: mov esi,dword ptr [r13+0x14]
0xcb39: mov edx,0x51eb851f
0xcb3e: mov eax,esi
0xcb40: imul edx,eax,edx
0xcb42: mov eax,edx
0xcb44: mov edx,esi
0xcb46: sar edx,0x1f
0xcb49: sar eax,0x5
0xcb4c: sub eax,edx
0xcb4e: mov edx,esi
0xcb50: lea ecx,[rax+0x13]
0xcb53: imul eax,eax,0x64
0xcb56: sub edx,eax
0xcb58: mov eax,edx
0xcb5a: shr eax,0x1f
0xcb5d: test ecx,ecx
0xcb5f: setnle dl
0xcb62: and eax,edx
0xcb64: cmp esi,0xfffff894
0xcb6a: setl qword ptr [rsp+0x38]
0xcb6f: sub ecx,eax
0xcb71: cmp esi,0xfffff894
0xcb77: setnl al
0xcb7a: test r15d,r15d
0xcb7d: jnz 0xc41c
0xcb83: cmp [rsp+0x2c],0x2b
0xcb88: mov r15d,dword ptr [rsp+0x2c]
0xcb8d: jnz 0xc426
0xcb93: mov edi,0x2
0xcb98: mov edx,0x63
0xcb9d: cmp edx,ecx
0xcb9f: mov [rsp+0x40],0x1
0xcba4: mov r15d,0x2b
0xcbaa: jb 0xc2d9
0xcbb0: cmp r10d,edi
0xcbb3: mov r15d,0x2b
0xcbb9: setnle qword ptr [rsp+0x40]
0xcbbe: xor esi,esi
0xcbc0: jmp 0xbfa7
0xcbc5: test r11d,r11d
0xcbc8: jnz 0xbc80
0xcbce: lea rax,[rip+0x51e6]
0xcbd5: mov [rsp+0x38],0xffffffff
0xcbdd: mov qword ptr [rsp+0x40],rax
0xcbe2: jmp 0xc0a2
0xcbe7: test r11d,r11d
0xcbea: jnz 0xbc80
0xcbf0: test r15d,r15d
0xcbf3: jnz 0xd3ed
0xcbf9: test r10d,r10d
0xcbfc: jns 0xd3ed
0xcc02: lea rax,[rip+0x51a9]
0xcc09: mov [rsp+0x38],0x4
0xcc11: mov r15d,0x2b
0xcc17: mov qword ptr [rsp+0x40],rax
0xcc1c: jmp 0xc0a2
0xcc21: movzx ecx,byte ptr [rbx-0x1]
0xcc25: lea r9,[rbx-0x1]
0xcc29: mov rdx,qword ptr [rsp+0x8]
0xcc2e: mov eax,0x0
0xcc33: sub rdx,r14
0xcc36: test r10d,r10d
0xcc39: cmovns eax,r10d
0xcc3d: cmp cl,0x25
0xcc40: cwde 
0xcc42: jnz 0xbc7b
0xcc48: test rax,rax
0xcc4b: mov ecx,0x1
0xcc50: mov r12,r9
0xcc53: cmovne rcx,rax
0xcc57: mov r8d,0x1
0xcc5d: jmp 0xbcc1
0xcc62: cmp r11d,0x45
0xcc66: jz 0xbc80
0xcc6c: mov ecx,dword ptr [r13+0x8]
0xcc70: mov edi,0x2
0xcc75: jmp 0xbf90
0xcc7a: cmp r11d,0x45
0xcc7e: jz 0xbc80
0xcc84: mov ecx,dword ptr [r13+0x4]
0xcc88: mov edi,0x2
0xcc8d: jmp 0xbf90
0xcc92: cmp r11d,0x45
0xcc96: jz 0xbc80
0xcc9c: cmp r10d,0xff
0xcca0: jz 0xd1f1
0xcca6: cmp r10d,0x8
0xccaa: jnle 0xd4b9
0xccb0: mov ecx,dword ptr [rsp+0x518]
0xccb7: mov esi,r10d
0xccba: mov edi,0x66666667
0xccbf: nop 
0xccc0: mov eax,ecx
0xccc2: add esi,0x1
0xccc5: sar ecx,0x1f
0xccc8: imul edx,eax,edi
0xccca: sar edx,0x2
0xcccd: sub edx,ecx
0xcccf: cmp esi,0x9
0xccd2: mov ecx,edx
0xccd4: jnz 0xccc0
0xccd6: mov edi,r10d
0xccd9: jmp 0xbf90
0xccde: cmp r11d,0x45
0xcce2: jz 0xbc80
0xcce8: mov ecx,dword ptr [rsp+0x68]
0xccec: mov edi,0x2
0xccf1: jmp 0xbf90
0xccf6: cmp r11d,0x45
0xccfa: jz 0xbc80
0xcd00: mov ecx,dword ptr [rsp+0x68]
0xcd04: test r15d,r15d
0xcd07: mov edi,0x2
0xcd0c: jnz 0xbf90
0xcd12: mov r15d,0x5f
0xcd18: jmp 0xbf90
0xcd1d: cmp r11d,0x45
0xcd21: jz 0xbc80
0xcd27: mov eax,dword ptr [r13+0x10]
0xcd2b: mov [rsp+0x40],0x0
0xcd30: mov edi,0x2
0xcd35: cmp eax,0xff
0xcd38: lea ecx,[rax+0x1]
0xcd3b: setl qword ptr [rsp+0x38]
0xcd40: cmp eax,0xff
0xcd43: setnl al
0xcd46: xor esi,esi
0xcd48: jmp 0xbfa7
0xcd4d: test r10d,r10d
0xcd50: mov ecx,0x0
0xcd55: mov eax,0x1
0xcd5a: cmovns ecx,r10d
0xcd5e: movsxd rcx,ecx
0xcd61: test rcx,rcx
0xcd64: cmove rcx,rax
0xcd68: mov rax,qword ptr [rsp+0x8]
0xcd6d: sub rax,r14
0xcd70: cmp rax,rcx
0xcd73: jbe 0xbafc
0xcd79: test rbp,rbp
0xcd7c: jz 0xc068
0xcd82: cmp r10d,0x1
0xcd86: jle 0xcdc2
0xcd88: movsxd rdx,r10d
0xcd8b: mov qword ptr [rsp+0x30],rcx
0xcd90: sub rdx,0x1
0xcd94: cmp r15d,0x30
0xcd98: lea r12,[rbp+rdx*1+0x0]
0xcd9d: jz 0xd36e
0xcda3: cmp r15d,0x2b
0xcda7: jz 0xd36e
0xcdad: mov rdi,rbp
0xcdb0: mov esi,0x20
0xcdb5: mov rbp,r12
0xcdb8: call 0x28f0
0xcdbd: mov rcx,qword ptr [rsp+0x30]
0xcdc2: mov [rbp+0x0],0xa
0xcdc6: add rbp,0x1
0xcdca: jmp 0xc068
0xcdcf: xor eax,eax
0xcdd1: jmp 0xc078
0xcdd6: cmp r11d,0x45
0xcdda: jz 0xbc80
0xcde0: mov eax,dword ptr [r13+0x1c]
0xcde4: mov [rsp+0x40],0x0
0xcde9: mov edi,0x3
0xcdee: cmp eax,0xff
0xcdf1: lea ecx,[rax+0x1]
0xcdf4: setl qword ptr [rsp+0x38]
0xcdf9: cmp eax,0xff
0xcdfc: setnl al
0xcdff: xor esi,esi
0xce01: jmp 0xbfa7
0xce06: cmp r11d,0x45
0xce0a: jz 0xbc80
0xce10: mov ecx,dword ptr [r13+0x8]
0xce14: jmp 0xcd04
0xce19: cmp r11d,0x45
0xce1d: jz 0xbc80
0xce23: mov ecx,dword ptr [r13+0xc]
0xce27: jmp 0xcd04
0xce2c: nop qword ptr [rax+0x0]
0xce30: mov eax,ecx
0xce32: neg eax
0xce34: cmp [rsp+0x38],0x0
0xce39: cmovne ecx,eax
0xce3c: jmp 0xc560
0xce41: nop qword ptr [rax+0x0]
0xce48: cmp r15d,0x2d
0xce4c: mov [rsp+0x38],0x2d
0xce51: jnz 0xc5e4
0xce57: test r10d,r10d
0xce5a: mov r11d,0x0
0xce60: mov rax,qword ptr [rsp+0x8]
0xce65: cmovns r11d,r10d
0xce69: mov r12d,0x1
0xce6f: movsxd r11,r11d
0xce72: test r11,r11
0xce75: cmovne r12,r11
0xce79: sub rax,r14
0xce7c: cmp rax,r12
0xce7f: jbe 0xbafc
0xce85: test rbp,rbp
0xce88: jz 0xceec
0xce8a: mov eax,dword ptr [rsp+0x48]
0xce8e: test eax,eax
0xce90: jnz 0xcee4
0xce92: cmp r11,0x1
0xce96: jbe 0xcee4
0xce98: movsxd rax,r10d
0xce9b: mov rdi,rbp
0xce9e: mov esi,0x20
0xcea3: lea rcx,[rax-0x1]
0xcea7: mov qword ptr [rsp+0x60],r9
0xceac: mov qword ptr [rsp+0x58],r8
0xceb1: mov qword ptr [rsp+0x50],r11
0xceb6: mov dword ptr [rsp+0x40],r10d
0xcebb: mov rdx,rcx
0xcebe: mov qword ptr [rsp+0x38],rcx
0xcec3: call 0x28f0
0xcec8: mov rcx,qword ptr [rsp+0x38]
0xcecd: mov r9,qword ptr [rsp+0x60]
0xced2: mov r8,qword ptr [rsp+0x58]
0xced7: mov r11,qword ptr [rsp+0x50]
0xcedc: mov r10d,dword ptr [rsp+0x40]
0xcee1: add rbp,rcx
0xcee4: mov byte ptr [rbp+0x0],r15b
0xcee8: add rbp,0x1
0xceec: mov rdx,qword ptr [rsp+0x8]
0xcef1: lea rcx,[r9+0x17]
0xcef5: add r14,r12
0xcef8: mov r15d,0x2d
0xcefe: mov r12,rbx
0xcf01: sub rcx,r8
0xcf04: sub rdx,r14
0xcf07: jmp 0xc705
0xcf0c: nop qword ptr [rax+0x0]
0xcf10: call 0x2970
0xcf15: mov rcx,qword ptr [rsp+0x38]
0xcf1a: mov r8,qword ptr [rsp+0x30]
0xcf1f: jmp 0xbd52
0xcf24: nop qword ptr [rax+0x0]
0xcf28: mov rdi,rbp
0xcf2b: mov qword ptr [rsp+0x30],rcx
0xcf30: call 0xb990
0xcf35: mov rcx,qword ptr [rsp+0x30]
0xcf3a: jmp 0xbf2b
0xcf3f: mov rdi,rbp
0xcf42: mov esi,0x30
0xcf47: call 0x28f0
0xcf4c: mov rbp,qword ptr [rsp+0x38]
0xcf51: movzx r8d,byte ptr [rsp+0x40]
0xcf57: mov rcx,qword ptr [rsp+0x48]
0xcf5c: mov r9,qword ptr [rsp+0x50]
0xcf61: jmp 0xbefe
0xcf66: mov rdi,rbp
0xcf69: mov esi,0x30
0xcf6e: mov rbp,rbx
0xcf71: call 0x28f0
0xcf76: mov r9,qword ptr [rsp+0x38]
0xcf7b: mov rcx,qword ptr [rsp+0x40]
0xcf80: mov r8,qword ptr [rsp+0x48]
0xcf85: jmp 0xbd25
0xcf8a: mov rdi,rbp
0xcf8d: mov esi,0x30
0xcf92: call 0x28f0
0xcf97: mov rbp,qword ptr [rsp+0x38]
0xcf9c: mov rcx,qword ptr [rsp+0x40]
0xcfa1: mov r8,qword ptr [rsp+0x48]
0xcfa6: jmp 0xc778
0xcfab: mov esi,0x70
0xcfb0: mov [rsp+0x30],0x0
0xcfb5: jmp 0xbdf5
0xcfba: xor edi,edi
0xcfbc: jmp 0xbfbc
0xcfc1: mov [rsp+0x38],0x0
0xcfc6: movsxd r15,r12d
0xcfc9: cmp r15,rdx
0xcfcc: jnb 0xbafc
0xcfd2: test rbp,rbp
0xcfd5: jz 0xd008
0xcfd7: mov rdi,rbp
0xcfda: mov rdx,r15
0xcfdd: mov esi,0x20
0xcfe2: mov dword ptr [rsp+0x58],r10d
0xcfe7: mov qword ptr [rsp+0x50],r9
0xcfec: add rbp,r15
0xcfef: mov qword ptr [rsp+0x40],r8
0xcff4: call 0x28f0
0xcff9: mov r10d,dword ptr [rsp+0x58]
0xcffe: mov r9,qword ptr [rsp+0x50]
0xd003: mov r8,qword ptr [rsp+0x40]
0xd008: mov rdx,qword ptr [rsp+0x8]
0xd00d: mov eax,r10d
0xd010: add r14,r15
0xd013: sub eax,r12d
0xd016: cmp r10d,r12d
0xd019: mov r10d,0x0
0xd01f: cmovnl r10d,eax
0xd023: sub rdx,r14
0xd026: cmp [rsp+0x38],0x0
0xd02b: jnz 0xd152
0xd031: add r9,0x17
0xd035: movsxd r11,r10d
0xd038: mov r12,rbx
0xd03b: mov rcx,r9
0xd03e: mov r15d,0x5f
0xd044: sub rcx,r8
0xd047: jmp 0xc705
0xd04c: test r10d,r10d
0xd04f: mov r11d,0x0
0xd055: mov r12d,0x1
0xd05b: cmovns r11d,r10d
0xd05f: movsxd r11,r11d
0xd062: test r11,r11
0xd065: cmovne r12,r11
0xd069: cmp r12,rdx
0xd06c: jnb 0xbafc
0xd072: test rbp,rbp
0xd075: jz 0xd0f0
0xd077: mov edi,dword ptr [rsp+0x48]
0xd07b: test edi,edi
0xd07d: jnz 0xd0e4
0xd07f: cmp r11,0x1
0xd083: jbe 0xd0e4
0xd085: movsxd rdx,r10d
0xd088: mov dword ptr [rsp+0x6c],r10d
0xd08d: mov qword ptr [rsp+0x60],r8
0xd092: sub rdx,0x1
0xd096: cmp r15d,0x30
0xd09a: mov qword ptr [rsp+0x58],rcx
0xd09f: lea rax,[rbp+rdx*1+0x0]
0xd0a4: mov qword ptr [rsp+0x50],r11
0xd0a9: mov qword ptr [rsp+0x40],rax
0xd0ae: jz 0xd47f
0xd0b4: cmp r15d,0x2b
0xd0b8: jz 0xd47f
0xd0be: mov rdi,rbp
0xd0c1: mov esi,0x20
0xd0c6: call 0x28f0
0xd0cb: mov rbp,qword ptr [rsp+0x40]
0xd0d0: mov r10d,dword ptr [rsp+0x6c]
0xd0d5: mov r8,qword ptr [rsp+0x60]
0xd0da: mov rcx,qword ptr [rsp+0x58]
0xd0df: mov r11,qword ptr [rsp+0x50]
0xd0e4: movzx eax,byte ptr [rsp+0x38]
0xd0e9: add rbp,0x1
0xd0ed: mov byte ptr [rbp-0x1],al
0xd0f0: mov rdx,qword ptr [rsp+0x8]
0xd0f5: add r14,r12
0xd0f8: mov r12,rbx
0xd0fb: sub rdx,r14
0xd0fe: jmp 0xc705
0xd103: mov r15d,0x2b
0xd109: jmp 0xce57
0xd10e: mov r12,rbx
0xd111: jmp 0xbb62
0xd116: mov eax,0xfffff894
0xd11b: lea ecx,[rdi+r8*1+0x76c]
0xd123: sub eax,r8d
0xd126: cmp edi,eax
0xd128: setl qword ptr [rsp+0x38]
0xd12d: setnl al
0xd130: test r15d,r15d
0xd133: jz 0xc2c0
0xd139: cmp r15d,0x2b
0xd13d: jnz 0xc2cf
0xd143: mov edi,0x4
0xd148: mov edx,0x270f
0xd14d: jmp 0xcb9d
0xd152: movsxd r15,r10d
0xd155: mov r12d,0x1
0xd15b: test r15,r15
0xd15e: cmovne r12,r15
0xd162: cmp r12,rdx
0xd165: jnb 0xbafc
0xd16b: test rbp,rbp
0xd16e: jz 0xd1cb
0xd170: mov r11d,dword ptr [rsp+0x48]
0xd175: test r11d,r11d
0xd178: jnz 0xd1bf
0xd17a: cmp r15,0x1
0xd17e: jbe 0xd1bf
0xd180: lea rcx,[r15-0x1]
0xd184: mov rdi,rbp
0xd187: mov esi,0x20
0xd18c: mov dword ptr [rsp+0x60],r10d
0xd191: mov qword ptr [rsp+0x58],r9
0xd196: mov rdx,rcx
0xd199: mov qword ptr [rsp+0x50],r8
0xd19e: mov qword ptr [rsp+0x40],rcx
0xd1a3: call 0x28f0
0xd1a8: mov rcx,qword ptr [rsp+0x40]
0xd1ad: mov r10d,dword ptr [rsp+0x60]
0xd1b2: mov r9,qword ptr [rsp+0x58]
0xd1b7: mov r8,qword ptr [rsp+0x50]
0xd1bc: add rbp,rcx
0xd1bf: movzx eax,byte ptr [rsp+0x38]
0xd1c4: add rbp,0x1
0xd1c8: mov byte ptr [rbp-0x1],al
0xd1cb: mov rdx,qword ptr [rsp+0x8]
0xd1d0: add r9,0x17
0xd1d4: add r14,r12
0xd1d7: mov rcx,r9
0xd1da: mov r11,r15
0xd1dd: mov r12,rbx
0xd1e0: sub rcx,r8
0xd1e3: mov r15d,0x5f
0xd1e9: sub rdx,r14
0xd1ec: jmp 0xc705
0xd1f1: mov ecx,dword ptr [rsp+0x518]
0xd1f8: mov edi,0x9
0xd1fd: mov r10d,0x9
0xd203: jmp 0xbf90
0xd208: mov r12,rbx
0xd20b: mov r9,rbx
0xd20e: mov r8d,0x1
0xd214: jmp 0xbcc1
0xd219: cmp r15d,0x5f
0xd21d: jz 0xcfc1
0xd223: movsxd rax,dword ptr [rsp+0x48]
0xd228: cmp rax,rdx
0xd22b: jnb 0xbafc
0xd231: movsxd r9,r12d
0xd234: mov r12,rbx
0xd237: jmp 0xc6be
0xd23c: mov rdi,rbp
0xd23f: mov esi,0x30
0xd244: call 0x28f0
0xd249: mov rbp,qword ptr [rsp+0x50]
0xd24e: mov r11,qword ptr [rsp+0x58]
0xd253: jmp 0xc166
0xd258: sub r12d,0x1
0xd25c: mov edx,0x16d
0xd261: test r12b,0x3
0xd265: jnz 0xd2a3
0xd267: mov eax,r12d
0xd26a: mov edx,0x51eb851f
0xd26f: imul edx,eax,edx
0xd271: mov eax,edx
0xd273: mov edx,r12d
0xd276: sar edx,0x1f
0xd279: sar eax,0x5
0xd27c: sub eax,edx
0xd27e: mov edx,0x16e
0xd283: imul eax,eax,0x64
0xd286: cmp r12d,eax
0xd289: jnz 0xd2a3
0xd28b: mov eax,r12d
0xd28e: mov ecx,0x190
0xd293: cdq
0xd294: idiv ecx
0xd296: cmp edx,0x1
0xd299: sbb edx,edx
0xd29b: not edx
0xd29d: add edx,0x16e
0xd2a3: add r8d,edx
0xd2a6: mov edx,0x92492493
0xd2ab: mov ecx,r8d
0xd2ae: sub ecx,dword ptr [rsp+0x38]
0xd2b2: add ecx,0x17e
0xd2b8: mov eax,ecx
0xd2ba: sub r8d,ecx
0xd2bd: imul edx,eax,edx
0xd2bf: lea eax,[rdx+rcx*1+0x0]
0xd2c2: mov edx,ecx
0xd2c4: sar edx,0x1f
0xd2c7: sar eax,0x2
0xd2ca: sub eax,edx
0xd2cc: lea edx,[rax*8+0x0]
0xd2d3: sub edx,eax
0xd2d5: lea ecx,[r8+rdx*1+0x3]
0xd2da: mov r8d,0xffffffff
0xd2e0: jmp 0xc9cf
0xd2e5: imul esi,esi,0x64
0xd2e8: mov [rsp+0x40],0x1
0xd2ed: mov edi,0x9
0xd2f2: imul eax,r12d,0x2710
0xd2f9: add eax,esi
0xd2fb: mov esi,0x14
0xd300: add ecx,eax
0xd302: movzx eax,byte ptr [rsp+0x38]
0xd307: xor eax,0x1
0xd30a: jmp 0xbfa7
0xd30f: mov eax,ecx
0xd311: mov edx,0x92492493
0xd316: mov edi,0x2
0xd31b: imul edx,eax,edx
0xd31d: lea eax,[rdx+rcx*1+0x0]
0xd320: sar ecx,0x1f
0xd323: sar eax,0x2
0xd326: sub eax,ecx
0xd328: mov ecx,eax
0xd32a: add ecx,0x1
0xd32d: jmp 0xbf90
0xd332: movzx eax,byte ptr [rsp+0x38]
0xd337: mov [rsp+0x40],0x1
0xd33c: mov edi,0x6
0xd341: imul ecx,r12d,0x64
0xd345: xor eax,0x1
0xd348: add ecx,esi
0xd34a: mov esi,0x4
0xd34f: jmp 0xbfa7
0xd354: mov rdi,rbp
0xd357: mov esi,0x30
0xd35c: mov rbp,r12
0xd35f: call 0x28f0
0xd364: mov rcx,qword ptr [rsp+0x30]
0xd369: jmp 0xc05c
0xd36e: mov rdi,rbp
0xd371: mov esi,0x30
0xd376: mov rbp,r12
0xd379: call 0x28f0
0xd37e: mov rcx,qword ptr [rsp+0x30]
0xd383: jmp 0xcdc2
0xd388: call 0x2970
0xd38d: mov rcx,qword ptr [rsp+0x30]
0xd392: jmp 0xc3c5
0xd397: mov rsi,qword ptr [rsp+0x20]
0xd39c: mov rdx,r12
0xd39f: mov rdi,rbp
0xd3a2: mov qword ptr [rsp+0x30],rcx
0xd3a7: call 0xb990
0xd3ac: mov rcx,qword ptr [rsp+0x30]
0xd3b1: jmp 0xc3c5
0xd3b6: mov byte ptr [rsp+0x30],al
0xd3ba: jmp 0xbc80
0xd3bf: movzx ecx,byte ptr [rbx]
0xd3c2: mov r9,rbx
0xd3c5: jmp 0xcc29
0xd3ca: lea rcx,[rbx+0x2]
0xd3ce: mov r8d,0x1
0xd3d4: mov rdx,rcx
0xd3d7: add rcx,0x1
0xd3db: movzx eax,byte ptr [rcx-0x1]
0xd3df: add r8,0x1
0xd3e3: cmp al,0x3a
0xd3e5: jnz 0xc8bd
0xd3eb: jmp 0xd3d4
0xd3ed: mov esi,r10d
0xd3f0: mov eax,0x0
0xd3f5: sub esi,0x6
0xd3f8: cmovns eax,esi
0xd3fb: mov dword ptr [rsp+0x38],eax
0xd3ff: lea rax,[rip+0x49ac]
0xd406: mov qword ptr [rsp+0x40],rax
0xd40b: jmp 0xc0a2
0xd410: imul ecx,r12d,0x64
0xd414: xor esi,esi
0xd416: mov [rsp+0x40],0x1
0xd41b: mov edi,0x5
0xd420: add ecx,eax
0xd422: movzx eax,byte ptr [rsp+0x38]
0xd427: xor eax,0x1
0xd42a: jmp 0xbfa7
0xd42f: mov rdi,rbp
0xd432: mov esi,0x30
0xd437: call 0x28f0
0xd43c: mov rbp,qword ptr [rsp+0x38]
0xd441: movzx r8d,byte ptr [rsp+0x40]
0xd447: mov rcx,qword ptr [rsp+0x48]
0xd44c: jmp 0xc397
0xd451: mov rdi,rbp
0xd454: mov esi,0x30
0xd459: mov rbp,r12
0xd45c: call 0x28f0
0xd461: mov rcx,qword ptr [rsp+0x40]
0xd466: mov r9,qword ptr [rsp+0x50]
0xd46b: mov r8,qword ptr [rsp+0x58]
0xd470: jmp 0xc6af
0xd475: mov esi,0x30
0xd47a: jmp 0xc21b
0xd47f: mov rdi,rbp
0xd482: mov esi,0x30
0xd487: call 0x28f0
0xd48c: mov rbp,qword ptr [rsp+0x40]
0xd491: mov r11,qword ptr [rsp+0x50]
0xd496: mov rcx,qword ptr [rsp+0x58]
0xd49b: mov r8,qword ptr [rsp+0x60]
0xd4a0: mov r10d,dword ptr [rsp+0x6c]
0xd4a5: jmp 0xd0e4
0xd4aa: mov [rsp+0x38],0x0
0xd4af: mov edi,0x2
0xd4b4: jmp 0xcbb0
0xd4b9: mov ecx,dword ptr [rsp+0x518]
0xd4c0: jmp 0xccd6
0xd4c5: call 0x2830
0xd4ca: add ecx,0x64
0xd4cd: test r15d,r15d
0xd4d0: jz 0xca3a
0xd4d6: jmp 0xc412
0xd4db: xor edi,edi
0xd4dd: jmp 0xbfcc
0xd534: add rsp,0x18
0xd538: ret
0xd540: push r12
0xd542: push rbp
0xd543: push rbx
0xd544: mov rbx,rdi
0xd547: call 0x29a0
0xd54c: test eax,eax
0xd54e: mov rdi,rbx
0xd551: js 0xd5a7
0xd553: call 0x2a10
0xd558: test eax,eax
0xd55a: jnz 0xd588
0xd55c: mov rdi,rbx
0xd55f: call 0xd5c0
0xd564: test eax,eax
0xd566: jz 0xd5a4
0xd568: call 0x2750
0xd56d: mov r12d,dword ptr [rax]
0xd570: mov rdi,rbx
0xd573: mov rbp,rax
0xd576: call 0x27d0
0xd57b: test r12d,r12d
0xd57e: jnz 0xd5b0
0xd580: pop rbx
0xd581: pop rbp
0xd582: pop r12
0xd584: ret
0xd585: nop qword ptr [rax]
0xd588: mov rdi,rbx
0xd58b: call 0x29a0
0xd590: xor esi,esi
0xd592: mov edx,0x1
0xd597: mov edi,eax
0xd599: call 0x28c0
0xd59e: cmp rax,0xffffffff
0xd5a2: jnz 0xd55c
0xd5a4: mov rdi,rbx
0xd5a7: pop rbx
0xd5a8: pop rbp
0xd5a9: pop r12
0xd5ab: jmp 0x27d0
0xd5b0: mov dword ptr [rbp+0x0],r12d
0xd5b4: mov eax,0xffffffff
0xd5b9: jmp 0xd580
0xd5c0: test rdi,rdi
0xd5c3: push rbx
0xd5c4: mov rbx,rdi
0xd5c7: jz 0xd5da
0xd5c9: call 0x2a10
0xd5ce: test eax,eax
0xd5d0: jz 0xd5da
0xd5d2: test [rbx],0x100
0xd5d8: jnz 0xd5e8
0xd5da: mov rdi,rbx
0xd5dd: pop rbx
0xd5de: jmp 0x29e0
0xd5e3: nop qword ptr [rax+rax*1+0x0]
0xd5e8: mov rdi,rbx
0xd5eb: mov edx,0x1
0xd5f0: xor esi,esi
0xd5f2: call 0xd600
0xd5f7: mov rdi,rbx
0xd5fa: pop rbx
0xd5fb: jmp 0x29e0
0xd600: mov rax,qword ptr [rdi+0x8]
0xd604: cmp qword ptr [rdi+0x10],rax
0xd608: jz 0xd610
0xd60a: jmp 0x2a90
0xd60f: nop 
0xd610: mov rax,qword ptr [rdi+0x20]
0xd614: cmp qword ptr [rdi+0x28],rax
0xd618: jnz 0xd60a
0xd61a: cmp [rdi+0x48],0x0
0xd61f: jnz 0xd60a
0xd621: push r12
0xd623: push rbp
0xd624: mov r12d,edx
0xd627: push rbx
0xd628: mov rbp,rsi
0xd62b: mov rbx,rdi
0xd62e: call 0x29a0
0xd633: mov edx,r12d
0xd636: mov rsi,rbp
0xd639: mov edi,eax
0xd63b: call 0x28c0
0xd640: cmp rax,0xffffffff
0xd644: jz 0xd652
0xd646: and [rbx],0xef
0xd649: mov qword ptr [rbx+0x90],rax
0xd650: xor eax,eax
0xd652: pop rbx
0xd653: pop rbp
0xd654: pop r12
0xd656: ret
0xd660: or [rdi],0x20
0xd663: ret
0xd874: nop qword ptr [rax+0x0]
0xd8a3: nop qword ptr [rax+rax*1+0x0]
0xd937: movzx edx,byte ptr [r13+0x48]
0xd93c: mov rax,qword ptr [r13+0x50]
0xd940: cmp dl,0x25
0xd943: jz 0xe0d8
0xd949: cmp rax,0xffffffff
0xd94d: jz 0xe596
0xd953: mov r8,qword ptr [rbp-0x3a8]
0xd95a: shl rax,0x5
0xd95e: add rax,r8
0xd961: cmp dl,0x6e
0xd964: mov edi,dword ptr [rax]
0xd966: mov dword ptr [rbp-0x3d0],edi
0xd96c: jz 0xe150
0xd972: mov eax,dword ptr [r13+0x10]
0xd976: mov rdi,qword ptr [rbp-0x3d8]
0xd97d: test al,0x1
0xd97f: mov [rdi],0x25
0xd982: lea rbx,[rdi+0x1]
0xd986: jz 0xd997
0xd988: mov rdi,qword ptr [rbp-0x3d8]
0xd98f: lea rbx,[rdi+0x2]
0xd993: mov [rdi+0x1],0x27
0xd997: test al,0x2
0xd999: jz 0xd9a2
0xd99b: mov [rbx],0x2d
0xd99e: add rbx,0x1
0xd9a2: test al,0x4
0xd9a4: jz 0xd9ad
0xd9a6: mov [rbx],0x2b
0xd9a9: add rbx,0x1
0xd9ad: test al,0x8
0xd9af: jz 0xd9b8
0xd9b1: mov [rbx],0x20
0xd9b4: add rbx,0x1
0xd9b8: test al,0x10
0xd9ba: jz 0xd9c3
0xd9bc: mov [rbx],0x23
0xd9bf: add rbx,0x1
0xd9c3: test al,0x40
0xd9c5: jz 0xd9ce
0xd9c7: mov [rbx],0x49
0xd9ca: add rbx,0x1
0xd9ce: test al,0x20
0xd9d0: jz 0xd9d9
0xd9d2: mov [rbx],0x30
0xd9d5: add rbx,0x1
0xd9d9: mov rsi,qword ptr [r13+0x18]
0xd9dd: mov rdx,qword ptr [r13+0x20]
0xd9e1: cmp rsi,rdx
0xd9e4: jz 0xda16
0xd9e6: mov rcx,rdx
0xd9e9: mov rdi,rbx
0xd9ec: mov qword ptr [rbp-0x3e0],r8
0xd9f3: sub rcx,rsi
0xd9f6: mov rdx,rcx
0xd9f9: mov qword ptr [rbp-0x3c8],rcx
0xda00: call 0x2970
0xda05: mov rcx,qword ptr [rbp-0x3c8]
0xda0c: mov r8,qword ptr [rbp-0x3e0]
0xda13: add rbx,rcx
0xda16: mov rsi,qword ptr [r13+0x30]
0xda1a: mov rdx,qword ptr [r13+0x38]
0xda1e: cmp rsi,rdx
0xda21: jz 0xda53
0xda23: mov rcx,rdx
0xda26: mov rdi,rbx
0xda29: mov qword ptr [rbp-0x3e0],r8
0xda30: sub rcx,rsi
0xda33: mov rdx,rcx
0xda36: mov qword ptr [rbp-0x3c8],rcx
0xda3d: call 0x2970
0xda42: mov rcx,qword ptr [rbp-0x3c8]
0xda49: mov r8,qword ptr [rbp-0x3e0]
0xda50: add rbx,rcx
0xda53: mov edi,dword ptr [rbp-0x3d0]
0xda59: cmp edi,0x10
0xda5c: jnbe 0xda8b
0xda5e: mov eax,0x1
0xda63: mov ecx,edi
0xda65: shl rax,cl
0xda68: test eax,0x14180
0xda6d: jnz 0xda84
0xda6f: test ah,0x10
0xda72: jnz 0xe3d0
0xda78: test ah,0x6
0xda7b: jz 0xda8b
0xda7d: mov [rbx],0x6c
0xda80: add rbx,0x1
0xda84: mov [rbx],0x6c
0xda87: add rbx,0x1
0xda8b: movzx eax,byte ptr [r13+0x48]
0xda90: mov [rbx+0x1],0x0
0xda94: mov byte ptr [rbx],al
0xda96: mov rax,qword ptr [r13+0x28]
0xda9a: cmp rax,0xffffffff
0xda9e: jz 0xe1d0
0xdaa4: shl rax,0x5
0xdaa8: add rax,r8
0xdaab: cmp [rax],0x5
0xdaae: jnz 0xe596
0xdab4: mov eax,dword ptr [rax+0x10]
0xdab7: mov [rbp-0x3e0],0x1
0xdac1: mov dword ptr [rbp-0x3b8],eax
0xdac7: mov rax,qword ptr [r13+0x40]
0xdacb: cmp rax,0xffffffff
0xdacf: jz 0xdafc
0xdad1: shl rax,0x5
0xdad5: add r8,rax
0xdad8: cmp [r8],0x5
0xdadc: jnz 0xe596
0xdae2: mov eax,dword ptr [rbp-0x3e0]
0xdae8: mov edx,dword ptr [r8+0x10]
0xdaec: mov dword ptr [rbp+rax*4-0x3b8],edx
0xdaf3: lea eax,[rax+0x1]
0xdaf6: mov dword ptr [rbp-0x3e0],eax
0xdafc: mov rax,r14
0xdaff: xor edx,edx
0xdb01: add rax,0x2
0xdb05: jb 0xe76c
0xdb0b: cmp r12,rax
0xdb0e: jnb 0xdb5b
0xdb10: test r12,r12
0xdb13: jnz 0xe338
0xdb19: cmp rax,0xc
0xdb1d: jnbe 0xe350
0xdb23: mov r12d,0xc
0xdb29: cmp r15,qword ptr [rbp-0x3e8]
0xdb30: setz dl
0xdb33: test r15,r15
0xdb36: jz 0xe380
0xdb3c: test dl,dl
0xdb3e: jnz 0xe380
0xdb44: mov rsi,r12
0xdb47: mov rdi,r15
0xdb4a: call 0x2a20
0xdb4f: test rax,rax
0xdb52: jz 0xd7d5
0xdb58: mov r15,rax
0xdb5b: mov [r15+r14*1+0x0],0x0
0xdb60: call 0x2750
0xdb65: mov qword ptr [rbp-0x3c8],rax
0xdb6c: mov eax,dword ptr [rax]
0xdb6e: mov qword ptr [rbp-0x3f8],rbx
0xdb75: mov dword ptr [rbp-0x424],eax
0xdb7b: nop qword ptr [rax+rax*1+0x0]
0xdb80: mov rax,qword ptr [rbp-0x3c8]
0xdb87: mov rbx,r12
0xdb8a: mov r10d,0x7fffffff
0xdb90: sub rbx,r14
0xdb93: mov [rbp-0x3bc],0xffffffff
0xdb9d: cmp rbx,0x7fffffff
0xdba4: mov [rax],0x0
0xdbaa: mov eax,dword ptr [rbp-0x3d0]
0xdbb0: cmovbe r10,rbx
0xdbb4: cmp eax,0x11
0xdbb7: jnbe 0xe596
0xdbbd: lea rsi,[rip+0x43ec]
0xdbc4: movsxd rax,dword ptr [rsi+rax*4+0x0]
0xdbc8: add rax,rsi
0xdbcb: jmp rax
0xdbcd: nop qword ptr [rax]
0xdbd0: mov rax,qword ptr [r13+0x50]
0xdbd4: lea rdi,[r15+r14*1+0x0]
0xdbd8: shl rax,0x5
0xdbdc: add rax,qword ptr [rbp-0x3a8]
0xdbe3: mov r9,qword ptr [rax+0x10]
0xdbe7: mov eax,dword ptr [rbp-0x3e0]
0xdbed: cmp eax,0x1
0xdbf0: jz 0xe0b8
0xdbf6: cmp eax,0x2
0xdbf9: jz 0xe0a0
0xdbff: sub rsp,0x8
0xdc03: push qword ptr [rbp-0x3f0]
0xdc09: mov r8,qword ptr [rbp-0x3d8]
0xdc10: mov rsi,r10
0xdc13: mov rcx,0xffffffff
0xdc1a: mov edx,0x1
0xdc1f: xor eax,eax
0xdc21: mov qword ptr [rbp-0x430],r10
0xdc28: call 0x2700
0xdc2d: pop rsi
0xdc2e: pop rdi
0xdc2f: mov r10,qword ptr [rbp-0x430]
0xdc36: mov ecx,dword ptr [rbp-0x3bc]
0xdc3c: test ecx,ecx
0xdc3e: js 0xdd7c
0xdc44: movsxd rdx,ecx
0xdc47: cmp rdx,r10
0xdc4a: jnb 0xdc5a
0xdc4c: add rdx,r15
0xdc4f: cmp [rdx+r14*1+0x0],0x0
0xdc54: jnz 0xe596
0xdc5a: cmp ecx,eax
0xdc5c: jnl 0xdc66
0xdc5e: mov dword ptr [rbp-0x3bc],eax
0xdc64: mov ecx,eax
0xdc66: lea eax,[rcx+0x1]
0xdc69: cmp rax,r10
0xdc6c: jb 0xe4a0
0xdc72: cmp rbx,0x7ffffffe
0xdc79: jnbe 0xe4c0
0xdc7f: lea rsi,[r12+r12*1+0x0]
0xdc83: lea edx,[rcx+0x2]
0xdc86: test r12,r12
0xdc89: mov rax,0xffffffff
0xdc90: cmovns rax,rsi
0xdc94: add rdx,r14
0xdc97: jb 0xe758
0xdc9d: cmp rax,rdx
0xdca0: cmovnae rax,rdx
0xdca4: cmp r12,rax
0xdca7: jnb 0xdb80
0xdcad: test r12,r12
0xdcb0: js 0xd7e1
0xdcb6: cmp rsi,rax
0xdcb9: mov r12,rsi
0xdcbc: jnb 0xdccb
0xdcbe: cmp rax,0xffffffff
0xdcc2: jz 0xd7e1
0xdcc8: mov r12,rax
0xdccb: cmp r15,qword ptr [rbp-0x3e8]
0xdcd2: setz bl
0xdcd5: test r15,r15
0xdcd8: jz 0xe060
0xdcde: test bl,bl
0xdce0: jnz 0xe060
0xdce6: mov rsi,r12
0xdce9: mov rdi,r15
0xdcec: call 0x2a20
0xdcf1: test rax,rax
0xdcf4: jz 0xd7e1
0xdcfa: mov r15,rax
0xdcfd: jmp 0xdb80
0xdd02: nop qword ptr [rax+rax*1+0x0]
0xdd08: mov rax,qword ptr [r13+0x50]
0xdd0c: lea rdi,[r15+r14*1+0x0]
0xdd10: shl rax,0x5
0xdd14: add rax,qword ptr [rbp-0x3a8]
0xdd1b: mov r9d,dword ptr [rax+0x10]
0xdd1f: mov eax,dword ptr [rbp-0x3e0]
0xdd25: cmp eax,0x1
0xdd28: jz 0xdf60
0xdd2e: cmp eax,0x2
0xdd31: jz 0xdfa8
0xdd37: sub rsp,0x8
0xdd3b: push qword ptr [rbp-0x3f0]
0xdd41: mov r8,qword ptr [rbp-0x3d8]
0xdd48: mov rcx,0xffffffff
0xdd4f: mov edx,0x1
0xdd54: mov rsi,r10
0xdd57: xor eax,eax
0xdd59: mov qword ptr [rbp-0x430],r10
0xdd60: call 0x2700
0xdd65: pop rdx
0xdd66: pop rcx
0xdd67: mov ecx,dword ptr [rbp-0x3bc]
0xdd6d: mov r10,qword ptr [rbp-0x430]
0xdd74: test ecx,ecx
0xdd76: jns 0xdc44
0xdd7c: mov rdi,qword ptr [rbp-0x3f8]
0xdd83: cmp [rdi+0x1],0x0
0xdd87: jnz 0xe0c8
0xdd8d: test eax,eax
0xdd8f: jns 0xdc5e
0xdd95: mov rax,qword ptr [rbp-0x3c8]
0xdd9c: mov ebx,dword ptr [rax]
0xdd9e: test ebx,ebx
0xdda0: jnz 0xddc0
0xdda2: movzx eax,byte ptr [r13+0x48]
0xdda7: mov ebx,0x16
0xddac: and eax,0xef
0xddaf: cmp al,0x63
0xddb1: mov eax,0x54
0xddb6: cmove ebx,eax
0xddb9: nop qword ptr [rax+0x0]
0xddc0: cmp r15,qword ptr [rbp-0x3e8]
0xddc7: jz 0xddd2
0xddc9: test r15,r15
0xddcc: jnz 0xe57c
0xddd2: mov rax,qword ptr [rbp-0x420]
0xddd9: test rax,rax
0xdddc: jz 0xdde6
0xddde: mov rdi,rax
0xdde1: call 0x2710
0xdde6: mov rax,qword ptr [rbp-0x408]
0xdded: mov rdi,qword ptr [rbp-0x2b8]
0xddf4: add rax,0x20
0xddf8: cmp rdi,rax
0xddfb: jz 0xde02
0xddfd: call 0x2710
0xde02: mov rax,qword ptr [rbp-0x410]
0xde09: mov rdi,qword ptr [rbp-0x3a8]
0xde10: add rax,0x10
0xde14: cmp rdi,rax
0xde17: jz 0xde1e
0xde19: call 0x2710
0xde1e: mov rax,qword ptr [rbp-0x3c8]
0xde25: xor r15d,r15d
0xde28: mov dword ptr [rax],ebx
0xde2a: jmp 0xd84f
0xde2f: nop 
0xde30: mov rax,qword ptr [r13+0x50]
0xde34: lea rdi,[r15+r14*1+0x0]
0xde38: shl rax,0x5
0xde3c: add rax,qword ptr [rbp-0x3a8]
0xde43: fld st0,[rax+0x10]
0xde46: mov eax,dword ptr [rbp-0x3e0]
0xde4c: cmp eax,0x1
0xde4f: jz 0xe480
0xde55: cmp eax,0x2
0xde58: jnz 0xe320
0xde5e: mov eax,dword ptr [rbp-0x3b4]
0xde64: sub rsp,0x8
0xde68: push qword ptr [rbp-0x3f0]
0xde6e: mov r9d,dword ptr [rbp-0x3b8]
0xde75: mov r8,qword ptr [rbp-0x3d8]
0xde7c: mov rsi,r10
0xde7f: sub rsp,0x18
0xde83: mov rcx,0xffffffff
0xde8a: mov edx,0x1
0xde8f: fstp [rsp+0x8],st0
0xde93: push rax
0xde94: xor eax,eax
0xde96: mov qword ptr [rbp-0x430],r10
0xde9d: call 0x2700
0xdea2: add rsp,0x30
0xdea6: mov r10,qword ptr [rbp-0x430]
0xdead: jmp 0xdc36
0xdeb2: nop qword ptr [rax+rax*1+0x0]
0xdeb8: mov rax,qword ptr [r13+0x50]
0xdebc: lea rdi,[r15+r14*1+0x0]
0xdec0: shl rax,0x5
0xdec4: add rax,qword ptr [rbp-0x3a8]
0xdecb: movsd xmm0,dword ptr [rax+0x10]
0xded0: mov eax,dword ptr [rbp-0x3e0]
0xded6: cmp eax,0x1
0xded9: jz 0xe470
0xdedf: cmp eax,0x2
0xdee2: jnz 0xe2e0
0xdee8: mov eax,dword ptr [rbp-0x3b4]
0xdeee: push qword ptr [rbp-0x3f0]
0xdef4: push rax
0xdef5: mov r9d,dword ptr [rbp-0x3b8]
0xdefc: mov r8,qword ptr [rbp-0x3d8]
0xdf03: mov rsi,r10
0xdf06: mov rcx,0xffffffff
0xdf0d: mov edx,0x1
0xdf12: mov eax,0x1
0xdf17: mov qword ptr [rbp-0x430],r10
0xdf1e: call 0x2700
0xdf23: pop r8
0xdf25: mov r10,qword ptr [rbp-0x430]
0xdf2c: pop r9
0xdf2e: jmp 0xdc36
0xdf33: nop qword ptr [rax+rax*1+0x0]
0xdf38: mov rax,qword ptr [r13+0x50]
0xdf3c: lea rdi,[r15+r14*1+0x0]
0xdf40: shl rax,0x5
0xdf44: add rax,qword ptr [rbp-0x3a8]
0xdf4b: movzx r9d,byte ptr [rax+0x10]
0xdf50: mov eax,dword ptr [rbp-0x3e0]
0xdf56: cmp eax,0x1
0xdf59: jnz 0xdd2e
0xdf5f: nop 
0xdf60: push qword ptr [rbp-0x3f0]
0xdf66: push r9
0xdf68: mov r9d,dword ptr [rbp-0x3b8]
0xdf6f: jmp 0xdd41
0xdf74: nop qword ptr [rax+0x0]
0xdf78: mov rax,qword ptr [r13+0x50]
0xdf7c: lea rdi,[r15+r14*1+0x0]
0xdf80: shl rax,0x5
0xdf84: add rax,qword ptr [rbp-0x3a8]
0xdf8b: movsx r9d,byte ptr [rax+0x10]
0xdf90: mov eax,dword ptr [rbp-0x3e0]
0xdf96: cmp eax,0x1
0xdf99: jz 0xdf60
0xdf9b: cmp eax,0x2
0xdf9e: jnz 0xdd37
0xdfa4: nop qword ptr [rax+0x0]
0xdfa8: sub rsp,0x8
0xdfac: push qword ptr [rbp-0x3f0]
0xdfb2: push r9
0xdfb4: mov eax,dword ptr [rbp-0x3b4]
0xdfba: push rax
0xdfbb: mov r9d,dword ptr [rbp-0x3b8]
0xdfc2: mov r8,qword ptr [rbp-0x3d8]
0xdfc9: mov rsi,r10
0xdfcc: mov rcx,0xffffffff
0xdfd3: mov edx,0x1
0xdfd8: xor eax,eax
0xdfda: mov qword ptr [rbp-0x430],r10
0xdfe1: call 0x2700
0xdfe6: add rsp,0x20
0xdfea: mov r10,qword ptr [rbp-0x430]
0xdff1: jmp 0xdc36
0xdff6: nop qword ptr [rax+rax*1+0x0]
0xe000: mov rax,qword ptr [r13+0x50]
0xe004: lea rdi,[r15+r14*1+0x0]
0xe008: shl rax,0x5
0xe00c: add rax,qword ptr [rbp-0x3a8]
0xe013: movzx r9d,byte ptr [rax+0x10]
0xe018: mov eax,dword ptr [rbp-0x3e0]
0xe01e: cmp eax,0x1
0xe021: jnz 0xdd2e
0xe027: jmp 0xdf60
0xe02c: nop qword ptr [rax+0x0]
0xe030: mov rax,qword ptr [r13+0x50]
0xe034: lea rdi,[r15+r14*1+0x0]
0xe038: shl rax,0x5
0xe03c: add rax,qword ptr [rbp-0x3a8]
0xe043: movsx r9d,byte ptr [rax+0x10]
0xe048: mov eax,dword ptr [rbp-0x3e0]
0xe04e: cmp eax,0x1
0xe051: jnz 0xdd2e
0xe057: jmp 0xdf60
0xe05c: nop qword ptr [rax+0x0]
0xe060: mov rdi,r12
0xe063: call 0x29d0
0xe068: test rax,rax
0xe06b: mov rcx,rax
0xe06e: jz 0xd7e1
0xe074: test r14,r14
0xe077: jz 0xe130
0xe07d: test bl,bl
0xe07f: jz 0xe130
0xe085: mov rsi,r15
0xe088: mov rdx,r14
0xe08b: mov rdi,rax
0xe08e: call 0x2970
0xe093: mov r15,rax
0xe096: jmp 0xdb80
0xe09b: nop qword ptr [rax+rax*1+0x0]
0xe0a0: sub rsp,0x8
0xe0a4: push qword ptr [rbp-0x3f0]
0xe0aa: push r9
0xe0ac: jmp 0xdfb4
0xe0b1: nop qword ptr [rax+0x0]
0xe0b8: push qword ptr [rbp-0x3f0]
0xe0be: push r9
0xe0c0: jmp 0xdf68
0xe0c5: nop qword ptr [rax]
0xe0c8: mov [rdi+0x1],0x0
0xe0cc: jmp 0xdb80
0xe0d1: nop qword ptr [rax+0x0]
0xe0d8: cmp rax,0xffffffff
0xe0dc: jnz 0xe596
0xe0e2: mov rax,r14
0xe0e5: add rax,0x1
0xe0e9: mov rbx,rax
0xe0ec: jnb 0xe178
0xe0f2: cmp r12,0xffffffff
0xe0f6: jnz 0xd7d5
0xe0fc: mov rbx,r12
0xe0ff: mov [r15+r14*1+0x0],0x25
0xe104: mov r8,qword ptr [r13+0x8]
0xe108: add r13,0x58
0xe10c: mov rcx,qword ptr [r13+0x0]
0xe110: add [rbp-0x400],0x1
0xe118: cmp rcx,r8
0xe11b: jnz 0xd7b9
0xe129: nop qword ptr [rax+0x0]
0xe130: mov r15,rcx
0xe133: jmp 0xdb80
0xe149: nop qword ptr [rax+0x0]
0xe150: mov edx,edi
0xe152: sub edx,0x12
0xe155: cmp edx,0x4
0xe158: jnbe 0xe596
0xe15e: lea rdi,[rip+0x3e93]
0xe165: mov rax,qword ptr [rax+0x10]
0xe169: movsxd rdx,dword ptr [rdi+rdx*4+0x0]
0xe16d: add rdx,rdi
0xe170: jmp rdx
0xe172: nop qword ptr [rax+rax*1+0x0]
0xe178: cmp r12,rax
0xe17b: jnb 0xe0ff
0xe17d: test r12,r12
0xe180: jnz 0xe550
0xe186: cmp rax,0xc
0xe18a: jnbe 0xe562
0xe190: mov r12d,0xc
0xe196: cmp r15,qword ptr [rbp-0x3e8]
0xe19d: setz dl
0xe1a0: test r15,r15
0xe1a3: jz 0xe410
0xe1a9: test dl,dl
0xe1ab: jnz 0xe410
0xe1b1: mov rsi,r12
0xe1b4: mov rdi,r15
0xe1b7: call 0x2a20
0xe1bc: test rax,rax
0xe1bf: jz 0xe2bb
0xe1c5: mov r15,rax
0xe1c8: jmp 0xe0ff
0xe1cd: nop qword ptr [rax]
0xe1d0: mov [rbp-0x3e0],0x0
0xe1da: jmp 0xdac7
0xe1df: nop 
0xe298: nop qword ptr [rax+rax*1+0x0]
0xe2a8: nop qword ptr [rax+rax*1+0x0]
0xe2b0: mov qword ptr [rax],r14
0xe2b3: mov rbx,r14
0xe2b6: jmp 0xe104
0xe2dd: nop qword ptr [rax]
0xe2e0: mov r9,qword ptr [rbp-0x3f0]
0xe2e7: mov r8,qword ptr [rbp-0x3d8]
0xe2ee: mov rsi,r10
0xe2f1: mov rcx,0xffffffff
0xe2f8: mov edx,0x1
0xe2fd: mov eax,0x1
0xe302: mov qword ptr [rbp-0x430],r10
0xe309: call 0x2700
0xe30e: mov r10,qword ptr [rbp-0x430]
0xe315: jmp 0xdc36
0xe31a: nop qword ptr [rax+rax*1+0x0]
0xe320: sub rsp,0x10
0xe324: mov r9,qword ptr [rbp-0x3f0]
0xe32b: fstp [rsp],st0
0xe32e: jmp 0xdc09
0xe333: nop qword ptr [rax+rax*1+0x0]
0xe338: js 0xd7d5
0xe33e: add r12,r12
0xe341: cmp r12,rax
0xe344: jnb 0xdb29
0xe34a: nop qword ptr [rax+rax*1+0x0]
0xe350: test rdx,rdx
0xe353: jnz 0xd7d5
0xe359: cmp rax,0xffffffff
0xe35d: jz 0xd7d5
0xe363: cmp r15,qword ptr [rbp-0x3e8]
0xe36a: mov r12,rax
0xe36d: setz dl
0xe370: test r15,r15
0xe373: jnz 0xdb3c
0xe379: nop qword ptr [rax+0x0]
0xe380: mov rdi,r12
0xe383: mov byte ptr [rbp-0x3c8],dl
0xe389: call 0x29d0
0xe38e: test rax,rax
0xe391: mov rcx,rax
0xe394: movzx edx,byte ptr [rbp-0x3c8]
0xe39b: jz 0xd7d5
0xe3a1: test r14,r14
0xe3a4: jz 0xe540
0xe3aa: test dl,dl
0xe3ac: jz 0xe540
0xe3b2: mov rsi,r15
0xe3b5: mov rdx,r14
0xe3b8: mov rdi,rax
0xe3bb: call 0x2970
0xe3c0: mov r15,rax
0xe3c3: jmp 0xdb5b
0xe3c8: nop qword ptr [rax+rax*1+0x0]
0xe3d0: mov [rbx],0x4c
0xe3d3: add rbx,0x1
0xe3d7: jmp 0xda8b
0xe3dc: nop qword ptr [rax+0x0]
0xe3e0: mov byte ptr [rax],r14b
0xe3e3: mov rbx,r14
0xe3e6: jmp 0xe104
0xe3eb: nop qword ptr [rax+rax*1+0x0]
0xe3f0: mov dword ptr [rax],r14d
0xe3f3: mov rbx,r14
0xe3f6: jmp 0xe104
0xe3fb: nop qword ptr [rax+rax*1+0x0]
0xe400: mov word ptr [rax],r14w
0xe404: mov rbx,r14
0xe407: jmp 0xe104
0xe40c: nop qword ptr [rax+0x0]
0xe410: mov rdi,r12
0xe413: mov byte ptr [rbp-0x3c8],dl
0xe419: call 0x29d0
0xe41e: test rax,rax
0xe421: mov rcx,rax
0xe424: movzx edx,byte ptr [rbp-0x3c8]
0xe42b: jz 0xd7d5
0xe431: test r14,r14
0xe434: jz 0xe574
0xe43a: test dl,dl
0xe43c: jz 0xe574
0xe442: mov rsi,r15
0xe445: mov rdx,r14
0xe448: mov rdi,rax
0xe44b: call 0x2970
0xe450: mov r15,rax
0xe453: jmp 0xe0ff
0xe458: nop qword ptr [rax+rax*1+0x0]
0xe468: nop qword ptr [rax+rax*1+0x0]
0xe470: sub rsp,0x8
0xe474: push qword ptr [rbp-0x3f0]
0xe47a: jmp 0xdef5
0xe47f: nop 
0xe480: sub rsp,0x8
0xe484: push qword ptr [rbp-0x3f0]
0xe48a: sub rsp,0x10
0xe48e: fstp [rsp],st0
0xe491: jmp 0xdfbb
0xe496: nop qword ptr [rax+rax*1+0x0]
0xe4a0: mov rax,qword ptr [rbp-0x3c8]
0xe4a7: mov edi,dword ptr [rbp-0x424]
0xe4ad: movsxd rbx,ecx
0xe4b0: add rbx,r14
0xe4b3: mov dword ptr [rax],edi
0xe4b5: jmp 0xe104
0xe4ba: nop qword ptr [rax+rax*1+0x0]
0xe4c0: cmp r15,qword ptr [rbp-0x3e8]
0xe4c7: jz 0xe4d2
0xe4c9: test r15,r15
0xe4cc: jnz 0xe589
0xe4d2: mov rax,qword ptr [rbp-0x420]
0xe4d9: test rax,rax
0xe4dc: jz 0xe4e6
0xe4de: mov rdi,rax
0xe4e1: call 0x2710
0xe4e6: mov rax,qword ptr [rbp-0x408]
0xe4ed: mov rdi,qword ptr [rbp-0x2b8]
0xe4f4: add rax,0x20
0xe4f8: cmp rdi,rax
0xe4fb: jz 0xe502
0xe4fd: call 0x2710
0xe502: mov rax,qword ptr [rbp-0x410]
0xe509: mov rdi,qword ptr [rbp-0x3a8]
0xe510: add rax,0x10
0xe514: cmp rdi,rax
0xe517: jz 0xe51e
0xe519: call 0x2710
0xe51e: mov rax,qword ptr [rbp-0x3c8]
0xe525: xor r15d,r15d
0xe528: mov [rax],0x4b
0xe52e: jmp 0xd84f
0xe533: nop qword ptr [rax+rax*1+0x0]
0xe540: mov r15,rcx
0xe543: jmp 0xdb5b
0xe548: nop qword ptr [rax+rax*1+0x0]
0xe550: js 0xd7d5
0xe556: add r12,r12
0xe559: cmp r12,rax
0xe55c: jnb 0xe196
0xe562: cmp rax,0xffffffff
0xe566: jz 0xd7d5
0xe56c: mov r12,rax
0xe56f: jmp 0xe196
0xe574: mov r15,rcx
0xe577: jmp 0xe0ff
0xe57c: mov rdi,r15
0xe57f: call 0x2710
0xe584: jmp 0xddd2
0xe589: mov rdi,r15
0xe58c: call 0x2710
0xe591: jmp 0xe4d2
0xe596: call 0x2740
0xe59b: nop qword ptr [rax+rax*1+0x0]
0xe74d: nop qword ptr [rax]
0xe758: cmp r12,0xffffffff
0xe75c: jz 0xdb80
0xe762: jmp 0xd7e1
0xe76c: cmp r12,0xffffffff
0xe770: mov edx,0x1
0xe775: jz 0xdb5b
0xe77b: test r12,r12
0xe77e: jz 0xd7d5
0xe784: jns 0xe350
0xe78a: jmp 0xd7d5
0xe7c8: nop qword ptr [rax+rax*1+0x0]
0xe9fe: nop 
0xea41: nop qword ptr [rax+0x0]
0xeaa7: nop qword ptr [rax+rax*1+0x0]
0xeaf2: nop qword ptr [rax+rax*1+0x0]
0xeb08: nop qword ptr [rax+rax*1+0x0]
0xeb18: nop qword ptr [rax+rax*1+0x0]
0xeb28: nop qword ptr [rax+rax*1+0x0]
0xeb38: nop qword ptr [rax+rax*1+0x0]
0xeb67: nop qword ptr [rax+rax*1+0x0]
0xebad: nop qword ptr [rax]
0xebb5: nop qword ptr [rax]
0xec87: lea rax,[r10+r10*4+0x0]
0xec8b: mov rdi,qword ptr [r14+0x8]
0xec8f: cmp qword ptr [rsp+0x28],rdi
0xec94: mov qword ptr [rsp+0x40],r9
0xec99: mov qword ptr [rsp+0x38],r10
0xec9e: lea rax,[r10+rax*2+0x0]
0xeca2: mov qword ptr [rsp+0x30],r8
0xeca7: lea rsi,[rax*8+0x0]
0xecaf: jz 0xf36d
0xecb5: call 0x2a20
0xecba: test rax,rax
0xecbd: mov rcx,rax
0xecc0: mov r8,qword ptr [rsp+0x30]
0xecc5: mov r10,qword ptr [rsp+0x38]
0xecca: mov r9,qword ptr [rsp+0x40]
0xeccf: jz 0xf617
0xecd5: mov rax,qword ptr [rsp+0x28]
0xecda: cmp rax,qword ptr [r14+0x8]
0xecde: mov rbx,qword ptr [r14]
0xece1: jz 0xf390
0xece7: mov qword ptr [r14+0x8],rcx
0xeceb: jmp 0xea08
0xef7d: nop qword ptr [rax]
0xf0d2: nop qword ptr [rax+rax*1+0x0]
0xf135: nop qword ptr [rax]
0xf1c6: nop qword ptr [rax+rax*1+0x0]
0xf21e: nop 
0xf36d: mov rdi,rsi
0xf370: call 0x29d0
0xf375: test rax,rax
0xf378: mov rcx,rax
0xf37b: mov r8,qword ptr [rsp+0x30]
0xf380: mov r10,qword ptr [rsp+0x38]
0xf385: mov r9,qword ptr [rsp+0x40]
0xf38a: jz 0xf479
0xf390: lea rax,[rbx+rbx*4+0x0]
0xf394: mov rsi,qword ptr [rsp+0x28]
0xf399: mov rdi,rcx
0xf39c: mov qword ptr [rsp+0x40],r9
0xf3a1: mov qword ptr [rsp+0x38],r10
0xf3a6: lea rdx,[rbx+rax*2+0x0]
0xf3aa: mov qword ptr [rsp+0x30],r8
0xf3af: shl rdx,0x3
0xf3b3: call 0x2970
0xf3b8: mov rbx,qword ptr [r14]
0xf3bb: mov rcx,rax
0xf3be: mov r9,qword ptr [rsp+0x40]
0xf3c3: mov r10,qword ptr [rsp+0x38]
0xf3c8: mov r8,qword ptr [rsp+0x30]
0xf3cd: jmp 0xece7
0xf479: mov rcx,qword ptr [r15+0x8]
0xf47d: cmp qword ptr [rsp+0x8],rcx
0xf482: jz 0xf49c
0xf62b: nop qword ptr [rax+rax*1+0x0]
0xf680: push r15
0xf682: push r14
0xf684: mov r15,rdx
0xf687: push r13
0xf689: push r12
0xf68b: lea r12,[rip+0x204a5e]
0xf692: push rbp
0xf693: lea rbp,[rip+0x204a5e]
0xf69a: push rbx
0xf69b: mov r13d,edi
0xf69e: mov r14,rsi
0xf6a1: sub rbp,r12
0xf6a4: sub rsp,0x8
0xf6a8: sar rbp,0x3
0xf6ac: call 0x26b0
0xf6b1: test rbp,rbp
0xf6b4: jz 0xf6d6
0xf6b6: xor ebx,ebx
0xf6b8: nop qword ptr [rax+rax*1+0x0]
0xf6c0: mov rdx,r15
0xf6c3: mov rsi,r14
0xf6c6: mov edi,r13d
0xf6c9: call qword ptr [r12+rbx*8+0x0]
0xf6cd: add rbx,0x1
0xf6d1: cmp rbp,rbx
0xf6d4: jnz 0xf6c0
0xf6d6: add rsp,0x8
0xf6da: pop rbx
0xf6db: pop rbp
0xf6dc: pop r12
0xf6de: pop r13
0xf6e0: pop r14
0xf6e2: pop r15
0xf6e4: ret
0xf710: sub rsp,0x8
0xf714: add rsp,0x8
0xf718: ret
