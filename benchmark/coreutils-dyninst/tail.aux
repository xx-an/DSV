0x1aa8: sub rsp,0x8
0x1aac: mov rax,qword ptr [rip+0x20e535]
0x1ab3: test rax,rax
0x1ab6: jz 0x1aba
0x1ab8: call rax
0x1aba: add rsp,0x8
0x1abe: ret
0x1ad6: push 0x0
0x1ae6: push 0x1
0x1af6: push 0x2
0x1b06: push 0x3
0x1b16: push 0x4
0x1b26: push 0x5
0x1b30: jmp qword ptr [rip+0x20e29a]
0x1b36: push 0x6
0x1b40: jmp qword ptr [rip+0x20e292]
0x1b46: push 0x7
0x1b56: push 0x8
0x1b66: push 0x9
0x1b76: push 0xa
0x1b86: push 0xb
0x1b96: push 0xc
0x1ba6: push 0xd
0x1bb0: jmp qword ptr [rip+0x20e25a]
0x1bb6: push 0xe
0x1bc6: push 0xf
0x1bd6: push 0x10
0x1be6: push 0x11
0x1bf6: push 0x12
0x1c06: push 0x13
0x1c16: push 0x14
0x1c26: push 0x15
0x1c36: push 0x16
0x1c46: push 0x17
0x1c56: push 0x18
0x1c66: push 0x19
0x1c76: push 0x1a
0x1c80: jmp qword ptr [rip+0x20e1f2]
0x1c86: push 0x1b
0x1c96: push 0x1c
0x1ca6: push 0x1d
0x1cb6: push 0x1e
0x1cc6: push 0x1f
0x1cd6: push 0x20
0x1ce6: push 0x21
0x1cf6: push 0x22
0x1d06: push 0x23
0x1d16: push 0x24
0x1d26: push 0x25
0x1d36: push 0x26
0x1d46: push 0x27
0x1d56: push 0x28
0x1d66: push 0x29
0x1d76: push 0x2a
0x1d86: push 0x2b
0x1d90: jmp qword ptr [rip+0x20e16a]
0x1d96: push 0x2c
0x1da6: push 0x2d
0x1db0: jmp qword ptr [rip+0x20e15a]
0x1db6: push 0x2e
0x1dc6: push 0x2f
0x1dd0: jmp qword ptr [rip+0x20e14a]
0x1dd6: push 0x30
0x1de6: push 0x31
0x1df6: push 0x32
0x1e06: push 0x33
0x1e10: jmp qword ptr [rip+0x20e12a]
0x1e16: push 0x34
0x1e26: push 0x35
0x1e36: push 0x36
0x1e46: push 0x37
0x1e56: push 0x38
0x1e66: push 0x39
0x1e76: push 0x3a
0x1e86: push 0x3b
0x1e90: jmp qword ptr [rip+0x20e0ea]
0x1e96: push 0x3c
0x1ea6: push 0x3d
0x1eb6: push 0x3e
0x1ec6: push 0x3f
0x1ed6: push 0x40
0x1ee6: push 0x41
0x1ef6: push 0x42
0x1f06: push 0x43
0x1f16: push 0x44
0x1f26: push 0x45
0x1f36: push 0x46
0x1f40: jmp qword ptr [rip+0x20e0b2]
0x1f46: nop 
0x20a6: nop qword ptr [rax+rax*1+0x0]
0x20e7: nop qword ptr [rax+rax*1+0x0]
0x2123: nop qword ptr [rax+rax*1+0x0]
0x2191: nop qword ptr [rax+0x0]
0x21a2: nop qword ptr [rax+rax*1+0x0]
0x21e9: nop qword ptr [rax+0x0]
0x21fc: nop qword ptr [rax+0x0]
0x2278: nop qword ptr [rax+rax*1+0x0]
0x228a: nop qword ptr [rax+rax*1+0x0]
0x230f: nop 
0x2363: nop qword ptr [rax+rax*1+0x0]
0x23a6: nop qword ptr [rax+rax*1+0x0]
0x247e: lea rcx,[rsp+0x90]
0x2486: lea r8,[rip+0x9364]
0x248d: xor esi,esi
0x248f: mov edx,0xa
0x2494: call 0xa9e0
0x2499: and eax,0xfd
0x249c: jnz 0x4714
0x255c: mov [rip+0x20dbaa],0x0
0x28e5: jmp 0x2566
0x2929: jmp 0x2650
0x29a8: lea rsi,[rip+0x8f32]
0x29af: mov edx,0x5
0x29b4: xor edi,edi
0x29b6: mov rbx,rax
0x29b9: call 0x1bd0
0x29be: mov esi,dword ptr [rbp+0x0]
0x29c1: mov rdx,rax
0x29c4: mov rcx,rbx
0x29c7: xor edi,edi
0x29c9: xor eax,eax
0x29cb: call 0x1e60
0x29d0: mov [rsp+0x18],0x0
0x2b3b: nop qword ptr [rax+rax*1+0x0]
0x2cea: lea rsi,[rip+0x8956]
0x2cf1: mov edx,0x5
0x2cf6: xor edi,edi
0x2cf8: mov rbx,rax
0x2cfb: call 0x1bd0
0x2d00: mov rbp,rax
0x2d03: call 0x1b10
0x2d08: mov esi,dword ptr [rax]
0x2d0a: mov rcx,rbx
0x2d0d: mov rdx,rbp
0x2d10: xor edi,edi
0x2d12: xor eax,eax
0x2d14: call 0x1e60
0x2d19: mov [rsp+0x18],0x0
0x2d1e: jmp 0x29d5
0x2e57: lea rsi,[rip+0x99d2]
0x2e5e: mov rbx,rax
0x2e61: mov edx,0x5
0x2e66: xor edi,edi
0x2e68: call 0x1bd0
0x2e6d: mov r8,rbp
0x2e70: mov rdx,rax
0x2e73: mov rcx,rbx
0x2e76: xor esi,esi
0x2e78: xor edi,edi
0x2e7a: xor eax,eax
0x2e7c: call 0x1e60
0x2fad: lea rsi,[rip+0x8948]
0x2fb4: xor edi,edi
0x2fb6: mov edx,0x5
0x2fbb: mov rbx,rax
0x2fbe: call 0x1bd0
0x2fc3: mov rbp,rax
0x2fc6: call 0x1b10
0x2fcb: mov esi,dword ptr [rax]
0x2fcd: mov rcx,rbx
0x2fd0: mov rdx,rbp
0x2fd3: xor edi,edi
0x2fd5: xor eax,eax
0x2fd7: call 0x1e60
0x2fdc: jmp 0x2cb0
0x2ff0: lea rsi,[rip+0x8905]
0x2ff7: mov edx,0x5
0x2ffc: xor edi,edi
0x2ffe: mov rbx,rax
0x3001: call 0x1bd0
0x3006: mov rbp,rax
0x3009: call 0x1b10
0x300e: mov esi,dword ptr [rax]
0x3010: mov rcx,rbx
0x3013: mov rdx,rbp
0x3016: xor edi,edi
0x3018: xor eax,eax
0x301a: call 0x1e60
0x301f: mov [rsp+0x18],0x0
0x3024: jmp 0x2cb0
0x32e0: lea rsi,[rip+0x8360]
0x32e7: xor edi,edi
0x32e9: mov edx,0x5
0x32ee: mov rbp,rax
0x32f1: call 0x1bd0
0x32f6: mov esi,dword ptr [rbx]
0x32f8: mov rdx,rax
0x32fb: mov rcx,rbp
0x32fe: xor edi,edi
0x3300: xor eax,eax
0x3302: call 0x1e60
0x3307: jmp 0x2e81
0x34c5: nop qword ptr [rax]
0x365d: nop qword ptr [rax]
0x37c3: nop qword ptr [rax+rax*1+0x0]
0x37fd: nop qword ptr [rax]
0x387e: nop 
0x38a1: lea rsi,[rip+0x7ddb]
0x38a8: mov edx,0x5
0x38ad: xor edi,edi
0x38af: mov qword ptr [rsp+0x38],rax
0x38b4: call 0x1bd0
0x38b9: mov rcx,qword ptr [rsp+0x38]
0x38be: mov rdx,rax
0x38c1: xor esi,esi
0x38c3: xor edi,edi
0x38c5: xor eax,eax
0x38c7: call 0x1e60
0x38cc: mov rcx,r13
0x38cf: xor edx,edx
0x38d1: xor esi,esi
0x38d3: mov edi,ebp
0x38d5: call 0x4ea0
0x38da: mov [r14+0x8],0x0
0x38e2: jmp 0x35d6
0x390c: mov esi,dword ptr [r12]
0x3910: lea rdx,[rip+0x90b5]
0x3917: mov rcx,rax
0x391a: xor edi,edi
0x391c: xor eax,eax
0x391e: call 0x1e60
0x3923: mov edi,ebp
0x3925: call 0x1ce0
0x392a: jmp 0x34e2
0x39ac: jmp 0x2a0d
0x39b1: xor esi,esi
0x39b3: call 0x1d70
0x39b8: test eax,eax
0x39ba: jz 0x3784
0x39c0: call 0x1b10
0x39c5: cmp [rax],0x1
0x39c8: jz 0x3784
0x39ce: movzx eax,byte ptr [rsp+0x50]
0x39d3: mov byte ptr [rsp+0x48],al
0x39d7: jmp 0x34ac
0x3a90: lea rsi,[rip+0x7bb0]
0x3a97: mov edx,0x5
0x3a9c: xor edi,edi
0x3a9e: mov rbx,rax
0x3aa1: call 0x1bd0
0x3aa6: mov rbp,rax
0x3aa9: call 0x1b10
0x3aae: mov esi,dword ptr [rax]
0x3ab0: mov rcx,rbx
0x3ab3: mov rdx,rbp
0x3ab6: xor edi,edi
0x3ab8: xor eax,eax
0x3aba: call 0x1e60
0x3abf: mov [rsp+0x18],0x0
0x3ac4: jmp 0x2c86
0x3c05: lea rsi,[rip+0x7a3b]
0x3c0c: mov edx,0x5
0x3c11: xor edi,edi
0x3c13: mov rbx,rax
0x3c16: call 0x1bd0
0x3c1b: mov r12,rax
0x3c1e: call 0x1b10
0x3c23: mov esi,dword ptr [rax]
0x3c25: xor edi,edi
0x3c27: mov rcx,rbx
0x3c2a: mov rdx,r12
0x3c2d: xor eax,eax
0x3c2f: call 0x1e60
0x3c34: mov rdi,rbp
0x3c37: jmp 0x3a77
0x3de1: cmp [rbx+0x34],0x0
0x3de5: jnz 0x3f8e
0x3deb: mov r15,qword ptr [rbx]
0x3dee: xor eax,eax
0x3df0: or rcx,0xffffffff
0x3df4: mov rdi,r15
0x3df7: repnz scasb al,byte ptr es:[rdi]
0x3df9: mov [rbx+0x44],0xffffffff
0x3e00: mov rax,rcx
0x3e03: not rax
0x3e06: sub rax,0x1
0x3e0a: cmp r12,rax
0x3e0d: cmovnae r12,rax
0x3e11: sub edx,0x1
0x3e14: jnz 0x3e7d
0x3e16: mov rdi,r15
0x3e19: call 0x6af0
0x3e1e: lea rdx,[r15+rax*1+0x0]
0x3e22: mov r14,rax
0x3e25: mov rdi,r15
0x3e28: movzx eax,byte ptr [rdx]
0x3e2b: mov qword ptr [rsp+0x58],rdx
0x3e30: mov byte ptr [rsp+0x48],al
0x3e34: call 0x6bb0
0x3e39: mov rdx,qword ptr [rsp+0x58]
0x3e3e: sub rax,r15
0x3e41: test r14,r14
0x3e44: mov qword ptr [rbx+0x50],rax
0x3e48: lea rsi,[rip+0x7985]
0x3e4f: mov [rdx],0x0
0x3e52: jz 0x3e57
0x3e54: mov rsi,qword ptr [rbx]
0x3e57: mov edx,0x784
0x3e5c: mov edi,r13d
0x3e5f: call 0x1de0
0x3e64: movzx ecx,byte ptr [rsp+0x48]
0x3e69: mov dword ptr [rbx+0x48],eax
0x3e6c: mov rax,qword ptr [rbx]
0x3e6f: mov byte ptr [rax+r14*1+0x0],cl
0x3e73: cmp [rbx+0x48],0x0
0x3e77: js 0x46c2
0x3e7d: mov edx,dword ptr [rsp+0x44]
0x3e81: mov rsi,qword ptr [rbx]
0x3e84: mov edi,r13d
0x3e87: call 0x1de0
0x3e8c: test eax,eax
0x3e8e: mov dword ptr [rbx+0x44],eax
0x3e91: jns 0x3f69
0x3e97: cmp [rbx+0x38],0xff
0x3e9b: movzx eax,byte ptr [rsp+0x10]
0x3ea0: movzx esi,byte ptr [rsp+0x50]
0x3ea5: cmovne eax,esi
0x3ea8: mov byte ptr [rsp+0x10],al
0x3eac: call 0x1b10
0x3eb1: mov r14,rax
0x3eb4: mov eax,dword ptr [rax]
0x3eb6: mov edx,eax
0x3eb8: and edx,0xef
0x3ebb: cmp edx,0xc
0x3ebe: jnz 0x3f97
0x3ec4: mov r14,qword ptr [rsp+0x8]
0x3ec9: lea rsi,[rip+0x7a40]
0x3ed0: mov edx,0x5
0x3ed5: xor edi,edi
0x3ed7: call 0x1bd0
0x3edc: xor esi,esi
0x3ede: mov rdx,rax
0x3ee1: xor edi,edi
0x3ee3: xor eax,eax
0x3ee5: call 0x1e60
0x3f26: mov rax,qword ptr [rsp+0x28]
0x3f2b: mov rsi,qword ptr [rsp+0x60]
0x3f30: lea rbp,[rax+0x44]
0x3f34: lea rbx,[rax+rsi*1+0x44]
0x3f39: jmp 0x3f5f
0x3f3b: mov esi,dword ptr [rbp+0x0]
0x3f3e: cmp esi,0xff
0x3f41: jz 0x3f4b
0x3f43: mov edi,r13d
0x3f46: call 0x1f20
0x3f4b: mov esi,dword ptr [rbp+0x4]
0x3f4e: cmp esi,0xff
0x3f51: jz 0x3f5b
0x3f53: mov edi,r13d
0x3f56: call 0x1f20
0x3f5b: add rbp,0x60
0x3f5f: cmp rbx,rbp
0x3f62: jnz 0x3f3b
0x3f64: jmp 0x3448
0x3f69: mov rdi,qword ptr [rsp+0x8]
0x3f6e: mov rsi,rbx
0x3f71: call 0x7d40
0x3f76: test rax,rax
0x3f79: jz 0x44fb
0x3f7f: movzx eax,byte ptr [rsp+0x50]
0x3f84: mov byte ptr [rsp+0x38],al
0x3f88: mov edx,dword ptr [rip+0x20c092]
0x3f8e: add rbx,0x60
0x3f92: jmp 0x3dd8
0x3f97: cmp eax,dword ptr [rbx+0x3c]
0x3f9a: jz 0x3f88
0x3f9c: mov rsi,qword ptr [rbx]
0x3f9f: mov edi,0x4
0x3fa4: call 0x9b20
0x3fa9: lea rsi,[rip+0x797c]
0x3fb0: mov edx,0x5
0x3fb5: xor edi,edi
0x3fb7: mov qword ptr [rsp+0x48],rax
0x3fbc: call 0x1bd0
0x3fc1: mov rcx,qword ptr [rsp+0x48]
0x3fc6: mov esi,dword ptr [r14]
0x3fc9: mov rdx,rax
0x3fcc: xor edi,edi
0x3fce: xor eax,eax
0x3fd0: call 0x1e60
0x3fd5: mov edx,dword ptr [rip+0x20c045]
0x3fdb: jmp 0x3f8e
0x4019: cmp [r15+0x38],0xff
0x401e: jz 0x405a
0x4020: mov rdx,qword ptr [rsp+0x8]
0x4025: mov rsi,qword ptr [r15]
0x4028: mov edi,0x1
0x402d: call 0x1db0
0x4032: test eax,eax
0x4034: jnz 0x405a
0x4036: mov rax,qword ptr [rsp+0x220]
0x403e: cmp qword ptr [r15+0x20],rax
0x4042: jnz 0x45e7
0x4048: mov rax,qword ptr [rsp+0x228]
0x4050: cmp qword ptr [r15+0x28],rax
0x4054: jnz 0x45e7
0x405a: mov rsi,rbx
0x405d: mov rdi,r15
0x4060: call 0x51d0
0x4065: add r15,0x60
0x406e: cmp [r15+0x34],0x0
0x4073: jnz 0x4065
0x4075: cmp [rip+0x20bfa4],0x1
0x407c: jnz 0x4019
0x407e: xor esi,esi
0x4080: mov rdi,r15
0x4083: call 0x5a90
0x4088: jmp 0x405a
0x410c: test bpl,bpl
0x410f: jnz 0x468f
0x4115: xor esi,esi
0x4117: call 0x1d70
0x411c: test eax,eax
0x411e: jz 0x423d
0x4124: call 0x1b10
0x4129: cmp [rax],0x1
0x412c: jz 0x423d
0x4132: movzx ebp,byte ptr [rsp+0x50]
0x4137: mov [rsp+0xa8],0x0
0x4143: mov [rsp+0xa0],0x0
0x423d: movsd xmm4,dword ptr [rsp+0x30]
0x4243: pxor xmm0,xmm0
0x4247: cvttsd2si rax,xmm4
0x424c: cvtsi2sd xmm0,rax
0x4251: mov qword ptr [rsp+0xa0],rax
0x4259: subsd xmm4,xmm0
0x425d: movsd xmm0,dword ptr [rip+0x8703]
0x4265: mulsd xmm0,xmm4
0x4269: cvttsd2si rax,xmm0
0x426e: mov qword ptr [rsp+0xa8],rax
0x4276: jmp 0x414f
0x43d5: mov rbx,rax
0x43d8: jmp 0x4388
0x443d: lea rsi,[rip+0x74e8]
0x4444: mov edx,0x5
0x4449: xor edi,edi
0x444b: mov qword ptr [rsp+0x68],rax
0x4450: call 0x1bd0
0x4455: mov r8,qword ptr [rsp+0x78]
0x445a: mov rcx,qword ptr [rsp+0x68]
0x445f: mov rdx,rax
0x4462: xor edi,edi
0x4464: xor eax,eax
0x4466: mov esi,dword ptr [r8]
0x4469: call 0x1e60
0x44ae: test rax,rax
0x44b1: mov r12,rax
0x44b4: jz 0x44e7
0x44b6: cmp rbx,rax
0x44b9: jz 0x44e7
0x44bb: cmp [rip+0x20bb5e],0x1
0x44c2: jz 0x4680
0x44c8: mov rdi,qword ptr [r12]
0x44cc: mov [r12+0x44],0xffffffff
0x44d5: call 0x49e0
0x44da: mov edi,dword ptr [r12+0x38]
0x44df: mov rsi,rax
0x44e2: call 0x4a20
0x44e7: mov rsi,rbx
0x44ea: mov rdi,r14
0x44ed: call 0x7d40
0x44f2: test rax,rax
0x44f5: jnz 0x437b
0x454e: call 0x1b10
0x4553: mov [rax],0x0
0x4559: jmp 0x3efd
0x45c9: jmp 0x43a4
0x45e7: mov rdi,qword ptr [r15]
0x45ea: call 0x49e0
0x45ef: mov edi,0x4
0x45f4: mov rsi,rax
0x45f7: call 0x9b20
0x45fc: lea rsi,[rip+0x7339]
0x4603: mov edx,0x5
0x4608: xor edi,edi
0x460a: mov rbp,rax
0x460d: call 0x1bd0
0x4612: mov r12,rax
0x4615: call 0x1b10
0x461a: mov esi,dword ptr [rax]
0x461c: mov rbx,rax
0x461f: mov rcx,rbp
0x4622: mov rdx,r12
0x4625: xor edi,edi
0x4627: xor eax,eax
0x4629: call 0x1e60
0x462e: mov rdi,r14
0x4631: call 0x7790
0x4636: mov [rbx],0x0
0x463c: jmp 0x3efd
0x4667: mov rdi,r14
0x466a: call 0x7790
0x466f: mov r8,qword ptr [rsp+0x8]
0x4674: mov [r8],0x0
0x467b: jmp 0x3efd
0x4680: xor esi,esi
0x4682: mov rdi,rax
0x4685: call 0x5a90
0x468a: jmp 0x44c8
0x468f: xor edi,edi
0x4691: call 0x1ec0
0x46c2: call 0x1b10
0x46c7: cmp [rax],0x1c
0x46ca: mov r15,rbx
0x46cd: mov r14,qword ptr [rsp+0x8]
0x46d2: mov rbx,rax
0x46d5: jz 0x3ec9
0x46db: mov rsi,qword ptr [r15]
0x46de: mov edi,0x4
0x46e3: call 0x9b20
0x46e8: lea rsi,[rip+0x8171]
0x46ef: xor edi,edi
0x46f1: mov edx,0x5
0x46f6: mov rbp,rax
0x46f9: call 0x1bd0
0x46fe: mov esi,dword ptr [rbx]
0x4700: mov rdx,rax
0x4703: mov rcx,rbp
0x4706: xor edi,edi
0x4708: xor eax,eax
0x470a: call 0x1e60
0x470f: jmp 0x3eea
0x4714: mov rdi,qword ptr [rbp+0x8]
0x4718: call 0x9df0
0x471d: lea rsi,[rip+0x70cf]
0x4724: mov edx,0x5
0x4729: xor edi,edi
0x472b: mov rbp,rax
0x472e: call 0x1bd0
0x4733: mov rbx,rax
0x4736: call 0x1b10
0x473b: mov esi,dword ptr [rax]
0x473d: lea rdx,[rip+0x70be]
0x4744: mov r8,rbp
0x4747: mov rcx,rbx
0x474a: mov edi,0x1
0x474f: xor eax,eax
0x4751: call 0x1e60
0x47a1: lea rsi,[rip+0x8170]
0x47a8: mov edx,0x5
0x47ad: xor edi,edi
0x47af: mov rbx,rax
0x47b2: call 0x1bd0
0x47b7: mov r9,qword ptr [rsp]
0x47bb: mov rdx,rax
0x47be: mov rcx,rbx
0x47c1: mov edi,0x1
0x47c6: xor eax,eax
0x47c8: mov esi,dword ptr [r9]
0x47cb: call 0x1e60
0x47e9: lea rsi,[rip+0x70d8]
0x47f0: mov rbx,rax
0x47f3: mov edx,0x5
0x47f8: xor edi,edi
0x47fa: call 0x1bd0
0x47ff: mov rcx,rbx
0x4802: mov rdx,rax
0x4805: xor esi,esi
0x4807: mov edi,0x1
0x480c: xor eax,eax
0x480e: call 0x1e60
0x483c: call 0x1c10
0x484b: mov edi,0x1
0x4850: call 0x1ec0
0x48ad: nop qword ptr [rax]
0x48da: hlt 
0x48e0: lea rdi,[rip+0x20b7d9]
0x48e7: push rbp
0x48e8: lea rax,[rip+0x20b7d1]
0x48ef: cmp rax,rdi
0x48f2: mov rbp,rsp
0x48f5: jz 0x4910
0x48f7: mov rax,qword ptr [rip+0x20b6da]
0x48fe: test rax,rax
0x4901: jz 0x4910
0x4903: pop rbp
0x4904: jmp rax
0x4906: nop qword ptr [rax+rax*1+0x0]
0x4910: pop rbp
0x4911: ret
0x4920: lea rdi,[rip+0x20b799]
0x4927: lea rsi,[rip+0x20b792]
0x492e: push rbp
0x492f: sub rsi,rdi
0x4932: mov rbp,rsp
0x4935: sar rsi,0x3
0x4939: mov rax,rsi
0x493c: shr rax,0x3f
0x4940: add rsi,rax
0x4943: sar rsi,0x1
0x4946: jz 0x4960
0x4948: mov rax,qword ptr [rip+0x20b6a1]
0x494f: test rax,rax
0x4952: jz 0x4960
0x4954: pop rbp
0x4955: jmp rax
0x4957: nop qword ptr [rax+rax*1+0x0]
0x4960: pop rbp
0x4961: ret
0x4970: cmp [rip+0x20b791],0x0
0x4977: jnz 0x49a8
0x4979: cmp [rip+0x20b677],0x0
0x4981: push rbp
0x4982: mov rbp,rsp
0x4985: jz 0x4993
0x4987: mov rdi,qword ptr [rip+0x20b67a]
0x498e: call 0x1f40
0x4993: call 0x48e0
0x4998: mov [rip+0x20b769],0x1
0x499f: pop rbp
0x49a0: ret
0x49a1: nop qword ptr [rax+0x0]
0x49a8: rep ret
0x49b0: push rbp
0x49b1: mov rbp,rsp
0x49b4: pop rbp
0x49b5: jmp 0x4920
0x49c0: movsxd rax,dword ptr [rdi+0x44]
0x49c4: xor edx,edx
0x49c6: div rsi
0x49c9: mov rax,rdx
0x49cc: ret
0x49d0: mov eax,dword ptr [rsi+0x44]
0x49d3: cmp dword ptr [rdi+0x44],eax
0x49d6: setz al
0x49d9: ret
0x4a3f: nop 
0x4a42: nop qword ptr [rax+rax*1+0x0]
0x4a55: lea rsi,[rip+0x6bb7]
0x4a5c: mov edx,0x5
0x4a61: xor edi,edi
0x4a63: mov r12,rax
0x4a66: call 0x1bd0
0x4a6b: mov rbp,rax
0x4a6e: call 0x1b10
0x4a73: mov r8d,ebx
0x4a76: mov rcx,r12
0x4a79: mov rdx,rbp
0x4a7c: pop rbx
0x4a7d: pop rbp
0x4a7e: pop r12
0x4a80: mov esi,dword ptr [rax]
0x4a82: xor edi,edi
0x4a84: xor eax,eax
0x4a86: jmp 0x1e60
0x4ad6: lea rsi,[rip+0x6b59]
0x4add: mov edx,0x5
0x4ae2: xor edi,edi
0x4ae4: mov rbp,rax
0x4ae7: call 0x1bd0
0x4aec: mov rbx,rax
0x4aef: call 0x1b10
0x4af4: mov esi,dword ptr [rax]
0x4af6: mov rcx,rbp
0x4af9: mov rdx,rbx
0x4afc: mov edi,0x1
0x4b01: xor eax,eax
0x4b03: call 0x1e60
0x4b08: nop qword ptr [rax+rax*1+0x0]
0x4bdd: nop qword ptr [rax]
0x4c08: lea rsi,[rip+0x6a38]
0x4c0f: mov edx,0x5
0x4c14: xor edi,edi
0x4c16: mov rbp,rax
0x4c19: call 0x1bd0
0x4c1e: mov rbx,rax
0x4c21: call 0x1b10
0x4c26: mov esi,dword ptr [rax]
0x4c28: mov rcx,rbp
0x4c2b: xor eax,eax
0x4c2d: mov rdx,rbx
0x4c30: xor edi,edi
0x4c32: call 0x1e60
0x4c37: mov eax,0x1
0x4c3c: jmp 0x4bb8
0x4c41: call 0x1c10
0x4d1d: nop qword ptr [rax]
0x4d55: call 0x1c10
0x4d69: lea rsi,[rip+0x68d7]
0x4d70: mov edx,0x5
0x4d75: xor edi,edi
0x4d77: mov rbp,rax
0x4d7a: call 0x1bd0
0x4d7f: mov esi,dword ptr [rbx]
0x4d81: mov rdx,rax
0x4d84: mov rcx,rbp
0x4d87: mov edi,0x1
0x4d8c: xor eax,eax
0x4d8e: call 0x1e60
0x4d93: nop qword ptr [rax]
0x4d96: nop qword ptr [rax+rax*1+0x0]
0x4dd8: nop qword ptr [rax+rax*1+0x0]
0x4e4d: nop qword ptr [rax]
0x4e5d: lea rsi,[rip+0x67e3]
0x4e64: mov edx,0x5
0x4e69: xor edi,edi
0x4e6b: mov rbp,rax
0x4e6e: call 0x1bd0
0x4e73: mov rbx,rax
0x4e76: call 0x1b10
0x4e7b: mov esi,dword ptr [rax]
0x4e7d: mov rcx,rbp
0x4e80: xor eax,eax
0x4e82: mov rdx,rbx
0x4e85: xor edi,edi
0x4e87: call 0x1e60
0x4e8c: mov eax,0x1
0x4e91: jmp 0x4e2a
0x4e93: call 0x1c10
0x4eeb: nop qword ptr [rax+rax*1+0x0]
0x4f1a: lea rsi,[rip+0x6745]
0x4f21: mov rbx,rax
0x4f24: mov edx,0x5
0x4f29: xor edi,edi
0x4f2b: call 0x1bd0
0x4f30: mov esi,dword ptr [rbp+0x0]
0x4f33: mov rdx,rax
0x4f36: xor edi,edi
0x4f38: mov r8,r13
0x4f3b: mov rcx,rbx
0x4f3e: xor eax,eax
0x4f40: call 0x1e60
0x4f45: mov edi,0x1
0x4f4a: call 0x1ec0
0x4f4f: nop 
0x4f55: mov edx,0x5
0x4f5a: mov rbx,rax
0x4f5d: lea rsi,[rip+0x6ac4]
0x4f64: jmp 0x4f29
0x4f66: call 0x1c10
0x5044: nop qword ptr [rax+0x0]
0x50fe: nop 
0x513e: nop 
0x514f: lea rsi,[rip+0x64f1]
0x5156: mov edx,0x5
0x515b: xor edi,edi
0x515d: mov rbp,rax
0x5160: call 0x1bd0
0x5165: mov rbx,rax
0x5168: call 0x1b10
0x516d: mov esi,dword ptr [rax]
0x516f: mov rcx,rbp
0x5172: xor eax,eax
0x5174: mov rdx,rbx
0x5177: xor edi,edi
0x5179: call 0x1e60
0x517e: xor eax,eax
0x5180: jmp 0x50d5
0x51c0: call 0x1c10
0x521f: nop 
0x52d6: nop qword ptr [rax+rax*1+0x0]
0x5301: nop qword ptr [rax+0x0]
0x533a: nop qword ptr [rax+rax*1+0x0]
0x534f: lea rsi,[rip+0x632d]
0x5356: mov r14,rax
0x5359: mov edx,0x5
0x535e: xor edi,edi
0x5360: call 0x1bd0
0x5365: mov rcx,r14
0x5368: mov rdx,rax
0x536b: xor esi,esi
0x536d: xor edi,edi
0x536f: xor eax,eax
0x5371: call 0x1e60
0x5376: mov edi,dword ptr [rbx+0x38]
0x5379: mov rcx,r13
0x537c: xor edx,edx
0x537e: xor esi,esi
0x5380: call 0x4ea0
0x5385: mov [rbx+0x8],0x0
0x538d: jmp 0x525e
0x53fc: nop qword ptr [rax+0x0]
0x5467: nop qword ptr [rax+rax*1+0x0]
0x547d: lea rsi,[rip+0x65cc]
0x5484: xor edi,edi
0x5486: mov edx,0x5
0x548b: mov rbp,rax
0x548e: call 0x1bd0
0x5493: mov esi,dword ptr [r12]
0x5497: mov rdx,rax
0x549a: mov rcx,rbp
0x549d: xor edi,edi
0x549f: xor eax,eax
0x54a1: call 0x1e60
0x54a6: jmp 0x53dd
0x54ab: nop qword ptr [rax+rax*1+0x0]
0x5503: nop qword ptr [rax+rax*1+0x0]
0x555d: nop qword ptr [rax]
0x55b5: nop qword ptr [rax]
0x55fb: nop qword ptr [rax+rax*1+0x0]
0x564c: nop qword ptr [rax+0x0]
0x569a: nop qword ptr [rax+rax*1+0x0]
0x56df: nop 
0x570d: nop qword ptr [rax]
0x5741: nop qword ptr [rax+0x0]
0x576d: nop qword ptr [rax]
0x57a1: nop qword ptr [rax+0x0]
0x57e6: nop qword ptr [rax+rax*1+0x0]
0x5813: nop qword ptr [rax+rax*1+0x0]
0x5849: nop qword ptr [rax+0x0]
0x5879: nop qword ptr [rax+0x0]
0x589f: nop 
0x58bf: nop 
0x58df: nop 
0x5905: nop qword ptr [rax]
0x5927: nop qword ptr [rax+rax*1+0x0]
0x594f: nop 
0x596f: nop 
0x598f: nop 
0x59af: nop 
0x59cf: nop 
0x59ef: nop 
0x5a0f: nop 
0x5a23: nop qword ptr [rax+rax*1+0x0]
0x5a4d: nop qword ptr [rax]
0x5a6f: nop 
0x5a87: call 0x1c10
0x5b87: mov esi,dword ptr [r13+0x0]
0x5b8b: lea rdx,[rip+0x6e3a]
0x5b92: mov rcx,rax
0x5b95: xor edi,edi
0x5b97: xor eax,eax
0x5b99: call 0x1e60
0x5b9e: mov rbp,qword ptr [rbx]
0x5bf7: nop qword ptr [rax+rax*1+0x0]
0x5c0b: nop qword ptr [rax+rax*1+0x0]
0x5ca7: nop qword ptr [rax+rax*1+0x0]
0x5ceb: mov rdi,qword ptr [rbx]
0x5cee: call 0x49e0
0x5cf3: mov edi,0x4
0x5cf8: mov rsi,rax
0x5cfb: call 0x9b20
0x5d00: lea rsi,[rip+0x5a0c]
0x5d07: mov r14,rax
0x5d0a: mov edx,0x5
0x5d0f: xor edi,edi
0x5d11: call 0x1bd0
0x5d16: mov rcx,r14
0x5d19: mov rdx,rax
0x5d1c: xor esi,esi
0x5d1e: xor edi,edi
0x5d20: xor eax,eax
0x5d22: call 0x1e60
0x5d27: test ebp,ebp
0x5d29: mov eax,0xffffffff
0x5d2e: movzx r13d,r13b
0x5d32: cmove r13d,eax
0x5d36: mov rax,qword ptr [rsp+0x68]
0x5d3b: mov rdi,qword ptr [rbx]
0x5d3e: mov dword ptr [rbx+0x38],r12d
0x5d42: mov [rbx+0x8],0x0
0x5d4a: mov dword ptr [rbx+0x40],r13d
0x5d4e: mov [rbx+0x58],0x0
0x5d56: mov qword ptr [rbx+0x10],rax
0x5d5a: mov rax,qword ptr [rsp+0x70]
0x5d5f: mov [rbx+0x34],0x0
0x5d63: mov qword ptr [rbx+0x18],rax
0x5d67: mov rax,qword ptr [rsp+0x10]
0x5d6c: mov qword ptr [rbx+0x20],rax
0x5d70: mov rax,qword ptr [rsp+0x18]
0x5d75: mov qword ptr [rbx+0x28],rax
0x5d79: mov eax,dword ptr [rsp+0x28]
0x5d7d: mov dword ptr [rbx+0x30],eax
0x5d80: call 0x49e0
0x5d85: xor edx,edx
0x5d87: mov rcx,rax
0x5d8a: xor esi,esi
0x5d8c: mov edi,r12d
0x5d8f: call 0x4ea0
0x5d94: jmp 0x5bce
0x5d99: nop qword ptr [rax+0x0]
0x5dd9: lea rsi,[rip+0x58f3]
0x5de0: mov edx,0x5
0x5de5: xor edi,edi
0x5de7: mov rbp,rax
0x5dea: call 0x1bd0
0x5def: mov esi,dword ptr [rbx+0x3c]
0x5df2: mov rcx,rbp
0x5df5: mov rdx,rax
0x5df8: xor edi,edi
0x5dfa: xor eax,eax
0x5dfc: call 0x1e60
0x5e01: mov rbp,qword ptr [rbx]
0x5e04: jmp 0x5ba1
0x5e09: nop qword ptr [rax+0x0]
0x5e39: lea rsi,[rip+0x5cb0]
0x5e40: mov rbp,rax
0x5e43: mov edx,0x5
0x5e48: xor edi,edi
0x5e4a: call 0x1bd0
0x5e4f: mov rcx,rbp
0x5e52: mov rdx,rax
0x5e55: xor esi,esi
0x5e57: xor edi,edi
0x5e59: xor eax,eax
0x5e5b: call 0x1e60
0x5e60: mov [rbx+0x34],0x1
0x5e64: mov [rbx+0x35],0x1
0x5e68: mov rbp,qword ptr [rbx]
0x5e6b: jmp 0x5ba1
0x5eaf: lea rsi,[rip+0x5c0a]
0x5eb6: mov rbp,rax
0x5eb9: mov edx,0x5
0x5ebe: xor edi,edi
0x5ec0: call 0x1bd0
0x5ec5: mov r8,r13
0x5ec8: mov rdx,rax
0x5ecb: mov rcx,rbp
0x5ece: xor esi,esi
0x5ed0: xor edi,edi
0x5ed2: xor eax,eax
0x5ed4: call 0x1e60
0x5ee1: nop qword ptr [rax+0x0]
0x5f39: lea rsi,[rip+0x5b48]
0x5f40: mov rbp,rax
0x5f43: mov edx,0x5
0x5f48: xor edi,edi
0x5f4a: call 0x1bd0
0x5f4f: mov rcx,rbp
0x5f52: mov rdx,rax
0x5f55: xor esi,esi
0x5f57: xor edi,edi
0x5f59: xor eax,eax
0x5f5b: call 0x1e60
0x5f60: mov rbp,qword ptr [rbx]
0x5f63: jmp 0x5ba1
0x5f68: nop qword ptr [rax+rax*1+0x0]
0x5f7a: nop qword ptr [rax+rax*1+0x0]
0x5fbb: nop qword ptr [rax+rax*1+0x0]
0x5ff7: nop qword ptr [rax+rax*1+0x0]
0x6012: lea rsi,[rip+0x5b37]
0x6019: mov r14,rax
0x601c: xor edi,edi
0x601e: mov edx,0x5
0x6023: call 0x1bd0
0x6028: xor esi,esi
0x602a: mov rdx,rax
0x602d: mov rcx,r14
0x6030: xor edi,edi
0x6032: xor eax,eax
0x6034: call 0x1e60
0x6039: mov rdi,qword ptr [rbx]
0x603c: call 0x49e0
0x6041: mov edi,dword ptr [rbx+0x38]
0x6044: mov rsi,rax
0x6047: call 0x4a20
0x604c: jmp 0x5d27
0x6051: nop qword ptr [rax+0x0]
0x608b: nop qword ptr [rax+rax*1+0x0]
0x6090: call 0x49e0
0x6095: mov edi,0x4
0x609a: mov rsi,rax
0x609d: call 0x9b20
0x60a2: mov edx,0x5
0x60a7: mov r14,rax
0x60aa: lea rsi,[rip+0x5a77]
0x60b1: jmp 0x5d0f
0x65d0: mov edi,0x1
0x65d5: jmp 0x6110
0x6626: nop qword ptr [rax+rax*1+0x0]
0x66e7: nop qword ptr [rax+rax*1+0x0]
0x6745: mov r8,rbp
0x6748: mov rdx,rbx
0x674b: mov rcx,rax
0x674e: pop rbx
0x674f: pop rbp
0x6750: pop r12
0x6752: xor esi,esi
0x6754: xor edi,edi
0x6756: xor eax,eax
0x6758: jmp 0x1e60
0x675d: nop qword ptr [rax]
0x6780: push r15
0x6782: push r14
0x6784: mov r14,rdi
0x6787: push r13
0x6789: push r12
0x678b: xor edi,edi
0x678d: push rbp
0x678e: push rbx
0x678f: mov rbp,rsi
0x6792: lea rsi,[rip+0x6214]
0x6799: mov r12,rdx
0x679c: mov edx,0x5
0x67a1: sub rsp,0x8
0x67a5: mov rbx,qword ptr [rip+0x209954]
0x67ac: call 0x1bd0
0x67b1: mov rdi,rax
0x67b4: mov rsi,rbx
0x67b7: call 0x1d20
0x67bc: mov r15,qword ptr [r14]
0x67bf: test r15,r15
0x67c2: jz 0x6858
0x67c8: xor r13d,r13d
0x67cb: xor ebx,ebx
0x67cd: jmp 0x6808
0x67cf: nop 
0x67d0: mov rdi,r15
0x67d3: add rbx,0x1
0x67d7: mov r13,rbp
0x67da: call 0x9df0
0x67df: mov rdi,qword ptr [rip+0x20991a]
0x67e6: lea rdx,[rip+0x61d5]
0x67ed: mov rcx,rax
0x67f0: mov esi,0x1
0x67f5: xor eax,eax
0x67f7: add rbp,r12
0x67fa: call 0x1ee0
0x67ff: mov r15,qword ptr [r14+rbx*8+0x0]
0x6803: test r15,r15
0x6806: jz 0x6858
0x6808: test rbx,rbx
0x680b: jz 0x67d0
0x680d: mov rdx,r12
0x6810: mov rsi,rbp
0x6813: mov rdi,r13
0x6816: call 0x1d10
0x681b: test eax,eax
0x681d: jnz 0x67d0
0x681f: mov rdi,r15
0x6822: add rbx,0x1
0x6826: add rbp,r12
0x6829: call 0x9df0
0x682e: mov rdi,qword ptr [rip+0x2098cb]
0x6835: lea rdx,[rip+0x618e]
0x683c: mov rcx,rax
0x683f: mov esi,0x1
0x6844: xor eax,eax
0x6846: call 0x1ee0
0x684b: mov r15,qword ptr [r14+rbx*8+0x0]
0x684f: test r15,r15
0x6852: jnz 0x6808
0x6854: nop qword ptr [rax+0x0]
0x6858: mov rdi,qword ptr [rip+0x2098a1]
0x685f: mov rax,qword ptr [rdi+0x28]
0x6863: cmp rax,qword ptr [rdi+0x30]
0x6867: jnb 0x6888
0x6869: lea rdx,[rax+0x1]
0x686d: mov qword ptr [rdi+0x28],rdx
0x6871: mov [rax],0xa
0x6874: add rsp,0x8
0x6878: pop rbx
0x6879: pop rbp
0x687a: pop r12
0x687c: pop r13
0x687e: pop r14
0x6880: pop r15
0x6882: ret
0x6883: nop qword ptr [rax+rax*1+0x0]
0x6888: add rsp,0x8
0x688c: mov esi,0xa
0x6891: pop rbx
0x6892: pop rbp
0x6893: pop r12
0x6895: pop r13
0x6897: pop r14
0x6899: pop r15
0x689b: jmp 0x1c80
0x68f3: mov rdx,r15
0x68f6: mov rsi,rbp
0x68f9: mov rdi,rbx
0x68fc: call 0x6780
0x6901: call r13
0x6904: mov rax,0xffffffff
0x690b: jmp 0x68d6
0x6910: push r14
0x6912: push r13
0x6914: push r12
0x6916: push rbp
0x6917: push rbx
0x6918: mov r14,qword ptr [rsi]
0x691b: test r14,r14
0x691e: jz 0x6951
0x6920: mov r12,rcx
0x6923: mov r13,rdi
0x6926: mov rbp,rdx
0x6929: lea rbx,[rsi+0x8]
0x692d: jmp 0x693f
0x692f: nop 
0x6930: mov r14,qword ptr [rbx]
0x6933: add rbp,r12
0x6936: add rbx,0x8
0x693a: test r14,r14
0x693d: jz 0x6951
0x693f: mov rdx,r12
0x6942: mov rsi,rbp
0x6945: mov rdi,r13
0x6948: call 0x1d10
0x694d: test eax,eax
0x694f: jnz 0x6930
0x6951: pop rbx
0x6952: mov rax,r14
0x6955: pop rbp
0x6956: pop r12
0x6958: pop r13
0x695a: pop r14
0x695c: ret
0x69c4: nop qword ptr [rax+0x0]
0x6a03: nop qword ptr [rax+rax*1+0x0]
0x6a20: mov qword ptr [rip+0x209701],rdi
0x6a27: ret
0x6a30: mov byte ptr [rip+0x2096e9],dil
0x6a37: ret
0x6a40: push rbp
0x6a41: push rbx
0x6a42: sub rsp,0x8
0x6a46: mov rdi,qword ptr [rip+0x20967b]
0x6a4d: call 0xb250
0x6a52: test eax,eax
0x6a54: jz 0x6a6c
0x6a56: call 0x1b10
0x6a5b: cmp [rip+0x2096be],0x0
0x6a62: mov rbx,rax
0x6a65: jz 0x6a83
0x6a67: cmp [rax],0x20
0x6a6a: jnz 0x6a83
0x6a6c: mov rdi,qword ptr [rip+0x20968d]
0x6a73: call 0xb250
0x6a78: test eax,eax
0x6a7a: jnz 0x6ac2
0x6a7c: add rsp,0x8
0x6a80: pop rbx
0x6a81: pop rbp
0x6a82: ret
0x6a83: lea rsi,[rip+0x4c0c]
0x6a8a: xor edi,edi
0x6a8c: mov edx,0x5
0x6a91: call 0x1bd0
0x6a96: mov rdi,qword ptr [rip+0x20968b]
0x6a9d: mov rbp,rax
0x6aa0: test rdi,rdi
0x6aa3: jz 0x6acd
0x6aa5: call 0x9bf0
0x6aaa: mov esi,dword ptr [rbx]
0x6aac: lea rdx,[rip+0x4d4f]
0x6ab3: mov rcx,rax
0x6ab6: mov r8,rbp
0x6ab9: xor edi,edi
0x6abb: xor eax,eax
0x6abd: call 0x1e60
0x6ac2: mov edi,dword ptr [rip+0x209578]
0x6ac8: call 0x1b30
0x6acd: mov esi,dword ptr [rbx]
0x6acf: lea rdx,[rip+0x5ef6]
0x6ad6: mov rcx,rax
0x6ad9: xor edi,edi
0x6adb: xor eax,eax
0x6add: call 0x1e60
0x6ae2: jmp 0x6ac2
0x6af0: push rbp
0x6af1: push rbx
0x6af2: xor ebp,ebp
0x6af4: mov rbx,rdi
0x6af7: sub rsp,0x8
0x6afb: cmp [rdi],0x2f
0x6afe: setz bpl
0x6b02: call 0x6bb0
0x6b07: mov rcx,rax
0x6b0a: sub rcx,rbx
0x6b0d: cmp rcx,rbp
0x6b10: jbe 0x6b40
0x6b12: cmp [rax-0x1],0x2f
0x6b16: lea rdx,[rcx-0x1]
0x6b1a: jz 0x6b2e
0x6b1c: jmp 0x6b40
0x6b1e: nop 
0x6b20: cmp [rbx+rdx*1-0x1],0x2f
0x6b25: lea rax,[rdx-0x1]
0x6b29: jnz 0x6b33
0x6b2b: mov rdx,rax
0x6b2e: cmp rbp,rdx
0x6b31: jnz 0x6b20
0x6b33: add rsp,0x8
0x6b37: mov rax,rdx
0x6b3a: pop rbx
0x6b3b: pop rbp
0x6b3c: ret
0x6b3d: nop qword ptr [rax]
0x6b40: add rsp,0x8
0x6b44: mov rdx,rcx
0x6b47: mov rax,rdx
0x6b4a: pop rbx
0x6b4b: pop rbp
0x6b4c: ret
0x6b50: push rbp
0x6b51: push rbx
0x6b52: mov rbp,rdi
0x6b55: sub rsp,0x8
0x6b59: call 0x6af0
0x6b5e: test rax,rax
0x6b61: mov rbx,rax
0x6b64: setz al
0x6b67: movzx eax,al
0x6b6a: lea rdi,[rbx+rax*1+0x1]
0x6b6f: call 0x1dc0
0x6b74: test rax,rax
0x6b77: mov rcx,rax
0x6b7a: jz 0x6b96
0x6b7c: mov rdx,rbx
0x6b7f: mov rsi,rbp
0x6b82: mov rdi,rax
0x6b85: call 0x1d60
0x6b8a: test rbx,rbx
0x6b8d: mov rcx,rax
0x6b90: jz 0x6ba0
0x6b92: mov [rcx+rbx*1+0x0],0x0
0x6b96: add rsp,0x8
0x6b9a: mov rax,rcx
0x6b9d: pop rbx
0x6b9e: pop rbp
0x6b9f: ret
0x6ba0: mov [rax],0x2e
0x6ba3: mov ebx,0x1
0x6ba8: jmp 0x6b92
0x6bb0: movzx edx,byte ptr [rdi]
0x6bb3: mov rax,rdi
0x6bb6: cmp dl,0x2f
0x6bb9: jnz 0x6bcc
0x6bbb: nop qword ptr [rax+rax*1+0x0]
0x6bc0: add rax,0x1
0x6bc4: movzx edx,byte ptr [rax]
0x6bc7: cmp dl,0x2f
0x6bca: jz 0x6bc0
0x6bcc: test dl,dl
0x6bce: jz 0x6c0a
0x6bd0: mov rcx,rax
0x6bd3: xor esi,esi
0x6bd5: jmp 0x6bf5
0x6bd7: nop qword ptr [rax+rax*1+0x0]
0x6be0: test sil,sil
0x6be3: jz 0x6bea
0x6be5: mov rax,rcx
0x6be8: xor esi,esi
0x6bea: add rcx,0x1
0x6bee: movzx edx,byte ptr [rcx]
0x6bf1: test dl,dl
0x6bf3: jz 0x6c0a
0x6bf5: cmp dl,0x2f
0x6bf8: jnz 0x6be0
0x6bfa: add rcx,0x1
0x6bfe: movzx edx,byte ptr [rcx]
0x6c01: mov esi,0x1
0x6c06: test dl,dl
0x6c08: jnz 0x6bf5
0x6c0a: rep ret
0x6c10: push rbx
0x6c11: mov rbx,rdi
0x6c14: call 0x1bf0
0x6c19: cmp rax,0x1
0x6c1d: jbe 0x6c2a
0x6c1f: cmp [rbx+rax*1-0x1],0x2f
0x6c24: lea rdx,[rax-0x1]
0x6c28: jz 0x6c38
0x6c2a: pop rbx
0x6c2b: ret
0x6c2c: nop qword ptr [rax+0x0]
0x6c30: mov rdx,rax
0x6c33: nop qword ptr [rax+rax*1+0x0]
0x6c38: cmp rdx,0x1
0x6c3c: jz 0x6c50
0x6c3e: cmp [rbx+rdx*1-0x1],0x2f
0x6c43: lea rax,[rdx-0x1]
0x6c47: jz 0x6c30
0x6c49: mov rax,rdx
0x6c4c: pop rbx
0x6c4d: ret
0x6c4e: nop 
0x6c50: mov eax,0x1
0x6c55: pop rbx
0x6c56: ret
0x6ca4: nop qword ptr [rax+0x0]
0x6ca8: lea rax,[rsp+0x60]
0x6cad: mov [rsp],0x10
0x6cb4: mov edx,dword ptr [rsp+0x30]
0x6cb8: mov qword ptr [rsp+0x8],rax
0x6cbd: lea rax,[rsp+0x20]
0x6cc2: mov qword ptr [rsp+0x10],rax
0x6cc7: jmp 0x6c81
0x6cc9: call 0x1c10
0x6d2e: nop 
0x6d70: mov rax,rdi
0x6d73: xor edx,edx
0x6d75: ror rax,0x3
0x6d79: div rsi
0x6d7c: mov rax,rdx
0x6d7f: ret
0x6d80: cmp rdi,rsi
0x6d83: setz al
0x6d86: ret
0x6d9e: cmp qword ptr [rbx+0x10],rax
0x6da2: jbe 0x6dad
0x6da4: shl rax,0x4
0x6da8: add rax,qword ptr [rbx]
0x6dab: pop rbx
0x6dac: ret
0x6dad: call 0x1b00
0x6dd9: mov qword ptr [r14],rax
0x6ddc: mov rsi,qword ptr [rax]
0x6ddf: test rsi,rsi
0x6de2: jz 0x6ed0
0x6de8: cmp rsi,rbp
0x6deb: mov rbx,rax
0x6dee: jz 0x6e83
0x6df4: mov rdi,rbp
0x6df7: call qword ptr [r12+0x38]
0x6dfc: test al,al
0x6dfe: jnz 0x6e80
0x6e04: mov rax,qword ptr [rbx+0x8]
0x6e08: test rax,rax
0x6e0b: jz 0x6ed0
0x6e11: mov rsi,qword ptr [rax]
0x6e14: cmp rbp,rsi
0x6e17: jnz 0x6e39
0x6e19: jmp 0x6e4c
0x6e1b: nop qword ptr [rax+rax*1+0x0]
0x6e20: mov rbx,qword ptr [rbx+0x8]
0x6e24: mov rax,qword ptr [rbx+0x8]
0x6e28: test rax,rax
0x6e2b: jz 0x6ed0
0x6e31: mov rsi,qword ptr [rax]
0x6e34: cmp rsi,rbp
0x6e37: jz 0x6e4c
0x6e39: mov rdi,rbp
0x6e3c: call qword ptr [r12+0x38]
0x6e41: test al,al
0x6e43: jz 0x6e20
0x6e45: mov rax,qword ptr [rbx+0x8]
0x6e49: mov rsi,qword ptr [rax]
0x6e4c: test r13b,r13b
0x6e4f: jz 0x6e6e
0x6e51: mov rdx,qword ptr [rax+0x8]
0x6e55: mov qword ptr [rbx+0x8],rdx
0x6e59: mov [rax],0x0
0x6e60: mov rdx,qword ptr [r12+0x48]
0x6e65: mov qword ptr [rax+0x8],rdx
0x6e69: mov qword ptr [r12+0x48],rax
0x6e6e: pop rbx
0x6e6f: mov rax,rsi
0x6e72: pop rbp
0x6e73: pop r12
0x6e75: pop r13
0x6e77: pop r14
0x6e79: ret
0x6e7a: nop qword ptr [rax+rax*1+0x0]
0x6e80: mov rsi,qword ptr [rbx]
0x6e83: test r13b,r13b
0x6e86: jz 0x6e6e
0x6e88: mov rax,qword ptr [rbx+0x8]
0x6e8c: test rax,rax
0x6e8f: jz 0x6ec0
0x6e91: movdqu xmm0,[rax]
0x6e95: movups [rbx],xmm0
0x6e98: mov [rax],0x0
0x6e9f: mov rdx,qword ptr [r12+0x48]
0x6ea4: mov qword ptr [rax+0x8],rdx
0x6ea8: mov qword ptr [r12+0x48],rax
0x6ead: mov rax,rsi
0x6eb0: pop rbx
0x6eb1: pop rbp
0x6eb2: pop r12
0x6eb4: pop r13
0x6eb6: pop r14
0x6eb8: ret
0x6eb9: nop qword ptr [rax+0x0]
0x6ec0: mov [rbx],0x0
0x6ec7: jmp 0x6e6e
0x6ec9: nop qword ptr [rax+0x0]
0x6ed0: xor esi,esi
0x6ed2: pop rbx
0x6ed3: mov rax,rsi
0x6ed6: pop rbp
0x6ed7: pop r12
0x6ed9: pop r13
0x6edb: pop r14
0x6edd: ret
0x6ef4: movss xmm0,[rdx+0x8]
0x6ef9: ucomiss xmm0,[rip+0x5b54]
0x6f00: jbe 0x6f50
0x6f02: movss xmm1,[rip+0x5b4e]
0x6f0a: ucomiss xmm1,xmm0
0x6f0d: jbe 0x6f50
0x6f0f: movss xmm1,[rdx+0xc]
0x6f14: ucomiss xmm1,[rip+0x5b41]
0x6f1b: jbe 0x6f50
0x6f1d: movss xmm1,[rdx]
0x6f21: ucomiss xmm1,[rip+0x5b38]
0x6f28: jb 0x6f50
0x6f2a: addss xmm1,[rip+0x5b22]
0x6f32: movss xmm2,[rdx+0x4]
0x6f37: ucomiss xmm2,xmm1
0x6f3a: jbe 0x6f50
0x6f3c: movss xmm3,[rip+0x5b20]
0x6f44: ucomiss xmm3,xmm2
0x6f47: jb 0x6f50
0x6f49: ucomiss xmm0,xmm1
0x6f4c: jnbe 0x6f55
0x6f4e: nop 
0x6f50: mov qword ptr [rdi],rcx
0x6f53: xor eax,eax
0x6f60: push r15
0x6f62: push r14
0x6f64: push r13
0x6f66: push r12
0x6f68: push rbp
0x6f69: push rbx
0x6f6a: sub rsp,0x8
0x6f6e: mov r12,qword ptr [rsi]
0x6f71: cmp r12,qword ptr [rsi+0x8]
0x6f75: jnb 0x7058
0x6f7b: mov rbp,rdi
0x6f7e: mov r13,rsi
0x6f81: mov r14d,edx
0x6f84: nop qword ptr [rax+0x0]
0x6f88: mov r15,qword ptr [r12]
0x6f8c: test r15,r15
0x6f8f: jz 0x704a
0x6f95: mov rbx,qword ptr [r12+0x8]
0x6f9a: test rbx,rbx
0x6f9d: jnz 0x6fbc
0x6f9f: jmp 0x6ffb
0x6fa1: nop qword ptr [rax+0x0]
0x6fa8: mov rcx,qword ptr [rax+0x8]
0x6fac: test rdx,rdx
0x6faf: mov qword ptr [rbx+0x8],rcx
0x6fb3: mov qword ptr [rax+0x8],rbx
0x6fb7: mov rbx,rdx
0x6fba: jz 0x6ff7
0x6fbc: mov r15,qword ptr [rbx]
0x6fbf: mov rdi,rbp
0x6fc2: mov rsi,r15
0x6fc5: call 0x6d90
0x6fca: cmp [rax],0x0
0x6fce: mov rdx,qword ptr [rbx+0x8]
0x6fd2: jnz 0x6fa8
0x6fd4: mov qword ptr [rax],r15
0x6fd7: add [rbp+0x18],0x1
0x6fdc: test rdx,rdx
0x6fdf: mov [rbx],0x0
0x6fe6: mov rax,qword ptr [rbp+0x48]
0x6fea: mov qword ptr [rbx+0x8],rax
0x6fee: mov qword ptr [rbp+0x48],rbx
0x6ff2: mov rbx,rdx
0x6ff5: jnz 0x6fbc
0x6ff7: mov r15,qword ptr [r12]
0x6ffb: test r14b,r14b
0x6ffe: mov [r12+0x8],0x0
0x7007: jnz 0x704a
0x7009: mov rsi,r15
0x700c: mov rdi,rbp
0x700f: call 0x6d90
0x7014: cmp [rax],0x0
0x7018: mov rbx,rax
0x701b: jz 0x7070
0x701d: mov rax,qword ptr [rbp+0x48]
0x7021: test rax,rax
0x7024: jz 0x7080
0x7026: mov rdx,qword ptr [rax+0x8]
0x702a: mov qword ptr [rbp+0x48],rdx
0x702e: mov rdx,qword ptr [rbx+0x8]
0x7032: mov qword ptr [rax],r15
0x7035: mov qword ptr [rax+0x8],rdx
0x7039: mov qword ptr [rbx+0x8],rax
0x703d: mov [r12],0x0
0x7045: sub [r13+0x18],0x1
0x704a: add r12,0x10
0x704e: cmp qword ptr [r13+0x8],r12
0x7052: jnbe 0x6f88
0x7058: add rsp,0x8
0x705c: mov eax,0x1
0x7061: pop rbx
0x7062: pop rbp
0x7063: pop r12
0x7065: pop r13
0x7067: pop r14
0x7069: pop r15
0x706b: ret
0x706c: nop qword ptr [rax+0x0]
0x7070: mov qword ptr [rax],r15
0x7073: add [rbp+0x18],0x1
0x7078: jmp 0x703d
0x707a: nop qword ptr [rax+rax*1+0x0]
0x7080: mov edi,0x10
0x7085: call 0x1dc0
0x708a: test rax,rax
0x708d: jnz 0x702e
0x708f: add rsp,0x8
0x7093: xor eax,eax
0x7095: pop rbx
0x7096: pop rbp
0x7097: pop r12
0x7099: pop r13
0x709b: pop r14
0x709d: pop r15
0x709f: ret
0x70a0: mov rax,qword ptr [rdi+0x10]
0x70a4: ret
0x70b0: mov rax,qword ptr [rdi+0x18]
0x70b4: ret
0x70d0: mov rsi,qword ptr [rdi]
0x70d3: mov rdi,qword ptr [rdi+0x8]
0x70d7: xor eax,eax
0x70d9: cmp rsi,rdi
0x70dc: jnb 0x7117
0x70de: nop 
0x70e0: cmp [rsi],0x0
0x70e4: jz 0x710c
0x70e6: mov rdx,qword ptr [rsi+0x8]
0x70ea: mov ecx,0x1
0x70ef: test rdx,rdx
0x70f2: jz 0x7105
0x70f4: nop qword ptr [rax+0x0]
0x70f8: mov rdx,qword ptr [rdx+0x8]
0x70fc: add rcx,0x1
0x7100: test rdx,rdx
0x7103: jnz 0x70f8
0x7105: cmp rax,rcx
0x7108: cmovnae rax,rcx
0x710c: add rsi,0x10
0x7110: cmp rsi,rdi
0x7113: jb 0x70e0
0x7115: rep ret
0x7117: rep ret
0x7120: mov rcx,qword ptr [rdi]
0x7123: mov r8,qword ptr [rdi+0x8]
0x7127: xor edx,edx
0x7129: xor esi,esi
0x712b: cmp rcx,r8
0x712e: jnb 0x7166
0x7130: cmp [rcx],0x0
0x7134: jz 0x715d
0x7136: mov rax,qword ptr [rcx+0x8]
0x713a: add rsi,0x1
0x713e: add rdx,0x1
0x7142: test rax,rax
0x7145: jz 0x715d
0x7147: nop qword ptr [rax+rax*1+0x0]
0x7150: mov rax,qword ptr [rax+0x8]
0x7154: add rdx,0x1
0x7158: test rax,rax
0x715b: jnz 0x7150
0x715d: add rcx,0x10
0x7161: cmp rcx,r8
0x7164: jb 0x7130
0x7166: xor eax,eax
0x7168: cmp qword ptr [rdi+0x18],rsi
0x716c: jz 0x7170
0x716e: rep ret
0x7170: cmp qword ptr [rdi+0x20],rdx
0x7174: setz al
0x7177: ret
0x7180: push r13
0x7182: push r12
0x7184: mov r12,rsi
0x7187: push rbp
0x7188: push rbx
0x7189: xor ebx,ebx
0x718b: sub rsp,0x8
0x718f: mov rsi,qword ptr [rdi]
0x7192: mov rcx,qword ptr [rdi+0x20]
0x7196: mov rbp,qword ptr [rdi+0x10]
0x719a: mov r13,qword ptr [rdi+0x18]
0x719e: mov rdi,qword ptr [rdi+0x8]
0x71a2: cmp rsi,rdi
0x71a5: jnb 0x71e5
0x71a7: nop qword ptr [rax+rax*1+0x0]
0x71b0: cmp [rsi],0x0
0x71b4: jz 0x71dc
0x71b6: mov rax,qword ptr [rsi+0x8]
0x71ba: mov edx,0x1
0x71bf: test rax,rax
0x71c2: jz 0x71d5
0x71c4: nop qword ptr [rax+0x0]
0x71c8: mov rax,qword ptr [rax+0x8]
0x71cc: add rdx,0x1
0x71d0: test rax,rax
0x71d3: jnz 0x71c8
0x71d5: cmp rbx,rdx
0x71d8: cmovnae rbx,rdx
0x71dc: add rsi,0x10
0x71e0: cmp rsi,rdi
0x71e3: jb 0x71b0
0x71e5: lea rdx,[rip+0x57e3]
0x71ec: mov esi,0x1
0x71f1: mov rdi,r12
0x71f4: xor eax,eax
0x71f6: call 0x1ee0
0x71fb: lea rdx,[rip+0x57e5]
0x7202: xor eax,eax
0x7204: mov rcx,rbp
0x7207: mov esi,0x1
0x720c: mov rdi,r12
0x720f: call 0x1ee0
0x7214: test r13,r13
0x7217: js 0x7280
0x7219: pxor xmm0,xmm0
0x721d: test rbp,rbp
0x7220: cvtsi2sd xmm0,r13
0x7225: mulsd xmm0,[rip+0x584b]
0x722d: js 0x72a9
0x722f: pxor xmm1,xmm1
0x7233: cvtsi2sd xmm1,rbp
0x7238: divsd xmm0,xmm1
0x723c: lea rdx,[rip+0x57d5]
0x7243: mov rcx,r13
0x7246: mov rdi,r12
0x7249: mov esi,0x1
0x724e: mov eax,0x1
0x7253: call 0x1ee0
0x7258: add rsp,0x8
0x725c: mov rcx,rbx
0x725f: mov rdi,r12
0x7262: pop rbx
0x7263: pop rbp
0x7264: pop r12
0x7266: pop r13
0x7268: lea rdx,[rip+0x5790]
0x726f: mov esi,0x1
0x7274: xor eax,eax
0x7276: jmp 0x1ee0
0x727b: nop qword ptr [rax+rax*1+0x0]
0x7280: mov rax,r13
0x7283: mov rdx,r13
0x7286: pxor xmm0,xmm0
0x728a: shr rax,0x1
0x728d: and edx,0x1
0x7290: or rax,rdx
0x7293: test rbp,rbp
0x7296: cvtsi2sd xmm0,rax
0x729b: addsd xmm0,xmm0
0x729f: mulsd xmm0,[rip+0x57d1]
0x72a7: jns 0x722f
0x72a9: mov rax,rbp
0x72ac: pxor xmm1,xmm1
0x72b0: shr rax,0x1
0x72b3: and ebp,0x1
0x72b6: or rax,rbp
0x72b9: cvtsi2sd xmm1,rax
0x72be: addsd xmm1,xmm1
0x72c2: jmp 0x7238
0x72df: mov rsi,qword ptr [rax]
0x72e2: test rsi,rsi
0x72e5: jz 0x730d
0x72e7: mov rbx,rax
0x72ea: jmp 0x72f3
0x72ec: nop qword ptr [rax+0x0]
0x72f0: mov rsi,qword ptr [rbx]
0x72f3: cmp rsi,rbp
0x72f6: jz 0x730f
0x72f8: mov rdi,rbp
0x72fb: call qword ptr [r12+0x38]
0x7300: test al,al
0x7302: jnz 0x7320
0x7304: mov rbx,qword ptr [rbx+0x8]
0x7308: test rbx,rbx
0x730b: jnz 0x72f0
0x730d: xor esi,esi
0x730f: pop rbx
0x7310: mov rax,rsi
0x7313: pop rbp
0x7314: pop r12
0x7316: ret
0x7317: nop qword ptr [rax+rax*1+0x0]
0x7320: mov rsi,qword ptr [rbx]
0x7323: pop rbx
0x7324: pop rbp
0x7325: mov rax,rsi
0x7328: pop r12
0x732a: ret
0x7330: cmp [rdi+0x20],0x0
0x7335: jz 0x7363
0x7337: mov rdx,qword ptr [rdi]
0x733a: mov rcx,qword ptr [rdi+0x8]
0x733e: cmp rdx,rcx
0x7341: jnb 0x7368
0x7343: mov rax,qword ptr [rdx]
0x7346: test rax,rax
0x7349: jnz 0x7366
0x734b: nop qword ptr [rax+rax*1+0x0]
0x7350: add rdx,0x10
0x7354: cmp rdx,rcx
0x7357: jnb 0x7368
0x7359: mov rax,qword ptr [rdx]
0x735c: test rax,rax
0x735f: jz 0x7350
0x7361: rep ret
0x7363: xor eax,eax
0x7365: ret
0x7366: rep ret
0x7368: sub rsp,0x8
0x736c: call 0x1b00
0x7380: push rbp
0x7381: push rbx
0x7382: mov rbp,rdi
0x7385: mov rbx,rsi
0x7388: sub rsp,0x8
0x738c: call 0x6d90
0x7391: mov rdx,rax
0x7394: mov rcx,rax
0x7397: mov rax,qword ptr [rdx]
0x739a: mov rdx,qword ptr [rdx+0x8]
0x739e: cmp rax,rbx
0x73a1: jz 0x73b9
0x73a3: nop qword ptr [rax+rax*1+0x0]
0x73a8: test rdx,rdx
0x73ab: jz 0x73be
0x73ad: mov rax,qword ptr [rdx]
0x73b0: mov rdx,qword ptr [rdx+0x8]
0x73b4: cmp rax,rbx
0x73b7: jnz 0x73a8
0x73b9: test rdx,rdx
0x73bc: jnz 0x73e8
0x73be: mov rdx,qword ptr [rbp+0x8]
0x73c2: jmp 0x73d0
0x73c4: nop qword ptr [rax+0x0]
0x73c8: mov rax,qword ptr [rcx]
0x73cb: test rax,rax
0x73ce: jnz 0x73db
0x73d0: add rcx,0x10
0x73d4: cmp rdx,rcx
0x73d7: jnbe 0x73c8
0x73d9: xor eax,eax
0x73db: add rsp,0x8
0x73df: pop rbx
0x73e0: pop rbp
0x73e1: ret
0x73e2: nop qword ptr [rax+rax*1+0x0]
0x73e8: mov rax,qword ptr [rdx]
0x73eb: add rsp,0x8
0x73ef: pop rbx
0x73f0: pop rbp
0x73f1: ret
0x7400: mov r9,qword ptr [rdi]
0x7403: cmp qword ptr [rdi+0x8],r9
0x7407: jbe 0x7462
0x7409: xor r8d,r8d
0x740c: mov rcx,qword ptr [r9]
0x740f: test rcx,rcx
0x7412: jz 0x744d
0x7414: cmp rdx,r8
0x7417: jbe 0x7457
0x7419: mov qword ptr [rsi+r8*8+0x0],rcx
0x741d: mov rcx,qword ptr [r9+0x8]
0x7421: lea rax,[r8+0x1]
0x7425: test rcx,rcx
0x7428: jz 0x744a
0x742a: nop qword ptr [rax+rax*1+0x0]
0x7430: cmp rdx,rax
0x7433: jz 0x7460
0x7435: mov r8,qword ptr [rcx]
0x7438: add rax,0x1
0x743c: mov qword ptr [rsi+rax*8-0x8],r8
0x7441: mov rcx,qword ptr [rcx+0x8]
0x7445: test rcx,rcx
0x7448: jnz 0x7430
0x744a: mov r8,rax
0x744d: add r9,0x10
0x7451: cmp qword ptr [rdi+0x8],r9
0x7455: jnbe 0x740c
0x7457: mov rax,r8
0x745a: ret
0x745b: nop qword ptr [rax+rax*1+0x0]
0x7460: rep ret
0x7462: xor eax,eax
0x7464: ret
0x7470: push r15
0x7472: push r14
0x7474: push r13
0x7476: push r12
0x7478: push rbp
0x7479: push rbx
0x747a: sub rsp,0x8
0x747e: mov r14,qword ptr [rdi]
0x7481: cmp qword ptr [rdi+0x8],r14
0x7485: jbe 0x74d6
0x7487: mov r13,rdx
0x748a: mov r12,rsi
0x748d: mov r15,rdi
0x7490: xor ebp,ebp
0x7492: mov rdi,qword ptr [r14]
0x7495: test rdi,rdi
0x7498: jz 0x74ba
0x749a: mov rbx,r14
0x749d: jmp 0x74a3
0x749f: nop 
0x74a0: mov rdi,qword ptr [rbx]
0x74a3: mov rsi,r13
0x74a6: call r12
0x74a9: test al,al
0x74ab: jz 0x74c4
0x74ad: mov rbx,qword ptr [rbx+0x8]
0x74b1: add rbp,0x1
0x74b5: test rbx,rbx
0x74b8: jnz 0x74a0
0x74ba: add r14,0x10
0x74be: cmp qword ptr [r15+0x8],r14
0x74c2: jnbe 0x7492
0x74c4: add rsp,0x8
0x74c8: mov rax,rbp
0x74cb: pop rbx
0x74cc: pop rbp
0x74cd: pop r12
0x74cf: pop r13
0x74d1: pop r14
0x74d3: pop r15
0x74d5: ret
0x74d6: xor ebp,ebp
0x74d8: jmp 0x74c4
0x74e0: movzx ecx,byte ptr [rdi]
0x74e3: xor edx,edx
0x74e5: test cl,cl
0x74e7: jz 0x750d
0x74e9: nop qword ptr [rax+0x0]
0x74f0: mov rax,rdx
0x74f3: add rdi,0x1
0x74f7: shl rax,0x5
0x74fb: sub rax,rdx
0x74fe: xor edx,edx
0x7500: add rax,rcx
0x7503: movzx ecx,byte ptr [rdi]
0x7506: div rsi
0x7509: test cl,cl
0x750b: jnz 0x74f0
0x750d: mov rax,rdx
0x7510: ret
0x7520: mov rax,0x4575657221408423936
0x752a: mov [rdi+0x10],0x0
0x752e: mov qword ptr [rdi],rax
0x7531: mov rax,0x4590573145673223373
0x753b: mov qword ptr [rdi+0x8],rax
0x753f: ret
0x759c: mov qword ptr [rax+0x28],r15
0x75a0: call 0x6ee0
0x75a5: test al,al
0x75a7: jz 0x7630
0x75ad: cmp [r15+0x10],0x0
0x75b2: jz 0x76b0
0x762f: nop 
0x764c: nop qword ptr [rax+0x0]
0x76af: nop 
0x76b0: test rbp,rbp
0x76b3: movss xmm1,[r15+0x8]
0x76b9: jns 0x7671
0x76d6: nop qword ptr [rax+rax*1+0x0]
0x7700: push r12
0x7702: push rbp
0x7703: mov rbp,rdi
0x7706: push rbx
0x7707: mov r12,qword ptr [rdi]
0x770a: cmp r12,qword ptr [rdi+0x8]
0x770e: jnb 0x777b
0x7710: cmp [r12],0x0
0x7715: jz 0x7771
0x7717: mov rbx,qword ptr [r12+0x8]
0x771c: mov rax,qword ptr [rbp+0x40]
0x7720: test rbx,rbx
0x7723: jz 0x7755
0x7725: nop qword ptr [rax]
0x7728: test rax,rax
0x772b: jz 0x7736
0x772d: mov rdi,qword ptr [rbx]
0x7730: call rax
0x7732: mov rax,qword ptr [rbp+0x40]
0x7736: mov rdx,qword ptr [rbx+0x8]
0x773a: mov rcx,qword ptr [rbp+0x48]
0x773e: mov [rbx],0x0
0x7745: test rdx,rdx
0x7748: mov qword ptr [rbx+0x8],rcx
0x774c: mov qword ptr [rbp+0x48],rbx
0x7750: mov rbx,rdx
0x7753: jnz 0x7728
0x7755: test rax,rax
0x7758: jz 0x7760
0x775a: mov rdi,qword ptr [r12]
0x775e: call rax
0x7760: mov [r12],0x0
0x7768: mov [r12+0x8],0x0
0x7771: add r12,0x10
0x7775: cmp qword ptr [rbp+0x8],r12
0x7779: jnbe 0x7710
0x777b: mov [rbp+0x18],0x0
0x7783: mov [rbp+0x20],0x0
0x778b: pop rbx
0x778c: pop rbp
0x778d: pop r12
0x778f: ret
0x77c6: nop qword ptr [rax+rax*1+0x0]
0x77d0: mov rdi,qword ptr [rbx]
0x77d8: mov rbx,qword ptr [rbx+0x8]
0x77dc: test rbx,rbx
0x77df: jnz 0x77d0
0x77e1: mov rax,qword ptr [r12+0x8]
0x7870: push r12
0x7872: push rbp
0x7873: mov rbp,rdi
0x7876: push rbx
0x7877: sub rsp,0x60
0x787b: mov r12,qword ptr [rdi+0x28]
0x787f: mov rax,0x28
0x7888: mov qword ptr [rsp+0x58],rax
0x788d: xor eax,eax
0x788f: cmp [r12+0x10],0x0
0x7895: jnz 0x78e8
0x7897: test rsi,rsi
0x789a: js 0x7a18
0x78a0: pxor xmm0,xmm0
0x78a4: cvtsi2ss xmm0,rsi
0x78a9: divss xmm0,[r12+0x8]
0x78b0: ucomiss xmm0,[rip+0x51b5]
0x78b7: jnb 0x79f0
0x78bd: ucomiss xmm0,[rip+0x51ac]
0x78c4: jb 0x7a40
0x78ca: subss xmm0,[rip+0x519e]
0x78d2: mov rax,-0x9223372036854775808
0x78dc: cvttss2si rsi,xmm0
0x78e1: xor rsi,rax
0x78e4: nop qword ptr [rax+0x0]
0x78e8: mov rdi,rsi
0x78eb: call 0x6cd0
0x78f0: mov edx,0x8
0x78f5: mov rbx,rax
0x78f8: xor ecx,ecx
0x78fa: mov rax,rdx
0x78fd: mul rbx
0x7900: jo 0x7a9f
0x7906: test rax,rax
0x7909: mov eax,0x1
0x790e: cmovs rcx,rax
0x7912: test rbx,rbx
0x7915: jz 0x79f0
0x791b: and ecx,0x1
0x791e: jnz 0x79f0
0x7924: cmp qword ptr [rbp+0x10],rbx
0x7928: jz 0x7a50
0x792e: mov esi,0x10
0x7933: mov rdi,rbx
0x7936: call 0x1d30
0x793b: test rax,rax
0x793e: mov qword ptr [rsp],rax
0x7942: jz 0x79f0
0x7948: mov qword ptr [rsp+0x10],rbx
0x794d: shl rbx,0x4
0x7951: mov qword ptr [rsp+0x28],r12
0x7956: add rbx,rax
0x7959: mov rax,qword ptr [rbp+0x30]
0x795d: mov r12,rsp
0x7960: xor edx,edx
0x7962: mov rsi,rbp
0x7965: mov rdi,r12
0x7968: mov qword ptr [rsp+0x8],rbx
0x796d: mov [rsp+0x18],0x0
0x7976: mov qword ptr [rsp+0x30],rax
0x797b: mov rax,qword ptr [rbp+0x38]
0x797f: mov [rsp+0x20],0x0
0x7988: mov qword ptr [rsp+0x38],rax
0x798d: mov rax,qword ptr [rbp+0x40]
0x7991: mov qword ptr [rsp+0x40],rax
0x7996: mov rax,qword ptr [rbp+0x48]
0x799a: mov qword ptr [rsp+0x48],rax
0x799f: call 0x6f60
0x79a4: test al,al
0x79a6: mov ebx,eax
0x79a8: jnz 0x7a60
0x79ae: mov rax,qword ptr [rsp+0x48]
0x79b3: mov edx,0x1
0x79b8: mov rsi,r12
0x79bb: mov rdi,rbp
0x79be: mov qword ptr [rbp+0x48],rax
0x79c2: call 0x6f60
0x79c7: test al,al
0x79c9: jz 0x7aa9
0x79cf: xor edx,edx
0x79d1: mov rsi,r12
0x79d4: mov rdi,rbp
0x79d7: call 0x6f60
0x79dc: test al,al
0x79de: jz 0x7aa9
0x79e4: mov rdi,qword ptr [rsp]
0x79e8: call 0x1af0
0x79ed: jmp 0x79f2
0x79ef: nop 
0x79f0: xor ebx,ebx
0x79f2: mov rcx,qword ptr [rsp+0x58]
0x79f7: xor rcx,0x28
0x7a00: mov eax,ebx
0x7a02: jnz 0x7a9a
0x7a08: add rsp,0x60
0x7a0c: pop rbx
0x7a0d: pop rbp
0x7a0e: pop r12
0x7a10: ret
0x7a11: nop qword ptr [rax+0x0]
0x7a18: mov rax,rsi
0x7a1b: pxor xmm0,xmm0
0x7a1f: shr rax,0x1
0x7a22: and esi,0x1
0x7a25: or rax,rsi
0x7a28: cvtsi2ss xmm0,rax
0x7a2d: addss xmm0,xmm0
0x7a31: jmp 0x78a9
0x7a36: nop qword ptr [rax+rax*1+0x0]
0x7a40: cvttss2si rsi,xmm0
0x7a45: jmp 0x78e8
0x7a4a: nop qword ptr [rax+rax*1+0x0]
0x7a50: mov ebx,0x1
0x7a55: jmp 0x79f2
0x7a57: nop qword ptr [rax+rax*1+0x0]
0x7a60: mov rdi,qword ptr [rbp+0x0]
0x7a64: call 0x1af0
0x7a69: mov rax,qword ptr [rsp]
0x7a6d: mov qword ptr [rbp+0x0],rax
0x7a71: mov rax,qword ptr [rsp+0x8]
0x7a76: mov qword ptr [rbp+0x8],rax
0x7a7a: mov rax,qword ptr [rsp+0x10]
0x7a7f: mov qword ptr [rbp+0x10],rax
0x7a83: mov rax,qword ptr [rsp+0x18]
0x7a88: mov qword ptr [rbp+0x18],rax
0x7a8c: mov rax,qword ptr [rsp+0x48]
0x7a91: mov qword ptr [rbp+0x48],rax
0x7a95: jmp 0x79f2
0x7a9a: call 0x1c10
0x7a9f: mov ecx,0x1
0x7aa4: jmp 0x7906
0x7aa9: call 0x1b00
0x7ab0: push r13
0x7ab2: push r12
0x7ab4: push rbp
0x7ab5: push rbx
0x7ab6: sub rsp,0x18
0x7aba: mov rax,0x28
0x7ac3: mov qword ptr [rsp+0x8],rax
0x7ac8: xor eax,eax
0x7aca: test rsi,rsi
0x7acd: jz 0x7c8d
0x7ad3: mov r12,rsp
0x7ad6: xor ecx,ecx
0x7ad8: mov r13,rdx
0x7adb: mov rdx,r12
0x7ade: mov rbx,rdi
0x7ae1: mov rbp,rsi
0x7ae4: call 0x6dc0
0x7ae9: test rax,rax
0x7aec: mov rdx,rax
0x7aef: jz 0x7b20
0x7af1: xor eax,eax
0x7af3: test r13,r13
0x7af6: jz 0x7afc
0x7af8: mov qword ptr [r13+0x0],rdx
0x7afc: mov rcx,qword ptr [rsp+0x8]
0x7b01: xor rcx,0x28
0x7b0a: jnz 0x7d2f
0x7b10: add rsp,0x18
0x7b14: pop rbx
0x7b15: pop rbp
0x7b16: pop r12
0x7b18: pop r13
0x7b1a: ret
0x7b1b: nop qword ptr [rax+rax*1+0x0]
0x7b20: mov rax,qword ptr [rbx+0x18]
0x7b24: test rax,rax
0x7b27: js 0x7ba0
0x7b29: pxor xmm1,xmm1
0x7b2d: mov rdx,qword ptr [rbx+0x28]
0x7b31: cvtsi2ss xmm1,rax
0x7b36: mov rax,qword ptr [rbx+0x10]
0x7b3a: test rax,rax
0x7b3d: js 0x7bca
0x7b43: pxor xmm0,xmm0
0x7b47: cvtsi2ss xmm0,rax
0x7b4c: mulss xmm0,[rdx+0x8]
0x7b51: ucomiss xmm1,xmm0
0x7b54: jnbe 0x7bf0
0x7b5a: mov r12,qword ptr [rsp]
0x7b5e: cmp [r12],0x0
0x7b63: jz 0x7c98
0x7b69: mov rax,qword ptr [rbx+0x48]
0x7b6d: test rax,rax
0x7b70: jz 0x7cb0
0x7b76: mov rdx,qword ptr [rax+0x8]
0x7b7a: mov qword ptr [rbx+0x48],rdx
0x7b7e: mov rdx,qword ptr [r12+0x8]
0x7b83: mov qword ptr [rax],rbp
0x7b86: mov qword ptr [rax+0x8],rdx
0x7b8a: mov qword ptr [r12+0x8],rax
0x7b8f: mov eax,0x1
0x7b94: add [rbx+0x20],0x1
0x7b99: jmp 0x7afc
0x7b9e: nop 
0x7ba0: mov rdx,rax
0x7ba3: pxor xmm1,xmm1
0x7ba7: and eax,0x1
0x7baa: shr rdx,0x1
0x7bad: or rdx,rax
0x7bb0: mov rax,qword ptr [rbx+0x10]
0x7bb4: cvtsi2ss xmm1,rdx
0x7bb9: mov rdx,qword ptr [rbx+0x28]
0x7bbd: test rax,rax
0x7bc0: addss xmm1,xmm1
0x7bc4: jns 0x7b43
0x7bca: mov rcx,rax
0x7bcd: pxor xmm0,xmm0
0x7bd1: shr rcx,0x1
0x7bd4: and eax,0x1
0x7bd7: or rcx,rax
0x7bda: cvtsi2ss xmm0,rcx
0x7bdf: addss xmm0,xmm0
0x7be3: jmp 0x7b4c
0x7be8: nop qword ptr [rax+rax*1+0x0]
0x7bf0: lea rdi,[rbx+0x28]
0x7bf4: call 0x6ee0
0x7bf9: mov rax,qword ptr [rbx+0x10]
0x7bfd: mov rdx,qword ptr [rbx+0x28]
0x7c01: test rax,rax
0x7c04: movss xmm2,[rdx+0x8]
0x7c09: js 0x7cd0
0x7c0f: pxor xmm0,xmm0
0x7c13: cvtsi2ss xmm0,rax
0x7c18: mov rax,qword ptr [rbx+0x18]
0x7c1c: test rax,rax
0x7c1f: js 0x7cf0
0x7c25: pxor xmm1,xmm1
0x7c29: cvtsi2ss xmm1,rax
0x7c2e: movaps xmm3,xmm2
0x7c31: mulss xmm3,xmm0
0x7c35: ucomiss xmm1,xmm3
0x7c38: jbe 0x7b5a
0x7c3e: cmp [rdx+0x10],0x0
0x7c42: mulss xmm0,[rdx+0xc]
0x7c47: jnz 0x7c4d
0x7c49: mulss xmm0,xmm2
0x7c4d: ucomiss xmm0,[rip+0x4e18]
0x7c54: jnb 0x7cc3
0x7c56: ucomiss xmm0,[rip+0x4e13]
0x7c5d: jnb 0x7d10
0x7c63: cvttss2si rsi,xmm0
0x7c68: mov rdi,rbx
0x7c6b: call 0x7870
0x7c70: test al,al
0x7c72: jz 0x7cc3
0x7c74: xor ecx,ecx
0x7c76: mov rdx,r12
0x7c79: mov rsi,rbp
0x7c7c: mov rdi,rbx
0x7c7f: call 0x6dc0
0x7c84: test rax,rax
0x7c87: jz 0x7b5a
0x7c8d: call 0x1b00
0x7c92: nop qword ptr [rax+rax*1+0x0]
0x7c98: mov qword ptr [r12],rbp
0x7c9c: mov eax,0x1
0x7ca1: add [rbx+0x20],0x1
0x7ca6: add [rbx+0x18],0x1
0x7cab: jmp 0x7afc
0x7cb0: mov edi,0x10
0x7cb5: call 0x1dc0
0x7cba: test rax,rax
0x7cbd: jnz 0x7b7e
0x7cc3: mov eax,0xffffffff
0x7cc8: jmp 0x7afc
0x7ccd: nop qword ptr [rax]
0x7cd0: mov rcx,rax
0x7cd3: pxor xmm0,xmm0
0x7cd7: shr rcx,0x1
0x7cda: and eax,0x1
0x7cdd: or rcx,rax
0x7ce0: cvtsi2ss xmm0,rcx
0x7ce5: addss xmm0,xmm0
0x7ce9: jmp 0x7c18
0x7cee: nop 
0x7cf0: mov rcx,rax
0x7cf3: pxor xmm1,xmm1
0x7cf7: shr rcx,0x1
0x7cfa: and eax,0x1
0x7cfd: or rcx,rax
0x7d00: cvtsi2ss xmm1,rcx
0x7d05: addss xmm1,xmm1
0x7d09: jmp 0x7c2e
0x7d0e: nop 
0x7d10: subss xmm0,[rip+0x4d58]
0x7d18: mov rax,-0x9223372036854775808
0x7d22: cvttss2si rsi,xmm0
0x7d27: xor rsi,rax
0x7d2a: jmp 0x7c68
0x7d2f: call 0x1c10
0x7d40: push rbx
0x7d41: mov rbx,rsi
0x7d44: sub rsp,0x10
0x7d48: mov rdx,rsp
0x7d4b: mov rax,0x28
0x7d54: mov qword ptr [rsp+0x8],rax
0x7d59: xor eax,eax
0x7d5b: call 0x7ab0
0x7d60: cmp eax,0xff
0x7d63: jz 0x7d90
0x7d65: test eax,eax
0x7d67: jnz 0x7d6d
0x7d69: mov rbx,qword ptr [rsp]
0x7d6d: mov rcx,qword ptr [rsp+0x8]
0x7d72: xor rcx,0x28
0x7d7b: mov rax,rbx
0x7d7e: jnz 0x7d94
0x7d80: add rsp,0x10
0x7d84: pop rbx
0x7d85: ret
0x7d86: nop qword ptr [rax+rax*1+0x0]
0x7d90: xor ebx,ebx
0x7d92: jmp 0x7d6d
0x7d94: call 0x1c10
0x7dc8: test rax,rax
0x7dcb: mov rbp,rax
0x7dce: jz 0x7ddf
0x7dd0: mov rax,qword ptr [rsp]
0x7dd4: sub [rbx+0x20],0x1
0x7dd9: cmp [rax],0x0
0x7ddd: jz 0x7e00
0x7ddf: mov rcx,qword ptr [rsp+0x8]
0x7de4: xor rcx,0x28
0x7ded: mov rax,rbp
0x7df0: jnz 0x7f9e
0x7df6: add rsp,0x10
0x7dfa: pop rbx
0x7dfb: pop rbp
0x7dfc: pop r12
0x7dfe: ret
0x7dff: nop 
0x7e00: mov rax,qword ptr [rbx+0x18]
0x7e04: sub rax,0x1
0x7e08: test rax,rax
0x7e0b: mov qword ptr [rbx+0x18],rax
0x7e0f: js 0x7f10
0x7e15: pxor xmm0,xmm0
0x7e19: cvtsi2ss xmm0,rax
0x7e1e: mov rax,qword ptr [rbx+0x10]
0x7e22: mov rdx,qword ptr [rbx+0x28]
0x7e26: test rax,rax
0x7e29: js 0x7ef0
0x7e2f: pxor xmm1,xmm1
0x7e33: cvtsi2ss xmm1,rax
0x7e38: mulss xmm1,[rdx]
0x7e3c: ucomiss xmm1,xmm0
0x7e3f: jbe 0x7ddf
0x7e41: lea rdi,[rbx+0x28]
0x7e45: call 0x6ee0
0x7e4a: mov rax,qword ptr [rbx+0x10]
0x7e4e: mov rdx,qword ptr [rbx+0x28]
0x7e52: test rax,rax
0x7e55: js 0x7f80
0x7e5b: pxor xmm0,xmm0
0x7e5f: cvtsi2ss xmm0,rax
0x7e64: mov rax,qword ptr [rbx+0x18]
0x7e68: test rax,rax
0x7e6b: js 0x7f60
0x7e71: pxor xmm1,xmm1
0x7e75: cvtsi2ss xmm1,rax
0x7e7a: movss xmm2,[rdx]
0x7e7e: mulss xmm2,xmm0
0x7e82: ucomiss xmm2,xmm1
0x7e85: jbe 0x7ddf
0x7e8b: cmp [rdx+0x10],0x0
0x7e8f: mulss xmm0,[rdx+0x4]
0x7e94: jz 0x7f50
0x7e9a: ucomiss xmm0,[rip+0x4bcf]
0x7ea1: jnb 0x7f30
0x7ea7: cvttss2si rsi,xmm0
0x7eac: mov rdi,rbx
0x7eaf: call 0x7870
0x7eb4: test al,al
0x7eb6: jnz 0x7ddf
0x7ebc: mov rdi,qword ptr [rbx+0x48]
0x7ec0: test rdi,rdi
0x7ec3: jz 0x7ed9
0x7ec5: nop qword ptr [rax]
0x7ec8: mov r12,qword ptr [rdi+0x8]
0x7ecc: call 0x1af0
0x7ed1: test r12,r12
0x7ed4: mov rdi,r12
0x7ed7: jnz 0x7ec8
0x7ed9: mov [rbx+0x48],0x0
0x7ee1: jmp 0x7ddf
0x7ee6: nop qword ptr [rax+rax*1+0x0]
0x7ef0: mov rcx,rax
0x7ef3: pxor xmm1,xmm1
0x7ef7: shr rcx,0x1
0x7efa: and eax,0x1
0x7efd: or rcx,rax
0x7f00: cvtsi2ss xmm1,rcx
0x7f05: addss xmm1,xmm1
0x7f09: jmp 0x7e38
0x7f0e: nop 
0x7f10: mov rdx,rax
0x7f13: pxor xmm0,xmm0
0x7f17: shr rdx,0x1
0x7f1a: and eax,0x1
0x7f1d: or rdx,rax
0x7f20: cvtsi2ss xmm0,rdx
0x7f25: addss xmm0,xmm0
0x7f29: jmp 0x7e1e
0x7f2e: nop 
0x7f30: subss xmm0,[rip+0x4b38]
0x7f38: mov rax,-0x9223372036854775808
0x7f42: cvttss2si rsi,xmm0
0x7f47: xor rsi,rax
0x7f4a: jmp 0x7eac
0x7f4f: nop 
0x7f50: mulss xmm0,[rdx+0x8]
0x7f55: jmp 0x7e9a
0x7f5a: nop qword ptr [rax+rax*1+0x0]
0x7f60: mov rcx,rax
0x7f63: pxor xmm1,xmm1
0x7f67: shr rcx,0x1
0x7f6a: and eax,0x1
0x7f6d: or rcx,rax
0x7f70: cvtsi2ss xmm1,rcx
0x7f75: addss xmm1,xmm1
0x7f79: jmp 0x7e7a
0x7f7e: nop 
0x7f80: mov rcx,rax
0x7f83: pxor xmm0,xmm0
0x7f87: shr rcx,0x1
0x7f8a: and eax,0x1
0x7f8d: or rcx,rax
0x7f90: cvtsi2ss xmm0,rcx
0x7f95: addss xmm0,xmm0
0x7f99: jmp 0x7e64
0x7f9e: call 0x1c10
0x800a: nop qword ptr [rax+rax*1+0x0]
0x8098: nop qword ptr [rax+rax*1+0x0]
0x80d9: call 0x1c10
0x81bc: nop qword ptr [rax+0x0]
0x820d: nop qword ptr [rax]
0x8527: nop qword ptr [rax+rax*1+0x0]
0x855e: nop 
0x8581: nop qword ptr [rax+0x0]
0x85c2: nop qword ptr [rax+rax*1+0x0]
0x85d4: nop qword ptr [rax+0x0]
0x8678: nop qword ptr [rax+rax*1+0x0]
0x86a1: nop qword ptr [rax+0x0]
0x86b7: nop qword ptr [rax+rax*1+0x0]
0x86cf: nop 
0x86fe: nop 
0x870d: nop qword ptr [rax]
0x871f: nop 
0x872f: nop 
0x873f: nop 
0x874f: nop 
0x875f: nop 
0x87cc: nop qword ptr [rax+0x0]
0x87ec: nop qword ptr [rax+0x0]
0x880f: nop 
0x8822: nop qword ptr [rax+rax*1+0x0]
0x883a: nop qword ptr [rax+rax*1+0x0]
0x884a: nop qword ptr [rax+rax*1+0x0]
0x88eb: nop qword ptr [rax+rax*1+0x0]
0x8905: nop qword ptr [rax]
0x8918: nop qword ptr [rax+rax*1+0x0]
0x8933: nop qword ptr [rax+rax*1+0x0]
0x8962: nop qword ptr [rax+rax*1+0x0]
0x8972: nop qword ptr [rax+rax*1+0x0]
0x898a: nop qword ptr [rax+rax*1+0x0]
0x899a: nop qword ptr [rax+rax*1+0x0]
0x89a8: nop qword ptr [rax+rax*1+0x0]
0x89cf: nop 
0x8a0d: cmp [rsp+0xe],0x0
0x8a12: jnz 0x940d
0x8a18: test r13,r13
0x8a1b: setz al
0x8a1e: cmp [rsp+0x50],0x0
0x8a24: setnz dl
0x8a27: and al,dl
0x8a29: jz 0x944c
0x8a2f: mov r13,qword ptr [rsp+0x50]
0x8a69: nop qword ptr [rax+0x0]
0x8ab2: nop qword ptr [rax+rax*1+0x0]
0x8af1: nop qword ptr [rax+0x0]
0x8b12: nop qword ptr [rax+rax*1+0x0]
0x8c78: nop qword ptr [rax+rax*1+0x0]
0x8d8b: nop qword ptr [rax+rax*1+0x0]
0x8dae: nop 
0x8e75: nop qword ptr [rax]
0x8f2d: nop qword ptr [rax]
0x9136: nop qword ptr [rax+rax*1+0x0]
0x91c9: nop qword ptr [rax+0x0]
0x931d: nop qword ptr [rax]
0x940d: sub rsp,0x8
0x9411: mov r8d,0x5
0x9417: mov rcx,r11
0x941a: push qword ptr [rsp+0x68]
0x941e: push qword ptr [rsp+0x78]
0x9422: mov rdi,r14
0x9425: push qword ptr [rsp+0x38]
0x9429: mov r9d,dword ptr [rsp+0x98]
0x9431: mov rdx,qword ptr [rsp+0x30]
0x9436: mov rsi,qword ptr [rsp+0x70]
0x943b: call 0x8270
0x9440: add rsp,0x20
0x9444: mov r15,rax
0x9447: jmp 0x8e49
0x944c: movzx eax,byte ptr [rsp+0x7c]
0x9451: jmp 0x936c
0x9463: call 0x1c10
0x962b: nop qword ptr [rax+rax*1+0x0]
0x9660: push r12
0x9662: push rbp
0x9663: push rbx
0x9664: mov rbx,rdi
0x9667: call 0x1b10
0x966c: mov r12d,dword ptr [rax]
0x966f: mov rbp,rax
0x9672: lea rax,[rip+0x206bc7]
0x9679: test rbx,rbx
0x967c: mov esi,0x38
0x9681: cmove rbx,rax
0x9685: mov rdi,rbx
0x9688: call 0xa6d0
0x968d: mov dword ptr [rbp+0x0],r12d
0x9691: pop rbx
0x9692: pop rbp
0x9693: pop r12
0x9695: ret
0x96a0: lea rax,[rip+0x206b99]
0x96a7: test rdi,rdi
0x96aa: cmove rdi,rax
0x96ae: mov eax,dword ptr [rdi]
0x96b0: ret
0x96c0: lea rax,[rip+0x206b79]
0x96c7: test rdi,rdi
0x96ca: cmove rdi,rax
0x96ce: mov dword ptr [rdi],esi
0x96d0: ret
0x96e0: lea rax,[rip+0x206b59]
0x96e7: test rdi,rdi
0x96ea: mov ecx,esi
0x96ec: cmove rdi,rax
0x96f0: mov eax,esi
0x96f2: and ecx,0x1f
0x96f5: shr al,0x5
0x96f8: movzx eax,al
0x96fb: lea rdi,[rdi+rax*4+0x8]
0x9700: mov esi,dword ptr [rdi]
0x9702: mov eax,esi
0x9704: shr eax,cl
0x9706: xor edx,eax
0x9708: and eax,0x1
0x970b: and edx,0x1
0x970e: shl edx,cl
0x9710: xor edx,esi
0x9712: mov dword ptr [rdi],edx
0x9714: ret
0x9720: lea rax,[rip+0x206b19]
0x9727: test rdi,rdi
0x972a: cmove rdi,rax
0x972e: mov eax,dword ptr [rdi+0x4]
0x9731: mov dword ptr [rdi+0x4],esi
0x9734: ret
0x9740: lea rax,[rip+0x206af9]
0x9747: test rdi,rdi
0x974a: cmove rdi,rax
0x974e: test rsi,rsi
0x9751: mov [rdi],0xa
0x9757: jz 0x9767
0x9759: test rdx,rdx
0x975c: jz 0x9767
0x975e: mov qword ptr [rdi+0x28],rsi
0x9762: mov qword ptr [rdi+0x30],rdx
0x9766: ret
0x9767: sub rsp,0x8
0x976b: call 0x1b00
0x9770: push r15
0x9772: push r14
0x9774: lea rax,[rip+0x206ac5]
0x977b: push r13
0x977d: push r12
0x977f: mov r13,rdi
0x9782: push rbp
0x9783: push rbx
0x9784: mov rbx,r8
0x9787: mov r14,rsi
0x978a: mov r15,rdx
0x978d: sub rsp,0x18
0x9791: test r8,r8
0x9794: cmove rbx,rax
0x9798: mov qword ptr [rsp+0x8],rcx
0x979d: call 0x1b10
0x97a2: mov r12d,dword ptr [rax]
0x97a5: mov rbp,rax
0x97a8: lea rax,[rbx+0x8]
0x97ac: sub rsp,0x8
0x97b0: mov r9d,dword ptr [rbx+0x4]
0x97b4: push qword ptr [rbx+0x30]
0x97b7: mov r8d,dword ptr [rbx]
0x97ba: push qword ptr [rbx+0x28]
0x97bd: mov rdx,r15
0x97c0: push rax
0x97c1: mov rcx,qword ptr [rsp+0x28]
0x97c6: mov rsi,r14
0x97c9: mov rdi,r13
0x97cc: call 0x8270
0x97d1: mov dword ptr [rbp+0x0],r12d
0x97d5: add rsp,0x38
0x97d9: pop rbx
0x97da: pop rbp
0x97db: pop r12
0x97dd: pop r13
0x97df: pop r14
0x97e1: pop r15
0x97e3: ret
0x97f0: push r15
0x97f2: push r14
0x97f4: lea rax,[rip+0x206a45]
0x97fb: push r13
0x97fd: push r12
0x97ff: mov r12,rdx
0x9802: push rbp
0x9803: push rbx
0x9804: mov rbx,rcx
0x9807: mov r14,rdi
0x980a: mov r15,rsi
0x980d: sub rsp,0x38
0x9811: test rcx,rcx
0x9814: cmove rbx,rax
0x9818: xor ebp,ebp
0x981a: call 0x1b10
0x981f: test r12,r12
0x9822: mov r13,rax
0x9825: mov eax,dword ptr [rax]
0x9827: setz bpl
0x982b: or ebp,dword ptr [rbx+0x4]
0x982e: lea r10,[rbx+0x8]
0x9832: sub rsp,0x8
0x9836: mov r8d,dword ptr [rbx]
0x9839: mov rcx,r15
0x983c: mov dword ptr [rsp+0x14],eax
0x9840: push qword ptr [rbx+0x30]
0x9843: mov rdx,r14
0x9846: push qword ptr [rbx+0x28]
0x9849: push r10
0x984b: xor esi,esi
0x984d: mov r9d,ebp
0x9850: xor edi,edi
0x9852: mov qword ptr [rsp+0x40],r10
0x9857: call 0x8270
0x985c: lea rsi,[rax+0x1]
0x9860: mov qword ptr [rsp+0x48],rax
0x9865: add rsp,0x20
0x9869: mov rdi,rsi
0x986c: mov qword ptr [rsp+0x18],rsi
0x9871: call 0xa4d0
0x9876: mov qword ptr [rsp+0x10],rax
0x987b: sub rsp,0x8
0x987f: push qword ptr [rbx+0x30]
0x9882: push qword ptr [rbx+0x28]
0x9885: mov r10,qword ptr [rsp+0x38]
0x988a: mov r9d,ebp
0x988d: mov r8d,dword ptr [rbx]
0x9890: mov rcx,r15
0x9893: mov rdx,r14
0x9896: mov rdi,rax
0x9899: push r10
0x989b: mov rsi,qword ptr [rsp+0x38]
0x98a0: call 0x8270
0x98a5: mov eax,dword ptr [rsp+0x2c]
0x98a9: add rsp,0x20
0x98ad: test r12,r12
0x98b0: mov dword ptr [r13+0x0],eax
0x98b4: jz 0x98bf
0x98b6: mov r11,qword ptr [rsp+0x28]
0x98bb: mov qword ptr [r12],r11
0x98bf: mov rax,qword ptr [rsp+0x10]
0x98c4: add rsp,0x38
0x98c8: pop rbx
0x98c9: pop rbp
0x98ca: pop r12
0x98cc: pop r13
0x98ce: pop r14
0x98d0: pop r15
0x98d2: ret
0x98e0: mov rcx,rdx
0x98e3: xor edx,edx
0x98e5: jmp 0x97f0
0x98f0: mov eax,dword ptr [rip+0x2067a2]
0x98f6: push r12
0x98f8: mov r12,qword ptr [rip+0x2067a1]
0x98ff: push rbp
0x9900: push rbx
0x9901: cmp eax,0x1
0x9904: jle 0x9931
0x9906: sub eax,0x2
0x9909: lea rbx,[r12+0x18]
0x990e: shl rax,0x4
0x9912: lea rbp,[r12+rax*1+0x28]
0x9917: nop qword ptr [rax+rax*1+0x0]
0x9920: mov rdi,qword ptr [rbx]
0x9923: add rbx,0x10
0x9927: call 0x1af0
0x992c: cmp rbx,rbp
0x992f: jnz 0x9920
0x9931: mov rdi,qword ptr [r12+0x8]
0x9936: lea rbx,[rip+0x206803]
0x993d: cmp rdi,rbx
0x9940: jz 0x9959
0x9942: call 0x1af0
0x9947: mov [rip+0x20675e],0x100
0x9952: mov qword ptr [rip+0x20675f],rbx
0x9959: lea rbx,[rip+0x206750]
0x9960: cmp r12,rbx
0x9963: jz 0x9974
0x9965: mov rdi,r12
0x9968: call 0x1af0
0x996d: mov qword ptr [rip+0x20672c],rbx
0x9974: pop rbx
0x9975: mov [rip+0x206719],0x1
0x997f: pop rbp
0x9980: pop r12
0x9982: ret
0x9990: lea rcx,[rip+0x2068a9]
0x9997: mov rdx,0xffffffff
0x999e: jmp 0x94b0
0x99b0: lea rcx,[rip+0x206889]
0x99b7: jmp 0x94b0
0x99c0: lea rcx,[rip+0x206879]
0x99c7: mov rsi,rdi
0x99ca: mov rdx,0xffffffff
0x99d1: xor edi,edi
0x99d3: jmp 0x94b0
0x99e0: lea rcx,[rip+0x206859]
0x99e7: mov rdx,rsi
0x99ea: mov rsi,rdi
0x99ed: xor edi,edi
0x99ef: jmp 0x94b0
0x9a7f: add rsp,0x48
0x9a83: ret
0x9a90: sub rsp,0x48
0x9a94: mov rax,rdx
0x9a97: mov rdx,rcx
0x9a9a: mov rcx,0x28
0x9aa3: mov qword ptr [rsp+0x38],rcx
0x9aa8: xor ecx,ecx
0x9aaa: cmp esi,0xa
0x9aad: jz 0x9b10
0x9aaf: mov dword ptr [rsp],esi
0x9ab2: mov rcx,rsp
0x9ab5: mov rsi,rax
0x9ab8: mov [rsp+0x4],0x0
0x9ac1: mov [rsp+0xc],0x0
0x9aca: mov [rsp+0x14],0x0
0x9ad3: mov [rsp+0x1c],0x0
0x9adc: mov [rsp+0x24],0x0
0x9ae5: mov [rsp+0x2c],0x0
0x9aee: mov [rsp+0x34],0x0
0x9af6: call 0x94b0
0x9afb: mov rdx,qword ptr [rsp+0x38]
0x9b00: xor rdx,0x28
0x9b09: jnz 0x9b15
0x9b0b: add rsp,0x48
0x9b0f: ret
0x9b10: call 0x1b00
0x9b15: call 0x1c10
0x9b30: mov rcx,rdx
0x9b33: mov rdx,rsi
0x9b36: mov esi,edi
0x9b38: xor edi,edi
0x9b3a: jmp 0x9a90
0x9b40: sub rsp,0x48
0x9b44: mov ecx,edx
0x9b46: mov rax,0x28
0x9b4f: mov qword ptr [rsp+0x38],rax
0x9b54: xor eax,eax
0x9b56: mov rax,qword ptr [rip+0x206713]
0x9b5d: mov r8,rsp
0x9b60: and ecx,0x1f
0x9b63: movdqa xmm0,[rip+0x2066d5]
0x9b6b: mov qword ptr [rsp+0x30],rax
0x9b70: mov eax,edx
0x9b72: movaps [rsp],xmm0
0x9b76: shr al,0x5
0x9b79: movzx eax,al
0x9b7c: lea r9,[r8+rax*4+0x8]
0x9b81: movdqa xmm0,[rip+0x2066c7]
0x9b89: movaps [rsp+0x10],xmm0
0x9b8e: movdqa xmm0,[rip+0x2066ca]
0x9b96: movaps [rsp+0x20],xmm0
0x9b9b: mov edx,dword ptr [r9]
0x9b9e: mov eax,edx
0x9ba0: shr eax,cl
0x9ba2: not eax
0x9ba4: and eax,0x1
0x9ba7: shl eax,cl
0x9ba9: mov rcx,r8
0x9bac: xor eax,edx
0x9bae: mov rdx,rsi
0x9bb1: mov rsi,rdi
0x9bb4: mov dword ptr [r9],eax
0x9bb7: xor edi,edi
0x9bb9: call 0x94b0
0x9bbe: mov rsi,qword ptr [rsp+0x38]
0x9bc3: xor rsi,0x28
0x9bcc: jnz 0x9bd3
0x9bce: add rsp,0x48
0x9bd2: ret
0x9bd3: call 0x1c10
0x9be0: movsx edx,sil
0x9be4: mov rsi,0xffffffff
0x9beb: jmp 0x9b40
0x9bf0: mov edx,0x3a
0x9bf5: mov rsi,0xffffffff
0x9bfc: jmp 0x9b40
0x9c10: mov edx,0x3a
0x9c15: jmp 0x9b40
0x9c9f: add rsp,0x48
0x9ca3: ret
0x9ca4: call 0x1b00
0x9cb0: sub rsp,0x48
0x9cb4: mov r9,rcx
0x9cb7: mov rcx,qword ptr [rip+0x2065b2]
0x9cbe: movdqa xmm0,[rip+0x20657a]
0x9cc6: mov rax,0x28
0x9ccf: mov qword ptr [rsp+0x38],rax
0x9cd4: xor eax,eax
0x9cd6: movaps [rsp],xmm0
0x9cda: test rsi,rsi
0x9cdd: mov qword ptr [rsp+0x30],rcx
0x9ce2: mov [rsp],0xa
0x9ce9: movdqa xmm0,[rip+0x20655f]
0x9cf1: movaps [rsp+0x10],xmm0
0x9cf6: movdqa xmm0,[rip+0x206562]
0x9cfe: movaps [rsp+0x20],xmm0
0x9d03: jz 0x9d37
0x9d05: test rdx,rdx
0x9d08: jz 0x9d37
0x9d0a: mov qword ptr [rsp+0x28],rsi
0x9d0f: mov qword ptr [rsp+0x30],rdx
0x9d14: mov rcx,rsp
0x9d17: mov rdx,r8
0x9d1a: mov rsi,r9
0x9d1d: call 0x94b0
0x9d22: mov rdi,qword ptr [rsp+0x38]
0x9d27: xor rdi,0x28
0x9d30: jnz 0x9d3c
0x9d32: add rsp,0x48
0x9d36: ret
0x9d37: call 0x1b00
0x9d3c: call 0x1c10
0x9d50: mov r8,0xffffffff
0x9d57: jmp 0x9cb0
0x9d60: mov rcx,rdx
0x9d63: mov r8,0xffffffff
0x9d6a: mov rdx,rsi
0x9d6d: mov rsi,rdi
0x9d70: xor edi,edi
0x9d72: jmp 0x9cb0
0x9d80: mov r8,rcx
0x9d83: mov rcx,rdx
0x9d86: mov rdx,rsi
0x9d89: mov rsi,rdi
0x9d8c: xor edi,edi
0x9d8e: jmp 0x9cb0
0x9da0: lea rcx,[rip+0x2062b9]
0x9da7: jmp 0x94b0
0x9db0: lea rcx,[rip+0x2062a9]
0x9db7: mov rdx,rsi
0x9dba: mov rsi,rdi
0x9dbd: xor edi,edi
0x9dbf: jmp 0x94b0
0x9e5f: nop 
0x9f56: nop qword ptr [rax+rax*1+0x0]
0x9fe5: nop qword ptr [rax]
0x9fe8: mov r8,rcx
0x9feb: mov rcx,rdx
0x9fee: lea rdx,[rip+0x2fbf]
0x9ff5: mov esi,0x1
0x9ffa: xor eax,eax
0x9ffc: call 0x1ee0
0xa001: jmp 0x9eec
0xa006: nop qword ptr [rax+rax*1+0x0]
0xa065: nop qword ptr [rax]
0xa0a1: nop qword ptr [rax+0x0]
0xa0e8: nop qword ptr [rax+rax*1+0x0]
0xa137: nop qword ptr [rax+rax*1+0x0]
0xa194: nop qword ptr [rax+0x0]
0xa1c2: nop qword ptr [rax+rax*1+0x0]
0xa276: nop qword ptr [rax+rax*1+0x0]
0xa2d0: xor r9d,r9d
0xa2d3: cmp [r8],0x0
0xa2d7: jz 0xa2eb
0xa2d9: nop qword ptr [rax+0x0]
0xa2e0: add r9,0x1
0xa2e4: cmp [r8+r9*8+0x0],0x0
0xa2e9: jnz 0xa2e0
0xa2eb: jmp 0x9eb0
0xa2f0: sub rsp,0x68
0xa2f4: mov r10,r8
0xa2f7: xor r9d,r9d
0xa2fa: mov rax,0x28
0xa303: mov qword ptr [rsp+0x58],rax
0xa308: xor eax,eax
0xa30a: mov r8,rsp
0xa30d: nop qword ptr [rax]
0xa310: mov eax,dword ptr [r10]
0xa313: cmp eax,0x2f
0xa316: jnbe 0xa35a
0xa318: mov r11d,eax
0xa31b: add r11,qword ptr [r10+0x10]
0xa31f: add eax,0x8
0xa322: mov dword ptr [r10],eax
0xa325: mov rax,qword ptr [r11]
0xa328: test rax,rax
0xa32b: mov qword ptr [r8+r9*8+0x0],rax
0xa32f: jz 0xa33b
0xa331: add r9,0x1
0xa335: cmp r9,0xa
0xa339: jnz 0xa310
0xa33b: call 0x9eb0
0xa340: mov rax,qword ptr [rsp+0x58]
0xa345: xor rax,0x28
0xa34e: jnz 0xa355
0xa350: add rsp,0x68
0xa354: ret
0xa355: call 0x1c10
0xa35a: mov r11,qword ptr [r10+0x8]
0xa35e: lea rax,[r11+0x8]
0xa362: mov qword ptr [r10+0x8],rax
0xa366: jmp 0xa325
0xa430: call 0x1c10
0xa43c: mov rax,rbx
0xa43f: add rbx,0x8
0xa443: jmp 0xa3f6
0xa450: push rbx
0xa451: lea rsi,[rip+0x2baa]
0xa458: mov edx,0x5
0xa45d: xor edi,edi
0xa45f: call 0x1bd0
0xa464: lea rdx,[rip+0x2bac]
0xa46b: mov rsi,rax
0xa46e: mov edi,0x1
0xa473: xor eax,eax
0xa475: call 0x1e50
0xa47a: lea rsi,[rip+0x2bac]
0xa481: mov edx,0x5
0xa486: xor edi,edi
0xa488: call 0x1bd0
0xa48d: lea rcx,[rip+0x2164]
0xa494: lea rdx,[rip+0x130c]
0xa49b: mov rsi,rax
0xa49e: mov edi,0x1
0xa4a3: xor eax,eax
0xa4a5: call 0x1e50
0xa4aa: mov rbx,qword ptr [rip+0x205c17]
0xa4b1: lea rsi,[rip+0x2da8]
0xa4b8: xor edi,edi
0xa4ba: mov edx,0x5
0xa4bf: call 0x1bd0
0xa4c4: mov rsi,rbx
0xa4c7: mov rdi,rax
0xa4ca: pop rbx
0xa4cb: jmp 0x1d20
0xa4f0: mov rax,rdi
0xa4f3: mul rsi
0xa4f6: mov rdi,rax
0xa4f9: seto al
0xa4fc: test rdi,rdi
0xa4ff: js 0xa50b
0xa501: movzx eax,al
0xa504: test rax,rax
0xa507: jnz 0xa50b
0xa509: jmp 0xa4d0
0xa50b: sub rsp,0x8
0xa50f: call 0xa720
0xa552: nop qword ptr [rax+rax*1+0x0]
0xa570: mov rax,rsi
0xa573: mul rdx
0xa576: mov rsi,rax
0xa579: seto al
0xa57c: test rsi,rsi
0xa57f: js 0xa58b
0xa581: movzx eax,al
0xa584: test rax,rax
0xa587: jnz 0xa58b
0xa589: jmp 0xa530
0xa58b: sub rsp,0x8
0xa58f: call 0xa720
0xa5a0: test rdi,rdi
0xa5a3: mov r9,rdx
0xa5a6: mov rcx,qword ptr [rsi]
0xa5a9: jz 0xa5e0
0xa5ab: xor edx,edx
0xa5ad: mov rax,0x6148914691236517204
0xa5b7: div r9
0xa5ba: cmp rax,rcx
0xa5bd: jbe 0xa5fb
0xa5bf: mov rax,rcx
0xa5c2: shr rax,0x1
0xa5c5: lea rcx,[rax+rcx*1+0x1]
0xa5ca: mov qword ptr [rsi],rcx
0xa5cd: imul rcx,r9
0xa5d1: mov rsi,rcx
0xa5d4: jmp 0xa530
0xa5d9: nop qword ptr [rax+0x0]
0xa5e0: test rcx,rcx
0xa5e3: jz 0xa608
0xa5e5: mov rax,rcx
0xa5e8: mul r9
0xa5eb: seto dl
0xa5ee: test rax,rax
0xa5f1: movzx edx,dl
0xa5f4: js 0xa5fb
0xa5f6: test rdx,rdx
0xa5f9: jz 0xa5ca
0xa5fb: sub rsp,0x8
0xa5ff: call 0xa720
0xa604: nop qword ptr [rax+0x0]
0xa608: xor edx,edx
0xa60a: mov eax,0x80
0xa60f: xor r8d,r8d
0xa612: div r9
0xa615: test rax,rax
0xa618: setz r8b
0xa61c: lea rcx,[r8+rax*1+0x0]
0xa620: jmp 0xa5e5
0xa630: test rdi,rdi
0xa633: mov rax,qword ptr [rsi]
0xa636: jz 0xa660
0xa638: mov rdx,0x6148914691236517203
0xa642: cmp rax,rdx
0xa645: jnbe 0xa671
0xa647: mov rdx,rax
0xa64a: shr rdx,0x1
0xa64d: lea rax,[rdx+rax*1+0x1]
0xa652: mov qword ptr [rsi],rax
0xa655: mov rsi,rax
0xa658: jmp 0xa530
0xa65d: nop qword ptr [rax]
0xa660: test rax,rax
0xa663: mov edx,0x80
0xa668: cmove rax,rdx
0xa66c: test rax,rax
0xa66f: jns 0xa652
0xa671: sub rsp,0x8
0xa675: call 0xa720
0xa680: push rbx
0xa681: mov rbx,rdi
0xa684: call 0xa4d0
0xa689: mov rdx,rbx
0xa68c: xor esi,esi
0xa68e: mov rdi,rax
0xa691: pop rbx
0xa692: jmp 0x1cd0
0xa6a0: mov rax,rdi
0xa6a3: sub rsp,0x8
0xa6a7: mul rsi
0xa6aa: seto dl
0xa6ad: test rax,rax
0xa6b0: js 0xa6c9
0xa6b2: movzx edx,dl
0xa6b5: test rdx,rdx
0xa6b8: jnz 0xa6c9
0xa6ba: call 0x1d30
0xa6bf: test rax,rax
0xa6c2: jz 0xa6c9
0xa6c4: add rsp,0x8
0xa6c8: ret
0xa6c9: call 0xa720
0xa6d0: push rbp
0xa6d1: push rbx
0xa6d2: mov rbp,rdi
0xa6d5: mov rdi,rsi
0xa6d8: mov rbx,rsi
0xa6db: sub rsp,0x8
0xa6df: call 0xa4d0
0xa6e4: add rsp,0x8
0xa6e8: mov rdx,rbx
0xa6eb: mov rsi,rbp
0xa6ee: pop rbx
0xa6ef: pop rbp
0xa6f0: mov rdi,rax
0xa6f3: jmp 0x1d60
0xa700: push rbx
0xa701: mov rbx,rdi
0xa704: call 0x1bf0
0xa709: mov rdi,rbx
0xa70c: lea rsi,[rax+0x1]
0xa710: pop rbx
0xa711: jmp 0xa6d0
0xa750: call 0x1b00
0xa800: mov rbp,qword ptr [rsp]
0xa826: nop qword ptr [rax+rax*1+0x0]
0xa84f: nop 
0xa85b: call 0x1c10
0xa8c1: nop qword ptr [rax+0x0]
0xa8fb: nop qword ptr [rax+rax*1+0x0]
0xa900: mov eax,0xffffffff
0xa905: jmp 0xa8e4
0xa907: call 0x1c10
0xa95d: ucomisd xmm0,[rip+0x29bb]
0xa965: jp 0xa96e
0xa967: mov eax,0x1
0xa96c: jz 0xa97b
0xa97b: mov qword ptr [rbx],rcx
0xa9a1: nop qword ptr [rax+0x0]
0xa9c2: nop qword ptr [rax+rax*1+0x0]
0xaa46: nop qword ptr [rax+rax*1+0x0]
0xaa86: cmp eax,0x22
0xaa89: mov ebp,0x1
0xaa8e: jnz 0xaab8
0xaaa3: nop qword ptr [rax+rax*1+0x0]
0xaae2: nop qword ptr [rax+rax*1+0x0]
0xaaec: nop qword ptr [rax+0x0]
0xab8b: nop qword ptr [rax+rax*1+0x0]
0xacbc: nop qword ptr [rax+0x0]
0xad43: nop qword ptr [rax+rax*1+0x0]
0xad60: call 0x1c10
0xad65: lea rcx,[rip+0x26dc]
0xad6c: lea rsi,[rip+0x25b5]
0xad73: lea rdi,[rip+0x25ce]
0xad7a: mov edx,0x54
0xad7f: call 0x1cb0
0xae9b: nop qword ptr [rax+rax*1+0x0]
0xaeff: nop 
0xaf49: nop qword ptr [rax+0x0]
0xaf6b: nop qword ptr [rax+rax*1+0x0]
0xb011: nop qword ptr [rax+0x0]
0xb04d: call 0x1c10
0xb06a: mov rax,qword ptr [rsp+0x8]
0xb06f: jmp 0xaf39
0xb074: mov rax,qword ptr [rsp+0x8]
0xb079: jmp 0xaf91
0xb0fe: call 0x1c10
0xb151: nop qword ptr [rax+0x0]
0xb18d: add qword ptr [rbp+0x0],rbx
0xb191: jmp 0xb1a7
0xb193: nop qword ptr [rax+rax*1+0x0]
0xb1d2: call 0x1c10
0xb215: nop qword ptr [rax]
0xb22f: nop 
0xb250: push r12
0xb252: push rbp
0xb253: mov rbp,rdi
0xb256: push rbx
0xb257: call 0x1b40
0xb25c: mov ebx,dword ptr [rbp+0x0]
0xb25f: mov rdi,rbp
0xb262: mov r12,rax
0xb265: call 0xb440
0xb26a: and ebx,0x20
0xb26d: test ebx,ebx
0xb26f: jnz 0xb288
0xb271: test eax,eax
0xb273: jz 0xb27f
0xb275: test r12,r12
0xb278: mov eax,0xffffffff
0xb27d: jz 0xb2b8
0xb27f: pop rbx
0xb280: pop rbp
0xb281: pop r12
0xb283: ret
0xb284: nop qword ptr [rax+0x0]
0xb288: test eax,eax
0xb28a: jnz 0xb2a8
0xb28c: call 0x1b10
0xb291: mov [rax],0x0
0xb297: mov eax,0xffffffff
0xb29c: pop rbx
0xb29d: pop rbp
0xb29e: pop r12
0xb2a0: ret
0xb2a1: nop qword ptr [rax+0x0]
0xb2a8: pop rbx
0xb2a9: mov eax,0xffffffff
0xb2ae: pop rbp
0xb2af: pop r12
0xb2b1: ret
0xb2b2: nop qword ptr [rax+rax*1+0x0]
0xb2b8: call 0x1b10
0xb2bd: cmp [rax],0x9
0xb2c0: pop rbx
0xb2c1: pop rbp
0xb2c2: pop r12
0xb2c4: setnz al
0xb2c7: movzx eax,al
0xb2ca: neg eax
0xb2cc: ret
0xb353: nop qword ptr [rax+rax*1+0x0]
0xb368: nop qword ptr [rax+rax*1+0x0]
0xb37d: nop qword ptr [rax]
0xb3ca: nop qword ptr [rax+rax*1+0x0]
0xb416: nop qword ptr [rax+rax*1+0x0]
0xb440: push r12
0xb442: push rbp
0xb443: push rbx
0xb444: mov rbx,rdi
0xb447: call 0x1d90
0xb44c: test eax,eax
0xb44e: mov rdi,rbx
0xb451: js 0xb4a7
0xb453: call 0x1e10
0xb458: test eax,eax
0xb45a: jnz 0xb488
0xb45c: mov rdi,rbx
0xb45f: call 0xb4c0
0xb464: test eax,eax
0xb466: jz 0xb4a4
0xb468: call 0x1b10
0xb46d: mov r12d,dword ptr [rax]
0xb470: mov rdi,rbx
0xb473: mov rbp,rax
0xb476: call 0x1bb0
0xb47b: test r12d,r12d
0xb47e: jnz 0xb4b0
0xb480: pop rbx
0xb481: pop rbp
0xb482: pop r12
0xb484: ret
0xb485: nop qword ptr [rax]
0xb488: mov rdi,rbx
0xb48b: call 0x1d90
0xb490: xor esi,esi
0xb492: mov edx,0x1
0xb497: mov edi,eax
0xb499: call 0x1ca0
0xb49e: cmp rax,0xffffffff
0xb4a2: jnz 0xb45c
0xb4a4: mov rdi,rbx
0xb4a7: pop rbx
0xb4a8: pop rbp
0xb4a9: pop r12
0xb4ab: jmp 0x1bb0
0xb4b0: mov dword ptr [rbp+0x0],r12d
0xb4b4: mov eax,0xffffffff
0xb4b9: jmp 0xb480
0xb4c0: test rdi,rdi
0xb4c3: push rbx
0xb4c4: mov rbx,rdi
0xb4c7: jz 0xb4da
0xb4c9: call 0x1e10
0xb4ce: test eax,eax
0xb4d0: jz 0xb4da
0xb4d2: test [rbx],0x100
0xb4d8: jnz 0xb4e8
0xb4da: mov rdi,rbx
0xb4dd: pop rbx
0xb4de: jmp 0x1dd0
0xb4e3: nop qword ptr [rax+rax*1+0x0]
0xb4e8: mov rdi,rbx
0xb4eb: mov edx,0x1
0xb4f0: xor esi,esi
0xb4f2: call 0xb500
0xb4f7: mov rdi,rbx
0xb4fa: pop rbx
0xb4fb: jmp 0x1dd0
0xb500: mov rax,qword ptr [rdi+0x8]
0xb504: cmp qword ptr [rdi+0x10],rax
0xb508: jz 0xb510
0xb50a: jmp 0x1e90
0xb50f: nop 
0xb510: mov rax,qword ptr [rdi+0x20]
0xb514: cmp qword ptr [rdi+0x28],rax
0xb518: jnz 0xb50a
0xb51a: cmp [rdi+0x48],0x0
0xb51f: jnz 0xb50a
0xb521: push r12
0xb523: push rbp
0xb524: mov r12d,edx
0xb527: push rbx
0xb528: mov rbp,rsi
0xb52b: mov rbx,rdi
0xb52e: call 0x1d90
0xb533: mov edx,r12d
0xb536: mov rsi,rbp
0xb539: mov edi,eax
0xb53b: call 0x1ca0
0xb540: cmp rax,0xffffffff
0xb544: jz 0xb552
0xb546: and [rbx],0xef
0xb549: mov qword ptr [rbx+0x90],rax
0xb550: xor eax,eax
0xb552: pop rbx
0xb553: pop rbp
0xb554: pop r12
0xb556: ret
0xb560: push r15
0xb562: push r14
0xb564: mov r15,rdx
0xb567: push r13
0xb569: push r12
0xb56b: lea r12,[rip+0x20439e]
0xb572: push rbp
0xb573: lea rbp,[rip+0x20439e]
0xb57a: push rbx
0xb57b: mov r13d,edi
0xb57e: mov r14,rsi
0xb581: sub rbp,r12
0xb584: sub rsp,0x8
0xb588: sar rbp,0x3
0xb58c: call 0x1aa8
0xb591: test rbp,rbp
0xb594: jz 0xb5b6
0xb596: xor ebx,ebx
0xb598: nop qword ptr [rax+rax*1+0x0]
0xb5a0: mov rdx,r15
0xb5a3: mov rsi,r14
0xb5a6: mov edi,r13d
0xb5a9: call qword ptr [r12+rbx*8+0x0]
0xb5ad: add rbx,0x1
0xb5b1: cmp rbp,rbx
0xb5b4: jnz 0xb5a0
0xb5b6: add rsp,0x8
0xb5ba: pop rbx
0xb5bb: pop rbp
0xb5bc: pop r12
0xb5be: pop r13
0xb5c0: pop r14
0xb5c2: pop r15
0xb5c4: ret
0xb5f0: sub rsp,0x8
0xb5f4: add rsp,0x8
0xb5f8: ret
