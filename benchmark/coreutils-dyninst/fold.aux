0x1430: sub rsp,0x8
0x1434: mov rax,qword ptr [rip+0x206b95]
0x143b: test rax,rax
0x143e: jz 0x1442
0x1440: call rax
0x1442: add rsp,0x8
0x1446: ret
0x1466: push 0x0
0x1476: push 0x1
0x1486: push 0x2
0x1496: push 0x3
0x14a6: push 0x4
0x14b0: jmp qword ptr [rip+0x2069b2]
0x14b6: push 0x5
0x14c0: jmp qword ptr [rip+0x2069aa]
0x14c6: push 0x6
0x14d6: push 0x7
0x14e6: push 0x8
0x14f6: push 0x9
0x1506: push 0xa
0x1516: push 0xb
0x1526: push 0xc
0x1536: push 0xd
0x1546: push 0xe
0x1556: push 0xf
0x1566: push 0x10
0x1576: push 0x11
0x1586: push 0x12
0x1596: push 0x13
0x15a0: jmp qword ptr [rip+0x20693a]
0x15a6: push 0x14
0x15b6: push 0x15
0x15c6: push 0x16
0x15d6: push 0x17
0x15e6: push 0x18
0x15f6: push 0x19
0x1600: jmp qword ptr [rip+0x20690a]
0x1606: push 0x1a
0x1610: jmp qword ptr [rip+0x206902]
0x1616: push 0x1b
0x1626: push 0x1c
0x1636: push 0x1d
0x1646: push 0x1e
0x1656: push 0x1f
0x1666: push 0x20
0x1676: push 0x21
0x1686: push 0x22
0x1696: push 0x23
0x16a6: push 0x24
0x16b6: push 0x25
0x16c6: push 0x26
0x16d6: push 0x27
0x16e6: push 0x28
0x16f6: push 0x29
0x1706: push 0x2a
0x1716: push 0x2b
0x1726: push 0x2c
0x1736: push 0x2d
0x1746: push 0x2e
0x1756: push 0x2f
0x1760: jmp qword ptr [rip+0x20687a]
0x1766: nop 
0x183d: nop qword ptr [rax]
0x1849: nop qword ptr [rax+0x0]
0x1894: nop qword ptr [rax+0x0]
0x18ef: nop 
0x19d8: call 0x1530
0x1a0a: hlt 
0x1a10: lea rdi,[rip+0x206669]
0x1a17: push rbp
0x1a18: lea rax,[rip+0x206661]
0x1a1f: cmp rax,rdi
0x1a22: mov rbp,rsp
0x1a25: jz 0x1a40
0x1a27: mov rax,qword ptr [rip+0x206592]
0x1a2e: test rax,rax
0x1a31: jz 0x1a40
0x1a33: pop rbp
0x1a34: jmp rax
0x1a36: nop qword ptr [rax+rax*1+0x0]
0x1a40: pop rbp
0x1a41: ret
0x1a50: lea rdi,[rip+0x206629]
0x1a57: lea rsi,[rip+0x206622]
0x1a5e: push rbp
0x1a5f: sub rsi,rdi
0x1a62: mov rbp,rsp
0x1a65: sar rsi,0x3
0x1a69: mov rax,rsi
0x1a6c: shr rax,0x3f
0x1a70: add rsi,rax
0x1a73: sar rsi,0x1
0x1a76: jz 0x1a90
0x1a78: mov rax,qword ptr [rip+0x206559]
0x1a7f: test rax,rax
0x1a82: jz 0x1a90
0x1a84: pop rbp
0x1a85: jmp rax
0x1a87: nop qword ptr [rax+rax*1+0x0]
0x1a90: pop rbp
0x1a91: ret
0x1aa0: cmp [rip+0x206621],0x0
0x1aa7: jnz 0x1ad8
0x1aa9: cmp [rip+0x20652f],0x0
0x1ab1: push rbp
0x1ab2: mov rbp,rsp
0x1ab5: jz 0x1ac3
0x1ab7: mov rdi,qword ptr [rip+0x20654a]
0x1abe: call 0x1760
0x1ac3: call 0x1a10
0x1ac8: mov [rip+0x2065f9],0x1
0x1acf: pop rbp
0x1ad0: ret
0x1ad1: nop qword ptr [rax+0x0]
0x1ad8: rep ret
0x1ae0: push rbp
0x1ae1: mov rbp,rsp
0x1ae4: pop rbp
0x1ae5: jmp 0x1a50
0x1b13: nop qword ptr [rax+rax*1+0x0]
0x1b29: nop qword ptr [rax+0x0]
0x1c43: nop qword ptr [rax+rax*1+0x0]
0x1c5e: nop 
0x1cd2: lea r10,[rbx+r13*1+0x0]
0x1cd6: mov r8,r13
0x1cd9: xor r15d,r15d
0x1cdc: nop qword ptr [rax+0x0]
0x1ce0: movsx esi,byte ptr [r8]
0x1ce4: mov rdi,r15
0x1ce7: call 0x1af0
0x1cec: add r8,0x1
0x1cf0: mov r15,rax
0x1cf3: cmp r10,r8
0x1cf6: jnz 0x1ce0
0x1cf8: jmp 0x1bed
0x1cfd: nop qword ptr [rax]
0x1d94: nop qword ptr [rax+0x0]
0x1de1: nop qword ptr [rax+0x0]
0x1df6: nop qword ptr [rax+rax*1+0x0]
0x1e3a: mov rcx,rax
0x1e3d: mov rax,qword ptr [rsp+0x18]
0x1e42: lea rdx,[rip+0x382f]
0x1e49: xor edi,edi
0x1e4b: mov esi,dword ptr [rax]
0x1e4d: xor eax,eax
0x1e4f: call 0x16c0
0x1e54: jmp 0x1d83
0x1e59: nop qword ptr [rax+0x0]
0x1e74: lea rdx,[rip+0x37fd]
0x1e7b: mov rcx,rax
0x1e7e: xor edi,edi
0x1e80: xor eax,eax
0x1e82: mov esi,ebp
0x1e84: call 0x16c0
0x1e89: lea rdi,[rip+0x3832]
0x1e90: mov rsi,rbx
0x1e93: mov ecx,0x2
0x1e98: rep cmpsb ds:[rsi],es:[rdi]
0x1e9a: setnbe al
0x1e9d: sbb al,0x0
0x1e9f: xor ebx,ebx
0x1ea1: test al,al
0x1ea3: jz 0x1d83
0x1ea9: mov rdi,r12
0x1eac: call 0x4ef0
0x1eb1: jmp 0x1d83
0x1eb6: nop qword ptr [rax+rax*1+0x0]
0x1ee8: jmp 0x1caf
0x22b0: mov qword ptr [rip+0x205e39],rdi
0x22b7: ret
0x22c0: mov byte ptr [rip+0x205e21],dil
0x22c7: ret
0x22d0: push rbp
0x22d1: push rbx
0x22d2: sub rsp,0x8
0x22d6: mov rdi,qword ptr [rip+0x205dab]
0x22dd: call 0x50a0
0x22e2: test eax,eax
0x22e4: jz 0x22fc
0x22e6: call 0x1490
0x22eb: cmp [rip+0x205df6],0x0
0x22f2: mov rbx,rax
0x22f5: jz 0x2313
0x22f7: cmp [rax],0x20
0x22fa: jnz 0x2313
0x22fc: mov rdi,qword ptr [rip+0x205dbd]
0x2303: call 0x50a0
0x2308: test eax,eax
0x230a: jnz 0x2352
0x230c: add rsp,0x8
0x2310: pop rbx
0x2311: pop rbp
0x2312: ret
0x2313: lea rsi,[rip+0x334e]
0x231a: xor edi,edi
0x231c: mov edx,0x5
0x2321: call 0x1500
0x2326: mov rdi,qword ptr [rip+0x205dc3]
0x232d: mov rbp,rax
0x2330: test rdi,rdi
0x2333: jz 0x235d
0x2335: call 0x3ed0
0x233a: mov esi,dword ptr [rbx]
0x233c: lea rdx,[rip+0x3331]
0x2343: mov rcx,rax
0x2346: mov r8,rbp
0x2349: xor edi,edi
0x234b: xor eax,eax
0x234d: call 0x16c0
0x2352: mov edi,dword ptr [rip+0x205cc0]
0x2358: call 0x14b0
0x235d: mov esi,dword ptr [rbx]
0x235f: lea rdx,[rip+0x3312]
0x2366: mov rcx,rax
0x2369: xor edi,edi
0x236b: xor eax,eax
0x236d: call 0x16c0
0x2372: jmp 0x2352
0x23ab: nop qword ptr [rax+rax*1+0x0]
0x249c: nop qword ptr [rax+0x0]
0x24ed: nop qword ptr [rax]
0x2807: nop qword ptr [rax+rax*1+0x0]
0x283e: nop 
0x2861: nop qword ptr [rax+0x0]
0x28a2: nop qword ptr [rax+rax*1+0x0]
0x28b4: nop qword ptr [rax+0x0]
0x2958: nop qword ptr [rax+rax*1+0x0]
0x2981: nop qword ptr [rax+0x0]
0x2997: nop qword ptr [rax+rax*1+0x0]
0x29af: nop 
0x29de: nop 
0x29ed: nop qword ptr [rax]
0x29ff: nop 
0x2a0f: nop 
0x2a1f: nop 
0x2a2f: nop 
0x2a3f: nop 
0x2aac: nop qword ptr [rax+0x0]
0x2acc: nop qword ptr [rax+0x0]
0x2aef: nop 
0x2b02: nop qword ptr [rax+rax*1+0x0]
0x2b1a: nop qword ptr [rax+rax*1+0x0]
0x2b2a: nop qword ptr [rax+rax*1+0x0]
0x2bcb: nop qword ptr [rax+rax*1+0x0]
0x2be5: nop qword ptr [rax]
0x2bf8: nop qword ptr [rax+rax*1+0x0]
0x2c13: nop qword ptr [rax+rax*1+0x0]
0x2c42: nop qword ptr [rax+rax*1+0x0]
0x2c52: nop qword ptr [rax+rax*1+0x0]
0x2c6a: nop qword ptr [rax+rax*1+0x0]
0x2c7a: nop qword ptr [rax+rax*1+0x0]
0x2c88: nop qword ptr [rax+rax*1+0x0]
0x2caf: nop 
0x2ced: cmp [rsp+0xe],0x0
0x2cf2: jnz 0x36ed
0x2cf8: test r13,r13
0x2cfb: setz al
0x2cfe: cmp [rsp+0x50],0x0
0x2d04: setnz dl
0x2d07: and al,dl
0x2d09: jz 0x372c
0x2d0f: mov r13,qword ptr [rsp+0x50]
0x2d49: nop qword ptr [rax+0x0]
0x2d92: nop qword ptr [rax+rax*1+0x0]
0x2dd1: nop qword ptr [rax+0x0]
0x2df2: nop qword ptr [rax+rax*1+0x0]
0x2f58: nop qword ptr [rax+rax*1+0x0]
0x306b: nop qword ptr [rax+rax*1+0x0]
0x308e: nop 
0x3155: nop qword ptr [rax]
0x320d: nop qword ptr [rax]
0x3416: nop qword ptr [rax+rax*1+0x0]
0x34a9: nop qword ptr [rax+0x0]
0x35fd: nop qword ptr [rax]
0x36ed: sub rsp,0x8
0x36f1: mov r8d,0x5
0x36f7: mov rcx,r11
0x36fa: push qword ptr [rsp+0x68]
0x36fe: push qword ptr [rsp+0x78]
0x3702: mov rdi,r14
0x3705: push qword ptr [rsp+0x38]
0x3709: mov r9d,dword ptr [rsp+0x98]
0x3711: mov rdx,qword ptr [rsp+0x30]
0x3716: mov rsi,qword ptr [rsp+0x70]
0x371b: call 0x2550
0x3720: add rsp,0x20
0x3724: mov r15,rax
0x3727: jmp 0x3129
0x372c: movzx eax,byte ptr [rsp+0x7c]
0x3731: jmp 0x364c
0x3743: call 0x1530
0x390b: nop qword ptr [rax+rax*1+0x0]
0x3931: call 0x1480
0x3936: call 0x4960
0x3940: push r12
0x3942: push rbp
0x3943: push rbx
0x3944: mov rbx,rdi
0x3947: call 0x1490
0x394c: mov r12d,dword ptr [rax]
0x394f: mov rbp,rax
0x3952: lea rax,[rip+0x2048a7]
0x3959: test rbx,rbx
0x395c: mov esi,0x38
0x3961: cmove rbx,rax
0x3965: mov rdi,rbx
0x3968: call 0x4910
0x396d: mov dword ptr [rbp+0x0],r12d
0x3971: pop rbx
0x3972: pop rbp
0x3973: pop r12
0x3975: ret
0x3980: lea rax,[rip+0x204879]
0x3987: test rdi,rdi
0x398a: cmove rdi,rax
0x398e: mov eax,dword ptr [rdi]
0x3990: ret
0x39a0: lea rax,[rip+0x204859]
0x39a7: test rdi,rdi
0x39aa: cmove rdi,rax
0x39ae: mov dword ptr [rdi],esi
0x39b0: ret
0x39c0: lea rax,[rip+0x204839]
0x39c7: test rdi,rdi
0x39ca: mov ecx,esi
0x39cc: cmove rdi,rax
0x39d0: mov eax,esi
0x39d2: and ecx,0x1f
0x39d5: shr al,0x5
0x39d8: movzx eax,al
0x39db: lea rdi,[rdi+rax*4+0x8]
0x39e0: mov esi,dword ptr [rdi]
0x39e2: mov eax,esi
0x39e4: shr eax,cl
0x39e6: xor edx,eax
0x39e8: and eax,0x1
0x39eb: and edx,0x1
0x39ee: shl edx,cl
0x39f0: xor edx,esi
0x39f2: mov dword ptr [rdi],edx
0x39f4: ret
0x3a00: lea rax,[rip+0x2047f9]
0x3a07: test rdi,rdi
0x3a0a: cmove rdi,rax
0x3a0e: mov eax,dword ptr [rdi+0x4]
0x3a11: mov dword ptr [rdi+0x4],esi
0x3a14: ret
0x3a20: lea rax,[rip+0x2047d9]
0x3a27: test rdi,rdi
0x3a2a: cmove rdi,rax
0x3a2e: test rsi,rsi
0x3a31: mov [rdi],0xa
0x3a37: jz 0x3a47
0x3a39: test rdx,rdx
0x3a3c: jz 0x3a47
0x3a3e: mov qword ptr [rdi+0x28],rsi
0x3a42: mov qword ptr [rdi+0x30],rdx
0x3a46: ret
0x3a47: sub rsp,0x8
0x3a4b: call 0x1480
0x3a50: push r15
0x3a52: push r14
0x3a54: lea rax,[rip+0x2047a5]
0x3a5b: push r13
0x3a5d: push r12
0x3a5f: mov r13,rdi
0x3a62: push rbp
0x3a63: push rbx
0x3a64: mov rbx,r8
0x3a67: mov r14,rsi
0x3a6a: mov r15,rdx
0x3a6d: sub rsp,0x18
0x3a71: test r8,r8
0x3a74: cmove rbx,rax
0x3a78: mov qword ptr [rsp+0x8],rcx
0x3a7d: call 0x1490
0x3a82: mov r12d,dword ptr [rax]
0x3a85: mov rbp,rax
0x3a88: lea rax,[rbx+0x8]
0x3a8c: sub rsp,0x8
0x3a90: mov r9d,dword ptr [rbx+0x4]
0x3a94: push qword ptr [rbx+0x30]
0x3a97: mov r8d,dword ptr [rbx]
0x3a9a: push qword ptr [rbx+0x28]
0x3a9d: mov rdx,r15
0x3aa0: push rax
0x3aa1: mov rcx,qword ptr [rsp+0x28]
0x3aa6: mov rsi,r14
0x3aa9: mov rdi,r13
0x3aac: call 0x2550
0x3ab1: mov dword ptr [rbp+0x0],r12d
0x3ab5: add rsp,0x38
0x3ab9: pop rbx
0x3aba: pop rbp
0x3abb: pop r12
0x3abd: pop r13
0x3abf: pop r14
0x3ac1: pop r15
0x3ac3: ret
0x3ad0: push r15
0x3ad2: push r14
0x3ad4: lea rax,[rip+0x204725]
0x3adb: push r13
0x3add: push r12
0x3adf: mov r12,rdx
0x3ae2: push rbp
0x3ae3: push rbx
0x3ae4: mov rbx,rcx
0x3ae7: mov r14,rdi
0x3aea: mov r15,rsi
0x3aed: sub rsp,0x38
0x3af1: test rcx,rcx
0x3af4: cmove rbx,rax
0x3af8: xor ebp,ebp
0x3afa: call 0x1490
0x3aff: test r12,r12
0x3b02: mov r13,rax
0x3b05: mov eax,dword ptr [rax]
0x3b07: setz bpl
0x3b0b: or ebp,dword ptr [rbx+0x4]
0x3b0e: lea r10,[rbx+0x8]
0x3b12: sub rsp,0x8
0x3b16: mov r8d,dword ptr [rbx]
0x3b19: mov rcx,r15
0x3b1c: mov dword ptr [rsp+0x14],eax
0x3b20: push qword ptr [rbx+0x30]
0x3b23: mov rdx,r14
0x3b26: push qword ptr [rbx+0x28]
0x3b29: push r10
0x3b2b: xor esi,esi
0x3b2d: mov r9d,ebp
0x3b30: xor edi,edi
0x3b32: mov qword ptr [rsp+0x40],r10
0x3b37: call 0x2550
0x3b3c: lea rsi,[rax+0x1]
0x3b40: mov qword ptr [rsp+0x48],rax
0x3b45: add rsp,0x20
0x3b49: mov rdi,rsi
0x3b4c: mov qword ptr [rsp+0x18],rsi
0x3b51: call 0x4710
0x3b56: mov qword ptr [rsp+0x10],rax
0x3b5b: sub rsp,0x8
0x3b5f: push qword ptr [rbx+0x30]
0x3b62: push qword ptr [rbx+0x28]
0x3b65: mov r10,qword ptr [rsp+0x38]
0x3b6a: mov r9d,ebp
0x3b6d: mov r8d,dword ptr [rbx]
0x3b70: mov rcx,r15
0x3b73: mov rdx,r14
0x3b76: mov rdi,rax
0x3b79: push r10
0x3b7b: mov rsi,qword ptr [rsp+0x38]
0x3b80: call 0x2550
0x3b85: mov eax,dword ptr [rsp+0x2c]
0x3b89: add rsp,0x20
0x3b8d: test r12,r12
0x3b90: mov dword ptr [r13+0x0],eax
0x3b94: jz 0x3b9f
0x3b96: mov r11,qword ptr [rsp+0x28]
0x3b9b: mov qword ptr [r12],r11
0x3b9f: mov rax,qword ptr [rsp+0x10]
0x3ba4: add rsp,0x38
0x3ba8: pop rbx
0x3ba9: pop rbp
0x3baa: pop r12
0x3bac: pop r13
0x3bae: pop r14
0x3bb0: pop r15
0x3bb2: ret
0x3bc0: mov rcx,rdx
0x3bc3: xor edx,edx
0x3bc5: jmp 0x3ad0
0x3bd0: mov eax,dword ptr [rip+0x204482]
0x3bd6: push r12
0x3bd8: mov r12,qword ptr [rip+0x204481]
0x3bdf: push rbp
0x3be0: push rbx
0x3be1: cmp eax,0x1
0x3be4: jle 0x3c11
0x3be6: sub eax,0x2
0x3be9: lea rbx,[r12+0x18]
0x3bee: shl rax,0x4
0x3bf2: lea rbp,[r12+rax*1+0x28]
0x3bf7: nop qword ptr [rax+rax*1+0x0]
0x3c00: mov rdi,qword ptr [rbx]
0x3c03: add rbx,0x10
0x3c07: call 0x1470
0x3c0c: cmp rbx,rbp
0x3c0f: jnz 0x3c00
0x3c11: mov rdi,qword ptr [r12+0x8]
0x3c16: lea rbx,[rip+0x2044e3]
0x3c1d: cmp rdi,rbx
0x3c20: jz 0x3c39
0x3c22: call 0x1470
0x3c27: mov [rip+0x20443e],0x100
0x3c32: mov qword ptr [rip+0x20443f],rbx
0x3c39: lea rbx,[rip+0x204430]
0x3c40: cmp r12,rbx
0x3c43: jz 0x3c54
0x3c45: mov rdi,r12
0x3c48: call 0x1470
0x3c4d: mov qword ptr [rip+0x20440c],rbx
0x3c54: pop rbx
0x3c55: mov [rip+0x2043f9],0x1
0x3c5f: pop rbp
0x3c60: pop r12
0x3c62: ret
0x3c70: lea rcx,[rip+0x204589]
0x3c77: mov rdx,0xffffffff
0x3c7e: jmp 0x3790
0x3c90: lea rcx,[rip+0x204569]
0x3c97: jmp 0x3790
0x3ca0: lea rcx,[rip+0x204559]
0x3ca7: mov rsi,rdi
0x3caa: mov rdx,0xffffffff
0x3cb1: xor edi,edi
0x3cb3: jmp 0x3790
0x3cc0: lea rcx,[rip+0x204539]
0x3cc7: mov rdx,rsi
0x3cca: mov rsi,rdi
0x3ccd: xor edi,edi
0x3ccf: jmp 0x3790
0x3ce0: sub rsp,0x48
0x3ce4: mov rax,rdx
0x3ce7: mov rdx,0x28
0x3cf0: mov qword ptr [rsp+0x38],rdx
0x3cf5: xor edx,edx
0x3cf7: cmp esi,0xa
0x3cfa: jz 0x3d64
0x3cfc: mov dword ptr [rsp],esi
0x3cff: mov rcx,rsp
0x3d02: mov rdx,0xffffffff
0x3d09: mov rsi,rax
0x3d0c: mov [rsp+0x4],0x0
0x3d15: mov [rsp+0xc],0x0
0x3d1e: mov [rsp+0x14],0x0
0x3d27: mov [rsp+0x1c],0x0
0x3d30: mov [rsp+0x24],0x0
0x3d39: mov [rsp+0x2c],0x0
0x3d42: mov [rsp+0x34],0x0
0x3d4a: call 0x3790
0x3d4f: mov rcx,qword ptr [rsp+0x38]
0x3d54: xor rcx,0x28
0x3d5d: jnz 0x3d69
0x3d5f: add rsp,0x48
0x3d63: ret
0x3d64: call 0x1480
0x3d69: call 0x1530
0x3d70: sub rsp,0x48
0x3d74: mov rax,rdx
0x3d77: mov rdx,rcx
0x3d7a: mov rcx,0x28
0x3d83: mov qword ptr [rsp+0x38],rcx
0x3d88: xor ecx,ecx
0x3d8a: cmp esi,0xa
0x3d8d: jz 0x3df0
0x3d8f: mov dword ptr [rsp],esi
0x3d92: mov rcx,rsp
0x3d95: mov rsi,rax
0x3d98: mov [rsp+0x4],0x0
0x3da1: mov [rsp+0xc],0x0
0x3daa: mov [rsp+0x14],0x0
0x3db3: mov [rsp+0x1c],0x0
0x3dbc: mov [rsp+0x24],0x0
0x3dc5: mov [rsp+0x2c],0x0
0x3dce: mov [rsp+0x34],0x0
0x3dd6: call 0x3790
0x3ddb: mov rdx,qword ptr [rsp+0x38]
0x3de0: xor rdx,0x28
0x3de9: jnz 0x3df5
0x3deb: add rsp,0x48
0x3def: ret
0x3df0: call 0x1480
0x3df5: call 0x1530
0x3e00: mov rdx,rsi
0x3e03: mov esi,edi
0x3e05: xor edi,edi
0x3e07: jmp 0x3ce0
0x3e10: mov rcx,rdx
0x3e13: mov rdx,rsi
0x3e16: mov esi,edi
0x3e18: xor edi,edi
0x3e1a: jmp 0x3d70
0x3e20: sub rsp,0x48
0x3e24: mov ecx,edx
0x3e26: mov rax,0x28
0x3e2f: mov qword ptr [rsp+0x38],rax
0x3e34: xor eax,eax
0x3e36: mov rax,qword ptr [rip+0x2043f3]
0x3e3d: mov r8,rsp
0x3e40: and ecx,0x1f
0x3e43: movdqa xmm0,[rip+0x2043b5]
0x3e4b: mov qword ptr [rsp+0x30],rax
0x3e50: mov eax,edx
0x3e52: movaps [rsp],xmm0
0x3e56: shr al,0x5
0x3e59: movzx eax,al
0x3e5c: lea r9,[r8+rax*4+0x8]
0x3e61: movdqa xmm0,[rip+0x2043a7]
0x3e69: movaps [rsp+0x10],xmm0
0x3e6e: movdqa xmm0,[rip+0x2043aa]
0x3e76: movaps [rsp+0x20],xmm0
0x3e7b: mov edx,dword ptr [r9]
0x3e7e: mov eax,edx
0x3e80: shr eax,cl
0x3e82: not eax
0x3e84: and eax,0x1
0x3e87: shl eax,cl
0x3e89: mov rcx,r8
0x3e8c: xor eax,edx
0x3e8e: mov rdx,rsi
0x3e91: mov rsi,rdi
0x3e94: mov dword ptr [r9],eax
0x3e97: xor edi,edi
0x3e99: call 0x3790
0x3e9e: mov rsi,qword ptr [rsp+0x38]
0x3ea3: xor rsi,0x28
0x3eac: jnz 0x3eb3
0x3eae: add rsp,0x48
0x3eb2: ret
0x3eb3: call 0x1530
0x3ec0: movsx edx,sil
0x3ec4: mov rsi,0xffffffff
0x3ecb: jmp 0x3e20
0x3ed0: mov edx,0x3a
0x3ed5: mov rsi,0xffffffff
0x3edc: jmp 0x3e20
0x3ef0: mov edx,0x3a
0x3ef5: jmp 0x3e20
0x3f7f: add rsp,0x48
0x3f83: ret
0x3f84: call 0x1480
0x3f90: sub rsp,0x48
0x3f94: mov r9,rcx
0x3f97: mov rcx,qword ptr [rip+0x204292]
0x3f9e: movdqa xmm0,[rip+0x20425a]
0x3fa6: mov rax,0x28
0x3faf: mov qword ptr [rsp+0x38],rax
0x3fb4: xor eax,eax
0x3fb6: movaps [rsp],xmm0
0x3fba: test rsi,rsi
0x3fbd: mov qword ptr [rsp+0x30],rcx
0x3fc2: mov [rsp],0xa
0x3fc9: movdqa xmm0,[rip+0x20423f]
0x3fd1: movaps [rsp+0x10],xmm0
0x3fd6: movdqa xmm0,[rip+0x204242]
0x3fde: movaps [rsp+0x20],xmm0
0x3fe3: jz 0x4017
0x3fe5: test rdx,rdx
0x3fe8: jz 0x4017
0x3fea: mov qword ptr [rsp+0x28],rsi
0x3fef: mov qword ptr [rsp+0x30],rdx
0x3ff4: mov rcx,rsp
0x3ff7: mov rdx,r8
0x3ffa: mov rsi,r9
0x3ffd: call 0x3790
0x4002: mov rdi,qword ptr [rsp+0x38]
0x4007: xor rdi,0x28
0x4010: jnz 0x401c
0x4012: add rsp,0x48
0x4016: ret
0x4017: call 0x1480
0x401c: call 0x1530
0x4030: mov r8,0xffffffff
0x4037: jmp 0x3f90
0x4040: mov rcx,rdx
0x4043: mov r8,0xffffffff
0x404a: mov rdx,rsi
0x404d: mov rsi,rdi
0x4050: xor edi,edi
0x4052: jmp 0x3f90
0x4060: mov r8,rcx
0x4063: mov rcx,rdx
0x4066: mov rdx,rsi
0x4069: mov rsi,rdi
0x406c: xor edi,edi
0x406e: jmp 0x3f90
0x4080: lea rcx,[rip+0x203f99]
0x4087: jmp 0x3790
0x4090: lea rcx,[rip+0x203f89]
0x4097: mov rdx,rsi
0x409a: mov rsi,rdi
0x409d: xor edi,edi
0x409f: jmp 0x3790
0x40b0: lea rcx,[rip+0x203f69]
0x40b7: mov rdx,0xffffffff
0x40be: jmp 0x3790
0x4196: nop qword ptr [rax+rax*1+0x0]
0x4225: nop qword ptr [rax]
0x4228: mov r8,rcx
0x422b: mov rcx,rdx
0x422e: lea rdx,[rip+0x197f]
0x4235: mov esi,0x1
0x423a: xor eax,eax
0x423c: call 0x1720
0x4241: jmp 0x412c
0x4246: nop qword ptr [rax+rax*1+0x0]
0x42a5: nop qword ptr [rax]
0x42e1: nop qword ptr [rax+0x0]
0x4328: nop qword ptr [rax+rax*1+0x0]
0x4377: nop qword ptr [rax+rax*1+0x0]
0x43d4: nop qword ptr [rax+0x0]
0x4402: nop qword ptr [rax+rax*1+0x0]
0x44b6: nop qword ptr [rax+rax*1+0x0]
0x4510: xor r9d,r9d
0x4513: cmp [r8],0x0
0x4517: jz 0x452b
0x4519: nop qword ptr [rax+0x0]
0x4520: add r9,0x1
0x4524: cmp [r8+r9*8+0x0],0x0
0x4529: jnz 0x4520
0x452b: jmp 0x40f0
0x4530: sub rsp,0x68
0x4534: mov r10,r8
0x4537: xor r9d,r9d
0x453a: mov rax,0x28
0x4543: mov qword ptr [rsp+0x58],rax
0x4548: xor eax,eax
0x454a: mov r8,rsp
0x454d: nop qword ptr [rax]
0x4550: mov eax,dword ptr [r10]
0x4553: cmp eax,0x2f
0x4556: jnbe 0x459a
0x4558: mov r11d,eax
0x455b: add r11,qword ptr [r10+0x10]
0x455f: add eax,0x8
0x4562: mov dword ptr [r10],eax
0x4565: mov rax,qword ptr [r11]
0x4568: test rax,rax
0x456b: mov qword ptr [r8+r9*8+0x0],rax
0x456f: jz 0x457b
0x4571: add r9,0x1
0x4575: cmp r9,0xa
0x4579: jnz 0x4550
0x457b: call 0x40f0
0x4580: mov rax,qword ptr [rsp+0x58]
0x4585: xor rax,0x28
0x458e: jnz 0x4595
0x4590: add rsp,0x68
0x4594: ret
0x4595: call 0x1530
0x459a: mov r11,qword ptr [r10+0x8]
0x459e: lea rax,[r11+0x8]
0x45a2: mov qword ptr [r10+0x8],rax
0x45a6: jmp 0x4565
0x4670: call 0x1530
0x467c: mov rax,rbx
0x467f: add rbx,0x8
0x4683: jmp 0x4636
0x4690: push rbx
0x4691: lea rsi,[rip+0x156a]
0x4698: mov edx,0x5
0x469d: xor edi,edi
0x469f: call 0x1500
0x46a4: lea rdx,[rip+0x156c]
0x46ab: mov rsi,rax
0x46ae: mov edi,0x1
0x46b3: xor eax,eax
0x46b5: call 0x16a0
0x46ba: lea rsi,[rip+0x156c]
0x46c1: mov edx,0x5
0x46c6: xor edi,edi
0x46c8: call 0x1500
0x46cd: lea rcx,[rip+0xeb4]
0x46d4: lea rdx,[rip+0xc04]
0x46db: mov rsi,rax
0x46de: mov edi,0x1
0x46e3: xor eax,eax
0x46e5: call 0x16a0
0x46ea: mov rbx,qword ptr [rip+0x203997]
0x46f1: lea rsi,[rip+0x1768]
0x46f8: xor edi,edi
0x46fa: mov edx,0x5
0x46ff: call 0x1500
0x4704: mov rsi,rbx
0x4707: mov rdi,rax
0x470a: pop rbx
0x470b: jmp 0x15f0
0x4730: mov rax,rdi
0x4733: mul rsi
0x4736: mov rdi,rax
0x4739: seto al
0x473c: test rdi,rdi
0x473f: js 0x474b
0x4741: movzx eax,al
0x4744: test rax,rax
0x4747: jnz 0x474b
0x4749: jmp 0x4710
0x474b: sub rsp,0x8
0x474f: call 0x4960
0x4792: nop qword ptr [rax+rax*1+0x0]
0x47b0: mov rax,rsi
0x47b3: mul rdx
0x47b6: mov rsi,rax
0x47b9: seto al
0x47bc: test rsi,rsi
0x47bf: js 0x47cb
0x47c1: movzx eax,al
0x47c4: test rax,rax
0x47c7: jnz 0x47cb
0x47c9: jmp 0x4770
0x47cb: sub rsp,0x8
0x47cf: call 0x4960
0x47e0: test rdi,rdi
0x47e3: mov r9,rdx
0x47e6: mov rcx,qword ptr [rsi]
0x47e9: jz 0x4820
0x47eb: xor edx,edx
0x47ed: mov rax,0x6148914691236517204
0x47f7: div r9
0x47fa: cmp rax,rcx
0x47fd: jbe 0x483b
0x47ff: mov rax,rcx
0x4802: shr rax,0x1
0x4805: lea rcx,[rax+rcx*1+0x1]
0x480a: mov qword ptr [rsi],rcx
0x480d: imul rcx,r9
0x4811: mov rsi,rcx
0x4814: jmp 0x4770
0x4819: nop qword ptr [rax+0x0]
0x4820: test rcx,rcx
0x4823: jz 0x4848
0x4825: mov rax,rcx
0x4828: mul r9
0x482b: seto dl
0x482e: test rax,rax
0x4831: movzx edx,dl
0x4834: js 0x483b
0x4836: test rdx,rdx
0x4839: jz 0x480a
0x483b: sub rsp,0x8
0x483f: call 0x4960
0x4844: nop qword ptr [rax+0x0]
0x4848: xor edx,edx
0x484a: mov eax,0x80
0x484f: xor r8d,r8d
0x4852: div r9
0x4855: test rax,rax
0x4858: setz r8b
0x485c: lea rcx,[r8+rax*1+0x0]
0x4860: jmp 0x4825
0x489d: nop qword ptr [rax]
0x48c0: push rbx
0x48c1: mov rbx,rdi
0x48c4: call 0x4710
0x48c9: mov rdx,rbx
0x48cc: xor esi,esi
0x48ce: mov rdi,rax
0x48d1: pop rbx
0x48d2: jmp 0x15c0
0x48e0: mov rax,rdi
0x48e3: sub rsp,0x8
0x48e7: mul rsi
0x48ea: seto dl
0x48ed: test rax,rax
0x48f0: js 0x4909
0x48f2: movzx edx,dl
0x48f5: test rdx,rdx
0x48f8: jnz 0x4909
0x48fa: call 0x1600
0x48ff: test rax,rax
0x4902: jz 0x4909
0x4904: add rsp,0x8
0x4908: ret
0x4909: call 0x4960
0x4910: push rbp
0x4911: push rbx
0x4912: mov rbp,rdi
0x4915: mov rdi,rsi
0x4918: mov rbx,rsi
0x491b: sub rsp,0x8
0x491f: call 0x4710
0x4924: add rsp,0x8
0x4928: mov rdx,rbx
0x492b: mov rsi,rbp
0x492e: pop rbx
0x492f: pop rbp
0x4930: mov rdi,rax
0x4933: jmp 0x1610
0x4940: push rbx
0x4941: mov rbx,rdi
0x4944: call 0x1520
0x4949: mov rdi,rbx
0x494c: lea rsi,[rax+0x1]
0x4950: pop rbx
0x4951: jmp 0x4910
0x4990: call 0x1480
0x4a40: mov rbp,qword ptr [rsp]
0x4a66: nop qword ptr [rax+rax*1+0x0]
0x4a8f: nop 
0x4a9b: call 0x1530
0x4b36: nop qword ptr [rax+rax*1+0x0]
0x4b76: cmp eax,0x22
0x4b79: mov ebp,0x1
0x4b7e: jnz 0x4ba8
0x4b93: nop qword ptr [rax+rax*1+0x0]
0x4ba2: nop qword ptr [rax+rax*1+0x0]
0x4bd2: nop qword ptr [rax+rax*1+0x0]
0x4bdc: nop qword ptr [rax+0x0]
0x4c7b: nop qword ptr [rax+rax*1+0x0]
0x4dac: nop qword ptr [rax+0x0]
0x4e33: nop qword ptr [rax+rax*1+0x0]
0x4e50: call 0x1530
0x4e55: lea rcx,[rip+0x11e4]
0x4e5c: lea rsi,[rip+0x10bd]
0x4e63: lea rdi,[rip+0x10d6]
0x4e6a: mov edx,0x54
0x4e6f: call 0x15a0
0x4f35: nop qword ptr [rax]
0x4f93: nop qword ptr [rax+rax*1+0x0]
0x4fbf: nop 
0x508e: call 0x1530
0x50a0: push r12
0x50a2: push rbp
0x50a3: mov rbp,rdi
0x50a6: push rbx
0x50a7: call 0x14c0
0x50ac: mov ebx,dword ptr [rbp+0x0]
0x50af: mov rdi,rbp
0x50b2: mov r12,rax
0x50b5: call 0x4ef0
0x50ba: and ebx,0x20
0x50bd: test ebx,ebx
0x50bf: jnz 0x50d8
0x50c1: test eax,eax
0x50c3: jz 0x50cf
0x50c5: test r12,r12
0x50c8: mov eax,0xffffffff
0x50cd: jz 0x5108
0x50cf: pop rbx
0x50d0: pop rbp
0x50d1: pop r12
0x50d3: ret
0x50d4: nop qword ptr [rax+0x0]
0x50d8: test eax,eax
0x50da: jnz 0x50f8
0x50dc: call 0x1490
0x50e1: mov [rax],0x0
0x50e7: mov eax,0xffffffff
0x50ec: pop rbx
0x50ed: pop rbp
0x50ee: pop r12
0x50f0: ret
0x50f1: nop qword ptr [rax+0x0]
0x50f8: pop rbx
0x50f9: mov eax,0xffffffff
0x50fe: pop rbp
0x50ff: pop r12
0x5101: ret
0x5102: nop qword ptr [rax+rax*1+0x0]
0x5108: call 0x1490
0x510d: cmp [rax],0x9
0x5110: pop rbx
0x5111: pop rbp
0x5112: pop r12
0x5114: setnz al
0x5117: movzx eax,al
0x511a: neg eax
0x511c: ret
0x515a: nop qword ptr [rax+rax*1+0x0]
0x51a6: nop qword ptr [rax+rax*1+0x0]
0x51c0: push r15
0x51c2: push r14
0x51c4: mov r15,rdx
0x51c7: push r13
0x51c9: push r12
0x51cb: lea r12,[rip+0x20293e]
0x51d2: push rbp
0x51d3: lea rbp,[rip+0x20293e]
0x51da: push rbx
0x51db: mov r13d,edi
0x51de: mov r14,rsi
0x51e1: sub rbp,r12
0x51e4: sub rsp,0x8
0x51e8: sar rbp,0x3
0x51ec: call 0x1430
0x51f1: test rbp,rbp
0x51f4: jz 0x5216
0x51f6: xor ebx,ebx
0x51f8: nop qword ptr [rax+rax*1+0x0]
0x5200: mov rdx,r15
0x5203: mov rsi,r14
0x5206: mov edi,r13d
0x5209: call qword ptr [r12+rbx*8+0x0]
0x520d: add rbx,0x1
0x5211: cmp rbp,rbx
0x5214: jnz 0x5200
0x5216: add rsp,0x8
0x521a: pop rbx
0x521b: pop rbp
0x521c: pop r12
0x521e: pop r13
0x5220: pop r14
0x5222: pop r15
0x5224: ret
0x5250: sub rsp,0x8
0x5254: add rsp,0x8
0x5258: ret
