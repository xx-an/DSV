0x14a8: sub rsp,0x8
0x14ac: mov rax,qword ptr [rip+0x207b2d]
0x14b3: test rax,rax
0x14b6: jz 0x14ba
0x14b8: call rax
0x14ba: add rsp,0x8
0x14be: ret
0x14d6: push 0x0
0x14e6: push 0x1
0x14f6: push 0x2
0x1506: push 0x3
0x1510: jmp qword ptr [rip+0x20794a]
0x1516: push 0x4
0x1520: jmp qword ptr [rip+0x207942]
0x1526: push 0x5
0x1536: push 0x6
0x1546: push 0x7
0x1556: push 0x8
0x1566: push 0x9
0x1576: push 0xa
0x1586: push 0xb
0x1596: push 0xc
0x15a6: push 0xd
0x15b6: push 0xe
0x15c6: push 0xf
0x15d6: push 0x10
0x15e6: push 0x11
0x15f6: push 0x12
0x1606: push 0x13
0x1610: jmp qword ptr [rip+0x2078ca]
0x1616: push 0x14
0x1626: push 0x15
0x1636: push 0x16
0x1646: push 0x17
0x1656: push 0x18
0x1666: push 0x19
0x1676: push 0x1a
0x1680: jmp qword ptr [rip+0x207892]
0x1686: push 0x1b
0x1696: push 0x1c
0x16a0: jmp qword ptr [rip+0x207882]
0x16a6: push 0x1d
0x16b6: push 0x1e
0x16c6: push 0x1f
0x16d6: push 0x20
0x16e6: push 0x21
0x16f6: push 0x22
0x1706: push 0x23
0x1716: push 0x24
0x1726: push 0x25
0x1736: push 0x26
0x1746: push 0x27
0x1756: push 0x28
0x1766: push 0x29
0x1776: push 0x2a
0x1786: push 0x2b
0x1796: push 0x2c
0x17a6: push 0x2d
0x17b6: push 0x2e
0x17c6: push 0x2f
0x17d6: push 0x30
0x17e6: push 0x31
0x17f0: jmp qword ptr [rip+0x2077fa]
0x17f6: nop 
0x18e8: nop qword ptr [rax+rax*1+0x0]
0x18fa: nop qword ptr [rax+rax*1+0x0]
0x190a: nop qword ptr [rax+rax*1+0x0]
0x19af: mov rbx,rax
0x19b2: call 0x14f0
0x19b7: mov esi,dword ptr [rax]
0x19b9: lea rdx,[rip+0x49a4]
0x19c0: mov rcx,rbx
0x19c3: mov edi,0x1
0x19c8: xor eax,eax
0x19ca: call 0x1750
0x1a4c: nop qword ptr [rax+0x0]
0x1ae8: nop qword ptr [rax+rax*1+0x0]
0x1b13: nop qword ptr [rax+rax*1+0x0]
0x1b39: nop qword ptr [rax+0x0]
0x1c2a: nop qword ptr [rax+rax*1+0x0]
0x1d2f: nop 
0x1e20: add eax,0x1
0x1e23: jnz 0x1d49
0x1e29: lea rsi,[rip+0x3f9a]
0x1e30: mov edx,0x5
0x1e35: xor edi,edi
0x1e37: call 0x1570
0x1e3c: mov rbx,rax
0x1e3f: call 0x14f0
0x1e44: mov esi,dword ptr [rax]
0x1e46: mov rdx,rbx
0x1e49: mov edi,0x1
0x1e4e: xor eax,eax
0x1e50: call 0x1750
0x1ea9: mov esi,dword ptr [rbx]
0x1eab: lea rdx,[rip+0x44b2]
0x1eb2: mov rcx,rax
0x1eb5: mov edi,0x1
0x1eba: xor eax,eax
0x1ebc: call 0x1750
0x1fc4: add eax,0x1
0x1fc7: jnz 0x1c97
0x1fcd: lea rsi,[rip+0x3df6]
0x1fd4: mov edx,0x5
0x1fd9: xor edi,edi
0x1fdb: call 0x1570
0x1fe0: mov rbx,rax
0x1fe3: call 0x14f0
0x1fe8: mov esi,dword ptr [rax]
0x1fea: mov rdx,rbx
0x1fed: mov edi,0x1
0x1ff2: xor eax,eax
0x1ff4: call 0x1750
0x1ff9: nop qword ptr [rax+0x0]
0x202a: hlt 
0x2030: lea rdi,[rip+0x207049]
0x2037: push rbp
0x2038: lea rax,[rip+0x207041]
0x203f: cmp rax,rdi
0x2042: mov rbp,rsp
0x2045: jz 0x2060
0x2047: mov rax,qword ptr [rip+0x206f82]
0x204e: test rax,rax
0x2051: jz 0x2060
0x2053: pop rbp
0x2054: jmp rax
0x2056: nop qword ptr [rax+rax*1+0x0]
0x2060: pop rbp
0x2061: ret
0x2070: lea rdi,[rip+0x207009]
0x2077: lea rsi,[rip+0x207002]
0x207e: push rbp
0x207f: sub rsi,rdi
0x2082: mov rbp,rsp
0x2085: sar rsi,0x3
0x2089: mov rax,rsi
0x208c: shr rax,0x3f
0x2090: add rsi,rax
0x2093: sar rsi,0x1
0x2096: jz 0x20b0
0x2098: mov rax,qword ptr [rip+0x206f49]
0x209f: test rax,rax
0x20a2: jz 0x20b0
0x20a4: pop rbp
0x20a5: jmp rax
0x20a7: nop qword ptr [rax+rax*1+0x0]
0x20b0: pop rbp
0x20b1: ret
0x20c0: cmp [rip+0x207001],0x0
0x20c7: jnz 0x20f8
0x20c9: cmp [rip+0x206f1f],0x0
0x20d1: push rbp
0x20d2: mov rbp,rsp
0x20d5: jz 0x20e3
0x20d7: mov rdi,qword ptr [rip+0x206f2a]
0x20de: call 0x17f0
0x20e3: call 0x2030
0x20e8: mov [rip+0x206fd9],0x1
0x20ef: pop rbp
0x20f0: ret
0x20f1: nop qword ptr [rax+0x0]
0x20f8: rep ret
0x2100: push rbp
0x2101: mov rbp,rsp
0x2104: pop rbp
0x2105: jmp 0x2070
0x2515: movzx r9d,byte ptr [rdi+0x1]
0x251a: movzx r9d,byte ptr [rsi+r9*1+0x0]
0x251f: test r9b,r9b
0x2522: js 0x2668
0x2528: cmp [rcx],0x0
0x252c: mov rax,qword ptr [rdx]
0x252f: jz 0x254b
0x2531: mov r10d,r9d
0x2534: shl r8d,0x3
0x2538: add rax,0x1
0x253c: sar r10b,0x2
0x2540: or r8d,r10d
0x2543: mov byte ptr [rax-0x1],r8b
0x2547: sub [rcx],0x1
0x254b: movzx r8d,byte ptr [rdi+0x2]
0x2550: cmp r8b,0x3d
0x2554: jz 0x2670
0x255a: movzx r8d,byte ptr [rsi+r8*1+0x0]
0x255f: test r8b,r8b
0x2562: js 0x2676
0x2568: movzx r10d,byte ptr [rdi+0x3]
0x256d: movzx r10d,byte ptr [rsi+r10*1+0x0]
0x2572: test r10b,r10b
0x2575: js 0x2676
0x257b: cmp [rcx],0x0
0x257f: jz 0x25a1
0x2581: add r8d,r8d
0x2584: shl r9d,0x6
0x2588: add rax,0x1
0x258c: or r9d,r8d
0x258f: mov r8d,r10d
0x2592: sar r8b,0x4
0x2596: or r9d,r8d
0x2599: mov byte ptr [rax-0x1],r9b
0x259d: sub [rcx],0x1
0x25a1: movzx r8d,byte ptr [rdi+0x4]
0x25a6: cmp r8b,0x3d
0x25aa: jz 0x2686
0x25b0: movzx r8d,byte ptr [rsi+r8*1+0x0]
0x25b5: test r8b,r8b
0x25b8: js 0x2676
0x25be: cmp [rcx],0x0
0x25c2: jz 0x25dd
0x25c4: mov r9d,r8d
0x25c7: shl r10d,0x4
0x25cb: add rax,0x1
0x25cf: sar r9b,0x1
0x25d2: or r10d,r9d
0x25d5: mov byte ptr [rax-0x1],r10b
0x25d9: sub [rcx],0x1
0x25dd: movzx r9d,byte ptr [rdi+0x5]
0x25e2: cmp r9b,0x3d
0x25e6: jz 0x268c
0x25ec: movzx r9d,byte ptr [rsi+r9*1+0x0]
0x25f1: test r9b,r9b
0x25f4: js 0x2676
0x25fa: movzx r10d,byte ptr [rdi+0x6]
0x25ff: movzx r10d,byte ptr [rsi+r10*1+0x0]
0x2604: test r10b,r10b
0x2607: js 0x2676
0x2609: cmp [rcx],0x0
0x260d: jz 0x2630
0x260f: shl r9d,0x2
0x2613: shl r8d,0x7
0x2617: add rax,0x1
0x261b: or r8d,r9d
0x261e: mov r9d,r10d
0x2621: sar r9b,0x3
0x2625: or r8d,r9d
0x2628: mov byte ptr [rax-0x1],r8b
0x262c: sub [rcx],0x1
0x2630: movzx edi,byte ptr [rdi+0x7]
0x2634: cmp dil,0x3d
0x2638: jz 0x2660
0x263a: movzx esi,byte ptr [rsi+rdi*1+0x0]
0x263e: test sil,sil
0x2641: js 0x2676
0x2643: cmp [rcx],0x0
0x2647: jz 0x2660
0x2649: shl r10d,0x5
0x264d: add rax,0x1
0x2651: or r10d,esi
0x2654: mov byte ptr [rax-0x1],r10b
0x2658: sub [rcx],0x1
0x265c: nop qword ptr [rax+0x0]
0x2660: mov qword ptr [rdx],rax
0x2663: mov eax,0x1
0x266a: nop qword ptr [rax+rax*1+0x0]
0x2670: cmp [rdi+0x3],0x3d
0x2674: jz 0x2680
0x2676: mov qword ptr [rdx],rax
0x2679: xor eax,eax
0x267b: ret
0x267c: nop qword ptr [rax+0x0]
0x2680: cmp [rdi+0x4],0x3d
0x2684: jnz 0x2676
0x2686: cmp [rdi+0x5],0x3d
0x268a: jnz 0x2676
0x268c: cmp [rdi+0x6],0x3d
0x2690: jnz 0x2676
0x2692: cmp [rdi+0x7],0x3d
0x2696: jnz 0x2676
0x2698: jmp 0x2660
0x26ac: nop qword ptr [rax+0x0]
0x285a: nop qword ptr [rax+rax*1+0x0]
0x2876: nop qword ptr [rax+rax*1+0x0]
0x2894: nop qword ptr [rax+0x0]
0x28ab: nop qword ptr [rax+rax*1+0x0]
0x28c0: push r14
0x28c2: push r13
0x28c4: mov r13,rdx
0x28c7: lea rdx,[rsi+0x4]
0x28cb: push r12
0x28cd: push rbp
0x28ce: push rbx
0x28cf: mov rbx,-0x3689348814741910323
0x28d9: mov rax,rdx
0x28dc: mul rbx
0x28df: shr rdx,0x2
0x28e3: lea rbx,[rdx*8+0x0]
0x28eb: lea rbp,[rbx+0x1]
0x28ef: cmp rsi,rbp
0x28f2: jbe 0x2910
0x28f4: mov [r13+0x0],0x0
0x28fc: xor ebp,ebp
0x28fe: pop rbx
0x28ff: mov rax,rbp
0x2902: pop rbp
0x2903: pop r12
0x2905: pop r13
0x2907: pop r14
0x2909: ret
0x290a: nop qword ptr [rax+rax*1+0x0]
0x2910: mov r14,rdi
0x2913: mov rdi,rbp
0x2916: mov r12,rsi
0x2919: call 0x16c0
0x291e: test rax,rax
0x2921: mov qword ptr [r13+0x0],rax
0x2925: jz 0x28fe
0x2927: mov rcx,rbp
0x292a: mov rdx,rax
0x292d: mov rbp,rbx
0x2930: mov rsi,r12
0x2933: mov rdi,r14
0x2936: call 0x26a0
0x293b: pop rbx
0x293c: mov rax,rbp
0x293f: pop rbp
0x2940: pop r12
0x2942: pop r13
0x2944: pop r14
0x2946: ret
0x2a3c: mov rdi,r12
0x2abb: nop qword ptr [rax+rax*1+0x0]
0x2aec: nop qword ptr [rax+0x0]
0x2b66: nop qword ptr [rax+rax*1+0x0]
0x2b9c: nop qword ptr [rax+0x0]
0x2bb6: jmp 0x2b57
0x2bb8: nop qword ptr [rax+rax*1+0x0]
0x2bd5: nop qword ptr [rax]
0x2bd8: sub rdx,r15
0x2bdb: mov qword ptr [rsp+0x20],r15
0x2be0: add qword ptr [rsp+0x18],rdx
0x2be5: lea r15,[r12+r11*1+0x0]
0x2be9: jmp 0x2a3c
0x2bee: nop 
0x2bf0: mov r13d,0x1
0x2bf6: mov [rsp+0x6],0x1
0x2bfb: jmp 0x29df
0x2c00: mov rdx,r15
0x2c03: mov eax,0x1
0x2c08: jmp 0x2a90
0x2c29: call 0x15a0
0x2c30: push r14
0x2c32: push r13
0x2c34: mov r14,rdx
0x2c37: push r12
0x2c39: push rbp
0x2c3a: mov r12,rdi
0x2c3d: push rbx
0x2c3e: mov r13,rsi
0x2c41: mov rbx,rcx
0x2c44: mov rbp,r8
0x2c47: sub rsp,0x20
0x2c4b: mov rax,0x28
0x2c54: mov qword ptr [rsp+0x18],rax
0x2c59: xor eax,eax
0x2c5b: mov rax,rdx
0x2c5e: shr rax,0x3
0x2c62: lea rdi,[rax+rax*4+0x5]
0x2c67: mov qword ptr [rsp+0x10],rdi
0x2c6c: call 0x16c0
0x2c71: test rax,rax
0x2c74: mov qword ptr [rbx],rax
0x2c77: jz 0x2ca8
0x2c79: lea r8,[rsp+0x10]
0x2c7e: mov rcx,rax
0x2c81: mov rdx,r14
0x2c84: mov rsi,r13
0x2c87: mov rdi,r12
0x2c8a: call 0x2980
0x2c8f: test al,al
0x2c91: jz 0x2cd0
0x2c93: test rbp,rbp
0x2c96: jz 0x2ca8
0x2c98: mov rdx,qword ptr [rsp+0x10]
0x2c9d: mov qword ptr [rbp+0x0],rdx
0x2ca1: jmp 0x2cad
0x2ca3: nop qword ptr [rax+rax*1+0x0]
0x2ca8: mov eax,0x1
0x2cad: mov rcx,qword ptr [rsp+0x18]
0x2cb2: xor rcx,0x28
0x2cbb: jnz 0x2cea
0x2cbd: add rsp,0x20
0x2cc1: pop rbx
0x2cc2: pop rbp
0x2cc3: pop r12
0x2cc5: pop r13
0x2cc7: pop r14
0x2cc9: ret
0x2cca: nop qword ptr [rax+rax*1+0x0]
0x2cd0: mov rdi,qword ptr [rbx]
0x2cd3: mov byte ptr [rsp+0xf],al
0x2cd7: call 0x14d0
0x2cdc: mov [rbx],0x0
0x2ce3: movzx eax,byte ptr [rsp+0xf]
0x2ce8: jmp 0x2cad
0x2cea: call 0x15a0
0x2cf0: mov qword ptr [rip+0x2063e1],rdi
0x2cf7: ret
0x2d00: mov byte ptr [rip+0x2063c9],dil
0x2d07: ret
0x2d10: push rbp
0x2d11: push rbx
0x2d12: sub rsp,0x8
0x2d16: mov rdi,qword ptr [rip+0x20636b]
0x2d1d: call 0x5ae0
0x2d22: test eax,eax
0x2d24: jz 0x2d3c
0x2d26: call 0x14f0
0x2d2b: cmp [rip+0x20639e],0x0
0x2d32: mov rbx,rax
0x2d35: jz 0x2d53
0x2d37: cmp [rax],0x20
0x2d3a: jnz 0x2d53
0x2d3c: mov rdi,qword ptr [rip+0x20637d]
0x2d43: call 0x5ae0
0x2d48: test eax,eax
0x2d4a: jnz 0x2d92
0x2d4c: add rsp,0x8
0x2d50: pop rbx
0x2d51: pop rbp
0x2d52: ret
0x2d53: lea rsi,[rip+0x3070]
0x2d5a: xor edi,edi
0x2d5c: mov edx,0x5
0x2d61: call 0x1570
0x2d66: mov rdi,qword ptr [rip+0x20636b]
0x2d6d: mov rbp,rax
0x2d70: test rdi,rdi
0x2d73: jz 0x2d9d
0x2d75: call 0x4910
0x2d7a: mov esi,dword ptr [rbx]
0x2d7c: lea rdx,[rip+0x35dd]
0x2d83: mov rcx,rax
0x2d86: mov r8,rbp
0x2d89: xor edi,edi
0x2d8b: xor eax,eax
0x2d8d: call 0x1750
0x2d92: mov edi,dword ptr [rip+0x206280]
0x2d98: call 0x1510
0x2d9d: mov esi,dword ptr [rbx]
0x2d9f: lea rdx,[rip+0x35be]
0x2da6: mov rcx,rax
0x2da9: xor edi,edi
0x2dab: xor eax,eax
0x2dad: call 0x1750
0x2db2: jmp 0x2d92
0x2deb: nop qword ptr [rax+rax*1+0x0]
0x2edc: nop qword ptr [rax+0x0]
0x2f2d: nop qword ptr [rax]
0x3247: nop qword ptr [rax+rax*1+0x0]
0x327e: nop 
0x32a1: nop qword ptr [rax+0x0]
0x32e2: nop qword ptr [rax+rax*1+0x0]
0x32f4: nop qword ptr [rax+0x0]
0x3398: nop qword ptr [rax+rax*1+0x0]
0x33c1: nop qword ptr [rax+0x0]
0x33d7: nop qword ptr [rax+rax*1+0x0]
0x33ef: nop 
0x341e: nop 
0x342d: nop qword ptr [rax]
0x343f: nop 
0x344f: nop 
0x345f: nop 
0x346f: nop 
0x347f: nop 
0x34ec: nop qword ptr [rax+0x0]
0x350c: nop qword ptr [rax+0x0]
0x352f: nop 
0x3542: nop qword ptr [rax+rax*1+0x0]
0x355a: nop qword ptr [rax+rax*1+0x0]
0x356a: nop qword ptr [rax+rax*1+0x0]
0x360b: nop qword ptr [rax+rax*1+0x0]
0x3625: nop qword ptr [rax]
0x3638: nop qword ptr [rax+rax*1+0x0]
0x3653: nop qword ptr [rax+rax*1+0x0]
0x3682: nop qword ptr [rax+rax*1+0x0]
0x3692: nop qword ptr [rax+rax*1+0x0]
0x36aa: nop qword ptr [rax+rax*1+0x0]
0x36ba: nop qword ptr [rax+rax*1+0x0]
0x36c8: nop qword ptr [rax+rax*1+0x0]
0x36ef: nop 
0x372d: cmp [rsp+0xe],0x0
0x3732: jnz 0x412d
0x3738: test r13,r13
0x373b: setz al
0x373e: cmp [rsp+0x50],0x0
0x3744: setnz dl
0x3747: and al,dl
0x3749: jz 0x416c
0x374f: mov r13,qword ptr [rsp+0x50]
0x3789: nop qword ptr [rax+0x0]
0x37d2: nop qword ptr [rax+rax*1+0x0]
0x3811: nop qword ptr [rax+0x0]
0x3832: nop qword ptr [rax+rax*1+0x0]
0x3998: nop qword ptr [rax+rax*1+0x0]
0x3aab: nop qword ptr [rax+rax*1+0x0]
0x3ace: nop 
0x3b95: nop qword ptr [rax]
0x3c4d: nop qword ptr [rax]
0x3e56: nop qword ptr [rax+rax*1+0x0]
0x3ee9: nop qword ptr [rax+0x0]
0x403d: nop qword ptr [rax]
0x412d: sub rsp,0x8
0x4131: mov r8d,0x5
0x4137: mov rcx,r11
0x413a: push qword ptr [rsp+0x68]
0x413e: push qword ptr [rsp+0x78]
0x4142: mov rdi,r14
0x4145: push qword ptr [rsp+0x38]
0x4149: mov r9d,dword ptr [rsp+0x98]
0x4151: mov rdx,qword ptr [rsp+0x30]
0x4156: mov rsi,qword ptr [rsp+0x70]
0x415b: call 0x2f90
0x4160: add rsp,0x20
0x4164: mov r15,rax
0x4167: jmp 0x3b69
0x416c: movzx eax,byte ptr [rsp+0x7c]
0x4171: jmp 0x408c
0x4183: call 0x15a0
0x434b: nop qword ptr [rax+rax*1+0x0]
0x4371: call 0x14e0
0x4376: call 0x53a0
0x4380: push r12
0x4382: push rbp
0x4383: push rbx
0x4384: mov rbx,rdi
0x4387: call 0x14f0
0x438c: mov r12d,dword ptr [rax]
0x438f: mov rbp,rax
0x4392: lea rax,[rip+0x204e67]
0x4399: test rbx,rbx
0x439c: mov esi,0x38
0x43a1: cmove rbx,rax
0x43a5: mov rdi,rbx
0x43a8: call 0x5350
0x43ad: mov dword ptr [rbp+0x0],r12d
0x43b1: pop rbx
0x43b2: pop rbp
0x43b3: pop r12
0x43b5: ret
0x43c0: lea rax,[rip+0x204e39]
0x43c7: test rdi,rdi
0x43ca: cmove rdi,rax
0x43ce: mov eax,dword ptr [rdi]
0x43d0: ret
0x43e0: lea rax,[rip+0x204e19]
0x43e7: test rdi,rdi
0x43ea: cmove rdi,rax
0x43ee: mov dword ptr [rdi],esi
0x43f0: ret
0x4400: lea rax,[rip+0x204df9]
0x4407: test rdi,rdi
0x440a: mov ecx,esi
0x440c: cmove rdi,rax
0x4410: mov eax,esi
0x4412: and ecx,0x1f
0x4415: shr al,0x5
0x4418: movzx eax,al
0x441b: lea rdi,[rdi+rax*4+0x8]
0x4420: mov esi,dword ptr [rdi]
0x4422: mov eax,esi
0x4424: shr eax,cl
0x4426: xor edx,eax
0x4428: and eax,0x1
0x442b: and edx,0x1
0x442e: shl edx,cl
0x4430: xor edx,esi
0x4432: mov dword ptr [rdi],edx
0x4434: ret
0x4440: lea rax,[rip+0x204db9]
0x4447: test rdi,rdi
0x444a: cmove rdi,rax
0x444e: mov eax,dword ptr [rdi+0x4]
0x4451: mov dword ptr [rdi+0x4],esi
0x4454: ret
0x4460: lea rax,[rip+0x204d99]
0x4467: test rdi,rdi
0x446a: cmove rdi,rax
0x446e: test rsi,rsi
0x4471: mov [rdi],0xa
0x4477: jz 0x4487
0x4479: test rdx,rdx
0x447c: jz 0x4487
0x447e: mov qword ptr [rdi+0x28],rsi
0x4482: mov qword ptr [rdi+0x30],rdx
0x4486: ret
0x4487: sub rsp,0x8
0x448b: call 0x14e0
0x4490: push r15
0x4492: push r14
0x4494: lea rax,[rip+0x204d65]
0x449b: push r13
0x449d: push r12
0x449f: mov r13,rdi
0x44a2: push rbp
0x44a3: push rbx
0x44a4: mov rbx,r8
0x44a7: mov r14,rsi
0x44aa: mov r15,rdx
0x44ad: sub rsp,0x18
0x44b1: test r8,r8
0x44b4: cmove rbx,rax
0x44b8: mov qword ptr [rsp+0x8],rcx
0x44bd: call 0x14f0
0x44c2: mov r12d,dword ptr [rax]
0x44c5: mov rbp,rax
0x44c8: lea rax,[rbx+0x8]
0x44cc: sub rsp,0x8
0x44d0: mov r9d,dword ptr [rbx+0x4]
0x44d4: push qword ptr [rbx+0x30]
0x44d7: mov r8d,dword ptr [rbx]
0x44da: push qword ptr [rbx+0x28]
0x44dd: mov rdx,r15
0x44e0: push rax
0x44e1: mov rcx,qword ptr [rsp+0x28]
0x44e6: mov rsi,r14
0x44e9: mov rdi,r13
0x44ec: call 0x2f90
0x44f1: mov dword ptr [rbp+0x0],r12d
0x44f5: add rsp,0x38
0x44f9: pop rbx
0x44fa: pop rbp
0x44fb: pop r12
0x44fd: pop r13
0x44ff: pop r14
0x4501: pop r15
0x4503: ret
0x4510: push r15
0x4512: push r14
0x4514: lea rax,[rip+0x204ce5]
0x451b: push r13
0x451d: push r12
0x451f: mov r12,rdx
0x4522: push rbp
0x4523: push rbx
0x4524: mov rbx,rcx
0x4527: mov r14,rdi
0x452a: mov r15,rsi
0x452d: sub rsp,0x38
0x4531: test rcx,rcx
0x4534: cmove rbx,rax
0x4538: xor ebp,ebp
0x453a: call 0x14f0
0x453f: test r12,r12
0x4542: mov r13,rax
0x4545: mov eax,dword ptr [rax]
0x4547: setz bpl
0x454b: or ebp,dword ptr [rbx+0x4]
0x454e: lea r10,[rbx+0x8]
0x4552: sub rsp,0x8
0x4556: mov r8d,dword ptr [rbx]
0x4559: mov rcx,r15
0x455c: mov dword ptr [rsp+0x14],eax
0x4560: push qword ptr [rbx+0x30]
0x4563: mov rdx,r14
0x4566: push qword ptr [rbx+0x28]
0x4569: push r10
0x456b: xor esi,esi
0x456d: mov r9d,ebp
0x4570: xor edi,edi
0x4572: mov qword ptr [rsp+0x40],r10
0x4577: call 0x2f90
0x457c: lea rsi,[rax+0x1]
0x4580: mov qword ptr [rsp+0x48],rax
0x4585: add rsp,0x20
0x4589: mov rdi,rsi
0x458c: mov qword ptr [rsp+0x18],rsi
0x4591: call 0x5150
0x4596: mov qword ptr [rsp+0x10],rax
0x459b: sub rsp,0x8
0x459f: push qword ptr [rbx+0x30]
0x45a2: push qword ptr [rbx+0x28]
0x45a5: mov r10,qword ptr [rsp+0x38]
0x45aa: mov r9d,ebp
0x45ad: mov r8d,dword ptr [rbx]
0x45b0: mov rcx,r15
0x45b3: mov rdx,r14
0x45b6: mov rdi,rax
0x45b9: push r10
0x45bb: mov rsi,qword ptr [rsp+0x38]
0x45c0: call 0x2f90
0x45c5: mov eax,dword ptr [rsp+0x2c]
0x45c9: add rsp,0x20
0x45cd: test r12,r12
0x45d0: mov dword ptr [r13+0x0],eax
0x45d4: jz 0x45df
0x45d6: mov r11,qword ptr [rsp+0x28]
0x45db: mov qword ptr [r12],r11
0x45df: mov rax,qword ptr [rsp+0x10]
0x45e4: add rsp,0x38
0x45e8: pop rbx
0x45e9: pop rbp
0x45ea: pop r12
0x45ec: pop r13
0x45ee: pop r14
0x45f0: pop r15
0x45f2: ret
0x4600: mov rcx,rdx
0x4603: xor edx,edx
0x4605: jmp 0x4510
0x4610: mov eax,dword ptr [rip+0x204a42]
0x4616: push r12
0x4618: mov r12,qword ptr [rip+0x204a41]
0x461f: push rbp
0x4620: push rbx
0x4621: cmp eax,0x1
0x4624: jle 0x4651
0x4626: sub eax,0x2
0x4629: lea rbx,[r12+0x18]
0x462e: shl rax,0x4
0x4632: lea rbp,[r12+rax*1+0x28]
0x4637: nop qword ptr [rax+rax*1+0x0]
0x4640: mov rdi,qword ptr [rbx]
0x4643: add rbx,0x10
0x4647: call 0x14d0
0x464c: cmp rbx,rbp
0x464f: jnz 0x4640
0x4651: mov rdi,qword ptr [r12+0x8]
0x4656: lea rbx,[rip+0x204aa3]
0x465d: cmp rdi,rbx
0x4660: jz 0x4679
0x4662: call 0x14d0
0x4667: mov [rip+0x2049fe],0x100
0x4672: mov qword ptr [rip+0x2049ff],rbx
0x4679: lea rbx,[rip+0x2049f0]
0x4680: cmp r12,rbx
0x4683: jz 0x4694
0x4685: mov rdi,r12
0x4688: call 0x14d0
0x468d: mov qword ptr [rip+0x2049cc],rbx
0x4694: pop rbx
0x4695: mov [rip+0x2049b9],0x1
0x469f: pop rbp
0x46a0: pop r12
0x46a2: ret
0x46b0: lea rcx,[rip+0x204b49]
0x46b7: mov rdx,0xffffffff
0x46be: jmp 0x41d0
0x46d0: lea rcx,[rip+0x204b29]
0x46d7: jmp 0x41d0
0x46e0: lea rcx,[rip+0x204b19]
0x46e7: mov rsi,rdi
0x46ea: mov rdx,0xffffffff
0x46f1: xor edi,edi
0x46f3: jmp 0x41d0
0x4700: lea rcx,[rip+0x204af9]
0x4707: mov rdx,rsi
0x470a: mov rsi,rdi
0x470d: xor edi,edi
0x470f: jmp 0x41d0
0x4720: sub rsp,0x48
0x4724: mov rax,rdx
0x4727: mov rdx,0x28
0x4730: mov qword ptr [rsp+0x38],rdx
0x4735: xor edx,edx
0x4737: cmp esi,0xa
0x473a: jz 0x47a4
0x473c: mov dword ptr [rsp],esi
0x473f: mov rcx,rsp
0x4742: mov rdx,0xffffffff
0x4749: mov rsi,rax
0x474c: mov [rsp+0x4],0x0
0x4755: mov [rsp+0xc],0x0
0x475e: mov [rsp+0x14],0x0
0x4767: mov [rsp+0x1c],0x0
0x4770: mov [rsp+0x24],0x0
0x4779: mov [rsp+0x2c],0x0
0x4782: mov [rsp+0x34],0x0
0x478a: call 0x41d0
0x478f: mov rcx,qword ptr [rsp+0x38]
0x4794: xor rcx,0x28
0x479d: jnz 0x47a9
0x479f: add rsp,0x48
0x47a3: ret
0x47a4: call 0x14e0
0x47a9: call 0x15a0
0x47b0: sub rsp,0x48
0x47b4: mov rax,rdx
0x47b7: mov rdx,rcx
0x47ba: mov rcx,0x28
0x47c3: mov qword ptr [rsp+0x38],rcx
0x47c8: xor ecx,ecx
0x47ca: cmp esi,0xa
0x47cd: jz 0x4830
0x47cf: mov dword ptr [rsp],esi
0x47d2: mov rcx,rsp
0x47d5: mov rsi,rax
0x47d8: mov [rsp+0x4],0x0
0x47e1: mov [rsp+0xc],0x0
0x47ea: mov [rsp+0x14],0x0
0x47f3: mov [rsp+0x1c],0x0
0x47fc: mov [rsp+0x24],0x0
0x4805: mov [rsp+0x2c],0x0
0x480e: mov [rsp+0x34],0x0
0x4816: call 0x41d0
0x481b: mov rdx,qword ptr [rsp+0x38]
0x4820: xor rdx,0x28
0x4829: jnz 0x4835
0x482b: add rsp,0x48
0x482f: ret
0x4830: call 0x14e0
0x4835: call 0x15a0
0x4840: mov rdx,rsi
0x4843: mov esi,edi
0x4845: xor edi,edi
0x4847: jmp 0x4720
0x4850: mov rcx,rdx
0x4853: mov rdx,rsi
0x4856: mov esi,edi
0x4858: xor edi,edi
0x485a: jmp 0x47b0
0x4860: sub rsp,0x48
0x4864: mov ecx,edx
0x4866: mov rax,0x28
0x486f: mov qword ptr [rsp+0x38],rax
0x4874: xor eax,eax
0x4876: mov rax,qword ptr [rip+0x2049b3]
0x487d: mov r8,rsp
0x4880: and ecx,0x1f
0x4883: movdqa xmm0,[rip+0x204975]
0x488b: mov qword ptr [rsp+0x30],rax
0x4890: mov eax,edx
0x4892: movaps [rsp],xmm0
0x4896: shr al,0x5
0x4899: movzx eax,al
0x489c: lea r9,[r8+rax*4+0x8]
0x48a1: movdqa xmm0,[rip+0x204967]
0x48a9: movaps [rsp+0x10],xmm0
0x48ae: movdqa xmm0,[rip+0x20496a]
0x48b6: movaps [rsp+0x20],xmm0
0x48bb: mov edx,dword ptr [r9]
0x48be: mov eax,edx
0x48c0: shr eax,cl
0x48c2: not eax
0x48c4: and eax,0x1
0x48c7: shl eax,cl
0x48c9: mov rcx,r8
0x48cc: xor eax,edx
0x48ce: mov rdx,rsi
0x48d1: mov rsi,rdi
0x48d4: mov dword ptr [r9],eax
0x48d7: xor edi,edi
0x48d9: call 0x41d0
0x48de: mov rsi,qword ptr [rsp+0x38]
0x48e3: xor rsi,0x28
0x48ec: jnz 0x48f3
0x48ee: add rsp,0x48
0x48f2: ret
0x48f3: call 0x15a0
0x4900: movsx edx,sil
0x4904: mov rsi,0xffffffff
0x490b: jmp 0x4860
0x4910: mov edx,0x3a
0x4915: mov rsi,0xffffffff
0x491c: jmp 0x4860
0x4930: mov edx,0x3a
0x4935: jmp 0x4860
0x49bf: add rsp,0x48
0x49c3: ret
0x49c4: call 0x14e0
0x49d0: sub rsp,0x48
0x49d4: mov r9,rcx
0x49d7: mov rcx,qword ptr [rip+0x204852]
0x49de: movdqa xmm0,[rip+0x20481a]
0x49e6: mov rax,0x28
0x49ef: mov qword ptr [rsp+0x38],rax
0x49f4: xor eax,eax
0x49f6: movaps [rsp],xmm0
0x49fa: test rsi,rsi
0x49fd: mov qword ptr [rsp+0x30],rcx
0x4a02: mov [rsp],0xa
0x4a09: movdqa xmm0,[rip+0x2047ff]
0x4a11: movaps [rsp+0x10],xmm0
0x4a16: movdqa xmm0,[rip+0x204802]
0x4a1e: movaps [rsp+0x20],xmm0
0x4a23: jz 0x4a57
0x4a25: test rdx,rdx
0x4a28: jz 0x4a57
0x4a2a: mov qword ptr [rsp+0x28],rsi
0x4a2f: mov qword ptr [rsp+0x30],rdx
0x4a34: mov rcx,rsp
0x4a37: mov rdx,r8
0x4a3a: mov rsi,r9
0x4a3d: call 0x41d0
0x4a42: mov rdi,qword ptr [rsp+0x38]
0x4a47: xor rdi,0x28
0x4a50: jnz 0x4a5c
0x4a52: add rsp,0x48
0x4a56: ret
0x4a57: call 0x14e0
0x4a5c: call 0x15a0
0x4a70: mov r8,0xffffffff
0x4a77: jmp 0x49d0
0x4a80: mov rcx,rdx
0x4a83: mov r8,0xffffffff
0x4a8a: mov rdx,rsi
0x4a8d: mov rsi,rdi
0x4a90: xor edi,edi
0x4a92: jmp 0x49d0
0x4aa0: mov r8,rcx
0x4aa3: mov rcx,rdx
0x4aa6: mov rdx,rsi
0x4aa9: mov rsi,rdi
0x4aac: xor edi,edi
0x4aae: jmp 0x49d0
0x4ac0: lea rcx,[rip+0x204559]
0x4ac7: jmp 0x41d0
0x4ad0: lea rcx,[rip+0x204549]
0x4ad7: mov rdx,rsi
0x4ada: mov rsi,rdi
0x4add: xor edi,edi
0x4adf: jmp 0x41d0
0x4af0: lea rcx,[rip+0x204529]
0x4af7: mov rdx,0xffffffff
0x4afe: jmp 0x41d0
0x4bd6: nop qword ptr [rax+rax*1+0x0]
0x4c65: nop qword ptr [rax]
0x4c68: mov r8,rcx
0x4c6b: mov rcx,rdx
0x4c6e: lea rdx,[rip+0x1c1f]
0x4c75: mov esi,0x1
0x4c7a: xor eax,eax
0x4c7c: call 0x17b0
0x4c81: jmp 0x4b6c
0x4c86: nop qword ptr [rax+rax*1+0x0]
0x4ce5: nop qword ptr [rax]
0x4d21: nop qword ptr [rax+0x0]
0x4d68: nop qword ptr [rax+rax*1+0x0]
0x4db7: nop qword ptr [rax+rax*1+0x0]
0x4e14: nop qword ptr [rax+0x0]
0x4e42: nop qword ptr [rax+rax*1+0x0]
0x4ef6: nop qword ptr [rax+rax*1+0x0]
0x4f50: xor r9d,r9d
0x4f53: cmp [r8],0x0
0x4f57: jz 0x4f6b
0x4f59: nop qword ptr [rax+0x0]
0x4f60: add r9,0x1
0x4f64: cmp [r8+r9*8+0x0],0x0
0x4f69: jnz 0x4f60
0x4f6b: jmp 0x4b30
0x4f70: sub rsp,0x68
0x4f74: mov r10,r8
0x4f77: xor r9d,r9d
0x4f7a: mov rax,0x28
0x4f83: mov qword ptr [rsp+0x58],rax
0x4f88: xor eax,eax
0x4f8a: mov r8,rsp
0x4f8d: nop qword ptr [rax]
0x4f90: mov eax,dword ptr [r10]
0x4f93: cmp eax,0x2f
0x4f96: jnbe 0x4fda
0x4f98: mov r11d,eax
0x4f9b: add r11,qword ptr [r10+0x10]
0x4f9f: add eax,0x8
0x4fa2: mov dword ptr [r10],eax
0x4fa5: mov rax,qword ptr [r11]
0x4fa8: test rax,rax
0x4fab: mov qword ptr [r8+r9*8+0x0],rax
0x4faf: jz 0x4fbb
0x4fb1: add r9,0x1
0x4fb5: cmp r9,0xa
0x4fb9: jnz 0x4f90
0x4fbb: call 0x4b30
0x4fc0: mov rax,qword ptr [rsp+0x58]
0x4fc5: xor rax,0x28
0x4fce: jnz 0x4fd5
0x4fd0: add rsp,0x68
0x4fd4: ret
0x4fd5: call 0x15a0
0x4fda: mov r11,qword ptr [r10+0x8]
0x4fde: lea rax,[r11+0x8]
0x4fe2: mov qword ptr [r10+0x8],rax
0x4fe6: jmp 0x4fa5
0x50b0: call 0x15a0
0x50bc: mov rax,rbx
0x50bf: add rbx,0x8
0x50c3: jmp 0x5076
0x50d0: push rbx
0x50d1: lea rsi,[rip+0x180a]
0x50d8: mov edx,0x5
0x50dd: xor edi,edi
0x50df: call 0x1570
0x50e4: lea rdx,[rip+0x180c]
0x50eb: mov rsi,rax
0x50ee: mov edi,0x1
0x50f3: xor eax,eax
0x50f5: call 0x1730
0x50fa: lea rsi,[rip+0x180c]
0x5101: mov edx,0x5
0x5106: xor edi,edi
0x5108: call 0x1570
0x510d: lea rcx,[rip+0x107c]
0x5114: lea rdx,[rip+0xc24]
0x511b: mov rsi,rax
0x511e: mov edi,0x1
0x5123: xor eax,eax
0x5125: call 0x1730
0x512a: mov rbx,qword ptr [rip+0x203f57]
0x5131: lea rsi,[rip+0x1a08]
0x5138: xor edi,edi
0x513a: mov edx,0x5
0x513f: call 0x1570
0x5144: mov rsi,rbx
0x5147: mov rdi,rax
0x514a: pop rbx
0x514b: jmp 0x1670
0x5170: mov rax,rdi
0x5173: mul rsi
0x5176: mov rdi,rax
0x5179: seto al
0x517c: test rdi,rdi
0x517f: js 0x518b
0x5181: movzx eax,al
0x5184: test rax,rax
0x5187: jnz 0x518b
0x5189: jmp 0x5150
0x518b: sub rsp,0x8
0x518f: call 0x53a0
0x51b9: test rdi,rdi
0x51bc: jnz 0x51d8
0x51d2: nop qword ptr [rax+rax*1+0x0]
0x51d8: call 0x14d0
0x51dd: xor eax,eax
0x51df: pop rbx
0x51e0: ret
0x51f0: mov rax,rsi
0x51f3: mul rdx
0x51f6: mov rsi,rax
0x51f9: seto al
0x51fc: test rsi,rsi
0x51ff: js 0x520b
0x5201: movzx eax,al
0x5204: test rax,rax
0x5207: jnz 0x520b
0x5209: jmp 0x51b0
0x520b: sub rsp,0x8
0x520f: call 0x53a0
0x5220: test rdi,rdi
0x5223: mov r9,rdx
0x5226: mov rcx,qword ptr [rsi]
0x5229: jz 0x5260
0x522b: xor edx,edx
0x522d: mov rax,0x6148914691236517204
0x5237: div r9
0x523a: cmp rax,rcx
0x523d: jbe 0x527b
0x523f: mov rax,rcx
0x5242: shr rax,0x1
0x5245: lea rcx,[rax+rcx*1+0x1]
0x524a: mov qword ptr [rsi],rcx
0x524d: imul rcx,r9
0x5251: mov rsi,rcx
0x5254: jmp 0x51b0
0x5259: nop qword ptr [rax+0x0]
0x5260: test rcx,rcx
0x5263: jz 0x5288
0x5265: mov rax,rcx
0x5268: mul r9
0x526b: seto dl
0x526e: test rax,rax
0x5271: movzx edx,dl
0x5274: js 0x527b
0x5276: test rdx,rdx
0x5279: jz 0x524a
0x527b: sub rsp,0x8
0x527f: call 0x53a0
0x5284: nop qword ptr [rax+0x0]
0x5288: xor edx,edx
0x528a: mov eax,0x80
0x528f: xor r8d,r8d
0x5292: div r9
0x5295: test rax,rax
0x5298: setz r8b
0x529c: lea rcx,[r8+rax*1+0x0]
0x52a0: jmp 0x5265
0x52b0: test rdi,rdi
0x52b3: mov rax,qword ptr [rsi]
0x52b6: jz 0x52e0
0x52b8: mov rdx,0x6148914691236517203
0x52c2: cmp rax,rdx
0x52c5: jnbe 0x52f1
0x52c7: mov rdx,rax
0x52ca: shr rdx,0x1
0x52cd: lea rax,[rdx+rax*1+0x1]
0x52d2: mov qword ptr [rsi],rax
0x52d5: mov rsi,rax
0x52d8: jmp 0x51b0
0x52dd: nop qword ptr [rax]
0x52e0: test rax,rax
0x52e3: mov edx,0x80
0x52e8: cmove rax,rdx
0x52ec: test rax,rax
0x52ef: jns 0x52d2
0x52f1: sub rsp,0x8
0x52f5: call 0x53a0
0x5300: push rbx
0x5301: mov rbx,rdi
0x5304: call 0x5150
0x5309: mov rdx,rbx
0x530c: xor esi,esi
0x530e: mov rdi,rax
0x5311: pop rbx
0x5312: jmp 0x1630
0x5320: mov rax,rdi
0x5323: sub rsp,0x8
0x5327: mul rsi
0x532a: seto dl
0x532d: test rax,rax
0x5330: js 0x5349
0x5332: movzx edx,dl
0x5335: test rdx,rdx
0x5338: jnz 0x5349
0x533a: call 0x1680
0x533f: test rax,rax
0x5342: jz 0x5349
0x5344: add rsp,0x8
0x5348: ret
0x5349: call 0x53a0
0x5350: push rbp
0x5351: push rbx
0x5352: mov rbp,rdi
0x5355: mov rdi,rsi
0x5358: mov rbx,rsi
0x535b: sub rsp,0x8
0x535f: call 0x5150
0x5364: add rsp,0x8
0x5368: mov rdx,rbx
0x536b: mov rsi,rbp
0x536e: pop rbx
0x536f: pop rbp
0x5370: mov rdi,rax
0x5373: jmp 0x16a0
0x5380: push rbx
0x5381: mov rbx,rdi
0x5384: call 0x1590
0x5389: mov rdi,rbx
0x538c: lea rsi,[rax+0x1]
0x5390: pop rbx
0x5391: jmp 0x5350
0x53d0: call 0x14e0
0x5480: mov rbp,qword ptr [rsp]
0x54a6: nop qword ptr [rax+rax*1+0x0]
0x54cf: nop 
0x54db: call 0x15a0
0x5576: nop qword ptr [rax+rax*1+0x0]
0x55b6: cmp eax,0x22
0x55b9: mov ebp,0x1
0x55be: jnz 0x55e8
0x55d3: nop qword ptr [rax+rax*1+0x0]
0x55e2: nop qword ptr [rax+rax*1+0x0]
0x5612: nop qword ptr [rax+rax*1+0x0]
0x561c: nop qword ptr [rax+0x0]
0x56bb: nop qword ptr [rax+rax*1+0x0]
0x57ec: nop qword ptr [rax+0x0]
0x5873: nop qword ptr [rax+rax*1+0x0]
0x5890: call 0x15a0
0x5895: lea rcx,[rip+0x1484]
0x589c: lea rsi,[rip+0x135d]
0x58a3: lea rdi,[rip+0x1376]
0x58aa: mov edx,0x54
0x58af: call 0x1610
0x5975: nop qword ptr [rax]
0x59d3: nop qword ptr [rax+rax*1+0x0]
0x59ff: nop 
0x5ace: call 0x15a0
0x5ae0: push r12
0x5ae2: push rbp
0x5ae3: mov rbp,rdi
0x5ae6: push rbx
0x5ae7: call 0x1520
0x5aec: mov ebx,dword ptr [rbp+0x0]
0x5aef: mov rdi,rbp
0x5af2: mov r12,rax
0x5af5: call 0x5930
0x5afa: and ebx,0x20
0x5afd: test ebx,ebx
0x5aff: jnz 0x5b18
0x5b01: test eax,eax
0x5b03: jz 0x5b0f
0x5b05: test r12,r12
0x5b08: mov eax,0xffffffff
0x5b0d: jz 0x5b48
0x5b0f: pop rbx
0x5b10: pop rbp
0x5b11: pop r12
0x5b13: ret
0x5b14: nop qword ptr [rax+0x0]
0x5b18: test eax,eax
0x5b1a: jnz 0x5b38
0x5b1c: call 0x14f0
0x5b21: mov [rax],0x0
0x5b27: mov eax,0xffffffff
0x5b2c: pop rbx
0x5b2d: pop rbp
0x5b2e: pop r12
0x5b30: ret
0x5b31: nop qword ptr [rax+0x0]
0x5b38: pop rbx
0x5b39: mov eax,0xffffffff
0x5b3e: pop rbp
0x5b3f: pop r12
0x5b41: ret
0x5b42: nop qword ptr [rax+rax*1+0x0]
0x5b48: call 0x14f0
0x5b4d: cmp [rax],0x9
0x5b50: pop rbx
0x5b51: pop rbp
0x5b52: pop r12
0x5b54: setnz al
0x5b57: movzx eax,al
0x5b5a: neg eax
0x5b5c: ret
0x5b9a: nop qword ptr [rax+rax*1+0x0]
0x5be6: nop qword ptr [rax+rax*1+0x0]
0x5c00: push r15
0x5c02: push r14
0x5c04: mov r15,rdx
0x5c07: push r13
0x5c09: push r12
0x5c0b: lea r12,[rip+0x202efe]
0x5c12: push rbp
0x5c13: lea rbp,[rip+0x202efe]
0x5c1a: push rbx
0x5c1b: mov r13d,edi
0x5c1e: mov r14,rsi
0x5c21: sub rbp,r12
0x5c24: sub rsp,0x8
0x5c28: sar rbp,0x3
0x5c2c: call 0x14a8
0x5c31: test rbp,rbp
0x5c34: jz 0x5c56
0x5c36: xor ebx,ebx
0x5c38: nop qword ptr [rax+rax*1+0x0]
0x5c40: mov rdx,r15
0x5c43: mov rsi,r14
0x5c46: mov edi,r13d
0x5c49: call qword ptr [r12+rbx*8+0x0]
0x5c4d: add rbx,0x1
0x5c51: cmp rbp,rbx
0x5c54: jnz 0x5c40
0x5c56: add rsp,0x8
0x5c5a: pop rbx
0x5c5b: pop rbp
0x5c5c: pop r12
0x5c5e: pop r13
0x5c60: pop r14
0x5c62: pop r15
0x5c64: ret
0x5c90: sub rsp,0x8
0x5c94: add rsp,0x8
0x5c98: ret
