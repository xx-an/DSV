0x11b6: push 0x0
0x11c0: jmp qword ptr [rip+0x205cc2]
0x11c6: push 0x1
0x11d6: push 0x2
0x11e0: jmp qword ptr [rip+0x205cb2]
0x11e6: push 0x3
0x11f6: push 0x4
0x1200: jmp qword ptr [rip+0x205ca2]
0x1206: push 0x5
0x1210: jmp qword ptr [rip+0x205c9a]
0x1216: push 0x6
0x1226: push 0x7
0x1230: jmp qword ptr [rip+0x205c8a]
0x1236: push 0x8
0x1246: push 0x9
0x1256: push 0xa
0x1260: jmp qword ptr [rip+0x205c72]
0x1266: push 0xb
0x1270: jmp qword ptr [rip+0x205c6a]
0x1276: push 0xc
0x1280: jmp qword ptr [rip+0x205c62]
0x1286: push 0xd
0x1290: jmp qword ptr [rip+0x205c5a]
0x1296: push 0xe
0x12a6: push 0xf
0x12b6: push 0x10
0x12c0: jmp qword ptr [rip+0x205c42]
0x12c6: push 0x11
0x12d0: jmp qword ptr [rip+0x205c3a]
0x12d6: push 0x12
0x12e0: jmp qword ptr [rip+0x205c32]
0x12e6: push 0x13
0x12f0: jmp qword ptr [rip+0x205c2a]
0x12f6: push 0x14
0x1306: push 0x15
0x1310: jmp qword ptr [rip+0x205c1a]
0x1316: push 0x16
0x1326: push 0x17
0x1330: jmp qword ptr [rip+0x205c0a]
0x1336: push 0x18
0x1340: jmp qword ptr [rip+0x205c02]
0x1346: push 0x19
0x1350: jmp qword ptr [rip+0x205bfa]
0x1356: push 0x1a
0x1360: jmp qword ptr [rip+0x205bf2]
0x1366: push 0x1b
0x1370: jmp qword ptr [rip+0x205bea]
0x1376: push 0x1c
0x1380: jmp qword ptr [rip+0x205be2]
0x1386: push 0x1d
0x1390: jmp qword ptr [rip+0x205bda]
0x1396: push 0x1e
0x13a6: push 0x1f
0x13b6: push 0x20
0x13c0: jmp qword ptr [rip+0x205bc2]
0x13c6: push 0x21
0x13d0: jmp qword ptr [rip+0x205bba]
0x13d6: push 0x22
0x13e6: push 0x23
0x13f6: push 0x24
0x1406: push 0x25
0x1416: push 0x26
0x1420: jmp qword ptr [rip+0x205b92]
0x1426: push 0x27
0x1430: jmp qword ptr [rip+0x205b8a]
0x1436: push 0x28
0x1446: push 0x29
0x1450: jmp qword ptr [rip+0x205b9a]
0x1456: nop 
0x1515: nop qword ptr [rax]
0x1664: nop qword ptr [rax+0x0]
0x1692: nop qword ptr [rax+rax*1+0x0]
0x16c5: nop qword ptr [rax]
0x181d: nop qword ptr [rax]
0x1827: jmp 0x153a
0x182c: nop qword ptr [rax+0x0]
0x1874: nop qword ptr [rax+0x0]
0x18ba: jmp 0x1883
0x1943: jmp 0x1510
0x196c: mov edx,r14d
0x196f: jmp 0x151b
0x197e: jmp 0x16f9
0x19ba: hlt 
0x19c0: lea rdi,[rip+0x2056b9]
0x19c7: push rbp
0x19c8: lea rax,[rip+0x2056b1]
0x19cf: cmp rax,rdi
0x19d2: mov rbp,rsp
0x19d5: jz 0x19f0
0x19d7: mov rax,qword ptr [rip+0x2055f2]
0x19de: test rax,rax
0x19e1: jz 0x19f0
0x19e3: pop rbp
0x19e4: jmp rax
0x19e6: nop qword ptr [rax+rax*1+0x0]
0x19f0: pop rbp
0x19f1: ret
0x1a00: lea rdi,[rip+0x205679]
0x1a07: lea rsi,[rip+0x205672]
0x1a0e: push rbp
0x1a0f: sub rsi,rdi
0x1a12: mov rbp,rsp
0x1a15: sar rsi,0x3
0x1a19: mov rax,rsi
0x1a1c: shr rax,0x3f
0x1a20: add rsi,rax
0x1a23: sar rsi,0x1
0x1a26: jz 0x1a40
0x1a28: mov rax,qword ptr [rip+0x2055b9]
0x1a2f: test rax,rax
0x1a32: jz 0x1a40
0x1a34: pop rbp
0x1a35: jmp rax
0x1a37: nop qword ptr [rax+rax*1+0x0]
0x1a40: pop rbp
0x1a41: ret
0x1a50: cmp [rip+0x205651],0x0
0x1a57: jnz 0x1a88
0x1a59: cmp [rip+0x20558f],0x0
0x1a61: push rbp
0x1a62: mov rbp,rsp
0x1a65: jz 0x1a73
0x1a67: mov rdi,qword ptr [rip+0x20559a]
0x1a6e: call 0x1450
0x1a73: call 0x19c0
0x1a78: mov [rip+0x205629],0x1
0x1a7f: pop rbp
0x1a80: ret
0x1a81: nop qword ptr [rax+0x0]
0x1a88: rep ret
0x1a90: push rbp
0x1a91: mov rbp,rsp
0x1a94: pop rbp
0x1a95: jmp 0x1a00
0x1aba: nop qword ptr [rax+rax*1+0x0]
0x1ac6: nop qword ptr [rax+rax*1+0x0]
0x1ad6: nop qword ptr [rax+rax*1+0x0]
0x1ae6: nop qword ptr [rax+rax*1+0x0]
0x1af6: nop qword ptr [rax+rax*1+0x0]
0x1b06: nop qword ptr [rax+rax*1+0x0]
0x1b16: nop qword ptr [rax+rax*1+0x0]
0x1b4c: lea rcx,[rip+0x2fad]
0x1b53: lea rsi,[rip+0x2fb1]
0x1b5a: lea rdi,[rip+0x2fc7]
0x1b61: mov edx,0x28
0x1b66: call 0x12d0
0x1f20: mov qword ptr [rip+0x205191],rdi
0x1f27: ret
0x1f30: mov byte ptr [rip+0x205179],dil
0x1f37: ret
0x1f40: push rbp
0x1f41: push rbx
0x1f42: sub rsp,0x8
0x1f46: mov rdi,qword ptr [rip+0x20513b]
0x1f4d: call 0x4660
0x1f52: test eax,eax
0x1f54: jz 0x1f6c
0x1f56: call 0x11e0
0x1f5b: cmp [rip+0x20514e],0x0
0x1f62: mov rbx,rax
0x1f65: jz 0x1f83
0x1f67: cmp [rax],0x20
0x1f6a: jnz 0x1f83
0x1f6c: mov rdi,qword ptr [rip+0x20512d]
0x1f73: call 0x4660
0x1f78: test eax,eax
0x1f7a: jnz 0x1fc2
0x1f7c: add rsp,0x8
0x1f80: pop rbx
0x1f81: pop rbp
0x1f82: ret
0x1f83: lea rsi,[rip+0x313e]
0x1f8a: xor edi,edi
0x1f8c: mov edx,0x5
0x1f91: call 0x1250
0x1f96: mov rdi,qword ptr [rip+0x20511b]
0x1f9d: mov rbp,rax
0x1fa0: test rdi,rdi
0x1fa3: jz 0x1fcd
0x1fa5: call 0x3b00
0x1faa: mov esi,dword ptr [rbx]
0x1fac: lea rdx,[rip+0x3121]
0x1fb3: mov rcx,rax
0x1fb6: mov r8,rbp
0x1fb9: xor edi,edi
0x1fbb: xor eax,eax
0x1fbd: call 0x13c0
0x1fc2: mov edi,dword ptr [rip+0x205050]
0x1fc8: call 0x1200
0x1fcd: mov esi,dword ptr [rbx]
0x1fcf: lea rdx,[rip+0x3102]
0x1fd6: mov rcx,rax
0x1fd9: xor edi,edi
0x1fdb: xor eax,eax
0x1fdd: call 0x13c0
0x1fe2: jmp 0x1fc2
0x2090: push rbp
0x2091: push rbx
0x2092: mov rbp,rdi
0x2095: mov ebx,esi
0x2097: sub rsp,0x8
0x209b: call 0x4740
0x20a0: movzx edx,byte ptr [rax]
0x20a3: and edx,0xdf
0x20a6: cmp dl,0x55
0x20a9: jz 0x2120
0x20ab: cmp dl,0x47
0x20ae: jz 0x20d0
0x20b0: lea rax,[rip+0x307c]
0x20b7: lea rdx,[rip+0x3077]
0x20be: cmp ebx,0x9
0x20c1: cmovne rax,rdx
0x20c5: add rsp,0x8
0x20c9: pop rbx
0x20ca: pop rbp
0x20cb: ret
0x20cc: nop qword ptr [rax+0x0]
0x20d0: movzx edx,byte ptr [rax+0x1]
0x20d4: and edx,0xdf
0x20d7: cmp dl,0x42
0x20da: jnz 0x20b0
0x20dc: cmp [rax+0x2],0x31
0x20e0: jnz 0x20b0
0x20e2: cmp [rax+0x3],0x38
0x20e6: jnz 0x20b0
0x20e8: cmp [rax+0x4],0x30
0x20ec: jnz 0x20b0
0x20ee: cmp [rax+0x5],0x33
0x20f2: jnz 0x20b0
0x20f4: cmp [rax+0x6],0x30
0x20f8: jnz 0x20b0
0x20fa: cmp [rax+0x7],0x0
0x20fe: jnz 0x20b0
0x2100: cmp [rbp+0x0],0x60
0x2104: lea rax,[rip+0x3021]
0x210b: lea rdx,[rip+0x301e]
0x2112: cmovne rax,rdx
0x2116: add rsp,0x8
0x211a: pop rbx
0x211b: pop rbp
0x211c: ret
0x211d: nop qword ptr [rax]
0x2120: movzx edx,byte ptr [rax+0x1]
0x2124: and edx,0xdf
0x2127: cmp dl,0x54
0x212a: jnz 0x20b0
0x212c: movzx edx,byte ptr [rax+0x2]
0x2130: and edx,0xdf
0x2133: cmp dl,0x46
0x2136: jnz 0x20b0
0x213c: cmp [rax+0x3],0x2d
0x2140: jnz 0x20b0
0x2146: cmp [rax+0x4],0x38
0x214a: jnz 0x20b0
0x2150: cmp [rax+0x5],0x0
0x2154: jnz 0x20b0
0x215a: cmp [rbp+0x0],0x60
0x215e: lea rax,[rip+0x2fbf]
0x2165: lea rdx,[rip+0x2fbc]
0x216c: cmovne rax,rdx
0x2170: add rsp,0x8
0x2174: pop rbx
0x2175: pop rbp
0x2176: ret
0x2180: push r15
0x2182: push r14
0x2184: mov r15d,r8d
0x2187: push r13
0x2189: push r12
0x218b: mov r14,rdi
0x218e: push rbp
0x218f: push rbx
0x2190: mov ebx,r9d
0x2193: mov r13,rsi
0x2196: mov rbp,rcx
0x2199: and ebx,0x2
0x219c: sub rsp,0xb8
0x21a3: mov rax,qword ptr [rsp+0xf0]
0x21ab: mov qword ptr [rsp+0x10],rdx
0x21b0: mov dword ptr [rsp+0x8],r8d
0x21b5: mov dword ptr [rsp+0x78],r9d
0x21ba: mov qword ptr [rsp+0x20],rax
0x21bf: mov rax,qword ptr [rsp+0xf8]
0x21c7: mov qword ptr [rsp+0x68],rax
0x21cc: mov rax,qword ptr [rsp+0x100]
0x21d4: mov qword ptr [rsp+0x60],rax
0x21d9: mov rax,0x28
0x21e2: mov qword ptr [rsp+0xa8],rax
0x21ea: xor eax,eax
0x21ec: call 0x1260
0x21f1: cmp r15d,0xa
0x21f5: mov qword ptr [rsp+0x58],rax
0x21fa: jnbe 0x33af
0x2200: lea rcx,[rip+0x2f99]
0x2207: mov edx,r15d
0x220a: movsxd rax,dword ptr [rcx+rdx*4+0x0]
0x220e: add rax,rcx
0x2211: jmp rax
0x2213: mov [rsp+0xe],0x1
0x2218: mov [rsp+0x7c],0x0
0x221d: xor r12d,r12d
0x2220: mov [rsp+0x50],0x0
0x2229: mov [rsp+0xf],0x1
0x222e: mov [rsp+0xd],0x0
0x2233: lea rax,[rip+0x2efb]
0x223a: mov [rsp+0x18],0x1
0x2243: xor r15d,r15d
0x2246: mov [rsp+0x8],0x2
0x224e: mov qword ptr [rsp+0x48],rax
0x2253: xor r11d,r11d
0x2256: mov rax,rbp
0x2259: mov r8d,r12d
0x225c: mov rbp,r11
0x225f: mov r11,rax
0x2262: nop qword ptr [rax+rax*1+0x0]
0x2268: cmp r11,rbp
0x226b: setnz r12b
0x226f: cmp r11,0xffffffff
0x2273: jnz 0x2282
0x2275: mov rax,qword ptr [rsp+0x10]
0x227a: cmp [rax+rbp*1+0x0],0x0
0x227e: setnz r12b
0x2282: test r12b,r12b
0x2285: jz 0x28e0
0x228b: cmp [rsp+0x8],0x2
0x2290: mov rdi,qword ptr [rsp+0x10]
0x2295: lea r9,[rdi+rbp*1+0x0]
0x2299: setnz al
0x229c: and al,byte ptr [rsp+0xd]
0x22a0: mov r10d,eax
0x22a3: jz 0x2350
0x22a9: mov rax,qword ptr [rsp+0x18]
0x22ae: test rax,rax
0x22b1: jz 0x26e0
0x22b7: cmp r11,0xffffffff
0x22bb: lea rbx,[rbp+rax*1+0x0]
0x22c0: jnz 0x22f0
0x22c2: cmp rax,0x1
0x22c6: jbe 0x22f0
0x22c8: mov byte ptr [rsp+0x38],r8b
0x22cd: mov byte ptr [rsp+0x30],r10b
0x22d2: mov qword ptr [rsp+0x28],r9
0x22d7: call 0x1270
0x22dc: movzx r8d,byte ptr [rsp+0x38]
0x22e2: movzx r10d,byte ptr [rsp+0x30]
0x22e8: mov r11,rax
0x22eb: mov r9,qword ptr [rsp+0x28]
0x22f0: cmp rbx,r11
0x22f3: mov byte ptr [rsp+0x28],r10b
0x22f8: jnbe 0x28b0
0x22fe: mov rdx,qword ptr [rsp+0x18]
0x2303: mov rsi,qword ptr [rsp+0x48]
0x2308: mov rdi,r9
0x230b: mov qword ptr [rsp+0x40],r11
0x2310: mov byte ptr [rsp+0x38],r8b
0x2315: mov qword ptr [rsp+0x30],r9
0x231a: call 0x12f0
0x231f: test eax,eax
0x2321: mov r9,qword ptr [rsp+0x30]
0x2326: movzx r8d,byte ptr [rsp+0x38]
0x232c: mov r11,qword ptr [rsp+0x40]
0x2331: jnz 0x28b0
0x2337: cmp [rsp+0xf],0x0
0x233c: movzx r10d,byte ptr [rsp+0x28]
0x2342: jnz 0x32c5
0x2348: nop qword ptr [rax+rax*1+0x0]
0x2350: movzx ebx,byte ptr [r9]
0x2354: cmp bl,0x7e
0x2357: jnbe 0x2678
0x235d: lea rcx,[rip+0x2e68]
0x2364: movzx edx,bl
0x2367: movsxd rax,dword ptr [rcx+rdx*4+0x0]
0x236b: add rax,rcx
0x236e: jmp rax
0x2370: xor r10d,r10d
0x2373: cmp r11,0x1
0x2377: setnz al
0x237a: cmp r11,0xffffffff
0x237e: jnz 0x238c
0x2380: mov rax,qword ptr [rsp+0x10]
0x2385: cmp [rax+0x1],0x0
0x2389: setnz al
0x238c: cmp [rsp+0x8],0x2
0x2391: setz dl
0x2394: test al,al
0x2396: jz 0x25e8
0x239c: xor r12d,r12d
0x239f: xor eax,eax
0x23a1: nop qword ptr [rax+0x0]
0x23a8: cmp [rsp+0xd],0x1
0x23ad: jnz 0x24c2
0x23b3: test dl,dl
0x23b5: jnz 0x24c2
0x23bb: mov rsi,qword ptr [rsp+0x20]
0x23c0: test rsi,rsi
0x23c3: jz 0x23d9
0x23c5: mov edx,ebx
0x23c7: shr dl,0x5
0x23ca: movzx edx,dl
0x23cd: mov edx,dword ptr [rsi+rdx*4+0x0]
0x23d0: bt edx,ebx
0x23d3: jb 0x2523
0x23d9: test r10b,r10b
0x23dc: jnz 0x2523
0x23e2: xor eax,0x1
0x23e5: add rbp,0x1
0x23e9: and eax,r8d
0x23ec: test al,al
0x23ee: jz 0x2410
0x23f0: cmp r13,r15
0x23f3: jbe 0x23fa
0x23f5: mov [r14+r15*1+0x0],0x27
0x23fa: lea rax,[r15+0x1]
0x23fe: cmp r13,rax
0x2401: jbe 0x2409
0x2403: mov [r14+r15*1+0x1],0x27
0x2409: add r15,0x2
0x240d: xor r8d,r8d
0x2410: cmp r15,r13
0x2413: jnb 0x2419
0x2415: mov byte ptr [r14+r15*1+0x0],bl
0x2419: movzx edi,byte ptr [rsp+0xe]
0x241e: add r15,0x1
0x2422: mov eax,0x0
0x2427: test r12b,r12b
0x242a: cmove edi,eax
0x242d: mov byte ptr [rsp+0xe],dil
0x2432: jmp 0x2268
0x2437: nop qword ptr [rax+rax*1+0x0]
0x2440: xor r10d,r10d
0x2443: mov eax,dword ptr [rsp+0x8]
0x2447: cmp eax,0x2
0x244a: jz 0x2a08
0x2450: cmp eax,0x5
0x2453: jz 0x29c8
0x2459: cmp eax,0x2
0x245c: mov ebx,0x3f
0x2461: setz dl
0x2464: xor r12d,r12d
0x2467: xor eax,eax
0x2469: jmp 0x23a8
0x246e: nop 
0x2470: xor r10d,r10d
0x2473: cmp [rsp+0x8],0x2
0x2478: jz 0x2980
0x247e: mov byte ptr [rsp+0x7c],r12b
0x2483: xor edx,edx
0x2485: xor eax,eax
0x2487: mov ebx,0x27
0x248c: jmp 0x23a8
0x2491: nop qword ptr [rax+0x0]
0x2498: mov edx,0x9
0x249d: mov ebx,0x74
0x24a2: cmp [rsp+0x8],0x2
0x24a7: setz al
0x24aa: and al,byte ptr [rsp+0xf]
0x24ae: jnz 0x25fe
0x24b4: cmp [rsp+0xd],0x0
0x24b9: jnz 0x2520
0x24bb: mov ebx,edx
0x24bd: xor r12d,r12d
0x24c0: xor eax,eax
0x24c2: cmp [rsp+0xf],0x0
0x24c7: jnz 0x23bb
0x24cd: jmp 0x23d9
0x24d2: nop qword ptr [rax+rax*1+0x0]
0x24d8: mov edx,0x8
0x24dd: mov ebx,0x62
0x24e2: jmp 0x24b4
0x24e4: nop qword ptr [rax+0x0]
0x24e8: cmp [rsp+0x8],0x2
0x24ed: jz 0x28c0
0x24f3: cmp [rsp+0xd],0x0
0x24f8: jz 0x2710
0x24fe: cmp [rsp+0xf],0x0
0x2503: jz 0x2710
0x2509: cmp [rsp+0x18],0x0
0x250f: jnz 0x28cb
0x2515: mov ebx,0x5c
0x251a: nop qword ptr [rax+rax*1+0x0]
0x2520: xor r12d,r12d
0x2523: cmp [rsp+0x8],0x2
0x2528: setz dl
0x252b: cmp [rsp+0xf],0x0
0x2530: mov eax,edx
0x2532: jnz 0x2d88
0x2538: mov eax,r8d
0x253b: xor eax,0x1
0x253e: and al,dl
0x2540: jz 0x2571
0x2542: cmp r13,r15
0x2545: jbe 0x254c
0x2547: mov [r14+r15*1+0x0],0x27
0x254c: lea rdx,[r15+0x1]
0x2550: cmp r13,rdx
0x2553: jbe 0x255b
0x2555: mov [r14+r15*1+0x1],0x24
0x255b: lea rdx,[r15+0x2]
0x255f: cmp r13,rdx
0x2562: jbe 0x256a
0x2564: mov [r14+r15*1+0x2],0x27
0x256a: add r15,0x3
0x256e: mov r8d,eax
0x2571: cmp r13,r15
0x2574: jbe 0x257b
0x2576: mov [r14+r15*1+0x0],0x5c
0x257b: add r15,0x1
0x257f: add rbp,0x1
0x2583: jmp 0x2410
0x2588: nop qword ptr [rax+rax*1+0x0]
0x2590: cmp [rsp+0xd],0x0
0x2595: jnz 0x2763
0x259b: xor edx,edx
0x259d: test [rsp+0x78],0x1
0x25a2: jz 0x24bb
0x25a8: add rbp,0x1
0x25ac: jmp 0x2268
0x25b1: nop qword ptr [rax+0x0]
0x25b8: cmp [rsp+0x8],0x2
0x25bd: setz dl
0x25c0: xor eax,eax
0x25c2: jmp 0x23a8
0x25c7: nop qword ptr [rax+rax*1+0x0]
0x25d0: mov edx,0x7
0x25d5: mov ebx,0x61
0x25da: jmp 0x24b4
0x25df: nop 
0x25e0: cmp [rsp+0x8],0x2
0x25e5: setz dl
0x25e8: test rbp,rbp
0x25eb: jnz 0x239c
0x25f1: movzx eax,byte ptr [rsp+0xf]
0x25f6: and al,dl
0x25f8: jz 0x23a8
0x25fe: mov rbp,r11
0x2601: mov [rsp+0x8],0x2
0x2609: jmp 0x2d09
0x260e: nop 
0x2610: cmp [rsp+0x8],0x2
0x2615: setz dl
0x2618: xor r12d,r12d
0x261b: jmp 0x25f1
0x261d: nop qword ptr [rax]
0x2620: cmp [rsp+0x8],0x2
0x2625: mov ebx,0x20
0x262a: setz dl
0x262d: jmp 0x25f1
0x262f: nop 
0x2630: mov edx,0xd
0x2635: mov ebx,0x72
0x263a: jmp 0x24a2
0x263f: nop 
0x2640: mov edx,0xc
0x2645: mov ebx,0x66
0x264a: jmp 0x24b4
0x264f: nop 
0x2650: mov edx,0xb
0x2655: mov ebx,0x76
0x265a: jmp 0x24b4
0x265f: nop 
0x2660: mov edx,0xa
0x2665: mov ebx,0x6e
0x266a: jmp 0x24a2
0x266f: nop 
0x2670: xor r10d,r10d
0x2673: nop qword ptr [rax+rax*1+0x0]
0x2678: cmp [rsp+0x58],0x1
0x267e: jnz 0x2a28
0x2684: mov qword ptr [rsp+0x38],r11
0x2689: mov byte ptr [rsp+0x30],r8b
0x268e: mov byte ptr [rsp+0x28],r10b
0x2693: call 0x1440
0x2698: mov rcx,qword ptr [rax]
0x269b: movzx edx,bl
0x269e: movzx r10d,byte ptr [rsp+0x28]
0x26a4: movzx r8d,byte ptr [rsp+0x30]
0x26aa: mov r11,qword ptr [rsp+0x38]
0x26af: mov edi,0x1
0x26b4: movzx eax,byte ptr [rcx+rdx*2+0x0]
0x26b8: and ax,0x4000
0x26bc: setnz r12b
0x26c0: setz al
0x26c3: and al,byte ptr [rsp+0xd]
0x26c7: test al,al
0x26c9: jnz 0x3061
0x26cf: cmp [rsp+0x8],0x2
0x26d4: setz dl
0x26d7: jmp 0x23a8
0x26dc: nop qword ptr [rax+0x0]
0x26e0: movzx ebx,byte ptr [r9]
0x26e4: cmp bl,0x7e
0x26e7: jnbe 0x2670
0x26e9: lea rcx,[rip+0x2cd8]
0x26f0: movzx edx,bl
0x26f3: movsxd rax,dword ptr [rcx+rdx*4+0x0]
0x26f7: add rax,rcx
0x26fa: jmp rax
0x26fc: nop qword ptr [rax+0x0]
0x2700: xor r10d,r10d
0x2703: cmp [rsp+0xd],0x0
0x2708: jnz 0x24fe
0x270e: nop 
0x2710: mov edx,0x5c
0x2715: mov ebx,0x5c
0x271a: jmp 0x24b4
0x271f: nop 
0x2720: mov edx,0xc
0x2725: xor r10d,r10d
0x2728: mov ebx,0x66
0x272d: jmp 0x24b4
0x2732: nop qword ptr [rax+rax*1+0x0]
0x2738: mov edx,0xa
0x273d: xor r10d,r10d
0x2740: mov ebx,0x6e
0x2745: jmp 0x24a2
0x274a: nop qword ptr [rax+rax*1+0x0]
0x2750: mov ebx,0x61
0x2755: jmp 0x2520
0x275a: nop qword ptr [rax+rax*1+0x0]
0x2760: xor r10d,r10d
0x2763: cmp [rsp+0x8],0x2
0x2768: setz dl
0x276b: cmp [rsp+0xf],0x0
0x2770: jnz 0x330a
0x2776: mov eax,r8d
0x2779: mov rcx,r15
0x277c: xor eax,0x1
0x277f: and al,dl
0x2781: jz 0x27b0
0x2783: cmp r13,r15
0x2786: jbe 0x278d
0x2788: mov [r14+r15*1+0x0],0x27
0x278d: lea rcx,[r15+0x1]
0x2791: cmp r13,rcx
0x2794: jbe 0x279c
0x2796: mov [r14+r15*1+0x1],0x24
0x279c: lea rcx,[r15+0x2]
0x27a0: cmp r13,rcx
0x27a3: jnbe 0x2dd9
0x27a9: lea rcx,[r15+0x3]
0x27ad: mov r8d,eax
0x27b0: cmp r13,rcx
0x27b3: jbe 0x27ba
0x27b5: mov [r14+rcx*1+0x0],0x5c
0x27ba: cmp [rsp+0x8],0x2
0x27bf: lea r15,[rcx+0x1]
0x27c3: jz 0x2dc9
0x27c9: lea rax,[rbp+0x1]
0x27cd: cmp rax,r11
0x27d0: jnb 0x27eb
0x27d2: mov rax,qword ptr [rsp+0x10]
0x27d7: movzx eax,byte ptr [rax+rbp*1+0x1]
0x27dc: mov byte ptr [rsp+0x28],al
0x27e0: sub eax,0x30
0x27e3: cmp al,0x9
0x27e5: jbe 0x3019
0x27eb: mov eax,r12d
0x27ee: mov ebx,0x30
0x27f3: xor r12d,r12d
0x27f6: jmp 0x23a8
0x27fb: nop qword ptr [rax+rax*1+0x0]
0x2800: cmp [rsp+0x8],0x2
0x2805: mov r12d,r10d
0x2808: setz dl
0x280b: xor r10d,r10d
0x280e: xor eax,eax
0x2810: jmp 0x23a8
0x2815: nop qword ptr [rax]
0x2818: cmp [rsp+0x8],0x2
0x281d: setz dl
0x2820: xor r10d,r10d
0x2823: jmp 0x25e8
0x2828: nop qword ptr [rax+rax*1+0x0]
0x2830: cmp [rsp+0x8],0x2
0x2835: setz dl
0x2838: xor r10d,r10d
0x283b: xor r12d,r12d
0x283e: jmp 0x25f1
0x2843: nop qword ptr [rax+rax*1+0x0]
0x2848: cmp [rsp+0x8],0x2
0x284d: mov r12d,r10d
0x2850: mov ebx,0x20
0x2855: setz dl
0x2858: xor r10d,r10d
0x285b: jmp 0x25f1
0x2860: mov edx,0xd
0x2865: xor r10d,r10d
0x2868: mov ebx,0x72
0x286d: jmp 0x24a2
0x2872: nop qword ptr [rax+rax*1+0x0]
0x2878: mov ebx,0x76
0x287d: jmp 0x2520
0x2882: nop qword ptr [rax+rax*1+0x0]
0x2888: mov edx,0x9
0x288d: xor r10d,r10d
0x2890: mov ebx,0x74
0x2895: jmp 0x24a2
0x289a: nop qword ptr [rax+rax*1+0x0]
0x28a0: mov ebx,0x62
0x28a5: jmp 0x2520
0x28aa: nop qword ptr [rax+rax*1+0x0]
0x28b0: xor r10d,r10d
0x28b3: jmp 0x2350
0x28b8: nop qword ptr [rax+rax*1+0x0]
0x28c0: cmp [rsp+0xf],0x0
0x28c5: jnz 0x3230
0x28cb: add rbp,0x1
0x28cf: mov eax,r8d
0x28d2: xor r12d,r12d
0x28d5: mov ebx,0x5c
0x28da: jmp 0x23ec
0x28df: nop 
0x28e0: cmp [rsp+0x8],0x2
0x28e5: movzx ebx,byte ptr [rsp+0xf]
0x28ea: mov r12d,r8d
0x28ed: mov rbp,r11
0x28f0: setz dl
0x28f3: mov eax,ebx
0x28f5: test r15,r15
0x28f8: setz cl
0x28fb: and eax,edx
0x28fd: and al,cl
0x28ff: jnz 0x3366
0x2905: mov eax,ebx
0x2907: xor eax,0x1
0x290a: and dl,al
0x290c: jz 0x327c
0x2912: cmp [rsp+0x7c],0x0
0x2917: jz 0x327a
0x291d: cmp [rsp+0xe],0x0
0x2922: jnz 0x331d
0x2928: test r13,r13
0x292b: setz al
0x292e: cmp [rsp+0x50],0x0
0x2934: setnz dl
0x2937: and al,dl
0x2939: jz 0x335c
0x293f: mov r13,qword ptr [rsp+0x50]
0x2944: lea rbx,[rip+0x27ea]
0x294b: mov [r14],0x27
0x294f: mov [rsp+0x8],0x2
0x2957: mov r15d,0x1
0x295d: mov [rsp+0x18],0x1
0x2966: mov [rsp+0xf],0x0
0x296b: mov qword ptr [rsp+0x48],rbx
0x2970: mov byte ptr [rsp+0x7c],al
0x2974: jmp 0x2253
0x2979: nop qword ptr [rax+0x0]
0x2980: cmp [rsp+0xf],0x0
0x2985: jnz 0x3230
0x298b: test r13,r13
0x298e: jz 0x2d90
0x2994: xor edx,edx
0x2996: cmp [rsp+0x50],0x0
0x299c: jnz 0x2d90
0x29a2: mov qword ptr [rsp+0x50],r13
0x29a7: add r15,0x3
0x29ab: xor eax,eax
0x29ad: mov byte ptr [rsp+0x7c],r12b
0x29b2: xor r8d,r8d
0x29b5: mov r13,rdx
0x29b8: mov ebx,0x27
0x29bd: jmp 0x23d9
0x29c2: nop qword ptr [rax+rax*1+0x0]
0x29c8: test [rsp+0x78],0x4
0x29cd: jz 0x29f0
0x29cf: lea rcx,[rbp+0x2]
0x29d3: cmp rcx,r11
0x29d6: jnb 0x29f0
0x29d8: mov rax,qword ptr [rsp+0x10]
0x29dd: cmp [rax+rbp*1+0x1],0x3f
0x29e2: jz 0x3172
0x29e8: nop qword ptr [rax+rax*1+0x0]
0x29f0: xor edx,edx
0x29f2: xor r12d,r12d
0x29f5: xor eax,eax
0x29f7: mov ebx,0x3f
0x29fc: jmp 0x23a8
0x2a01: nop qword ptr [rax+0x0]
0x2a08: cmp [rsp+0xf],0x0
0x2a0d: jnz 0x3230
0x2a13: xor r12d,r12d
0x2a16: xor eax,eax
0x2a18: mov ebx,0x3f
0x2a1d: jmp 0x23d9
0x2a22: nop qword ptr [rax+rax*1+0x0]
0x2a28: lea rax,[rsp+0xa0]
0x2a30: cmp r11,0xffffffff
0x2a34: mov [rsp+0xa0],0x0
0x2a40: mov qword ptr [rsp+0x28],rax
0x2a45: jnz 0x2a74
0x2a47: mov rdi,qword ptr [rsp+0x10]
0x2a4c: mov byte ptr [rsp+0x40],r8b
0x2a51: mov byte ptr [rsp+0x38],r10b
0x2a56: mov qword ptr [rsp+0x30],r9
0x2a5b: call 0x1270
0x2a60: movzx r8d,byte ptr [rsp+0x40]
0x2a66: movzx r10d,byte ptr [rsp+0x38]
0x2a6c: mov r11,rax
0x2a6f: mov r9,qword ptr [rsp+0x30]
0x2a74: lea rax,[rsp+0x9c]
0x2a7c: xor ecx,ecx
0x2a7e: mov byte ptr [rsp+0x7e],bl
0x2a82: mov byte ptr [rsp+0x7d],r8b
0x2a87: mov rbx,rcx
0x2a8a: mov qword ptr [rsp+0x88],r9
0x2a92: mov qword ptr [rsp+0x38],rax
0x2a97: mov byte ptr [rsp+0x7f],r10b
0x2a9c: mov qword ptr [rsp+0x80],r15
0x2aa4: mov qword ptr [rsp+0x40],r14
0x2aa9: mov qword ptr [rsp+0x70],r13
0x2aae: mov qword ptr [rsp+0x30],r11
0x2ab3: mov rax,qword ptr [rsp+0x10]
0x2ab8: lea r14,[rbp+rbx*1+0x0]
0x2abd: mov rdx,qword ptr [rsp+0x30]
0x2ac2: mov rcx,qword ptr [rsp+0x28]
0x2ac7: mov rdi,qword ptr [rsp+0x38]
0x2acc: lea r13,[rax+r14*1+0x0]
0x2ad0: sub rdx,r14
0x2ad3: mov rsi,r13
0x2ad6: call 0x45d0
0x2adb: test rax,rax
0x2ade: mov r15,rax
0x2ae1: jz 0x2b31
0x2ae3: cmp rax,0xffffffff
0x2ae7: jz 0x3105
0x2aed: cmp rax,0xfffffffe
0x2af1: jz 0x3091
0x2af7: cmp [rsp+0x8],0x2
0x2afc: setz al
0x2aff: and al,byte ptr [rsp+0xf]
0x2b03: jnz 0x2ca0
0x2b09: mov edi,dword ptr [rsp+0x9c]
0x2b10: call 0x1430
0x2b15: mov rdi,qword ptr [rsp+0x28]
0x2b1a: test eax,eax
0x2b1c: mov eax,0x0
0x2b21: cmove r12d,eax
0x2b25: add rbx,r15
0x2b28: call 0x1420
0x2b2d: test eax,eax
0x2b2f: jz 0x2ab3
0x2b31: mov edx,r12d
0x2b34: mov rdi,rbx
0x2b37: movzx r8d,byte ptr [rsp+0x7d]
0x2b3d: xor edx,0x1
0x2b40: movzx ebx,byte ptr [rsp+0x7e]
0x2b45: movzx r10d,byte ptr [rsp+0x7f]
0x2b4b: and dl,byte ptr [rsp+0xd]
0x2b4f: mov r15,qword ptr [rsp+0x80]
0x2b57: mov r14,qword ptr [rsp+0x40]
0x2b5c: mov r13,qword ptr [rsp+0x70]
0x2b61: mov r11,qword ptr [rsp+0x30]
0x2b66: cmp rdi,0x1
0x2b6a: jbe 0x316b
0x2b70: mov rcx,rdi
0x2b73: xor esi,esi
0x2b75: movzx r9d,byte ptr [rsp+0xf]
0x2b7b: add rcx,rbp
0x2b7e: mov rdi,qword ptr [rsp+0x10]
0x2b83: jmp 0x2c3e
0x2b88: nop qword ptr [rax+rax*1+0x0]
0x2b90: cmp [rsp+0x8],0x2
0x2b95: setz al
0x2b98: test r9b,r9b
0x2b9b: jnz 0x3050
0x2ba1: mov esi,r8d
0x2ba4: xor esi,0x1
0x2ba7: and al,sil
0x2baa: jz 0x2bdb
0x2bac: cmp r13,r15
0x2baf: jbe 0x2bb6
0x2bb1: mov [r14+r15*1+0x0],0x27
0x2bb6: lea rsi,[r15+0x1]
0x2bba: cmp r13,rsi
0x2bbd: jbe 0x2bc5
0x2bbf: mov [r14+r15*1+0x1],0x24
0x2bc5: lea rsi,[r15+0x2]
0x2bc9: cmp r13,rsi
0x2bcc: jbe 0x2bd4
0x2bce: mov [r14+r15*1+0x2],0x27
0x2bd4: add r15,0x3
0x2bd8: mov r8d,eax
0x2bdb: cmp r13,r15
0x2bde: jbe 0x2be5
0x2be0: mov [r14+r15*1+0x0],0x5c
0x2be5: lea rax,[r15+0x1]
0x2be9: cmp r13,rax
0x2bec: jbe 0x2bfb
0x2bee: mov eax,ebx
0x2bf0: shr al,0x6
0x2bf3: add eax,0x30
0x2bf6: mov byte ptr [r14+r15*1+0x1],al
0x2bfb: lea rax,[r15+0x2]
0x2bff: cmp r13,rax
0x2c02: jbe 0x2c14
0x2c04: mov eax,ebx
0x2c06: shr al,0x3
0x2c09: and eax,0x7
0x2c0c: add eax,0x30
0x2c0f: mov byte ptr [r14+r15*1+0x2],al
0x2c14: and ebx,0x7
0x2c17: add rbp,0x1
0x2c1b: add r15,0x3
0x2c1f: add ebx,0x30
0x2c22: cmp rbp,rcx
0x2c25: jnb 0x2410
0x2c2b: mov esi,edx
0x2c2d: cmp r13,r15
0x2c30: jbe 0x2c36
0x2c32: mov byte ptr [r14+r15*1+0x0],bl
0x2c36: movzx ebx,byte ptr [rdi+rbp*1+0x0]
0x2c3a: add r15,0x1
0x2c3e: test dl,dl
0x2c40: jnz 0x2b90
0x2c46: mov eax,esi
0x2c48: xor eax,0x1
0x2c4b: and eax,r8d
0x2c4e: test r10b,r10b
0x2c51: jz 0x2c61
0x2c53: cmp r13,r15
0x2c56: jbe 0x2c5d
0x2c58: mov [r14+r15*1+0x0],0x5c
0x2c5d: add r15,0x1
0x2c61: add rbp,0x1
0x2c65: cmp rbp,rcx
0x2c68: jnb 0x23ec
0x2c6e: test al,al
0x2c70: jz 0x306e
0x2c76: cmp r13,r15
0x2c79: jbe 0x2c80
0x2c7b: mov [r14+r15*1+0x0],0x27
0x2c80: lea rax,[r15+0x1]
0x2c84: cmp r13,rax
0x2c87: jbe 0x2c8f
0x2c89: mov [r14+r15*1+0x1],0x27
0x2c8f: add r15,0x2
0x2c93: xor r10d,r10d
0x2c96: xor r8d,r8d
0x2c99: jmp 0x2c2d
0x2c9b: nop qword ptr [rax+rax*1+0x0]
0x2ca0: cmp r15,0x1
0x2ca4: jz 0x2b09
0x2caa: mov rdi,qword ptr [rsp+0x10]
0x2caf: lea rcx,[rdi+r15*1+0x0]
0x2cb3: lea rdx,[rdi+r14*1+0x1]
0x2cb8: lea r8,[rcx+r14*1+0x0]
0x2cbc: jmp 0x2ccd
0x2cbe: nop 
0x2cc0: add rdx,0x1
0x2cc4: cmp r8,rdx
0x2cc7: jz 0x2b09
0x2ccd: movzx ecx,byte ptr [rdx]
0x2cd0: sub ecx,0x5b
0x2cd3: cmp cl,0x21
0x2cd6: jnbe 0x2cc0
0x2cd8: mov esi,0x1
0x2cdd: shl rsi,cl
0x2ce0: mov rcx,rsi
0x2ce3: mov rsi,0x8589934635
0x2ced: test rcx,rsi
0x2cf0: jz 0x2cc0
0x2cf2: mov r14,qword ptr [rsp+0x40]
0x2cf7: mov r13,qword ptr [rsp+0x70]
0x2cfc: mov rbp,qword ptr [rsp+0x30]
0x2d01: mov [rsp+0x8],0x2
0x2d09: cmp [rsp+0xd],0x0
0x2d0e: jz 0x2d20
0x2d10: test al,al
0x2d12: mov eax,0x4
0x2d17: cmove eax,dword ptr [rsp+0x8]
0x2d1c: mov dword ptr [rsp+0x8],eax
0x2d20: sub rsp,0x8
0x2d24: mov rcx,rbp
0x2d27: mov rsi,r13
0x2d2a: push qword ptr [rsp+0x68]
0x2d2e: push qword ptr [rsp+0x78]
0x2d32: mov rdi,r14
0x2d35: push 0x0
0x2d37: mov r9d,dword ptr [rsp+0x98]
0x2d3f: mov r8d,dword ptr [rsp+0x28]
0x2d44: mov rdx,qword ptr [rsp+0x30]
0x2d49: and r9d,0xfd
0x2d4d: call 0x2180
0x2d52: add rsp,0x20
0x2d56: mov r15,rax
0x2d59: mov rbx,qword ptr [rsp+0xa8]
0x2d61: xor rbx,0x28
0x2d6a: mov rax,r15
0x2d6d: jnz 0x3373
0x2d73: add rsp,0xb8
0x2d7a: pop rbx
0x2d7b: pop rbp
0x2d7c: pop r12
0x2d7e: pop r13
0x2d80: pop r14
0x2d82: pop r15
0x2d84: ret
0x2d85: nop qword ptr [rax]
0x2d88: mov rbp,r11
0x2d8b: jmp 0x2d09
0x2d90: cmp r13,r15
0x2d93: jbe 0x2d9a
0x2d95: mov [r14+r15*1+0x0],0x27
0x2d9a: lea rax,[r15+0x1]
0x2d9e: cmp r13,rax
0x2da1: jbe 0x2da9
0x2da3: mov [r14+r15*1+0x1],0x5c
0x2da9: lea rax,[r15+0x2]
0x2dad: cmp r13,rax
0x2db0: jbe 0x33a2
0x2db6: mov rdx,r13
0x2db9: mov [r14+r15*1+0x2],0x27
0x2dbf: mov r13,qword ptr [rsp+0x50]
0x2dc4: jmp 0x29a2
0x2dc9: mov eax,r12d
0x2dcc: mov ebx,0x30
0x2dd1: xor r12d,r12d
0x2dd4: jmp 0x23d9
0x2dd9: mov [r14+r15*1+0x2],0x27
0x2ddf: jmp 0x27a9
0x2de4: test ebx,ebx
0x2de6: jnz 0x2213
0x2dec: mov [rsp+0xd],0x1
0x2df1: test r13,r13
0x2df4: jnz 0x338a
0x2dfa: lea rax,[rip+0x2334]
0x2e01: mov [rsp+0x50],0x0
0x2e0a: mov [rsp+0xe],0x1
0x2e0f: mov [rsp+0x7c],0x0
0x2e14: xor r12d,r12d
0x2e17: mov [rsp+0xf],0x0
0x2e1c: mov [rsp+0x18],0x1
0x2e25: mov qword ptr [rsp+0x48],rax
0x2e2a: mov r15d,0x1
0x2e30: mov [rsp+0x8],0x2
0x2e38: jmp 0x2253
0x2e3d: nop qword ptr [rax]
0x2e40: test ebx,ebx
0x2e42: jnz 0x323d
0x2e48: test r13,r13
0x2e4b: jz 0x3076
0x2e51: mov [r14],0x22
0x2e55: mov [rsp+0xe],0x1
0x2e5a: xor r12d,r12d
0x2e5d: mov [rsp+0x7c],0x0
0x2e62: mov [rsp+0x50],0x0
0x2e6b: lea rax,[rip+0x22c1]
0x2e72: mov [rsp+0xf],0x0
0x2e77: mov [rsp+0xd],0x1
0x2e7c: mov [rsp+0x18],0x1
0x2e85: mov r15d,0x1
0x2e8b: mov qword ptr [rsp+0x48],rax
0x2e90: jmp 0x2253
0x2e95: lea rax,[rip+0x2297]
0x2e9c: mov [rsp+0xe],0x1
0x2ea1: mov [rsp+0x7c],0x0
0x2ea6: xor r12d,r12d
0x2ea9: mov [rsp+0x50],0x0
0x2eb2: mov [rsp+0xf],0x1
0x2eb7: mov [rsp+0xd],0x1
0x2ebc: mov [rsp+0x18],0x1
0x2ec5: xor r15d,r15d
0x2ec8: mov qword ptr [rsp+0x48],rax
0x2ecd: mov [rsp+0x8],0x5
0x2ed5: jmp 0x2253
0x2eda: mov [rsp+0xe],0x1
0x2edf: mov [rsp+0x7c],0x0
0x2ee4: xor r12d,r12d
0x2ee7: mov [rsp+0x50],0x0
0x2ef0: mov [rsp+0xf],0x0
0x2ef5: xor r15d,r15d
0x2ef8: mov [rsp+0xd],0x1
0x2efd: mov [rsp+0x18],0x0
0x2f06: mov [rsp+0x48],0x0
0x2f0f: jmp 0x2253
0x2f14: cmp [rsp+0x8],0xa
0x2f19: jz 0x2f71
0x2f1b: lea rsi,[rip+0x2215]
0x2f22: xor edi,edi
0x2f24: mov edx,0x5
0x2f29: call 0x1250
0x2f2e: mov rcx,rax
0x2f31: mov qword ptr [rsp+0x68],rax
0x2f36: lea rax,[rip+0x21fa]
0x2f3d: cmp rcx,rax
0x2f40: jz 0x32de
0x2f46: lea rsi,[rip+0x21e8]
0x2f4d: xor edi,edi
0x2f4f: mov edx,0x5
0x2f54: call 0x1250
0x2f59: mov rcx,rax
0x2f5c: mov qword ptr [rsp+0x60],rax
0x2f61: lea rax,[rip+0x21cd]
0x2f68: cmp rcx,rax
0x2f6b: jz 0x32f4
0x2f71: xor r15d,r15d
0x2f74: test ebx,ebx
0x2f76: jz 0x313d
0x2f7c: test ebx,ebx
0x2f7e: mov rbx,qword ptr [rsp+0x60]
0x2f83: setnz qword ptr [rsp+0xf]
0x2f88: xor r12d,r12d
0x2f8b: mov rdi,rbx
0x2f8e: call 0x1270
0x2f93: mov qword ptr [rsp+0x48],rbx
0x2f98: mov qword ptr [rsp+0x18],rax
0x2f9d: mov [rsp+0xe],0x1
0x2fa2: mov [rsp+0x7c],0x0
0x2fa7: mov [rsp+0x50],0x0
0x2fb0: mov [rsp+0xd],0x1
0x2fb5: jmp 0x2253
0x2fba: mov [rsp+0xe],0x1
0x2fbf: mov [rsp+0x7c],0x0
0x2fc4: xor r12d,r12d
0x2fc7: mov [rsp+0x50],0x0
0x2fd0: mov [rsp+0xf],0x0
0x2fd5: xor r15d,r15d
0x2fd8: mov [rsp+0xd],0x0
0x2fdd: mov [rsp+0x18],0x0
0x2fe6: mov [rsp+0x48],0x0
0x2fef: jmp 0x2253
0x2ff4: mov [rsp+0xe],0x1
0x2ff9: mov [rsp+0x7c],0x0
0x2ffe: xor r12d,r12d
0x3001: mov [rsp+0x50],0x0
0x300a: mov [rsp+0xf],0x1
0x300f: mov [rsp+0xd],0x1
0x3014: jmp 0x2233
0x3019: cmp r13,r15
0x301c: jbe 0x3023
0x301e: mov [r14+r15*1+0x0],0x30
0x3023: lea rax,[rcx+0x2]
0x3027: cmp r13,rax
0x302a: jbe 0x3032
0x302c: mov [r14+rcx*1+0x2],0x30
0x3032: mov eax,r12d
0x3035: lea r15,[rcx+0x3]
0x3039: xor r12d,r12d
0x303c: mov ebx,0x30
0x3041: jmp 0x23a8
0x3046: nop qword ptr [rax+rax*1+0x0]
0x3050: movzx ebx,byte ptr [rsp+0xf]
0x3055: mov rbp,r11
0x3058: mov byte ptr [rsp+0xd],bl
0x305c: jmp 0x2d09
0x3061: movzx edx,byte ptr [rsp+0xd]
0x3066: xor r12d,r12d
0x3069: jmp 0x2b70
0x306e: xor r10d,r10d
0x3071: jmp 0x2c2d
0x3076: mov [rsp+0x50],0x0
0x307f: mov [rsp+0xe],0x1
0x3084: xor r12d,r12d
0x3087: mov [rsp+0x7c],0x0
0x308c: jmp 0x2e6b
0x3091: mov r11,qword ptr [rsp+0x30]
0x3096: mov rsi,r14
0x3099: mov rcx,r13
0x309c: mov rax,rbx
0x309f: mov rdi,rbx
0x30a2: movzx r8d,byte ptr [rsp+0x7d]
0x30a8: movzx ebx,byte ptr [rsp+0x7e]
0x30ad: mov r9,qword ptr [rsp+0x88]
0x30b5: cmp rsi,r11
0x30b8: movzx r10d,byte ptr [rsp+0x7f]
0x30be: mov r15,qword ptr [rsp+0x80]
0x30c6: mov r14,qword ptr [rsp+0x40]
0x30cb: mov r13,qword ptr [rsp+0x70]
0x30d0: jnb 0x30f8
0x30d2: cmp [rcx],0x0
0x30d5: jnz 0x30e7
0x30d7: jmp 0x30f8
0x30d9: nop qword ptr [rax+0x0]
0x30e0: cmp [r9+rax*1+0x0],0x0
0x30e5: jz 0x30f5
0x30e7: add rax,0x1
0x30eb: lea rdx,[rbp+rax*1+0x0]
0x30f0: cmp r11,rdx
0x30f3: jnbe 0x30e0
0x30f5: mov rdi,rax
0x30f8: movzx edx,byte ptr [rsp+0xd]
0x30fd: xor r12d,r12d
0x3100: jmp 0x2b66
0x3105: mov rdi,rbx
0x3108: movzx r8d,byte ptr [rsp+0x7d]
0x310e: movzx ebx,byte ptr [rsp+0x7e]
0x3113: movzx r10d,byte ptr [rsp+0x7f]
0x3119: mov r15,qword ptr [rsp+0x80]
0x3121: xor r12d,r12d
0x3124: mov r14,qword ptr [rsp+0x40]
0x3129: mov r13,qword ptr [rsp+0x70]
0x312e: mov r11,qword ptr [rsp+0x30]
0x3133: movzx edx,byte ptr [rsp+0xd]
0x3138: jmp 0x2b66
0x313d: mov rdx,qword ptr [rsp+0x68]
0x3142: movzx eax,byte ptr [rdx]
0x3145: test al,al
0x3147: jz 0x2f7c
0x314d: nop qword ptr [rax]
0x3150: cmp r13,r15
0x3153: jbe 0x3159
0x3155: mov byte ptr [r14+r15*1+0x0],al
0x3159: add r15,0x1
0x315d: movzx eax,byte ptr [rdx+r15*1+0x0]
0x3162: test al,al
0x3164: jnz 0x3150
0x3166: jmp 0x2f7c
0x316b: mov eax,edx
0x316d: jmp 0x26c7
0x3172: movzx ebx,byte ptr [rax+rcx*1+0x0]
0x3176: cmp bl,0x3e
0x3179: jnbe 0x29f0
0x317f: mov rax,0x8070630310989004800
0x3189: bt rax,rbx
0x318d: jnb 0x29f0
0x3193: cmp [rsp+0xf],0x0
0x3198: jnz 0x3382
0x319e: cmp r13,r15
0x31a1: jbe 0x31a8
0x31a3: mov [r14+r15*1+0x0],0x3f
0x31a8: lea rax,[r15+0x1]
0x31ac: cmp r13,rax
0x31af: jbe 0x31b7
0x31b1: mov [r14+r15*1+0x1],0x22
0x31b7: lea rax,[r15+0x2]
0x31bb: cmp r13,rax
0x31be: jbe 0x31c6
0x31c0: mov [r14+r15*1+0x2],0x22
0x31c6: lea rax,[r15+0x3]
0x31ca: cmp r13,rax
0x31cd: jbe 0x31d5
0x31cf: mov [r14+r15*1+0x3],0x3f
0x31d5: add r15,0x4
0x31d9: xor edx,edx
0x31db: xor r12d,r12d
0x31de: xor eax,eax
0x31e0: mov rbp,rcx
0x31e3: jmp 0x23a8
0x31e8: test ebx,ebx
0x31ea: jz 0x3378
0x31f0: lea rax,[rip+0x1f3e]
0x31f7: mov [rsp+0xe],0x1
0x31fc: mov [rsp+0x7c],0x0
0x3201: xor r12d,r12d
0x3204: mov [rsp+0x50],0x0
0x320d: mov [rsp+0xf],0x1
0x3212: mov [rsp+0xd],0x0
0x3217: mov [rsp+0x18],0x1
0x3220: xor r15d,r15d
0x3223: mov qword ptr [rsp+0x48],rax
0x3228: jmp 0x2253
0x322d: nop qword ptr [rax]
0x3230: mov rbp,r11
0x3233: movzx eax,byte ptr [rsp+0xf]
0x3238: jmp 0x2d09
0x323d: lea rax,[rip+0x1eef]
0x3244: mov [rsp+0xe],0x1
0x3249: mov [rsp+0x7c],0x0
0x324e: xor r12d,r12d
0x3251: mov [rsp+0x50],0x0
0x325a: mov [rsp+0xf],0x1
0x325f: mov [rsp+0xd],0x1
0x3264: mov [rsp+0x18],0x1
0x326d: xor r15d,r15d
0x3270: mov qword ptr [rsp+0x48],rax
0x3275: jmp 0x2253
0x327a: mov eax,edx
0x327c: mov rbx,qword ptr [rsp+0x48]
0x3281: test rbx,rbx
0x3284: jz 0x32b2
0x3286: test al,al
0x3288: jz 0x32b2
0x328a: movzx ecx,byte ptr [rbx]
0x328d: mov rax,rbx
0x3290: test cl,cl
0x3292: jz 0x32b2
0x3294: mov rdx,r15
0x3297: sub rax,r15
0x329a: cmp r13,rdx
0x329d: jbe 0x32a3
0x329f: mov byte ptr [r14+rdx*1+0x0],cl
0x32a3: add rdx,0x1
0x32a7: movzx ecx,byte ptr [rax+rdx*1+0x0]
0x32ab: test cl,cl
0x32ad: jnz 0x329a
0x32af: mov r15,rdx
0x32b2: cmp r13,r15
0x32b5: jbe 0x2d59
0x32bb: mov [r14+r15*1+0x0],0x0
0x32c0: jmp 0x2d59
0x32c5: cmp [rsp+0x8],0x2
0x32ca: movzx ebx,byte ptr [rsp+0xf]
0x32cf: mov rbp,r11
0x32d2: setz al
0x32d5: mov byte ptr [rsp+0xd],bl
0x32d9: jmp 0x2d09
0x32de: mov esi,dword ptr [rsp+0x8]
0x32e2: mov rdi,rcx
0x32e5: call 0x2090
0x32ea: mov qword ptr [rsp+0x68],rax
0x32ef: jmp 0x2f46
0x32f4: mov esi,dword ptr [rsp+0x8]
0x32f8: mov rdi,rcx
0x32fb: call 0x2090
0x3300: mov qword ptr [rsp+0x60],rax
0x3305: jmp 0x2f71
0x330a: movzx ebx,byte ptr [rsp+0xf]
0x330f: mov rbp,r11
0x3312: mov eax,edx
0x3314: mov byte ptr [rsp+0xd],bl
0x3318: jmp 0x2d09
0x331d: sub rsp,0x8
0x3321: mov r8d,0x5
0x3327: mov rcx,r11
0x332a: push qword ptr [rsp+0x68]
0x332e: push qword ptr [rsp+0x78]
0x3332: mov rdi,r14
0x3335: push qword ptr [rsp+0x38]
0x3339: mov r9d,dword ptr [rsp+0x98]
0x3341: mov rdx,qword ptr [rsp+0x30]
0x3346: mov rsi,qword ptr [rsp+0x70]
0x334b: call 0x2180
0x3350: add rsp,0x20
0x3354: mov r15,rax
0x3357: jmp 0x2d59
0x335c: movzx eax,byte ptr [rsp+0x7c]
0x3361: jmp 0x327c
0x3366: mov [rsp+0x8],0x2
0x336e: jmp 0x2d09
0x3373: call 0x1280
0x3378: mov [rsp+0xd],0x0
0x337d: jmp 0x2df1
0x3382: mov rbp,r11
0x3385: jmp 0x2d20
0x338a: mov [rsp+0xe],0x1
0x338f: xor eax,eax
0x3391: xor r12d,r12d
0x3394: mov [rsp+0x50],0x0
0x339d: jmp 0x2944
0x33a2: mov rdx,r13
0x33a5: mov r13,qword ptr [rsp+0x50]
0x33aa: jmp 0x29a2
0x33af: call 0x11d0
0x33c0: push r15
0x33c2: push r14
0x33c4: movsxd r15,edi
0x33c7: push r13
0x33c9: push r12
0x33cb: mov r14,rdx
0x33ce: push rbp
0x33cf: push rbx
0x33d0: mov rbp,rcx
0x33d3: sub rsp,0x28
0x33d7: mov qword ptr [rsp+0x8],rsi
0x33dc: call 0x11e0
0x33e1: mov r13,rax
0x33e4: mov eax,dword ptr [rax]
0x33e6: test r15d,r15d
0x33e9: mov rbx,qword ptr [rip+0x203c70]
0x33f0: mov dword ptr [rsp+0x18],eax
0x33f4: js 0x3561
0x33fa: cmp dword ptr [rip+0x203c57],r15d
0x3401: jnle 0x3465
0x3403: cmp r15d,0x7fffffff
0x340a: jz 0x3566
0x3410: lea r12d,[r15+0x1]
0x3414: lea rax,[rip+0x203c55]
0x341b: movsxd rsi,r12d
0x341e: shl rsi,0x4
0x3422: cmp rbx,rax
0x3425: jz 0x3540
0x342b: mov rdi,rbx
0x342e: call 0x43a0
0x3433: mov rbx,rax
0x3436: mov qword ptr [rip+0x203c23],rax
0x343d: movsxd rdi,dword ptr [rip+0x203c14]
0x3444: mov edx,r12d
0x3447: xor esi,esi
0x3449: sub edx,edi
0x344b: shl rdi,0x4
0x344f: movsxd rdx,edx
0x3452: add rdi,rbx
0x3455: shl rdx,0x4
0x3459: call 0x12e0
0x345e: mov dword ptr [rip+0x203bf3],r12d
0x3465: mov eax,dword ptr [rbp+0x4]
0x3468: shl r15,0x4
0x346c: sub rsp,0x8
0x3470: add rbx,r15
0x3473: lea r15,[rbp+0x8]
0x3477: mov r8d,dword ptr [rbp+0x0]
0x347b: mov r11,qword ptr [rbx]
0x347e: mov r12,qword ptr [rbx+0x8]
0x3482: mov rcx,r14
0x3485: or eax,0x1
0x3488: mov dword ptr [rsp+0x24],eax
0x348c: push qword ptr [rbp+0x30]
0x348f: mov r9d,eax
0x3492: push qword ptr [rbp+0x28]
0x3495: push r15
0x3497: mov rsi,r11
0x349a: mov rdx,qword ptr [rsp+0x28]
0x349f: mov rdi,r12
0x34a2: mov qword ptr [rsp+0x30],r11
0x34a7: call 0x2180
0x34ac: add rsp,0x20
0x34b0: mov r11,qword ptr [rsp+0x10]
0x34b5: cmp r11,rax
0x34b8: jnbe 0x3521
0x34ba: lea rsi,[rax+0x1]
0x34be: lea rax,[rip+0x203c1b]
0x34c5: cmp r12,rax
0x34c8: mov qword ptr [rbx],rsi
0x34cb: jz 0x34df
0x34cd: mov rdi,r12
0x34d0: mov qword ptr [rsp+0x10],rsi
0x34d5: call 0x11c0
0x34da: mov rsi,qword ptr [rsp+0x10]
0x34df: mov rdi,rsi
0x34e2: mov qword ptr [rsp+0x10],rsi
0x34e7: call 0x4340
0x34ec: sub rsp,0x8
0x34f0: mov qword ptr [rbx+0x8],rax
0x34f4: mov r8d,dword ptr [rbp+0x0]
0x34f8: push qword ptr [rbp+0x30]
0x34fb: push qword ptr [rbp+0x28]
0x34fe: mov rcx,r14
0x3501: push r15
0x3503: mov r9d,dword ptr [rsp+0x3c]
0x3508: mov rdi,rax
0x350b: mov rdx,qword ptr [rsp+0x28]
0x3510: mov rsi,qword ptr [rsp+0x30]
0x3515: mov r12,rax
0x3518: call 0x2180
0x351d: add rsp,0x20
0x3521: mov eax,dword ptr [rsp+0x18]
0x3525: mov dword ptr [r13+0x0],eax
0x3529: add rsp,0x28
0x352d: mov rax,r12
0x3530: pop rbx
0x3531: pop rbp
0x3532: pop r12
0x3534: pop r13
0x3536: pop r14
0x3538: pop r15
0x353a: ret
0x353b: nop qword ptr [rax+rax*1+0x0]
0x3540: xor edi,edi
0x3542: call 0x43a0
0x3547: movdqa xmm0,[rip+0x203b21]
0x354f: mov rbx,rax
0x3552: mov qword ptr [rip+0x203b07],rax
0x3559: movups [rax],xmm0
0x355c: jmp 0x343d
0x3561: call 0x11d0
0x3566: call 0x4590
0x3570: push r12
0x3572: push rbp
0x3573: push rbx
0x3574: mov rbx,rdi
0x3577: call 0x11e0
0x357c: mov r12d,dword ptr [rax]
0x357f: mov rbp,rax
0x3582: lea rax,[rip+0x203c57]
0x3589: test rbx,rbx
0x358c: mov esi,0x38
0x3591: cmove rbx,rax
0x3595: mov rdi,rbx
0x3598: call 0x4540
0x359d: mov dword ptr [rbp+0x0],r12d
0x35a1: pop rbx
0x35a2: pop rbp
0x35a3: pop r12
0x35a5: ret
0x35b0: lea rax,[rip+0x203c29]
0x35b7: test rdi,rdi
0x35ba: cmove rdi,rax
0x35be: mov eax,dword ptr [rdi]
0x35c0: ret
0x35d0: lea rax,[rip+0x203c09]
0x35d7: test rdi,rdi
0x35da: cmove rdi,rax
0x35de: mov dword ptr [rdi],esi
0x35e0: ret
0x35f0: lea rax,[rip+0x203be9]
0x35f7: test rdi,rdi
0x35fa: mov ecx,esi
0x35fc: cmove rdi,rax
0x3600: mov eax,esi
0x3602: and ecx,0x1f
0x3605: shr al,0x5
0x3608: movzx eax,al
0x360b: lea rdi,[rdi+rax*4+0x8]
0x3610: mov esi,dword ptr [rdi]
0x3612: mov eax,esi
0x3614: shr eax,cl
0x3616: xor edx,eax
0x3618: and eax,0x1
0x361b: and edx,0x1
0x361e: shl edx,cl
0x3620: xor edx,esi
0x3622: mov dword ptr [rdi],edx
0x3624: ret
0x3630: lea rax,[rip+0x203ba9]
0x3637: test rdi,rdi
0x363a: cmove rdi,rax
0x363e: mov eax,dword ptr [rdi+0x4]
0x3641: mov dword ptr [rdi+0x4],esi
0x3644: ret
0x3650: lea rax,[rip+0x203b89]
0x3657: test rdi,rdi
0x365a: cmove rdi,rax
0x365e: test rsi,rsi
0x3661: mov [rdi],0xa
0x3667: jz 0x3677
0x3669: test rdx,rdx
0x366c: jz 0x3677
0x366e: mov qword ptr [rdi+0x28],rsi
0x3672: mov qword ptr [rdi+0x30],rdx
0x3676: ret
0x3677: sub rsp,0x8
0x367b: call 0x11d0
0x3680: push r15
0x3682: push r14
0x3684: lea rax,[rip+0x203b55]
0x368b: push r13
0x368d: push r12
0x368f: mov r13,rdi
0x3692: push rbp
0x3693: push rbx
0x3694: mov rbx,r8
0x3697: mov r14,rsi
0x369a: mov r15,rdx
0x369d: sub rsp,0x18
0x36a1: test r8,r8
0x36a4: cmove rbx,rax
0x36a8: mov qword ptr [rsp+0x8],rcx
0x36ad: call 0x11e0
0x36b2: mov r12d,dword ptr [rax]
0x36b5: mov rbp,rax
0x36b8: lea rax,[rbx+0x8]
0x36bc: sub rsp,0x8
0x36c0: mov r9d,dword ptr [rbx+0x4]
0x36c4: push qword ptr [rbx+0x30]
0x36c7: mov r8d,dword ptr [rbx]
0x36ca: push qword ptr [rbx+0x28]
0x36cd: mov rdx,r15
0x36d0: push rax
0x36d1: mov rcx,qword ptr [rsp+0x28]
0x36d6: mov rsi,r14
0x36d9: mov rdi,r13
0x36dc: call 0x2180
0x36e1: mov dword ptr [rbp+0x0],r12d
0x36e5: add rsp,0x38
0x36e9: pop rbx
0x36ea: pop rbp
0x36eb: pop r12
0x36ed: pop r13
0x36ef: pop r14
0x36f1: pop r15
0x36f3: ret
0x3700: push r15
0x3702: push r14
0x3704: lea rax,[rip+0x203ad5]
0x370b: push r13
0x370d: push r12
0x370f: mov r12,rdx
0x3712: push rbp
0x3713: push rbx
0x3714: mov rbx,rcx
0x3717: mov r14,rdi
0x371a: mov r15,rsi
0x371d: sub rsp,0x38
0x3721: test rcx,rcx
0x3724: cmove rbx,rax
0x3728: xor ebp,ebp
0x372a: call 0x11e0
0x372f: test r12,r12
0x3732: mov r13,rax
0x3735: mov eax,dword ptr [rax]
0x3737: setz bpl
0x373b: or ebp,dword ptr [rbx+0x4]
0x373e: lea r10,[rbx+0x8]
0x3742: sub rsp,0x8
0x3746: mov r8d,dword ptr [rbx]
0x3749: mov rcx,r15
0x374c: mov dword ptr [rsp+0x14],eax
0x3750: push qword ptr [rbx+0x30]
0x3753: mov rdx,r14
0x3756: push qword ptr [rbx+0x28]
0x3759: push r10
0x375b: xor esi,esi
0x375d: mov r9d,ebp
0x3760: xor edi,edi
0x3762: mov qword ptr [rsp+0x40],r10
0x3767: call 0x2180
0x376c: lea rsi,[rax+0x1]
0x3770: mov qword ptr [rsp+0x48],rax
0x3775: add rsp,0x20
0x3779: mov rdi,rsi
0x377c: mov qword ptr [rsp+0x18],rsi
0x3781: call 0x4340
0x3786: mov qword ptr [rsp+0x10],rax
0x378b: sub rsp,0x8
0x378f: push qword ptr [rbx+0x30]
0x3792: push qword ptr [rbx+0x28]
0x3795: mov r10,qword ptr [rsp+0x38]
0x379a: mov r9d,ebp
0x379d: mov r8d,dword ptr [rbx]
0x37a0: mov rcx,r15
0x37a3: mov rdx,r14
0x37a6: mov rdi,rax
0x37a9: push r10
0x37ab: mov rsi,qword ptr [rsp+0x38]
0x37b0: call 0x2180
0x37b5: mov eax,dword ptr [rsp+0x2c]
0x37b9: add rsp,0x20
0x37bd: test r12,r12
0x37c0: mov dword ptr [r13+0x0],eax
0x37c4: jz 0x37cf
0x37c6: mov r11,qword ptr [rsp+0x28]
0x37cb: mov qword ptr [r12],r11
0x37cf: mov rax,qword ptr [rsp+0x10]
0x37d4: add rsp,0x38
0x37d8: pop rbx
0x37d9: pop rbp
0x37da: pop r12
0x37dc: pop r13
0x37de: pop r14
0x37e0: pop r15
0x37e2: ret
0x37f0: mov rcx,rdx
0x37f3: xor edx,edx
0x37f5: jmp 0x3700
0x3800: mov eax,dword ptr [rip+0x203852]
0x3806: push r12
0x3808: mov r12,qword ptr [rip+0x203851]
0x380f: push rbp
0x3810: push rbx
0x3811: cmp eax,0x1
0x3814: jle 0x3841
0x3816: sub eax,0x2
0x3819: lea rbx,[r12+0x18]
0x381e: shl rax,0x4
0x3822: lea rbp,[r12+rax*1+0x28]
0x3827: nop qword ptr [rax+rax*1+0x0]
0x3830: mov rdi,qword ptr [rbx]
0x3833: add rbx,0x10
0x3837: call 0x11c0
0x383c: cmp rbx,rbp
0x383f: jnz 0x3830
0x3841: mov rdi,qword ptr [r12+0x8]
0x3846: lea rbx,[rip+0x203893]
0x384d: cmp rdi,rbx
0x3850: jz 0x3869
0x3852: call 0x11c0
0x3857: mov [rip+0x20380e],0x100
0x3862: mov qword ptr [rip+0x20380f],rbx
0x3869: lea rbx,[rip+0x203800]
0x3870: cmp r12,rbx
0x3873: jz 0x3884
0x3875: mov rdi,r12
0x3878: call 0x11c0
0x387d: mov qword ptr [rip+0x2037dc],rbx
0x3884: pop rbx
0x3885: mov [rip+0x2037c9],0x1
0x388f: pop rbp
0x3890: pop r12
0x3892: ret
0x38a0: lea rcx,[rip+0x203939]
0x38a7: mov rdx,0xffffffff
0x38ae: jmp 0x33c0
0x38c0: lea rcx,[rip+0x203919]
0x38c7: jmp 0x33c0
0x38d0: lea rcx,[rip+0x203909]
0x38d7: mov rsi,rdi
0x38da: mov rdx,0xffffffff
0x38e1: xor edi,edi
0x38e3: jmp 0x33c0
0x38f0: lea rcx,[rip+0x2038e9]
0x38f7: mov rdx,rsi
0x38fa: mov rsi,rdi
0x38fd: xor edi,edi
0x38ff: jmp 0x33c0
0x3910: sub rsp,0x48
0x3914: mov rax,rdx
0x3917: mov rdx,0x28
0x3920: mov qword ptr [rsp+0x38],rdx
0x3925: xor edx,edx
0x3927: cmp esi,0xa
0x392a: jz 0x3994
0x392c: mov dword ptr [rsp],esi
0x392f: mov rcx,rsp
0x3932: mov rdx,0xffffffff
0x3939: mov rsi,rax
0x393c: mov [rsp+0x4],0x0
0x3945: mov [rsp+0xc],0x0
0x394e: mov [rsp+0x14],0x0
0x3957: mov [rsp+0x1c],0x0
0x3960: mov [rsp+0x24],0x0
0x3969: mov [rsp+0x2c],0x0
0x3972: mov [rsp+0x34],0x0
0x397a: call 0x33c0
0x397f: mov rcx,qword ptr [rsp+0x38]
0x3984: xor rcx,0x28
0x398d: jnz 0x3999
0x398f: add rsp,0x48
0x3993: ret
0x3994: call 0x11d0
0x3999: call 0x1280
0x39a0: sub rsp,0x48
0x39a4: mov rax,rdx
0x39a7: mov rdx,rcx
0x39aa: mov rcx,0x28
0x39b3: mov qword ptr [rsp+0x38],rcx
0x39b8: xor ecx,ecx
0x39ba: cmp esi,0xa
0x39bd: jz 0x3a20
0x39bf: mov dword ptr [rsp],esi
0x39c2: mov rcx,rsp
0x39c5: mov rsi,rax
0x39c8: mov [rsp+0x4],0x0
0x39d1: mov [rsp+0xc],0x0
0x39da: mov [rsp+0x14],0x0
0x39e3: mov [rsp+0x1c],0x0
0x39ec: mov [rsp+0x24],0x0
0x39f5: mov [rsp+0x2c],0x0
0x39fe: mov [rsp+0x34],0x0
0x3a06: call 0x33c0
0x3a0b: mov rdx,qword ptr [rsp+0x38]
0x3a10: xor rdx,0x28
0x3a19: jnz 0x3a25
0x3a1b: add rsp,0x48
0x3a1f: ret
0x3a20: call 0x11d0
0x3a25: call 0x1280
0x3a30: mov rdx,rsi
0x3a33: mov esi,edi
0x3a35: xor edi,edi
0x3a37: jmp 0x3910
0x3a40: mov rcx,rdx
0x3a43: mov rdx,rsi
0x3a46: mov esi,edi
0x3a48: xor edi,edi
0x3a4a: jmp 0x39a0
0x3a50: sub rsp,0x48
0x3a54: mov ecx,edx
0x3a56: mov rax,0x28
0x3a5f: mov qword ptr [rsp+0x38],rax
0x3a64: xor eax,eax
0x3a66: mov rax,qword ptr [rip+0x2037a3]
0x3a6d: mov r8,rsp
0x3a70: and ecx,0x1f
0x3a73: movdqa xmm0,[rip+0x203765]
0x3a7b: mov qword ptr [rsp+0x30],rax
0x3a80: mov eax,edx
0x3a82: movaps [rsp],xmm0
0x3a86: shr al,0x5
0x3a89: movzx eax,al
0x3a8c: lea r9,[r8+rax*4+0x8]
0x3a91: movdqa xmm0,[rip+0x203757]
0x3a99: movaps [rsp+0x10],xmm0
0x3a9e: movdqa xmm0,[rip+0x20375a]
0x3aa6: movaps [rsp+0x20],xmm0
0x3aab: mov edx,dword ptr [r9]
0x3aae: mov eax,edx
0x3ab0: shr eax,cl
0x3ab2: not eax
0x3ab4: and eax,0x1
0x3ab7: shl eax,cl
0x3ab9: mov rcx,r8
0x3abc: xor eax,edx
0x3abe: mov rdx,rsi
0x3ac1: mov rsi,rdi
0x3ac4: mov dword ptr [r9],eax
0x3ac7: xor edi,edi
0x3ac9: call 0x33c0
0x3ace: mov rsi,qword ptr [rsp+0x38]
0x3ad3: xor rsi,0x28
0x3adc: jnz 0x3ae3
0x3ade: add rsp,0x48
0x3ae2: ret
0x3ae3: call 0x1280
0x3af0: movsx edx,sil
0x3af4: mov rsi,0xffffffff
0x3afb: jmp 0x3a50
0x3b00: mov edx,0x3a
0x3b05: mov rsi,0xffffffff
0x3b0c: jmp 0x3a50
0x3b20: mov edx,0x3a
0x3b25: jmp 0x3a50
0x3b30: sub rsp,0x48
0x3b34: mov rax,rdx
0x3b37: mov rdx,0x28
0x3b40: mov qword ptr [rsp+0x38],rdx
0x3b45: xor edx,edx
0x3b47: cmp esi,0xa
0x3b4a: jz 0x3bb4
0x3b4c: mov dword ptr [rsp],esi
0x3b4f: mov rcx,rsp
0x3b52: mov rdx,0xffffffff
0x3b59: mov rsi,rax
0x3b5c: mov [rsp+0x4],0x0
0x3b65: mov [rsp+0xc],0x4000000
0x3b6e: mov [rsp+0x14],0x0
0x3b77: mov [rsp+0x1c],0x0
0x3b80: mov [rsp+0x24],0x0
0x3b89: mov [rsp+0x2c],0x0
0x3b92: mov [rsp+0x34],0x0
0x3b9a: call 0x33c0
0x3b9f: mov rcx,qword ptr [rsp+0x38]
0x3ba4: xor rcx,0x28
0x3bad: jnz 0x3bb9
0x3baf: add rsp,0x48
0x3bb3: ret
0x3bb4: call 0x11d0
0x3bb9: call 0x1280
0x3bc0: sub rsp,0x48
0x3bc4: mov r9,rcx
0x3bc7: mov rcx,qword ptr [rip+0x203642]
0x3bce: movdqa xmm0,[rip+0x20360a]
0x3bd6: mov rax,0x28
0x3bdf: mov qword ptr [rsp+0x38],rax
0x3be4: xor eax,eax
0x3be6: movaps [rsp],xmm0
0x3bea: test rsi,rsi
0x3bed: mov qword ptr [rsp+0x30],rcx
0x3bf2: mov [rsp],0xa
0x3bf9: movdqa xmm0,[rip+0x2035ef]
0x3c01: movaps [rsp+0x10],xmm0
0x3c06: movdqa xmm0,[rip+0x2035f2]
0x3c0e: movaps [rsp+0x20],xmm0
0x3c13: jz 0x3c47
0x3c15: test rdx,rdx
0x3c18: jz 0x3c47
0x3c1a: mov qword ptr [rsp+0x28],rsi
0x3c1f: mov qword ptr [rsp+0x30],rdx
0x3c24: mov rcx,rsp
0x3c27: mov rdx,r8
0x3c2a: mov rsi,r9
0x3c2d: call 0x33c0
0x3c32: mov rdi,qword ptr [rsp+0x38]
0x3c37: xor rdi,0x28
0x3c40: jnz 0x3c4c
0x3c42: add rsp,0x48
0x3c46: ret
0x3c47: call 0x11d0
0x3c4c: call 0x1280
0x3c60: mov r8,0xffffffff
0x3c67: jmp 0x3bc0
0x3c70: mov rcx,rdx
0x3c73: mov r8,0xffffffff
0x3c7a: mov rdx,rsi
0x3c7d: mov rsi,rdi
0x3c80: xor edi,edi
0x3c82: jmp 0x3bc0
0x3c90: mov r8,rcx
0x3c93: mov rcx,rdx
0x3c96: mov rdx,rsi
0x3c99: mov rsi,rdi
0x3c9c: xor edi,edi
0x3c9e: jmp 0x3bc0
0x3cb0: lea rcx,[rip+0x203369]
0x3cb7: jmp 0x33c0
0x3cc0: lea rcx,[rip+0x203359]
0x3cc7: mov rdx,rsi
0x3cca: mov rsi,rdi
0x3ccd: xor edi,edi
0x3ccf: jmp 0x33c0
0x3ce0: lea rcx,[rip+0x203339]
0x3ce7: mov rdx,0xffffffff
0x3cee: jmp 0x33c0
0x3d00: lea rcx,[rip+0x203319]
0x3d07: mov rsi,rdi
0x3d0a: mov rdx,0xffffffff
0x3d11: xor edi,edi
0x3d13: jmp 0x33c0
0x3dc6: nop qword ptr [rax+rax*1+0x0]
0x3e55: nop qword ptr [rax]
0x3e58: mov r8,rcx
0x3e5b: mov rcx,rdx
0x3e5e: lea rdx,[rip+0x17af]
0x3e65: mov esi,0x1
0x3e6a: xor eax,eax
0x3e6c: call 0x1410
0x3e71: jmp 0x3d5c
0x3e76: nop qword ptr [rax+rax*1+0x0]
0x3ed5: nop qword ptr [rax]
0x3f11: nop qword ptr [rax+0x0]
0x3f58: nop qword ptr [rax+rax*1+0x0]
0x3fa7: nop qword ptr [rax+rax*1+0x0]
0x4004: nop qword ptr [rax+0x0]
0x4032: nop qword ptr [rax+rax*1+0x0]
0x40e6: nop qword ptr [rax+rax*1+0x0]
0x4140: xor r9d,r9d
0x4143: cmp [r8],0x0
0x4147: jz 0x415b
0x4149: nop qword ptr [rax+0x0]
0x4150: add r9,0x1
0x4154: cmp [r8+r9*8+0x0],0x0
0x4159: jnz 0x4150
0x415b: jmp 0x3d20
0x4160: sub rsp,0x68
0x4164: mov r10,r8
0x4167: xor r9d,r9d
0x416a: mov rax,0x28
0x4173: mov qword ptr [rsp+0x58],rax
0x4178: xor eax,eax
0x417a: mov r8,rsp
0x417d: nop qword ptr [rax]
0x4180: mov eax,dword ptr [r10]
0x4183: cmp eax,0x2f
0x4186: jnbe 0x41ca
0x4188: mov r11d,eax
0x418b: add r11,qword ptr [r10+0x10]
0x418f: add eax,0x8
0x4192: mov dword ptr [r10],eax
0x4195: mov rax,qword ptr [r11]
0x4198: test rax,rax
0x419b: mov qword ptr [r8+r9*8+0x0],rax
0x419f: jz 0x41ab
0x41a1: add r9,0x1
0x41a5: cmp r9,0xa
0x41a9: jnz 0x4180
0x41ab: call 0x3d20
0x41b0: mov rax,qword ptr [rsp+0x58]
0x41b5: xor rax,0x28
0x41be: jnz 0x41c5
0x41c0: add rsp,0x68
0x41c4: ret
0x41c5: call 0x1280
0x41ca: mov r11,qword ptr [r10+0x8]
0x41ce: lea rax,[r11+0x8]
0x41d2: mov qword ptr [r10+0x8],rax
0x41d6: jmp 0x4195
0x42a0: call 0x1280
0x42c0: push rbx
0x42c1: lea rsi,[rip+0x139a]
0x42c8: mov edx,0x5
0x42cd: xor edi,edi
0x42cf: call 0x1250
0x42d4: lea rdx,[rip+0x139c]
0x42db: mov rsi,rax
0x42de: mov edi,0x1
0x42e3: xor eax,eax
0x42e5: call 0x13b0
0x42ea: lea rsi,[rip+0x139c]
0x42f1: mov edx,0x5
0x42f6: xor edi,edi
0x42f8: call 0x1250
0x42fd: lea rcx,[rip+0xd1c]
0x4304: lea rdx,[rip+0x8aa]
0x430b: mov rsi,rax
0x430e: mov edi,0x1
0x4313: xor eax,eax
0x4315: call 0x13b0
0x431a: mov rbx,qword ptr [rip+0x202d67]
0x4321: lea rsi,[rip+0x1598]
0x4328: xor edi,edi
0x432a: mov edx,0x5
0x432f: call 0x1250
0x4334: mov rsi,rbx
0x4337: mov rdi,rax
0x433a: pop rbx
0x433b: jmp 0x1300
0x4340: push rbx
0x4341: mov rbx,rdi
0x4344: call 0x1350
0x4349: test rax,rax
0x434c: jnz 0x4353
0x434e: test rbx,rbx
0x4351: jnz 0x4355
0x4353: pop rbx
0x4354: ret
0x4355: call 0x4590
0x4360: mov rax,rdi
0x4363: mul rsi
0x4366: mov rdi,rax
0x4369: seto al
0x436c: test rdi,rdi
0x436f: js 0x437b
0x4371: movzx eax,al
0x4374: test rax,rax
0x4377: jnz 0x437b
0x4379: jmp 0x4340
0x437b: sub rsp,0x8
0x437f: call 0x4590
0x43a0: test rsi,rsi
0x43a3: push rbx
0x43a4: mov rbx,rsi
0x43a7: jnz 0x43ae
0x43a9: test rdi,rdi
0x43ac: jnz 0x43c8
0x43ae: mov rsi,rbx
0x43b1: call 0x1390
0x43b6: test rax,rax
0x43b9: jnz 0x43c0
0x43bb: test rbx,rbx
0x43be: jnz 0x43d1
0x43c0: pop rbx
0x43c1: ret
0x43c2: nop qword ptr [rax+rax*1+0x0]
0x43c8: call 0x11c0
0x43cd: xor eax,eax
0x43cf: pop rbx
0x43d0: ret
0x43d1: call 0x4590
0x43e0: mov rax,rsi
0x43e3: mul rdx
0x43e6: mov rsi,rax
0x43e9: seto al
0x43ec: test rsi,rsi
0x43ef: js 0x43fb
0x43f1: movzx eax,al
0x43f4: test rax,rax
0x43f7: jnz 0x43fb
0x43f9: jmp 0x43a0
0x43fb: sub rsp,0x8
0x43ff: call 0x4590
0x4410: test rdi,rdi
0x4413: mov r9,rdx
0x4416: mov rcx,qword ptr [rsi]
0x4419: jz 0x4450
0x441b: xor edx,edx
0x441d: mov rax,0x6148914691236517204
0x4427: div r9
0x442a: cmp rax,rcx
0x442d: jbe 0x446b
0x442f: mov rax,rcx
0x4432: shr rax,0x1
0x4435: lea rcx,[rax+rcx*1+0x1]
0x443a: mov qword ptr [rsi],rcx
0x443d: imul rcx,r9
0x4441: mov rsi,rcx
0x4444: jmp 0x43a0
0x4449: nop qword ptr [rax+0x0]
0x4450: test rcx,rcx
0x4453: jz 0x4478
0x4455: mov rax,rcx
0x4458: mul r9
0x445b: seto dl
0x445e: test rax,rax
0x4461: movzx edx,dl
0x4464: js 0x446b
0x4466: test rdx,rdx
0x4469: jz 0x443a
0x446b: sub rsp,0x8
0x446f: call 0x4590
0x4474: nop qword ptr [rax+0x0]
0x4478: xor edx,edx
0x447a: mov eax,0x80
0x447f: xor r8d,r8d
0x4482: div r9
0x4485: test rax,rax
0x4488: setz r8b
0x448c: lea rcx,[r8+rax*1+0x0]
0x4490: jmp 0x4455
0x44a0: test rdi,rdi
0x44a3: mov rax,qword ptr [rsi]
0x44a6: jz 0x44d0
0x44a8: mov rdx,0x6148914691236517203
0x44b2: cmp rax,rdx
0x44b5: jnbe 0x44e1
0x44b7: mov rdx,rax
0x44ba: shr rdx,0x1
0x44bd: lea rax,[rdx+rax*1+0x1]
0x44c2: mov qword ptr [rsi],rax
0x44c5: mov rsi,rax
0x44c8: jmp 0x43a0
0x44cd: nop qword ptr [rax]
0x44d0: test rax,rax
0x44d3: mov edx,0x80
0x44d8: cmove rax,rdx
0x44dc: test rax,rax
0x44df: jns 0x44c2
0x44e1: sub rsp,0x8
0x44e5: call 0x4590
0x44f0: push rbx
0x44f1: mov rbx,rdi
0x44f4: call 0x4340
0x44f9: mov rdx,rbx
0x44fc: xor esi,esi
0x44fe: mov rdi,rax
0x4501: pop rbx
0x4502: jmp 0x12e0
0x4510: mov rax,rdi
0x4513: sub rsp,0x8
0x4517: mul rsi
0x451a: seto dl
0x451d: test rax,rax
0x4520: js 0x4539
0x4522: movzx edx,dl
0x4525: test rdx,rdx
0x4528: jnz 0x4539
0x452a: call 0x1310
0x452f: test rax,rax
0x4532: jz 0x4539
0x4534: add rsp,0x8
0x4538: ret
0x4539: call 0x4590
0x4540: push rbp
0x4541: push rbx
0x4542: mov rbp,rdi
0x4545: mov rdi,rsi
0x4548: mov rbx,rsi
0x454b: sub rsp,0x8
0x454f: call 0x4340
0x4554: add rsp,0x8
0x4558: mov rdx,rbx
0x455b: mov rsi,rbp
0x455e: pop rbx
0x455f: pop rbp
0x4560: mov rdi,rax
0x4563: jmp 0x1330
0x4570: push rbx
0x4571: mov rbx,rdi
0x4574: call 0x1270
0x4579: mov rdi,rbx
0x457c: lea rsi,[rax+0x1]
0x4580: pop rbx
0x4581: jmp 0x4540
0x4590: lea rsi,[rip+0x13d8]
0x4597: sub rsp,0x8
0x459b: mov edx,0x5
0x45a0: xor edi,edi
0x45a2: call 0x1250
0x45a7: mov edi,dword ptr [rip+0x202a6b]
0x45ad: lea rdx,[rip+0xb24]
0x45b4: mov rcx,rax
0x45b7: xor esi,esi
0x45b9: xor eax,eax
0x45bb: call 0x13c0
0x45c0: call 0x11d0
0x45d0: push r13
0x45d2: push r12
0x45d4: mov r13,rsi
0x45d7: push rbp
0x45d8: push rbx
0x45d9: mov rbx,rdi
0x45dc: mov r12,rdx
0x45df: sub rsp,0x18
0x45e3: mov rax,0x28
0x45ec: mov qword ptr [rsp+0x8],rax
0x45f1: xor eax,eax
0x45f3: lea rax,[rsp+0x4]
0x45f8: test rdi,rdi
0x45fb: cmove rbx,rax
0x45ff: mov rdi,rbx
0x4602: call 0x1290
0x4607: cmp rax,0xfffffffd
0x460b: mov rbp,rax
0x460e: jbe 0x4630
0x4610: test r12,r12
0x4613: jz 0x4630
0x4615: xor edi,edi
0x4617: call 0x46e0
0x461c: test al,al
0x461e: jnz 0x4630
0x4620: movzx eax,byte ptr [r13+0x0]
0x4625: mov ebp,0x1
0x462a: mov dword ptr [rbx],eax
0x462c: nop qword ptr [rax+0x0]
0x4630: mov rdx,qword ptr [rsp+0x8]
0x4635: xor rdx,0x28
0x463e: mov rax,rbp
0x4641: jnz 0x464e
0x4643: add rsp,0x18
0x4647: pop rbx
0x4648: pop rbp
0x4649: pop r12
0x464b: pop r13
0x464d: ret
0x464e: call 0x1280
0x4660: push r12
0x4662: push rbp
0x4663: mov rbp,rdi
0x4666: push rbx
0x4667: call 0x1210
0x466c: mov ebx,dword ptr [rbp+0x0]
0x466f: mov rdi,rbp
0x4672: mov r12,rax
0x4675: call 0x4780
0x467a: and ebx,0x20
0x467d: test ebx,ebx
0x467f: jnz 0x4698
0x4681: test eax,eax
0x4683: jz 0x468f
0x4685: test r12,r12
0x4688: mov eax,0xffffffff
0x468d: jz 0x46c8
0x468f: pop rbx
0x4690: pop rbp
0x4691: pop r12
0x4693: ret
0x4694: nop qword ptr [rax+0x0]
0x4698: test eax,eax
0x469a: jnz 0x46b8
0x469c: call 0x11e0
0x46a1: mov [rax],0x0
0x46a7: mov eax,0xffffffff
0x46ac: pop rbx
0x46ad: pop rbp
0x46ae: pop r12
0x46b0: ret
0x46b1: nop qword ptr [rax+0x0]
0x46b8: pop rbx
0x46b9: mov eax,0xffffffff
0x46be: pop rbp
0x46bf: pop r12
0x46c1: ret
0x46c2: nop qword ptr [rax+rax*1+0x0]
0x46c8: call 0x11e0
0x46cd: cmp [rax],0x9
0x46d0: pop rbx
0x46d1: pop rbp
0x46d2: pop r12
0x46d4: setnz al
0x46d7: movzx eax,al
0x46da: neg eax
0x46dc: ret
0x46e0: sub rsp,0x8
0x46e4: xor esi,esi
0x46e6: call 0x13a0
0x46eb: mov rdx,rax
0x46ee: mov eax,0x1
0x46f3: test rdx,rdx
0x46f6: jz 0x4715
0x46f8: lea rdi,[rip+0x1281]
0x46ff: mov ecx,0x2
0x4704: mov rsi,rdx
0x4707: rep cmpsb ds:[rsi],es:[rdi]
0x4709: setnbe cl
0x470c: sbb cl,0x0
0x470f: xor eax,eax
0x4711: test cl,cl
0x4713: jnz 0x4720
0x4715: add rsp,0x8
0x4719: ret
0x471a: nop qword ptr [rax+rax*1+0x0]
0x4720: lea rdi,[rip+0x125b]
0x4727: mov ecx,0x6
0x472c: mov rsi,rdx
0x472f: rep cmpsb ds:[rsi],es:[rdi]
0x4731: setnbe al
0x4734: sbb al,0x0
0x4736: test al,al
0x4738: setnz al
0x473b: add rsp,0x8
0x473f: ret
0x4740: sub rsp,0x8
0x4744: mov edi,0xe
0x4749: call 0x1370
0x474e: test rax,rax
0x4751: jz 0x4770
0x4753: cmp [rax],0x0
0x4756: lea rdx,[rip+0x122b]
0x475d: cmove rax,rdx
0x4761: add rsp,0x8
0x4765: ret
0x4766: nop qword ptr [rax+rax*1+0x0]
0x4770: lea rax,[rip+0x1211]
0x4777: add rsp,0x8
0x477b: ret
0x4780: push r12
0x4782: push rbp
0x4783: push rbx
0x4784: mov rbx,rdi
0x4787: call 0x1340
0x478c: test eax,eax
0x478e: mov rdi,rbx
0x4791: js 0x47e7
0x4793: call 0x1380
0x4798: test eax,eax
0x479a: jnz 0x47c8
0x479c: mov rdi,rbx
0x479f: call 0x4800
0x47a4: test eax,eax
0x47a6: jz 0x47e4
0x47a8: call 0x11e0
0x47ad: mov r12d,dword ptr [rax]
0x47b0: mov rdi,rbx
0x47b3: mov rbp,rax
0x47b6: call 0x1230
0x47bb: test r12d,r12d
0x47be: jnz 0x47f0
0x47c0: pop rbx
0x47c1: pop rbp
0x47c2: pop r12
0x47c4: ret
0x47c5: nop qword ptr [rax]
0x47c8: mov rdi,rbx
0x47cb: call 0x1340
0x47d0: xor esi,esi
0x47d2: mov edx,0x1
0x47d7: mov edi,eax
0x47d9: call 0x12c0
0x47de: cmp rax,0xffffffff
0x47e2: jnz 0x479c
0x47e4: mov rdi,rbx
0x47e7: pop rbx
0x47e8: pop rbp
0x47e9: pop r12
0x47eb: jmp 0x1230
0x47f0: mov dword ptr [rbp+0x0],r12d
0x47f4: mov eax,0xffffffff
0x47f9: jmp 0x47c0
0x4800: test rdi,rdi
0x4803: push rbx
0x4804: mov rbx,rdi
0x4807: jz 0x481a
0x4809: call 0x1380
0x480e: test eax,eax
0x4810: jz 0x481a
0x4812: test [rbx],0x100
0x4818: jnz 0x4828
0x481a: mov rdi,rbx
0x481d: pop rbx
0x481e: jmp 0x1360
0x4823: nop qword ptr [rax+rax*1+0x0]
0x4828: mov rdi,rbx
0x482b: mov edx,0x1
0x4830: xor esi,esi
0x4832: call 0x4840
0x4837: mov rdi,rbx
0x483a: pop rbx
0x483b: jmp 0x1360
0x4840: mov rax,qword ptr [rdi+0x8]
0x4844: cmp qword ptr [rdi+0x10],rax
0x4848: jz 0x4850
0x484a: jmp 0x13d0
0x484f: nop 
0x4850: mov rax,qword ptr [rdi+0x20]
0x4854: cmp qword ptr [rdi+0x28],rax
0x4858: jnz 0x484a
0x485a: cmp [rdi+0x48],0x0
0x485f: jnz 0x484a
0x4861: push r12
0x4863: push rbp
0x4864: mov r12d,edx
0x4867: push rbx
0x4868: mov rbp,rsi
0x486b: mov rbx,rdi
0x486e: call 0x1340
0x4873: mov edx,r12d
0x4876: mov rsi,rbp
0x4879: mov edi,eax
0x487b: call 0x12c0
0x4880: cmp rax,0xffffffff
0x4884: jz 0x4892
0x4886: and [rbx],0xef
0x4889: mov qword ptr [rbx+0x90],rax
0x4890: xor eax,eax
0x4892: pop rbx
0x4893: pop rbp
0x4894: pop r12
0x4896: ret
0x4930: sub rsp,0x8
0x4934: add rsp,0x8
0x4938: ret
