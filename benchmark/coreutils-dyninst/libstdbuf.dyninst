
"getenv@plt" :
760(6): jmp 0x2008b2(%rip)
766(5): push $0x0

"free@plt" :
770(6): jmp 0x2008aa(%rip)
776(5): push $0x1

"dcgettext@plt" :
780(6): jmp 0x2008a2(%rip)
786(5): push $0x2

"fileno@plt" :
790(6): jmp 0x20089a(%rip)
796(5): push $0x3

"malloc@plt" :
7a0(6): jmp 0x200892(%rip)
7a6(5): push $0x4

"setvbuf@plt" :
7b0(6): jmp 0x20088a(%rip)
7b6(5): push $0x5

"strtoul@plt" :
7c0(6): jmp 0x200882(%rip)
7c6(5): push $0x6

"__fprintf_chk@plt" :
7d0(6): jmp 0x20087a(%rip)
7d6(5): push $0x7

".plt.got" :
7e0(6): jmp 0x20080a(%rip)
7e6(2): nop 

"_init" :
738(4): sub $0x8,%rsp
73c(7): mov 0x20089d(%rip),%rax
743(3): test %rax,%rax
746(2): jz 0x4(%rip)
748(2): call %rax
74a(4): add $0x8,%rsp
74e(1): ret near (%rsp)

"apply_mode" :
7f0(2): push %r12
7f2(1): push %rbp
7f3(3): mov %rdi,%rbp
7f6(1): push %rbx
7f7(3): mov %rsi,%rbx
7fa(4): sub $0x10,%rsp
7fe(3): movzx (%rsi),%eax
801(2): cmp $0x30,%al
803(6): jz 0x126(%rip)
809(2): cmp $0x4c,%al
80b(2): jnz 0x28(%rip)
80d(2): xor %ecx,%ecx
80f(5): mov $0x1,%edx
814(3): xor %r12d,%r12d
817(3): mov %r12,%rsi
81a(3): mov %rbp,%rdi
81d(5): call 0xffffff93(%rip)
822(2): test %eax,%eax
824(6): jnz 0x92(%rip)
82a(4): add $0x10,%rsp
82e(1): pop %rbx
82f(1): pop %rbp
830(2): pop %r12
832(1): ret near (%rsp)
833(2): xor %esi,%esi
835(5): mov $0xa,%edx
83a(3): mov %rbx,%rdi
83d(5): call 0xffffff83(%rip)
842(3): test %rax,%rax
845(6): jnz 0xf3(%rip)
84b(3): mov %rbp,%rdi
84e(5): call 0xffffff42(%rip)
853(3): cmp $0x1,%eax
856(6): jz 0x147(%rip)
85c(3): cmp $0x2,%eax
85f(7): lea 0x2bf(%rip),%rbp
866(2): jz 0x16(%rip)
868(7): lea 0x2a9(%rip),%rbp
86f(7): lea 0x2b6(%rip),%r8
876(2): test %eax,%eax
878(4): cmovne %r8,%rbp
87c(7): lea 0x305(%rip),%rsi
883(5): mov $0x5,%edx
888(2): xor %edi,%edi
88a(5): call 0xfffffef6(%rip)
88f(3): mov %rax,%rdx
892(7): mov 0x20075f(%rip),%rax
899(3): mov %rbp,%r8
89c(3): mov %rbx,%rcx
89f(5): mov $0x1,%esi
8a4(3): mov (%rax),%rdi
8a7(4): add $0x10,%rsp
8ab(2): xor %eax,%eax
8ad(1): pop %rbx
8ae(1): pop %rbp
8af(2): pop %r12
8b1(5): jmp 0xffffff1f(%rip)
8b6(3): mov %rbp,%rdi
8b9(5): call 0xfffffed7(%rip)
8be(3): cmp $0x1,%eax
8c1(6): jz 0xd0(%rip)
8c7(3): cmp $0x2,%eax
8ca(7): lea 0x254(%rip),%rbp
8d1(2): jz 0x16(%rip)
8d3(7): lea 0x23e(%rip),%rbp
8da(7): lea 0x24b(%rip),%rcx
8e1(2): test %eax,%eax
8e3(4): cmovne %rcx,%rbp
8e7(7): lea 0x2c2(%rip),%rsi
8ee(5): mov $0x5,%edx
8f3(2): xor %edi,%edi
8f5(5): call 0xfffffe8b(%rip)
8fa(3): mov %rax,%rdx
8fd(7): mov 0x2006f4(%rip),%rax
904(3): mov %rbx,%r8
907(3): mov %rbp,%rcx
90a(5): mov $0x1,%esi
90f(3): mov (%rax),%rdi
912(2): xor %eax,%eax
914(5): call 0xfffffebc(%rip)
919(4): add $0x10,%rsp
91d(3): mov %r12,%rdi
920(1): pop %rbx
921(1): pop %rbp
922(2): pop %r12
924(5): jmp 0xfffffe4c(%rip)
929(2): xor %ecx,%ecx
92b(5): mov $0x2,%edx
930(3): xor %r12d,%r12d
933(5): jmp 0xfffffee4(%rip)
938(3): mov %rax,%rdi
93b(5): mov %rax,0x8(%rsp)
940(5): call 0xfffffe60(%rip)
945(2): xor %edx,%edx
947(3): test %rax,%rax
94a(3): mov %rax,%r12
94d(5): mov 0x8(%rsp),%rcx
952(6): jnz 0xfffffec5(%rip)
958(7): lea 0x1f9(%rip),%rsi
95f(5): mov $0x5,%edx
964(2): xor %edi,%edi
966(5): call 0xfffffe1a(%rip)
96b(3): mov %rax,%rdx
96e(7): mov 0x200683(%rip),%rax
975(5): mov 0x8(%rsp),%rcx
97a(5): mov $0x1,%esi
97f(3): mov (%rax),%rdi
982(4): add $0x10,%rsp
986(2): xor %eax,%eax
988(1): pop %rbx
989(1): pop %rbp
98a(2): pop %r12
98c(5): jmp 0xfffffe44(%rip)
991(7): lea 0x186(%rip),%rbp
998(5): jmp 0xffffff4f(%rip)
99d(7): lea 0x17a(%rip),%rbp
9a4(5): jmp 0xfffffed8(%rip)

"stdbuf" :
9b0(2): push %r12
9b2(7): lea 0x17b(%rip),%rdi
9b9(1): push %rbp
9ba(1): push %rbx
9bb(5): call 0xfffffda5(%rip)
9c0(7): lea 0x177(%rip),%rdi
9c7(3): mov %rax,%r12
9ca(5): call 0xfffffd96(%rip)
9cf(7): lea 0x172(%rip),%rdi
9d6(3): mov %rax,%rbp
9d9(5): call 0xfffffd87(%rip)
9de(3): test %r12,%r12
9e1(3): mov %rax,%rbx
9e4(2): jz 0x14(%rip)
9e6(7): mov 0x20060b(%rip),%rax
9ed(3): mov %r12,%rsi
9f0(3): mov (%rax),%rdi
9f3(5): call 0xfffffdfd(%rip)
9f8(3): test %rbp,%rbp
9fb(2): jz 0x14(%rip)
9fd(7): mov 0x2005d4(%rip),%rax
a04(3): mov %rbp,%rsi
a07(3): mov (%rax),%rdi
a0a(5): call 0xfffffde6(%rip)
a0f(3): test %rbx,%rbx
a12(2): jz 0x18(%rip)
a14(7): mov 0x2005b5(%rip),%rax
a1b(3): mov %rbx,%rsi
a1e(1): pop %rbx
a1f(1): pop %rbp
a20(2): pop %r12
a22(3): mov (%rax),%rdi
a25(5): jmp 0xfffffdcb(%rip)
a2a(1): pop %rbx
a2b(1): pop %rbp
a2c(2): pop %r12
a2e(1): ret near (%rsp)

"deregister_tm_clones" :
a30(7): lea 0x200629(%rip),%rdi
a37(1): push %rbp
a38(7): lea 0x200621(%rip),%rax
a3f(3): cmp %rdi,%rax
a42(3): mov %rsp,%rbp
a45(2): jz 0x1b(%rip)
a47(7): mov 0x20057a(%rip),%rax
a4e(3): test %rax,%rax
a51(2): jz 0xf(%rip)
a53(1): pop %rbp
a54(2): jmp %rax
a56(a): nop 0x0(%rax,%rax,1)
a60(1): pop %rbp
a61(1): ret near (%rsp)

"register_tm_clones" :
a70(7): lea 0x2005e9(%rip),%rdi
a77(7): lea 0x2005e2(%rip),%rsi
a7e(1): push %rbp
a7f(3): sub %rdi,%rsi
a82(3): mov %rsp,%rbp
a85(4): sar $0x3,%rsi
a89(3): mov %rsi,%rax
a8c(4): shr $0x3f,%rax
a90(3): add %rax,%rsi
a93(3): sar $0x1,%rsi
a96(2): jz 0x1a(%rip)
a98(7): mov 0x200549(%rip),%rax
a9f(3): test %rax,%rax
aa2(2): jz 0xe(%rip)
aa4(1): pop %rbp
aa5(2): jmp %rax
aa7(9): nop 0x0(%rax,%rax,1)
ab0(1): pop %rbp
ab1(1): ret near (%rsp)

"__do_global_dtors_aux" :
ac0(7): cmp $0x0,0x200599(%rip)
ac7(2): jnz 0x31(%rip)
ac9(8): cmp $0x0,0x20051f(%rip)
ad1(1): push %rbp
ad2(3): mov %rsp,%rbp
ad5(2): jz 0xe(%rip)
ad7(7): mov 0x20057a(%rip),%rdi
ade(5): call 0xfffffd02(%rip)
ae3(5): call 0xffffff4d(%rip)
ae8(7): mov $0x1,0x200571(%rip)
aef(1): pop %rbp
af0(1): ret near (%rsp)
af1(7): nop 0x0(%rax)
af8(2): REP ret near (%rsp)

"frame_dummy" :
b00(1): push %rbp
b01(3): mov %rsp,%rbp
b04(1): pop %rbp
b05(5): jmp 0xffffff6b(%rip)

"_fini" :
b0c(4): sub $0x8,%rsp
b10(4): add $0x8,%rsp
b14(1): ret near (%rsp)

