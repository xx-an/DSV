0x1838: sub rsp,0x8
0x183c: mov rax,qword ptr [rip+0x21779d]
0x1843: test rax,rax
0x1846: jz 0x184a
0x1848: call rax
0x184a: add rsp,0x8
0x184e: ret
0x1866: push 0x0
0x1876: push 0x1
0x1886: push 0x2
0x1896: push 0x3
0x18a6: push 0x4
0x18b6: push 0x5
0x18c6: push 0x6
0x18d0: jmp qword ptr [rip+0x217522]
0x18d6: push 0x7
0x18e0: jmp qword ptr [rip+0x21751a]
0x18e6: push 0x8
0x18f6: push 0x9
0x1906: push 0xa
0x1916: push 0xb
0x1926: push 0xc
0x1930: jmp qword ptr [rip+0x2174f2]
0x1936: push 0xd
0x1940: jmp qword ptr [rip+0x2174ea]
0x1946: push 0xe
0x1956: push 0xf
0x1966: push 0x10
0x1976: push 0x11
0x1986: push 0x12
0x1996: push 0x13
0x19a6: push 0x14
0x19b6: push 0x15
0x19c6: push 0x16
0x19d6: push 0x17
0x19e0: jmp qword ptr [rip+0x21749a]
0x19e6: push 0x18
0x19f6: push 0x19
0x1a06: push 0x1a
0x1a16: push 0x1b
0x1a26: push 0x1c
0x1a36: push 0x1d
0x1a46: push 0x1e
0x1a56: push 0x1f
0x1a66: push 0x20
0x1a76: push 0x21
0x1a86: push 0x22
0x1a96: push 0x23
0x1aa6: push 0x24
0x1ab6: push 0x25
0x1ac6: push 0x26
0x1ad6: push 0x27
0x1ae0: jmp qword ptr [rip+0x21741a]
0x1ae6: push 0x28
0x1af6: push 0x29
0x1b06: push 0x2a
0x1b10: jmp qword ptr [rip+0x217402]
0x1b16: push 0x2b
0x1b26: push 0x2c
0x1b36: push 0x2d
0x1b46: push 0x2e
0x1b56: push 0x2f
0x1b66: push 0x30
0x1b76: push 0x31
0x1b86: push 0x32
0x1b96: push 0x33
0x1ba6: push 0x34
0x1bb6: push 0x35
0x1bc6: push 0x36
0x1bd0: jmp qword ptr [rip+0x2173a2]
0x1bd6: push 0x37
0x1be6: push 0x38
0x1bf6: push 0x39
0x1c06: push 0x3a
0x1c16: push 0x3b
0x1c26: push 0x3c
0x1c36: push 0x3d
0x1c46: push 0x3e
0x1c56: push 0x3f
0x1c60: jmp qword ptr [rip+0x21735a]
0x1c66: push 0x40
0x1c76: push 0x41
0x1c80: jmp qword ptr [rip+0x21736a]
0x1c86: nop 
0x1d53: nop qword ptr [rax+rax*1+0x0]
0x1da1: nop qword ptr [rax+0x0]
0x1db4: nop qword ptr [rax+0x0]
0x1e6c: nop qword ptr [rax+0x0]
0x202d: nop qword ptr [rax]
0x2110: lea rsi,[rip+0x12541]
0x2117: mov rbx,rax
0x211a: mov edx,0x5
0x211f: xor edi,edi
0x2121: call 0x1960
0x2126: mov r13,rax
0x2129: call 0x18a0
0x212e: mov esi,dword ptr [rax]
0x2130: mov rcx,rbx
0x2133: mov rdx,r13
0x2136: xor edi,edi
0x2138: xor eax,eax
0x213a: call 0x1ba0
0x2169: lea rsi,[rip+0x12112]
0x2170: mov rbp,rax
0x2173: mov edx,0x5
0x2178: xor edi,edi
0x217a: call 0x1960
0x217f: mov rbx,rax
0x2182: call 0x18a0
0x2187: mov esi,dword ptr [rax]
0x2189: mov rdx,rbx
0x218c: mov rcx,rbp
0x218f: xor edi,edi
0x2191: xor eax,eax
0x2193: xor ebx,ebx
0x2195: call 0x1ba0
0x219a: jmp 0x20b5
0x21bd: mov edx,0x5
0x21c2: mov rbp,rax
0x21c5: lea rsi,[rip+0x11f88]
0x21cc: jmp 0x2178
0x21dd: mov edx,0x5
0x21e2: mov rbx,rax
0x21e5: lea rsi,[rip+0x11f68]
0x21ec: jmp 0x211f
0x2202: mov edx,0x5
0x2207: mov rbx,rax
0x220a: lea rsi,[rip+0x120b7]
0x2211: jmp 0x211f
0x22c7: mov [rsp+0xf],0x0
0x22cc: jmp 0x20e5
0x230e: lea rsi,[rip+0x1231b]
0x2315: mov edx,0x5
0x231a: xor edi,edi
0x231c: mov rbx,rax
0x231f: call 0x1960
0x2324: mov r13,rax
0x2327: call 0x18a0
0x232c: mov esi,dword ptr [rax]
0x232e: mov rcx,rbx
0x2331: mov rdx,r13
0x2334: xor edi,edi
0x2336: xor eax,eax
0x2338: call 0x1ba0
0x233d: mov rdi,qword ptr [rip+0x218dac]
0x2344: xor ebx,ebx
0x2346: call 0x1880
0x234b: mov [rip+0x218d9a],0x0
0x2356: jmp 0x20ac
0x2368: lea rsi,[rip+0x11f3b]
0x236f: xor edi,edi
0x2371: mov edx,0x5
0x2376: mov rbx,rax
0x2379: call 0x1960
0x237e: mov qword ptr [rsp+0x18],rax
0x2383: call 0x18a0
0x2388: mov rdx,qword ptr [rsp+0x18]
0x238d: mov esi,dword ptr [rax]
0x238f: mov rcx,rbx
0x2392: xor edi,edi
0x2394: xor eax,eax
0x2396: call 0x1ba0
0x239b: mov edi,r13d
0x239e: call 0x1a20
0x23a3: mov rdi,qword ptr [rip+0x218d46]
0x23aa: call 0x18b0
0x23af: jmp 0x233d
0x2411: nop qword ptr [rax+rax*1+0x0]
0x241b: nop qword ptr [rax+rax*1+0x0]
0x244a: hlt 
0x2450: lea rdi,[rip+0x216c29]
0x2457: push rbp
0x2458: lea rax,[rip+0x216c21]
0x245f: cmp rax,rdi
0x2462: mov rbp,rsp
0x2465: jz 0x2480
0x2467: mov rax,qword ptr [rip+0x216b62]
0x246e: test rax,rax
0x2471: jz 0x2480
0x2473: pop rbp
0x2474: jmp rax
0x2476: nop qword ptr [rax+rax*1+0x0]
0x2480: pop rbp
0x2481: ret
0x2490: lea rdi,[rip+0x216be9]
0x2497: lea rsi,[rip+0x216be2]
0x249e: push rbp
0x249f: sub rsi,rdi
0x24a2: mov rbp,rsp
0x24a5: sar rsi,0x3
0x24a9: mov rax,rsi
0x24ac: shr rax,0x3f
0x24b0: add rsi,rax
0x24b3: sar rsi,0x1
0x24b6: jz 0x24d0
0x24b8: mov rax,qword ptr [rip+0x216b29]
0x24bf: test rax,rax
0x24c2: jz 0x24d0
0x24c4: pop rbp
0x24c5: jmp rax
0x24c7: nop qword ptr [rax+rax*1+0x0]
0x24d0: pop rbp
0x24d1: ret
0x24e0: cmp [rip+0x216be1],0x0
0x24e7: jnz 0x2518
0x24e9: cmp [rip+0x216aff],0x0
0x24f1: push rbp
0x24f2: mov rbp,rsp
0x24f5: jz 0x2503
0x24f7: mov rdi,qword ptr [rip+0x216b0a]
0x24fe: call 0x1c80
0x2503: call 0x2450
0x2508: mov [rip+0x216bb9],0x1
0x250f: pop rbp
0x2510: ret
0x2511: nop qword ptr [rax+0x0]
0x2518: rep ret
0x2520: push rbp
0x2521: mov rbp,rsp
0x2524: pop rbp
0x2525: jmp 0x2490
0x25ee: nop 
0x2625: nop qword ptr [rax]
0x268f: nop 
0x26e8: mov edx,0x5
0x26ed: mov rsi,r12
0x26f0: xor edi,edi
0x26f2: mov rbx,rax
0x26f5: call 0x1960
0x26fa: mov r15,rax
0x26fd: call 0x18a0
0x2702: mov esi,dword ptr [rax]
0x2704: mov rcx,rbx
0x2707: mov rdx,r15
0x270a: xor edi,edi
0x270c: xor eax,eax
0x270e: call 0x1ba0
0x2713: mov rbx,qword ptr [rip+0x218b4e]
0x271a: jmp 0x2690
0x2729: nop qword ptr [rax+0x0]
0x27a9: sub r15,r12
0x27ac: mov r8d,0x1
0x27b2: sub r8,r15
0x27b5: cmp r8,0x1
0x27b9: jnle 0x2bac
0x27bf: jz 0x29d7
0x27c5: lea rcx,[r15-0x1]
0x27c9: lea r9,[rip+0x218930]
0x27d0: lea rdi,[rip+0x218a49]
0x27d7: mov rdx,r15
0x27da: mov rsi,r12
0x27dd: call 0x13a70
0x27e2: cmp rax,0xffffffff
0x27e6: jz 0x29d0
0x27ec: cmp rax,0xfffffffe
0x27f0: jz 0x2b88
0x27f6: mov rax,qword ptr [rip+0x21890b]
0x27fd: mov r12,qword ptr [rip+0x218a6c]
0x2804: mov rdx,qword ptr [rax]
0x2807: mov rax,qword ptr [rip+0x218902]
0x280e: mov rax,qword ptr [rax]
0x2811: lea rbx,[r12+rdx*1+0x0]
0x2815: sub rax,rdx
0x2818: mov qword ptr [rip+0x218a59],rax
0x281f: cmp rbx,r12
0x2822: jnb 0x2978
0x29cf: nop 
0x29d0: mov r12,qword ptr [rip+0x218899]
0x29d7: lea rbx,[r12-0x1]
0x29dc: jmp 0x281f
0x29e1: nop qword ptr [rax+0x0]
0x29f7: nop qword ptr [rax+rax*1+0x0]
0x2a1b: nop qword ptr [rax+rax*1+0x0]
0x2a43: nop qword ptr [rax+rax*1+0x0]
0x2a59: lea rsi,[rip+0x116e4]
0x2a60: xor edi,edi
0x2a62: mov edx,0x5
0x2a67: mov r12,rax
0x2a6a: call 0x1960
0x2a6f: mov r15,rax
0x2a72: call 0x18a0
0x2a77: mov esi,dword ptr [rax]
0x2a79: mov rcx,r12
0x2a7c: mov rdx,r15
0x2a7f: xor edi,edi
0x2a81: xor eax,eax
0x2a83: call 0x1ba0
0x2a88: jmp 0x28bf
0x2a9e: lea rsi,[rip+0x116af]
0x2aa5: mov edx,0x5
0x2aaa: xor edi,edi
0x2aac: mov rbp,rax
0x2aaf: call 0x1960
0x2ab4: mov rbx,rax
0x2ab7: call 0x18a0
0x2abc: mov esi,dword ptr [rax]
0x2abe: mov rcx,rbp
0x2ac1: mov rdx,rbx
0x2ac4: xor eax,eax
0x2ac6: xor edi,edi
0x2ac8: call 0x1ba0
0x2acd: add rsp,0x38
0x2ad1: xor eax,eax
0x2ad3: pop rbx
0x2ad4: pop rbp
0x2ad5: pop r12
0x2ad7: pop r13
0x2ad9: pop r14
0x2adb: pop r15
0x2add: ret
0x2af1: nop qword ptr [rax+0x0]
0x2b40: lea rsi,[rip+0x115fd]
0x2b47: mov edx,0x5
0x2b4c: xor edi,edi
0x2b4e: mov rbx,rax
0x2b51: call 0x1960
0x2b56: mov r12,rax
0x2b59: call 0x18a0
0x2b5e: mov esi,dword ptr [rax]
0x2b60: mov rcx,rbx
0x2b63: mov rdx,r12
0x2b66: xor edi,edi
0x2b68: xor eax,eax
0x2b6a: call 0x1ba0
0x2b6f: mov rbx,qword ptr [rip+0x2186f2]
0x2b76: jmp 0x2686
0x2b88: lea rsi,[rip+0x11779]
0x2b8f: mov edx,0x5
0x2b94: xor edi,edi
0x2b96: call 0x1960
0x2b9b: xor esi,esi
0x2b9d: mov rdx,rax
0x2ba0: mov edi,0x1
0x2ba5: xor eax,eax
0x2ba7: call 0x1ba0
0x2bac: lea rsi,[rip+0x115b0]
0x2bb3: mov edx,0x5
0x2bb8: xor edi,edi
0x2bba: call 0x1960
0x2bbf: xor esi,esi
0x2bc1: mov rdx,rax
0x2bc4: mov edi,0x1
0x2bc9: xor eax,eax
0x2bcb: call 0x1ba0
0x2f90: mov qword ptr [rip+0x218309],rdi
0x2f97: ret
0x2fa0: mov byte ptr [rip+0x2182f1],dil
0x2fa7: ret
0x2fb0: push rbp
0x2fb1: push rbx
0x2fb2: sub rsp,0x8
0x2fb6: mov rdi,qword ptr [rip+0x2160cb]
0x2fbd: call 0x13b20
0x2fc2: test eax,eax
0x2fc4: jz 0x2fdc
0x2fc6: call 0x18a0
0x2fcb: cmp [rip+0x2182c6],0x0
0x2fd2: mov rbx,rax
0x2fd5: jz 0x2ff3
0x2fd7: cmp [rax],0x20
0x2fda: jnz 0x2ff3
0x2fdc: mov rdi,qword ptr [rip+0x2160dd]
0x2fe3: call 0x13b20
0x2fe8: test eax,eax
0x2fea: jnz 0x3032
0x2fec: add rsp,0x8
0x2ff0: pop rbx
0x2ff1: pop rbp
0x2ff2: ret
0x2ff3: lea rsi,[rip+0x112d2]
0x2ffa: xor edi,edi
0x2ffc: mov edx,0x5
0x3001: call 0x1960
0x3006: mov rdi,qword ptr [rip+0x218293]
0x300d: mov rbp,rax
0x3010: test rdi,rdi
0x3013: jz 0x303d
0x3015: call 0x4c70
0x301a: mov esi,dword ptr [rbx]
0x301c: lea rdx,[rip+0x11659]
0x3023: mov rcx,rax
0x3026: mov r8,rbp
0x3029: xor edi,edi
0x302b: xor eax,eax
0x302d: call 0x1ba0
0x3032: mov edi,dword ptr [rip+0x215fe0]
0x3038: call 0x18d0
0x303d: mov esi,dword ptr [rbx]
0x303f: lea rdx,[rip+0x1163a]
0x3046: mov rcx,rax
0x3049: xor edi,edi
0x304b: xor eax,eax
0x304d: call 0x1ba0
0x3052: jmp 0x3032
0x30cc: nop qword ptr [rax+0x0]
0x3125: mov qword ptr [r15],rdi
0x3148: nop qword ptr [rax+rax*1+0x0]
0x323c: nop qword ptr [rax+0x0]
0x328d: nop qword ptr [rax]
0x35a7: nop qword ptr [rax+rax*1+0x0]
0x35de: nop 
0x3601: nop qword ptr [rax+0x0]
0x3642: nop qword ptr [rax+rax*1+0x0]
0x3654: nop qword ptr [rax+0x0]
0x36f8: nop qword ptr [rax+rax*1+0x0]
0x3721: nop qword ptr [rax+0x0]
0x3737: nop qword ptr [rax+rax*1+0x0]
0x374f: nop 
0x377e: nop 
0x378d: nop qword ptr [rax]
0x379f: nop 
0x37af: nop 
0x37bf: nop 
0x37cf: nop 
0x37df: nop 
0x384c: nop qword ptr [rax+0x0]
0x386c: nop qword ptr [rax+0x0]
0x388f: nop 
0x38a2: nop qword ptr [rax+rax*1+0x0]
0x38ba: nop qword ptr [rax+rax*1+0x0]
0x38ca: nop qword ptr [rax+rax*1+0x0]
0x396b: nop qword ptr [rax+rax*1+0x0]
0x3985: nop qword ptr [rax]
0x3998: nop qword ptr [rax+rax*1+0x0]
0x39b3: nop qword ptr [rax+rax*1+0x0]
0x39e2: nop qword ptr [rax+rax*1+0x0]
0x39f2: nop qword ptr [rax+rax*1+0x0]
0x3a0a: nop qword ptr [rax+rax*1+0x0]
0x3a1a: nop qword ptr [rax+rax*1+0x0]
0x3a28: nop qword ptr [rax+rax*1+0x0]
0x3a4f: nop 
0x3ae9: nop qword ptr [rax+0x0]
0x3b32: nop qword ptr [rax+rax*1+0x0]
0x3b3f: lea rcx,[rbp+0x2]
0x3b43: cmp rcx,r11
0x3b46: jnb 0x3b60
0x3b48: mov rax,qword ptr [rsp+0x10]
0x3b4d: cmp [rax+rbp*1+0x1],0x3f
0x3b52: jz 0x42e2
0x3b58: nop qword ptr [rax+rax*1+0x0]
0x3b71: nop qword ptr [rax+0x0]
0x3b92: nop qword ptr [rax+rax*1+0x0]
0x3cf8: nop qword ptr [rax+rax*1+0x0]
0x3e0b: nop qword ptr [rax+rax*1+0x0]
0x3e2e: nop 
0x3ef5: nop qword ptr [rax]
0x3fad: nop qword ptr [rax]
0x41b6: nop qword ptr [rax+rax*1+0x0]
0x4249: nop qword ptr [rax+0x0]
0x42e2: movzx ebx,byte ptr [rax+rcx*1+0x0]
0x42e6: cmp bl,0x3e
0x42e9: jnbe 0x3b60
0x42ef: mov rax,0x8070630310989004800
0x42f9: bt rax,rbx
0x42fd: jnb 0x3b60
0x4303: cmp [rsp+0xf],0x0
0x4308: jnz 0x44f2
0x430e: cmp r13,r15
0x4311: jbe 0x4318
0x4313: mov [r14+r15*1+0x0],0x3f
0x4318: lea rax,[r15+0x1]
0x431c: cmp r13,rax
0x431f: jbe 0x4327
0x4321: mov [r14+r15*1+0x1],0x22
0x4327: lea rax,[r15+0x2]
0x432b: cmp r13,rax
0x432e: jbe 0x4336
0x4330: mov [r14+r15*1+0x2],0x22
0x4336: lea rax,[r15+0x3]
0x433a: cmp r13,rax
0x433d: jbe 0x4345
0x433f: mov [r14+r15*1+0x3],0x3f
0x4345: add r15,0x4
0x4349: xor edx,edx
0x434b: xor r12d,r12d
0x434e: xor eax,eax
0x4350: mov rbp,rcx
0x4353: jmp 0x3518
0x4360: lea rax,[rip+0x10376]
0x4367: mov [rsp+0xe],0x1
0x436c: mov [rsp+0x7c],0x0
0x4371: xor r12d,r12d
0x4374: mov [rsp+0x50],0x0
0x437d: mov [rsp+0xf],0x1
0x4382: mov [rsp+0xd],0x0
0x4387: mov [rsp+0x18],0x1
0x4390: xor r15d,r15d
0x4393: mov qword ptr [rsp+0x48],rax
0x4398: jmp 0x33c3
0x439d: nop qword ptr [rax]
0x43ad: lea rax,[rip+0x10327]
0x43b4: mov [rsp+0xe],0x1
0x43b9: mov [rsp+0x7c],0x0
0x43be: xor r12d,r12d
0x43c1: mov [rsp+0x50],0x0
0x43ca: mov [rsp+0xf],0x1
0x43cf: mov [rsp+0xd],0x1
0x43d4: mov [rsp+0x18],0x1
0x43dd: xor r15d,r15d
0x43e0: mov qword ptr [rsp+0x48],rax
0x43e5: jmp 0x33c3
0x44e3: call 0x1990
0x44f2: mov rbp,r11
0x44f5: jmp 0x3e90
0x46ab: nop qword ptr [rax+rax*1+0x0]
0x46d1: call 0x1890
0x46d6: call 0x57e0
0x46e0: push r12
0x46e2: push rbp
0x46e3: push rbx
0x46e4: mov rbx,rdi
0x46e7: call 0x18a0
0x46ec: mov r12d,dword ptr [rax]
0x46ef: mov rbp,rax
0x46f2: lea rax,[rip+0x216cc7]
0x46f9: test rbx,rbx
0x46fc: mov esi,0x38
0x4701: cmove rbx,rax
0x4705: mov rdi,rbx
0x4708: call 0x5790
0x470d: mov dword ptr [rbp+0x0],r12d
0x4711: pop rbx
0x4712: pop rbp
0x4713: pop r12
0x4715: ret
0x4720: lea rax,[rip+0x216c99]
0x4727: test rdi,rdi
0x472a: cmove rdi,rax
0x472e: mov eax,dword ptr [rdi]
0x4730: ret
0x4740: lea rax,[rip+0x216c79]
0x4747: test rdi,rdi
0x474a: cmove rdi,rax
0x474e: mov dword ptr [rdi],esi
0x4750: ret
0x4760: lea rax,[rip+0x216c59]
0x4767: test rdi,rdi
0x476a: mov ecx,esi
0x476c: cmove rdi,rax
0x4770: mov eax,esi
0x4772: and ecx,0x1f
0x4775: shr al,0x5
0x4778: movzx eax,al
0x477b: lea rdi,[rdi+rax*4+0x8]
0x4780: mov esi,dword ptr [rdi]
0x4782: mov eax,esi
0x4784: shr eax,cl
0x4786: xor edx,eax
0x4788: and eax,0x1
0x478b: and edx,0x1
0x478e: shl edx,cl
0x4790: xor edx,esi
0x4792: mov dword ptr [rdi],edx
0x4794: ret
0x47a0: lea rax,[rip+0x216c19]
0x47a7: test rdi,rdi
0x47aa: cmove rdi,rax
0x47ae: mov eax,dword ptr [rdi+0x4]
0x47b1: mov dword ptr [rdi+0x4],esi
0x47b4: ret
0x47c0: lea rax,[rip+0x216bf9]
0x47c7: test rdi,rdi
0x47ca: cmove rdi,rax
0x47ce: test rsi,rsi
0x47d1: mov [rdi],0xa
0x47d7: jz 0x47e7
0x47d9: test rdx,rdx
0x47dc: jz 0x47e7
0x47de: mov qword ptr [rdi+0x28],rsi
0x47e2: mov qword ptr [rdi+0x30],rdx
0x47e6: ret
0x47e7: sub rsp,0x8
0x47eb: call 0x1890
0x47f0: push r15
0x47f2: push r14
0x47f4: lea rax,[rip+0x216bc5]
0x47fb: push r13
0x47fd: push r12
0x47ff: mov r13,rdi
0x4802: push rbp
0x4803: push rbx
0x4804: mov rbx,r8
0x4807: mov r14,rsi
0x480a: mov r15,rdx
0x480d: sub rsp,0x18
0x4811: test r8,r8
0x4814: cmove rbx,rax
0x4818: mov qword ptr [rsp+0x8],rcx
0x481d: call 0x18a0
0x4822: mov r12d,dword ptr [rax]
0x4825: mov rbp,rax
0x4828: lea rax,[rbx+0x8]
0x482c: sub rsp,0x8
0x4830: mov r9d,dword ptr [rbx+0x4]
0x4834: push qword ptr [rbx+0x30]
0x4837: mov r8d,dword ptr [rbx]
0x483a: push qword ptr [rbx+0x28]
0x483d: mov rdx,r15
0x4840: push rax
0x4841: mov rcx,qword ptr [rsp+0x28]
0x4846: mov rsi,r14
0x4849: mov rdi,r13
0x484c: call 0x32f0
0x4851: mov dword ptr [rbp+0x0],r12d
0x4855: add rsp,0x38
0x4859: pop rbx
0x485a: pop rbp
0x485b: pop r12
0x485d: pop r13
0x485f: pop r14
0x4861: pop r15
0x4863: ret
0x4870: push r15
0x4872: push r14
0x4874: lea rax,[rip+0x216b45]
0x487b: push r13
0x487d: push r12
0x487f: mov r12,rdx
0x4882: push rbp
0x4883: push rbx
0x4884: mov rbx,rcx
0x4887: mov r14,rdi
0x488a: mov r15,rsi
0x488d: sub rsp,0x38
0x4891: test rcx,rcx
0x4894: cmove rbx,rax
0x4898: xor ebp,ebp
0x489a: call 0x18a0
0x489f: test r12,r12
0x48a2: mov r13,rax
0x48a5: mov eax,dword ptr [rax]
0x48a7: setz bpl
0x48ab: or ebp,dword ptr [rbx+0x4]
0x48ae: lea r10,[rbx+0x8]
0x48b2: sub rsp,0x8
0x48b6: mov r8d,dword ptr [rbx]
0x48b9: mov rcx,r15
0x48bc: mov dword ptr [rsp+0x14],eax
0x48c0: push qword ptr [rbx+0x30]
0x48c3: mov rdx,r14
0x48c6: push qword ptr [rbx+0x28]
0x48c9: push r10
0x48cb: xor esi,esi
0x48cd: mov r9d,ebp
0x48d0: xor edi,edi
0x48d2: mov qword ptr [rsp+0x40],r10
0x48d7: call 0x32f0
0x48dc: lea rsi,[rax+0x1]
0x48e0: mov qword ptr [rsp+0x48],rax
0x48e5: add rsp,0x20
0x48e9: mov rdi,rsi
0x48ec: mov qword ptr [rsp+0x18],rsi
0x48f1: call 0x5590
0x48f6: mov qword ptr [rsp+0x10],rax
0x48fb: sub rsp,0x8
0x48ff: push qword ptr [rbx+0x30]
0x4902: push qword ptr [rbx+0x28]
0x4905: mov r10,qword ptr [rsp+0x38]
0x490a: mov r9d,ebp
0x490d: mov r8d,dword ptr [rbx]
0x4910: mov rcx,r15
0x4913: mov rdx,r14
0x4916: mov rdi,rax
0x4919: push r10
0x491b: mov rsi,qword ptr [rsp+0x38]
0x4920: call 0x32f0
0x4925: mov eax,dword ptr [rsp+0x2c]
0x4929: add rsp,0x20
0x492d: test r12,r12
0x4930: mov dword ptr [r13+0x0],eax
0x4934: jz 0x493f
0x4936: mov r11,qword ptr [rsp+0x28]
0x493b: mov qword ptr [r12],r11
0x493f: mov rax,qword ptr [rsp+0x10]
0x4944: add rsp,0x38
0x4948: pop rbx
0x4949: pop rbp
0x494a: pop r12
0x494c: pop r13
0x494e: pop r14
0x4950: pop r15
0x4952: ret
0x4960: mov rcx,rdx
0x4963: xor edx,edx
0x4965: jmp 0x4870
0x4970: mov eax,dword ptr [rip+0x2146e2]
0x4976: push r12
0x4978: mov r12,qword ptr [rip+0x2146e1]
0x497f: push rbp
0x4980: push rbx
0x4981: cmp eax,0x1
0x4984: jle 0x49b1
0x4986: sub eax,0x2
0x4989: lea rbx,[r12+0x18]
0x498e: shl rax,0x4
0x4992: lea rbp,[r12+rax*1+0x28]
0x4997: nop qword ptr [rax+rax*1+0x0]
0x49a0: mov rdi,qword ptr [rbx]
0x49a3: add rbx,0x10
0x49a7: call 0x1880
0x49ac: cmp rbx,rbp
0x49af: jnz 0x49a0
0x49b1: mov rdi,qword ptr [r12+0x8]
0x49b6: lea rbx,[rip+0x216903]
0x49bd: cmp rdi,rbx
0x49c0: jz 0x49d9
0x49c2: call 0x1880
0x49c7: mov [rip+0x21469e],0x100
0x49d2: mov qword ptr [rip+0x21469f],rbx
0x49d9: lea rbx,[rip+0x214690]
0x49e0: cmp r12,rbx
0x49e3: jz 0x49f4
0x49e5: mov rdi,r12
0x49e8: call 0x1880
0x49ed: mov qword ptr [rip+0x21466c],rbx
0x49f4: pop rbx
0x49f5: mov [rip+0x214659],0x1
0x49ff: pop rbp
0x4a00: pop r12
0x4a02: ret
0x4a10: lea rcx,[rip+0x2169a9]
0x4a17: mov rdx,0xffffffff
0x4a1e: jmp 0x4530
0x4a30: lea rcx,[rip+0x216989]
0x4a37: jmp 0x4530
0x4a40: lea rcx,[rip+0x216979]
0x4a47: mov rsi,rdi
0x4a4a: mov rdx,0xffffffff
0x4a51: xor edi,edi
0x4a53: jmp 0x4530
0x4a60: lea rcx,[rip+0x216959]
0x4a67: mov rdx,rsi
0x4a6a: mov rsi,rdi
0x4a6d: xor edi,edi
0x4a6f: jmp 0x4530
0x4aff: add rsp,0x48
0x4b03: ret
0x4b04: call 0x1890
0x4b10: sub rsp,0x48
0x4b14: mov rax,rdx
0x4b17: mov rdx,rcx
0x4b1a: mov rcx,0x28
0x4b23: mov qword ptr [rsp+0x38],rcx
0x4b28: xor ecx,ecx
0x4b2a: cmp esi,0xa
0x4b2d: jz 0x4b90
0x4b2f: mov dword ptr [rsp],esi
0x4b32: mov rcx,rsp
0x4b35: mov rsi,rax
0x4b38: mov [rsp+0x4],0x0
0x4b41: mov [rsp+0xc],0x0
0x4b4a: mov [rsp+0x14],0x0
0x4b53: mov [rsp+0x1c],0x0
0x4b5c: mov [rsp+0x24],0x0
0x4b65: mov [rsp+0x2c],0x0
0x4b6e: mov [rsp+0x34],0x0
0x4b76: call 0x4530
0x4b7b: mov rdx,qword ptr [rsp+0x38]
0x4b80: xor rdx,0x28
0x4b89: jnz 0x4b95
0x4b8b: add rsp,0x48
0x4b8f: ret
0x4b90: call 0x1890
0x4b95: call 0x1990
0x4bb0: mov rcx,rdx
0x4bb3: mov rdx,rsi
0x4bb6: mov esi,edi
0x4bb8: xor edi,edi
0x4bba: jmp 0x4b10
0x4bc0: sub rsp,0x48
0x4bc4: mov ecx,edx
0x4bc6: mov rax,0x28
0x4bcf: mov qword ptr [rsp+0x38],rax
0x4bd4: xor eax,eax
0x4bd6: mov rax,qword ptr [rip+0x216813]
0x4bdd: mov r8,rsp
0x4be0: and ecx,0x1f
0x4be3: movdqa xmm0,[rip+0x2167d5]
0x4beb: mov qword ptr [rsp+0x30],rax
0x4bf0: mov eax,edx
0x4bf2: movaps [rsp],xmm0
0x4bf6: shr al,0x5
0x4bf9: movzx eax,al
0x4bfc: lea r9,[r8+rax*4+0x8]
0x4c01: movdqa xmm0,[rip+0x2167c7]
0x4c09: movaps [rsp+0x10],xmm0
0x4c0e: movdqa xmm0,[rip+0x2167ca]
0x4c16: movaps [rsp+0x20],xmm0
0x4c1b: mov edx,dword ptr [r9]
0x4c1e: mov eax,edx
0x4c20: shr eax,cl
0x4c22: not eax
0x4c24: and eax,0x1
0x4c27: shl eax,cl
0x4c29: mov rcx,r8
0x4c2c: xor eax,edx
0x4c2e: mov rdx,rsi
0x4c31: mov rsi,rdi
0x4c34: mov dword ptr [r9],eax
0x4c37: xor edi,edi
0x4c39: call 0x4530
0x4c3e: mov rsi,qword ptr [rsp+0x38]
0x4c43: xor rsi,0x28
0x4c4c: jnz 0x4c53
0x4c4e: add rsp,0x48
0x4c52: ret
0x4c53: call 0x1990
0x4c60: movsx edx,sil
0x4c64: mov rsi,0xffffffff
0x4c6b: jmp 0x4bc0
0x4c70: mov edx,0x3a
0x4c75: mov rsi,0xffffffff
0x4c7c: jmp 0x4bc0
0x4c90: mov edx,0x3a
0x4c95: jmp 0x4bc0
0x4d1f: add rsp,0x48
0x4d23: ret
0x4d24: call 0x1890
0x4d30: sub rsp,0x48
0x4d34: mov r9,rcx
0x4d37: mov rcx,qword ptr [rip+0x2166b2]
0x4d3e: movdqa xmm0,[rip+0x21667a]
0x4d46: mov rax,0x28
0x4d4f: mov qword ptr [rsp+0x38],rax
0x4d54: xor eax,eax
0x4d56: movaps [rsp],xmm0
0x4d5a: test rsi,rsi
0x4d5d: mov qword ptr [rsp+0x30],rcx
0x4d62: mov [rsp],0xa
0x4d69: movdqa xmm0,[rip+0x21665f]
0x4d71: movaps [rsp+0x10],xmm0
0x4d76: movdqa xmm0,[rip+0x216662]
0x4d7e: movaps [rsp+0x20],xmm0
0x4d83: jz 0x4db7
0x4d85: test rdx,rdx
0x4d88: jz 0x4db7
0x4d8a: mov qword ptr [rsp+0x28],rsi
0x4d8f: mov qword ptr [rsp+0x30],rdx
0x4d94: mov rcx,rsp
0x4d97: mov rdx,r8
0x4d9a: mov rsi,r9
0x4d9d: call 0x4530
0x4da2: mov rdi,qword ptr [rsp+0x38]
0x4da7: xor rdi,0x28
0x4db0: jnz 0x4dbc
0x4db2: add rsp,0x48
0x4db6: ret
0x4db7: call 0x1890
0x4dbc: call 0x1990
0x4dd0: mov r8,0xffffffff
0x4dd7: jmp 0x4d30
0x4de0: mov rcx,rdx
0x4de3: mov r8,0xffffffff
0x4dea: mov rdx,rsi
0x4ded: mov rsi,rdi
0x4df0: xor edi,edi
0x4df2: jmp 0x4d30
0x4e00: mov r8,rcx
0x4e03: mov rcx,rdx
0x4e06: mov rdx,rsi
0x4e09: mov rsi,rdi
0x4e0c: xor edi,edi
0x4e0e: jmp 0x4d30
0x4e20: lea rcx,[rip+0x2141f9]
0x4e27: jmp 0x4530
0x4e30: lea rcx,[rip+0x2141e9]
0x4e37: mov rdx,rsi
0x4e3a: mov rsi,rdi
0x4e3d: xor edi,edi
0x4e3f: jmp 0x4530
0x4e50: lea rcx,[rip+0x2141c9]
0x4e57: mov rdx,0xffffffff
0x4e5e: jmp 0x4530
0x4e70: lea rcx,[rip+0x2141a9]
0x4e77: mov rsi,rdi
0x4e7a: mov rdx,0xffffffff
0x4e81: xor edi,edi
0x4e83: jmp 0x4530
0x4edf: nop 
0x4f10: push rbx
0x4f11: mov ebx,esi
0x4f13: call 0x19e0
0x4f18: mov esi,ebx
0x4f1a: mov edi,eax
0x4f1c: pop rbx
0x4f1d: jmp 0x13c50
0x5016: nop qword ptr [rax+rax*1+0x0]
0x50a5: nop qword ptr [rax]
0x50a8: mov r8,rcx
0x50ab: mov rcx,rdx
0x50ae: lea rdx,[rip+0xfaff]
0x50b5: mov esi,0x1
0x50ba: xor eax,eax
0x50bc: call 0x1c20
0x50c1: jmp 0x4fac
0x50c6: nop qword ptr [rax+rax*1+0x0]
0x5125: nop qword ptr [rax]
0x5161: nop qword ptr [rax+0x0]
0x51a8: nop qword ptr [rax+rax*1+0x0]
0x51f7: nop qword ptr [rax+rax*1+0x0]
0x5254: nop qword ptr [rax+0x0]
0x5282: nop qword ptr [rax+rax*1+0x0]
0x5336: nop qword ptr [rax+rax*1+0x0]
0x5390: xor r9d,r9d
0x5393: cmp [r8],0x0
0x5397: jz 0x53ab
0x5399: nop qword ptr [rax+0x0]
0x53a0: add r9,0x1
0x53a4: cmp [r8+r9*8+0x0],0x0
0x53a9: jnz 0x53a0
0x53ab: jmp 0x4f70
0x53b0: sub rsp,0x68
0x53b4: mov r10,r8
0x53b7: xor r9d,r9d
0x53ba: mov rax,0x28
0x53c3: mov qword ptr [rsp+0x58],rax
0x53c8: xor eax,eax
0x53ca: mov r8,rsp
0x53cd: nop qword ptr [rax]
0x53d0: mov eax,dword ptr [r10]
0x53d3: cmp eax,0x2f
0x53d6: jnbe 0x541a
0x53d8: mov r11d,eax
0x53db: add r11,qword ptr [r10+0x10]
0x53df: add eax,0x8
0x53e2: mov dword ptr [r10],eax
0x53e5: mov rax,qword ptr [r11]
0x53e8: test rax,rax
0x53eb: mov qword ptr [r8+r9*8+0x0],rax
0x53ef: jz 0x53fb
0x53f1: add r9,0x1
0x53f5: cmp r9,0xa
0x53f9: jnz 0x53d0
0x53fb: call 0x4f70
0x5400: mov rax,qword ptr [rsp+0x58]
0x5405: xor rax,0x28
0x540e: jnz 0x5415
0x5410: add rsp,0x68
0x5414: ret
0x5415: call 0x1990
0x541a: mov r11,qword ptr [r10+0x8]
0x541e: lea rax,[r11+0x8]
0x5422: mov qword ptr [r10+0x8],rax
0x5426: jmp 0x53e5
0x54f0: call 0x1990
0x54fc: mov rax,rbx
0x54ff: add rbx,0x8
0x5503: jmp 0x54b6
0x5510: push rbx
0x5511: lea rsi,[rip+0xf6ea]
0x5518: mov edx,0x5
0x551d: xor edi,edi
0x551f: call 0x1960
0x5524: lea rdx,[rip+0xf6ec]
0x552b: mov rsi,rax
0x552e: mov edi,0x1
0x5533: xor eax,eax
0x5535: call 0x1b60
0x553a: lea rsi,[rip+0xf6ec]
0x5541: mov edx,0x5
0x5546: xor edi,edi
0x5548: call 0x1960
0x554d: lea rcx,[rip+0xf034]
0x5554: lea rdx,[rip+0xec93]
0x555b: mov rsi,rax
0x555e: mov edi,0x1
0x5563: xor eax,eax
0x5565: call 0x1b60
0x556a: mov rbx,qword ptr [rip+0x213b17]
0x5571: lea rsi,[rip+0xf8e8]
0x5578: xor edi,edi
0x557a: mov edx,0x5
0x557f: call 0x1960
0x5584: mov rsi,rbx
0x5587: mov rdi,rax
0x558a: pop rbx
0x558b: jmp 0x1a60
0x55b0: mov rax,rdi
0x55b3: mul rsi
0x55b6: mov rdi,rax
0x55b9: seto al
0x55bc: test rdi,rdi
0x55bf: js 0x55cb
0x55c1: movzx eax,al
0x55c4: test rax,rax
0x55c7: jnz 0x55cb
0x55c9: jmp 0x5590
0x55cb: sub rsp,0x8
0x55cf: call 0x57e0
0x5612: nop qword ptr [rax+rax*1+0x0]
0x5630: mov rax,rsi
0x5633: mul rdx
0x5636: mov rsi,rax
0x5639: seto al
0x563c: test rsi,rsi
0x563f: js 0x564b
0x5641: movzx eax,al
0x5644: test rax,rax
0x5647: jnz 0x564b
0x5649: jmp 0x55f0
0x564b: sub rsp,0x8
0x564f: call 0x57e0
0x5660: test rdi,rdi
0x5663: mov r9,rdx
0x5666: mov rcx,qword ptr [rsi]
0x5669: jz 0x56a0
0x566b: xor edx,edx
0x566d: mov rax,0x6148914691236517204
0x5677: div r9
0x567a: cmp rax,rcx
0x567d: jbe 0x56bb
0x567f: mov rax,rcx
0x5682: shr rax,0x1
0x5685: lea rcx,[rax+rcx*1+0x1]
0x568a: mov qword ptr [rsi],rcx
0x568d: imul rcx,r9
0x5691: mov rsi,rcx
0x5694: jmp 0x55f0
0x5699: nop qword ptr [rax+0x0]
0x56a0: test rcx,rcx
0x56a3: jz 0x56c8
0x56a5: mov rax,rcx
0x56a8: mul r9
0x56ab: seto dl
0x56ae: test rax,rax
0x56b1: movzx edx,dl
0x56b4: js 0x56bb
0x56b6: test rdx,rdx
0x56b9: jz 0x568a
0x56bb: sub rsp,0x8
0x56bf: call 0x57e0
0x56c4: nop qword ptr [rax+0x0]
0x56c8: xor edx,edx
0x56ca: mov eax,0x80
0x56cf: xor r8d,r8d
0x56d2: div r9
0x56d5: test rax,rax
0x56d8: setz r8b
0x56dc: lea rcx,[r8+rax*1+0x0]
0x56e0: jmp 0x56a5
0x56f0: test rdi,rdi
0x56f3: mov rax,qword ptr [rsi]
0x56f6: jz 0x5720
0x56f8: mov rdx,0x6148914691236517203
0x5702: cmp rax,rdx
0x5705: jnbe 0x5731
0x5707: mov rdx,rax
0x570a: shr rdx,0x1
0x570d: lea rax,[rdx+rax*1+0x1]
0x5712: mov qword ptr [rsi],rax
0x5715: mov rsi,rax
0x5718: jmp 0x55f0
0x571d: nop qword ptr [rax]
0x5720: test rax,rax
0x5723: mov edx,0x80
0x5728: cmove rax,rdx
0x572c: test rax,rax
0x572f: jns 0x5712
0x5731: sub rsp,0x8
0x5735: call 0x57e0
0x5740: push rbx
0x5741: mov rbx,rdi
0x5744: call 0x5590
0x5749: mov rdx,rbx
0x574c: xor esi,esi
0x574e: mov rdi,rax
0x5751: pop rbx
0x5752: jmp 0x1a10
0x5760: mov rax,rdi
0x5763: sub rsp,0x8
0x5767: mul rsi
0x576a: seto dl
0x576d: test rax,rax
0x5770: js 0x5789
0x5772: movzx edx,dl
0x5775: test rdx,rdx
0x5778: jnz 0x5789
0x577a: call 0x1a70
0x577f: test rax,rax
0x5782: jz 0x5789
0x5784: add rsp,0x8
0x5788: ret
0x5789: call 0x57e0
0x5790: push rbp
0x5791: push rbx
0x5792: mov rbp,rdi
0x5795: mov rdi,rsi
0x5798: mov rbx,rsi
0x579b: sub rsp,0x8
0x579f: call 0x5590
0x57a4: add rsp,0x8
0x57a8: mov rdx,rbx
0x57ab: mov rsi,rbp
0x57ae: pop rbx
0x57af: pop rbp
0x57b0: mov rdi,rax
0x57b3: jmp 0x1a90
0x57c0: push rbx
0x57c1: mov rbx,rdi
0x57c4: call 0x1980
0x57c9: mov rdi,rbx
0x57cc: lea rsi,[rax+0x1]
0x57d0: pop rbx
0x57d1: jmp 0x5790
0x5810: call 0x1890
0x582f: nop 
0x596e: nop 
0x5977: nop qword ptr [rax+rax*1+0x0]
0x59c9: nop qword ptr [rax+0x0]
0x59dd: nop qword ptr [rax]
0x59ea: nop qword ptr [rax+rax*1+0x0]
0x59fa: nop qword ptr [rax+rax*1+0x0]
0x5a16: nop qword ptr [rax+rax*1+0x0]
0x5a2a: nop qword ptr [rax+rax*1+0x0]
0x5a40: cmp [rsi+0x30],0x11
0x5a44: jz 0x5a50
0x5a46: xor eax,eax
0x5a48: ret
0x5a49: nop qword ptr [rax+0x0]
0x5a50: cmp rdi,qword ptr [rsi+0x28]
0x5a54: jnz 0x5a46
0x5a56: or [rsi+0x32],0x8
0x5a5a: xor eax,eax
0x5a5c: ret
0x5a60: push r15
0x5a62: push r14
0x5a64: mov r9,rdx
0x5a67: push r13
0x5a69: push r12
0x5a6b: lea rdx,[rcx+rcx*2+0x0]
0x5a6f: push rbp
0x5a70: push rbx
0x5a71: mov r15d,esi
0x5a74: sub rsp,0x48
0x5a78: mov r14,qword ptr [rdi+0x98]
0x5a7f: mov qword ptr [rsp],rdi
0x5a83: mov rax,qword ptr [r14+0x30]
0x5a87: lea r12,[rax+rdx*8+0x0]
0x5a8b: cmp [r12+0x8],0x0
0x5a91: jle 0x5c25
0x5a97: lea rax,[r8+r8*4+0x0]
0x5a9b: mov r11,rcx
0x5a9e: mov ecx,r9d
0x5aa1: mov r10,r8
0x5aa4: xor ebx,ebx
0x5aa6: mov dword ptr [rsp+0x20],esi
0x5aaa: shl rax,0x3
0x5aae: mov r15,r9
0x5ab1: mov qword ptr [rsp+0x10],r11
0x5ab6: mov qword ptr [rsp+0x28],rax
0x5abb: mov eax,0x1
0x5ac0: shl rax,cl
0x5ac3: mov qword ptr [rsp+0x18],rax
0x5ac8: not eax
0x5aca: mov word ptr [rsp+0x26],ax
0x5acf: mov eax,esi
0x5ad1: and eax,0x1
0x5ad4: mov dword ptr [rsp+0xc],eax
0x5ad8: mov eax,esi
0x5ada: and eax,0x2
0x5add: mov dword ptr [rsp+0x8],eax
0x5ae1: jmp 0x5b05
0x5ae3: nop qword ptr [rax+rax*1+0x0]
0x5ae8: cmp dl,0x9
0x5aeb: jz 0x5c40
0x5af1: cmp dl,0x4
0x5af4: jz 0x5b48
0x5af6: add rbx,0x1
0x5afa: cmp qword ptr [r12+0x8],rbx
0x5aff: jle 0x5c20
0x5b05: mov rax,qword ptr [r12+0x10]
0x5b0a: mov rbp,qword ptr [rax+rbx*8+0x0]
0x5b0e: mov rax,rbp
0x5b11: shl rax,0x4
0x5b15: add rax,qword ptr [r14]
0x5b18: movzx edx,byte ptr [rax+0x8]
0x5b1c: cmp dl,0x8
0x5b1f: jnz 0x5ae8
0x5b21: mov ecx,dword ptr [rsp+0xc]
0x5b25: test ecx,ecx
0x5b27: jz 0x5af6
0x5b29: cmp qword ptr [rax],r15
0x5b2c: jnz 0x5af6
0x5b2e: add rsp,0x48
0x5b32: mov eax,0xffffffff
0x5b37: pop rbx
0x5b38: pop rbp
0x5b39: pop r12
0x5b3b: pop r13
0x5b3d: pop r14
0x5b3f: pop r15
0x5b41: ret
0x5b42: nop qword ptr [rax+rax*1+0x0]
0x5b48: cmp r10,0xffffffff
0x5b4c: jz 0x5af6
0x5b4e: mov rax,qword ptr [rsp]
0x5b52: mov r13,qword ptr [rsp+0x28]
0x5b57: mov rdi,rbp
0x5b5a: mov qword ptr [rsp+0x30],r12
0x5b5f: mov qword ptr [rsp+0x38],rbx
0x5b64: mov r12,r10
0x5b67: add r13,qword ptr [rax+0xd8]
0x5b6e: lea rax,[rbp+rbp*2+0x0]
0x5b73: mov rbp,r14
0x5b76: mov r14,rdi
0x5b79: shl rax,0x3
0x5b7d: mov rbx,rax
0x5b80: cmp qword ptr [r13+0x0],r14
0x5b84: jnz 0x5bf0
0x5b86: cmp r15,0x3f
0x5b8a: jnle 0x5b98
0x5b8c: movzx eax,byte ptr [r13+0x22]
0x5b91: test qword ptr [rsp+0x18],rax
0x5b96: jz 0x5bf0
0x5b98: mov rax,qword ptr [rbp+0x28]
0x5b9c: mov rax,qword ptr [rax+rbx*1+0x10]
0x5ba1: mov rcx,qword ptr [rax]
0x5ba4: cmp qword ptr [rsp+0x10],rcx
0x5ba9: jz 0x5c70
0x5baf: mov esi,dword ptr [rsp+0x20]
0x5bb3: mov rdi,qword ptr [rsp]
0x5bb7: mov r8,r12
0x5bba: mov rdx,r15
0x5bbd: call 0x5a60
0x5bc2: cmp eax,0xff
0x5bc5: jz 0x5b2e
0x5bcb: test eax,eax
0x5bcd: jnz 0x5bd7
0x5bcf: mov esi,dword ptr [rsp+0x8]
0x5bd3: test esi,esi
0x5bd5: jnz 0x5c55
0x5bd7: cmp r15,0x3f
0x5bdb: jnle 0x5bf0
0x5bdd: movzx eax,byte ptr [rsp+0x26]
0x5be2: and word ptr [r13+0x22],ax
0x5be7: nop qword ptr [rax+rax*1+0x0]
0x5bf0: add r13,0x28
0x5bf4: cmp [r13-0x8],0x0
0x5bf9: jnz 0x5b80
0x5bfb: mov rbx,qword ptr [rsp+0x38]
0x5c00: mov r10,r12
0x5c03: mov r12,qword ptr [rsp+0x30]
0x5c08: mov r14,rbp
0x5c0b: add rbx,0x1
0x5c0f: cmp qword ptr [r12+0x8],rbx
0x5c14: jnle 0x5b05
0x5c1a: nop qword ptr [rax+rax*1+0x0]
0x5c20: mov r15d,dword ptr [rsp+0x20]
0x5c25: add rsp,0x48
0x5c29: mov eax,r15d
0x5c2c: pop rbx
0x5c2d: sar eax,0x1
0x5c2f: pop rbp
0x5c30: pop r12
0x5c32: pop r13
0x5c34: pop r14
0x5c36: pop r15
0x5c38: ret
0x5c39: nop qword ptr [rax+0x0]
0x5c40: mov edx,dword ptr [rsp+0x8]
0x5c44: test edx,edx
0x5c46: jz 0x5af6
0x5c4c: cmp qword ptr [rax],r15
0x5c4f: jnz 0x5af6
0x5c55: add rsp,0x48
0x5c59: xor eax,eax
0x5c5b: pop rbx
0x5c5c: pop rbp
0x5c5d: pop r12
0x5c5f: pop r13
0x5c61: pop r14
0x5c63: pop r15
0x5c65: ret
0x5c66: nop qword ptr [rax+rax*1+0x0]
0x5c70: mov r15d,dword ptr [rsp+0x20]
0x5c75: add rsp,0x48
0x5c79: pop rbx
0x5c7a: pop rbp
0x5c7b: mov eax,r15d
0x5c7e: and eax,0x1
0x5c81: pop r12
0x5c83: neg eax
0x5c85: pop r13
0x5c87: pop r14
0x5c89: pop r15
0x5c8b: ret
0x5c90: mov rax,qword ptr [rdi+0xd8]
0x5c97: lea rsi,[rsi+rsi*4+0x0]
0x5c9b: lea rax,[rax+rsi*8+0x0]
0x5c9f: mov r10,qword ptr [rax+0x10]
0x5ca3: cmp r10,r8
0x5ca6: jnle 0x5cf0
0x5ca8: mov rax,qword ptr [rax+0x18]
0x5cac: cmp rax,r8
0x5caf: jl 0x5cd0
0x5cb1: xor esi,esi
0x5cb3: cmp r10,r8
0x5cb6: setz sil
0x5cba: or esi,0x2
0x5cbd: cmp rax,r8
0x5cc0: jz 0x5ce5
0x5cc2: xor eax,eax
0x5cc4: cmp r10,r8
0x5cc7: jz 0x5ce0
0x5cc9: rep ret
0x5ccb: nop qword ptr [rax+rax*1+0x0]
0x5cd0: mov eax,0x1
0x5cd5: ret
0x5cd6: nop qword ptr [rax+rax*1+0x0]
0x5ce0: mov esi,0x1
0x5ce5: mov r8,r9
0x5ce8: jmp 0x5a60
0x5ced: nop qword ptr [rax]
0x5cf0: mov eax,0xffffffff
0x5cf5: ret
0x5d0f: nop 
0x5d7f: nop 
0x5d9d: nop qword ptr [rax]
0x5e43: nop qword ptr [rax+rax*1+0x0]
0x5e5f: nop 
0x5ea1: nop qword ptr [rax+0x0]
0x5ece: nop 
0x5f15: nop qword ptr [rax]
0x5f4d: nop qword ptr [rax]
0x5f96: nop qword ptr [rax+rax*1+0x0]
0x5fc4: nop qword ptr [rax+0x0]
0x5fdc: nop qword ptr [rax+0x0]
0x6057: nop qword ptr [rax+rax*1+0x0]
0x609c: nop qword ptr [rax+0x0]
0x6162: nop qword ptr [rax+rax*1+0x0]
0x6168: movzx edx,byte ptr [rcx+rdx*1+0x0]
0x616c: jmp 0x613f
0x6170: push r15
0x6172: push r14
0x6174: push r13
0x6176: push r12
0x6178: push rbp
0x6179: push rbx
0x617a: mov rbx,rdi
0x617d: sub rsp,0x68
0x6181: mov r12,qword ptr [rdi+0x58]
0x6185: mov rbp,qword ptr [rdi+0x30]
0x6189: mov rax,0x28
0x6192: mov qword ptr [rsp+0x58],rax
0x6197: xor eax,eax
0x6199: cmp qword ptr [rdi+0x40],r12
0x619d: cmovng r12,qword ptr [rdi+0x40]
0x61a2: cmp r12,rbp
0x61a5: jle 0x6234
0x61ab: lea r14,[rdi+0x20]
0x61af: lea r13,[rsp+0xc]
0x61b4: nop qword ptr [rax+0x0]
0x61b8: mov rdi,qword ptr [rbx+0x78]
0x61bc: mov rdx,r12
0x61bf: mov r15,qword ptr [rbx+0x20]
0x61c3: sub rdx,rbp
0x61c6: test rdi,rdi
0x61c9: jnz 0x62b0
0x61cf: mov rsi,qword ptr [rbx+0x28]
0x61d3: add rsi,rbp
0x61d6: add rsi,qword ptr [rbx]
0x61d9: mov rcx,r14
0x61dc: mov rdi,r13
0x61df: call 0x5880
0x61e4: lea rdx,[rax-0x1]
0x61e8: cmp rdx,0xfffffffd
0x61ec: jnbe 0x6280
0x61f2: cmp rax,0xfffffffe
0x61f6: mov edx,dword ptr [rsp+0xc]
0x61fa: jz 0x6270
0x61fc: mov rcx,qword ptr [rbx+0x10]
0x6200: lea rsi,[rbp+0x1]
0x6204: lea rdi,[rbp*4+0x0]
0x620c: mov dword ptr [rcx+rbp*4+0x0],edx
0x620f: add rbp,rax
0x6212: cmp rsi,rbp
0x6215: jnl 0x6260
0x6217: lea rdx,[rcx+rdi*1+0x4]
0x621c: lea rax,[rcx+rbp*4+0x0]
0x6220: mov [rdx],0xffffffff
0x6226: add rdx,0x4
0x622a: cmp rax,rdx
0x622d: jnz 0x6220
0x622f: cmp rbp,r12
0x6232: jl 0x61b8
0x6234: mov rax,qword ptr [rsp+0x58]
0x6239: xor rax,0x28
0x6242: mov qword ptr [rbx+0x30],rbp
0x6246: mov qword ptr [rbx+0x38],rbp
0x624a: jnz 0x632e
0x6250: add rsp,0x68
0x6254: pop rbx
0x6255: pop rbp
0x6256: pop r12
0x6258: pop r13
0x625a: pop r14
0x625c: pop r15
0x625e: ret
0x625f: nop 
0x6260: mov rbp,rsi
0x6263: cmp rbp,r12
0x6266: jl 0x61b8
0x626c: jmp 0x6234
0x626e: nop 
0x6270: mov rax,qword ptr [rbx+0x58]
0x6274: cmp qword ptr [rbx+0x40],rax
0x6278: jl 0x6318
0x627e: nop 
0x6280: mov rax,qword ptr [rbx]
0x6283: mov rcx,qword ptr [rbx+0x78]
0x6287: add rax,rbp
0x628a: add rax,qword ptr [rbx+0x28]
0x628e: test rcx,rcx
0x6291: movzx edx,byte ptr [rax]
0x6294: mov dword ptr [rsp+0xc],edx
0x6298: jnz 0x6321
0x629e: mov qword ptr [rbx+0x20],r15
0x62a2: mov eax,0x1
0x62a7: jmp 0x61fc
0x62ac: nop qword ptr [rax+0x0]
0x62b0: mov ecx,dword ptr [rbx+0x90]
0x62b6: xor eax,eax
0x62b8: lea rsi,[rsp+0x10]
0x62bd: test ecx,ecx
0x62bf: jnle 0x62e1
0x62c1: jmp 0x61d9
0x62c6: nop qword ptr [rax+rax*1+0x0]
0x62d0: add rax,0x1
0x62d4: cmp rdx,rax
0x62d7: jz 0x61d9
0x62dd: mov rdi,qword ptr [rbx+0x78]
0x62e1: mov rcx,qword ptr [rbx]
0x62e4: add rcx,rbp
0x62e7: add rcx,rax
0x62ea: add rcx,qword ptr [rbx+0x28]
0x62ee: movzx ecx,byte ptr [rcx]
0x62f1: movzx ecx,byte ptr [rdi+rcx*1+0x0]
0x62f5: mov rdi,qword ptr [rbx+0x8]
0x62f9: add rdi,rbp
0x62fc: mov byte ptr [rdi+rax*1+0x0],cl
0x62ff: mov byte ptr [rsi+rax*1+0x0],cl
0x6302: lea ecx,[rax+0x1]
0x6305: cmp ecx,dword ptr [rbx+0x90]
0x630b: jl 0x62d0
0x630d: jmp 0x61d9
0x6312: nop qword ptr [rax+rax*1+0x0]
0x6318: mov qword ptr [rbx+0x20],r15
0x631c: jmp 0x6234
0x6321: movzx edx,byte ptr [rcx+rdx*1+0x0]
0x6325: mov dword ptr [rsp+0xc],edx
0x6329: jmp 0x629e
0x632e: call 0x1990
0x63c8: nop qword ptr [rax+rax*1+0x0]
0x6507: nop qword ptr [rax+rax*1+0x0]
0x6645: nop qword ptr [rax]
0x6663: nop qword ptr [rax+rax*1+0x0]
0x6693: nop qword ptr [rax+rax*1+0x0]
0x66c7: nop qword ptr [rax+rax*1+0x0]
0x6755: nop qword ptr [rax]
0x693a: call 0x1990
0x6960: push rbp
0x6961: push rbx
0x6962: mov rdx,0x1152921504606846974
0x696c: sub rsp,0x8
0x6970: mov rax,qword ptr [rdi+0x40]
0x6974: cmp rax,rdx
0x6977: jnbe 0x6a88
0x697d: mov rdx,qword ptr [rdi+0x58]
0x6981: add rax,rax
0x6984: movsxd rsi,esi
0x6987: mov rbx,rdi
0x698a: cmp rax,rdx
0x698d: cmovnl rax,rdx
0x6991: cmp rax,rsi
0x6994: cmovnl rsi,rax
0x6998: call 0x5dd0
0x699d: test eax,eax
0x699f: mov ebp,eax
0x69a1: jnz 0x6a5d
0x69a7: mov rdi,qword ptr [rbx+0xb8]
0x69ae: test rdi,rdi
0x69b1: jz 0x69d4
0x69b3: mov rax,qword ptr [rbx+0x40]
0x69b7: lea rsi,[rax*8+0x8]
0x69bf: call 0x1b30
0x69c4: test rax,rax
0x69c7: jz 0x6a88
0x69cd: mov qword ptr [rbx+0xb8],rax
0x69d4: cmp [rbx+0x88],0x0
0x69db: mov eax,dword ptr [rbx+0x90]
0x69e1: jz 0x6a00
0x69e3: cmp eax,0x1
0x69e6: mov rdi,rbx
0x69e9: jle 0x6aa0
0x69ef: add rsp,0x8
0x69f3: pop rbx
0x69f4: pop rbp
0x69f5: jmp 0x6340
0x69fa: nop qword ptr [rax+rax*1+0x0]
0x6a00: cmp eax,0x1
0x6a03: jnle 0x6a70
0x6a05: mov rcx,qword ptr [rbx+0x78]
0x6a09: test rcx,rcx
0x6a0c: jz 0x6a5d
0x6a0e: mov rsi,qword ptr [rbx+0x58]
0x6a12: cmp qword ptr [rbx+0x40],rsi
0x6a16: cmovng rsi,qword ptr [rbx+0x40]
0x6a1b: mov rax,qword ptr [rbx+0x30]
0x6a1f: cmp rsi,rax
0x6a22: jnle 0x6a34
0x6a24: jmp 0x6a55
0x6a26: nop qword ptr [rax+rax*1+0x0]
0x6a30: mov rcx,qword ptr [rbx+0x78]
0x6a34: mov rdx,qword ptr [rbx]
0x6a37: add rdx,rax
0x6a3a: add rdx,qword ptr [rbx+0x28]
0x6a3e: movzx edx,byte ptr [rdx]
0x6a41: movzx ecx,byte ptr [rcx+rdx*1+0x0]
0x6a45: mov rdx,qword ptr [rbx+0x8]
0x6a49: mov byte ptr [rdx+rax*1+0x0],cl
0x6a4c: add rax,0x1
0x6a50: cmp rsi,rax
0x6a53: jnz 0x6a30
0x6a55: mov qword ptr [rbx+0x30],rax
0x6a59: mov qword ptr [rbx+0x38],rax
0x6a5d: add rsp,0x8
0x6a61: mov eax,ebp
0x6a63: pop rbx
0x6a64: pop rbp
0x6a65: ret
0x6a66: nop qword ptr [rax+rax*1+0x0]
0x6a70: mov rdi,rbx
0x6a73: call 0x6170
0x6a78: add rsp,0x8
0x6a7c: mov eax,ebp
0x6a7e: pop rbx
0x6a7f: pop rbp
0x6a80: ret
0x6a81: nop qword ptr [rax+0x0]
0x6a88: mov ebp,0xc
0x6a8d: add rsp,0x8
0x6a91: mov eax,ebp
0x6a93: pop rbx
0x6a94: pop rbp
0x6a95: ret
0x6a96: nop qword ptr [rax+rax*1+0x0]
0x6aa0: call 0x6100
0x6aa5: add rsp,0x8
0x6aa9: mov eax,ebp
0x6aab: pop rbx
0x6aac: pop rbp
0x6aad: ret
0x6ab0: push r12
0x6ab2: push rbp
0x6ab3: mov rbp,rsi
0x6ab6: push rbx
0x6ab7: mov rax,qword ptr [rdi+0x40]
0x6abb: mov rbx,rdi
0x6abe: mov r12,qword ptr [rdi+0xc0]
0x6ac5: cmp rax,rsi
0x6ac8: jnle 0x6af0
0x6aca: cmp rax,qword ptr [rdi+0x58]
0x6ace: jnl 0x6af0
0x6ad0: lea esi,[rbp+0x1]
0x6ad3: mov rdi,rbx
0x6ad6: call 0x6960
0x6adb: test eax,eax
0x6add: jnz 0x6ae6
0x6adf: cmp r12,rbp
0x6ae2: jl 0x6b10
0x6ae4: xor eax,eax
0x6ae6: pop rbx
0x6ae7: pop rbp
0x6ae8: pop r12
0x6aea: ret
0x6aeb: nop qword ptr [rax+rax*1+0x0]
0x6af0: mov rax,qword ptr [rbx+0x30]
0x6af4: cmp rax,rbp
0x6af7: jnle 0x6adf
0x6af9: cmp rax,qword ptr [rbx+0x58]
0x6afd: jnl 0x6adf
0x6aff: lea esi,[rbp+0x1]
0x6b02: mov rdi,rbx
0x6b05: call 0x6960
0x6b0a: test eax,eax
0x6b0c: jz 0x6adf
0x6b0e: jmp 0x6ae6
0x6b10: mov rax,qword ptr [rbx+0xb8]
0x6b17: mov rdx,rbp
0x6b1a: xor esi,esi
0x6b1c: sub rdx,r12
0x6b1f: shl rdx,0x3
0x6b23: lea rdi,[rax+r12*8+0x8]
0x6b28: call 0x1a10
0x6b2d: mov qword ptr [rbx+0xc0],rbp
0x6b34: jmp 0x6ae4
0x6b84: nop qword ptr [rax+0x0]
0x6c8b: nop qword ptr [rax+rax*1+0x0]
0x6d4c: nop qword ptr [rax+0x0]
0x6ee2: nop qword ptr [rax+rax*1+0x0]
0x6f6f: nop 
0x6fb9: nop qword ptr [rax+0x0]
0x7016: nop qword ptr [rax+rax*1+0x0]
0x7131: nop qword ptr [rax+0x0]
0x716f: nop 
0x72b0: push r14
0x72b2: push r13
0x72b4: mov r14,rdi
0x72b7: push r12
0x72b9: push rbp
0x72ba: push rbx
0x72bb: cmp [rdi+0xe8],0x0
0x72c3: jle 0x7349
0x72c9: xor r13d,r13d
0x72cc: nop qword ptr [rax+0x0]
0x72d0: mov rax,qword ptr [r14+0xf8]
0x72d7: mov r12,qword ptr [rax+r13*8+0x0]
0x72db: cmp [r12+0x20],0x0
0x72e1: jle 0x730d
0x72e3: xor ebx,ebx
0x72e5: nop qword ptr [rax]
0x72e8: mov rax,qword ptr [r12+0x28]
0x72ed: mov rbp,qword ptr [rax+rbx*8+0x0]
0x72f1: add rbx,0x1
0x72f5: mov rdi,qword ptr [rbp+0x20]
0x72f9: call 0x1880
0x72fe: mov rdi,rbp
0x7301: call 0x1880
0x7306: cmp qword ptr [r12+0x20],rbx
0x730b: jnle 0x72e8
0x730d: mov rdi,qword ptr [r12+0x28]
0x7312: call 0x1880
0x7317: mov rax,qword ptr [r12+0x10]
0x731c: test rax,rax
0x731f: jz 0x7334
0x7321: mov rdi,qword ptr [rax+0x10]
0x7325: call 0x1880
0x732a: mov rdi,qword ptr [r12+0x10]
0x732f: call 0x1880
0x7334: mov rdi,r12
0x7337: add r13,0x1
0x733b: call 0x1880
0x7340: cmp qword ptr [r14+0xe8],r13
0x7347: jnle 0x72d0
0x7349: pop rbx
0x734a: mov [r14+0xe8],0x0
0x7355: mov [r14+0xc8],0x0
0x7360: pop rbp
0x7361: pop r12
0x7363: pop r13
0x7365: pop r14
0x7367: ret
0x739e: nop 
0x73b4: nop qword ptr [rax+0x0]
0x73ce: nop 
0x73de: nop 
0x7408: nop qword ptr [rax+rax*1+0x0]
0x7444: nop qword ptr [rax+0x0]
0x7467: nop qword ptr [rax+rax*1+0x0]
0x7489: nop qword ptr [rax+0x0]
0x74a0: push r15
0x74a2: push r14
0x74a4: lea r14,[rsi+0x10]
0x74a8: push r13
0x74aa: push r12
0x74ac: mov r15,rcx
0x74af: push rbp
0x74b0: push rbx
0x74b1: mov r12,rdi
0x74b4: mov rbp,rsi
0x74b7: mov rbx,rdx
0x74ba: mov r13d,r8d
0x74bd: sub rsp,0x8
0x74c1: mov rdi,qword ptr [rbp+0x8]
0x74c5: mov rdx,rbx
0x74c8: mov rsi,r14
0x74cb: call 0x7420
0x74d0: test rax,rax
0x74d3: jnz 0x7540
0x74d5: mov rax,rbx
0x74d8: shl rax,0x4
0x74dc: add rax,qword ptr [r12]
0x74e0: movzx edx,byte ptr [rax+0x8]
0x74e4: cmp edx,r13d
0x74e7: jnz 0x74ee
0x74e9: cmp qword ptr [rax],r15
0x74ec: jz 0x7528
0x74ee: mov rsi,rbx
0x74f1: mov rdi,rbp
0x74f4: call 0x5ee0
0x74f9: test al,al
0x74fb: jz 0x7558
0x74fd: lea rbx,[rbx+rbx*2+0x0]
0x7501: mov rdx,qword ptr [r12+0x28]
0x7506: shl rbx,0x3
0x750a: add rdx,rbx
0x750d: mov rax,qword ptr [rdx+0x8]
0x7511: test rax,rax
0x7514: jz 0x7540
0x7516: cmp rax,0x2
0x751a: mov rdx,qword ptr [rdx+0x10]
0x751e: jz 0x7570
0x7520: mov rbx,qword ptr [rdx]
0x7523: jmp 0x74c1
0x7525: nop qword ptr [rax]
0x7528: cmp r13d,0x9
0x752c: jnz 0x7540
0x752e: mov rsi,rbx
0x7531: mov rdi,rbp
0x7534: call 0x5ee0
0x7539: test al,al
0x753b: jz 0x7558
0x753d: nop qword ptr [rax]
0x7540: xor eax,eax
0x7542: add rsp,0x8
0x7546: pop rbx
0x7547: pop rbp
0x7548: pop r12
0x754a: pop r13
0x754c: pop r14
0x754e: pop r15
0x7550: ret
0x7551: nop qword ptr [rax+0x0]
0x7558: add rsp,0x8
0x755c: mov eax,0xc
0x7561: pop rbx
0x7562: pop rbp
0x7563: pop r12
0x7565: pop r13
0x7567: pop r14
0x7569: pop r15
0x756b: ret
0x756c: nop qword ptr [rax+0x0]
0x7570: mov rdx,qword ptr [rdx+0x8]
0x7574: mov r8d,r13d
0x7577: mov rcx,r15
0x757a: mov rsi,rbp
0x757d: mov rdi,r12
0x7580: call 0x74a0
0x7585: test eax,eax
0x7587: jnz 0x7542
0x7589: mov rax,qword ptr [r12+0x28]
0x758e: mov rdx,qword ptr [rax+rbx*1+0x10]
0x7593: jmp 0x7520
0x75ef: nop 
0x763f: nop 
0x76a1: nop qword ptr [rax+0x0]
0x76bf: nop 
0x76d0: push r15
0x76d2: push r14
0x76d4: push r13
0x76d6: push r12
0x76d8: push rbp
0x76d9: push rbx
0x76da: xor ebx,ebx
0x76dc: sub rsp,0x48
0x76e0: mov rax,qword ptr [rdi+0x98]
0x76e7: mov r15,qword ptr [rdi+0xc8]
0x76ee: mov r12,qword ptr [rsp+0x80]
0x76f6: mov qword ptr [rsp+0x8],rax
0x76fb: mov rbp,r15
0x76fe: cmp rbx,rbp
0x7701: jnl 0x775b
0x7703: lea rax,[rbx+rbp*1+0x0]
0x7707: mov r13,qword ptr [rdi+0xd8]
0x770e: mov r10,rax
0x7711: shr r10,0x3f
0x7715: add r10,rax
0x7718: sar r10,0x1
0x771b: lea rax,[r10+r10*4+0x0]
0x771f: cmp r8,qword ptr [r13+rax*8+0x8]
0x7724: jle 0x7756
0x7726: jmp 0x78c0
0x772b: nop qword ptr [rax+rax*1+0x0]
0x7730: lea r11,[rbx+r10*1+0x0]
0x7734: mov rax,r11
0x7737: shr rax,0x3f
0x773b: add rax,r11
0x773e: sar rax,0x1
0x7741: lea r11,[rax+rax*4+0x0]
0x7745: mov r14,rax
0x7748: cmp qword ptr [r13+r11*8+0x8],r8
0x774d: jl 0x78d0
0x7753: mov r10,rax
0x7756: cmp rbx,r10
0x7759: jl 0x7730
0x775b: cmp r15,rbx
0x775e: jle 0x7900
0x7764: mov r11,qword ptr [rdi+0xd8]
0x776b: lea rax,[rbx+rbx*4+0x0]
0x776f: lea rax,[r11+rax*8+0x0]
0x7773: cmp r8,qword ptr [rax+0x8]
0x7777: mov rax,0xffffffff
0x777e: cmovne rbx,rax
0x7782: mov rax,r15
0x7785: xor ebp,ebp
0x7787: cmp rbp,rax
0x778a: jnl 0x77e4
0x778c: lea r11,[rbp+rax*1+0x0]
0x7791: mov r10,r11
0x7794: shr r10,0x3f
0x7798: add r10,r11
0x779b: mov r11,qword ptr [rdi+0xd8]
0x77a2: sar r10,0x1
0x77a5: lea r13,[r10+r10*4+0x0]
0x77a9: cmp r12,qword ptr [r11+r13*8+0x8]
0x77ae: jle 0x77df
0x77b0: jmp 0x78e0
0x77b5: nop qword ptr [rax]
0x77b8: lea r13,[rbp+r10*1+0x0]
0x77bd: mov rax,r13
0x77c0: shr rax,0x3f
0x77c4: add rax,r13
0x77c7: sar rax,0x1
0x77ca: lea r13,[rax+rax*4+0x0]
0x77ce: mov r14,rax
0x77d1: cmp qword ptr [r11+r13*8+0x8],r12
0x77d6: jl 0x78f0
0x77dc: mov r10,rax
0x77df: cmp rbp,r10
0x77e2: jl 0x77b8
0x77e4: cmp r15,rbp
0x77e7: jle 0x7910
0x77ed: mov r10,qword ptr [rdi+0xd8]
0x77f4: lea rax,[rbp+rbp*4+0x0]
0x77f9: lea rax,[r10+rax*8+0x0]
0x77fd: cmp r12,qword ptr [rax+0x8]
0x7801: mov rax,0xffffffff
0x7808: cmovne rbp,rax
0x780c: cmp [rsi],0x0
0x7810: jle 0x7932
0x7816: mov qword ptr [rsp+0x30],rbp
0x781b: mov qword ptr [rsp+0x20],r9
0x7820: mov r13,rdi
0x7823: mov qword ptr [rsp+0x18],r8
0x7828: mov qword ptr [rsp+0x10],rcx
0x782d: xor r14d,r14d
0x7830: mov qword ptr [rsp+0x38],rsi
0x7835: mov qword ptr [rsp+0x28],rbx
0x783a: mov rbp,rdx
0x783d: mov r15,r12
0x7840: mov rax,qword ptr [rbp+0x0]
0x7844: mov rdx,qword ptr [r13+0xd8]
0x784b: mov rdi,r13
0x784e: mov r9,qword ptr [rsp+0x28]
0x7853: mov r8,qword ptr [rsp+0x18]
0x7858: mov rcx,qword ptr [rsp+0x10]
0x785d: mov rsi,qword ptr [rax+r14*8+0x0]
0x7861: lea rax,[rsi+rsi*4+0x0]
0x7865: lea rax,[rdx+rax*8+0x0]
0x7869: mov rdx,qword ptr [rsp+0x8]
0x786e: mov rax,qword ptr [rax]
0x7871: shl rax,0x4
0x7875: add rax,qword ptr [rdx]
0x7878: mov r12,qword ptr [rax]
0x787b: mov rdx,r12
0x787e: call 0x5c90
0x7883: mov ebx,eax
0x7885: mov rax,qword ptr [rbp+0x0]
0x7889: mov r9,qword ptr [rsp+0x30]
0x788e: mov rcx,qword ptr [rsp+0x20]
0x7893: mov r8,r15
0x7896: mov rdx,r12
0x7899: mov rdi,r13
0x789c: mov rsi,qword ptr [rax+r14*8+0x0]
0x78a0: call 0x5c90
0x78a5: cmp ebx,eax
0x78a7: jz 0x7920
0x78a9: mov eax,0x1
0x78ae: add rsp,0x48
0x78b2: pop rbx
0x78b3: pop rbp
0x78b4: pop r12
0x78b6: pop r13
0x78b8: pop r14
0x78ba: pop r15
0x78bc: ret
0x78bd: nop qword ptr [rax]
0x78c0: mov r14,r10
0x78c3: mov r10,rbp
0x78c6: nop qword ptr [rax+rax*1+0x0]
0x78d0: lea rbx,[r14+0x1]
0x78d4: mov rbp,r10
0x78d7: jmp 0x76fe
0x78dc: nop qword ptr [rax+0x0]
0x78e0: mov r14,r10
0x78e3: mov r10,rax
0x78e6: nop qword ptr [rax+rax*1+0x0]
0x78f0: lea rbp,[r14+0x1]
0x78f4: mov rax,r10
0x78f7: jmp 0x7787
0x78fc: nop qword ptr [rax+0x0]
0x7900: mov rbx,0xffffffff
0x7907: jmp 0x7782
0x790c: nop qword ptr [rax+0x0]
0x7910: mov rbp,0xffffffff
0x7917: jmp 0x780c
0x791c: nop qword ptr [rax+0x0]
0x7920: mov rax,qword ptr [rsp+0x38]
0x7925: add r14,0x1
0x7929: cmp r14,qword ptr [rax]
0x792c: jl 0x7840
0x7932: xor eax,eax
0x7934: jmp 0x78ae
0x7a31: nop qword ptr [rax+0x0]
0x7a3b: nop qword ptr [rax+rax*1+0x0]
0x7a53: nop qword ptr [rax+rax*1+0x0]
0x7a61: nop qword ptr [rax+0x0]
0x7a8a: nop qword ptr [rax+rax*1+0x0]
0x7ab1: nop qword ptr [rax+0x0]
0x7ae9: nop qword ptr [rax+0x0]
0x7bec: nop qword ptr [rax+0x0]
0x7c7b: nop qword ptr [rax+rax*1+0x0]
0x7ce9: nop qword ptr [rax+0x0]
0x7d47: nop qword ptr [rax+rax*1+0x0]
0x7da2: nop qword ptr [rax+rax*1+0x0]
0x7dd0: push r15
0x7dd2: push r14
0x7dd4: mov r14,rdi
0x7dd7: push r13
0x7dd9: push r12
0x7ddb: mov r15,rsi
0x7dde: push rbp
0x7ddf: push rbx
0x7de0: mov rbp,rdx
0x7de3: mov ebx,ecx
0x7de5: sub rsp,0x38
0x7de9: mov r12,qword ptr [rsi+0x8]
0x7ded: mov rax,0x28
0x7df6: mov qword ptr [rsp+0x28],rax
0x7dfb: xor eax,eax
0x7dfd: mov [rsp+0x18],0x0
0x7e06: lea rdi,[r12*8+0x0]
0x7e0e: mov qword ptr [rsp+0x10],r12
0x7e13: call 0x1ac0
0x7e18: test rax,rax
0x7e1b: mov qword ptr [rsp+0x20],rax
0x7e20: jz 0x7f1d
0x7e26: test r12,r12
0x7e29: jle 0x7ebb
0x7e2f: lea r12,[rsp+0x10]
0x7e34: xor r13d,r13d
0x7e37: nop qword ptr [rax+rax*1+0x0]
0x7e40: mov rax,qword ptr [r15+0x10]
0x7e44: mov rdx,qword ptr [rax+r13*8+0x0]
0x7e48: mov rax,qword ptr [r14+0x30]
0x7e4c: lea rcx,[rdx+rdx*2+0x0]
0x7e50: lea rsi,[rax+rcx*8+0x0]
0x7e54: mov r8,qword ptr [rsi+0x8]
0x7e58: test r8,r8
0x7e5b: jle 0x7ee0
0x7e61: mov r10,qword ptr [rsi+0x10]
0x7e65: mov r9,qword ptr [r14]
0x7e68: xor ecx,ecx
0x7e6a: jmp 0x7e79
0x7e6c: nop qword ptr [rax+0x0]
0x7e70: add rcx,0x1
0x7e74: cmp r8,rcx
0x7e77: jz 0x7ee0
0x7e79: mov rdi,qword ptr [r10+rcx*8+0x0]
0x7e7d: mov rax,rdi
0x7e80: shl rax,0x4
0x7e84: add rax,r9
0x7e87: movzx r11d,byte ptr [rax+0x8]
0x7e8c: cmp ebx,r11d
0x7e8f: jnz 0x7e70
0x7e91: cmp rbp,qword ptr [rax]
0x7e94: jnz 0x7e70
0x7e96: cmp rdi,0xffffffff
0x7e9a: jz 0x7ee0
0x7e9c: mov r8d,ebx
0x7e9f: mov rcx,rbp
0x7ea2: mov rsi,r12
0x7ea5: mov rdi,r14
0x7ea8: call 0x74a0
0x7ead: test eax,eax
0x7eaf: jnz 0x7eec
0x7eb1: add r13,0x1
0x7eb5: cmp qword ptr [r15+0x8],r13
0x7eb9: jnle 0x7e40
0x7ebb: mov rdi,qword ptr [r15+0x10]
0x7ebf: call 0x1880
0x7ec4: mov rax,qword ptr [rsp+0x20]
0x7ec9: movdqa xmm0,[rsp+0x10]
0x7ecf: mov qword ptr [r15+0x10],rax
0x7ed3: xor eax,eax
0x7ed5: movaps [r15],xmm0
0x7ed9: jmp 0x7efe
0x7edb: nop qword ptr [rax+rax*1+0x0]
0x7ee0: mov rdi,r12
0x7ee3: call 0x7940
0x7ee8: test eax,eax
0x7eea: jz 0x7eb1
0x7eec: mov rdi,qword ptr [rsp+0x20]
0x7ef1: mov dword ptr [rsp+0xc],eax
0x7ef5: call 0x1880
0x7efa: mov eax,dword ptr [rsp+0xc]
0x7efe: mov rdx,qword ptr [rsp+0x28]
0x7f03: xor rdx,0x28
0x7f0c: jnz 0x7f24
0x7f0e: add rsp,0x38
0x7f12: pop rbx
0x7f13: pop rbp
0x7f14: pop r12
0x7f16: pop r13
0x7f18: pop r14
0x7f1a: pop r15
0x7f1c: ret
0x7f1d: mov eax,0xc
0x7f22: jmp 0x7efe
0x7f24: call 0x1990
0x7f30: mov r9,qword ptr [rsi+0x8]
0x7f34: xor eax,eax
0x7f36: test r9,r9
0x7f39: jz 0x7ff8
0x7f3f: mov r11,qword ptr [rdx+0x8]
0x7f43: test r11,r11
0x7f46: jz 0x7ff8
0x7f4c: push r13
0x7f4e: push r12
0x7f50: lea rax,[r9+r11*1+0x0]
0x7f54: push rbp
0x7f55: push rbx
0x7f56: mov r12,rdx
0x7f59: mov rbx,rdi
0x7f5c: mov rbp,rsi
0x7f5f: sub rsp,0x8
0x7f63: mov rcx,qword ptr [rdi+0x8]
0x7f67: mov r13,qword ptr [rdi]
0x7f6a: mov rdi,qword ptr [rdi+0x10]
0x7f6e: lea rdx,[rax+rcx*1+0x0]
0x7f72: cmp rdx,r13
0x7f75: jnle 0x80a0
0x7f7b: lea rsi,[rcx+r9*1+0x0]
0x7f7f: mov r13,qword ptr [rbp+0x10]
0x7f83: mov rdx,qword ptr [r12+0x10]
0x7f88: sub r9,0x1
0x7f8c: sub rcx,0x1
0x7f90: add rsi,r11
0x7f93: sub r11,0x1
0x7f97: mov rax,qword ptr [r13+r9*8+0x0]
0x7f9c: mov r8,qword ptr [rdx+r11*8+0x0]
0x7fa0: cmp rax,r8
0x7fa3: jz 0x7fb6
0x7fa5: jnl 0x8000
0x7fa7: sub r11,0x1
0x7fab: js 0x8010
0x7fad: mov r8,qword ptr [rdx+r11*8+0x0]
0x7fb1: cmp rax,r8
0x7fb4: jnz 0x7fa5
0x7fb6: test rcx,rcx
0x7fb9: jns 0x7fca
0x7fbb: jmp 0x7fd8
0x7fbd: nop qword ptr [rax]
0x7fc0: sub rcx,0x1
0x7fc4: cmp rcx,0xffffffff
0x7fc8: jz 0x7fd8
0x7fca: mov r10,qword ptr [rdi+rcx*8+0x0]
0x7fce: cmp r10,r8
0x7fd1: jnle 0x7fc0
0x7fd3: cmp r10,r8
0x7fd6: jz 0x7fe0
0x7fd8: sub rsi,0x1
0x7fdc: mov qword ptr [rdi+rsi*8+0x0],r8
0x7fe0: sub r9,0x1
0x7fe4: js 0x8010
0x7fe6: sub r11,0x1
0x7fea: js 0x8010
0x7fec: mov rax,qword ptr [r13+r9*8+0x0]
0x7ff1: jmp 0x7fad
0x7ff3: nop qword ptr [rax+rax*1+0x0]
0x7ff8: rep ret
0x7ffa: nop qword ptr [rax+rax*1+0x0]
0x8000: sub r9,0x1
0x8004: js 0x8010
0x8006: mov rax,qword ptr [r13+r9*8+0x0]
0x800b: jmp 0x7fa0
0x800d: nop qword ptr [rax]
0x8010: mov rcx,qword ptr [rbx+0x8]
0x8014: mov rdx,qword ptr [rbp+0x8]
0x8018: add rdx,rcx
0x801b: add rdx,qword ptr [r12+0x8]
0x8020: lea rax,[rcx-0x1]
0x8024: lea r9,[rdx-0x1]
0x8028: sub rdx,rsi
0x802b: add rcx,rdx
0x802e: test rdx,rdx
0x8031: mov qword ptr [rbx+0x8],rcx
0x8035: jle 0x807d
0x8037: test rax,rax
0x803a: js 0x807d
0x803c: nop qword ptr [rax+0x0]
0x8040: mov r8,qword ptr [rdi+r9*8+0x0]
0x8044: mov rcx,qword ptr [rdi+rax*8+0x0]
0x8048: lea r10,[rax+rdx*1+0x0]
0x804c: lea r10,[rdi+r10*8+0x0]
0x8050: cmp r8,rcx
0x8053: jle 0x8070
0x8055: sub r9,0x1
0x8059: sub rdx,0x1
0x805d: mov qword ptr [r10],r8
0x8060: jnz 0x8040
0x8062: xor edx,edx
0x8064: jmp 0x8081
0x8066: nop qword ptr [rax+rax*1+0x0]
0x8070: sub rax,0x1
0x8074: mov qword ptr [r10],rcx
0x8077: cmp rax,0xffffffff
0x807b: jnz 0x8040
0x807d: shl rdx,0x3
0x8081: lea rsi,[rdi+rsi*8+0x0]
0x8085: call 0x1a90
0x808a: xor eax,eax
0x808c: add rsp,0x8
0x8090: pop rbx
0x8091: pop rbp
0x8092: pop r12
0x8094: pop r13
0x8096: ret
0x8097: nop qword ptr [rax+rax*1+0x0]
0x80a0: add r13,rax
0x80a3: lea rsi,[r13*8+0x0]
0x80ab: call 0x1b30
0x80b0: test rax,rax
0x80b3: mov rdi,rax
0x80b6: jz 0x80d1
0x80b8: mov qword ptr [rbx+0x10],rax
0x80bc: mov qword ptr [rbx],r13
0x80bf: mov rcx,qword ptr [rbx+0x8]
0x80c3: mov r9,qword ptr [rbp+0x8]
0x80c7: mov r11,qword ptr [r12+0x8]
0x80cc: jmp 0x7f7b
0x80d1: mov eax,0xc
0x80d6: jmp 0x808c
0x8161: nop qword ptr [rax+0x0]
0x8227: nop qword ptr [rax+rax*1+0x0]
0x8234: nop qword ptr [rax+0x0]
0x8279: nop qword ptr [rax+0x0]
0x828c: call 0x1990
0x8349: nop qword ptr [rax+0x0]
0x8443: nop qword ptr [rax+rax*1+0x0]
0x84d2: call 0x1990
0x853d: nop qword ptr [rax]
0x855b: nop qword ptr [rax+rax*1+0x0]
0x85cf: nop 
0x85e6: nop qword ptr [rax+rax*1+0x0]
0x8610: test rsi,rsi
0x8613: push r14
0x8615: push r13
0x8617: push r12
0x8619: push rbp
0x861a: push rbx
0x861b: jz 0x86c5
0x8621: test rdx,rdx
0x8624: mov r13,qword ptr [rsi+0x8]
0x8628: jz 0x86c0
0x862e: test r13,r13
0x8631: jle 0x86c0
0x8637: mov r14,qword ptr [rdx+0x8]
0x863b: test r14,r14
0x863e: jle 0x86f3
0x8644: mov r12,rdi
0x8647: lea rdi,[r13+r14*1+0x0]
0x864c: mov rbx,rdx
0x864f: mov rbp,rsi
0x8652: mov qword ptr [r12],rdi
0x8656: shl rdi,0x3
0x865a: call 0x1ac0
0x865f: test rax,rax
0x8662: mov qword ptr [r12+0x10],rax
0x8667: jz 0x8758
0x866d: mov r9,qword ptr [rbx+0x10]
0x8671: mov r8,qword ptr [rbp+0x10]
0x8675: xor ebx,ebx
0x8677: xor ecx,ecx
0x8679: xor esi,esi
0x867b: jmp 0x869e
0x867d: nop qword ptr [rax]
0x8680: setz dil
0x8684: mov qword ptr [rax+rbx*8-0x8],rdx
0x8689: add rsi,0x1
0x868d: movzx edi,dil
0x8691: add rcx,rdi
0x8694: cmp r13,rsi
0x8697: jle 0x8700
0x8699: cmp r14,rcx
0x869c: jle 0x8718
0x869e: mov rdx,qword ptr [r8+rsi*8+0x0]
0x86a2: mov rdi,qword ptr [r9+rcx*8+0x0]
0x86a6: add rbx,0x1
0x86aa: cmp rdx,rdi
0x86ad: jle 0x8680
0x86af: add rcx,0x1
0x86b3: mov qword ptr [rax+rbx*8-0x8],rdi
0x86b8: jmp 0x8694
0x86ba: nop qword ptr [rax+rax*1+0x0]
0x86c0: test r13,r13
0x86c3: jnle 0x86f3
0x86c5: test rdx,rdx
0x86c8: jz 0x86d1
0x86ca: cmp [rdx+0x8],0x0
0x86cf: jnle 0x86f0
0x86d1: pxor xmm0,xmm0
0x86d5: mov [rdi+0x10],0x0
0x86dd: xor eax,eax
0x86df: movaps [rdi],xmm0
0x86e2: pop rbx
0x86e3: pop rbp
0x86e4: pop r12
0x86e6: pop r13
0x86e8: pop r14
0x86ea: ret
0x86eb: nop qword ptr [rax+rax*1+0x0]
0x86f0: mov rsi,rdx
0x86f3: pop rbx
0x86f4: pop rbp
0x86f5: pop r12
0x86f7: pop r13
0x86f9: pop r14
0x86fb: jmp 0x8580
0x8700: cmp r14,rcx
0x8703: jnle 0x8738
0x8705: mov qword ptr [r12+0x8],rbx
0x870a: xor eax,eax
0x870c: pop rbx
0x870d: pop rbp
0x870e: pop r12
0x8710: pop r13
0x8712: pop r14
0x8714: ret
0x8715: nop qword ptr [rax]
0x8718: sub r13,rsi
0x871b: lea rdi,[rax+rbx*8+0x0]
0x871f: lea rsi,[r8+rsi*8+0x0]
0x8723: lea rdx,[r13*8+0x0]
0x872b: add rbx,r13
0x872e: call 0x1a90
0x8733: jmp 0x8705
0x8735: nop qword ptr [rax]
0x8738: sub r14,rcx
0x873b: lea rdi,[rax+rbx*8+0x0]
0x873f: lea rsi,[r9+rcx*8+0x0]
0x8743: lea rdx,[r14*8+0x0]
0x874b: add rbx,r14
0x874e: call 0x1a90
0x8753: jmp 0x8705
0x8755: nop qword ptr [rax]
0x8758: mov eax,0xc
0x875d: jmp 0x86e2
0x87e5: nop qword ptr [rax]
0x882e: nop 
0x8999: nop qword ptr [rax+0x0]
0x89c9: nop qword ptr [rax+0x0]
0x89dc: nop qword ptr [rax+0x0]
0x8a30: push r15
0x8a32: push r14
0x8a34: push r13
0x8a36: push r12
0x8a38: push rbp
0x8a39: push rbx
0x8a3a: sub rsp,0x8
0x8a3e: mov rbp,qword ptr [rdx+0x8]
0x8a42: test rbp,rbp
0x8a45: jz 0x8c20
0x8a4b: test rbp,rbp
0x8a4e: jle 0x8a6c
0x8a50: mov rax,qword ptr [rdx+0x10]
0x8a54: lea rcx,[rax+rbp*8+0x0]
0x8a58: nop qword ptr [rax+rax*1+0x0]
0x8a60: add rbp,qword ptr [rax]
0x8a63: add rax,0x8
0x8a67: cmp rcx,rax
0x8a6a: jnz 0x8a60
0x8a6c: mov rax,qword ptr [rsi+0x88]
0x8a73: mov r14,rdx
0x8a76: mov r12,rsi
0x8a79: mov r13,rdi
0x8a7c: and rax,rbp
0x8a7f: lea rdx,[rax+rax*2+0x0]
0x8a83: mov rax,qword ptr [rsi+0x40]
0x8a87: lea rax,[rax+rdx*8+0x0]
0x8a8b: mov r10,qword ptr [rax]
0x8a8e: test r10,r10
0x8a91: jle 0x8ac6
0x8a93: mov r11,qword ptr [rax+0x10]
0x8a97: xor r9d,r9d
0x8a9a: nop qword ptr [rax+rax*1+0x0]
0x8aa0: mov rbx,qword ptr [r11+r9*8+0x0]
0x8aa4: cmp qword ptr [rbx],rbp
0x8aa7: jnz 0x8abd
0x8aa9: lea rdi,[rbx+0x8]
0x8aad: mov rsi,r14
0x8ab0: call 0x73c0
0x8ab5: test al,al
0x8ab7: jnz 0x8bbf
0x8abd: add r9,0x1
0x8ac1: cmp r10,r9
0x8ac4: jnz 0x8aa0
0x8ac6: mov esi,0x1
0x8acb: mov edi,0x70
0x8ad0: call 0x1a70
0x8ad5: test rax,rax
0x8ad8: mov rbx,rax
0x8adb: jz 0x8c08
0x8ae1: lea r15,[rax+0x8]
0x8ae5: mov rsi,r14
0x8ae8: mov rdi,r15
0x8aeb: call 0x8580
0x8af0: test eax,eax
0x8af2: jnz 0x8c00
0x8af8: mov rax,qword ptr [r14+0x8]
0x8afc: mov qword ptr [rbx+0x50],r15
0x8b00: test rax,rax
0x8b03: jle 0x8bad
0x8b09: mov rsi,qword ptr [r14+0x10]
0x8b0d: mov r8,qword ptr [r12]
0x8b11: lea r9,[rsi+rax*8+0x0]
0x8b15: jmp 0x8b64
0x8b17: nop qword ptr [rax+rax*1+0x0]
0x8b20: movzx ecx,byte ptr [rbx+0x68]
0x8b24: movzx edx,byte ptr [rax+0xa]
0x8b28: mov r10d,ecx
0x8b2b: shr dl,0x4
0x8b2e: and ecx,0xdf
0x8b31: shr r10b,0x5
0x8b35: or edx,r10d
0x8b38: and edx,0x1
0x8b3b: shl edx,0x5
0x8b3e: or edx,ecx
0x8b40: cmp edi,0x2
0x8b43: mov byte ptr [rbx+0x68],dl
0x8b46: jz 0x8bd8
0x8b4c: cmp edi,0x4
0x8b4f: jnz 0x8be8
0x8b55: or edx,0x40
0x8b58: mov byte ptr [rbx+0x68],dl
0x8b5b: add rsi,0x8
0x8b5f: cmp r9,rsi
0x8b62: jz 0x8bad
0x8b64: mov rax,qword ptr [rsi]
0x8b67: shl rax,0x4
0x8b6b: add rax,r8
0x8b6e: movzx edi,byte ptr [rax+0x8]
0x8b72: cmp edi,0x1
0x8b75: jnz 0x8b20
0x8b77: test [rax+0x8],0x3ff00
0x8b7e: jz 0x8b5b
0x8b80: movzx edx,byte ptr [rbx+0x68]
0x8b84: movzx eax,byte ptr [rax+0xa]
0x8b88: mov ecx,edx
0x8b8a: shr al,0x4
0x8b8d: and edx,0xdf
0x8b90: shr cl,0x5
0x8b93: or eax,ecx
0x8b95: and eax,0x1
0x8b98: shl eax,0x5
0x8b9b: or eax,edx
0x8b9d: mov byte ptr [rbx+0x68],al
0x8ba0: add rsi,0x8
0x8ba4: or [rbx+0x68],0x80
0x8ba8: cmp r9,rsi
0x8bab: jnz 0x8b64
0x8bad: mov rdx,rbp
0x8bb0: mov rsi,rbx
0x8bb3: mov rdi,r12
0x8bb6: call 0x6010
0x8bbb: test eax,eax
0x8bbd: jnz 0x8c14
0x8bbf: add rsp,0x8
0x8bc3: mov rax,rbx
0x8bc6: pop rbx
0x8bc7: pop rbp
0x8bc8: pop r12
0x8bca: pop r13
0x8bcc: pop r14
0x8bce: pop r15
0x8bd0: ret
0x8bd1: nop qword ptr [rax+0x0]
0x8bd8: or edx,0x10
0x8bdb: mov byte ptr [rbx+0x68],dl
0x8bde: jmp 0x8b5b
0x8be3: nop qword ptr [rax+rax*1+0x0]
0x8be8: cmp edi,0xc
0x8beb: jz 0x8ba0
0x8bed: test [rax+0x8],0x3ff00
0x8bf4: jz 0x8b5b
0x8bfa: jmp 0x8ba0
0x8bfc: nop qword ptr [rax+0x0]
0x8c00: mov rdi,rbx
0x8c03: call 0x1880
0x8c08: mov [r13+0x0],0xc
0x8c10: xor ebx,ebx
0x8c12: jmp 0x8bbf
0x8c14: mov rdi,rbx
0x8c17: call 0x70b0
0x8c1c: jmp 0x8c08
0x8c1e: nop 
0x8c20: mov [rdi],0x0
0x8c26: xor ebx,ebx
0x8c28: jmp 0x8bbf
0x8c30: push r15
0x8c32: push r14
0x8c34: push r13
0x8c36: push r12
0x8c38: push rbp
0x8c39: push rbx
0x8c3a: sub rsp,0x48
0x8c3e: mov rax,0x28
0x8c47: mov qword ptr [rsp+0x38],rax
0x8c4c: xor eax,eax
0x8c4e: test rcx,rcx
0x8c51: jle 0x8ce6
0x8c57: lea rax,[rsp+0x1c]
0x8c5c: mov r14,rdi
0x8c5f: mov rbx,rsi
0x8c62: mov r12,rdx
0x8c65: mov rbp,rcx
0x8c68: xor r15d,r15d
0x8c6b: lea r13,[rsp+0x20]
0x8c70: mov qword ptr [rsp+0x8],rax
0x8c75: jmp 0x8ccc
0x8c77: nop qword ptr [rax+rax*1+0x0]
0x8c80: test rdx,rdx
0x8c83: jz 0x8cc3
0x8c85: add rdx,0x8
0x8c89: add rsi,0x8
0x8c8d: mov rdi,r13
0x8c90: call 0x8610
0x8c95: test eax,eax
0x8c97: mov dword ptr [rsp+0x1c],eax
0x8c9b: jnz 0x8ce8
0x8c9d: mov rdi,qword ptr [rsp+0x8]
0x8ca2: mov rdx,r13
0x8ca5: mov rsi,r14
0x8ca8: call 0x8a30
0x8cad: mov rdi,qword ptr [rsp+0x30]
0x8cb2: mov qword ptr [rbx+r15*8+0x0],rax
0x8cb6: call 0x1880
0x8cbb: mov eax,dword ptr [rsp+0x1c]
0x8cbf: test eax,eax
0x8cc1: jnz 0x8ce8
0x8cc3: add r15,0x1
0x8cc7: cmp rbp,r15
0x8cca: jz 0x8ce6
0x8ccc: mov rsi,qword ptr [rbx+r15*8+0x0]
0x8cd0: mov rdx,qword ptr [r12+r15*8+0x0]
0x8cd4: test rsi,rsi
0x8cd7: jnz 0x8c80
0x8cd9: mov qword ptr [rbx+r15*8+0x0],rdx
0x8cdd: add r15,0x1
0x8ce1: cmp rbp,r15
0x8ce4: jnz 0x8ccc
0x8ce6: xor eax,eax
0x8ce8: mov rcx,qword ptr [rsp+0x38]
0x8ced: xor rcx,0x28
0x8cf6: jnz 0x8d07
0x8cf8: add rsp,0x48
0x8cfc: pop rbx
0x8cfd: pop rbp
0x8cfe: pop r12
0x8d00: pop r13
0x8d02: pop r14
0x8d04: pop r15
0x8d06: ret
0x8d07: call 0x1990
0x8d10: push r15
0x8d12: push r14
0x8d14: push r13
0x8d16: push r12
0x8d18: mov r12,rdx
0x8d1b: push rbp
0x8d1c: push rbx
0x8d1d: mov rbx,rdi
0x8d20: mov rbp,rsi
0x8d23: xor esi,esi
0x8d25: sub rsp,0x78
0x8d29: mov rdi,qword ptr [rdi+0xc8]
0x8d30: mov rax,0x28
0x8d39: mov qword ptr [rsp+0x68],rax
0x8d3e: xor eax,eax
0x8d40: mov qword ptr [rsp+0x20],rcx
0x8d45: mov dword ptr [rsp+0x2c],r8d
0x8d4a: mov rdx,rdi
0x8d4d: cmp rsi,rdx
0x8d50: jnl 0x8da7
0x8d52: lea rax,[rsi+rdx*1+0x0]
0x8d56: mov r8,qword ptr [rbx+0xd8]
0x8d5d: mov rcx,rax
0x8d60: shr rcx,0x3f
0x8d64: add rcx,rax
0x8d67: sar rcx,0x1
0x8d6a: lea rax,[rcx+rcx*4+0x0]
0x8d6e: cmp r12,qword ptr [r8+rax*8+0x8]
0x8d73: jle 0x8da2
0x8d75: jmp 0x8df8
0x8d7a: nop qword ptr [rax+rax*1+0x0]
0x8d80: lea rdx,[rsi+rcx*1+0x0]
0x8d84: mov rax,rdx
0x8d87: shr rax,0x3f
0x8d8b: add rax,rdx
0x8d8e: sar rax,0x1
0x8d91: lea rdx,[rax+rax*4+0x0]
0x8d95: mov r9,rax
0x8d98: cmp r12,qword ptr [r8+rdx*8+0x8]
0x8d9d: jnle 0x8e00
0x8d9f: mov rcx,rax
0x8da2: cmp rsi,rcx
0x8da5: jl 0x8d80
0x8da7: cmp rdi,rsi
0x8daa: jle 0x8dcd
0x8dac: mov rcx,qword ptr [rbx+0xd8]
0x8db3: lea rax,[rsi+rsi*4+0x0]
0x8db7: shl rax,0x3
0x8dbb: cmp qword ptr [rcx+rax*1+0x8],r12
0x8dc0: mov qword ptr [rsp+0x30],rax
0x8dc5: jnz 0x8dcd
0x8dc7: cmp rsi,0xffffffff
0x8dcb: jnz 0x8e10
0x8dcd: xor eax,eax
0x8dcf: mov rbx,qword ptr [rsp+0x68]
0x8dd4: xor rbx,0x28
0x8ddd: jnz 0x90a9
0x8de3: add rsp,0x78
0x8de7: pop rbx
0x8de8: pop rbp
0x8de9: pop r12
0x8deb: pop r13
0x8ded: pop r14
0x8def: pop r15
0x8df1: ret
0x8df2: nop qword ptr [rax+rax*1+0x0]
0x8df8: mov r9,rcx
0x8dfb: mov rcx,rdx
0x8dfe: nop 
0x8e00: lea rsi,[r9+0x1]
0x8e04: mov rdx,rcx
0x8e07: jmp 0x8d4d
0x8e0c: nop qword ptr [rax+0x0]
0x8e10: lea rax,[rbp+0x10]
0x8e14: mov r13,qword ptr [rbx+0x98]
0x8e1b: mov qword ptr [rsp],rax
0x8e1f: lea rax,[rsp+0x4c]
0x8e24: mov qword ptr [rsp+0x38],rax
0x8e29: lea rax,[rsp+0x50]
0x8e2e: mov qword ptr [rsp+0x10],rax
0x8e33: mov rax,qword ptr [rsp+0x30]
0x8e38: lea r15,[rcx+rax*1+0x0]
0x8e3c: jmp 0x8f18
0x8e41: nop qword ptr [rax+0x0]
0x8e48: mov rax,qword ptr [r13+0x18]
0x8e4c: mov rcx,qword ptr [rax+r10*8+0x0]
0x8e50: mov r10,qword ptr [rbx+0xb8]
0x8e57: lea rax,[r14*8+0x0]
0x8e5f: mov qword ptr [rsp+0x18],rax
0x8e64: add r10,rax
0x8e67: mov qword ptr [rsp+0x8],rcx
0x8e6c: mov r9,qword ptr [r10]
0x8e6f: test r9,r9
0x8e72: jz 0x9000
0x8e78: mov rdi,qword ptr [r9+0x10]
0x8e7c: lea rsi,[r9+0x18]
0x8e80: mov rdx,rcx
0x8e83: call 0x7420
0x8e88: test rax,rax
0x8e8b: jnz 0x8f09
0x8e8d: mov rdi,qword ptr [rsp+0x10]
0x8e92: lea rsi,[r9+0x8]
0x8e96: call 0x8580
0x8e9b: mov rsi,qword ptr [rsp+0x8]
0x8ea0: mov rdi,qword ptr [rsp+0x10]
0x8ea5: mov dword ptr [rsp+0x4c],eax
0x8ea9: call 0x5ee0
0x8eae: mov edx,dword ptr [rsp+0x4c]
0x8eb2: test edx,edx
0x8eb4: jnz 0x9056
0x8eba: cmp al,0x1
0x8ebc: jnz 0x9056
0x8ec2: mov r10,qword ptr [rsp+0x18]
0x8ec7: add r10,qword ptr [rbx+0xb8]
0x8ece: mov rdx,qword ptr [rsp+0x10]
0x8ed3: mov rdi,qword ptr [rsp+0x38]
0x8ed8: mov rsi,r13
0x8edb: mov qword ptr [rsp+0x8],r10
0x8ee0: call 0x8a30
0x8ee5: mov r10,qword ptr [rsp+0x8]
0x8eea: mov rdi,qword ptr [rsp+0x60]
0x8eef: mov qword ptr [r10],rax
0x8ef2: call 0x1880
0x8ef7: mov rax,qword ptr [rbx+0xb8]
0x8efe: cmp [rax+r14*8+0x0],0x0
0x8f03: jz 0x9045
0x8f09: add r15,0x28
0x8f0d: cmp [r15-0x8],0x0
0x8f12: jz 0x8dcd
0x8f18: mov r10,qword ptr [r15]
0x8f1b: mov r9,qword ptr [rbp+0x8]
0x8f1f: mov rsi,qword ptr [rsp]
0x8f23: mov rdx,r10
0x8f26: mov rdi,r9
0x8f29: call 0x7420
0x8f2e: test rax,rax
0x8f31: jz 0x8f09
0x8f33: mov r8,qword ptr [r15+0x18]
0x8f37: add r8,r12
0x8f3a: mov r14,r8
0x8f3d: sub r14,qword ptr [r15+0x10]
0x8f41: cmp r12,r14
0x8f44: jnz 0x8e48
0x8f4a: mov rcx,qword ptr [r13+0x28]
0x8f4e: lea rax,[r10+r10*2+0x0]
0x8f52: mov rsi,qword ptr [rsp]
0x8f56: mov rdi,r9
0x8f59: lea rax,[rcx+rax*8+0x0]
0x8f5d: mov rax,qword ptr [rax+0x10]
0x8f61: mov r14,qword ptr [rax]
0x8f64: mov rdx,r14
0x8f67: call 0x7420
0x8f6c: test rax,rax
0x8f6f: jnz 0x8f09
0x8f71: mov edi,0x8
0x8f76: mov [rsp+0x50],0x1
0x8f7f: mov [rsp+0x58],0x1
0x8f88: call 0x1ac0
0x8f8d: test rax,rax
0x8f90: mov qword ptr [rsp+0x60],rax
0x8f95: jz 0x908d
0x8f9b: mov qword ptr [rax],r14
0x8f9e: xor eax,eax
0x8fa0: mov r15,qword ptr [rsp+0x10]
0x8fa5: mov rdx,qword ptr [rsp+0x20]
0x8faa: mov rdi,r13
0x8fad: mov ecx,dword ptr [rsp+0x2c]
0x8fb1: mov dword ptr [rsp+0x4c],eax
0x8fb5: mov rsi,r15
0x8fb8: call 0x7dd0
0x8fbd: mov rsi,r15
0x8fc0: mov rdi,rbp
0x8fc3: mov r14d,eax
0x8fc6: call 0x7940
0x8fcb: mov rdi,qword ptr [rsp+0x60]
0x8fd0: mov r15d,eax
0x8fd3: call 0x1880
0x8fd8: mov eax,dword ptr [rsp+0x4c]
0x8fdc: mov edx,r14d
0x8fdf: or edx,r15d
0x8fe2: or edx,eax
0x8fe4: jnz 0x9076
0x8fea: mov rcx,qword ptr [rbx+0xd8]
0x8ff1: jmp 0x8e33
0x8ff6: nop qword ptr [rax+rax*1+0x0]
0x9000: mov edi,0x8
0x9005: mov qword ptr [rsp+0x18],r10
0x900a: mov [rsp+0x50],0x1
0x9013: mov [rsp+0x58],0x1
0x901c: call 0x1ac0
0x9021: test rax,rax
0x9024: mov qword ptr [rsp+0x60],rax
0x9029: jz 0x906c
0x902b: mov rdi,qword ptr [rsp+0x8]
0x9030: mov [rsp+0x4c],0x0
0x9038: mov r10,qword ptr [rsp+0x18]
0x903d: mov qword ptr [rax],rdi
0x9040: jmp 0x8ece
0x9045: mov eax,dword ptr [rsp+0x4c]
0x9049: test eax,eax
0x904b: jz 0x8f09
0x9051: jmp 0x8dcf
0x9056: mov rdi,qword ptr [rsp+0x60]
0x905b: call 0x1880
0x9060: mov eax,dword ptr [rsp+0x4c]
0x9064: test eax,eax
0x9066: jnz 0x8dcf
0x906c: mov eax,0xc
0x9071: jmp 0x8dcf
0x9076: test eax,eax
0x9078: jnz 0x8dcf
0x907e: test r14d,r14d
0x9081: mov eax,r14d
0x9084: cmove eax,r15d
0x9088: jmp 0x8dcf
0x908d: mov [rsp+0x58],0x0
0x9096: mov [rsp+0x50],0x0
0x909f: mov eax,0xc
0x90a4: jmp 0x8fa0
0x90a9: call 0x1990
0x90b0: push r15
0x90b2: push r14
0x90b4: push r13
0x90b6: push r12
0x90b8: push rbp
0x90b9: push rbx
0x90ba: sub rsp,0x28
0x90be: cmp [rsi],0x0
0x90c2: mov r13,qword ptr [rdi+0x98]
0x90c9: jle 0x9190
0x90cf: mov r14,rdx
0x90d2: mov r12,rsi
0x90d5: mov r15,rdi
0x90d8: xor ebx,ebx
0x90da: jmp 0x90ee
0x90dc: nop qword ptr [rax+0x0]
0x90e0: add rbx,0x1
0x90e4: cmp rbx,qword ptr [r12]
0x90e8: jnl 0x9190
0x90ee: mov rax,qword ptr [r14]
0x90f1: mov rbp,qword ptr [rax+rbx*8+0x0]
0x90f5: mov rax,rbp
0x90f8: shl rax,0x4
0x90fc: add rax,qword ptr [r13+0x0]
0x9100: cmp [rax+0x8],0x8
0x9104: jnz 0x90e0
0x9106: mov rax,qword ptr [rax]
0x9109: cmp rax,0x3f
0x910d: jnle 0x90e0
0x910f: mov rsi,qword ptr [r13+0xa0]
0x9116: bt rsi,rax
0x911a: jnb 0x90e0
0x911c: mov r8,qword ptr [r15+0xe8]
0x9123: cmp r8,qword ptr [r15+0xf0]
0x912a: mov r9,qword ptr [r15+0xf8]
0x9131: jz 0x91a8
0x9133: mov esi,0x30
0x9138: mov edi,0x1
0x913d: mov qword ptr [rsp+0x10],r9
0x9142: mov qword ptr [rsp+0x8],r8
0x9147: mov qword ptr [rsp+0x18],rcx
0x914c: call 0x1a70
0x9151: mov r8,qword ptr [rsp+0x8]
0x9156: mov r9,qword ptr [rsp+0x10]
0x915b: test rax,rax
0x915e: mov qword ptr [r9+r8*8+0x0],rax
0x9162: jz 0x91a1
0x9164: add r8,0x1
0x9168: add rbx,0x1
0x916c: mov rcx,qword ptr [rsp+0x18]
0x9171: mov qword ptr [r15+0xe8],r8
0x9178: cmp rbx,qword ptr [r12]
0x917c: mov qword ptr [rax+0x8],rbp
0x9180: mov qword ptr [rax],rcx
0x9183: jl 0x90ee
0x9189: nop qword ptr [rax+0x0]
0x9190: xor eax,eax
0x9192: add rsp,0x28
0x9196: pop rbx
0x9197: pop rbp
0x9198: pop r12
0x919a: pop r13
0x919c: pop r14
0x919e: pop r15
0x91a0: ret
0x91a1: mov eax,0xc
0x91a6: jmp 0x9192
0x91a8: lea rax,[r8+r8*1+0x0]
0x91ac: mov rsi,r8
0x91af: mov rdi,r9
0x91b2: shl rsi,0x4
0x91b6: mov qword ptr [rsp+0x8],rcx
0x91bb: mov qword ptr [rsp+0x10],rax
0x91c0: call 0x1b30
0x91c5: test rax,rax
0x91c8: mov r9,rax
0x91cb: mov rcx,qword ptr [rsp+0x8]
0x91d0: jz 0x91a1
0x91d2: mov qword ptr [r15+0xf8],rax
0x91d9: mov rax,qword ptr [rsp+0x10]
0x91de: mov r8,qword ptr [r15+0xe8]
0x91e5: mov qword ptr [r15+0xf0],rax
0x91ec: jmp 0x9133
0x9200: push rbp
0x9201: push rbx
0x9202: mov rbp,rdi
0x9205: sub rsp,0x8
0x9209: test rsi,rsi
0x920c: js 0x9260
0x920e: cmp qword ptr [rdi+0x58],rsi
0x9212: jz 0x92b8
0x9218: cmp [rdi+0x90],0x1
0x921f: jle 0x9270
0x9221: mov rax,qword ptr [rdi+0x10]
0x9225: jmp 0x923a
0x9227: nop qword ptr [rax+rax*1+0x0]
0x9230: sub rsi,0x1
0x9234: cmp rsi,0xffffffff
0x9238: jz 0x9260
0x923a: mov ebx,dword ptr [rax+rsi*4+0x0]
0x923d: cmp ebx,0xff
0x9240: jz 0x9230
0x9242: cmp [rbp+0x8e],0x0
0x9249: jnz 0x92c8
0x924b: xor eax,eax
0x924d: cmp ebx,0xa
0x9250: jz 0x929c
0x9252: add rsp,0x8
0x9256: pop rbx
0x9257: pop rbp
0x9258: ret
0x9259: nop qword ptr [rax+0x0]
0x9260: mov eax,dword ptr [rbp+0x70]
0x9263: add rsp,0x8
0x9267: pop rbx
0x9268: pop rbp
0x9269: ret
0x926a: nop qword ptr [rax+rax*1+0x0]
0x9270: mov rax,qword ptr [rdi+0x8]
0x9274: mov rcx,qword ptr [rdi+0x80]
0x927b: movzx eax,byte ptr [rax+rsi*1+0x0]
0x927f: mov rdx,rax
0x9282: sar rax,0x6
0x9286: mov rcx,qword ptr [rcx+rax*8+0x0]
0x928a: mov eax,0x1
0x928f: bt rcx,rdx
0x9293: jb 0x9252
0x9295: xor eax,eax
0x9297: cmp dl,0xa
0x929a: jnz 0x9252
0x929c: xor eax,eax
0x929e: cmp [rbp+0x8d],0x0
0x92a5: setnz al
0x92a8: add rsp,0x8
0x92ac: add eax,eax
0x92ae: pop rbx
0x92af: pop rbp
0x92b0: ret
0x92b1: nop qword ptr [rax+0x0]
0x92b8: and edx,0x2
0x92bb: cmp edx,0x1
0x92be: sbb eax,eax
0x92c0: and eax,0x2
0x92c3: add eax,0x8
0x92c6: jmp 0x9252
0x92c8: mov edi,ebx
0x92ca: call 0x1ab0
0x92cf: test eax,eax
0x92d1: jnz 0x92dc
0x92d3: cmp ebx,0x5f
0x92d6: jnz 0x924b
0x92dc: mov eax,0x1
0x92e1: jmp 0x9252
0x92f0: mov rax,qword ptr [rdi+0x8]
0x92f4: movzx ecx,byte ptr [rax+rdx*1+0x0]
0x92f8: movzx eax,byte ptr [rsi+0x8]
0x92fc: cmp al,0x3
0x92fe: jz 0x93b8
0x9304: jbe 0x93a0
0x930a: cmp al,0x5
0x930c: jz 0x9320
0x930e: cmp al,0x7
0x9310: jnz 0x93b0
0x9316: xor eax,eax
0x9318: test cl,cl
0x931a: js 0x93aa
0x9320: cmp cl,0xa
0x9323: jz 0x93e8
0x9329: test cl,cl
0x932b: jnz 0x9340
0x932d: mov rcx,qword ptr [rdi+0x98]
0x9334: xor eax,eax
0x9336: test [rcx+0xd8],0x80
0x933d: jnz 0x93aa
0x933f: nop 
0x9340: push rbx
0x9341: mov ebx,dword ptr [rsi+0x8]
0x9344: mov eax,0x1
0x9349: test ebx,0x3ff00
0x934f: jz 0x939c
0x9351: mov rsi,rdx
0x9354: mov edx,dword ptr [rdi+0xa0]
0x935a: shr ebx,0x8
0x935d: call 0x9200
0x9362: mov ecx,ebx
0x9364: mov edx,eax
0x9366: and cx,0x3ff
0x936b: test bl,0x4
0x936e: jz 0x93d8
0x9370: xor eax,eax
0x9372: test dl,0x1
0x9375: jz 0x939c
0x9377: and ebx,0x8
0x937a: jnz 0x939c
0x937c: test cl,0x20
0x937f: jz 0x9388
0x9381: xor eax,eax
0x9383: test dl,0x2
0x9386: jz 0x939c
0x9388: shr edx,0x3
0x938b: mov eax,0x1
0x9390: and edx,0x1
0x9393: and ecx,0x80
0x9399: cmovne eax,edx
0x939c: pop rbx
0x939d: ret
0x939e: nop 
0x93a0: cmp al,0x1
0x93a2: jnz 0x93b0
0x93a4: xor eax,eax
0x93a6: cmp byte ptr [rsi],cl
0x93a8: jz 0x9340
0x93aa: rep ret
0x93ac: nop qword ptr [rax+0x0]
0x93b0: xor eax,eax
0x93b2: ret
0x93b3: nop qword ptr [rax+rax*1+0x0]
0x93b8: mov r8,qword ptr [rsi]
0x93bb: movzx eax,cl
0x93be: sar rax,0x6
0x93c2: mov r8,qword ptr [r8+rax*8+0x0]
0x93c6: xor eax,eax
0x93c8: bt r8,rcx
0x93cc: jb 0x9340
0x93d2: rep ret
0x93d4: nop qword ptr [rax+0x0]
0x93d8: and ebx,0x8
0x93db: jz 0x937c
0x93dd: test al,0x1
0x93df: jz 0x937c
0x93e1: xor eax,eax
0x93e3: pop rbx
0x93e4: ret
0x93e5: nop qword ptr [rax]
0x93e8: mov rcx,qword ptr [rdi+0x98]
0x93ef: xor eax,eax
0x93f1: test [rcx+0xd8],0x40
0x93f8: jnz 0x9340
0x93fe: rep ret
0x9400: push r12
0x9402: mov r12,rdx
0x9405: push rbp
0x9406: push rbx
0x9407: mov edx,dword ptr [rdi+0xa0]
0x940d: mov rbx,rsi
0x9410: mov rsi,rcx
0x9413: mov rbp,rdi
0x9416: call 0x9200
0x941b: test rbx,rbx
0x941e: jle 0x94c8
0x9424: mov rdx,qword ptr [rbp+0x98]
0x942b: mov r11d,eax
0x942e: mov ebp,eax
0x9430: and eax,0x1
0x9433: mov r9,qword ptr [r12]
0x9437: xor esi,esi
0x9439: and ebp,0x8
0x943c: and r11d,0x2
0x9440: mov r10d,eax
0x9443: mov r8,qword ptr [rdx]
0x9446: jmp 0x9459
0x9448: nop qword ptr [rax+rax*1+0x0]
0x9450: add rsi,0x1
0x9454: cmp rsi,rbx
0x9457: jz 0x94c8
0x9459: mov rax,qword ptr [r9+rsi*8+0x0]
0x945d: mov rdx,rax
0x9460: shl rdx,0x4
0x9464: add rdx,r8
0x9467: mov ecx,dword ptr [rdx+0x8]
0x946a: shr ecx,0x8
0x946d: mov edi,ecx
0x946f: and di,0x3ff
0x9474: cmp [rdx+0x8],0x2
0x9478: jnz 0x9450
0x947a: test di,di
0x947d: jz 0x94a5
0x947f: test cl,0x4
0x9482: jz 0x94b0
0x9484: test r10d,r10d
0x9487: jz 0x9450
0x9489: and ecx,0x8
0x948c: jnz 0x9450
0x948e: test dil,0x20
0x9492: jz 0x9499
0x9494: test r11d,r11d
0x9497: jz 0x9450
0x9499: and edi,0x80
0x949f: jz 0x94a5
0x94a1: test ebp,ebp
0x94a3: jz 0x9450
0x94a5: pop rbx
0x94a6: pop rbp
0x94a7: pop r12
0x94a9: ret
0x94aa: nop qword ptr [rax+rax*1+0x0]
0x94b0: and ecx,0x8
0x94b3: jz 0x948e
0x94b5: test r10d,r10d
0x94b8: jnz 0x9450
0x94ba: test dil,0x20
0x94be: jz 0x9499
0x94c0: jmp 0x9494
0x94c2: nop qword ptr [rax+rax*1+0x0]
0x94c8: pop rbx
0x94c9: xor eax,eax
0x94cb: pop rbp
0x94cc: pop r12
0x94ce: ret
0x94d0: push r15
0x94d2: push r14
0x94d4: mov r15,rsi
0x94d7: push r13
0x94d9: push r12
0x94db: mov r10d,edx
0x94de: push rbp
0x94df: push rbx
0x94e0: mov rbp,rsi
0x94e3: mov rbx,rdi
0x94e6: sub rsp,0x48
0x94ea: mov rax,0x28
0x94f3: mov qword ptr [rsp+0x38],rax
0x94f8: xor eax,eax
0x94fa: mov rax,qword ptr [rdi+0x28]
0x94fe: sub rbp,rax
0x9501: cmp rax,rsi
0x9504: jle 0x9566
0x9506: cmp [rdi+0x90],0x1
0x950d: jnle 0x9640
0x9513: mov rax,qword ptr [rbx+0x50]
0x9517: mov [rbx+0x30],0x0
0x951f: mov rbp,r15
0x9522: mov [rbx+0x28],0x0
0x952a: mov [rbx+0x38],0x0
0x9532: mov [rbx+0x8c],0x0
0x9539: mov qword ptr [rbx+0x58],rax
0x953d: mov rax,qword ptr [rbx+0x60]
0x9541: mov qword ptr [rbx+0x68],rax
0x9545: mov eax,r10d
0x9548: and eax,0x1
0x954b: cmp eax,0x1
0x954e: sbb eax,eax
0x9550: and eax,0x2
0x9553: add eax,0x4
0x9556: cmp [rbx+0x8b],0x0
0x955d: mov dword ptr [rbx+0x70],eax
0x9560: jz 0x9630
0x9566: test rbp,rbp
0x9569: jz 0x95ce
0x956b: mov rax,qword ptr [rbx+0x38]
0x956f: movzx edx,byte ptr [rbx+0x8c]
0x9576: mov r8,qword ptr [rbx+0x30]
0x957a: cmp rax,rbp
0x957d: jle 0x96a0
0x9583: test dl,dl
0x9585: jnz 0x9798
0x958b: lea rsi,[rbp-0x1]
0x958f: mov edx,r10d
0x9592: mov rdi,rbx
0x9595: mov qword ptr [rsp],r8
0x9599: call 0x9200
0x959e: mov r8,qword ptr [rsp]
0x95a2: mov dword ptr [rbx+0x70],eax
0x95a5: sub r8,rbp
0x95a8: cmp [rbx+0x90],0x1
0x95af: jnle 0x9650
0x95b5: cmp [rbx+0x8b],0x0
0x95bc: jnz 0x9960
0x95c2: sub qword ptr [rbx+0x38],rbp
0x95c6: mov qword ptr [rbx+0x30],r8
0x95ca: add qword ptr [rbx+0x8],rbp
0x95ce: mov rax,qword ptr [rbx+0x58]
0x95d2: sub qword ptr [rbx+0x68],rbp
0x95d6: mov qword ptr [rbx+0x28],r15
0x95da: sub rax,rbp
0x95dd: cmp [rbx+0x90],0x1
0x95e4: mov qword ptr [rbx+0x58],rax
0x95e8: jle 0x9688
0x95ee: cmp [rbx+0x88],0x0
0x95f5: mov rdi,rbx
0x95f8: jz 0x9678
0x95fa: call 0x6340
0x95ff: test eax,eax
0x9601: jnz 0x960d
0x9603: mov [rbx+0x48],0x0
0x960b: xor eax,eax
0x960d: mov rcx,qword ptr [rsp+0x38]
0x9612: xor rcx,0x28
0x961b: jnz 0x9c6a
0x9621: add rsp,0x48
0x9625: pop rbx
0x9626: pop rbp
0x9627: pop r12
0x9629: pop r13
0x962b: pop r14
0x962d: pop r15
0x962f: ret
0x9630: mov rax,qword ptr [rbx]
0x9633: mov qword ptr [rbx+0x8],rax
0x9637: jmp 0x9566
0x963c: nop qword ptr [rax+0x0]
0x9640: mov [rdi+0x20],0x0
0x9648: jmp 0x9513
0x964d: nop qword ptr [rax]
0x9650: mov rdi,qword ptr [rbx+0x10]
0x9654: lea rdx,[r8*4+0x0]
0x965c: lea rsi,[rdi+rbp*4+0x0]
0x9660: call 0x1b90
0x9665: mov r8,qword ptr [rbx+0x30]
0x9669: sub r8,rbp
0x966c: jmp 0x95b5
0x9671: nop qword ptr [rax+0x0]
0x9678: call 0x6170
0x967d: jmp 0x9603
0x9682: nop qword ptr [rax+rax*1+0x0]
0x9688: cmp [rbx+0x8b],0x0
0x968f: jnz 0x9a40
0x9695: mov qword ptr [rbx+0x30],rax
0x9699: jmp 0x9603
0x969e: nop 
0x96a0: test dl,dl
0x96a2: jnz 0x9b4d
0x96a8: movsxd rdx,dword ptr [rbx+0x90]
0x96af: mov [rbx+0x30],0x0
0x96b7: mov r11,qword ptr [rbx+0x28]
0x96bb: cmp edx,0x1
0x96be: jle 0x9aa8
0x96c4: cmp [rbx+0x89],0x0
0x96cb: jnz 0x9988
0x96d1: lea r14,[r11+rax*1+0x0]
0x96d5: cmp r15,r14
0x96d8: jle 0x9b1f
0x96de: lea rax,[rbx+0x20]
0x96e2: lea r13,[rsp+0x24]
0x96e7: mov qword ptr [rsp+0x10],rax
0x96ec: nop qword ptr [rax+0x0]
0x96f0: mov r12,qword ptr [rbx+0x50]
0x96f4: mov rsi,qword ptr [rbx]
0x96f7: mov rdi,r13
0x96fa: mov rax,qword ptr [rbx+0x20]
0x96fe: mov rcx,qword ptr [rsp+0x10]
0x9703: mov dword ptr [rsp+0xc],r10d
0x9708: mov qword ptr [rsp],r8
0x970c: sub r12,r14
0x970f: add rsi,r14
0x9712: mov rdx,r12
0x9715: mov qword ptr [rsp+0x18],rax
0x971a: call 0x5880
0x971f: lea rcx,[rax-0x1]
0x9723: mov edx,dword ptr [rsp+0x24]
0x9727: mov r8,qword ptr [rsp]
0x972b: mov r10d,dword ptr [rsp+0xc]
0x9730: cmp rcx,0xfffffffc
0x9734: jnbe 0x9b75
0x973a: add r14,rax
0x973d: cmp r15,r14
0x9740: jnle 0x96f0
0x9742: sub r14,r15
0x9745: cmp edx,0xff
0x9748: mov r12,r14
0x974b: mov qword ptr [rbx+0x30],r14
0x974f: jz 0x9b29
0x9755: cmp [rbx+0x8e],0x0
0x975c: jnz 0x9bc9
0x9762: xor eax,eax
0x9764: cmp edx,0xa
0x9767: jnz 0x9777
0x9769: xor eax,eax
0x976b: cmp [rbx+0x8d],0x0
0x9772: setnz al
0x9775: add eax,eax
0x9777: mov dword ptr [rbx+0x70],eax
0x977a: cmp r12,0x0
0x977e: jnz 0x9b9a
0x9784: movzx eax,byte ptr [rbx+0x8b]
0x978b: mov qword ptr [rbx+0x38],r12
0x978f: jmp 0x994c
0x9794: nop qword ptr [rax+0x0]
0x9798: mov r14,qword ptr [rbx+0x18]
0x979c: mov rcx,r8
0x979f: xor esi,esi
0x97a1: jmp 0x97b3
0x97a3: nop qword ptr [rax+rax*1+0x0]
0x97a8: jnl 0x97e3
0x97aa: lea rsi,[rax+0x1]
0x97ae: cmp rsi,rcx
0x97b1: jnl 0x97d8
0x97b3: lea rdx,[rsi+rcx*1+0x0]
0x97b7: mov rax,rdx
0x97ba: shr rax,0x3f
0x97be: add rax,rdx
0x97c1: sar rax,0x1
0x97c4: mov rdx,qword ptr [r14+rax*8+0x0]
0x97c8: mov r12,rax
0x97cb: cmp rdx,rbp
0x97ce: jle 0x97a8
0x97d0: mov rcx,rax
0x97d3: jmp 0x97ae
0x97d5: nop qword ptr [rax]
0x97d8: lea r12,[rax+0x1]
0x97dc: cmp rdx,rbp
0x97df: cmovnl r12,rax
0x97e3: lea r13,[r12-0x1]
0x97e8: mov edx,r10d
0x97eb: mov rdi,rbx
0x97ee: mov qword ptr [rsp],r8
0x97f2: mov rsi,r13
0x97f5: call 0x9200
0x97fa: cmp rbp,r12
0x97fd: mov dword ptr [rbx+0x70],eax
0x9800: mov r8,qword ptr [rsp]
0x9804: jnz 0x9888
0x980a: cmp rbp,r8
0x980d: jnl 0x9888
0x980f: cmp qword ptr [r14+r12*8+0x0],rbp
0x9813: jnz 0x9888
0x9815: mov rdi,qword ptr [rbx+0x10]
0x9819: sub r8,rbp
0x981c: lea rdx,[r8*4+0x0]
0x9824: lea rsi,[rdi+rbp*4+0x0]
0x9828: call 0x1b90
0x982d: mov rdi,qword ptr [rbx+0x8]
0x9831: mov rdx,qword ptr [rbx+0x30]
0x9835: lea rsi,[rdi+rbp*1+0x0]
0x9839: sub rdx,rbp
0x983c: call 0x1b90
0x9841: mov rax,qword ptr [rbx+0x30]
0x9845: sub qword ptr [rbx+0x38],rbp
0x9849: sub rax,rbp
0x984c: test rax,rax
0x984f: mov qword ptr [rbx+0x30],rax
0x9853: jle 0x9878
0x9855: mov rcx,qword ptr [rbx+0x18]
0x9859: xor eax,eax
0x985b: lea rsi,[rcx+rbp*8+0x0]
0x985f: nop 
0x9860: mov rdx,qword ptr [rsi+rax*8+0x0]
0x9864: sub rdx,rbp
0x9867: mov qword ptr [rcx+rax*8+0x0],rdx
0x986b: add rax,0x1
0x986f: cmp qword ptr [rbx+0x30],rax
0x9873: jnle 0x9860
0x9875: nop qword ptr [rax]
0x9878: movzx eax,byte ptr [rbx+0x8b]
0x987f: jmp 0x994c
0x9884: nop qword ptr [rax+0x0]
0x9888: mov rax,qword ptr [rbx+0x50]
0x988c: mov [rbx+0x8c],0x0
0x9893: add rax,rbp
0x9896: sub rax,r15
0x9899: mov qword ptr [rbx+0x58],rax
0x989d: mov rax,qword ptr [rbx+0x60]
0x98a1: add rax,rbp
0x98a4: sub rax,r15
0x98a7: test r12,r12
0x98aa: mov qword ptr [rbx+0x68],rax
0x98ae: jle 0x98d3
0x98b0: cmp qword ptr [r14+r12*8-0x8],rbp
0x98b5: jz 0x98cb
0x98b7: jmp 0x98d3
0x98b9: nop qword ptr [rax+0x0]
0x98c0: cmp qword ptr [r14+r13*8-0x8],rbp
0x98c5: jnz 0x98d3
0x98c7: sub r13,0x1
0x98cb: test r13,r13
0x98ce: mov r12,r13
0x98d1: jnz 0x98c0
0x98d3: cmp r12,r8
0x98d6: jnl 0x9b08
0x98dc: mov rax,qword ptr [rbx+0x10]
0x98e0: jmp 0x98f5
0x98e2: nop qword ptr [rax+rax*1+0x0]
0x98e8: add r12,0x1
0x98ec: cmp r12,r8
0x98ef: jz 0x9b10
0x98f5: cmp [rax+r12*4+0x0],0xff
0x98fa: jz 0x98e8
0x98fc: mov rdx,qword ptr [r14+r12*8+0x0]
0x9900: sub rdx,rbp
0x9903: cmp rdx,0x0
0x9907: mov qword ptr [rbx+0x30],rdx
0x990b: jz 0x9941
0x990d: jle 0x992f
0x990f: mov rax,qword ptr [rbx+0x10]
0x9913: lea rcx,[rax+rdx*4+0x0]
0x9917: nop qword ptr [rax+rax*1+0x0]
0x9920: mov [rax],0xffffffff
0x9926: add rax,0x4
0x992a: cmp rcx,rax
0x992d: jnz 0x9920
0x992f: mov rdi,qword ptr [rbx+0x8]
0x9933: mov esi,0xff
0x9938: call 0x1a10
0x993d: mov rdx,qword ptr [rbx+0x30]
0x9941: movzx eax,byte ptr [rbx+0x8b]
0x9948: mov qword ptr [rbx+0x38],rdx
0x994c: test al,al
0x994e: jz 0x95ca
0x9954: jmp 0x95ce
0x9959: nop qword ptr [rax+0x0]
0x9960: mov rdi,qword ptr [rbx+0x8]
0x9964: mov rdx,r8
0x9967: lea rsi,[rdi+rbp*1+0x0]
0x996b: call 0x1b90
0x9970: movzx eax,byte ptr [rbx+0x8b]
0x9977: sub qword ptr [rbx+0x30],rbp
0x997b: sub qword ptr [rbx+0x38],rbp
0x997f: jmp 0x994c
0x9981: nop qword ptr [rax+0x0]
0x9988: mov rcx,qword ptr [rbx]
0x998b: mov rdi,rbp
0x998e: sub rdi,rdx
0x9991: mov rdx,rdi
0x9994: lea r12,[rcx+r11*1+0x0]
0x9998: add rdx,r12
0x999b: lea rsi,[r12+rbp*1-0x1]
0x99a0: cmp rcx,rdx
0x99a3: cmovnae rcx,rdx
0x99a7: cmp rcx,rsi
0x99aa: jbe 0x99c5
0x99ac: jmp 0x96d1
0x99b1: nop qword ptr [rax+0x0]
0x99b8: sub rsi,0x1
0x99bc: cmp rcx,rsi
0x99bf: jnbe 0x96d1
0x99c5: movzx edx,byte ptr [rsi]
0x99c8: and edx,0xc0
0x99cb: cmp dl,0x80
0x99ce: jz 0x99b8
0x99d0: mov rdx,qword ptr [rbx+0x58]
0x99d4: mov rcx,qword ptr [rbx+0x78]
0x99d8: mov r14,rsi
0x99db: add rdx,r12
0x99de: sub rdx,rsi
0x99e1: test rcx,rcx
0x99e4: jnz 0x9c32
0x99ea: lea r13,[rsp+0x24]
0x99ef: add r12,rbp
0x99f2: lea rcx,[rsp+0x28]
0x99f7: sub r12,r14
0x99fa: mov dword ptr [rsp+0xc],r10d
0x99ff: mov qword ptr [rsp],r8
0x9a03: mov rdi,r13
0x9a06: mov [rsp+0x28],0x0
0x9a0f: call 0x5880
0x9a14: cmp r12,rax
0x9a17: mov r8,qword ptr [rsp]
0x9a1b: mov r10d,dword ptr [rsp+0xc]
0x9a20: jnbe 0x9a2c
0x9a22: cmp rax,0xfffffffd
0x9a26: jbe 0x9bf1
0x9a2c: mov r11,qword ptr [rbx+0x28]
0x9a30: mov rax,qword ptr [rbx+0x38]
0x9a34: jmp 0x96d1
0x9a39: nop qword ptr [rax+0x0]
0x9a40: cmp [rbx+0x88],0x0
0x9a47: jnz 0x9b40
0x9a4d: mov rcx,qword ptr [rbx+0x78]
0x9a51: test rcx,rcx
0x9a54: jz 0x9603
0x9a5a: cmp qword ptr [rbx+0x40],rax
0x9a5e: mov rdx,qword ptr [rbx+0x30]
0x9a62: cmovng rax,qword ptr [rbx+0x40]
0x9a67: cmp rax,rdx
0x9a6a: jnle 0x9a78
0x9a6c: jmp 0x9a98
0x9a6e: nop 
0x9a70: mov r15,qword ptr [rbx+0x28]
0x9a74: mov rcx,qword ptr [rbx+0x78]
0x9a78: mov rsi,qword ptr [rbx]
0x9a7b: add rsi,rdx
0x9a7e: movzx esi,byte ptr [rsi+r15*1+0x0]
0x9a83: movzx esi,byte ptr [rcx+rsi*1+0x0]
0x9a87: mov rcx,qword ptr [rbx+0x8]
0x9a8b: mov byte ptr [rcx+rdx*1+0x0],sil
0x9a8f: add rdx,0x1
0x9a93: cmp rax,rdx
0x9a96: jnz 0x9a70
0x9a98: mov qword ptr [rbx+0x30],rdx
0x9a9c: mov qword ptr [rbx+0x38],rdx
0x9aa0: jmp 0x9603
0x9aa5: nop qword ptr [rax]
0x9aa8: mov rax,qword ptr [rbx]
0x9aab: mov rdx,qword ptr [rbx+0x78]
0x9aaf: add rax,rbp
0x9ab2: test rdx,rdx
0x9ab5: movzx eax,byte ptr [r11+rax*1-0x1]
0x9abb: mov [rbx+0x38],0x0
0x9ac3: jz 0x9ac9
0x9ac5: movzx eax,byte ptr [rdx+rax*1+0x0]
0x9ac9: mov rcx,qword ptr [rbx+0x80]
0x9ad0: movzx edx,al
0x9ad3: sar rdx,0x6
0x9ad7: mov rcx,qword ptr [rcx+rdx*8+0x0]
0x9adb: mov edx,0x1
0x9ae0: bt rcx,rax
0x9ae4: jb 0x9b00
0x9ae6: xor edx,edx
0x9ae8: cmp al,0xa
0x9aea: jnz 0x9b00
0x9aec: xor edx,edx
0x9aee: cmp [rbx+0x8d],0x0
0x9af5: setnz dl
0x9af8: add edx,edx
0x9afa: nop qword ptr [rax+rax*1+0x0]
0x9b00: mov dword ptr [rbx+0x70],edx
0x9b03: jmp 0x9878
0x9b08: jnz 0x98fc
0x9b0e: nop 
0x9b10: mov [rbx+0x30],0x0
0x9b18: xor edx,edx
0x9b1a: jmp 0x9941
0x9b1f: sub r14,r15
0x9b22: mov r12,r14
0x9b25: mov qword ptr [rbx+0x30],r14
0x9b29: lea rsi,[r8-0x1]
0x9b2d: mov edx,r10d
0x9b30: mov rdi,rbx
0x9b33: call 0x9200
0x9b38: mov dword ptr [rbx+0x70],eax
0x9b3b: jmp 0x977a
0x9b40: mov rdi,rbx
0x9b43: call 0x6100
0x9b48: jmp 0x9603
0x9b4d: mov rdx,qword ptr [rbx+0x50]
0x9b51: mov [rbx+0x8c],0x0
0x9b58: add rdx,rbp
0x9b5b: sub rdx,r15
0x9b5e: mov qword ptr [rbx+0x58],rdx
0x9b62: mov rdx,qword ptr [rbx+0x60]
0x9b66: add rdx,rbp
0x9b69: sub rdx,r15
0x9b6c: mov qword ptr [rbx+0x68],rdx
0x9b70: jmp 0x96a8
0x9b75: test rax,rax
0x9b78: jz 0x9bed
0x9b7a: test r12,r12
0x9b7d: jz 0x9bed
0x9b7f: mov rax,qword ptr [rbx]
0x9b82: movzx edx,byte ptr [rax+r14*1+0x0]
0x9b87: mov rax,qword ptr [rsp+0x18]
0x9b8c: mov qword ptr [rbx+0x20],rax
0x9b90: mov eax,0x1
0x9b95: jmp 0x973a
0x9b9a: jle 0x9bb7
0x9b9c: mov rax,qword ptr [rbx+0x10]
0x9ba0: lea rdx,[rax+r12*4+0x0]
0x9ba4: nop qword ptr [rax+0x0]
0x9ba8: mov [rax],0xffffffff
0x9bae: add rax,0x4
0x9bb2: cmp rdx,rax
0x9bb5: jnz 0x9ba8
0x9bb7: cmp [rbx+0x8b],0x0
0x9bbe: jnz 0x9c18
0x9bc0: mov qword ptr [rbx+0x38],r12
0x9bc4: jmp 0x95ca
0x9bc9: mov edi,edx
0x9bcb: mov dword ptr [rsp],edx
0x9bce: call 0x1ab0
0x9bd3: test eax,eax
0x9bd5: jnz 0x9be3
0x9bd7: mov edx,dword ptr [rsp]
0x9bda: cmp edx,0x5f
0x9bdd: jnz 0x9762
0x9be3: mov eax,0x1
0x9be8: jmp 0x9777
0x9bed: xor edx,edx
0x9bef: jmp 0x9b87
0x9bf1: mov edx,dword ptr [rsp+0x24]
0x9bf5: sub rax,r12
0x9bf8: mov [rbx+0x20],0x0
0x9c00: mov r12,rax
0x9c03: mov qword ptr [rbx+0x30],rax
0x9c07: cmp edx,0xff
0x9c0a: jnz 0x9755
0x9c10: jmp 0x9a2c
0x9c15: nop qword ptr [rax]
0x9c18: mov rdi,qword ptr [rbx+0x8]
0x9c1c: mov rdx,r12
0x9c1f: mov esi,0xff
0x9c24: call 0x1a10
0x9c29: mov r12,qword ptr [rbx+0x30]
0x9c2d: jmp 0x9784
0x9c32: cmp rdx,0x6
0x9c36: mov edi,0x6
0x9c3b: lea r11,[rsp+0x32]
0x9c40: cmovng rdi,rdx
0x9c44: sub edi,0x1
0x9c47: test edi,edi
0x9c49: movsxd rax,edi
0x9c4c: js 0x9c62
0x9c4e: movzx edi,byte ptr [rsi+rax*1+0x0]
0x9c52: movzx edi,byte ptr [rcx+rdi*1+0x0]
0x9c56: mov byte ptr [r11+rax*1+0x0],dil
0x9c5a: sub rax,0x1
0x9c5e: test eax,eax
0x9c60: jns 0x9c4e
0x9c62: mov rsi,r11
0x9c65: jmp 0x99ea
0x9c6a: call 0x1990
0x9c70: push r15
0x9c72: push r14
0x9c74: mov r14,rdx
0x9c77: push r13
0x9c79: push r12
0x9c7b: lea rdx,[rsi+rsi*2+0x0]
0x9c7f: push rbp
0x9c80: push rbx
0x9c81: pxor xmm0,xmm0
0x9c85: sub rsp,0x48
0x9c89: mov rax,0x28
0x9c92: mov qword ptr [rsp+0x38],rax
0x9c97: xor eax,eax
0x9c99: mov rax,qword ptr [rdi+0x38]
0x9c9d: mov [rsp+0x30],0x0
0x9ca6: movaps [rsp+0x20],xmm0
0x9cab: mov qword ptr [rsp+0x10],rcx
0x9cb0: lea rbp,[rax+rdx*8+0x0]
0x9cb4: mov r10,qword ptr [rbp+0x8]
0x9cb8: test r10,r10
0x9cbb: jle 0x9ea2
0x9cc1: lea rax,[rsp+0x20]
0x9cc6: mov r12,rdi
0x9cc9: mov r13,rsi
0x9ccc: xor ebx,ebx
0x9cce: mov qword ptr [rsp+0x18],rax
0x9cd3: jmp 0x9d2d
0x9cd5: nop qword ptr [rax]
0x9cd8: test rax,rax
0x9cdb: jnz 0x9db8
0x9ce1: mov rdi,qword ptr [r14+0x8]
0x9ce5: lea rsi,[r14+0x10]
0x9ce9: mov rdx,r8
0x9cec: call 0x7420
0x9cf1: test rax,rax
0x9cf4: jz 0x9db8
0x9cfa: mov rdx,qword ptr [r12+0x38]
0x9cff: mov rsi,qword ptr [rsp+0x10]
0x9d04: mov rdi,qword ptr [rsp+0x18]
0x9d09: add rdx,r9
0x9d0c: call 0x7f30
0x9d11: test eax,eax
0x9d13: jnz 0x9e90
0x9d19: mov r10,qword ptr [rbp+0x8]
0x9d1d: nop qword ptr [rax]
0x9d20: add rbx,0x1
0x9d24: cmp r10,rbx
0x9d27: jle 0x9e00
0x9d2d: mov rax,qword ptr [rbp+0x10]
0x9d31: mov rax,qword ptr [rax+rbx*8+0x0]
0x9d35: cmp r13,rax
0x9d38: jz 0x9d20
0x9d3a: mov rdx,rax
0x9d3d: shl rdx,0x4
0x9d41: add rdx,qword ptr [r12]
0x9d45: test [rdx+0x8],0x8
0x9d49: jz 0x9d20
0x9d4b: lea r9,[rax+rax*2+0x0]
0x9d4f: mov rcx,qword ptr [r12+0x28]
0x9d54: lea r11,[rbp+0x10]
0x9d58: mov rdi,r10
0x9d5b: shl r9,0x3
0x9d5f: mov rsi,r11
0x9d62: add rcx,r9
0x9d65: mov r15,qword ptr [rcx+0x10]
0x9d69: mov qword ptr [rsp+0x8],rcx
0x9d6e: mov r8,qword ptr [r15]
0x9d71: mov rdx,r8
0x9d74: mov qword ptr [rsp],r8
0x9d78: call 0x7420
0x9d7d: mov rcx,qword ptr [rsp+0x8]
0x9d82: mov r8,qword ptr [rsp]
0x9d86: cmp [rcx+0x8],0x1
0x9d8b: jnle 0x9cd8
0x9d91: test rax,rax
0x9d94: jnz 0x9d20
0x9d96: mov rdi,qword ptr [r14+0x8]
0x9d9a: lea rsi,[r14+0x10]
0x9d9e: mov rdx,r8
0x9da1: call 0x7420
0x9da6: test rax,rax
0x9da9: jnz 0x9cfa
0x9daf: jmp 0x9d20
0x9db4: nop qword ptr [rax+0x0]
0x9db8: mov r15,qword ptr [r15+0x8]
0x9dbc: test r15,r15
0x9dbf: jle 0x9d20
0x9dc5: mov rdx,r15
0x9dc8: mov rsi,r11
0x9dcb: mov rdi,r10
0x9dce: call 0x7420
0x9dd3: test rax,rax
0x9dd6: jnz 0x9d20
0x9ddc: mov rdi,qword ptr [r14+0x8]
0x9de0: lea rsi,[r14+0x10]
0x9de4: call 0x7420
0x9de9: test rax,rax
0x9dec: jz 0x9d20
0x9df2: jmp 0x9cfa
0x9df7: nop qword ptr [rax+rax*1+0x0]
0x9e00: xor r9d,r9d
0x9e03: test r10,r10
0x9e06: lea r11,[rsp+0x30]
0x9e0b: jle 0x9e5c
0x9e0d: nop qword ptr [rax]
0x9e10: mov rax,qword ptr [rbp+0x10]
0x9e14: mov rdi,qword ptr [rsp+0x28]
0x9e19: mov rsi,r11
0x9e1c: mov r10,qword ptr [rax+r9*8+0x0]
0x9e20: mov rdx,r10
0x9e23: call 0x7420
0x9e28: test rax,rax
0x9e2b: jnz 0x9e52
0x9e2d: lea rbx,[r14+0x10]
0x9e31: mov rdi,qword ptr [r14+0x8]
0x9e35: mov rsi,rbx
0x9e38: call 0x7420
0x9e3d: sub rax,0x1
0x9e41: mov rdx,rax
0x9e44: js 0x9e52
0x9e46: lea rdi,[r14+0x8]
0x9e4a: mov rsi,rbx
0x9e4d: call 0x75a0
0x9e52: add r9,0x1
0x9e56: cmp qword ptr [rbp+0x8],r9
0x9e5a: jnle 0x9e10
0x9e5c: mov rdi,qword ptr [rsp+0x30]
0x9e61: call 0x1880
0x9e66: xor eax,eax
0x9e68: mov rsi,qword ptr [rsp+0x38]
0x9e6d: xor rsi,0x28
0x9e76: jnz 0x9ea6
0x9e78: add rsp,0x48
0x9e7c: pop rbx
0x9e7d: pop rbp
0x9e7e: pop r12
0x9e80: pop r13
0x9e82: pop r14
0x9e84: pop r15
0x9e86: ret
0x9e87: nop qword ptr [rax+rax*1+0x0]
0x9e90: mov rdi,qword ptr [rsp+0x30]
0x9e95: mov dword ptr [rsp],eax
0x9e98: call 0x1880
0x9e9d: mov eax,dword ptr [rsp]
0x9ea0: jmp 0x9e68
0x9ea2: xor edi,edi
0x9ea4: jmp 0x9e61
0x9ea6: call 0x1990
0x9eb0: push r15
0x9eb2: push r14
0x9eb4: mov r15,rdi
0x9eb7: push r13
0x9eb9: push r12
0x9ebb: mov edi,0x3800
0x9ec0: push rbp
0x9ec1: push rbx
0x9ec2: sub rsp,0x108
0x9ec9: mov rax,0x28
0x9ed2: mov qword ptr [rsp+0xf8],rax
0x9eda: xor eax,eax
0x9edc: mov qword ptr [rsp+0x8],rsi
0x9ee1: call 0x1ac0
0x9ee6: test rax,rax
0x9ee9: mov qword ptr [rsp+0x18],rax
0x9eee: jz 0xa2c0
0x9ef4: mov rax,qword ptr [rsp+0x18]
0x9ef9: pxor xmm0,xmm0
0x9efd: lea rbx,[rax+0x1800]
0x9f04: mov rax,qword ptr [rsp+0x8]
0x9f09: movaps [rsp+0x90],xmm0
0x9f11: mov qword ptr [rsp+0x40],rbx
0x9f16: movaps [rsp+0xa0],xmm0
0x9f1e: cmp [rax+0x10],0x0
0x9f23: mov [rax+0x58],0x0
0x9f2b: mov [rax+0x60],0x0
0x9f33: jle 0xa9aa
0x9f39: mov qword ptr [rsp+0x30],r15
0x9f3e: xor ebp,ebp
0x9f40: mov [rsp+0x10],0x0
0x9f49: mov r15,rbx
0x9f4c: mov rbx,qword ptr [rsp+0x10]
0x9f51: lea rax,[rbx*8+0x0]
0x9f59: mov qword ptr [rsp+0x20],rax
0x9f5e: mov rax,qword ptr [rsp+0x8]
0x9f63: mov rax,qword ptr [rax+0x18]
0x9f67: mov r13,qword ptr [rax+rbx*8+0x0]
0x9f6b: mov rax,qword ptr [rsp+0x30]
0x9f70: shl r13,0x4
0x9f74: add r13,qword ptr [rax]
0x9f77: movzx r14d,byte ptr [r13+0x8]
0x9f7c: mov eax,dword ptr [r13+0x8]
0x9f80: shr eax,0x8
0x9f83: and ax,0x3ff
0x9f87: cmp r14d,0x1
0x9f8b: jz 0xa2f0
0x9f91: cmp r14d,0x3
0x9f95: jz 0xa760
0x9f9b: cmp r14d,0x5
0x9f9f: jz 0xa620
0x9fa5: cmp r14d,0x7
0x9fa9: jz 0xa789
0x9faf: mov rbx,qword ptr [rsp+0x8]
0x9fb4: add [rsp+0x10],0x1
0x9fba: mov rax,qword ptr [rsp+0x10]
0x9fbf: cmp rax,qword ptr [rbx+0x10]
0x9fc3: jl 0x9f4c
0x9fc5: test rbp,rbp
0x9fc8: mov r15,qword ptr [rsp+0x30]
0x9fcd: jle 0xaa29
0x9fd3: lea rbx,[rbp+0x1]
0x9fd7: mov [rsp+0x78],0x0
0x9fe0: mov qword ptr [rsp+0x70],rbx
0x9fe5: shl rbx,0x3
0x9fe9: mov rdi,rbx
0x9fec: call 0x1ac0
0x9ff1: test rax,rax
0x9ff4: mov r12,rax
0x9ff7: mov qword ptr [rsp+0x80],rax
0x9fff: jz 0xa7ff
0xa005: mov rax,0x768614336404564053
0xa00f: mov [rsp+0x6c],0x0
0xa017: cmp rbp,rax
0xa01a: jnle 0xa7ff
0xa020: lea rax,[rbp+rbp*2+0x0]
0xa025: shl rax,0x3
0xa029: mov rdi,rax
0xa02c: mov qword ptr [rsp+0x58],rax
0xa031: call 0x1ac0
0xa036: test rax,rax
0xa039: mov qword ptr [rsp+0x10],rax
0xa03e: jz 0xa7ff
0xa044: mov rax,qword ptr [rsp+0x10]
0xa049: sub rbx,0x8
0xa04d: mov r12,qword ptr [rsp+0x40]
0xa052: pxor xmm0,xmm0
0xa056: lea r14,[rsp+0x70]
0xa05b: mov qword ptr [rsp+0x20],rbp
0xa060: mov [rsp+0x4f],0x0
0xa065: mov rbp,r15
0xa068: add rax,rbx
0xa06b: mov qword ptr [rsp+0x50],r12
0xa070: add rbx,rax
0xa073: mov qword ptr [rsp+0x30],rax
0xa078: mov rax,qword ptr [rsp+0x18]
0xa07d: movaps [rsp+0xd0],xmm0
0xa085: mov qword ptr [rsp+0x38],rbx
0xa08a: xor ebx,ebx
0xa08c: lea r13,[rax+0x8]
0xa090: lea rax,[rsp+0x6c]
0xa095: movaps [rsp+0xe0],xmm0
0xa09d: mov qword ptr [rsp+0x28],rax
0xa0a2: mov [rsp+0x78],0x0
0xa0ab: cmp [r13+0x0],0x0
0xa0b0: jle 0xa0f8
0xa0b2: xor r15d,r15d
0xa0b5: nop qword ptr [rax]
0xa0b8: mov rax,qword ptr [r13+0x8]
0xa0bc: mov rdx,qword ptr [rax+r15*8+0x0]
0xa0c0: mov rax,qword ptr [rbp+0x18]
0xa0c4: mov rax,qword ptr [rax+rdx*8+0x0]
0xa0c8: cmp rax,0xffffffff
0xa0cc: jz 0xa0ee
0xa0ce: lea rdx,[rax+rax*2+0x0]
0xa0d2: mov rax,qword ptr [rbp+0x30]
0xa0d6: mov rdi,r14
0xa0d9: lea rsi,[rax+rdx*8+0x0]
0xa0dd: call 0x7940
0xa0e2: test eax,eax
0xa0e4: mov dword ptr [rsp+0x6c],eax
0xa0e8: jnz 0xa7e8
0xa0ee: add r15,0x1
0xa0f2: cmp qword ptr [r13+0x0],r15
0xa0f6: jnle 0xa0b8
0xa0f8: mov rdi,qword ptr [rsp+0x28]
0xa0fd: xor ecx,ecx
0xa0ff: mov rsi,rbp
0xa102: mov rdx,r14
0xa105: call 0x8770
0xa10a: mov rsi,qword ptr [rsp+0x10]
0xa10f: test rax,rax
0xa112: mov qword ptr [rsi+rbx*8+0x0],rax
0xa116: jz 0xa8c8
0xa11c: cmp [rax+0x68],0x0
0xa120: js 0xa840
0xa126: mov rdi,qword ptr [rsp+0x30]
0xa12b: mov rsi,qword ptr [rsp+0x38]
0xa130: mov qword ptr [rdi+rbx*8+0x0],rax
0xa134: mov rax,qword ptr [rsp+0x10]
0xa139: mov rax,qword ptr [rax+rbx*8+0x0]
0xa13d: mov qword ptr [rsi+rbx*8+0x0],rax
0xa141: lea rdx,[rsp+0xd0]
0xa149: xor eax,eax
0xa14b: mov rcx,qword ptr [rdx+rax*1+0x0]
0xa14f: or rcx,qword ptr [r12+rax*1+0x0]
0xa153: mov qword ptr [rdx+rax*1+0x0],rcx
0xa157: add rax,0x8
0xa15b: cmp rax,0x20
0xa15f: jnz 0xa14b
0xa161: add rbx,0x1
0xa165: add r13,0x18
0xa169: add r12,0x20
0xa16d: cmp rbx,qword ptr [rsp+0x20]
0xa172: jnz 0xa0a2
0xa178: cmp [rsp+0x4f],0x0
0xa17d: mov r15,rbp
0xa180: mov rbp,qword ptr [rsp+0x20]
0xa185: mov qword ptr [rsp+0x20],rdx
0xa18a: jnz 0xa8d9
0xa190: mov esi,0x100
0xa195: mov edi,0x8
0xa19a: call 0x1a70
0xa19f: mov r11,rax
0xa1a2: mov rax,qword ptr [rsp+0x8]
0xa1a7: test r11,r11
0xa1aa: mov qword ptr [rax+0x58],r11
0xa1ae: jz 0xa7ed
0xa1b4: mov rbx,qword ptr [rsp+0x40]
0xa1b9: mov r12,qword ptr [rsp+0x10]
0xa1be: xor r9d,r9d
0xa1c1: mov r13,qword ptr [rsp+0x30]
0xa1c6: mov rdx,qword ptr [rsp+0x20]
0xa1cb: add rbx,0x20
0xa1cf: mov rax,qword ptr [rdx+r9*1+0x0]
0xa1d3: test rax,rax
0xa1d6: jz 0xa204
0xa1d8: mov rsi,r9
0xa1db: mov ecx,0x1
0xa1e0: shl rsi,0x6
0xa1e4: add rsi,r11
0xa1e7: nop qword ptr [rax+rax*1+0x0]
0xa1f0: test al,0x1
0xa1f2: jnz 0xa958
0xa1f8: add rcx,rcx
0xa1fb: add rsi,0x8
0xa1ff: shr rax,0x1
0xa202: jnz 0xa1f0
0xa204: add r9,0x8
0xa208: cmp r9,0x20
0xa20c: jnz 0xa1cf
0xa20e: test [rsp+0xd1],0x4
0xa216: jz 0xa252
0xa218: xor eax,eax
0xa21a: mov rdx,qword ptr [rsp+0x50]
0xa21f: jmp 0xa22e
0xa221: add rax,0x1
0xa225: add rdx,0x20
0xa229: cmp rax,rbp
0xa22c: jz 0xa252
0xa22e: test [rdx],0x400
0xa235: jz 0xa221
0xa237: mov rbx,qword ptr [rsp+0x38]
0xa23c: cmp [rsp+0x4f],0x0
0xa241: mov rax,qword ptr [rbx+rax*8+0x0]
0xa245: mov qword ptr [r11+0x50],rax
0xa249: jz 0xa252
0xa24b: mov qword ptr [r11+0x850],rax
0xa252: mov rdi,qword ptr [rsp+0x10]
0xa257: call 0x1880
0xa25c: mov rdi,qword ptr [rsp+0x80]
0xa264: call 0x1880
0xa269: mov rax,qword ptr [rsp+0x18]
0xa26e: mov rbx,qword ptr [rsp+0x58]
0xa273: lea rbp,[rax+0x10]
0xa277: add rbx,rbp
0xa27a: mov rdi,qword ptr [rbp+0x0]
0xa27e: add rbp,0x18
0xa282: call 0x1880
0xa287: cmp rbx,rbp
0xa28a: jnz 0xa27a
0xa28c: mov rdi,qword ptr [rsp+0x18]
0xa291: call 0x1880
0xa296: mov eax,0x1
0xa29b: jmp 0xa2c2
0xa29d: test rbp,rbp
0xa2a0: mov [rbx+0x8],0x0
0xa2a8: mov [rbx],0x0
0xa2af: jnz 0xa5e0
0xa2b5: mov rdi,qword ptr [rsp+0x18]
0xa2ba: call 0x1880
0xa2bf: nop 
0xa2c0: xor eax,eax
0xa2c2: mov rbx,qword ptr [rsp+0xf8]
0xa2ca: xor rbx,0x28
0xa2d3: jnz 0xaa24
0xa2d9: add rsp,0x108
0xa2e0: pop rbx
0xa2e1: pop rbp
0xa2e2: pop r12
0xa2e4: pop r13
0xa2e6: pop r14
0xa2e8: pop r15
0xa2ea: ret
0xa2eb: nop qword ptr [rax+rax*1+0x0]
0xa2f0: movzx ecx,byte ptr [r13+0x0]
0xa2f5: lea r12,[rsp+0x90]
0xa2fd: mov edi,0x1
0xa302: mov rdx,rcx
0xa305: and ecx,0x3f
0xa308: shr rdx,0x3
0xa30c: shl rdi,cl
0xa30f: and edx,0x18
0xa312: or qword ptr [r12+rdx*1+0x0],rdi
0xa316: test ax,ax
0xa319: jz 0xa3e0
0xa31f: test al,0x20
0xa321: jnz 0xa690
0xa327: test al,0x80
0xa329: jnz 0xa5c4
0xa32f: test al,0x4
0xa331: jz 0xa385
0xa333: cmp r14d,0x1
0xa337: jz 0xa715
0xa33d: mov r8,qword ptr [rsp+0x30]
0xa342: cmp [r8+0xb4],0x1
0xa34a: jle 0xa7a2
0xa350: mov rdi,qword ptr [r8+0x78]
0xa354: xor esi,esi
0xa356: xor ecx,ecx
0xa358: mov rdx,qword ptr [rdi+rcx*8+0x0]
0xa35c: not rdx
0xa35f: or rdx,qword ptr [r8+rcx*8+0xb8]
0xa367: and rdx,qword ptr [r12+rcx*8+0x0]
0xa36b: mov qword ptr [r12+rcx*8+0x0],rdx
0xa36f: add rcx,0x1
0xa373: or rsi,rdx
0xa376: cmp rcx,0x4
0xa37a: jnz 0xa358
0xa37c: test rsi,rsi
0xa37f: jz 0x9faf
0xa385: test al,0x8
0xa387: jz 0xa3e0
0xa389: cmp r14d,0x1
0xa38d: jz 0xa6c1
0xa393: mov rdi,qword ptr [rsp+0x30]
0xa398: cmp [rdi+0xb4],0x1
0xa39f: jle 0xa6de
0xa3a5: mov rsi,qword ptr [rdi+0x78]
0xa3a9: xor ecx,ecx
0xa3ab: xor edx,edx
0xa3ad: mov rax,qword ptr [rdi+rdx*8+0xb8]
0xa3b5: and rax,qword ptr [rsi+rdx*8+0x0]
0xa3b9: not rax
0xa3bc: and rax,qword ptr [r12+rdx*8+0x0]
0xa3c0: mov qword ptr [r12+rdx*8+0x0],rax
0xa3c4: add rdx,0x1
0xa3c8: or rcx,rax
0xa3cb: cmp rdx,0x4
0xa3cf: jnz 0xa3ad
0xa3d1: test rcx,rcx
0xa3d4: jz 0x9faf
0xa3da: nop qword ptr [rax+rax*1+0x0]
0xa3e0: xor ebx,ebx
0xa3e2: test rbp,rbp
0xa3e5: jle 0xa54b
0xa3eb: mov qword ptr [rsp+0x28],r13
0xa3f0: mov r13,r15
0xa3f3: nop qword ptr [rax+rax*1+0x0]
0xa3f8: mov r10,rbx
0xa3fb: shl r10,0x5
0xa3ff: cmp r14d,0x1
0xa403: jnz 0xa428
0xa405: mov rax,qword ptr [rsp+0x28]
0xa40a: movzx edx,byte ptr [rax]
0xa40d: mov rax,rdx
0xa410: shr rax,0x3
0xa414: and eax,0x18
0xa417: add rax,r13
0xa41a: mov rax,qword ptr [rax+r10*1+0x0]
0xa41e: bt rax,rdx
0xa422: jnb 0xa53b
0xa428: lea rdi,[r13+r10*1+0x0]
0xa42d: lea rsi,[rsp+0xb0]
0xa435: xor ecx,ecx
0xa437: xor eax,eax
0xa439: mov rdx,qword ptr [r12+rax*8+0x0]
0xa43d: and rdx,qword ptr [rdi+rax*8+0x0]
0xa441: mov qword ptr [rsi+rax*8+0x0],rdx
0xa445: add rax,0x1
0xa449: or rcx,rdx
0xa44c: cmp rax,0x4
0xa450: jnz 0xa439
0xa452: test rcx,rcx
0xa455: jz 0xa53b
0xa45b: lea r11,[rsp+0xd0]
0xa463: xor r15d,r15d
0xa466: xor r9d,r9d
0xa469: xor ecx,ecx
0xa46b: mov rsi,qword ptr [r12+rcx*8+0x0]
0xa46f: mov rax,qword ptr [rdi+rcx*8+0x0]
0xa473: mov rdx,rsi
0xa476: not rdx
0xa479: and rdx,rax
0xa47c: not rax
0xa47f: and rax,rsi
0xa482: mov qword ptr [r11+rcx*8+0x0],rdx
0xa486: or r9,rdx
0xa489: mov qword ptr [r12+rcx*8+0x0],rax
0xa48d: add rcx,0x1
0xa491: or r15,rax
0xa494: cmp rcx,0x4
0xa498: jnz 0xa46b
0xa49a: mov rdi,qword ptr [rsp+0x18]
0xa49f: lea rax,[rbx+rbx*2+0x0]
0xa4a3: test r9,r9
0xa4a6: lea rdx,[rdi+rax*8+0x0]
0xa4aa: jz 0xa514
0xa4ac: mov rax,rbp
0xa4af: movdqa xmm0,[rsp+0xd0]
0xa4b8: shl rax,0x5
0xa4bc: mov rsi,rdx
0xa4bf: mov qword ptr [rsp+0x38],rdx
0xa4c4: add rax,r13
0xa4c7: movups [rax],xmm0
0xa4ca: movdqa xmm0,[rsp+0xe0]
0xa4d3: movups [rax+0x10],xmm0
0xa4d7: lea rax,[rbp+rbp*2+0x0]
0xa4dc: lea rdi,[rdi+rax*8+0x0]
0xa4e0: movdqa xmm0,[rsp+0xb0]
0xa4e9: movups [r13+r10*1+0x0],xmm0
0xa4ef: movdqa xmm0,[rsp+0xc0]
0xa4f8: movups [r13+r10*1+0x10],xmm0
0xa4fe: call 0x8580
0xa503: test eax,eax
0xa505: jnz 0xa5e0
0xa50b: mov rdx,qword ptr [rsp+0x38]
0xa510: add rbp,0x1
0xa514: mov rax,qword ptr [rsp+0x8]
0xa519: mov rsi,qword ptr [rsp+0x20]
0xa51e: mov rdi,rdx
0xa521: mov rax,qword ptr [rax+0x18]
0xa525: mov rsi,qword ptr [rax+rsi*1+0x0]
0xa529: call 0x5ee0
0xa52e: test al,al
0xa530: jz 0xa5e0
0xa536: test r15,r15
0xa539: jz 0xa548
0xa53b: add rbx,0x1
0xa53f: cmp rbx,rbp
0xa542: jl 0xa3f8
0xa548: mov r15,r13
0xa54b: cmp rbp,rbx
0xa54e: jnz 0x9faf
0xa554: mov rax,rbp
0xa557: movdqa xmm0,[rsp+0x90]
0xa560: shl rax,0x5
0xa564: mov rbx,qword ptr [rsp+0x20]
0xa569: mov edi,0x8
0xa56e: add rax,r15
0xa571: movups [rax],xmm0
0xa574: movdqa xmm0,[rsp+0xa0]
0xa57d: movups [rax+0x10],xmm0
0xa581: mov rax,qword ptr [rsp+0x8]
0xa586: mov rax,qword ptr [rax+0x18]
0xa58a: mov r13,qword ptr [rax+rbx*1+0x0]
0xa58e: mov rbx,qword ptr [rsp+0x18]
0xa593: lea rax,[rbp+rbp*2+0x0]
0xa598: lea rbx,[rbx+rax*8+0x0]
0xa59c: mov [rbx],0x1
0xa5a3: mov [rbx+0x8],0x1
0xa5ab: call 0x1ac0
0xa5b0: test rax,rax
0xa5b3: mov qword ptr [rbx+0x10],rax
0xa5b7: jz 0xa29d
0xa5bd: mov qword ptr [rax],r13
0xa5c0: add rbp,0x1
0xa5c4: pxor xmm0,xmm0
0xa5c8: movaps [r12],xmm0
0xa5cd: movaps [r12+0x10],xmm0
0xa5d3: jmp 0x9faf
0xa5d8: nop qword ptr [rax+rax*1+0x0]
0xa5e0: mov rax,qword ptr [rsp+0x18]
0xa5e5: lea rbx,[rax+0x10]
0xa5e9: lea rax,[rbp+rbp*2+0x0]
0xa5ee: lea rbp,[rbx+rax*8+0x0]
0xa5f2: nop qword ptr [rax+rax*1+0x0]
0xa5f8: mov rdi,qword ptr [rbx]
0xa5fb: add rbx,0x18
0xa5ff: call 0x1880
0xa604: cmp rbp,rbx
0xa607: jnz 0xa5f8
0xa609: mov rdi,qword ptr [rsp+0x18]
0xa60e: call 0x1880
0xa613: jmp 0xa2c0
0xa618: nop qword ptr [rax+rax*1+0x0]
0xa620: mov rsi,qword ptr [rsp+0x30]
0xa625: cmp [rsi+0xb4],0x1
0xa62c: jle 0xa735
0xa632: mov rsi,qword ptr [rsi+0x78]
0xa636: lea r12,[rsp+0x90]
0xa63e: xor edx,edx
0xa640: mov rcx,qword ptr [r12+rdx*1+0x0]
0xa644: or rcx,qword ptr [rsi+rdx*1+0x0]
0xa648: mov qword ptr [r12+rdx*1+0x0],rcx
0xa64c: add rdx,0x8
0xa650: cmp rdx,0x20
0xa654: jnz 0xa640
0xa656: mov rbx,qword ptr [rsp+0x30]
0xa65b: mov rdx,qword ptr [rbx+0xd8]
0xa662: test dl,0x40
0xa665: jnz 0xa673
0xa667: and [rsp+0x90],0xfffffbff
0xa673: and edx,0x80
0xa679: jz 0xa316
0xa67f: and [rsp+0x90],0xfffffffe
0xa688: jmp 0xa316
0xa68d: nop qword ptr [rax]
0xa690: mov rdx,qword ptr [rsp+0x90]
0xa698: pxor xmm0,xmm0
0xa69c: and dh,0x4
0xa69f: movaps [r12],xmm0
0xa6a4: movaps [r12+0x10],xmm0
0xa6aa: jz 0x9faf
0xa6b0: mov [rsp+0x90],0x400
0xa6bc: jmp 0xa327
0xa6c1: test [r13+0xa],0x40
0xa6c6: jnz 0xa5c4
0xa6cc: mov rdi,qword ptr [rsp+0x30]
0xa6d1: cmp [rdi+0xb4],0x1
0xa6d8: jnle 0xa3a5
0xa6de: mov rsi,qword ptr [rsp+0x30]
0xa6e3: xor ecx,ecx
0xa6e5: xor edx,edx
0xa6e7: mov rax,qword ptr [rsi+rdx*8+0xb8]
0xa6ef: not rax
0xa6f2: and rax,qword ptr [r12+rdx*8+0x0]
0xa6f6: mov qword ptr [r12+rdx*8+0x0],rax
0xa6fa: add rdx,0x1
0xa6fe: or rcx,rax
0xa701: cmp rdx,0x4
0xa705: jnz 0xa6e7
0xa707: test rcx,rcx
0xa70a: jnz 0xa3e0
0xa710: jmp 0x9faf
0xa715: test [r13+0xa],0x40
0xa71a: jz 0xa5c4
0xa720: mov r8,qword ptr [rsp+0x30]
0xa725: cmp [r8+0xb4],0x1
0xa72d: jnle 0xa350
0xa733: jmp 0xa7a2
0xa735: pcmpeqd xmm0,xmm0
0xa739: lea r12,[rsp+0x90]
0xa741: movaps [rsp+0x90],xmm0
0xa749: movaps [rsp+0xa0],xmm0
0xa751: jmp 0xa656
0xa756: nop qword ptr [rax+rax*1+0x0]
0xa760: mov rsi,qword ptr [r13+0x0]
0xa764: lea r12,[rsp+0x90]
0xa76c: xor edx,edx
0xa76e: mov rcx,qword ptr [r12+rdx*1+0x0]
0xa772: or rcx,qword ptr [rsi+rdx*1+0x0]
0xa776: mov qword ptr [r12+rdx*1+0x0],rcx
0xa77a: add rdx,0x8
0xa77e: cmp rdx,0x20
0xa782: jnz 0xa76e
0xa784: jmp 0xa316
0xa789: pcmpeqd xmm0,xmm0
0xa78d: lea r12,[rsp+0x90]
0xa795: movaps [rsp+0x90],xmm0
0xa79d: jmp 0xa656
0xa7a2: mov rdi,qword ptr [rsp+0x30]
0xa7a7: xor esi,esi
0xa7a9: xor edx,edx
0xa7ab: mov rcx,qword ptr [r12+rdx*8+0x0]
0xa7af: and rcx,qword ptr [rdi+rdx*8+0xb8]
0xa7b7: mov qword ptr [r12+rdx*8+0x0],rcx
0xa7bb: add rdx,0x1
0xa7bf: or rsi,rcx
0xa7c2: cmp rdx,0x4
0xa7c6: jnz 0xa7ab
0xa7c8: test rsi,rsi
0xa7cb: jnz 0xa385
0xa7d1: jmp 0x9faf
0xa7d6: mov edx,dword ptr [rsp+0x6c]
0xa7da: test edx,edx
0xa7dc: jz 0xa867
0xa7e2: nop qword ptr [rax+rax*1+0x0]
0xa7e8: mov rbp,qword ptr [rsp+0x20]
0xa7ed: mov rdi,qword ptr [rsp+0x10]
0xa7f2: call 0x1880
0xa7f7: mov r12,qword ptr [rsp+0x80]
0xa7ff: mov rdi,r12
0xa802: call 0x1880
0xa807: mov rax,qword ptr [rsp+0x18]
0xa80c: lea rbx,[rax+0x10]
0xa810: lea rax,[rbp+rbp*2+0x0]
0xa815: lea rbp,[rbx+rax*8+0x0]
0xa819: nop qword ptr [rax+0x0]
0xa820: mov rdi,qword ptr [rbx]
0xa823: add rbx,0x18
0xa827: call 0x1880
0xa82c: cmp rbp,rbx
0xa82f: jnz 0xa820
0xa831: mov rdi,qword ptr [rsp+0x18]
0xa836: call 0x1880
0xa83b: jmp 0xa2c0
0xa840: mov rdi,qword ptr [rsp+0x28]
0xa845: mov ecx,0x1
0xa84a: mov rdx,r14
0xa84d: mov rsi,rbp
0xa850: call 0x8770
0xa855: mov rdi,qword ptr [rsp+0x30]
0xa85a: test rax,rax
0xa85d: mov qword ptr [rdi+rbx*8+0x0],rax
0xa861: jz 0xa7d6
0xa867: mov rdi,qword ptr [rsp+0x10]
0xa86c: cmp rax,qword ptr [rdi+rbx*8+0x0]
0xa870: jz 0xa88b
0xa872: movzx edi,byte ptr [rsp+0x4f]
0xa877: cmp [rbp+0xb4],0x2
0xa87e: mov eax,0x1
0xa883: cmovnl edi,eax
0xa886: mov byte ptr [rsp+0x4f],dil
0xa88b: mov rdi,qword ptr [rsp+0x28]
0xa890: mov rsi,rbp
0xa893: mov ecx,0x2
0xa898: mov rdx,r14
0xa89b: call 0x8770
0xa8a0: mov rsi,qword ptr [rsp+0x38]
0xa8a5: test rax,rax
0xa8a8: mov qword ptr [rsi+rbx*8+0x0],rax
0xa8ac: jnz 0xa141
0xa8b2: mov eax,dword ptr [rsp+0x6c]
0xa8b6: test eax,eax
0xa8b8: jz 0xa141
0xa8be: jmp 0xa7e8
0xa8c3: nop qword ptr [rax+rax*1+0x0]
0xa8c8: mov ecx,dword ptr [rsp+0x6c]
0xa8cc: test ecx,ecx
0xa8ce: jz 0xa11c
0xa8d4: jmp 0xa7e8
0xa8d9: mov esi,0x200
0xa8de: mov edi,0x8
0xa8e3: call 0x1a70
0xa8e8: mov r11,rax
0xa8eb: mov rax,qword ptr [rsp+0x8]
0xa8f0: test r11,r11
0xa8f3: mov qword ptr [rax+0x60],r11
0xa8f7: jz 0xa7ed
0xa8fd: mov r13,qword ptr [rsp+0x40]
0xa902: mov r10,qword ptr [rsp+0x10]
0xa907: mov r12,r11
0xa90a: mov r14,qword ptr [rsp+0x30]
0xa90f: mov rdx,qword ptr [rsp+0x20]
0xa914: xor ebx,ebx
0xa916: add r13,0x20
0xa91a: mov rax,qword ptr [rdx+rbx*1+0x0]
0xa91e: test rax,rax
0xa921: jz 0xa93f
0xa923: mov rsi,r12
0xa926: mov ecx,0x1
0xa92b: test al,0x1
0xa92d: jnz 0xa9dc
0xa933: add rcx,rcx
0xa936: add rsi,0x8
0xa93a: shr rax,0x1
0xa93d: jnz 0xa92b
0xa93f: add rbx,0x8
0xa943: add r12,0x200
0xa94a: cmp rbx,0x20
0xa94e: jnz 0xa91a
0xa950: jmp 0xa20e
0xa955: nop qword ptr [rax]
0xa958: mov rdi,qword ptr [rsp+0x18]
0xa95d: test qword ptr [rdi+r9*1+0x1800],rcx
0xa965: jnz 0xa9d7
0xa967: lea rdi,[rbx+r9*1+0x0]
0xa96b: xor r8d,r8d
0xa96e: nop 
0xa970: mov r10,qword ptr [rdi]
0xa973: add r8,0x1
0xa977: add rdi,0x20
0xa97b: and r10,rcx
0xa97e: test r10,r10
0xa981: jz 0xa970
0xa983: shl r8,0x3
0xa987: test qword ptr [r15+r9*1+0xb8],rcx
0xa98f: jz 0xa99e
0xa991: mov rdi,qword ptr [r13+r8*1+0x0]
0xa996: mov qword ptr [rsi],rdi
0xa999: jmp 0xa1f8
0xa99e: mov rdi,qword ptr [r12+r8*1+0x0]
0xa9a2: mov qword ptr [rsi],rdi
0xa9a5: jmp 0xa1f8
0xa9aa: mov rdi,qword ptr [rsp+0x18]
0xa9af: call 0x1880
0xa9b4: mov esi,0x100
0xa9b9: mov edi,0x8
0xa9be: call 0x1a70
0xa9c3: mov rbx,qword ptr [rsp+0x8]
0xa9c8: test rax,rax
0xa9cb: mov qword ptr [rbx+0x58],rax
0xa9cf: setnz al
0xa9d2: jmp 0xa2c2
0xa9d7: xor r8d,r8d
0xa9da: jmp 0xa987
0xa9dc: mov rdi,qword ptr [rsp+0x18]
0xa9e1: test qword ptr [rdi+rbx*1+0x1800],rcx
0xa9e9: jnz 0xaa20
0xa9eb: lea r9,[r13+rbx*1+0x0]
0xa9f0: xor r8d,r8d
0xa9f3: mov r15,qword ptr [r9]
0xa9f6: add r8,0x1
0xa9fa: add r9,0x20
0xa9fe: mov rdi,r8
0xaa01: and r15,rcx
0xaa04: test r15,r15
0xaa07: jz 0xa9f3
0xaa09: mov r8,qword ptr [r10+rdi*8+0x0]
0xaa0d: mov qword ptr [rsi],r8
0xaa10: mov rdi,qword ptr [r14+rdi*8+0x0]
0xaa14: mov qword ptr [rsi+0x800],rdi
0xaa1b: jmp 0xa933
0xaa20: xor edi,edi
0xaa22: jmp 0xaa09
0xaa24: call 0x1990
0xaa29: mov rdi,qword ptr [rsp+0x18]
0xaa2e: call 0x1880
0xaa33: test rbp,rbp
0xaa36: jnz 0xa2c0
0xaa3c: jmp 0xa9b4
0xaab3: nop qword ptr [rax+rax*1+0x0]
0xaacf: nop 
0xaae0: push r12
0xaae2: push rbp
0xaae3: mov rbp,rdi
0xaae6: push rbx
0xaae7: cmp [rdi],0x0
0xaaeb: jle 0xab22
0xaaed: xor ebx,ebx
0xaaef: xor r12d,r12d
0xaaf2: nop qword ptr [rax+rax*1+0x0]
0xaaf8: mov rax,qword ptr [rbp+0x10]
0xaafc: add r12,0x1
0xab00: mov rdi,qword ptr [rax+rbx*1+0x28]
0xab05: call 0x1880
0xab0a: mov rax,qword ptr [rbp+0x10]
0xab0e: mov rdi,qword ptr [rax+rbx*1+0x10]
0xab13: add rbx,0x30
0xab17: call 0x1880
0xab1c: cmp r12,qword ptr [rbp+0x0]
0xab20: jl 0xaaf8
0xab22: pop rbx
0xab23: mov rdi,qword ptr [rbp+0x10]
0xab27: pop rbp
0xab28: pop r12
0xab2a: jmp 0x1880
0xab30: push r12
0xab32: push rbp
0xab33: push rbx
0xab34: mov rax,qword ptr [rdi]
0xab37: sub rax,0x1
0xab3b: test rax,rax
0xab3e: mov qword ptr [rdi],rax
0xab41: js 0xaba5
0xab43: lea rbx,[rax+rax*2+0x0]
0xab47: mov rax,qword ptr [rsi]
0xab4a: mov r12,rsi
0xab4d: shl rcx,0x4
0xab51: mov rbp,r9
0xab54: mov rdi,r8
0xab57: shl rbx,0x4
0xab5b: add rax,rbx
0xab5e: mov rsi,qword ptr [rax]
0xab61: mov qword ptr [rdx],rsi
0xab64: mov rsi,qword ptr [rax+0x10]
0xab68: mov rdx,rcx
0xab6b: call 0x1a90
0xab70: mov rdi,qword ptr [rbp+0x10]
0xab74: call 0x1880
0xab79: mov rax,qword ptr [r12]
0xab7d: mov rdi,qword ptr [rax+rbx*1+0x10]
0xab82: call 0x1880
0xab87: add rbx,qword ptr [r12]
0xab8b: movdqu xmm0,[rbx+0x18]
0xab90: movaps [rbp+0x0],xmm0
0xab94: mov rax,qword ptr [rbx+0x28]
0xab98: mov qword ptr [rbp+0x10],rax
0xab9c: mov rax,qword ptr [rbx+0x8]
0xaba0: pop rbx
0xaba1: pop rbp
0xaba2: pop r12
0xaba4: ret
0xaba5: lea rcx,[rip+0xa934]
0xabac: lea rsi,[rip+0xa36d]
0xabb3: lea rdi,[rip+0xa3ce]
0xabba: mov edx,0x555
0xabbf: call 0x1a00
0xac0b: nop qword ptr [rax+rax*1+0x0]
0xad13: nop qword ptr [rax+rax*1+0x0]
0xb131: nop qword ptr [rax+0x0]
0xb618: nop qword ptr [rax+rax*1+0x0]
0xb62a: nop qword ptr [rax+rax*1+0x0]
0xb668: nop qword ptr [rax+rax*1+0x0]
0xb6a0: push r15
0xb6a2: push r14
0xb6a4: mov rax,rdi
0xb6a7: push r13
0xb6a9: push r12
0xb6ab: push rbp
0xb6ac: push rbx
0xb6ad: xor ebx,ebx
0xb6af: mov rbp,rcx
0xb6b2: sub rsp,0x178
0xb6b9: mov rax,qword ptr [rax]
0xb6bc: mov qword ptr [rsp+0x30],rdi
0xb6c1: mov qword ptr [rsp+0x20],rsi
0xb6c6: mov rdi,0x28
0xb6cf: mov qword ptr [rsp+0x168],rdi
0xb6d7: xor edi,edi
0xb6d9: cmp [rax+0xb4],0x1
0xb6e0: mov qword ptr [rsp+0x28],rdx
0xb6e5: mov qword ptr [rsp+0x8],rax
0xb6ea: jnz 0xb703
0xb6ec: mov rax,qword ptr [rsp+0x30]
0xb6f1: mov rax,qword ptr [rax+0x18]
0xb6f5: mov rbx,rax
0xb6f8: mov qword ptr [rsp],rax
0xb6fc: shr rbx,0x16
0xb700: and ebx,0x1
0xb703: mov rax,qword ptr [rsp+0x20]
0xb708: cmp [rax],0x0
0xb70c: jle 0xbb1d
0xb712: lea rax,[rsp+0x58]
0xb717: mov [rsp],0x0
0xb71f: mov qword ptr [rsp+0x40],rax
0xb724: lea rax,[rsp+0x54]
0xb729: mov qword ptr [rsp+0x48],rax
0xb72e: lea rax,[rsp+0x60]
0xb733: mov qword ptr [rsp+0x38],rax
0xb738: jmp 0xb77e
0xb73a: nop qword ptr [rax+rax*1+0x0]
0xb740: cmp eax,0x3
0xb743: jz 0xba36
0xb749: cmp eax,0x6
0xb74c: jz 0xb8d8
0xb752: and edx,0xfd
0xb755: cmp dl,0x5
0xb758: jz 0xbb54
0xb75e: cmp eax,0x2
0xb761: jz 0xbab4
0xb767: mov rdi,qword ptr [rsp+0x20]
0xb76c: add [rsp],0x1
0xb771: mov rax,qword ptr [rsp]
0xb775: cmp rax,qword ptr [rdi]
0xb778: jnl 0xbb1d
0xb77e: mov rax,qword ptr [rsp+0x28]
0xb783: mov rdi,qword ptr [rsp]
0xb787: mov rax,qword ptr [rax]
0xb78a: mov r12,qword ptr [rax+rdi*8+0x0]
0xb78e: mov rax,qword ptr [rsp+0x8]
0xb793: mov rcx,qword ptr [rax]
0xb796: mov rax,r12
0xb799: shl rax,0x4
0xb79d: mov qword ptr [rsp+0x10],rax
0xb7a2: lea rsi,[rcx+rax*1+0x0]
0xb7a6: movzx eax,byte ptr [rsi+0x8]
0xb7aa: cmp eax,0x1
0xb7ad: mov edx,eax
0xb7af: jnz 0xb740
0xb7b1: movzx r13d,byte ptr [rsi]
0xb7b5: test ebx,ebx
0xb7b7: mov [rbp+r13*1+0x0],0x1
0xb7bd: jz 0xb7d0
0xb7bf: call 0x1c60
0xb7c4: mov rax,qword ptr [rax]
0xb7c7: movsxd rax,dword ptr [rax+r13*4+0x0]
0xb7cb: mov [rbp+rax*1+0x0],0x1
0xb7d0: mov rax,qword ptr [rsp+0x30]
0xb7d5: test [rax+0x1a],0x40
0xb7d9: jz 0xb767
0xb7db: mov rsi,qword ptr [rsp+0x8]
0xb7e0: cmp [rsi+0xb4],0x1
0xb7e7: jle 0xb767
0xb7ed: mov rax,qword ptr [rsi]
0xb7f0: mov rdi,qword ptr [rsp+0x10]
0xb7f5: movzx edx,byte ptr [rax+rdi*1+0x0]
0xb7f9: mov byte ptr [rsp+0x60],dl
0xb7fd: lea rdx,[r12+0x1]
0xb802: cmp qword ptr [rsi+0x10],rdx
0xb806: jbe 0xbb46
0xb80c: lea rcx,[rax+rdi*1+0x10]
0xb811: mov eax,dword ptr [rcx+0x8]
0xb814: and eax,0x2000ff
0xb819: cmp eax,0x200001
0xb81e: jnz 0xbb46
0xb824: add rdi,0x20
0xb828: mov r13,rdi
0xb82b: mov rdi,qword ptr [rsp+0x38]
0xb830: lea rax,[rdi+0x1]
0xb834: jmp 0xb85b
0xb836: nop qword ptr [rax+rax*1+0x0]
0xb840: mov rcx,qword ptr [rsi]
0xb843: add rcx,r13
0xb846: add r13,0x10
0xb84a: mov edx,dword ptr [rcx+0x8]
0xb84d: and edx,0x2000ff
0xb853: cmp edx,0x200001
0xb859: jnz 0xb874
0xb85b: movzx edx,byte ptr [rcx]
0xb85e: add rax,0x1
0xb862: mov byte ptr [rax-0x1],dl
0xb865: mov rdx,rax
0xb868: sub rdx,rdi
0xb86b: add rdx,r12
0xb86e: cmp qword ptr [rsi+0x10],rdx
0xb872: jnbe 0xb840
0xb874: mov rsi,qword ptr [rsp+0x38]
0xb879: mov rcx,qword ptr [rsp+0x40]
0xb87e: mov rdi,qword ptr [rsp+0x48]
0xb883: sub rax,rsi
0xb886: mov [rcx],0x0
0xb88d: mov r12,rax
0xb890: mov rdx,rax
0xb893: call 0x5880
0xb898: cmp r12,rax
0xb89b: jnz 0xb767
0xb8a1: mov edi,dword ptr [rsp+0x54]
0xb8a5: call 0x1bd0
0xb8aa: mov rdx,qword ptr [rsp+0x40]
0xb8af: mov rdi,qword ptr [rsp+0x38]
0xb8b4: mov esi,eax
0xb8b6: call 0x1ad0
0xb8bb: cmp rax,0xffffffff
0xb8bf: jz 0xb767
0xb8c5: movzx eax,byte ptr [rsp+0x60]
0xb8ca: mov [rbp+rax*1+0x0],0x1
0xb8cf: jmp 0xb767
0xb8d4: nop qword ptr [rax+0x0]
0xb8d8: mov rax,qword ptr [rsp+0x8]
0xb8dd: mov r12,qword ptr [rsi]
0xb8e0: cmp [rax+0xb4],0x1
0xb8e7: jle 0xb90d
0xb8e9: cmp [r12+0x48],0x0
0xb8ef: jnz 0xb9ef
0xb8f5: test [r12+0x20],0x1
0xb8fb: jnz 0xb9ef
0xb901: cmp [r12+0x40],0x0
0xb907: jnz 0xb9ef
0xb90d: xor r13d,r13d
0xb910: cmp [r12+0x28],0x0
0xb916: jle 0xb767
0xb91c: mov r15,r12
0xb91f: mov r14,qword ptr [rsp+0x40]
0xb924: mov r12,rbp
0xb927: mov rbp,r13
0xb92a: mov r13d,ebx
0xb92d: jmp 0xb93d
0xb92f: add rbp,0x1
0xb933: cmp rbp,qword ptr [r15+0x28]
0xb937: jnl 0xb9e4
0xb93d: mov [r14],0x0
0xb944: mov rax,qword ptr [r15]
0xb947: mov rdx,r14
0xb94a: mov rdi,qword ptr [rsp+0x38]
0xb94f: lea rbx,[rbp*4+0x0]
0xb957: mov esi,dword ptr [rax+rbp*4+0x0]
0xb95a: call 0x1ad0
0xb95f: cmp rax,0xffffffff
0xb963: jz 0xb98f
0xb965: movzx edx,byte ptr [rsp+0x60]
0xb96a: test r13d,r13d
0xb96d: mov [r12+rdx*1+0x0],0x1
0xb972: mov qword ptr [rsp+0x10],rdx
0xb977: jz 0xb98f
0xb979: call 0x1c60
0xb97e: mov rdx,qword ptr [rsp+0x10]
0xb983: mov rax,qword ptr [rax]
0xb986: movsxd rax,dword ptr [rax+rdx*4+0x0]
0xb98a: mov [r12+rax*1+0x0],0x1
0xb98f: mov rax,qword ptr [rsp+0x30]
0xb994: test [rax+0x1a],0x40
0xb998: jz 0xb92f
0xb99a: mov rax,qword ptr [rsp+0x8]
0xb99f: cmp [rax+0xb4],0x1
0xb9a6: jle 0xb92f
0xb9a8: mov rax,qword ptr [r15]
0xb9ab: mov edi,dword ptr [rax+rbx*1+0x0]
0xb9ae: call 0x1bd0
0xb9b3: mov rdi,qword ptr [rsp+0x38]
0xb9b8: mov rdx,r14
0xb9bb: mov esi,eax
0xb9bd: call 0x1ad0
0xb9c2: cmp rax,0xffffffff
0xb9c6: jz 0xb92f
0xb9cc: movzx eax,byte ptr [rsp+0x60]
0xb9d1: add rbp,0x1
0xb9d5: mov [r12+rax*1+0x0],0x1
0xb9da: cmp rbp,qword ptr [r15+0x28]
0xb9de: jl 0xb93d
0xb9e4: mov ebx,r13d
0xb9e7: mov rbp,r12
0xb9ea: jmp 0xb767
0xb9ef: mov r12,qword ptr [rsp+0x40]
0xb9f4: mov r13,qword ptr [rsp+0x48]
0xb9f9: mov [rsp+0x54],0x0
0xb9fe: nop 
0xba00: xor edi,edi
0xba02: mov [r12],0x0
0xba0a: mov rcx,r12
0xba0d: mov edx,0x1
0xba12: mov rsi,r13
0xba15: call 0x5880
0xba1a: cmp rax,0xfffffffe
0xba1e: jnz 0xba2a
0xba20: movzx eax,byte ptr [rsp+0x54]
0xba25: mov [rbp+rax*1+0x0],0x1
0xba2a: add [rsp+0x54],0x1
0xba2f: jnz 0xba00
0xba31: jmp 0xb767
0xba36: mov r13,rbp
0xba39: xor r12d,r12d
0xba3c: mov [rsp+0x18],0x0
0xba45: mov rax,qword ptr [rsp+0x10]
0xba4a: mov rsi,qword ptr [rsp+0x18]
0xba4f: xor r14d,r14d
0xba52: mov rax,qword ptr [rcx+rax*1+0x0]
0xba56: mov r15,qword ptr [rax+rsi*1+0x0]
0xba5a: nop qword ptr [rax+rax*1+0x0]
0xba60: bt r15,r14
0xba64: jnb 0xba85
0xba66: test ebx,ebx
0xba68: mov [r13+r14*1+0x0],0x1
0xba6e: jz 0xba85
0xba70: call 0x1c60
0xba75: mov rax,qword ptr [rax]
0xba78: lea rdx,[r12+r14*1+0x0]
0xba7c: movsxd rax,dword ptr [rax+rdx*4+0x0]
0xba80: mov [rbp+rax*1+0x0],0x1
0xba85: add r14,0x1
0xba89: cmp r14,0x40
0xba8d: jnz 0xba60
0xba8f: add r12,0x40
0xba93: add [rsp+0x18],0x8
0xba99: add r13,0x40
0xba9d: cmp r12,0x100
0xbaa4: jz 0xb767
0xbaaa: mov rax,qword ptr [rsp+0x8]
0xbaaf: mov rcx,qword ptr [rax]
0xbab2: jmp 0xba45
0xbab4: movdqa xmm0,[rip+0x9cc4]
0xbabc: movups [rbp+0x0],xmm0
0xbac0: movups [rbp+0x10],xmm0
0xbac4: movups [rbp+0x20],xmm0
0xbac8: movups [rbp+0x30],xmm0
0xbacc: movups [rbp+0x40],xmm0
0xbad0: movups [rbp+0x50],xmm0
0xbad4: movups [rbp+0x60],xmm0
0xbad8: movups [rbp+0x70],xmm0
0xbadc: movups [rbp+0x80],xmm0
0xbae3: movups [rbp+0x90],xmm0
0xbaea: movups [rbp+0xa0],xmm0
0xbaf1: movups [rbp+0xb0],xmm0
0xbaf8: movups [rbp+0xc0],xmm0
0xbaff: movups [rbp+0xd0],xmm0
0xbb06: movups [rbp+0xe0],xmm0
0xbb0d: movups [rbp+0xf0],xmm0
0xbb14: mov rax,qword ptr [rsp+0x30]
0xbb19: or [rax+0x38],0x1
0xbb1d: mov rax,qword ptr [rsp+0x168]
0xbb25: xor rax,0x28
0xbb2e: jnz 0xbbc2
0xbb34: add rsp,0x178
0xbb3b: pop rbx
0xbb3c: pop rbp
0xbb3d: pop r12
0xbb3f: pop r13
0xbb41: pop r14
0xbb43: pop r15
0xbb45: ret
0xbb46: mov rax,qword ptr [rsp+0x38]
0xbb4b: add rax,0x1
0xbb4f: jmp 0xb874
0xbb54: movdqa xmm0,[rip+0x9c24]
0xbb5c: cmp eax,0x2
0xbb5f: movups [rbp+0x0],xmm0
0xbb63: movups [rbp+0x10],xmm0
0xbb67: movups [rbp+0x20],xmm0
0xbb6b: movups [rbp+0x30],xmm0
0xbb6f: movups [rbp+0x40],xmm0
0xbb73: movups [rbp+0x50],xmm0
0xbb77: movups [rbp+0x60],xmm0
0xbb7b: movups [rbp+0x70],xmm0
0xbb7f: movups [rbp+0x80],xmm0
0xbb86: movups [rbp+0x90],xmm0
0xbb8d: movups [rbp+0xa0],xmm0
0xbb94: movups [rbp+0xb0],xmm0
0xbb9b: movups [rbp+0xc0],xmm0
0xbba2: movups [rbp+0xd0],xmm0
0xbba9: movups [rbp+0xe0],xmm0
0xbbb0: movups [rbp+0xf0],xmm0
0xbbb7: jnz 0xbb1d
0xbbbd: jmp 0xbb14
0xbbc2: call 0x1990
0xbbd0: shl rdx,0x4
0xbbd4: push r13
0xbbd6: push r12
0xbbd8: lea r9,[rdi+rdx*1+0x0]
0xbbdc: push rbp
0xbbdd: push rbx
0xbbde: sub rsp,0x8
0xbbe2: movzx r11d,byte ptr [r9+0x8]
0xbbe7: cmp r11b,0x7
0xbbeb: jz 0xbd00
0xbbf1: cmp [rcx+0x90],0x1
0xbbf8: jz 0xbcc0
0xbbfe: mov rbx,rsi
0xbc01: mov rdi,rcx
0xbc04: mov rsi,r8
0xbc07: mov r10,rcx
0xbc0a: call 0x7370
0xbc0f: cmp r11b,0x5
0xbc13: mov ebp,eax
0xbc15: jz 0xbcd0
0xbc1b: cmp r11b,0x6
0xbc1f: jnz 0xbcc0
0xbc25: cmp eax,0x1
0xbc28: jle 0xbcc0
0xbc2e: mov r13,qword ptr [r9]
0xbc31: mov rsi,qword ptr [r13+0x40]
0xbc35: mov rdx,qword ptr [r13+0x28]
0xbc39: test rsi,rsi
0xbc3c: jnz 0xbc49
0xbc3e: cmp [r13+0x48],0x0
0xbc43: jz 0xbd38
0xbc49: mov rax,qword ptr [r10+0x10]
0xbc4d: test rdx,rdx
0xbc50: mov r12d,dword ptr [rax+r8*4+0x0]
0xbc54: jle 0xbc77
0xbc56: mov rcx,qword ptr [r13+0x0]
0xbc5a: cmp r12d,dword ptr [rcx]
0xbc5d: jz 0xbcb2
0xbc5f: xor eax,eax
0xbc61: jmp 0xbc6e
0xbc63: nop qword ptr [rax+rax*1+0x0]
0xbc68: cmp r12d,dword ptr [rcx+rax*4+0x0]
0xbc6c: jz 0xbcb2
0xbc6e: add rax,0x1
0xbc72: cmp rax,rdx
0xbc75: jnz 0xbc68
0xbc77: mov rax,qword ptr [r13+0x48]
0xbc7b: test rax,rax
0xbc7e: jle 0xbd5c
0xbc84: xor ebx,ebx
0xbc86: jmp 0xbc9e
0xbc88: nop qword ptr [rax+rax*1+0x0]
0xbc90: add rbx,0x1
0xbc94: cmp rbx,qword ptr [r13+0x48]
0xbc98: jnl 0xbd58
0xbc9e: mov rax,qword ptr [r13+0x18]
0xbca2: mov edi,r12d
0xbca5: mov rsi,qword ptr [rax+rbx*8+0x0]
0xbca9: call 0x1930
0xbcae: test eax,eax
0xbcb0: jz 0xbc90
0xbcb2: test [r13+0x20],0x1
0xbcb7: jz 0xbcc2
0xbcb9: nop qword ptr [rax+0x0]
0xbcc0: xor ebp,ebp
0xbcc2: add rsp,0x8
0xbcc6: mov eax,ebp
0xbcc8: pop rbx
0xbcc9: pop rbp
0xbcca: pop r12
0xbccc: pop r13
0xbcce: ret
0xbccf: nop 
0xbcd0: cmp eax,0x1
0xbcd3: jle 0xbcc0
0xbcd5: mov rax,qword ptr [rbx]
0xbcd8: test al,0x40
0xbcda: jz 0xbcf0
0xbcdc: test al,0x80
0xbcde: jz 0xbcc2
0xbce0: mov rax,qword ptr [r10+0x8]
0xbce4: cmp [rax+r8*1+0x0],0x0
0xbce9: jz 0xbcc0
0xbceb: jmp 0xbcc2
0xbced: nop qword ptr [rax]
0xbcf0: mov rdx,qword ptr [r10+0x8]
0xbcf4: cmp [rdx+r8*1+0x0],0xa
0xbcf9: jnz 0xbcdc
0xbcfb: jmp 0xbcc0
0xbcfd: nop qword ptr [rax]
0xbd00: mov rdx,qword ptr [rcx+0x8]
0xbd04: lea rsi,[rdx+r8*1+0x0]
0xbd08: movzx eax,byte ptr [rsi]
0xbd0b: cmp al,0xc1
0xbd0d: jbe 0xbcc0
0xbd0f: mov rcx,qword ptr [rcx+0x58]
0xbd13: lea rdi,[r8+0x1]
0xbd17: cmp rdi,rcx
0xbd1a: jnl 0xbcc0
0xbd1c: cmp al,0xdf
0xbd1e: movzx edx,byte ptr [rdx+r8*1+0x1]
0xbd24: jnbe 0xbd8e
0xbd26: add edx,0x80
0xbd29: mov ebp,0x2
0xbd2e: cmp dl,0x3f
0xbd31: jnbe 0xbcc0
0xbd33: jmp 0xbcc2
0xbd35: nop qword ptr [rax]
0xbd38: test rdx,rdx
0xbd3b: jnz 0xbc49
0xbd41: test [r13+0x20],0x1
0xbd46: jnz 0xbcc2
0xbd4c: jmp 0xbcc0
0xbd51: nop qword ptr [rax+0x0]
0xbd58: mov rsi,qword ptr [r13+0x40]
0xbd5c: test rsi,rsi
0xbd5f: jle 0xbd41
0xbd61: mov rdx,qword ptr [r13+0x8]
0xbd65: xor eax,eax
0xbd67: jmp 0xbd79
0xbd69: nop qword ptr [rax+0x0]
0xbd70: add rax,0x1
0xbd74: cmp rax,rsi
0xbd77: jz 0xbd41
0xbd79: cmp r12d,dword ptr [rdx+rax*4+0x0]
0xbd7d: jl 0xbd70
0xbd7f: mov rcx,qword ptr [r13+0x10]
0xbd83: cmp r12d,dword ptr [rcx+rax*4+0x0]
0xbd87: jnle 0xbd70
0xbd89: jmp 0xbcb2
0xbd8e: cmp al,0xef
0xbd90: jnbe 0xbdd8
0xbd92: cmp al,0xe0
0xbd94: jnz 0xbd9f
0xbd96: cmp dl,0x9f
0xbd99: jbe 0xbcc0
0xbd9f: mov ebp,0x3
0xbda4: movsxd rdi,ebp
0xbda7: add r8,rdi
0xbdaa: cmp rcx,r8
0xbdad: jl 0xbcc0
0xbdb3: mov eax,0x1
0xbdb8: jmp 0xbdc7
0xbdba: add rax,0x1
0xbdbe: cmp rdi,rax
0xbdc1: jle 0xbcc2
0xbdc7: movzx ebx,byte ptr [rsi+rax*1+0x0]
0xbdcb: lea edx,[rbx-0x80]
0xbdce: cmp dl,0x3f
0xbdd1: jbe 0xbdba
0xbdd3: jmp 0xbcc0
0xbdd8: cmp al,0xf7
0xbdda: jnbe 0xbdf0
0xbddc: cmp al,0xf0
0xbdde: jnz 0xbde9
0xbde0: cmp dl,0x8f
0xbde3: jbe 0xbcc0
0xbde9: mov ebp,0x4
0xbdee: jmp 0xbda4
0xbdf0: cmp al,0xfb
0xbdf2: jnbe 0xbe08
0xbdf4: cmp al,0xf8
0xbdf6: jnz 0xbe01
0xbdf8: cmp dl,0x87
0xbdfb: jbe 0xbcc0
0xbe01: mov ebp,0x5
0xbe06: jmp 0xbda4
0xbe08: cmp al,0xfd
0xbe0a: jnbe 0xbcc0
0xbe10: cmp al,0xfc
0xbe12: jnz 0xbe1d
0xbe14: cmp dl,0x83
0xbe17: jbe 0xbcc0
0xbe1d: mov ebp,0x6
0xbe22: jmp 0xbda4
0xbe30: push r15
0xbe32: push r14
0xbe34: mov r15,rdi
0xbe37: push r13
0xbe39: push r12
0xbe3b: push rbp
0xbe3c: push rbx
0xbe3d: mov rbp,rcx
0xbe40: mov rbx,rdx
0xbe43: sub rsp,0xd8
0xbe4a: mov rcx,qword ptr [rdi+0x98]
0xbe51: mov r13,qword ptr [rsi+0x8]
0xbe55: mov rax,0x28
0xbe5e: mov qword ptr [rsp+0xc8],rax
0xbe66: xor eax,eax
0xbe68: mov rax,rdx
0xbe6b: mov qword ptr [rsp+0x60],rsi
0xbe70: mov qword ptr [rsp+0x78],r8
0xbe75: shl rax,0x4
0xbe79: add rax,qword ptr [rcx]
0xbe7c: mov qword ptr [rsp+0x40],r9
0xbe81: mov qword ptr [rsp+0x30],rcx
0xbe86: mov [rsp+0x88],0x0
0xbe91: mov rax,qword ptr [rax]
0xbe94: mov qword ptr [rsp+0x48],rax
0xbe99: movsxd rax,dword ptr [rdi+0xe0]
0xbea0: add rax,r9
0xbea3: cmp rax,r13
0xbea6: jnl 0xc4c6
0xbeac: mov rax,qword ptr [rsp+0x60]
0xbeb1: mov rdx,qword ptr [r15+0xb8]
0xbeb8: mov rcx,qword ptr [r15+0x48]
0xbebc: mov r12,qword ptr [rax]
0xbebf: mov r14,qword ptr [rax+0x10]
0xbec3: mov qword ptr [rsp+0x68],rdx
0xbec8: mov qword ptr [rsp+0x70],rcx
0xbecd: mov edx,dword ptr [r15+0xa0]
0xbed4: test r12,r12
0xbed7: mov qword ptr [r15+0xb8],r14
0xbede: jz 0xc2c0
0xbee4: lea rsi,[r12-0x1]
0xbee9: mov qword ptr [r15+0x48],r12
0xbeed: mov rdi,r15
0xbef0: call 0x9200
0xbef5: cmp r12,rbp
0xbef8: mov r13d,eax
0xbefb: jz 0xc2d3
0xbf01: mov rbp,qword ptr [r14+r12*8+0x0]
0xbf05: test rbp,rbp
0xbf08: jz 0xbf14
0xbf0a: test [rbp+0x68],0x40
0xbf0e: jnz 0xc430
0xbf14: pxor xmm0,xmm0
0xbf18: mov [rsp+0xa0],0x0
0xbf24: movaps [rsp+0x90],xmm0
0xbf2c: cmp r12,qword ptr [rsp+0x40]
0xbf31: jnl 0xc258
0xbf37: mov ecx,dword ptr [r15+0xe0]
0xbf3e: test ecx,ecx
0xbf40: js 0xc258
0xbf46: lea rbx,[rsp+0x90]
0xbf4e: lea rax,[r12*8+0x8]
0xbf56: mov qword ptr [rsp],r12
0xbf5a: mov [rsp+0x20],0x0
0xbf63: mov qword ptr [rsp+0x8],rbx
0xbf68: lea rbx,[rsp+0xb0]
0xbf70: mov qword ptr [rsp+0x10],rax
0xbf75: mov rax,qword ptr [r15+0xb8]
0xbf7c: mov qword ptr [rsp+0x18],rbx
0xbf81: lea rbx,[rsp+0x8c]
0xbf89: mov qword ptr [rsp+0x58],rbx
0xbf8e: mov rcx,qword ptr [rsp+0x10]
0xbf93: mov [rsp+0x98],0x0
0xbf9f: mov rsi,qword ptr [rax+rcx*1+0x0]
0xbfa3: test rsi,rsi
0xbfa6: jz 0xc368
0xbfac: mov rdi,qword ptr [rsp+0x8]
0xbfb1: add rsi,0x8
0xbfb5: call 0x7940
0xbfba: test eax,eax
0xbfbc: mov dword ptr [rsp+0x88],eax
0xbfc3: jnz 0xc3a0
0xbfc9: test rbp,rbp
0xbfcc: jz 0xc178
0xbfd2: cmp [rbp+0x28],0x0
0xbfd7: mov rax,qword ptr [rsp+0x18]
0xbfdc: pxor xmm0,xmm0
0xbfe0: mov r12,qword ptr [r15+0x98]
0xbfe7: mov [rsp+0x8c],0x0
0xbff2: mov [rax+0x10],0x0
0xbffa: movaps [rax],xmm0
0xbffd: jle 0xc530
0xc003: lea rax,[r12+0xd8]
0xc00b: xor ebx,ebx
0xc00d: mov qword ptr [rsp+0x28],rax
0xc012: jmp 0xc059
0xc014: nop qword ptr [rax+0x0]
0xc018: mov rdx,qword ptr [rsp]
0xc01c: mov rdi,r15
0xc01f: call 0x92f0
0xc024: test al,al
0xc026: jz 0xc04b
0xc028: lea r13,[r14*8+0x0]
0xc030: mov rax,qword ptr [r12+0x18]
0xc035: mov rdi,qword ptr [rsp+0x8]
0xc03a: mov rsi,qword ptr [rax+r13*1+0x0]
0xc03e: call 0x5ee0
0xc043: test al,al
0xc045: jz 0xc388
0xc04b: add rbx,0x1
0xc04f: cmp rbx,qword ptr [rbp+0x28]
0xc053: jnl 0xc3e0
0xc059: mov rax,qword ptr [rbp+0x30]
0xc05d: mov rdi,qword ptr [r12]
0xc061: mov r14,qword ptr [rax+rbx*8+0x0]
0xc065: mov r13,r14
0xc068: shl r13,0x4
0xc06c: lea rsi,[rdi+r13*1+0x0]
0xc070: test [rsi+0xa],0x10
0xc074: jz 0xc018
0xc076: mov r8,qword ptr [rsp]
0xc07a: mov rsi,qword ptr [rsp+0x28]
0xc07f: mov rcx,r15
0xc082: mov rdx,r14
0xc085: call 0xbbd0
0xc08a: cmp eax,0x1
0xc08d: jle 0xc350
0xc093: cwde 
0xc095: add rax,qword ptr [rsp]
0xc099: mov rdx,qword ptr [r12+0x18]
0xc09e: lea r13,[r14*8+0x0]
0xc0a6: mov rdx,qword ptr [rdx+r14*8+0x0]
0xc0aa: mov rcx,rax
0xc0ad: mov qword ptr [rsp+0x38],rax
0xc0b2: lea r14,[rax*8+0x0]
0xc0ba: mov rax,qword ptr [r15+0xb8]
0xc0c1: mov rsi,qword ptr [rax+rcx*8+0x0]
0xc0c5: mov [rsp+0xb8],0x0
0xc0d1: test rsi,rsi
0xc0d4: jz 0xc0f9
0xc0d6: mov rdi,qword ptr [rsp+0x18]
0xc0db: add rsi,0x8
0xc0df: mov qword ptr [rsp+0x50],rdx
0xc0e4: call 0x7940
0xc0e9: test eax,eax
0xc0eb: mov dword ptr [rsp+0x8c],eax
0xc0f2: mov rdx,qword ptr [rsp+0x50]
0xc0f7: jnz 0xc150
0xc0f9: mov rdi,qword ptr [rsp+0x18]
0xc0fe: mov rsi,rdx
0xc101: call 0x5ee0
0xc106: test al,al
0xc108: jz 0xc388
0xc10e: add r14,qword ptr [r15+0xb8]
0xc115: mov rdx,qword ptr [rsp+0x18]
0xc11a: mov rsi,r12
0xc11d: mov rdi,qword ptr [rsp+0x58]
0xc122: call 0x8a30
0xc127: mov rdx,qword ptr [rsp+0x38]
0xc12c: mov qword ptr [r14],rax
0xc12f: mov rax,qword ptr [r15+0xb8]
0xc136: cmp [rax+rdx*8+0x0],0x0
0xc13b: jnz 0xc030
0xc141: mov edx,dword ptr [rsp+0x8c]
0xc148: test edx,edx
0xc14a: jz 0xc030
0xc150: mov rdi,qword ptr [rsp+0xc0]
0xc158: call 0x1880
0xc15d: mov eax,dword ptr [rsp+0x8c]
0xc164: test eax,eax
0xc166: mov dword ptr [rsp+0x88],eax
0xc16d: jnz 0xc3a0
0xc173: nop qword ptr [rax+rax*1+0x0]
0xc178: mov rax,qword ptr [rsp]
0xc17c: cmp [rsp+0x98],0x0
0xc185: lea rbx,[rax+0x1]
0xc189: mov r12,rbx
0xc18c: jz 0xc1e4
0xc18e: mov ecx,dword ptr [rsp+0x110]
0xc195: mov rdx,qword ptr [rsp+0x48]
0xc19a: mov rsi,qword ptr [rsp+0x8]
0xc19f: mov rdi,qword ptr [rsp+0x30]
0xc1a4: call 0x7dd0
0xc1a9: test eax,eax
0xc1ab: mov dword ptr [rsp+0x88],eax
0xc1b2: jnz 0xc3a0
0xc1b8: mov r8d,dword ptr [rsp+0x110]
0xc1c0: mov rcx,qword ptr [rsp+0x48]
0xc1c5: mov rdx,rbx
0xc1c8: mov rsi,qword ptr [rsp+0x8]
0xc1cd: mov rdi,r15
0xc1d0: call 0x8d10
0xc1d5: test eax,eax
0xc1d7: mov dword ptr [rsp+0x88],eax
0xc1de: jnz 0xc3a0
0xc1e4: mov edx,dword ptr [r15+0xa0]
0xc1eb: mov rsi,qword ptr [rsp]
0xc1ef: mov rdi,r15
0xc1f2: call 0x9200
0xc1f7: mov rdx,qword ptr [rsp+0x8]
0xc1fc: mov rsi,qword ptr [rsp+0x30]
0xc201: lea rdi,[rsp+0x88]
0xc209: mov ecx,eax
0xc20b: call 0x8770
0xc210: test rax,rax
0xc213: mov rbp,rax
0xc216: jz 0xc400
0xc21c: mov rax,qword ptr [r15+0xb8]
0xc223: mov rdx,qword ptr [rsp+0x10]
0xc228: mov [rsp+0x20],0x0
0xc231: mov qword ptr [rax+rdx*1+0x0],rbp
0xc235: cmp qword ptr [rsp+0x40],rbx
0xc23a: jle 0xc258
0xc23c: movsxd rdx,dword ptr [r15+0xe0]
0xc243: add [rsp+0x10],0x8
0xc249: cmp rdx,qword ptr [rsp+0x20]
0xc24e: mov qword ptr [rsp],rbx
0xc252: jnl 0xbf8e
0xc258: mov rdi,qword ptr [rsp+0xa0]
0xc260: call 0x1880
0xc265: mov rax,qword ptr [r15+0xb8]
0xc26c: mov rbx,qword ptr [rsp+0x40]
0xc271: mov rax,qword ptr [rax+rbx*8+0x0]
0xc275: test rax,rax
0xc278: jz 0xc555
0xc27e: mov rbx,qword ptr [rsp+0x60]
0xc283: mov rdx,qword ptr [rsp+0x78]
0xc288: lea rsi,[rax+0x18]
0xc28c: mov qword ptr [rbx],r12
0xc28f: mov rbx,qword ptr [rsp+0x68]
0xc294: mov qword ptr [r15+0xb8],rbx
0xc29b: mov rbx,qword ptr [rsp+0x70]
0xc2a0: mov qword ptr [r15+0x48],rbx
0xc2a4: mov rdi,qword ptr [rax+0x10]
0xc2a8: call 0x7420
0xc2ad: test rax,rax
0xc2b0: setz al
0xc2b3: movzx eax,al
0xc2b6: jmp 0xc3b4
0xc2bb: nop qword ptr [rax+rax*1+0x0]
0xc2c0: lea rsi,[rbp-0x1]
0xc2c4: mov qword ptr [r15+0x48],rbp
0xc2c8: mov rdi,r15
0xc2cb: call 0x9200
0xc2d0: mov r13d,eax
0xc2d3: mov edi,0x8
0xc2d8: mov [rsp+0x90],0x1
0xc2e4: mov [rsp+0x98],0x1
0xc2f0: call 0x1ac0
0xc2f5: test rax,rax
0xc2f8: mov qword ptr [rsp+0xa0],rax
0xc300: jz 0xc54b
0xc306: mov qword ptr [rax],rbx
0xc309: mov ecx,dword ptr [rsp+0x110]
0xc310: lea rbx,[rsp+0x90]
0xc318: mov rdx,qword ptr [rsp+0x48]
0xc31d: mov rdi,qword ptr [rsp+0x30]
0xc322: mov r12,rbp
0xc325: mov rsi,rbx
0xc328: mov [rsp+0x88],0x0
0xc333: call 0x7dd0
0xc338: test eax,eax
0xc33a: mov dword ptr [rsp+0x88],eax
0xc341: jz 0xc45d
0xc347: jmp 0xc3a0
0xc349: nop qword ptr [rax+0x0]
0xc350: test eax,eax
0xc352: jnz 0xc028
0xc358: mov rsi,qword ptr [r12]
0xc35c: add rsi,r13
0xc35f: jmp 0xc018
0xc364: nop qword ptr [rax+0x0]
0xc368: test rbp,rbp
0xc36b: jnz 0xbfd2
0xc371: mov rax,qword ptr [rsp]
0xc375: lea rbx,[rax+0x1]
0xc379: mov r12,rbx
0xc37c: jmp 0xc1e4
0xc381: nop qword ptr [rax+0x0]
0xc388: mov rdi,qword ptr [rsp+0xc0]
0xc390: call 0x1880
0xc395: mov [rsp+0x88],0xc
0xc3a0: mov rdi,qword ptr [rsp+0xa0]
0xc3a8: call 0x1880
0xc3ad: mov eax,dword ptr [rsp+0x88]
0xc3b4: mov rbx,qword ptr [rsp+0xc8]
0xc3bc: xor rbx,0x28
0xc3c5: jnz 0xc57c
0xc3cb: add rsp,0xd8
0xc3d2: pop rbx
0xc3d3: pop rbp
0xc3d4: pop r12
0xc3d6: pop r13
0xc3d8: pop r14
0xc3da: pop r15
0xc3dc: ret
0xc3dd: nop qword ptr [rax]
0xc3e0: mov rdi,qword ptr [rsp+0xc0]
0xc3e8: call 0x1880
0xc3ed: mov [rsp+0x88],0x0
0xc3f8: jmp 0xc178
0xc3fd: nop qword ptr [rax]
0xc400: mov eax,dword ptr [rsp+0x88]
0xc407: test eax,eax
0xc409: jnz 0xc3a0
0xc40b: mov rax,qword ptr [r15+0xb8]
0xc412: mov rdx,qword ptr [rsp+0x10]
0xc417: add [rsp+0x20],0x1
0xc41d: mov [rax+rdx*1+0x0],0x0
0xc425: jmp 0xc235
0xc42a: nop qword ptr [rax+rax*1+0x0]
0xc430: lea rbx,[rsp+0x90]
0xc438: lea rsi,[rbp+0x8]
0xc43c: mov rdi,rbx
0xc43f: call 0x8580
0xc444: test eax,eax
0xc446: mov dword ptr [rsp+0x88],eax
0xc44d: jnz 0xc3b4
0xc453: test [rbp+0x68],0x40
0xc457: jz 0xbf2c
0xc45d: cmp [rsp+0x98],0x0
0xc466: jz 0xc492
0xc468: mov r8d,dword ptr [rsp+0x110]
0xc470: mov rcx,qword ptr [rsp+0x48]
0xc475: mov rdx,r12
0xc478: mov rsi,rbx
0xc47b: mov rdi,r15
0xc47e: call 0x8d10
0xc483: test eax,eax
0xc485: mov dword ptr [rsp+0x88],eax
0xc48c: jnz 0xc3a0
0xc492: mov rsi,qword ptr [rsp+0x30]
0xc497: lea rdi,[rsp+0x88]
0xc49f: mov ecx,r13d
0xc4a2: mov rdx,rbx
0xc4a5: call 0x8770
0xc4aa: test rax,rax
0xc4ad: mov rbp,rax
0xc4b0: jz 0xc537
0xc4b6: mov rax,qword ptr [r15+0xb8]
0xc4bd: mov qword ptr [rax+r12*8+0x0],rbp
0xc4c1: jmp 0xbf2c
0xc4c6: lea r12,[rax+0x1]
0xc4ca: mov rax,0x9223372036854775807
0xc4d4: sub rax,r13
0xc4d7: cmp rax,r12
0xc4da: jl 0xc54b
0xc4dc: lea r14,[r13+r12*1+0x0]
0xc4e1: mov rax,0x2305843009213693951
0xc4eb: cmp r14,rax
0xc4ee: jnbe 0xc54b
0xc4f0: mov rax,qword ptr [rsp+0x60]
0xc4f5: lea rsi,[r14*8+0x0]
0xc4fd: mov rdi,qword ptr [rax+0x10]
0xc501: call 0x1b30
0xc506: test rax,rax
0xc509: jz 0xc54b
0xc50b: mov rcx,qword ptr [rsp+0x60]
0xc510: lea rdx,[r12*8+0x0]
0xc518: lea rdi,[rax+r13*8+0x0]
0xc51c: xor esi,esi
0xc51e: mov qword ptr [rcx+0x10],rax
0xc522: mov qword ptr [rcx+0x8],r14
0xc526: call 0x1a10
0xc52b: jmp 0xbeac
0xc530: xor edi,edi
0xc532: jmp 0xc3e8
0xc537: mov esi,dword ptr [rsp+0x88]
0xc53e: test esi,esi
0xc540: jz 0xc4b6
0xc546: jmp 0xc3a0
0xc54b: mov eax,0xc
0xc550: jmp 0xc3b4
0xc555: mov rax,qword ptr [rsp+0x60]
0xc55a: mov qword ptr [rax],r12
0xc55d: mov rax,qword ptr [rsp+0x68]
0xc562: mov qword ptr [r15+0xb8],rax
0xc569: mov rax,qword ptr [rsp+0x70]
0xc56e: mov qword ptr [r15+0x48],rax
0xc572: mov eax,0x1
0xc577: jmp 0xc3b4
0xc57c: call 0x1990
0xc590: push rbp
0xc591: mov rbp,rsp
0xc594: push r15
0xc596: push r14
0xc598: push r13
0xc59a: push r12
0xc59c: mov r13,rcx
0xc59f: push rbx
0xc5a0: mov r12,rsi
0xc5a3: sub rsp,0xb8
0xc5aa: mov qword ptr [rbp-0x98],rdx
0xc5b1: mov [rbp-0x50],0x0
0xc5b9: mov rax,0x28
0xc5c2: mov qword ptr [rbp-0x38],rax
0xc5c6: xor eax,eax
0xc5c8: mov rax,qword ptr [rdi]
0xc5cb: test r8b,r8b
0xc5ce: mov [rbp-0x48],0x2
0xc5d6: mov [rbp-0x40],0x0
0xc5de: mov qword ptr [rbp-0x90],rax
0xc5e5: jz 0xcd8d
0xc5eb: mov edi,0x60
0xc5f0: call 0x1ac0
0xc5f5: lea rcx,[rbp-0x50]
0xc5f9: test rax,rax
0xc5fc: mov qword ptr [rbp-0x40],rax
0xc600: mov qword ptr [rbp-0x88],rcx
0xc607: jz 0xcd2c
0xc60d: mov rax,qword ptr [rbp-0x90]
0xc614: pxor xmm0,xmm0
0xc618: mov [rbp-0x60],0x0
0xc620: mov rbx,qword ptr [rax+0x90]
0xc627: mov rax,qword ptr [rbp-0x98]
0xc62e: movaps [rbp-0x70],xmm0
0xc632: shl rax,0x4
0xc636: cmp rax,0xfbf
0xc63c: mov qword ptr [rbp-0xb8],rax
0xc643: jnbe 0xcd36
0xc649: add rax,0x10
0xc64d: mov [rbp-0xc9],0x0
0xc654: sub rsp,rax
0xc657: lea rax,[rsp+0xf]
0xc65c: and rax,0xfffffff0
0xc660: mov qword ptr [rbp-0xc0],rax
0xc667: mov rdx,qword ptr [rbp-0xb8]
0xc66e: mov rdi,qword ptr [rbp-0xc0]
0xc675: mov rsi,r13
0xc678: call 0x1a90
0xc67d: lea rax,[rbp-0x70]
0xc681: mov rcx,qword ptr [r13+0x0]
0xc685: mov qword ptr [rbp-0xa8],rax
0xc68c: add rax,0x10
0xc690: mov qword ptr [rbp-0x78],rcx
0xc694: mov qword ptr [rbp-0xc8],rax
0xc69b: lea rax,[rbp-0x78]
0xc69f: mov qword ptr [rbp-0xb0],rax
0xc6a6: jmp 0xc789
0xc6ab: nop qword ptr [rax+rax*1+0x0]
0xc6b0: cmp esi,0x9
0xc6b3: jz 0xc8a0
0xc6b9: cmp rax,rcx
0xc6bc: jnz 0xc6cc
0xc6be: cmp qword ptr [r12+0xb0],rbx
0xc6c6: jz 0xcaa0
0xc6cc: mov r14,qword ptr [r12+0x98]
0xc6d4: mov rdi,qword ptr [r14]
0xc6d7: lea rsi,[rdi+r9*1+0x0]
0xc6db: movzx eax,byte ptr [rsi+0x8]
0xc6df: test al,0x8
0xc6e1: jnz 0xc7f0
0xc6e7: test [rsi+0xa],0x10
0xc6eb: jnz 0xc8f0
0xc6f1: cmp al,0x4
0xc6f3: jz 0xc930
0xc6f9: mov rcx,qword ptr [rbp-0x78]
0xc6fd: mov rdx,rcx
0xc700: mov rdi,r12
0xc703: mov qword ptr [rbp-0xa0],rcx
0xc70a: call 0x92f0
0xc70f: test al,al
0xc711: mov rcx,qword ptr [rbp-0xa0]
0xc718: jz 0xcb68
0xc71e: mov rax,qword ptr [r14+0x18]
0xc722: lea rdx,[rcx+0x1]
0xc726: mov rbx,qword ptr [rax+r15*8+0x0]
0xc72a: cmp [rbp-0x88],0x0
0xc732: mov qword ptr [rbp-0x78],rdx
0xc736: jz 0xc774
0xc738: cmp rdx,qword ptr [r12+0xa8]
0xc740: jnle 0xcb76
0xc746: mov rax,qword ptr [r12+0xb8]
0xc74e: mov rax,qword ptr [rax+rdx*8+0x0]
0xc752: test rax,rax
0xc755: jz 0xcb76
0xc75b: mov rdi,qword ptr [rax+0x10]
0xc75f: lea rsi,[rax+0x18]
0xc763: mov rdx,rbx
0xc766: call 0x7420
0xc76b: test rax,rax
0xc76e: jz 0xcb76
0xc774: mov [rbp-0x68],0x0
0xc77c: test rbx,rbx
0xc77f: js 0xcb5a
0xc785: mov rcx,qword ptr [rbp-0x78]
0xc789: mov rax,qword ptr [r13+0x8]
0xc78d: cmp rax,rcx
0xc790: jl 0xcc80
0xc796: mov rdi,qword ptr [rbp-0x90]
0xc79d: mov r9,rbx
0xc7a0: mov r15,rbx
0xc7a3: shl r9,0x4
0xc7a7: mov rdx,qword ptr [rdi]
0xc7aa: add rdx,r9
0xc7ad: movzx esi,byte ptr [rdx+0x8]
0xc7b1: cmp esi,0x8
0xc7b4: jnz 0xc6b0
0xc7ba: mov rdx,qword ptr [rdx]
0xc7bd: add rdx,0x1
0xc7c1: cmp qword ptr [rbp-0x98],rdx
0xc7c8: jle 0xc6b9
0xc7ce: shl rdx,0x4
0xc7d2: add rdx,r13
0xc7d5: mov [rdx+0x8],0xffffffff
0xc7dd: mov qword ptr [rdx],rcx
0xc7e0: mov rax,qword ptr [r13+0x8]
0xc7e4: jmp 0xc6b9
0xc7e9: nop qword ptr [rax+0x0]
0xc7f0: mov rax,qword ptr [r12+0xb8]
0xc7f8: mov rdx,qword ptr [rbp-0x78]
0xc7fc: mov rsi,rbx
0xc7ff: mov rdi,qword ptr [rbp-0xa8]
0xc806: mov r9,qword ptr [rax+rdx*8+0x0]
0xc80a: mov rax,qword ptr [r14+0x28]
0xc80e: lea rdx,[rbx+rbx*2+0x0]
0xc812: mov qword ptr [rbp-0xa0],r9
0xc819: lea r15,[rax+rdx*8+0x0]
0xc81d: call 0x5ee0
0xc822: test al,al
0xc824: mov r9,qword ptr [rbp-0xa0]
0xc82b: jz 0xcd08
0xc831: mov r10,qword ptr [r15+0x8]
0xc835: test r10,r10
0xc838: jle 0xcb68
0xc83e: mov r15,qword ptr [r15+0x10]
0xc842: mov r11,qword ptr [r9+0x10]
0xc846: lea r14,[r9+0x18]
0xc84a: mov rbx,0xffffffff
0xc851: xor r9d,r9d
0xc854: mov qword ptr [rbp-0xa0],r12
0xc85b: nop qword ptr [rax+rax*1+0x0]
0xc860: mov r12,qword ptr [r15+r9*8+0x0]
0xc864: mov rsi,r14
0xc867: mov rdi,r11
0xc86a: mov rdx,r12
0xc86d: call 0x7420
0xc872: test rax,rax
0xc875: jz 0xc884
0xc877: cmp rbx,0xffffffff
0xc87b: jnz 0xc9d0
0xc881: mov rbx,r12
0xc884: add r9,0x1
0xc888: cmp r10,r9
0xc88b: jnz 0xc860
0xc88d: mov r12,qword ptr [rbp-0xa0]
0xc894: jmp 0xc77c
0xc899: nop qword ptr [rax+0x0]
0xc8a0: mov rdi,qword ptr [rdx]
0xc8a3: lea rsi,[rdi+0x1]
0xc8a7: cmp qword ptr [rbp-0x98],rsi
0xc8ae: jle 0xc6b9
0xc8b4: shl rsi,0x4
0xc8b8: lea rax,[r13+rsi*1+0x0]
0xc8bd: cmp qword ptr [rax],rcx
0xc8c0: jl 0xcc40
0xc8c6: test [rdx+0xa],0x8
0xc8ca: jz 0xc8de
0xc8cc: mov rdi,qword ptr [rbp-0xc0]
0xc8d3: cmp [rdi+rsi*1+0x0],0xffffffff
0xc8d8: jnz 0xcccb
0xc8de: mov qword ptr [rax+0x8],rcx
0xc8e2: mov rax,qword ptr [r13+0x8]
0xc8e6: jmp 0xc6b9
0xc8eb: nop qword ptr [rax+rax*1+0x0]
0xc8f0: mov r8,qword ptr [rbp-0x78]
0xc8f4: lea rsi,[r14+0xd8]
0xc8fb: mov rcx,r12
0xc8fe: mov rdx,rbx
0xc901: mov qword ptr [rbp-0xa0],r9
0xc908: call 0xbbd0
0xc90d: movsxd rcx,eax
0xc910: test rcx,rcx
0xc913: jnz 0xcb11
0xc919: mov r9,qword ptr [rbp-0xa0]
0xc920: mov rsi,qword ptr [r14]
0xc923: mov rcx,qword ptr [rbp-0x78]
0xc927: add rsi,r9
0xc92a: jmp 0xc6fd
0xc92f: nop 
0xc930: mov rax,qword ptr [rsi]
0xc933: add rax,0x1
0xc937: shl rax,0x4
0xc93b: add rax,r13
0xc93e: mov rdx,qword ptr [rax+0x8]
0xc942: mov rdi,qword ptr [rax]
0xc945: mov rcx,rdx
0xc948: sub rcx,rdi
0xc94b: cmp [rbp-0x88],0x0
0xc953: jz 0xcb08
0xc959: cmp rdi,0xffffffff
0xc95d: jz 0xcb76
0xc963: cmp rdx,0xffffffff
0xc967: jz 0xcb76
0xc96d: test rcx,rcx
0xc970: jz 0xcbc0
0xc976: mov r15,qword ptr [rbp-0x78]
0xc97a: mov rdx,qword ptr [r12+0x30]
0xc97f: mov rax,qword ptr [r12+0x8]
0xc984: sub rdx,r15
0xc987: cmp rcx,rdx
0xc98a: jnle 0xcb76
0xc990: lea rsi,[rax+r15*1+0x0]
0xc994: add rdi,rax
0xc997: mov rdx,rcx
0xc99a: mov qword ptr [rbp-0xa0],rcx
0xc9a1: call 0x1a40
0xc9a6: test eax,eax
0xc9a8: mov rcx,qword ptr [rbp-0xa0]
0xc9af: jnz 0xcb76
0xc9b5: mov rax,qword ptr [r14+0x18]
0xc9b9: lea rdx,[r15+rcx*1+0x0]
0xc9bd: mov rbx,qword ptr [rax+rbx*8+0x0]
0xc9c1: jmp 0xc72a
0xc9c6: nop qword ptr [rax+rax*1+0x0]
0xc9d0: mov rsi,qword ptr [rbp-0xc8]
0xc9d7: mov rdi,qword ptr [rbp-0x68]
0xc9db: mov rdx,rbx
0xc9de: mov r14,r12
0xc9e1: mov r12,qword ptr [rbp-0xa0]
0xc9e8: call 0x7420
0xc9ed: test rax,rax
0xc9f0: jnz 0xcbb0
0xc9f6: mov rcx,qword ptr [rbp-0x88]
0xc9fd: test rcx,rcx
0xca00: jz 0xc77c
0xca06: mov r15,qword ptr [rcx]
0xca09: mov rdx,qword ptr [rbp-0x78]
0xca0d: lea rax,[r15+0x1]
0xca11: cmp rax,qword ptr [rcx+0x8]
0xca15: mov qword ptr [rcx],rax
0xca18: jz 0xcd9d
0xca1e: mov rax,qword ptr [rcx+0x10]
0xca22: lea r15,[r15+r15*2+0x0]
0xca26: shl r15,0x4
0xca2a: add r15,rax
0xca2d: mov qword ptr [r15+0x8],r14
0xca31: mov r14,qword ptr [rbp-0xb8]
0xca38: mov qword ptr [r15],rdx
0xca3b: mov rdi,r14
0xca3e: call 0x1ac0
0xca43: test rax,rax
0xca46: mov qword ptr [r15+0x10],rax
0xca4a: jz 0xca72
0xca4c: mov rdx,r14
0xca4f: mov rsi,r13
0xca52: mov rdi,rax
0xca55: call 0x1a90
0xca5a: mov rsi,qword ptr [rbp-0xa8]
0xca61: lea rdi,[r15+0x18]
0xca65: call 0x8580
0xca6a: test eax,eax
0xca6c: jz 0xc77c
0xca72: mov rdi,qword ptr [rbp-0x60]
0xca76: call 0x1880
0xca7b: cmp [rbp-0xc9],0x0
0xca82: jnz 0xce1b
0xca88: mov rdi,qword ptr [rbp-0x88]
0xca8f: call 0xaae0
0xca94: mov eax,0xc
0xca99: jmp 0xcca9
0xca9e: nop 
0xcaa0: cmp [rbp-0x88],0x0
0xcaa8: jz 0xcddc
0xcaae: mov rcx,qword ptr [rbp-0x98]
0xcab5: test rcx,rcx
0xcab8: jz 0xcada
0xcaba: mov rax,r13
0xcabd: xor edx,edx
0xcabf: nop 
0xcac0: cmp [rax],0x0
0xcac4: js 0xcacd
0xcac6: cmp [rax+0x8],0xffffffff
0xcacb: jz 0xcb20
0xcacd: add rdx,0x1
0xcad1: add rax,0x10
0xcad5: cmp rcx,rdx
0xcad8: jnz 0xcac0
0xcada: mov rdi,qword ptr [rbp-0x60]
0xcade: call 0x1880
0xcae3: cmp [rbp-0xc9],0x0
0xcaea: jnz 0xce64
0xcaf0: mov rdi,qword ptr [rbp-0x88]
0xcaf7: call 0xaae0
0xcafc: xor eax,eax
0xcafe: jmp 0xcca9
0xcb03: nop qword ptr [rax+rax*1+0x0]
0xcb08: test rcx,rcx
0xcb0b: jz 0xcbc0
0xcb11: mov r15,qword ptr [rbp-0x78]
0xcb15: jmp 0xc9b5
0xcb1a: nop qword ptr [rax+rax*1+0x0]
0xcb20: mov rdi,qword ptr [rbp-0x88]
0xcb27: mov r9,qword ptr [rbp-0xa8]
0xcb2e: mov r8,r13
0xcb31: mov rcx,qword ptr [rbp-0x98]
0xcb38: mov rdx,qword ptr [rbp-0xb0]
0xcb3f: lea rsi,[rdi+0x10]
0xcb43: call 0xab30
0xcb48: mov r9,rax
0xcb4b: mov rbx,rax
0xcb4e: mov r15,rax
0xcb51: shl r9,0x4
0xcb55: jmp 0xc6cc
0xcb5a: cmp rbx,0xfffffffe
0xcb5e: jz 0xcd08
0xcb64: nop qword ptr [rax+0x0]
0xcb68: cmp [rbp-0x88],0x0
0xcb70: jz 0xce2c
0xcb76: mov rdi,qword ptr [rbp-0x88]
0xcb7d: mov rcx,qword ptr [rbp-0x98]
0xcb84: lea rdx,[rbp-0x78]
0xcb88: mov r9,qword ptr [rbp-0xa8]
0xcb8f: mov r8,r13
0xcb92: lea rsi,[rdi+0x10]
0xcb96: call 0xab30
0xcb9b: mov rcx,qword ptr [rbp-0x78]
0xcb9f: mov rbx,rax
0xcba2: jmp 0xc69b
0xcba7: nop qword ptr [rax+rax*1+0x0]
0xcbb0: mov rbx,r14
0xcbb3: jmp 0xc77c
0xcbb8: nop qword ptr [rax+rax*1+0x0]
0xcbc0: mov rdi,qword ptr [rbp-0xa8]
0xcbc7: mov rsi,rbx
0xcbca: mov qword ptr [rbp-0xa0],r9
0xcbd1: call 0x5ee0
0xcbd6: test al,al
0xcbd8: jz 0xcd08
0xcbde: mov rdx,qword ptr [r14+0x28]
0xcbe2: lea rax,[rbx+rbx*2+0x0]
0xcbe6: mov rcx,qword ptr [rbp-0x78]
0xcbea: lea rax,[rdx+rax*8+0x0]
0xcbee: mov qword ptr [rbp-0xd8],rcx
0xcbf5: mov rax,qword ptr [rax+0x10]
0xcbf9: mov rbx,qword ptr [rax]
0xcbfc: mov rax,qword ptr [r12+0xb8]
0xcc04: mov rax,qword ptr [rax+rcx*8+0x0]
0xcc08: mov rdx,rbx
0xcc0b: mov rdi,qword ptr [rax+0x10]
0xcc0f: lea rsi,[rax+0x18]
0xcc13: call 0x7420
0xcc18: test rax,rax
0xcc1b: jnz 0xc77c
0xcc21: mov r9,qword ptr [rbp-0xa0]
0xcc28: mov rsi,qword ptr [r14]
0xcc2b: mov rcx,qword ptr [rbp-0xd8]
0xcc32: add rsi,r9
0xcc35: jmp 0xc6fd
0xcc3a: nop qword ptr [rax+rax*1+0x0]
0xcc40: mov rdx,qword ptr [rbp-0xb8]
0xcc47: mov rdi,qword ptr [rbp-0xc0]
0xcc4e: mov rsi,r13
0xcc51: mov qword ptr [rax+0x8],rcx
0xcc55: mov qword ptr [rbp-0xd8],r9
0xcc5c: mov qword ptr [rbp-0xa0],rcx
0xcc63: call 0x1a90
0xcc68: mov rax,qword ptr [r13+0x8]
0xcc6c: mov rcx,qword ptr [rbp-0xa0]
0xcc73: mov r9,qword ptr [rbp-0xd8]
0xcc7a: jmp 0xc6b9
0xcc7f: nop 
0xcc80: mov rdi,qword ptr [rbp-0x60]
0xcc84: call 0x1880
0xcc89: cmp [rbp-0xc9],0x0
0xcc90: jnz 0xcd6c
0xcc96: mov rdi,qword ptr [rbp-0x88]
0xcc9d: test rdi,rdi
0xcca0: jz 0xcca7
0xcca2: call 0xaae0
0xcca7: xor eax,eax
0xcca9: mov rbx,qword ptr [rbp-0x38]
0xccad: xor rbx,0x28
0xccb6: jnz 0xce75
0xccbc: lea rsp,[rbp-0x28]
0xccc0: pop rbx
0xccc1: pop r12
0xccc3: pop r13
0xccc5: pop r14
0xccc7: pop r15
0xccc9: pop rbp
0xccca: ret
0xcccb: mov rdx,qword ptr [rbp-0xb8]
0xccd2: mov rsi,rdi
0xccd5: mov rdi,r13
0xccd8: mov qword ptr [rbp-0xd8],rcx
0xccdf: mov qword ptr [rbp-0xa0],r9
0xcce6: call 0x1a90
0xcceb: mov rax,qword ptr [r13+0x8]
0xccef: mov r9,qword ptr [rbp-0xa0]
0xccf6: mov rcx,qword ptr [rbp-0xd8]
0xccfd: jmp 0xc6b9
0xcd02: nop qword ptr [rax+rax*1+0x0]
0xcd08: mov rdi,qword ptr [rbp-0x60]
0xcd0c: call 0x1880
0xcd11: cmp [rbp-0xc9],0x0
0xcd18: jnz 0xce1b
0xcd1e: cmp [rbp-0x88],0x0
0xcd26: jnz 0xca88
0xcd2c: mov eax,0xc
0xcd31: jmp 0xcca9
0xcd36: mov rdi,qword ptr [rbp-0xb8]
0xcd3d: call 0x1ac0
0xcd42: test rax,rax
0xcd45: mov qword ptr [rbp-0xc0],rax
0xcd4c: mov [rbp-0xc9],0x1
0xcd53: jnz 0xc667
0xcd59: mov rdi,qword ptr [rbp-0x88]
0xcd60: test rdi,rdi
0xcd63: jz 0xcd2c
0xcd65: call 0xaae0
0xcd6a: jmp 0xcd2c
0xcd6c: mov rdi,qword ptr [rbp-0xc0]
0xcd73: call 0x1880
0xcd78: mov rdi,qword ptr [rbp-0x88]
0xcd7f: test rdi,rdi
0xcd82: jnz 0xcca2
0xcd88: jmp 0xcca7
0xcd8d: mov [rbp-0x88],0x0
0xcd98: jmp 0xc60d
0xcd9d: lea rsi,[rax+rax*2+0x0]
0xcda1: mov rax,qword ptr [rbp-0x88]
0xcda8: mov qword ptr [rbp-0xa0],rdx
0xcdaf: shl rsi,0x5
0xcdb3: mov rdi,qword ptr [rax+0x10]
0xcdb7: call 0x1b30
0xcdbc: test rax,rax
0xcdbf: jz 0xce05
0xcdc1: mov rcx,qword ptr [rbp-0x88]
0xcdc8: mov rdx,qword ptr [rbp-0xa0]
0xcdcf: shl [rcx+0x8],0x1
0xcdd3: mov qword ptr [rcx+0x10],rax
0xcdd7: jmp 0xca22
0xcddc: mov rdi,qword ptr [rbp-0x60]
0xcde0: call 0x1880
0xcde5: cmp [rbp-0xc9],0x0
0xcdec: jz 0xcca7
0xcdf2: mov rdi,qword ptr [rbp-0xc0]
0xcdf9: call 0x1880
0xcdfe: xor eax,eax
0xce00: jmp 0xcca9
0xce05: mov rdi,qword ptr [rbp-0x60]
0xce09: call 0x1880
0xce0e: cmp [rbp-0xc9],0x0
0xce15: jz 0xca88
0xce1b: mov rdi,qword ptr [rbp-0xc0]
0xce22: call 0x1880
0xce27: jmp 0xcd1e
0xce2c: mov rdi,qword ptr [rbp-0x60]
0xce30: call 0x1880
0xce35: cmp [rbp-0xc9],0x0
0xce3c: mov eax,0x1
0xce41: jz 0xcca9
0xce47: mov rdi,qword ptr [rbp-0xc0]
0xce4e: mov dword ptr [rbp-0x88],eax
0xce54: call 0x1880
0xce59: mov eax,dword ptr [rbp-0x88]
0xce5f: jmp 0xcca9
0xce64: mov rdi,qword ptr [rbp-0xc0]
0xce6b: call 0x1880
0xce70: jmp 0xcaf0
0xce75: call 0x1990
0xce80: push r15
0xce82: push r14
0xce84: mov r14,rcx
0xce87: push r13
0xce89: push r12
0xce8b: mov r13,rsi
0xce8e: push rbp
0xce8f: push rbx
0xce90: lea rsi,[rdx+0x10]
0xce94: mov rbp,rdx
0xce97: mov r9,r8
0xce9a: mov r12,r8
0xce9d: sub rsp,0x20
0xcea1: mov rcx,qword ptr [rdx+0x8]
0xcea5: mov r8,r14
0xcea8: push 0x8
0xceaa: mov rdx,qword ptr [rdx]
0xcead: mov rbx,rdi
0xceb0: call 0xbe30
0xceb5: test eax,eax
0xceb7: pop rdx
0xceb8: pop rcx
0xceb9: jz 0xced0
0xcebb: add rsp,0x18
0xcebf: pop rbx
0xcec0: pop rbp
0xcec1: pop r12
0xcec3: pop r13
0xcec5: pop r14
0xcec7: pop r15
0xcec9: ret
0xceca: nop qword ptr [rax+rax*1+0x0]
0xced0: mov rax,qword ptr [rbx+0xc8]
0xced7: mov rdx,qword ptr [rbx+0xd0]
0xcede: mov r15,qword ptr [rbp+0x8]
0xcee2: mov rcx,qword ptr [r13+0x0]
0xcee6: mov rdi,qword ptr [rbx+0xd8]
0xceed: cmp rax,rdx
0xcef0: mov rsi,r15
0xcef3: jnl 0xcf90
0xcef9: lea rdx,[rax+rax*4+0x0]
0xcefd: shl rdx,0x3
0xcf01: test rax,rax
0xcf04: jle 0xcf11
0xcf06: lea r8,[rdi+rdx*1-0x28]
0xcf0b: cmp r12,qword ptr [r8+0x8]
0xcf0f: jz 0xcf80
0xcf11: add rdi,rdx
0xcf14: xor edx,edx
0xcf16: cmp r15,rcx
0xcf19: setz dl
0xcf1c: add rax,0x1
0xcf20: mov qword ptr [rdi],r14
0xcf23: neg edx
0xcf25: mov qword ptr [rdi+0x8],r12
0xcf29: mov qword ptr [rdi+0x10],rcx
0xcf2d: mov word ptr [rdi+0x22],dx
0xcf31: mov qword ptr [rdi+0x18],r15
0xcf35: mov qword ptr [rbx+0xc8],rax
0xcf3c: mov [rdi+0x20],0x0
0xcf40: mov rax,r15
0xcf43: movsxd rdx,dword ptr [rbx+0xe0]
0xcf4a: sub rax,rcx
0xcf4d: cmp rdx,rax
0xcf50: jnl 0xcf5c
0xcf52: sub r15d,ecx
0xcf55: mov dword ptr [rbx+0xe0],r15d
0xcf5c: add rsi,r12
0xcf5f: sub rsi,qword ptr [r13+0x0]
0xcf63: add rsp,0x18
0xcf67: mov rdi,rbx
0xcf6a: pop rbx
0xcf6b: pop rbp
0xcf6c: pop r12
0xcf6e: pop r13
0xcf70: pop r14
0xcf72: pop r15
0xcf74: jmp 0x6ab0
0xcf79: nop qword ptr [rax+0x0]
0xcf80: mov [r8+0x20],0x1
0xcf85: jmp 0xcf11
0xcf87: nop qword ptr [rax+rax*1+0x0]
0xcf90: lea rsi,[rdx+rdx*4+0x0]
0xcf94: mov qword ptr [rsp+0x8],rcx
0xcf99: shl rsi,0x4
0xcf9d: call 0x1b30
0xcfa2: test rax,rax
0xcfa5: mov rcx,qword ptr [rsp+0x8]
0xcfaa: jz 0xd000
0xcfac: mov rsi,qword ptr [rbx+0xc8]
0xcfb3: mov rdx,qword ptr [rbx+0xd0]
0xcfba: mov qword ptr [rbx+0xd8],rax
0xcfc1: mov qword ptr [rsp+0x8],rcx
0xcfc6: lea rsi,[rsi+rsi*4+0x0]
0xcfca: lea rdx,[rdx+rdx*4+0x0]
0xcfce: lea rdi,[rax+rsi*8+0x0]
0xcfd2: shl rdx,0x3
0xcfd6: xor esi,esi
0xcfd8: call 0x1a10
0xcfdd: shl [rbx+0xd0],0x1
0xcfe4: mov rax,qword ptr [rbx+0xc8]
0xcfeb: mov rdi,qword ptr [rbx+0xd8]
0xcff2: mov rsi,qword ptr [rbp+0x8]
0xcff6: mov rcx,qword ptr [rsp+0x8]
0xcffb: jmp 0xcef9
0xd000: mov rdi,qword ptr [rbx+0xd8]
0xd007: call 0x1880
0xd00c: mov eax,0xc
0xd011: jmp 0xcebb
0xd020: push r15
0xd022: push r14
0xd024: push r13
0xd026: push r12
0xd028: push rbp
0xd029: push rbx
0xd02a: sub rsp,0xb8
0xd031: mov r15,qword ptr [rdi+0x48]
0xd035: mov rax,0x28
0xd03e: mov qword ptr [rsp+0xa8],rax
0xd046: xor eax,eax
0xd048: cmp [rsi],0x0
0xd04c: mov rax,qword ptr [rdi+0x98]
0xd053: mov qword ptr [rsp+0x48],rsi
0xd058: mov qword ptr [rsp+0x40],rdx
0xd05d: mov qword ptr [rsp+0x38],rax
0xd062: jle 0xd390
0xd068: lea rax,[r15*8+0x0]
0xd070: mov r14,rdi
0xd073: mov [rsp],0x0
0xd07b: mov qword ptr [rsp+0x8],r15
0xd080: mov qword ptr [rsp+0x60],rax
0xd085: lea rax,[rsp+0x90]
0xd08d: mov qword ptr [rsp+0x68],rax
0xd092: lea rax,[rsp+0x8c]
0xd09a: mov qword ptr [rsp+0x78],rax
0xd09f: jmp 0xd0e7
0xd0a1: nop qword ptr [rax+0x0]
0xd0a8: test al,0x1
0xd0aa: jz 0xd0d0
0xd0ac: and edx,0x8
0xd0af: jnz 0xd0d0
0xd0b1: test cl,0x20
0xd0b4: jz 0xd0ba
0xd0b6: test al,0x2
0xd0b8: jz 0xd0d0
0xd0ba: and ecx,0x80
0xd0c0: jz 0xd160
0xd0c6: test al,0x8
0xd0c8: jnz 0xd160
0xd0ce: nop 
0xd0d0: mov rdi,qword ptr [rsp+0x48]
0xd0d5: add [rsp],0x1
0xd0da: mov rax,qword ptr [rsp]
0xd0de: cmp rax,qword ptr [rdi]
0xd0e1: jnl 0xd390
0xd0e7: mov rax,qword ptr [rsp+0x40]
0xd0ec: mov rdi,qword ptr [rsp]
0xd0f0: mov rax,qword ptr [rax]
0xd0f3: mov r13,qword ptr [rax+rdi*8+0x0]
0xd0f7: mov rdi,qword ptr [rsp+0x38]
0xd0fc: mov rax,qword ptr [rdi]
0xd0ff: mov rbx,r13
0xd102: shl rbx,0x4
0xd106: add rax,rbx
0xd109: cmp [rax+0x8],0x4
0xd10d: jnz 0xd0d0
0xd10f: mov ebp,dword ptr [rax+0x8]
0xd112: test ebp,0x3ff00
0xd118: jz 0xd160
0xd11a: mov edx,dword ptr [r14+0xa0]
0xd121: mov rsi,qword ptr [rsp+0x8]
0xd126: mov rdi,r14
0xd129: call 0x9200
0xd12e: mov edx,ebp
0xd130: shr edx,0x8
0xd133: mov ecx,edx
0xd135: and cx,0x3ff
0xd13a: test dl,0x4
0xd13d: jnz 0xd0a8
0xd143: and edx,0x8
0xd146: jz 0xd0b1
0xd14c: test al,0x1
0xd14e: jz 0xd0b1
0xd154: jmp 0xd0d0
0xd159: nop qword ptr [rax+0x0]
0xd160: mov rdi,qword ptr [r14+0xc8]
0xd167: mov rax,qword ptr [r14+0x98]
0xd16e: xor ecx,ecx
0xd170: mov r10,qword ptr [r14+0x8]
0xd174: mov r9,qword ptr [rsp+0x8]
0xd179: mov qword ptr [rsp+0x70],rdi
0xd17e: mov qword ptr [rsp+0x50],rax
0xd183: cmp rcx,rdi
0xd186: jnl 0xd1db
0xd188: lea rax,[rcx+rdi*1+0x0]
0xd18c: mov r11,qword ptr [r14+0xd8]
0xd193: mov rsi,rax
0xd196: shr rsi,0x3f
0xd19a: add rsi,rax
0xd19d: sar rsi,0x1
0xd1a0: lea rax,[rsi+rsi*4+0x0]
0xd1a4: cmp r9,qword ptr [r11+rax*8+0x8]
0xd1a9: jle 0xd1d6
0xd1ab: jmp 0xd378
0xd1b0: lea rdx,[rsi+rcx*1+0x0]
0xd1b4: mov rax,rdx
0xd1b7: shr rax,0x3f
0xd1bb: add rax,rdx
0xd1be: sar rax,0x1
0xd1c1: lea rdx,[rax+rax*4+0x0]
0xd1c5: mov r8,rax
0xd1c8: cmp r9,qword ptr [r11+rdx*8+0x8]
0xd1cd: jnle 0xd380
0xd1d3: mov rsi,rax
0xd1d6: cmp rsi,rcx
0xd1d9: jnle 0xd1b0
0xd1db: cmp qword ptr [rsp+0x70],rcx
0xd1e0: jle 0xd206
0xd1e2: mov rdx,qword ptr [r14+0xd8]
0xd1e9: lea rax,[rcx+rcx*4+0x0]
0xd1ed: mov rdi,qword ptr [rsp+0x8]
0xd1f2: lea rax,[rdx+rax*8+0x0]
0xd1f6: cmp qword ptr [rax+0x8],rdi
0xd1fa: jnz 0xd206
0xd1fc: cmp rcx,0xffffffff
0xd200: jnz 0xd3d6
0xd206: mov rax,qword ptr [rsp+0x50]
0xd20b: cmp [r14+0xe8],0x0
0xd213: mov rdx,qword ptr [rax]
0xd216: mov rax,qword ptr [rdx+rbx*1+0x0]
0xd21a: mov qword ptr [rsp+0x58],rax
0xd21f: jle 0xd3db
0xd225: mov qword ptr [rsp+0x30],r13
0xd22a: mov [rsp+0x28],0x0
0xd233: mov r13,r10
0xd236: mov rax,qword ptr [r14+0xf8]
0xd23d: mov rbx,qword ptr [rsp+0x28]
0xd242: mov rdi,qword ptr [rsp+0x58]
0xd247: mov rbx,qword ptr [rax+rbx*8+0x0]
0xd24b: mov rax,qword ptr [rbx+0x8]
0xd24f: shl rax,0x4
0xd253: cmp rdi,qword ptr [rdx+rax*1+0x0]
0xd257: jz 0xd280
0xd259: add [rsp+0x28],0x1
0xd25f: mov rax,qword ptr [rsp+0x28]
0xd264: cmp rax,qword ptr [r14+0xe8]
0xd26b: jnl 0xd8e1
0xd271: mov rax,qword ptr [rsp+0x50]
0xd276: mov rdx,qword ptr [rax]
0xd279: jmp 0xd236
0xd27b: nop qword ptr [rax+rax*1+0x0]
0xd280: cmp [rbx+0x20],0x0
0xd285: mov r11,qword ptr [rbx]
0xd288: jle 0xd8f2
0xd28e: mov rcx,qword ptr [rsp+0x8]
0xd293: mov r8,r13
0xd296: xor ebp,ebp
0xd298: mov r13,rbx
0xd29b: mov rbx,rcx
0xd29e: jmp 0xd30c
0xd2a0: lea rsi,[r8+r11*1+0x0]
0xd2a4: lea rdi,[r8+rbx*1+0x0]
0xd2a8: mov qword ptr [rsp+0x20],r9
0xd2ad: mov qword ptr [rsp+0x18],r11
0xd2b2: mov qword ptr [rsp+0x10],r8
0xd2b7: call 0x1a40
0xd2bc: test eax,eax
0xd2be: mov r8,qword ptr [rsp+0x10]
0xd2c3: mov r11,qword ptr [rsp+0x18]
0xd2c8: mov r9,qword ptr [rsp+0x20]
0xd2cd: jnz 0xd798
0xd2d3: mov r8,qword ptr [rsp+0x8]
0xd2d8: mov rcx,qword ptr [rsp+0x30]
0xd2dd: mov rdx,r9
0xd2e0: mov rsi,r13
0xd2e3: mov rdi,r14
0xd2e6: call 0xce80
0xd2eb: cmp eax,0x1
0xd2ee: mov r8,qword ptr [r14+0x8]
0xd2f2: jnbe 0xd398
0xd2f8: add rbp,0x1
0xd2fc: cmp rbp,qword ptr [r13+0x20]
0xd300: mov r11,r15
0xd303: mov rbx,r12
0xd306: jnl 0xd5b8
0xd30c: mov rax,qword ptr [r13+0x28]
0xd310: mov r9,qword ptr [rax+rbp*8+0x0]
0xd314: mov r15,qword ptr [r9+0x8]
0xd318: mov rdx,r15
0xd31b: sub rdx,r11
0xd31e: test rdx,rdx
0xd321: lea r12,[rdx+rbx*1+0x0]
0xd325: jle 0xd2d3
0xd327: cmp qword ptr [r14+0x30],r12
0xd32b: jnl 0xd2a0
0xd331: cmp qword ptr [r14+0x58],r12
0xd335: mov qword ptr [rsp+0x18],rdx
0xd33a: mov qword ptr [rsp+0x10],r9
0xd33f: jl 0xd798
0xd345: mov rsi,r12
0xd348: mov rdi,r14
0xd34b: mov qword ptr [rsp+0x20],r11
0xd350: call 0x6ab0
0xd355: test eax,eax
0xd357: jnz 0xd398
0xd359: mov r8,qword ptr [r14+0x8]
0xd35d: mov rdx,qword ptr [rsp+0x18]
0xd362: mov r9,qword ptr [rsp+0x10]
0xd367: mov r11,qword ptr [rsp+0x20]
0xd36c: jmp 0xd2a0
0xd371: nop qword ptr [rax+0x0]
0xd378: mov r8,rsi
0xd37b: mov rsi,rdi
0xd37e: nop 
0xd380: lea rcx,[r8+0x1]
0xd384: mov rdi,rsi
0xd387: jmp 0xd183
0xd38c: nop qword ptr [rax+0x0]
0xd390: xor eax,eax
0xd392: nop qword ptr [rax+rax*1+0x0]
0xd398: mov rbx,qword ptr [rsp+0xa8]
0xd3a0: xor rbx,0x28
0xd3a9: jnz 0xd8fc
0xd3af: add rsp,0xb8
0xd3b6: pop rbx
0xd3b7: pop rbp
0xd3b8: pop r12
0xd3ba: pop r13
0xd3bc: pop r14
0xd3be: pop r15
0xd3c0: ret
0xd3c1: nop qword ptr [rax+0x0]
0xd3c8: add rax,0x28
0xd3cc: cmp [rax-0x8],0x0
0xd3d0: jz 0xd206
0xd3d6: cmp r13,qword ptr [rax]
0xd3d9: jnz 0xd3c8
0xd3db: mov rax,qword ptr [rsp+0x70]
0xd3e0: cmp qword ptr [rsp+0x70],rax
0xd3e5: mov [rsp+0x8c],0x0
0xd3f0: jnl 0xd0d0
0xd3f6: lea rax,[r13*8+0x0]
0xd3fe: mov r12,qword ptr [rsp+0x70]
0xd403: mov rbp,qword ptr [rsp+0x38]
0xd408: mov qword ptr [rsp+0x50],rax
0xd40d: lea rax,[r13+r13*2+0x0]
0xd412: lea r8,[r12+r12*4+0x0]
0xd416: shl rax,0x3
0xd41a: mov qword ptr [rsp+0x58],rax
0xd41f: lea r15,[r8*8+0x0]
0xd427: jmp 0xd55d
0xd42c: nop qword ptr [rax+0x0]
0xd430: mov rcx,qword ptr [rbp+0x28]
0xd434: mov rdi,qword ptr [rsp+0x58]
0xd439: mov rcx,qword ptr [rcx+rdi*1+0x10]
0xd43e: mov rcx,qword ptr [rcx]
0xd441: lea rcx,[rcx+rcx*2+0x0]
0xd445: lea rcx,[rdx+rcx*8+0x0]
0xd449: mov qword ptr [rsp+0x18],rcx
0xd44e: add rbx,qword ptr [rsp+0x8]
0xd453: mov edx,dword ptr [r14+0xa0]
0xd45a: mov rdi,r14
0xd45d: sub rbx,rax
0xd460: lea rsi,[rbx-0x1]
0xd464: call 0x9200
0xd469: mov rsi,qword ptr [rsp+0x60]
0xd46e: mov ecx,eax
0xd470: mov rax,qword ptr [r14+0xb8]
0xd477: lea r10,[rbx*8+0x0]
0xd47f: mov [rsp+0x10],0x0
0xd488: lea r11,[rax+r10*1+0x0]
0xd48c: mov rax,qword ptr [rax+rsi*1+0x0]
0xd490: mov rdx,qword ptr [r11]
0xd493: test rax,rax
0xd496: jz 0xd4a1
0xd498: mov rax,qword ptr [rax+0x10]
0xd49c: mov qword ptr [rsp+0x10],rax
0xd4a1: test rdx,rdx
0xd4a4: jz 0xd7c0
0xd4aa: mov rsi,qword ptr [rdx+0x50]
0xd4ae: mov rdi,qword ptr [rsp+0x68]
0xd4b3: mov rdx,qword ptr [rsp+0x18]
0xd4b8: mov qword ptr [rsp+0x30],r10
0xd4bd: mov dword ptr [rsp+0x28],ecx
0xd4c1: call 0x8610
0xd4c6: test eax,eax
0xd4c8: mov dword ptr [rsp+0x8c],eax
0xd4cf: mov ecx,dword ptr [rsp+0x28]
0xd4d3: mov r10,qword ptr [rsp+0x30]
0xd4d8: jnz 0xd868
0xd4de: add r10,qword ptr [r14+0xb8]
0xd4e5: mov rdx,qword ptr [rsp+0x68]
0xd4ea: mov rsi,rbp
0xd4ed: mov rdi,qword ptr [rsp+0x78]
0xd4f2: mov qword ptr [rsp+0x28],r10
0xd4f7: call 0x8770
0xd4fc: mov r10,qword ptr [rsp+0x28]
0xd501: mov rdi,qword ptr [rsp+0xa0]
0xd509: mov qword ptr [r10],rax
0xd50c: call 0x1880
0xd511: mov rdx,qword ptr [r14+0xb8]
0xd518: cmp [rdx+rbx*8+0x0],0x0
0xd51d: jz 0xd7f1
0xd523: cmp [rsp+0x20],0x0
0xd529: jnz 0xd548
0xd52b: mov rax,qword ptr [rsp+0x60]
0xd530: mov rbx,qword ptr [rsp+0x10]
0xd535: mov rax,qword ptr [rdx+rax*1+0x0]
0xd539: cmp qword ptr [rax+0x10],rbx
0xd53d: jnle 0xd808
0xd543: nop qword ptr [rax+rax*1+0x0]
0xd548: add r12,0x1
0xd54c: add r15,0x28
0xd550: cmp r12,qword ptr [r14+0xc8]
0xd557: jnl 0xd0d0
0xd55d: mov rax,qword ptr [r14+0xd8]
0xd564: add rax,r15
0xd567: cmp r13,qword ptr [rax]
0xd56a: jnz 0xd548
0xd56c: mov rdi,qword ptr [rsp+0x8]
0xd571: cmp rdi,qword ptr [rax+0x8]
0xd575: jnz 0xd548
0xd577: mov rbx,qword ptr [rax+0x18]
0xd57b: mov rax,qword ptr [rax+0x10]
0xd57f: mov rdx,qword ptr [rbp+0x30]
0xd583: mov rcx,rbx
0xd586: sub rcx,rax
0xd589: mov qword ptr [rsp+0x20],rcx
0xd58e: jz 0xd430
0xd594: mov rcx,qword ptr [rbp+0x18]
0xd598: mov rdi,qword ptr [rsp+0x50]
0xd59d: mov rcx,qword ptr [rcx+rdi*1+0x0]
0xd5a1: lea rcx,[rcx+rcx*2+0x0]
0xd5a5: lea rcx,[rdx+rcx*8+0x0]
0xd5a9: mov qword ptr [rsp+0x18],rcx
0xd5ae: jmp 0xd44e
0xd5b3: nop qword ptr [rax+rax*1+0x0]
0xd5b8: mov rbx,r13
0xd5bb: mov r13,r8
0xd5be: lea r11,[r15+0x1]
0xd5c2: cmp qword ptr [rsp+0x8],r11
0xd5c7: jl 0xd259
0xd5cd: mov rax,r12
0xd5d0: lea r15,[r11*8+0x0]
0xd5d8: mov r12,rbx
0xd5db: mov rbx,r11
0xd5de: mov r11,r13
0xd5e1: mov r13,rax
0xd5e4: nop qword ptr [rax+0x0]
0xd5e8: mov rax,rbx
0xd5eb: sub rax,qword ptr [r12]
0xd5ef: test rax,rax
0xd5f2: jle 0xd615
0xd5f4: cmp qword ptr [r14+0x30],r13
0xd5f8: jle 0xd881
0xd5fe: movzx ecx,byte ptr [r11+rbx*1-0x1]
0xd604: lea rax,[r13+0x1]
0xd608: cmp byte ptr [r11+r13*1+0x0],cl
0xd60c: jnz 0xd742
0xd612: mov r13,rax
0xd615: mov rax,qword ptr [r14+0xb8]
0xd61c: mov rax,qword ptr [rax+r15*1+0x0]
0xd620: test rax,rax
0xd623: jz 0xd72f
0xd629: mov rcx,qword ptr [rax+0x10]
0xd62d: test rcx,rcx
0xd630: jle 0xd72f
0xd636: mov rdi,qword ptr [rax+0x18]
0xd63a: mov rax,qword ptr [rsp+0x50]
0xd63f: xor edx,edx
0xd641: mov r8,qword ptr [rsp+0x58]
0xd646: mov rsi,qword ptr [rax]
0xd649: jmp 0xd65d
0xd64b: nop qword ptr [rax+rax*1+0x0]
0xd650: add rdx,0x1
0xd654: cmp rcx,rdx
0xd657: jz 0xd72f
0xd65d: mov rbp,qword ptr [rdi+rdx*8+0x0]
0xd661: mov rax,rbp
0xd664: shl rax,0x4
0xd668: add rax,rsi
0xd66b: cmp [rax+0x8],0x9
0xd66f: jnz 0xd650
0xd671: cmp r8,qword ptr [rax]
0xd674: jnz 0xd650
0xd676: cmp rbp,0xffffffff
0xd67a: jz 0xd72f
0xd680: mov rsi,qword ptr [r12+0x10]
0xd685: mov rcx,qword ptr [r12]
0xd689: test rsi,rsi
0xd68c: jz 0xd750
0xd692: mov qword ptr [rsp+0x10],r11
0xd697: mov rdx,qword ptr [r12+0x8]
0xd69c: sub rsp,0x8
0xd6a0: push 0x9
0xd6a2: mov r9,rbx
0xd6a5: mov r8,rbp
0xd6a8: mov rdi,r14
0xd6ab: call 0xbe30
0xd6b0: pop rdx
0xd6b1: cmp eax,0x1
0xd6b4: pop rcx
0xd6b5: mov r11,qword ptr [rsp+0x10]
0xd6ba: jz 0xd72f
0xd6bc: test eax,eax
0xd6be: jnz 0xd398
0xd6c4: mov rax,qword ptr [r12+0x20]
0xd6c9: cmp rax,qword ptr [r12+0x18]
0xd6ce: jz 0xd8a8
0xd6d4: mov esi,0x28
0xd6d9: mov edi,0x1
0xd6de: call 0x1a70
0xd6e3: test rax,rax
0xd6e6: jz 0xd789
0xd6ec: mov rdx,qword ptr [r12+0x20]
0xd6f1: mov rcx,qword ptr [r12+0x28]
0xd6f6: mov rsi,r12
0xd6f9: mov r8,qword ptr [rsp+0x8]
0xd6fe: mov rdi,r14
0xd701: mov qword ptr [rcx+rdx*8+0x0],rax
0xd705: mov rcx,qword ptr [rsp+0x30]
0xd70a: add rdx,0x1
0xd70e: mov qword ptr [rax],rbp
0xd711: mov qword ptr [rax+0x8],rbx
0xd715: mov qword ptr [r12+0x20],rdx
0xd71a: mov rdx,rax
0xd71d: call 0xce80
0xd722: cmp eax,0x1
0xd725: mov r11,qword ptr [r14+0x8]
0xd729: jnbe 0xd398
0xd72f: add rbx,0x1
0xd733: add r15,0x8
0xd737: cmp qword ptr [rsp+0x8],rbx
0xd73c: jnl 0xd5e8
0xd742: mov r13,r11
0xd745: jmp 0xd259
0xd74a: nop qword ptr [rax+rax*1+0x0]
0xd750: mov rsi,rbx
0xd753: mov edi,0x18
0xd758: mov qword ptr [rsp+0x18],r11
0xd75d: sub rsi,rcx
0xd760: mov qword ptr [rsp+0x10],rcx
0xd765: add rsi,0x1
0xd769: call 0x1a70
0xd76e: test rax,rax
0xd771: mov rsi,rax
0xd774: mov qword ptr [r12+0x10],rax
0xd779: mov rcx,qword ptr [rsp+0x10]
0xd77e: mov r11,qword ptr [rsp+0x18]
0xd783: jnz 0xd692
0xd789: mov eax,0xc
0xd78e: jmp 0xd398
0xd793: nop qword ptr [rax+rax*1+0x0]
0xd798: mov rcx,rbx
0xd79b: mov rbx,r13
0xd79e: mov r13,r8
0xd7a1: cmp qword ptr [rbx+0x20],rbp
0xd7a5: jnle 0xd259
0xd7ab: test rbp,rbp
0xd7ae: mov r12,rcx
0xd7b1: jz 0xd5c2
0xd7b7: mov r15,r11
0xd7ba: jmp 0xd5be
0xd7bf: nop 
0xd7c0: mov rdx,qword ptr [rsp+0x18]
0xd7c5: mov rdi,qword ptr [rsp+0x78]
0xd7ca: mov rsi,rbp
0xd7cd: mov qword ptr [rsp+0x28],r11
0xd7d2: call 0x8770
0xd7d7: mov r11,qword ptr [rsp+0x28]
0xd7dc: mov rdx,qword ptr [r14+0xb8]
0xd7e3: mov qword ptr [r11],rax
0xd7e6: cmp [rdx+rbx*8+0x0],0x0
0xd7eb: jnz 0xd523
0xd7f1: mov eax,dword ptr [rsp+0x8c]
0xd7f8: test eax,eax
0xd7fa: jz 0xd523
0xd800: jmp 0xd398
0xd805: nop qword ptr [rax]
0xd808: mov rax,qword ptr [rsp+0x18]
0xd80d: mov rcx,qword ptr [rsp+0x8]
0xd812: mov rdi,r14
0xd815: lea r8,[rax+0x10]
0xd819: lea rbx,[rax+0x8]
0xd81d: mov rdx,r8
0xd820: mov rsi,rbx
0xd823: mov qword ptr [rsp+0x10],r8
0xd828: call 0x90b0
0xd82d: test eax,eax
0xd82f: mov dword ptr [rsp+0x8c],eax
0xd836: jnz 0xd398
0xd83c: mov r8,qword ptr [rsp+0x10]
0xd841: mov rsi,rbx
0xd844: mov rdi,r14
0xd847: mov rdx,r8
0xd84a: call 0xd020
0xd84f: test eax,eax
0xd851: mov dword ptr [rsp+0x8c],eax
0xd858: jz 0xd548
0xd85e: jmp 0xd398
0xd863: nop qword ptr [rax+rax*1+0x0]
0xd868: mov rdi,qword ptr [rsp+0xa0]
0xd870: call 0x1880
0xd875: mov eax,dword ptr [rsp+0x8c]
0xd87c: jmp 0xd398
0xd881: cmp qword ptr [r14+0x58],r13
0xd885: jle 0xd742
0xd88b: lea esi,[r13+0x1]
0xd88f: mov rdi,r14
0xd892: call 0x6960
0xd897: test eax,eax
0xd899: jnz 0xd398
0xd89f: mov r11,qword ptr [r14+0x8]
0xd8a3: jmp 0xd5fe
0xd8a8: lea rdx,[rax+rax*1+0x1]
0xd8ad: mov rdi,qword ptr [r12+0x28]
0xd8b2: lea rsi,[rdx*8+0x0]
0xd8ba: mov qword ptr [rsp+0x10],rdx
0xd8bf: call 0x1b30
0xd8c4: test rax,rax
0xd8c7: jz 0xd789
0xd8cd: mov rdx,qword ptr [rsp+0x10]
0xd8d2: mov qword ptr [r12+0x28],rax
0xd8d7: mov qword ptr [r12+0x18],rdx
0xd8dc: jmp 0xd6d4
0xd8e1: mov r13,qword ptr [rsp+0x30]
0xd8e6: mov rax,qword ptr [r14+0xc8]
0xd8ed: jmp 0xd3e0
0xd8f2: mov r12,qword ptr [rsp+0x8]
0xd8f7: jmp 0xd5c2
0xd8fc: call 0x1990
0xd910: push r15
0xd912: push r14
0xd914: push r13
0xd916: push r12
0xd918: mov r13,rdi
0xd91b: push rbp
0xd91c: push rbx
0xd91d: mov rbx,rsi
0xd920: sub rsp,0x38
0xd924: mov r12,qword ptr [rsi+0x48]
0xd928: mov r14,qword ptr [rsi+0xb8]
0xd92f: mov rax,0x28
0xd938: mov qword ptr [rsp+0x28],rax
0xd93d: xor eax,eax
0xd93f: mov r15,qword ptr [rsi+0x98]
0xd946: lea rbp,[r12*8+0x0]
0xd94e: add r14,rbp
0xd951: cmp qword ptr [rsi+0xc0],r12
0xd958: jnl 0xd9a0
0xd95a: mov qword ptr [r14],rdx
0xd95d: mov rbp,rdx
0xd960: mov qword ptr [rsi+0xc0],r12
0xd967: cmp [r15+0x98],0x0
0xd96f: jnz 0xda98
0xd975: mov rcx,qword ptr [rsp+0x28]
0xd97a: xor rcx,0x28
0xd983: mov rax,rbp
0xd986: jnz 0xdaf7
0xd98c: add rsp,0x38
0xd990: pop rbx
0xd991: pop rbp
0xd992: pop r12
0xd994: pop r13
0xd996: pop r14
0xd998: pop r15
0xd99a: ret
0xd99b: nop qword ptr [rax+rax*1+0x0]
0xd9a0: mov rax,qword ptr [r14]
0xd9a3: test rax,rax
0xd9a6: jz 0xda88
0xd9ac: test rdx,rdx
0xd9af: mov rax,qword ptr [rax+0x50]
0xd9b3: jz 0xda40
0xd9b9: mov r14,qword ptr [rdx+0x50]
0xd9bd: lea rdi,[rsp+0x10]
0xd9c2: mov rdx,rax
0xd9c5: mov qword ptr [rsp],rdi
0xd9c9: mov rsi,r14
0xd9cc: call 0x8610
0xd9d1: test eax,eax
0xd9d3: mov dword ptr [r13+0x0],eax
0xd9d7: jnz 0xdaf0
0xd9dd: mov rax,qword ptr [rbx+0x48]
0xd9e1: mov edx,dword ptr [rbx+0xa0]
0xd9e7: mov rdi,rbx
0xd9ea: lea rsi,[rax-0x1]
0xd9ee: call 0x9200
0xd9f3: mov r8,qword ptr [rbx+0xb8]
0xd9fa: mov rdx,qword ptr [rsp]
0xd9fe: mov ecx,eax
0xda00: mov rsi,r15
0xda03: mov rdi,r13
0xda06: add r8,rbp
0xda09: mov qword ptr [rsp+0x8],r8
0xda0e: call 0x8770
0xda13: mov r8,qword ptr [rsp+0x8]
0xda18: test r14,r14
0xda1b: mov rbp,rax
0xda1e: mov qword ptr [r8],rax
0xda21: jz 0xd967
0xda27: mov rdi,qword ptr [rsp+0x20]
0xda2c: call 0x1880
0xda31: jmp 0xd967
0xda36: nop qword ptr [rax+rax*1+0x0]
0xda40: movdqu xmm0,[rax]
0xda44: mov rdi,rbx
0xda47: mov edx,dword ptr [rsi+0xa0]
0xda4d: lea rsi,[r12-0x1]
0xda52: movaps [rsp+0x10],xmm0
0xda57: mov rax,qword ptr [rax+0x10]
0xda5b: mov qword ptr [rsp+0x20],rax
0xda60: call 0x9200
0xda65: lea rdx,[rsp+0x10]
0xda6a: mov ecx,eax
0xda6c: mov rsi,r15
0xda6f: mov rdi,r13
0xda72: call 0x8770
0xda77: mov rbp,rax
0xda7a: mov qword ptr [r14],rax
0xda7d: jmp 0xd967
0xda82: nop qword ptr [rax+rax*1+0x0]
0xda88: mov qword ptr [r14],rdx
0xda8b: mov rbp,rdx
0xda8e: jmp 0xd967
0xda93: nop qword ptr [rax+rax*1+0x0]
0xda98: test rbp,rbp
0xda9b: jz 0xdaf0
0xda9d: lea r14,[rbp+0x10]
0xdaa1: lea r15,[rbp+0x18]
0xdaa5: mov rcx,r12
0xdaa8: mov rdi,rbx
0xdaab: mov rdx,r15
0xdaae: mov rsi,r14
0xdab1: call 0x90b0
0xdab6: test eax,eax
0xdab8: mov dword ptr [r13+0x0],eax
0xdabc: jnz 0xdaf0
0xdabe: test [rbp+0x68],0x40
0xdac2: jz 0xd975
0xdac8: mov rdx,r15
0xdacb: mov rsi,r14
0xdace: mov rdi,rbx
0xdad1: call 0xd020
0xdad6: test eax,eax
0xdad8: mov dword ptr [r13+0x0],eax
0xdadc: jnz 0xdaf0
0xdade: mov rax,qword ptr [rbx+0xb8]
0xdae5: mov rbp,qword ptr [rax+r12*8+0x0]
0xdae9: jmp 0xd975
0xdaee: nop 
0xdaf0: xor ebp,ebp
0xdaf2: jmp 0xd975
0xdaf7: call 0x1990
0xdb00: push r15
0xdb02: push r14
0xdb04: mov r14,rdi
0xdb07: push r13
0xdb09: push r12
0xdb0b: mov r13,rsi
0xdb0e: push rbp
0xdb0f: push rbx
0xdb10: sub rsp,0x68
0xdb14: mov r15,qword ptr [rsi+0x18]
0xdb18: mov rbx,qword ptr [rsi+0x10]
0xdb1c: mov qword ptr [rsp],rdi
0xdb20: mov edi,0x8
0xdb25: mov [rsp+0x40],0x1
0xdb2e: mov rax,0x28
0xdb37: mov qword ptr [rsp+0x58],rax
0xdb3c: xor eax,eax
0xdb3e: mov [rsp+0x48],0x1
0xdb47: call 0x1ac0
0xdb4c: test rax,rax
0xdb4f: mov qword ptr [rsp+0x50],rax
0xdb54: jz 0xde34
0xdb5a: lea rcx,[rsp+0x40]
0xdb5f: mov qword ptr [rax],rbx
0xdb62: mov rdx,r15
0xdb65: mov rsi,r13
0xdb68: mov rdi,r14
0xdb6b: mov qword ptr [rsp+0x10],rcx
0xdb70: call 0xf570
0xdb75: test eax,eax
0xdb77: jnz 0xde05
0xdb7d: lea rax,[r15*8+0x0]
0xdb85: test r15,r15
0xdb88: mov [rsp+0x2c],0x0
0xdb90: mov qword ptr [rsp+0x8],rax
0xdb95: lea rax,[r13+0x30]
0xdb99: mov qword ptr [rsp+0x38],rax
0xdb9e: jle 0xdda7
0xdba4: mov rdi,qword ptr [r13+0x0]
0xdba8: mov rax,qword ptr [rsp+0x8]
0xdbad: cmp [rdi+rax*1+0x0],0x0
0xdbb2: jz 0xddc8
0xdbb8: mov rax,qword ptr [rsp]
0xdbbc: mov [rsp+0x2c],0x0
0xdbc4: mov ecx,dword ptr [rsp+0x2c]
0xdbc8: cmp dword ptr [rax+0xe0],ecx
0xdbce: jl 0xdde1
0xdbd4: mov rbx,qword ptr [rsp]
0xdbd8: mov rdi,qword ptr [rsp+0x8]
0xdbdd: sub r15,0x1
0xdbe1: mov [rsp+0x48],0x0
0xdbea: mov rax,qword ptr [rbx+0xb8]
0xdbf1: mov r12,qword ptr [rax+rdi*1-0x8]
0xdbf6: test r12,r12
0xdbf9: jz 0xdd80
0xdbff: cmp [r12+0x28],0x0
0xdc05: mov r14,qword ptr [rbx+0x98]
0xdc0c: jle 0xdd80
0xdc12: xor ebx,ebx
0xdc14: jmp 0xdcbb
0xdc19: nop qword ptr [rax+0x0]
0xdc20: mov rdi,qword ptr [rsp]
0xdc24: mov rdx,r15
0xdc27: call 0x92f0
0xdc2c: test al,al
0xdc2e: jz 0xdcac
0xdc30: mov rax,qword ptr [r13+0x0]
0xdc34: mov rcx,qword ptr [rsp+0x8]
0xdc39: mov rax,qword ptr [rax+rcx*1+0x0]
0xdc3d: test rax,rax
0xdc40: jz 0xdcac
0xdc42: mov rdx,qword ptr [r14+0x18]
0xdc46: mov rdi,qword ptr [rax+0x10]
0xdc4a: lea rsi,[rax+0x18]
0xdc4e: mov rdx,qword ptr [rdx+rbp*8+0x0]
0xdc52: call 0x7420
0xdc57: test rax,rax
0xdc5a: jz 0xdcac
0xdc5c: mov r10d,0x1
0xdc62: cmp [r13+0x28],0x0
0xdc67: jz 0xdc97
0xdc69: mov rax,qword ptr [r14+0x18]
0xdc6d: sub rsp,0x8
0xdc71: lea rsi,[r13+0x28]
0xdc75: lea r8,[r10+r15*1+0x0]
0xdc79: mov r9,rbp
0xdc7c: mov rcx,qword ptr [rax+rbp*8+0x0]
0xdc80: push r15
0xdc82: mov rdx,qword ptr [rsp+0x48]
0xdc87: mov rdi,qword ptr [rsp+0x10]
0xdc8c: call 0x76d0
0xdc91: test al,al
0xdc93: pop rdx
0xdc94: pop rcx
0xdc95: jnz 0xdcac
0xdc97: mov rdi,qword ptr [rsp+0x10]
0xdc9c: mov rsi,rbp
0xdc9f: call 0x5ee0
0xdca4: test al,al
0xdca6: jz 0xde00
0xdcac: add rbx,0x1
0xdcb0: cmp rbx,qword ptr [r12+0x28]
0xdcb5: jnl 0xdd80
0xdcbb: mov rax,qword ptr [r12+0x30]
0xdcc0: mov rsi,qword ptr [r14]
0xdcc3: mov rbp,qword ptr [rax+rbx*8+0x0]
0xdcc7: mov r9,rbp
0xdcca: shl r9,0x4
0xdcce: add rsi,r9
0xdcd1: test [rsi+0xa],0x10
0xdcd5: jz 0xdc20
0xdcdb: mov rcx,qword ptr [rsp]
0xdcdf: mov rax,qword ptr [r13+0x18]
0xdce3: mov r8,r15
0xdce6: mov rdx,rbp
0xdce9: mov qword ptr [rsp+0x18],r9
0xdcee: mov r11,qword ptr [rcx+0x98]
0xdcf5: mov qword ptr [rsp+0x20],rax
0xdcfa: mov rdi,qword ptr [r11]
0xdcfd: lea rsi,[r11+0xd8]
0xdd04: mov qword ptr [rsp+0x30],r11
0xdd09: call 0xbbd0
0xdd0e: movsxd r10,eax
0xdd11: mov r9,qword ptr [rsp+0x18]
0xdd16: cmp r10d,0x0
0xdd1a: jle 0xddb0
0xdd20: movsxd rax,r10d
0xdd23: add rax,r15
0xdd26: cmp qword ptr [rsp+0x20],rax
0xdd2b: jl 0xdc62
0xdd31: mov rdx,qword ptr [r13+0x0]
0xdd35: mov r11,qword ptr [rsp+0x30]
0xdd3a: mov rax,qword ptr [rdx+rax*8+0x0]
0xdd3e: test rax,rax
0xdd41: jz 0xddb6
0xdd43: mov rdx,qword ptr [r11+0x18]
0xdd47: mov rdi,qword ptr [rax+0x10]
0xdd4b: lea rsi,[rax+0x18]
0xdd4f: mov qword ptr [rsp+0x18],r9
0xdd54: mov rdx,qword ptr [rdx+rbp*8+0x0]
0xdd58: call 0x7420
0xdd5d: test rax,rax
0xdd60: jnz 0xdc62
0xdd66: mov r9,qword ptr [rsp+0x18]
0xdd6b: mov rsi,qword ptr [r14]
0xdd6e: add rsi,r9
0xdd71: jmp 0xdc20
0xdd76: nop qword ptr [rax+rax*1+0x0]
0xdd80: mov rcx,qword ptr [rsp+0x10]
0xdd85: mov rdi,qword ptr [rsp]
0xdd89: mov rdx,r15
0xdd8c: mov rsi,r13
0xdd8f: call 0xf570
0xdd94: test eax,eax
0xdd96: jnz 0xde05
0xdd98: sub [rsp+0x8],0x8
0xdd9e: test r15,r15
0xdda1: jnz 0xdba4
0xdda7: xor eax,eax
0xdda9: jmp 0xde05
0xddab: nop qword ptr [rax+rax*1+0x0]
0xddb0: jnz 0xdc62
0xddb6: mov rsi,qword ptr [r14]
0xddb9: add rsi,r9
0xddbc: jmp 0xdc20
0xddc1: nop qword ptr [rax+0x0]
0xddc8: mov rax,qword ptr [rsp]
0xddcc: add [rsp+0x2c],0x1
0xddd1: mov ecx,dword ptr [rsp+0x2c]
0xddd5: cmp dword ptr [rax+0xe0],ecx
0xdddb: jnl 0xdbd4
0xdde1: mov rdx,qword ptr [rsp+0x8]
0xdde6: xor esi,esi
0xdde8: call 0x1a10
0xdded: mov rdi,qword ptr [rsp+0x50]
0xddf2: call 0x1880
0xddf7: xor eax,eax
0xddf9: jmp 0xde15
0xddfb: nop qword ptr [rax+rax*1+0x0]
0xde00: mov eax,0xc
0xde05: mov rdi,qword ptr [rsp+0x50]
0xde0a: mov dword ptr [rsp],eax
0xde0d: call 0x1880
0xde12: mov eax,dword ptr [rsp]
0xde15: mov rdx,qword ptr [rsp+0x58]
0xde1a: xor rdx,0x28
0xde23: jnz 0xde3b
0xde25: add rsp,0x68
0xde29: pop rbx
0xde2a: pop rbp
0xde2b: pop r12
0xde2d: pop r13
0xde2f: pop r14
0xde31: pop r15
0xde33: ret
0xde34: mov eax,0xc
0xde39: jmp 0xde15
0xde3b: call 0x1990
0xde40: push r15
0xde42: push r14
0xde44: push r13
0xde46: push r12
0xde48: mov r13,r9
0xde4b: push rbp
0xde4c: push rbx
0xde4d: mov rbp,rcx
0xde50: mov ecx,0x20
0xde55: mov r12,r8
0xde58: sub rsp,0x238
0xde5f: mov rbx,qword ptr [rdi]
0xde62: mov rax,qword ptr [rsp+0x278]
0xde6a: mov qword ptr [rsp+0x48],rdi
0xde6f: mov qword ptr [rsp+0x78],rsi
0xde74: mov rsi,rdi
0xde77: lea rdi,[rsp+0x120]
0xde7f: mov qword ptr [rsp+0x88],rdx
0xde87: mov qword ptr [rsp+0x38],rbx
0xde8c: mov qword ptr [rsp+0xb8],rax
0xde94: mov qword ptr [rsp],rdi
0xde98: mov rax,0x28
0xdea1: mov qword ptr [rsp+0x228],rax
0xdea9: xor eax,eax
0xdeab: rep stosd qword ptr es:[rdi],rax
0xdeae: mov rdi,qword ptr [rsi+0x20]
0xdeb2: mov qword ptr [rsp+0x1b8],rbx
0xdeba: test rdi,rdi
0xdebd: mov qword ptr [rsp+0x68],rdi
0xdec2: jz 0xdee6
0xdec4: movzx edx,byte ptr [rsi+0x38]
0xdec8: test dl,0x8
0xdecb: jz 0xe360
0xded1: cmp rbp,r8
0xded4: jz 0xe360
0xdeda: and edx,0x1
0xdedd: cmove rax,rdi
0xdee1: mov qword ptr [rsp+0x68],rax
0xdee6: mov rax,qword ptr [rsp+0x48]
0xdeeb: mov [rsp+0x98],0x0
0xdef7: mov rax,qword ptr [rax+0x30]
0xdefb: cmp rax,qword ptr [rsp+0x270]
0xdf03: jnb 0xdf24
0xdf05: mov rcx,qword ptr [rsp+0x270]
0xdf0d: lea rdx,[rcx-0x1]
0xdf11: sub rdx,rax
0xdf14: sub qword ptr [rsp+0x270],rdx
0xdf1c: mov qword ptr [rsp+0x98],rdx
0xdf24: mov rsi,qword ptr [rsp+0x48]
0xdf29: cmp [rsi+0x10],0x0
0xdf2e: jz 0xedc0
0xdf34: mov rdi,qword ptr [rsp+0x38]
0xdf39: mov rax,qword ptr [rdi+0x48]
0xdf3d: test rax,rax
0xdf40: jz 0xedc0
0xdf46: mov rdx,qword ptr [rdi+0x50]
0xdf4a: test rdx,rdx
0xdf4d: jz 0xedc0
0xdf53: mov rcx,qword ptr [rdi+0x58]
0xdf57: test rcx,rcx
0xdf5a: jz 0xedc0
0xdf60: cmp [rdi+0x60],0x0
0xdf65: jz 0xedc0
0xdf6b: cmp [rax+0x10],0x0
0xdf70: jnz 0xdfa8
0xdf72: cmp [rdx+0x10],0x0
0xdf77: jnz 0xdfa8
0xdf79: cmp [rcx+0x10],0x0
0xdf7e: jz 0xdf86
0xdf80: cmp [rsi+0x38],0x0
0xdf84: js 0xdfa8
0xdf86: test rbp,rbp
0xdf89: jz 0xdf9c
0xdf8b: test r12,r12
0xdf8e: mov [rsp+0x5c],0x1
0xdf96: jnz 0xe9b9
0xdf9c: xor r12d,r12d
0xdf9f: xor ebp,ebp
0xdfa1: nop qword ptr [rax+0x0]
0xdfa8: cmp [rsp+0x270],0x0
0xdfb1: mov [rsp+0x58],0x1
0xdfb9: jz 0xe340
0xdfbf: mov r11,qword ptr [rsp+0x38]
0xdfc4: mov rax,qword ptr [rsp+0x48]
0xdfc9: mov rdi,qword ptr [rsp+0x88]
0xdfd1: mov rsi,qword ptr [r11+0x10]
0xdfd5: mov rbx,qword ptr [rax+0x28]
0xdfd9: mov edx,dword ptr [r11+0xb4]
0xdfe0: mov rax,qword ptr [rax+0x18]
0xdfe4: mov qword ptr [rsp+0x178],rdi
0xdfec: mov qword ptr [rsp+0x170],rdi
0xdff4: mov qword ptr [rsp+0x8],rsi
0xdff9: lea rsi,[rsi+0x1]
0xdffd: mov qword ptr [rsp+0xb0],rbx
0xe005: movsxd rcx,edx
0xe008: shr rax,0x16
0xe00c: mov qword ptr [rsp+0x198],rbx
0xe014: and eax,0x1
0xe017: cmp rsi,rcx
0xe01a: mov dword ptr [rsp+0x1b0],edx
0xe021: cmovnge rsi,rcx
0xe025: lea rcx,[rdi+0x1]
0xe029: mov byte ptr [rsp+0x1a8],al
0xe030: mov qword ptr [rsp+0x188],rdi
0xe038: mov qword ptr [rsp+0x180],rdi
0xe040: cmp rsi,rcx
0xe043: mov rdi,qword ptr [rsp]
0xe047: cmovnl rsi,rcx
0xe04b: test rbx,rbx
0xe04e: mov rcx,qword ptr [rsp+0x78]
0xe053: setnz bl
0xe056: or eax,ebx
0xe058: mov byte ptr [rsp+0x1ab],al
0xe05f: movzx eax,byte ptr [r11+0xb0]
0xe067: mov qword ptr [rsp+0x120],rcx
0xe06f: mov edx,eax
0xe071: shr al,0x3
0xe074: shr dl,0x2
0xe077: and eax,0x1
0xe07a: and edx,0x1
0xe07d: mov byte ptr [rsp+0x1aa],al
0xe084: mov byte ptr [rsp+0x1a9],dl
0xe08b: call 0x5dd0
0xe090: test eax,eax
0xe092: mov dword ptr [rsp+0x5c],eax
0xe096: jnz 0xe990
0xe09c: mov rdi,qword ptr [rsp+0x38]
0xe0a1: lea rax,[rdi+0xb8]
0xe0a8: mov qword ptr [rsp+0x1a0],rax
0xe0b0: movzx eax,byte ptr [rdi+0xb0]
0xe0b7: mov byte ptr [rsp+0x8],al
0xe0bb: shr al,0x4
0xe0be: and eax,0x1
0xe0c1: cmp [rsp+0x1ab],0x0
0xe0c9: mov byte ptr [rsp+0x1ae],al
0xe0d0: jnz 0xe0f5
0xe0d2: mov rsi,qword ptr [rsp+0x38]
0xe0d7: mov rax,qword ptr [rsp+0x78]
0xe0dc: cmp [rsi+0xb4],0x1
0xe0e3: mov qword ptr [rsp+0x128],rax
0xe0eb: mov rax,qword ptr [rsp+0x88]
0xe0f3: jle 0xe0f7
0xe0f5: xor eax,eax
0xe0f7: mov qword ptr [rsp+0x150],rax
0xe0ff: mov qword ptr [rsp+0x158],rax
0xe107: mov rax,qword ptr [rsp+0x48]
0xe10c: mov qword ptr [rsp+0x188],r13
0xe114: mov qword ptr [rsp+0x180],r13
0xe11c: movzx eax,byte ptr [rax+0x38]
0xe120: mov byte ptr [rsp+0x8],al
0xe124: shr al,0x7
0xe127: mov byte ptr [rsp+0x1ad],al
0xe12e: mov rax,qword ptr [rsp+0x38]
0xe133: mov r14,qword ptr [rax+0x98]
0xe13a: mov eax,dword ptr [rsp+0x280]
0xe141: mov [rsp+0x1c8],0xffffffff
0xe14d: lea r13,[r14+r14*1+0x0]
0xe151: mov dword ptr [rsp+0x1c0],eax
0xe158: test r13,r13
0xe15b: jle 0xe1af
0xe15d: mov rax,0x461168601842738790
0xe167: cmp r13,rax
0xe16a: jnle 0xeeb0
0xe170: lea rdi,[r13+r14*8+0x0]
0xe175: shl rdi,0x3
0xe179: call 0x1ac0
0xe17e: mov rdi,r14
0xe181: mov r15,rax
0xe184: mov qword ptr [rsp+0x1f8],rax
0xe18c: shl rdi,0x4
0xe190: call 0x1ac0
0xe195: test rax,rax
0xe198: mov qword ptr [rsp+0x218],rax
0xe1a0: jz 0xeeb0
0xe1a6: test r15,r15
0xe1a9: jz 0xeeb0
0xe1af: cmp [rsp+0x270],0x1
0xe1b8: mov qword ptr [rsp+0x1f0],r13
0xe1c0: mov [rsp+0x200],0x1
0xe1cb: mov qword ptr [rsp+0x210],r13
0xe1d3: jbe 0xf2f8
0xe1d9: mov rax,qword ptr [rsp+0x160]
0xe1e1: mov rdx,0x2305843009213693950
0xe1eb: cmp rax,rdx
0xe1ee: jnbe 0xeeb0
0xe1f4: lea rdi,[rax*8+0x8]
0xe1fc: call 0x1ac0
0xe201: test rax,rax
0xe204: mov rdi,rax
0xe207: mov qword ptr [rsp+0x1d8],rax
0xe20f: jz 0xef00
0xe215: mov eax,dword ptr [rsp+0x280]
0xe21c: mov qword ptr [rsp+0xd8],rbp
0xe224: and eax,0x1
0xe227: cmp eax,0x1
0xe22a: sbb eax,eax
0xe22c: and eax,0x2
0xe22f: add eax,0x4
0xe232: mov dword ptr [rsp+0x190],eax
0xe239: xor eax,eax
0xe23b: cmp rbp,r12
0xe23e: setle al
0xe241: lea eax,[rax+rax*1-0x1]
0xe245: mov dword ptr [rsp+0xac],eax
0xe24c: mov rax,r12
0xe24f: cmovng rax,rbp
0xe253: mov qword ptr [rsp+0x90],rax
0xe25b: mov rax,r12
0xe25e: cmovnl rax,rbp
0xe262: cmp [rsp+0x68],0x0
0xe268: mov qword ptr [rsp+0x70],rax
0xe26d: mov rax,qword ptr [rsp+0x38]
0xe272: mov esi,dword ptr [rax+0xb4]
0xe278: mov eax,0x8
0xe27d: mov dword ptr [rsp+0xc8],esi
0xe284: jz 0xe2bf
0xe286: cmp esi,0x1
0xe289: mov ecx,0x4
0xe28e: jz 0xe2ae
0xe290: mov rax,qword ptr [rsp+0x48]
0xe295: test [rax+0x1a],0x40
0xe299: jnz 0xf01e
0xe29f: cmp [rsp+0xb0],0x0
0xe2a8: jnz 0xf01e
0xe2ae: xor edx,edx
0xe2b0: cmp rbp,r12
0xe2b3: movzx eax,bl
0xe2b6: setle dl
0xe2b9: or eax,ecx
0xe2bb: add edx,edx
0xe2bd: or eax,edx
0xe2bf: cmp rbp,qword ptr [rsp+0x70]
0xe2c4: setnle cl
0xe2c7: cmp rbp,qword ptr [rsp+0x90]
0xe2cf: setl dl
0xe2d2: or cl,dl
0xe2d4: jnz 0xeda9
0xe2da: lea rcx,[rsp+0xd8]
0xe2e2: cmp rbp,r12
0xe2e5: mov edx,0x0
0xe2ea: cmovng rdx,rcx
0xe2ee: test rdx,rdx
0xe2f1: mov qword ptr [rsp+0xc0],rdx
0xe2f9: setnz qword ptr [rsp+0xcf]
0xe301: sub eax,0x4
0xe304: mov dword ptr [rsp+0xa8],eax
0xe30b: lea rax,[rsp+0xd0]
0xe313: mov qword ptr [rsp+0x28],rax
0xe318: mov eax,dword ptr [rsp+0xa8]
0xe31f: cmp eax,0x4
0xe322: jnbe 0xef0d
0xe328: lea rcx,[rip+0x6d31]
0xe32f: movsxd rax,dword ptr [rcx+rax*4+0x0]
0xe333: add rax,rcx
0xe336: jmp rax
0xe338: nop qword ptr [rax+rax*1+0x0]
0xe340: mov rax,qword ptr [rsp+0x38]
0xe345: cmp [rax+0x98],0x0
0xe34d: setnz al
0xe350: movzx eax,al
0xe353: mov dword ptr [rsp+0x58],eax
0xe357: jmp 0xdfbf
0xe35c: nop qword ptr [rax+0x0]
0xe360: mov [rsp+0x68],0x0
0xe369: jmp 0xdee6
0xe36e: cmp qword ptr [rsp+0x70],rbp
0xe373: jle 0xe3cf
0xe375: mov rax,qword ptr [rsp+0x78]
0xe37a: mov rdi,qword ptr [rsp+0x68]
0xe37f: movzx edx,byte ptr [rax+rbp*1+0x0]
0xe383: lea rax,[rbp+0x1]
0xe387: cmp [rdi+rdx*1+0x0],0x0
0xe38b: jnz 0xe418
0xe391: mov rsi,qword ptr [rsp+0x68]
0xe396: mov rcx,qword ptr [rsp+0x70]
0xe39b: mov rdi,qword ptr [rsp+0x78]
0xe3a0: jmp 0xe3ba
0xe3a2: nop qword ptr [rax+rax*1+0x0]
0xe3a8: movzx edx,byte ptr [rdi+rax*1+0x0]
0xe3ac: lea rax,[rax+0x1]
0xe3b0: cmp [rsi+rdx*1+0x0],0x0
0xe3b4: jnz 0xf551
0xe3ba: cmp rcx,rax
0xe3bd: mov rbp,rax
0xe3c0: jnz 0xe3a8
0xe3c2: mov rax,qword ptr [rsp+0x70]
0xe3c7: mov qword ptr [rsp+0xd8],rax
0xe3cf: cmp qword ptr [rsp+0x70],rbp
0xe3d4: jnz 0xe418
0xe3d6: xor eax,eax
0xe3d8: mov rsi,qword ptr [rsp+0x70]
0xe3dd: cmp qword ptr [rsp+0x88],rsi
0xe3e5: jle 0xe3f0
0xe3e7: mov rax,qword ptr [rsp+0x78]
0xe3ec: movzx eax,byte ptr [rax+rsi*1+0x0]
0xe3f0: mov rsi,qword ptr [rsp+0xb0]
0xe3f8: test rsi,rsi
0xe3fb: jz 0xe401
0xe3fd: movzx eax,byte ptr [rsi+rax*1+0x0]
0xe401: mov rdi,qword ptr [rsp+0x68]
0xe406: cmp [rdi+rax*1+0x0],0x0
0xe40a: jz 0xeda9
0xe410: mov rbp,qword ptr [rsp+0x70]
0xe415: nop qword ptr [rax]
0xe418: mov edx,dword ptr [rsp+0x280]
0xe41f: mov rdi,qword ptr [rsp]
0xe423: mov rsi,rbp
0xe426: call 0x94d0
0xe42b: test eax,eax
0xe42d: mov dword ptr [rsp+0x5c],eax
0xe431: jnz 0xe990
0xe437: cmp [rsp+0xc8],0x1
0xe43f: jz 0xe45d
0xe441: cmp [rsp+0x150],0x0
0xe44a: jz 0xe45d
0xe44c: mov rax,qword ptr [rsp+0x130]
0xe454: cmp [rax],0xff
0xe457: jz 0xed81
0xe45d: mov rbx,qword ptr [rsp+0x1b8]
0xe465: movzx eax,byte ptr [rsp+0x58]
0xe46a: mov [rsp+0x200],0x0
0xe475: mov [rsp+0x1e8],0x0
0xe481: mov [rsp+0x1e0],0x0
0xe48d: mov [rsp+0xd0],0x0
0xe498: mov r14,qword ptr [rbx+0x48]
0xe49c: and eax,0x1
0xe49f: mov byte ptr [rsp+0xce],al
0xe4a6: mov rax,qword ptr [rsp+0x168]
0xe4ae: cmp [r14+0x68],0x0
0xe4b3: mov qword ptr [rsp+0x8],rax
0xe4b8: js 0xee30
0xe4be: mov rax,qword ptr [rsp+0x1d8]
0xe4c6: test rax,rax
0xe4c9: jz 0xe4e2
0xe4cb: cmp [rbx+0x98],0x0
0xe4d3: mov rdi,qword ptr [rsp+0x8]
0xe4d8: mov qword ptr [rax+rdi*8+0x0],r14
0xe4dc: jnz 0xf3cb
0xe4e2: movzx eax,byte ptr [rsp+0xcf]
0xe4ea: mov byte ptr [rsp+0x18],al
0xe4ee: movzx eax,byte ptr [r14+0x68]
0xe4f3: test al,0x10
0xe4f5: mov [rsp+0x20],0xffffffff
0xe4fe: mov [rsp+0x30],0x0
0xe507: jnz 0xf390
0xe50d: mov rax,qword ptr [rsp+0xc0]
0xe515: mov r8,qword ptr [rsp+0x168]
0xe51d: mov qword ptr [rsp+0x50],rax
0xe522: lea rax,[rsp+0xe0]
0xe52a: mov qword ptr [rsp+0x60],rax
0xe52f: lea rax,[rsp+0xd4]
0xe537: mov qword ptr [rsp+0x80],rax
0xe53f: jmp 0xe59c
0xe541: nop qword ptr [rax+0x0]
0xe548: cmp r14,r13
0xe54b: mov r8,qword ptr [rsp+0x168]
0xe553: setz al
0xe556: and byte ptr [rsp+0x18],al
0xe55a: movzx eax,byte ptr [r13+0x68]
0xe55f: cmove rbx,qword ptr [rsp+0x8]
0xe565: test al,0x10
0xe567: mov qword ptr [rsp+0x8],rbx
0xe56c: jz 0xe599
0xe56e: test al,al
0xe570: js 0xea30
0xe576: mov eax,dword ptr [rsp+0x58]
0xe57a: mov qword ptr [rsp+0x20],r8
0xe57f: test eax,eax
0xe581: jz 0xe6a6
0xe587: mov [rsp+0x30],0x1
0xe590: mov [rsp+0x50],0x0
0xe599: mov r14,r13
0xe59c: cmp qword ptr [rsp+0x188],r8
0xe5a4: jle 0xe694
0xe5aa: mov rax,qword ptr [rsp+0x160]
0xe5b2: lea rbx,[r8+0x1]
0xe5b6: cmp rbx,rax
0xe5b9: jnl 0xea60
0xe5bf: mov rax,qword ptr [rsp+0x150]
0xe5c7: cmp rbx,rax
0xe5ca: jnl 0xed50
0xe5d0: test [r14+0x68],0x20
0xe5d5: jnz 0xeaa0
0xe5db: lea rax,[r8+0x1]
0xe5df: mov qword ptr [rsp+0x168],rax
0xe5e7: mov rax,qword ptr [rsp+0x128]
0xe5ef: movzx r13d,byte ptr [rax+r8*1+0x0]
0xe5f4: mov rax,qword ptr [r14+0x58]
0xe5f8: test rax,rax
0xe5fb: jz 0xed10
0xe601: mov r13,qword ptr [rax+r13*8+0x0]
0xe605: cmp [rsp+0x1d8],0x0
0xe60e: jz 0xe624
0xe610: mov rsi,qword ptr [rsp]
0xe614: mov rdi,qword ptr [rsp+0x28]
0xe619: mov rdx,r13
0xe61c: call 0xd910
0xe621: mov r13,rax
0xe624: test r13,r13
0xe627: jnz 0xe548
0xe62d: mov ecx,dword ptr [rsp+0xd0]
0xe634: mov rdi,qword ptr [rsp+0x1d8]
0xe63c: test ecx,ecx
0xe63e: jnz 0xef00
0xe644: test rdi,rdi
0xe647: jz 0xe694
0xe649: movzx eax,byte ptr [rsp+0xce]
0xe651: xor eax,0x1
0xe654: test byte ptr [rsp+0x30],al
0xe658: jnz 0xe694
0xe65a: mov rsi,qword ptr [rsp+0x1e0]
0xe662: mov rax,qword ptr [rsp+0x168]
0xe66a: xor ecx,ecx
0xe66c: jmp 0xe683
0xe66e: nop 
0xe670: cmp [rdi+rdx*8+0x0],0x0
0xe675: mov rax,rdx
0xe678: mov ecx,0x1
0xe67d: jnz 0xe9f0
0xe683: lea rdx,[rax+0x1]
0xe687: cmp rsi,rdx
0xe68a: jnl 0xe670
0xe68c: test cl,cl
0xe68e: jnz 0xf55e
0xe694: mov rax,qword ptr [rsp+0x50]
0xe699: test rax,rax
0xe69c: jz 0xe6a6
0xe69e: mov rdi,qword ptr [rsp+0x8]
0xe6a3: add qword ptr [rax],rdi
0xe6a6: mov rax,qword ptr [rsp+0x20]
0xe6ab: cmp rax,0xffffffff
0xe6af: jz 0xed70
0xe6b5: cmp rax,0xfffffffe
0xe6b9: jz 0xeeb0
0xe6bf: mov rax,qword ptr [rsp+0x20]
0xe6c4: mov qword ptr [rsp+0x1c8],rax
0xe6cc: mov rax,qword ptr [rsp+0x48]
0xe6d1: test [rax+0x38],0x10
0xe6d5: jnz 0xee90
0xe6db: cmp [rsp+0x270],0x1
0xe6e4: jbe 0xefdc
0xe6ea: mov rcx,qword ptr [rsp+0x20]
0xe6ef: mov rbx,qword ptr [rsp+0x1d8]
0xe6f7: mov rdi,qword ptr [rsp]
0xe6fb: mov rax,qword ptr [rbx+rcx*8+0x0]
0xe6ff: mov rsi,qword ptr [rax+0x10]
0xe703: lea rdx,[rax+0x18]
0xe707: call 0x9400
0xe70c: mov r13,rax
0xe70f: mov qword ptr [rsp+0x1d0],rax
0xe717: mov rax,qword ptr [rsp+0x38]
0xe71c: test [rax+0xb0],0x1
0xe723: jnz 0xe740
0xe725: mov rax,qword ptr [rsp+0x38]
0xe72a: cmp [rax+0x98],0x0
0xe732: jz 0xf0cc
0xe738: mov r13,qword ptr [rsp+0x1d0]
0xe740: mov rsi,0x2305843009213693950
0xe74a: cmp qword ptr [rsp+0x20],rsi
0xe74f: mov r15,qword ptr [rsp+0x1b8]
0xe757: jnbe 0xf3bb
0xe75d: mov rax,qword ptr [rsp+0x20]
0xe762: add rax,0x1
0xe766: lea rbx,[rax*8+0x0]
0xe76e: mov qword ptr [rsp+0x8],rax
0xe773: mov rdi,rbx
0xe776: call 0x1ac0
0xe77b: test rax,rax
0xe77e: mov r12,rax
0xe781: jz 0xeeb0
0xe787: cmp [r15+0x98],0x0
0xe78f: jz 0xf025
0xe795: mov rdi,rbx
0xe798: call 0x1ac0
0xe79d: test rax,rax
0xe7a0: mov rbp,rax
0xe7a3: jz 0xeea8
0xe7a9: mov r14,qword ptr [rsp+0x20]
0xe7ae: lea rbx,[rsp+0xe0]
0xe7b6: mov qword ptr [rsp+0x10],r15
0xe7bb: mov qword ptr [rsp+0x18],rax
0xe7c0: mov rax,qword ptr [rsp+0x8]
0xe7c5: xor esi,esi
0xe7c7: mov rdi,rbp
0xe7ca: lea rdx,[rax*8+0x0]
0xe7d2: call 0x1a10
0xe7d7: pxor xmm0,xmm0
0xe7db: mov qword ptr [rsp+0xe0],r12
0xe7e3: mov qword ptr [rsp+0xe8],rbp
0xe7eb: mov qword ptr [rsp+0xf0],r13
0xe7f3: mov rsi,rbx
0xe7f6: mov qword ptr [rsp+0xf8],r14
0xe7fe: mov rdi,qword ptr [rsp]
0xe802: movaps [rbx+0x20],xmm0
0xe806: mov [rbx+0x30],0x0
0xe80e: call 0xdb00
0xe813: mov rdi,qword ptr [rsp+0x110]
0xe81b: mov r15d,eax
0xe81e: call 0x1880
0xe823: test r15d,r15d
0xe826: jnz 0xf444
0xe82c: cmp [r12],0x0
0xe831: jnz 0xf4a3
0xe837: cmp [rbp+0x0],0x0
0xe83c: jnz 0xf4a3
0xe842: mov rdx,qword ptr [rsp+0x1d8]
0xe84a: nop qword ptr [rax+rax*1+0x0]
0xe850: sub r14,0x1
0xe854: cmp r14,0xffffffff
0xe858: jz 0xf31b
0xe85e: mov rax,qword ptr [rdx+r14*8+0x0]
0xe862: test rax,rax
0xe865: jz 0xe850
0xe867: test [rax+0x68],0x10
0xe86b: jz 0xe850
0xe86d: mov rsi,qword ptr [rax+0x10]
0xe871: mov rdi,qword ptr [rsp]
0xe875: lea rdx,[rax+0x18]
0xe879: mov rcx,r14
0xe87c: call 0x9400
0xe881: mov r13,rax
0xe884: lea rax,[r14+0x1]
0xe888: mov qword ptr [rsp+0x8],rax
0xe88d: jmp 0xe7c0
0xe892: cmp qword ptr [rsp+0x70],rbp
0xe897: jle 0xe3cf
0xe89d: mov rax,qword ptr [rsp+0x78]
0xe8a2: mov rdi,qword ptr [rsp+0xb0]
0xe8aa: mov rsi,qword ptr [rsp+0x68]
0xe8af: movzx eax,byte ptr [rax+rbp*1+0x0]
0xe8b3: movzx edx,byte ptr [rdi+rax*1+0x0]
0xe8b7: lea rax,[rbp+0x1]
0xe8bb: cmp [rsi+rdx*1+0x0],0x0
0xe8bf: jnz 0xe418
0xe8c5: mov rsi,qword ptr [rsp+0x68]
0xe8ca: mov rdi,qword ptr [rsp+0xb0]
0xe8d2: mov rcx,qword ptr [rsp+0x70]
0xe8d7: mov r8,qword ptr [rsp+0x78]
0xe8dc: jmp 0xe8f7
0xe8de: nop 
0xe8e0: movzx eax,byte ptr [r8+rax*1+0x0]
0xe8e5: movzx edx,byte ptr [rdi+rax*1+0x0]
0xe8e9: lea rax,[rbp+0x1]
0xe8ed: cmp [rsi+rdx*1+0x0],0x0
0xe8f1: jnz 0xf551
0xe8f7: cmp rcx,rax
0xe8fa: mov rbp,rax
0xe8fd: jnz 0xe8e0
0xe8ff: jmp 0xe3c2
0xe904: cmp qword ptr [rsp+0x90],rbp
0xe90c: jnle 0xeda9
0xe912: xor ecx,ecx
0xe914: mov rax,rbp
0xe917: mov rdi,qword ptr [rsp+0x68]
0xe91c: mov rsi,qword ptr [rsp+0xb0]
0xe924: mov r9,qword ptr [rsp+0x90]
0xe92c: mov r10,qword ptr [rsp+0x78]
0xe931: mov r8,qword ptr [rsp+0x88]
0xe939: jmp 0xe952
0xe93b: nop qword ptr [rax+rax*1+0x0]
0xe940: sub rax,0x1
0xe944: mov ecx,0x1
0xe949: cmp rax,r9
0xe94c: jl 0xf330
0xe952: xor edx,edx
0xe954: cmp r8,rax
0xe957: jle 0xe95e
0xe959: movzx edx,byte ptr [r10+rax*1+0x0]
0xe95e: test rsi,rsi
0xe961: jz 0xe967
0xe963: movzx edx,byte ptr [rsi+rdx*1+0x0]
0xe967: cmp [rdi+rdx*1+0x0],0x0
0xe96b: jz 0xe940
0xe96d: test cl,cl
0xe96f: jz 0xe418
0xe975: mov qword ptr [rsp+0xd8],rax
0xe97d: mov rbp,rax
0xe980: jmp 0xe418
0xe985: nop qword ptr [rax]
0xe988: mov dword ptr [rsp+0x5c],eax
0xe98c: nop qword ptr [rax+0x0]
0xe990: mov rdi,qword ptr [rsp+0x1d8]
0xe998: call 0x1880
0xe99d: mov rax,qword ptr [rsp+0x38]
0xe9a2: cmp [rax+0x98],0x0
0xe9aa: jnz 0xf2d0
0xe9b0: mov rdi,qword ptr [rsp]
0xe9b4: call 0x7110
0xe9b9: mov rsi,qword ptr [rsp+0x228]
0xe9c1: xor rsi,0x28
0xe9ca: mov eax,dword ptr [rsp+0x5c]
0xe9ce: jnz 0xf56b
0xe9d4: add rsp,0x238
0xe9db: pop rbx
0xe9dc: pop rbp
0xe9dd: pop r12
0xe9df: pop r13
0xe9e1: pop r14
0xe9e3: pop r15
0xe9e5: ret
0xe9e6: nop qword ptr [rax+rax*1+0x0]
0xe9f0: mov rsi,qword ptr [rsp]
0xe9f4: mov rdi,qword ptr [rsp+0x28]
0xe9f9: mov qword ptr [rsp+0x168],rdx
0xea01: xor edx,edx
0xea03: call 0xd910
0xea08: mov edx,dword ptr [rsp+0xd0]
0xea0f: test edx,edx
0xea11: jnz 0xf34d
0xea17: test rax,rax
0xea1a: jnz 0xf360
0xea20: mov rdi,qword ptr [rsp+0x1d8]
0xea28: jmp 0xe65a
0xea2d: nop qword ptr [rax]
0xea30: mov rsi,qword ptr [r13+0x10]
0xea34: mov rdi,qword ptr [rsp]
0xea38: lea rdx,[r13+0x18]
0xea3c: mov rcx,r8
0xea3f: mov qword ptr [rsp+0x10],r8
0xea44: call 0x9400
0xea49: test rax,rax
0xea4c: mov r8,qword ptr [rsp+0x10]
0xea51: jz 0xe599
0xea57: jmp 0xe576
0xea5c: nop qword ptr [rax+0x0]
0xea60: cmp rax,qword ptr [rsp+0x178]
0xea68: jnl 0xe5bf
0xea6e: mov rdi,qword ptr [rsp]
0xea72: lea esi,[rbx+0x1]
0xea75: call 0x6960
0xea7a: test eax,eax
0xea7c: mov dword ptr [rsp+0xd0],eax
0xea83: jnz 0xf368
0xea89: test [r14+0x68],0x20
0xea8e: mov r8,qword ptr [rsp+0x168]
0xea96: jz 0xe5db
0xea9c: nop qword ptr [rax+0x0]
0xeaa0: cmp [r14+0x10],0x0
0xeaa5: mov r13,qword ptr [rsp+0x1b8]
0xeaad: jle 0xeddb
0xeab3: lea rax,[r13+0xd8]
0xeaba: xor r12d,r12d
0xeabd: mov qword ptr [rsp+0xa0],rbx
0xeac5: mov rbx,r12
0xeac8: mov r12,r8
0xeacb: mov qword ptr [rsp+0x40],rax
0xead0: jmp 0xec28
0xead5: nop qword ptr [rax]
0xead8: test al,0x1
0xeada: jz 0xec1a
0xeae0: and ecx,0x8
0xeae3: jnz 0xec1a
0xeae9: test dl,0x20
0xeaec: jz 0xeaf6
0xeaee: test al,0x2
0xeaf0: jz 0xec1a
0xeaf6: and edx,0x80
0xeafc: jz 0xeb10
0xeafe: test al,0x8
0xeb00: jz 0xec1a
0xeb06: nop qword ptr [rax+rax*1+0x0]
0xeb10: mov rcx,qword ptr [rsp]
0xeb14: mov rsi,qword ptr [rsp+0x40]
0xeb19: mov r8,r12
0xeb1c: mov rdx,r15
0xeb1f: mov rdi,rbp
0xeb22: call 0xbbd0
0xeb27: test eax,eax
0xeb29: jz 0xec12
0xeb2f: movsxd rbp,eax
0xeb32: add rbp,qword ptr [rsp+0x168]
0xeb3a: cmp dword ptr [rsp+0x200],eax
0xeb41: cmovnl eax,dword ptr [rsp+0x200]
0xeb49: mov rdi,qword ptr [rsp]
0xeb4d: mov rsi,rbp
0xeb50: mov dword ptr [rsp+0x200],eax
0xeb57: call 0x6ab0
0xeb5c: test eax,eax
0xeb5e: mov dword ptr [rsp+0xd4],eax
0xeb65: jnz 0xee00
0xeb6b: mov rax,qword ptr [r13+0x18]
0xeb6f: lea r12,[rbp*8+0x0]
0xeb77: mov rax,qword ptr [rax+r15*8+0x0]
0xeb7b: mov r15,qword ptr [rsp+0x1d8]
0xeb83: lea rdx,[rax+rax*2+0x0]
0xeb87: mov rax,qword ptr [r13+0x30]
0xeb8b: add r15,r12
0xeb8e: lea rdx,[rax+rdx*8+0x0]
0xeb92: mov rax,qword ptr [r15]
0xeb95: test rax,rax
0xeb98: jz 0xec98
0xeb9e: mov rsi,qword ptr [rax+0x50]
0xeba2: mov rdi,qword ptr [rsp+0x60]
0xeba7: call 0x8610
0xebac: test eax,eax
0xebae: mov dword ptr [rsp+0xd4],eax
0xebb5: jnz 0xee00
0xebbb: mov edx,dword ptr [rsp+0x1c0]
0xebc2: mov rdi,qword ptr [rsp]
0xebc6: lea rsi,[rbp-0x1]
0xebca: call 0x9200
0xebcf: mov rdx,qword ptr [rsp+0x60]
0xebd4: mov rdi,qword ptr [rsp+0x80]
0xebdc: mov ecx,eax
0xebde: add r12,qword ptr [rsp+0x1d8]
0xebe6: mov rsi,r13
0xebe9: call 0x8770
0xebee: mov rdi,qword ptr [rsp+0xf0]
0xebf6: mov qword ptr [r12],rax
0xebfa: call 0x1880
0xebff: mov rdi,qword ptr [rsp+0x1d8]
0xec07: cmp [rdi+rbp*8+0x0],0x0
0xec0c: jz 0xecf1
0xec12: mov r12,qword ptr [rsp+0x168]
0xec1a: add rbx,0x1
0xec1e: cmp rbx,qword ptr [r14+0x10]
0xec22: jnl 0xedd0
0xec28: mov rax,qword ptr [r14+0x18]
0xec2c: mov rbp,qword ptr [r13+0x0]
0xec30: mov r15,qword ptr [rax+rbx*8+0x0]
0xec34: mov rax,r15
0xec37: shl rax,0x4
0xec3b: add rax,rbp
0xec3e: test [rax+0xa],0x10
0xec42: jz 0xec1a
0xec44: mov ecx,dword ptr [rax+0x8]
0xec47: test ecx,0x3ff00
0xec4d: mov dword ptr [rsp+0x10],ecx
0xec51: jz 0xeb10
0xec57: mov edx,dword ptr [rsp+0x1c0]
0xec5e: mov rdi,qword ptr [rsp]
0xec62: mov rsi,r12
0xec65: call 0x9200
0xec6a: mov ecx,dword ptr [rsp+0x10]
0xec6e: shr ecx,0x8
0xec71: mov edx,ecx
0xec73: and dx,0x3ff
0xec78: test cl,0x4
0xec7b: jnz 0xead8
0xec81: and ecx,0x8
0xec84: jz 0xeae9
0xec8a: test al,0x1
0xec8c: jz 0xeae9
0xec92: jmp 0xec1a
0xec94: nop qword ptr [rax+0x0]
0xec98: movdqu xmm0,[rdx]
0xec9c: lea rsi,[rbp-0x1]
0xeca0: mov rdi,qword ptr [rsp]
0xeca4: movaps [rsp+0xe0],xmm0
0xecac: mov rax,qword ptr [rdx+0x10]
0xecb0: mov edx,dword ptr [rsp+0x1c0]
0xecb7: mov qword ptr [rsp+0xf0],rax
0xecbf: call 0x9200
0xecc4: mov rdi,qword ptr [rsp+0x80]
0xeccc: mov rdx,qword ptr [rsp+0x60]
0xecd1: mov ecx,eax
0xecd3: mov rsi,r13
0xecd6: call 0x8770
0xecdb: mov rdi,qword ptr [rsp+0x1d8]
0xece3: mov qword ptr [r15],rax
0xece6: cmp [rdi+rbp*8+0x0],0x0
0xeceb: jnz 0xec12
0xecf1: mov eax,dword ptr [rsp+0xd4]
0xecf8: test eax,eax
0xecfa: jz 0xec12
0xed00: mov rbx,qword ptr [rsp+0xa0]
0xed08: jmp 0xee10
0xed0d: nop qword ptr [rax]
0xed10: mov rbp,qword ptr [r14+0x60]
0xed14: test rbp,rbp
0xed17: jz 0xeec5
0xed1d: mov rax,qword ptr [rsp+0x168]
0xed25: mov edx,dword ptr [rsp+0x1c0]
0xed2c: mov rdi,qword ptr [rsp]
0xed30: lea rsi,[rax-0x1]
0xed34: call 0x9200
0xed39: test al,0x1
0xed3b: jz 0xedf0
0xed41: mov r13,qword ptr [rbp+r13*8+0x800]
0xed49: jmp 0xe605
0xed4e: nop 
0xed50: cmp rax,qword ptr [rsp+0x178]
0xed58: jnl 0xe5d0
0xed5e: jmp 0xea6e
0xed63: mov rdi,r12
0xed66: call 0x1880
0xed6b: nop qword ptr [rax+rax*1+0x0]
0xed70: mov rdi,qword ptr [rsp]
0xed74: call 0x72b0
0xed79: mov rbp,qword ptr [rsp+0xd8]
0xed81: movsxd rax,dword ptr [rsp+0xac]
0xed89: add rbp,rax
0xed8c: cmp rbp,qword ptr [rsp+0x90]
0xed94: mov qword ptr [rsp+0xd8],rbp
0xed9c: jl 0xeda9
0xed9e: cmp rbp,qword ptr [rsp+0x70]
0xeda3: jle 0xe318
0xeda9: mov rdi,qword ptr [rsp+0x1d8]
0xedb1: mov [rsp+0x5c],0x1
0xedb9: jmp 0xe998
0xedbe: nop 
0xedc0: mov [rsp+0x5c],0x1
0xedc8: jmp 0xe9b9
0xedcd: nop qword ptr [rax]
0xedd0: mov rbx,qword ptr [rsp+0xa0]
0xedd8: mov r8,r12
0xeddb: mov [rsp+0xd0],0x0
0xede6: jmp 0xe5db
0xedeb: nop qword ptr [rax+rax*1+0x0]
0xedf0: mov r13,qword ptr [rbp+r13*8+0x0]
0xedf5: jmp 0xe605
0xedfa: nop qword ptr [rax+rax*1+0x0]
0xee00: mov rbx,qword ptr [rsp+0xa0]
0xee08: mov rdi,qword ptr [rsp+0x1d8]
0xee10: test rdi,rdi
0xee13: mov dword ptr [rsp+0xd0],eax
0xee1a: jz 0xef00
0xee20: xor r13d,r13d
0xee23: jmp 0xe610
0xee28: nop qword ptr [rax+rax*1+0x0]
0xee30: mov edx,dword ptr [rsp+0x1c0]
0xee37: mov rdi,qword ptr [rsp]
0xee3b: lea rsi,[rax-0x1]
0xee3f: call 0x9200
0xee44: test al,0x1
0xee46: jz 0xefb5
0xee4c: mov r14,qword ptr [rbx+0x50]
0xee50: test r14,r14
0xee53: jnz 0xe4be
0xee59: mov eax,dword ptr [rsp+0xd0]
0xee60: cmp eax,0xc
0xee63: mov dword ptr [rsp+0x5c],eax
0xee67: jz 0xe990
0xee6d: lea rcx,[rip+0x667c]
0xee74: lea rsi,[rip+0x60a5]
0xee7b: lea rdi,[rip+0x6152]
0xee82: mov edx,0x435
0xee87: call 0x1a00
0xee8c: nop qword ptr [rax+0x0]
0xee90: mov rax,qword ptr [rsp+0x38]
0xee95: cmp [rax+0x98],0x0
0xee9d: jz 0xf0cc
0xeea3: jmp 0xefef
0xeea8: mov rdi,r12
0xeeab: call 0x1880
0xeeb0: mov rdi,qword ptr [rsp+0x1d8]
0xeeb8: mov [rsp+0x5c],0xc
0xeec0: jmp 0xe998
0xeec5: mov rdi,qword ptr [rsp+0x1b8]
0xeecd: mov rsi,r14
0xeed0: call 0x9eb0
0xeed5: test al,al
0xeed7: jnz 0xe5f4
0xeedd: mov rdi,qword ptr [rsp+0x1d8]
0xeee5: mov [rsp+0xd0],0xc
0xeef0: test rdi,rdi
0xeef3: jnz 0xee20
0xeef9: nop qword ptr [rax+0x0]
0xef00: mov [rsp+0x5c],0xc
0xef08: jmp 0xe998
0xef0d: mov rbx,qword ptr [rsp+0x68]
0xef12: mov r13d,dword ptr [rsp+0xac]
0xef1a: mov r14,qword ptr [rsp+0x90]
0xef22: mov r15,qword ptr [rsp+0x70]
0xef27: mov r12,qword ptr [rsp+0x88]
0xef2f: jmp 0xef78
0xef31: nop qword ptr [rax+0x0]
0xef38: cmp r12,rbp
0xef3b: mov rax,rbx
0xef3e: jle 0xef4f
0xef40: mov rax,qword ptr [rsp+0x128]
0xef48: movzx eax,byte ptr [rax+rdx*1+0x0]
0xef4c: add rax,rbx
0xef4f: cmp [rax],0x0
0xef52: jnz 0xe418
0xef58: movsxd rax,r13d
0xef5b: add rbp,rax
0xef5e: cmp rbp,r14
0xef61: mov qword ptr [rsp+0xd8],rbp
0xef69: jl 0xeda9
0xef6f: cmp rbp,r15
0xef72: jnle 0xeda9
0xef78: mov rdx,rbp
0xef7b: sub rdx,qword ptr [rsp+0x148]
0xef83: cmp qword ptr [rsp+0x158],rdx
0xef8b: jnbe 0xef38
0xef8d: mov edx,dword ptr [rsp+0x280]
0xef94: mov rdi,qword ptr [rsp]
0xef98: mov rsi,rbp
0xef9b: call 0x94d0
0xefa0: test eax,eax
0xefa2: jnz 0xe988
0xefa8: mov rdx,rbp
0xefab: sub rdx,qword ptr [rsp+0x148]
0xefb3: jmp 0xef38
0xefb5: test eax,eax
0xefb7: jz 0xe4be
0xefbd: mov edx,eax
0xefbf: and edx,0x6
0xefc2: cmp edx,0x6
0xefc5: jz 0xf42f
0xefcb: test al,0x2
0xefcd: jz 0xf480
0xefd3: mov r14,qword ptr [rbx+0x58]
0xefd7: jmp 0xee50
0xefdc: mov rax,qword ptr [rsp+0x38]
0xefe1: cmp [rax+0x98],0x0
0xefe9: jz 0xf0cc
0xefef: mov rcx,qword ptr [rsp+0x20]
0xeff4: mov rbx,qword ptr [rsp+0x1d8]
0xeffc: mov rdi,qword ptr [rsp]
0xf000: mov rax,qword ptr [rbx+rcx*8+0x0]
0xf004: mov rsi,qword ptr [rax+0x10]
0xf008: lea rdx,[rax+0x18]
0xf00c: call 0x9400
0xf011: mov qword ptr [rsp+0x1d0],rax
0xf019: jmp 0xe738
0xf01e: xor ecx,ecx
0xf020: jmp 0xe2ae
0xf025: pxor xmm0,xmm0
0xf029: mov qword ptr [rsp+0xe0],rax
0xf031: mov rdi,qword ptr [rsp]
0xf035: mov rax,qword ptr [rsp+0x20]
0xf03a: lea rbx,[rsp+0xe0]
0xf042: mov [rsp+0xe8],0x0
0xf04e: mov qword ptr [rsp+0xf0],r13
0xf056: mov rsi,rbx
0xf059: mov [rsp+0x110],0x0
0xf065: movaps [rsp+0x100],xmm0
0xf06d: mov qword ptr [rsp+0xf8],rax
0xf075: call 0xdb00
0xf07a: mov rdi,qword ptr [rsp+0x110]
0xf082: mov dword ptr [rsp+0x8],eax
0xf086: call 0x1880
0xf08b: mov eax,dword ptr [rsp+0x8]
0xf08f: test eax,eax
0xf091: jnz 0xf4d8
0xf097: cmp [r12],0x0
0xf09c: jz 0xed63
0xf0a2: mov rdi,qword ptr [rsp+0x1d8]
0xf0aa: call 0x1880
0xf0af: mov rax,qword ptr [rsp+0x20]
0xf0b4: mov qword ptr [rsp+0x1d8],r12
0xf0bc: mov qword ptr [rsp+0x1d0],r13
0xf0c4: mov qword ptr [rsp+0x1c8],rax
0xf0cc: cmp [rsp+0x270],0x0
0xf0d5: jz 0xe990
0xf0db: cmp [rsp+0x270],0x1
0xf0e4: jz 0xf508
0xf0ea: mov rsi,qword ptr [rsp+0xb8]
0xf0f2: mov rcx,qword ptr [rsp+0x270]
0xf0fa: mov rdx,0xffffffff
0xf101: shl rcx,0x4
0xf105: lea rax,[rsi+0x10]
0xf109: add rcx,rsi
0xf10c: mov qword ptr [rax+0x8],rdx
0xf110: mov qword ptr [rax],rdx
0xf113: add rax,0x10
0xf117: cmp rcx,rax
0xf11a: jnz 0xf10c
0xf11c: mov rdi,qword ptr [rsp+0xb8]
0xf124: mov rax,qword ptr [rsp+0x1c8]
0xf12c: mov qword ptr [rdi+0x8],rax
0xf130: mov rax,qword ptr [rsp+0x48]
0xf135: mov [rdi],0x0
0xf13c: test [rax+0x38],0x10
0xf140: jnz 0xf523
0xf146: cmp [rsp+0x270],0x1
0xf14f: jz 0xf523
0xf155: mov rax,qword ptr [rsp+0x38]
0xf15a: xor r8d,r8d
0xf15d: test [rax+0xb0],0x1
0xf164: jz 0xf175
0xf166: xor r8d,r8d
0xf169: cmp [rax+0x98],0x0
0xf171: setnle r8b
0xf175: mov rbx,qword ptr [rsp+0xb8]
0xf17d: mov rdx,qword ptr [rsp+0x270]
0xf185: mov rsi,qword ptr [rsp]
0xf189: mov rdi,qword ptr [rsp+0x48]
0xf18e: mov rcx,rbx
0xf191: call 0xc590
0xf196: test eax,eax
0xf198: jnz 0xf46d
0xf19e: mov rax,qword ptr [rbx]
0xf1a1: movzx r11d,byte ptr [rsp+0x1ac]
0xf1aa: mov r10,qword ptr [rsp+0x150]
0xf1b2: xor ecx,ecx
0xf1b4: mov r9,qword ptr [rsp+0x138]
0xf1bc: mov r8,qword ptr [rsp+0x158]
0xf1c4: mov rdi,qword ptr [rsp+0xd8]
0xf1cc: mov rdx,qword ptr [rsp+0xb8]
0xf1d4: jmp 0xf1d9
0xf1d6: mov rax,qword ptr [rdx]
0xf1d9: cmp rax,0xffffffff
0xf1dd: jz 0xf1f9
0xf1df: test r11b,r11b
0xf1e2: mov rsi,qword ptr [rdx+0x8]
0xf1e6: jnz 0xf52a
0xf1ec: add rax,rdi
0xf1ef: add rsi,rdi
0xf1f2: mov qword ptr [rdx],rax
0xf1f5: mov qword ptr [rdx+0x8],rsi
0xf1f9: add rcx,0x1
0xf1fd: add rdx,0x10
0xf201: cmp rcx,qword ptr [rsp+0x270]
0xf209: jnz 0xf1d6
0xf20b: cmp [rsp+0x98],0x0
0xf214: jle 0xf255
0xf216: mov rdx,qword ptr [rsp+0x98]
0xf21e: mov rdi,qword ptr [rsp+0xb8]
0xf226: mov rax,rcx
0xf229: shl rax,0x4
0xf22d: add rdx,rcx
0xf230: lea rax,[rdi+rax*1+0x8]
0xf235: shl rdx,0x4
0xf239: lea rsi,[rdi+rdx*1+0x8]
0xf23e: mov rdx,0xffffffff
0xf245: mov qword ptr [rax-0x8],rdx
0xf249: mov qword ptr [rax],rdx
0xf24c: add rax,0x10
0xf250: cmp rsi,rax
0xf253: jnz 0xf245
0xf255: mov rax,qword ptr [rsp+0x38]
0xf25a: mov rdi,qword ptr [rsp+0x1d8]
0xf262: mov r9,qword ptr [rax+0xe0]
0xf269: test r9,r9
0xf26c: jz 0xe998
0xf272: mov r10,qword ptr [rsp+0xb8]
0xf27a: xor r8d,r8d
0xf27d: lea rdx,[r10+0x10]
0xf281: jmp 0xf2b9
0xf283: mov rax,qword ptr [r9+rsi*8-0x8]
0xf288: cmp rax,r8
0xf28b: jz 0xf2b2
0xf28d: add rax,0x1
0xf291: shl rax,0x4
0xf295: mov rax,qword ptr [r10+rax*1+0x0]
0xf299: mov qword ptr [rdx],rax
0xf29c: mov rax,qword ptr [r9+rsi*8-0x8]
0xf2a1: add rax,0x1
0xf2a5: shl rax,0x4
0xf2a9: mov rax,qword ptr [r10+rax*1+0x8]
0xf2ae: mov qword ptr [rdx+0x8],rax
0xf2b2: add rdx,0x10
0xf2b6: mov r8,rsi
0xf2b9: lea rsi,[r8+0x1]
0xf2bd: cmp rsi,rcx
0xf2c0: jnz 0xf283
0xf2c2: jmp 0xe998
0xf2c7: nop qword ptr [rax+rax*1+0x0]
0xf2d0: mov rdi,qword ptr [rsp]
0xf2d4: call 0x72b0
0xf2d9: mov rdi,qword ptr [rsp+0x218]
0xf2e1: call 0x1880
0xf2e6: mov rdi,qword ptr [rsp+0x1f8]
0xf2ee: call 0x1880
0xf2f3: jmp 0xe9b0
0xf2f8: mov rax,qword ptr [rsp+0x38]
0xf2fd: test [rax+0xb0],0x2
0xf304: jnz 0xe1d9
0xf30a: mov [rsp+0x1d8],0x0
0xf316: jmp 0xe215
0xf31b: mov rdi,r12
0xf31e: call 0x1880
0xf323: mov rdi,rbp
0xf326: call 0x1880
0xf32b: jmp 0xed70
0xf330: mov qword ptr [rsp+0xd8],rax
0xf338: mov rdi,qword ptr [rsp+0x1d8]
0xf340: mov [rsp+0x5c],0x1
0xf348: jmp 0xe998
0xf34d: test rax,rax
0xf350: mov r13,rax
0xf353: jnz 0xe548
0xf359: jmp 0xe694
0xf35e: nop 
0xf360: mov r13,rax
0xf363: jmp 0xe548
0xf368: cmp eax,0xc
0xf36b: jz 0xeeb0
0xf371: lea rcx,[rip+0x6178]
0xf378: lea rsi,[rip+0x5ba1]
0xf37f: lea rdi,[rip+0x5c4e]
0xf386: mov edx,0x46c
0xf38b: call 0x1a00
0xf390: cmp [r14+0x68],0x0
0xf395: js 0xf406
0xf397: mov esi,dword ptr [rsp+0x58]
0xf39b: mov rax,qword ptr [rsp+0x8]
0xf3a0: test esi,esi
0xf3a2: mov qword ptr [rsp+0x20],rax
0xf3a7: jz 0xe6a6
0xf3ad: mov [rsp+0x30],0x1
0xf3b6: jmp 0xe50d
0xf3bb: mov rdi,rbx
0xf3be: mov [rsp+0x5c],0xc
0xf3c6: jmp 0xe998
0xf3cb: lea rbx,[r14+0x10]
0xf3cf: lea rbp,[r14+0x18]
0xf3d3: mov rdi,qword ptr [rsp]
0xf3d7: xor ecx,ecx
0xf3d9: mov rdx,rbp
0xf3dc: mov rsi,rbx
0xf3df: call 0x90b0
0xf3e4: test eax,eax
0xf3e6: mov dword ptr [rsp+0xd0],eax
0xf3ed: jnz 0xf438
0xf3ef: movzx eax,byte ptr [r14+0x68]
0xf3f4: test al,0x40
0xf3f6: jnz 0xf4e0
0xf3fc: mov [rsp+0x18],0x0
0xf401: jmp 0xe4f3
0xf406: mov rsi,qword ptr [r14+0x10]
0xf40a: mov rcx,qword ptr [rsp+0x8]
0xf40f: lea rdx,[r14+0x18]
0xf413: mov rdi,qword ptr [rsp]
0xf417: call 0x9400
0xf41c: test rax,rax
0xf41f: mov qword ptr [rsp+0x30],rax
0xf424: jz 0xe50d
0xf42a: jmp 0xf397
0xf42f: mov r14,qword ptr [rbx+0x60]
0xf433: jmp 0xee50
0xf438: cwde 
0xf43a: mov qword ptr [rsp+0x20],rax
0xf43f: jmp 0xe6a6
0xf444: mov r14,qword ptr [rsp+0x18]
0xf449: mov eax,r15d
0xf44c: mov rdi,r12
0xf44f: mov dword ptr [rsp+0x8],eax
0xf453: call 0x1880
0xf458: mov rdi,r14
0xf45b: call 0x1880
0xf460: mov eax,dword ptr [rsp+0x8]
0xf464: cmp eax,0x1
0xf467: jz 0xed70
0xf46d: mov rdi,qword ptr [rsp+0x1d8]
0xf475: mov dword ptr [rsp+0x5c],eax
0xf479: jmp 0xe998
0xf47e: nop 
0xf480: test al,0x4
0xf482: jz 0xe4be
0xf488: mov rdx,qword ptr [r14+0x50]
0xf48c: mov rdi,qword ptr [rsp+0x28]
0xf491: mov ecx,eax
0xf493: mov rsi,rbx
0xf496: call 0x8770
0xf49b: mov r14,rax
0xf49e: jmp 0xee50
0xf4a3: mov r15,qword ptr [rsp+0x10]
0xf4a8: mov rcx,qword ptr [rsp+0x8]
0xf4ad: mov rdx,rbp
0xf4b0: mov rsi,r12
0xf4b3: mov qword ptr [rsp+0x20],r14
0xf4b8: mov rdi,r15
0xf4bb: call 0x8c30
0xf4c0: mov rdi,rbp
0xf4c3: mov dword ptr [rsp+0x8],eax
0xf4c7: call 0x1880
0xf4cc: mov eax,dword ptr [rsp+0x8]
0xf4d0: test eax,eax
0xf4d2: jz 0xf0a2
0xf4d8: xor r14d,r14d
0xf4db: jmp 0xf44c
0xf4e0: mov rdi,qword ptr [rsp]
0xf4e4: mov rdx,rbp
0xf4e7: mov rsi,rbx
0xf4ea: call 0xd020
0xf4ef: test eax,eax
0xf4f1: mov dword ptr [rsp+0xd0],eax
0xf4f8: jnz 0xf438
0xf4fe: movzx eax,byte ptr [r14+0x68]
0xf503: jmp 0xf3fc
0xf508: mov rsi,qword ptr [rsp+0xb8]
0xf510: mov rax,qword ptr [rsp+0x1c8]
0xf518: mov [rsi],0x0
0xf51f: mov qword ptr [rsi+0x8],rax
0xf523: xor eax,eax
0xf525: jmp 0xf1a1
0xf52a: cmp r10,rax
0xf52d: jz 0xf54c
0xf52f: mov rax,qword ptr [r9+rax*8+0x0]
0xf533: cmp r10,rsi
0xf536: mov qword ptr [rdx],rax
0xf539: jz 0xf544
0xf53b: mov rsi,qword ptr [r9+rsi*8+0x0]
0xf53f: jmp 0xf1ec
0xf544: mov rsi,r8
0xf547: jmp 0xf1ec
0xf54c: mov rax,r8
0xf54f: jmp 0xf533
0xf551: mov qword ptr [rsp+0xd8],rbp
0xf559: jmp 0xe418
0xf55e: mov qword ptr [rsp+0x168],rax
0xf566: jmp 0xe694
0xf56b: call 0x1990
0xf570: push r15
0xf572: push r14
0xf574: mov rax,rdi
0xf577: push r13
0xf579: push r12
0xf57b: mov r13,rsi
0xf57e: push rbp
0xf57f: push rbx
0xf580: mov rbp,rdx
0xf583: mov rbx,rcx
0xf586: lea rcx,[rdx*8+0x0]
0xf58e: sub rsp,0xa8
0xf595: mov r12,qword ptr [rax+0x98]
0xf59c: mov rax,qword ptr [rax+0xb8]
0xf5a3: mov qword ptr [rsp+0x8],rdi
0xf5a8: mov qword ptr [rsp+0x18],rcx
0xf5ad: mov rdi,0x28
0xf5b6: mov qword ptr [rsp+0x98],rdi
0xf5be: xor edi,edi
0xf5c0: mov rdx,qword ptr [rax+rdx*8+0x0]
0xf5c4: mov [rsp+0x5c],0x0
0xf5cc: mov rcx,qword ptr [rbx+0x8]
0xf5d0: test rdx,rdx
0xf5d3: jz 0xf828
0xf5d9: lea rdi,[rdx+0x8]
0xf5dd: test rcx,rcx
0xf5e0: mov qword ptr [rsp+0x10],rdi
0xf5e5: jnz 0xf638
0xf5e7: mov rdx,qword ptr [rsi]
0xf5ea: mov [rdx+rbp*8+0x0],0x0
0xf5f2: mov rdx,qword ptr [rax+rbp*8+0x0]
0xf5f6: xor eax,eax
0xf5f8: test [rdx+0x68],0x40
0xf5fc: jnz 0xf6df
0xf602: nop qword ptr [rax+rax*1+0x0]
0xf608: mov rdi,qword ptr [rsp+0x98]
0xf610: xor rdi,0x28
0xf619: jnz 0xfdbb
0xf61f: add rsp,0xa8
0xf626: pop rbx
0xf627: pop rbp
0xf628: pop r12
0xf62a: pop r13
0xf62c: pop r14
0xf62e: pop r15
0xf630: ret
0xf631: nop qword ptr [rax+0x0]
0xf638: lea rdi,[rsp+0x60]
0xf63d: mov rdx,rbx
0xf640: mov rsi,r12
0xf643: mov [rsp+0x60],0x0
0xf64b: call 0x8a30
0xf650: mov rdx,rax
0xf653: mov eax,dword ptr [rsp+0x60]
0xf657: test eax,eax
0xf659: jnz 0xf608
0xf65b: mov r15,qword ptr [rdx+0x38]
0xf65f: lea r14,[rdx+0x38]
0xf663: test r15,r15
0xf666: jz 0xf870
0xf66c: mov rsi,qword ptr [rsp+0x10]
0xf671: mov rdx,r14
0xf674: mov rdi,rbx
0xf677: call 0x7f30
0xf67c: test eax,eax
0xf67e: mov dword ptr [rsp+0x5c],eax
0xf682: jnz 0xf608
0xf684: cmp [r13+0x28],0x0
0xf689: jnz 0xf900
0xf68f: mov r14,qword ptr [rsp+0x18]
0xf694: add r14,qword ptr [r13+0x0]
0xf698: lea rdi,[rsp+0x5c]
0xf69d: mov rdx,rbx
0xf6a0: mov rsi,r12
0xf6a3: call 0x8a30
0xf6a8: mov qword ptr [r14],rax
0xf6ab: mov eax,dword ptr [rsp+0x5c]
0xf6af: test eax,eax
0xf6b1: jnz 0xf608
0xf6b7: cmp [rsp+0x10],0x0
0xf6bd: jz 0xf608
0xf6c3: mov rax,qword ptr [rsp+0x8]
0xf6c8: mov rax,qword ptr [rax+0xb8]
0xf6cf: mov rdx,qword ptr [rax+rbp*8+0x0]
0xf6d3: xor eax,eax
0xf6d5: test [rdx+0x68],0x40
0xf6d9: jz 0xf608
0xf6df: mov rax,qword ptr [rsp+0x8]
0xf6e4: xor ebx,ebx
0xf6e6: mov rsi,qword ptr [rax+0xc8]
0xf6ed: mov rdx,rsi
0xf6f0: cmp rbx,rdx
0xf6f3: jnl 0xf753
0xf6f5: lea rax,[rbx+rdx*1+0x0]
0xf6f9: mov rcx,rax
0xf6fc: shr rcx,0x3f
0xf700: add rcx,rax
0xf703: mov rax,qword ptr [rsp+0x8]
0xf708: sar rcx,0x1
0xf70b: mov rdi,qword ptr [rax+0xd8]
0xf712: lea rax,[rcx+rcx*4+0x0]
0xf716: cmp rbp,qword ptr [rdi+rax*8+0x8]
0xf71b: jle 0xf74e
0xf71d: jmp 0xf857
0xf722: nop qword ptr [rax+rax*1+0x0]
0xf728: lea rdx,[rbx+rcx*1+0x0]
0xf72c: mov rax,rdx
0xf72f: shr rax,0x3f
0xf733: add rax,rdx
0xf736: sar rax,0x1
0xf739: lea rdx,[rax+rax*4+0x0]
0xf73d: mov r8,rax
0xf740: cmp rbp,qword ptr [rdi+rdx*8+0x8]
0xf745: jnle 0xf860
0xf74b: mov rcx,rax
0xf74e: cmp rbx,rcx
0xf751: jl 0xf728
0xf753: cmp rsi,rbx
0xf756: jle 0xf850
0xf75c: lea rax,[rbx+rbx*4+0x0]
0xf760: lea rsi,[rax*8+0x0]
0xf768: mov rax,qword ptr [rsp+0x8]
0xf76d: mov qword ptr [rsp+0x40],rsi
0xf772: mov rax,qword ptr [rax+0xd8]
0xf779: cmp rbp,qword ptr [rax+rsi*1+0x8]
0xf77e: jnz 0xf850
0xf784: cmp rbx,0xffffffff
0xf788: jz 0xf850
0xf78e: mov rax,qword ptr [rsp+0x8]
0xf793: mov [rsp+0x60],0x0
0xf79c: mov r12,qword ptr [rax+0x98]
0xf7a3: mov rax,qword ptr [rsp+0x10]
0xf7a8: cmp [rax+0x8],0x0
0xf7ad: jle 0xf850
0xf7b3: lea rax,[rsp+0x60]
0xf7b8: mov [rsp+0x20],0x0
0xf7c1: mov qword ptr [rsp+0x48],rbx
0xf7c6: mov r15,r13
0xf7c9: mov qword ptr [rsp+0x38],rax
0xf7ce: jmp 0xf7f2
0xf7d0: cmp al,0x4
0xf7d2: jz 0xfb58
0xf7d8: mov rcx,qword ptr [rsp+0x10]
0xf7dd: add [rsp+0x20],0x1
0xf7e3: mov rax,qword ptr [rsp+0x20]
0xf7e8: cmp rax,qword ptr [rcx+0x8]
0xf7ec: jnl 0xfdab
0xf7f2: mov rax,qword ptr [rsp+0x10]
0xf7f7: mov rdi,qword ptr [rsp+0x20]
0xf7fc: mov rax,qword ptr [rax+0x10]
0xf800: mov r14,qword ptr [rax+rdi*8+0x0]
0xf804: mov rax,r14
0xf807: shl rax,0x4
0xf80b: add rax,qword ptr [r12]
0xf80f: cmp r14,qword ptr [r15+0x10]
0xf813: movzx eax,byte ptr [rax+0x8]
0xf817: jnz 0xf7d0
0xf819: cmp rbp,qword ptr [r15+0x18]
0xf81d: jnz 0xf7d0
0xf81f: jmp 0xf7d8
0xf821: nop qword ptr [rax+0x0]
0xf828: lea r14,[rbp*8+0x0]
0xf830: add r14,qword ptr [rsi]
0xf833: test rcx,rcx
0xf836: jnz 0xf8f0
0xf83c: mov [r14],0x0
0xf843: xor eax,eax
0xf845: jmp 0xf608
0xf84a: nop qword ptr [rax+rax*1+0x0]
0xf850: xor eax,eax
0xf852: jmp 0xf608
0xf857: mov r8,rcx
0xf85a: mov rcx,rdx
0xf85d: nop qword ptr [rax]
0xf860: lea rbx,[r8+0x1]
0xf864: mov rdx,rcx
0xf867: jmp 0xf6f0
0xf86c: nop qword ptr [rax+0x0]
0xf870: mov rdi,qword ptr [rbx+0x8]
0xf874: mov [rdx+0x40],0x0
0xf87c: mov qword ptr [rsp+0x20],rdx
0xf881: mov qword ptr [rdx+0x38],rdi
0xf885: shl rdi,0x3
0xf889: call 0x1ac0
0xf88e: mov rdx,qword ptr [rsp+0x20]
0xf893: test rax,rax
0xf896: mov qword ptr [rdx+0x48],rax
0xf89a: jz 0xf8e3
0xf89c: cmp [rbx+0x8],0x0
0xf8a1: mov [rsp+0x60],0x0
0xf8a9: jnle 0xf8be
0xf8ab: jmp 0xf66c
0xf8b0: add r15,0x1
0xf8b4: cmp r15,qword ptr [rbx+0x8]
0xf8b8: jnl 0xf66c
0xf8be: mov rax,qword ptr [rbx+0x10]
0xf8c2: mov rdi,r14
0xf8c5: mov rax,qword ptr [rax+r15*8+0x0]
0xf8c9: lea rdx,[rax+rax*2+0x0]
0xf8cd: mov rax,qword ptr [r12+0x38]
0xf8d2: lea rsi,[rax+rdx*8+0x0]
0xf8d6: call 0x7940
0xf8db: test eax,eax
0xf8dd: mov dword ptr [rsp+0x60],eax
0xf8e1: jz 0xf8b0
0xf8e3: mov eax,0xc
0xf8e8: jmp 0xf608
0xf8ed: nop qword ptr [rax]
0xf8f0: mov [rsp+0x10],0x0
0xf8f9: jmp 0xf698
0xf8fe: nop 
0xf900: mov rax,qword ptr [rsp+0x8]
0xf905: mov rax,qword ptr [rax+0xd8]
0xf90c: mov qword ptr [rsp+0x20],rax
0xf911: jle 0xf9eb
0xf917: xor r15d,r15d
0xf91a: nop qword ptr [rax+rax*1+0x0]
0xf920: mov rax,qword ptr [r13+0x30]
0xf924: mov rdi,qword ptr [rsp+0x20]
0xf929: mov rax,qword ptr [rax+r15*8+0x0]
0xf92d: lea rax,[rax+rax*4+0x0]
0xf931: lea rdx,[rdi+rax*8+0x0]
0xf935: cmp rbp,qword ptr [rdx+0x10]
0xf939: jle 0xf9dd
0xf93f: cmp rbp,qword ptr [rdx+0x8]
0xf943: jnle 0xf9dd
0xf949: mov rcx,qword ptr [rdx]
0xf94c: mov rax,qword ptr [r12]
0xf950: mov rsi,qword ptr [rbx+0x8]
0xf954: shl rcx,0x4
0xf958: cmp rbp,qword ptr [rdx+0x18]
0xf95c: mov r8,qword ptr [rax+rcx*1+0x0]
0xf960: jz 0xfa00
0xf966: xor r14d,r14d
0xf969: test rsi,rsi
0xf96c: jle 0xf9dd
0xf96e: mov qword ptr [rsp+0x28],rbp
0xf973: mov rbp,r8
0xf976: jmp 0xf98e
0xf978: nop qword ptr [rax+rax*1+0x0]
0xf980: add r14,0x1
0xf984: cmp r14,qword ptr [rbx+0x8]
0xf988: jnl 0xf9d8
0xf98a: mov rax,qword ptr [r12]
0xf98e: mov rdx,qword ptr [rbx+0x10]
0xf992: mov rsi,qword ptr [rdx+r14*8+0x0]
0xf996: mov rdx,rsi
0xf999: shl rdx,0x4
0xf99d: add rax,rdx
0xf9a0: movzx edx,byte ptr [rax+0x8]
0xf9a4: sub edx,0x8
0xf9a7: cmp edx,0x1
0xf9aa: jnbe 0xf980
0xf9ac: cmp rbp,qword ptr [rax]
0xf9af: jnz 0xf980
0xf9b1: mov rcx,qword ptr [rsp+0x10]
0xf9b6: mov rdx,rbx
0xf9b9: mov rdi,r12
0xf9bc: call 0x9c70
0xf9c1: test eax,eax
0xf9c3: jnz 0xf608
0xf9c9: add r14,0x1
0xf9cd: cmp r14,qword ptr [rbx+0x8]
0xf9d1: jl 0xf98a
0xf9d3: nop qword ptr [rax+rax*1+0x0]
0xf9d8: mov rbp,qword ptr [rsp+0x28]
0xf9dd: add r15,0x1
0xf9e1: cmp r15,qword ptr [r13+0x28]
0xf9e5: jl 0xf920
0xf9eb: mov [rsp+0x5c],0x0
0xf9f3: jmp 0xf68f
0xf9f8: nop qword ptr [rax+rax*1+0x0]
0xfa00: test rsi,rsi
0xfa03: jle 0xf9dd
0xfa05: mov r10,qword ptr [rbx+0x10]
0xfa09: mov r9,0xffffffff
0xfa10: lea r11,[r10+rsi*8+0x0]
0xfa14: mov rcx,r10
0xfa17: mov rsi,r9
0xfa1a: jmp 0xfa36
0xfa1c: nop qword ptr [rax+0x0]
0xfa20: cmp r14d,0x9
0xfa24: jnz 0xfa2d
0xfa26: cmp r8,qword ptr [rdx]
0xfa29: cmove r9,rdi
0xfa2d: add rcx,0x8
0xfa31: cmp r11,rcx
0xfa34: jz 0xfa5e
0xfa36: mov rdi,qword ptr [rcx]
0xfa39: mov rdx,rdi
0xfa3c: shl rdx,0x4
0xfa40: add rdx,rax
0xfa43: movzx r14d,byte ptr [rdx+0x8]
0xfa48: cmp r14d,0x8
0xfa4c: jnz 0xfa20
0xfa4e: cmp r8,qword ptr [rdx]
0xfa51: cmove rsi,rdi
0xfa55: add rcx,0x8
0xfa59: cmp r11,rcx
0xfa5c: jnz 0xfa36
0xfa5e: test rsi,rsi
0xfa61: mov r14,r9
0xfa64: mov qword ptr [rsp+0x28],r9
0xfa69: js 0xfb30
0xfa6f: mov rcx,qword ptr [rsp+0x10]
0xfa74: mov rdx,rbx
0xfa77: mov rdi,r12
0xfa7a: call 0x9c70
0xfa7f: test eax,eax
0xfa81: jnz 0xf608
0xfa87: test r14,r14
0xfa8a: js 0xf9dd
0xfa90: cmp [rbx+0x8],0x0
0xfa95: jle 0xf9dd
0xfa9b: mov r10,qword ptr [rbx+0x10]
0xfa9f: xor r14d,r14d
0xfaa2: mov qword ptr [rsp+0x30],rbp
0xfaa7: mov rbp,r14
0xfaaa: mov r14,qword ptr [rsp+0x28]
0xfaaf: jmp 0xfaca
0xfab1: nop qword ptr [rax+0x0]
0xfab8: add rbp,0x1
0xfabc: cmp rbp,qword ptr [rbx+0x8]
0xfac0: jnl 0xfb48
0xfac6: mov r10,qword ptr [rbx+0x10]
0xfaca: mov r10,qword ptr [r10+rbp*8+0x0]
0xface: mov rax,qword ptr [r12+0x38]
0xfad3: mov rdx,r14
0xfad6: lea r9,[r10+r10*2+0x0]
0xfada: shl r9,0x3
0xfade: add rax,r9
0xfae1: mov rdi,qword ptr [rax+0x8]
0xfae5: lea rsi,[rax+0x10]
0xfae9: call 0x7420
0xfaee: test rax,rax
0xfaf1: jnz 0xfab8
0xfaf3: add r9,qword ptr [r12+0x30]
0xfaf8: mov rdi,qword ptr [r9+0x8]
0xfafc: lea rsi,[r9+0x10]
0xfb00: call 0x7420
0xfb05: test rax,rax
0xfb08: jnz 0xfab8
0xfb0a: mov rcx,qword ptr [rsp+0x10]
0xfb0f: mov rdx,rbx
0xfb12: mov rsi,r10
0xfb15: mov rdi,r12
0xfb18: call 0x9c70
0xfb1d: test eax,eax
0xfb1f: jnz 0xf608
0xfb25: sub rbp,0x1
0xfb29: jmp 0xfab8
0xfb2b: nop qword ptr [rax+rax*1+0x0]
0xfb30: cmp [rsp+0x28],0x0
0xfb36: jns 0xfa9f
0xfb3c: jmp 0xf9dd
0xfb41: nop qword ptr [rax+0x0]
0xfb48: mov rbp,qword ptr [rsp+0x30]
0xfb4d: jmp 0xf9dd
0xfb52: nop qword ptr [rax+rax*1+0x0]
0xfb58: mov rax,qword ptr [rsp+0x8]
0xfb5d: mov r13,qword ptr [rsp+0x40]
0xfb62: mov rbx,qword ptr [rsp+0x48]
0xfb67: add r13,qword ptr [rax+0xd8]
0xfb6e: lea rax,[r14+r14*2+0x0]
0xfb72: shl rax,0x3
0xfb76: mov qword ptr [rsp+0x30],rax
0xfb7b: lea rax,[r14*8+0x0]
0xfb83: mov qword ptr [rsp+0x28],rax
0xfb88: mov rax,r15
0xfb8b: mov r15,r13
0xfb8e: mov r13,rbx
0xfb91: mov rbx,rax
0xfb94: jmp 0xfcfe
0xfb99: nop qword ptr [rax+0x0]
0xfba0: mov rax,qword ptr [r15+0x18]
0xfba4: sub rax,qword ptr [r15+0x10]
0xfba8: test rax,rax
0xfbab: lea r9,[rbp+rax*1+0x0]
0xfbb0: jz 0xfd10
0xfbb6: mov rax,qword ptr [r12+0x18]
0xfbbb: mov rsi,qword ptr [rsp+0x28]
0xfbc0: mov r10,qword ptr [rax+rsi*1+0x0]
0xfbc4: cmp r9,qword ptr [rbx+0x18]
0xfbc8: jnle 0xfd07
0xfbce: mov rax,qword ptr [rbx]
0xfbd1: mov rax,qword ptr [rax+r9*8+0x0]
0xfbd5: test rax,rax
0xfbd8: jz 0xfd07
0xfbde: mov rdi,qword ptr [rax+0x10]
0xfbe2: lea rsi,[rax+0x18]
0xfbe6: mov rdx,r10
0xfbe9: call 0x7420
0xfbee: test rax,rax
0xfbf1: jz 0xfd07
0xfbf7: sub rsp,0x8
0xfbfb: lea rdx,[rbx+0x30]
0xfbff: lea rsi,[rbx+0x28]
0xfc03: push r9
0xfc05: mov rdi,qword ptr [rsp+0x18]
0xfc0a: mov rcx,r14
0xfc0d: mov r9,r10
0xfc10: mov r8,rbp
0xfc13: call 0x76d0
0xfc18: test al,al
0xfc1a: pop rdx
0xfc1b: pop rcx
0xfc1c: jnz 0xfd07
0xfc22: cmp [rsp+0x60],0x0
0xfc28: jz 0xfd38
0xfc2e: mov rax,qword ptr [rsp+0x38]
0xfc33: mov rsi,r13
0xfc36: mov qword ptr [rsp+0x70],r14
0xfc3b: mov qword ptr [rsp+0x78],rbp
0xfc40: lea rdi,[rax+0x20]
0xfc44: call 0x5ee0
0xfc49: test al,al
0xfc4b: jz 0xfda4
0xfc51: mov rdi,qword ptr [rsp+0x18]
0xfc56: mov rax,qword ptr [rsp+0x60]
0xfc5b: mov rsi,qword ptr [rsp+0x38]
0xfc60: mov r15,qword ptr [rax+rdi*1+0x0]
0xfc64: mov rdi,qword ptr [rsp+0x8]
0xfc69: call 0xdb00
0xfc6e: test eax,eax
0xfc70: jnz 0xfd7e
0xfc76: mov rsi,qword ptr [rbx+0x8]
0xfc7a: mov rdx,qword ptr [rsp+0x60]
0xfc7f: test rsi,rsi
0xfc82: jz 0xfc9d
0xfc84: lea rcx,[rbp+0x1]
0xfc88: mov rdi,r12
0xfc8b: call 0x8c30
0xfc90: test eax,eax
0xfc92: jnz 0xfd7e
0xfc98: mov rdx,qword ptr [rsp+0x60]
0xfc9d: mov r11,qword ptr [rsp+0x38]
0xfca2: mov rax,qword ptr [rsp+0x18]
0xfca7: mov rdi,qword ptr [rsp+0x88]
0xfcaf: lea r9,[r11+0x30]
0xfcb3: mov qword ptr [rdx+rax*1+0x0],r15
0xfcb7: mov rdx,r13
0xfcba: mov rsi,r9
0xfcbd: call 0x7420
0xfcc2: sub rax,0x1
0xfcc6: mov rdx,rax
0xfcc9: js 0xfcd7
0xfccb: lea rdi,[r11+0x28]
0xfccf: mov rsi,r9
0xfcd2: call 0x75a0
0xfcd7: mov rcx,qword ptr [rsp+0x8]
0xfcdc: lea rax,[r13+r13*4+0x0]
0xfce1: mov rdx,qword ptr [rcx+0xd8]
0xfce8: lea rax,[rdx+rax*8+0x0]
0xfcec: nop qword ptr [rax+0x0]
0xfcf0: add r13,0x1
0xfcf4: cmp [rax+0x20],0x0
0xfcf8: lea r15,[rax+0x28]
0xfcfc: jz 0xfd30
0xfcfe: cmp r14,qword ptr [r15]
0xfd01: jz 0xfba0
0xfd07: mov rax,r15
0xfd0a: jmp 0xfcf0
0xfd0c: nop qword ptr [rax+0x0]
0xfd10: mov rax,qword ptr [r12+0x28]
0xfd15: mov rdi,qword ptr [rsp+0x30]
0xfd1a: mov rax,qword ptr [rax+rdi*1+0x10]
0xfd1f: mov r10,qword ptr [rax]
0xfd22: jmp 0xfbc4
0xfd27: nop qword ptr [rax+rax*1+0x0]
0xfd30: mov r15,rbx
0xfd33: jmp 0xf7d8
0xfd38: mov rax,qword ptr [rbx+0x30]
0xfd3c: lea rsi,[rbx+0x20]
0xfd40: movdqa xmm0,[rbx]
0xfd44: mov qword ptr [rsp+0x90],rax
0xfd4c: mov rax,qword ptr [rsp+0x38]
0xfd51: movaps [rsp+0x60],xmm0
0xfd56: lea rdi,[rax+0x20]
0xfd5a: movdqa xmm0,[rbx+0x10]
0xfd5f: movaps [rsp+0x70],xmm0
0xfd64: movdqa xmm0,[rbx+0x20]
0xfd69: movaps [rsp+0x80],xmm0
0xfd71: call 0x8580
0xfd76: test eax,eax
0xfd78: jz 0xfc2e
0xfd7e: cmp [rsp+0x60],0x0
0xfd84: jz 0xf608
0xfd8a: mov rdi,qword ptr [rsp+0x90]
0xfd92: mov dword ptr [rsp+0x8],eax
0xfd96: call 0x1880
0xfd9b: mov eax,dword ptr [rsp+0x8]
0xfd9f: jmp 0xf608
0xfda4: mov eax,0xc
0xfda9: jmp 0xfd7e
0xfdab: cmp [rsp+0x60],0x0
0xfdb1: jz 0xf850
0xfdb7: xor eax,eax
0xfdb9: jmp 0xfd8a
0xfdbb: call 0x1990
0xfe42: nop qword ptr [rax+rax*1+0x0]
0xfe7f: nop 
0xfe97: nop qword ptr [rax+rax*1+0x0]
0xff26: nop qword ptr [rax+rax*1+0x0]
0xffa2: nop qword ptr [rax+rax*1+0x0]
0xffd5: nop qword ptr [rax]
0x100d6: nop qword ptr [rax+rax*1+0x0]
0x10107: nop qword ptr [rax+rax*1+0x0]
0x1016e: nop 
0x10186: nop qword ptr [rax+rax*1+0x0]
0x1021a: nop qword ptr [rax+rax*1+0x0]
0x1023b: nop qword ptr [rax+rax*1+0x0]
0x1024e: nop 
0x10272: nop qword ptr [rax+rax*1+0x0]
0x10296: nop qword ptr [rax+rax*1+0x0]
0x102c2: nop qword ptr [rax+rax*1+0x0]
0x102ef: nop 
0x102fe: nop 
0x1031b: nop qword ptr [rax+rax*1+0x0]
0x1032e: nop 
0x1034b: nop qword ptr [rax+rax*1+0x0]
0x1037e: nop 
0x1039b: nop qword ptr [rax+rax*1+0x0]
0x103bb: nop qword ptr [rax+rax*1+0x0]
0x1060f: nop 
0x10718: call 0x1990
0x10774: nop qword ptr [rax+0x0]
0x107a9: nop qword ptr [rax+0x0]
0x107c3: nop qword ptr [rax+rax*1+0x0]
0x10b96: nop qword ptr [rax+rax*1+0x0]
0x10c8c: nop qword ptr [rax+0x0]
0x10cf5: nop qword ptr [rax]
0x10d66: nop qword ptr [rax+rax*1+0x0]
0x10d88: nop qword ptr [rax+rax*1+0x0]
0x10dba: nop qword ptr [rax+rax*1+0x0]
0x10e4d: nop qword ptr [rax]
0x10e9c: nop qword ptr [rax+0x0]
0x11194: nop qword ptr [rax+0x0]
0x116d1: movzx r8d,byte ptr [rsp+0xb8]
0x11913: nop qword ptr [rax+rax*1+0x0]
0x119c3: xor r8d,r8d
0x119f8: test eax,eax
0x119fa: jz 0x116f7
0x11a00: mov r8d,dword ptr [rsp+0xb8]
0x11a08: jmp 0x11714
0x11a17: test esi,esi
0x11a19: jz 0x119c3
0x11a1b: test r11b,r11b
0x11a1e: jnz 0x119c3
0x11a20: mov edx,dword ptr [rsp+0xa8]
0x11a27: jmp 0x11a00
0x11a87: nop qword ptr [rax+rax*1+0x0]
0x11de2: nop qword ptr [rax+rax*1+0x0]
0x11e0f: nop 
0x11e3d: call 0x1990
0x11ebb: nop qword ptr [rax+rax*1+0x0]
0x11fba: nop qword ptr [rax+rax*1+0x0]
0x11fca: call 0x1990
0x12395: cmp ecx,0x1
0x12398: jnle 0x12d4a
0x1239e: test r12b,r12b
0x123a1: mov rsi,qword ptr [rsp+0xc0]
0x123a9: jz 0x129c4
0x123af: cmp qword ptr [rsp+0xd8],rsi
0x123b7: mov rax,qword ptr [rsp+0xb0]
0x123bf: cmovng rsi,qword ptr [rsp+0xd8]
0x123c8: cmp rsi,rax
0x123cb: jnle 0x123dd
0x123cd: jmp 0x12410
0x123cf: nop 
0x123d0: mov rdx,qword ptr [rsp+0x88]
0x123d8: mov qword ptr [rsp+0x10],rdx
0x123dd: mov rdx,qword ptr [rsp+0x80]
0x123e5: mov rcx,qword ptr [rsp+0xf8]
0x123ed: add rdx,rax
0x123f0: add rdx,qword ptr [rsp+0xa8]
0x123f8: movzx edx,byte ptr [rdx]
0x123fb: movzx edx,byte ptr [rcx+rdx*1+0x0]
0x123ff: mov rcx,qword ptr [rsp+0x10]
0x12404: mov byte ptr [rcx+rax*1+0x0],dl
0x12407: add rax,0x1
0x1240b: cmp rsi,rax
0x1240e: jnz 0x123d0
0x12410: mov qword ptr [rsp+0xb0],rax
0x12418: mov qword ptr [rsp+0xb8],rax
0x12420: mov [rsp+0x4c],0x0
0x125c5: xor edx,edx
0x125c7: nop qword ptr [rax+rax*1+0x0]
0x125d0: mov qword ptr [rax+rdx*8+0x0],rdx
0x125d4: add rdx,0x1
0x125d8: cmp rdx,r15
0x125db: jnz 0x125d0
0x12609: mov rax,qword ptr [rdi]
0x1260c: test rax,rax
0x1260f: jz 0x1261e
0x12611: jmp 0x1262d
0x12613: nop qword ptr [rax+rax*1+0x0]
0x12618: cmp qword ptr [rdi+rax*8+0x0],rax
0x1261c: jnz 0x1262d
0x1261e: add rax,0x1
0x12622: cmp rdx,rax
0x12625: jnbe 0x12618
0x12627: jz 0x12ef4
0x12794: nop qword ptr [rax+0x0]
0x1294a: nop qword ptr [rax+rax*1+0x0]
0x129c4: mov qword ptr [rsp+0xb0],rsi
0x129cc: mov qword ptr [rsp+0xb8],rsi
0x129d4: mov [rsp+0x4c],0x0
0x129dc: jmp 0x12428
0x129e1: nop qword ptr [rax+0x0]
0x12a50: test [r13+0xb0],0x1
0x12a58: jnz 0x12a68
0x12a98: nop qword ptr [rax+rax*1+0x0]
0x12aff: nop 
0x12bda: nop qword ptr [rax+rax*1+0x0]
0x12c0d: nop qword ptr [rax]
0x12d4a: mov rdi,rbp
0x12d4d: call 0x6170
0x12d52: mov [rsp+0x4c],0x0
0x12d5a: jmp 0x12428
0x12d5f: mov rcx,qword ptr [rsp+0x8]
0x12d64: cmp [rcx+0x28],0x0
0x12d69: jnz 0x12b7e
0x12d6f: mov r10,qword ptr [rbx+0x10]
0x12d73: test r10,r10
0x12d76: jz 0x1302a
0x12d7c: mov rsi,qword ptr [rbx]
0x12d7f: lea r9,[rip+0x2706]
0x12d86: xor r8d,r8d
0x12d89: xor edx,edx
0x12d8b: mov rcx,rsi
0x12d8e: cmp [rcx+0x8],0xc
0x12d92: jnbe 0x1305e
0x12d98: movzx edi,byte ptr [rcx+0x8]
0x12d9c: movsxd rdi,dword ptr [r9+rdi*4+0x0]
0x12da0: add rdi,r9
0x12da3: jmp rdi
0x12f09: mov r8d,eax
0x12f0c: add rdx,0x1
0x12f10: add rcx,0x10
0x12f14: cmp rdx,r10
0x12f17: jnz 0x12d8e
0x12f1d: or r14b,r8b
0x12f20: jz 0x1302a
0x12f26: mov rax,rdx
0x12f29: shl rax,0x4
0x12f2d: add rax,rsi
0x12f30: jmp 0x12f48
0x12f32: cmp dl,0x5
0x12f35: jnz 0x12f3b
0x12f37: mov [rsi+0x8],0x7
0x12f3b: add rsi,0x10
0x12f3f: cmp rax,rsi
0x12f42: jz 0x13027
0x12f48: movzx edx,byte ptr [rsi+0x8]
0x12f4c: cmp dl,0x1
0x12f4f: jnz 0x12f32
0x12f51: cmp [rsi],0x0
0x12f54: jns 0x12f3b
0x12f56: and [rsi+0xa],0xdf
0x12f5a: jmp 0x12f3b
0x12f5c: nop qword ptr [rax+0x0]
0x12f60: cmp [rcx],0x0
0x12f63: cmovs r14d,eax
0x12f67: jmp 0x12f0c
0x12f69: mov edi,dword ptr [rcx]
0x12f6b: cmp edi,0x20
0x12f6e: jz 0x12f0c
0x12f70: jbe 0x13019
0x12f76: cmp edi,0x40
0x12f79: jz 0x12f0c
0x12f7b: add edi,0x80
0x12f7e: jz 0x12f0c
0x12f80: jmp 0x12b7e
0x12f85: nop qword ptr [rax]
0x12f88: mov rdi,qword ptr [rcx]
0x12f8b: cmp [rdi+0x10],0x0
0x12f90: jnz 0x12b7e
0x12f96: cmp [rdi+0x18],0x0
0x12f9b: jz 0x12f0c
0x12fa1: jmp 0x12b7e
0x12fa6: nop qword ptr [rax+rax*1+0x0]
0x13019: cmp edi,0x10
0x1301c: jz 0x12f0c
0x13022: jmp 0x12b7e
0x13027: mov r14d,r8d
0x1302a: cmp [rbx+0x98],0x0
0x13032: movzx edx,byte ptr [rbx+0xb0]
0x13039: mov [rbx+0xb4],0x1
0x13043: setnle al
0x13046: and edx,0xf9
0x13049: or eax,r14d
0x1304c: and eax,0x1
0x1304f: add eax,eax
0x13051: or eax,edx
0x13053: mov byte ptr [rbx+0xb0],al
0x13059: jmp 0x12b7e
0x1305e: call 0x1890
0x13132: nop qword ptr [rax+rax*1+0x0]
0x13140: mov rax,qword ptr [rip+0x2082b9]
0x13147: mov qword ptr [rip+0x2082b2],rdi
0x1314e: ret
0x13150: push r12
0x13152: push rbp
0x13153: xor eax,eax
0x13155: push rbx
0x13156: mov rbp,qword ptr [rdi+0x20]
0x1315a: mov rbx,rdi
0x1315d: mov r12,qword ptr [rdi]
0x13160: lea rdi,[rbp+0x8]
0x13164: mov rcx,rbp
0x13167: mov [rbp+0x0],0x0
0x1316f: mov [rbp+0xf8],0x0
0x1317a: and rdi,0xfffffff8
0x1317e: sub rcx,rdi
0x13181: add ecx,0x100
0x13187: shr ecx,0x3
0x1318a: rep stosd qword ptr es:[rdi],rax
0x1318d: mov rcx,rbp
0x13190: mov rdi,rbx
0x13193: mov rsi,qword ptr [r12+0x48]
0x13198: lea rdx,[rsi+0x18]
0x1319c: add rsi,0x10
0x131a0: call 0xb6a0
0x131a5: mov rax,qword ptr [r12+0x50]
0x131aa: cmp qword ptr [r12+0x48],rax
0x131af: jz 0x131c9
0x131b1: lea rdx,[rax+0x18]
0x131b5: lea rsi,[rax+0x10]
0x131b9: mov rcx,rbp
0x131bc: mov rdi,rbx
0x131bf: call 0xb6a0
0x131c4: mov rax,qword ptr [r12+0x48]
0x131c9: mov rsi,qword ptr [r12+0x58]
0x131ce: cmp rsi,rax
0x131d1: jz 0x131eb
0x131d3: lea rdx,[rsi+0x18]
0x131d7: mov rcx,rbp
0x131da: add rsi,0x10
0x131de: mov rdi,rbx
0x131e1: call 0xb6a0
0x131e6: mov rax,qword ptr [r12+0x48]
0x131eb: mov rsi,qword ptr [r12+0x60]
0x131f0: cmp rsi,rax
0x131f3: jz 0x13208
0x131f5: lea rdx,[rsi+0x18]
0x131f9: mov rcx,rbp
0x131fc: add rsi,0x10
0x13200: mov rdi,rbx
0x13203: call 0xb6a0
0x13208: or [rbx+0x38],0x8
0x1320c: xor eax,eax
0x1320e: pop rbx
0x1320f: pop rbp
0x13210: pop r12
0x13212: ret
0x13220: push r15
0x13222: push r14
0x13224: mov rax,r8
0x13227: push r13
0x13229: push r12
0x1322b: add r8,rcx
0x1322e: push rbp
0x1322f: push rbx
0x13230: sub rsp,0x38
0x13234: test rcx,rcx
0x13237: mov ebx,dword ptr [rsp+0x78]
0x1323b: mov r12,qword ptr [rsp+0x70]
0x13240: mov dword ptr [rsp+0x28],ebx
0x13244: js 0x13580
0x1324a: cmp rcx,rdx
0x1324d: jnle 0x13580
0x13253: cmp r8,rdx
0x13256: mov rbx,rcx
0x13259: mov r15,rdi
0x1325c: jnle 0x134e0
0x13262: test rax,rax
0x13265: js 0x13270
0x13267: cmp rcx,r8
0x1326a: jnle 0x134e0
0x13270: test r8,r8
0x13273: js 0x13558
0x13279: test rax,rax
0x1327c: jns 0x13287
0x1327e: cmp rbx,r8
0x13281: jle 0x13558
0x13287: movzx eax,byte ptr [r15+0x38]
0x1328c: mov r13d,eax
0x1328f: shr r13b,0x5
0x13293: mov edi,r13d
0x13296: and edi,0x3
0x13299: cmp r8,rbx
0x1329c: mov dword ptr [rsp+0x2c],edi
0x132a0: jle 0x132b1
0x132a2: cmp [r15+0x20],0x0
0x132a7: jz 0x132b1
0x132a9: test al,0x8
0x132ab: jz 0x134a0
0x132b1: test al,0x10
0x132b3: jnz 0x13480
0x132b9: test r12,r12
0x132bc: jz 0x13480
0x132c2: and eax,0x6
0x132c5: mov rcx,qword ptr [r15+0x30]
0x132c9: cmp al,0x4
0x132cb: jz 0x13460
0x132d1: lea r14,[rcx+0x1]
0x132d5: mov r13,r14
0x132d8: mov rdi,r14
0x132db: shl rdi,0x4
0x132df: mov qword ptr [rsp+0x20],r9
0x132e4: mov qword ptr [rsp+0x18],rdx
0x132e9: mov qword ptr [rsp+0x10],rsi
0x132ee: mov qword ptr [rsp+0x8],r8
0x132f3: call 0x1ac0
0x132f8: test rax,rax
0x132fb: mov rbp,rax
0x132fe: jz 0x13590
0x13304: sub rsp,0x8
0x13308: mov rcx,rbx
0x1330b: mov rdi,r15
0x1330e: mov eax,dword ptr [rsp+0x34]
0x13312: push rax
0x13313: push rbp
0x13314: push r14
0x13316: mov r9,qword ptr [rsp+0x40]
0x1331b: mov r8,qword ptr [rsp+0x28]
0x13320: mov rdx,qword ptr [rsp+0x38]
0x13325: mov rsi,qword ptr [rsp+0x30]
0x1332a: call 0xde40
0x1332f: add rsp,0x20
0x13333: test eax,eax
0x13335: jz 0x13368
0x13337: cmp eax,0x1
0x1333a: mov r12,0xffffffff
0x13341: jz 0x1334a
0x13343: mov r12,0xfffffffe
0x1334a: mov rdi,rbp
0x1334d: call 0x1880
0x13352: add rsp,0x38
0x13356: mov rax,r12
0x13359: pop rbx
0x1335a: pop rbp
0x1335b: pop r12
0x1335d: pop r13
0x1335f: pop r14
0x13361: pop r15
0x13363: ret
0x13364: nop qword ptr [rax+0x0]
0x13368: test r12,r12
0x1336b: jz 0x13438
0x13371: movzx eax,byte ptr [r15+0x38]
0x13376: lea rdx,[r13+0x1]
0x1337a: shr al,0x1
0x1337c: and eax,0x3
0x1337f: jz 0x134f0
0x13385: cmp eax,0x1
0x13388: jz 0x135a0
0x1338e: cmp eax,0x2
0x13391: jnz 0x13680
0x13397: cmp r14,qword ptr [r12]
0x1339b: jnbe 0x13661
0x133a1: mov r9d,0x2
0x133a7: test r13,r13
0x133aa: jle 0x13618
0x133b0: mov r8,qword ptr [r12+0x8]
0x133b5: mov rdi,qword ptr [r12+0x10]
0x133ba: lea rsi,[r13*8+0x0]
0x133c2: mov rdx,r13
0x133c5: xor eax,eax
0x133c7: nop qword ptr [rax+rax*1+0x0]
0x133d0: mov rcx,qword ptr [rbp+rax*2+0x0]
0x133d5: mov qword ptr [r8+rax*1+0x0],rcx
0x133d9: mov rcx,qword ptr [rbp+rax*2+0x8]
0x133de: mov qword ptr [rdi+rax*1+0x0],rcx
0x133e2: add rax,0x8
0x133e6: cmp rsi,rax
0x133e9: jnz 0x133d0
0x133eb: cmp qword ptr [r12],rdx
0x133ef: jbe 0x1341d
0x133f1: mov rsi,qword ptr [r12+0x10]
0x133f6: mov rcx,qword ptr [r12+0x8]
0x133fb: mov rax,0xffffffff
0x13402: nop qword ptr [rax+rax*1+0x0]
0x13408: mov qword ptr [rsi+rdx*8+0x0],rax
0x1340c: add r13,0x1
0x13410: mov qword ptr [rcx+rdx*8+0x0],rax
0x13414: cmp r13,qword ptr [r12]
0x13418: mov rdx,r13
0x1341b: jb 0x13408
0x1341d: movzx eax,byte ptr [r15+0x38]
0x13422: lea r13d,[r9+r9*1+0x0]
0x13426: and eax,0xf9
0x13429: or eax,r13d
0x1342c: test al,0x6
0x1342e: mov byte ptr [r15+0x38],al
0x13432: jz 0x13343
0x13438: cmp [rsp+0x28],0x0
0x1343d: mov r12,qword ptr [rbp+0x0]
0x13441: jz 0x1334a
0x13447: cmp r12,rbx
0x1344a: jnz 0x13642
0x13450: mov r12,qword ptr [rbp+0x8]
0x13454: sub r12,rbx
0x13457: jmp 0x1334a
0x1345c: nop qword ptr [rax+0x0]
0x13460: mov r14,qword ptr [r12]
0x13464: cmp r14,rcx
0x13467: jnbe 0x132d1
0x1346d: test r14,r14
0x13470: mov r13,r14
0x13473: jnle 0x132d8
0x13479: nop qword ptr [rax+0x0]
0x13480: mov edi,0x10
0x13485: mov r14d,0x1
0x1348b: mov r13d,0x1
0x13491: xor r12d,r12d
0x13494: jmp 0x132df
0x13499: nop qword ptr [rax+0x0]
0x134a0: mov rdi,r15
0x134a3: mov qword ptr [rsp+0x20],r9
0x134a8: mov qword ptr [rsp+0x18],rdx
0x134ad: mov qword ptr [rsp+0x10],rsi
0x134b2: mov qword ptr [rsp+0x8],r8
0x134b7: call 0x13150
0x134bc: movzx eax,byte ptr [r15+0x38]
0x134c1: mov r9,qword ptr [rsp+0x20]
0x134c6: mov rdx,qword ptr [rsp+0x18]
0x134cb: mov rsi,qword ptr [rsp+0x10]
0x134d0: mov r8,qword ptr [rsp+0x8]
0x134d5: jmp 0x132b1
0x134da: nop qword ptr [rax+rax*1+0x0]
0x134e0: mov r8,rdx
0x134e3: jmp 0x13287
0x134e8: nop qword ptr [rax+rax*1+0x0]
0x134f0: lea r14,[rdx*8+0x0]
0x134f8: mov qword ptr [rsp+0x8],rdx
0x134fd: mov rdi,r14
0x13500: call 0x1ac0
0x13505: test rax,rax
0x13508: mov qword ptr [r12+0x8],rax
0x1350d: mov rdx,qword ptr [rsp+0x8]
0x13512: jz 0x1362a
0x13518: mov rdi,r14
0x1351b: mov qword ptr [rsp+0x8],rdx
0x13520: mov qword ptr [rsp+0x10],rax
0x13525: call 0x1ac0
0x1352a: test rax,rax
0x1352d: mov qword ptr [r12+0x10],rax
0x13532: mov rdx,qword ptr [rsp+0x8]
0x13537: mov rcx,qword ptr [rsp+0x10]
0x1353c: jz 0x13622
0x13542: mov qword ptr [r12],rdx
0x13546: mov r9d,0x1
0x1354c: jmp 0x133a7
0x13551: nop qword ptr [rax+0x0]
0x13558: movzx eax,byte ptr [r15+0x38]
0x1355d: xor r8d,r8d
0x13560: mov r13d,eax
0x13563: shr r13b,0x5
0x13567: mov edi,r13d
0x1356a: and edi,0x3
0x1356d: mov dword ptr [rsp+0x2c],edi
0x13571: jmp 0x132b1
0x13576: nop qword ptr [rax+rax*1+0x0]
0x13580: mov r12,0xffffffff
0x13587: jmp 0x13352
0x1358c: nop qword ptr [rax+0x0]
0x13590: mov r12,0xfffffffe
0x13597: jmp 0x13352
0x1359c: nop qword ptr [rax+0x0]
0x135a0: cmp qword ptr [r12],rdx
0x135a4: mov r9d,0x1
0x135aa: jnb 0x133a7
0x135b0: lea rcx,[rdx*8+0x0]
0x135b8: mov rdi,qword ptr [r12+0x8]
0x135bd: mov byte ptr [rsp+0x18],r9b
0x135c2: mov qword ptr [rsp+0x10],rdx
0x135c7: mov rsi,rcx
0x135ca: mov qword ptr [rsp+0x8],rcx
0x135cf: call 0x1b30
0x135d4: test rax,rax
0x135d7: mov r14,rax
0x135da: jz 0x1362a
0x135dc: mov rcx,qword ptr [rsp+0x8]
0x135e1: mov rdi,qword ptr [r12+0x10]
0x135e6: mov rsi,rcx
0x135e9: call 0x1b30
0x135ee: test rax,rax
0x135f1: mov rdx,qword ptr [rsp+0x10]
0x135f6: movzx r9d,byte ptr [rsp+0x18]
0x135fc: jz 0x13632
0x135fe: mov qword ptr [r12+0x8],r14
0x13603: mov qword ptr [r12+0x10],rax
0x13608: mov qword ptr [r12],rdx
0x1360c: jmp 0x133a7
0x13611: nop qword ptr [rax+0x0]
0x13618: xor edx,edx
0x1361a: xor r13d,r13d
0x1361d: jmp 0x133eb
0x13622: mov rdi,rcx
0x13625: call 0x1880
0x1362a: xor r9d,r9d
0x1362d: jmp 0x1341d
0x13632: mov rdi,r14
0x13635: call 0x1880
0x1363a: xor r9d,r9d
0x1363d: jmp 0x1341d
0x13642: lea rcx,[rip+0x1e87]
0x13649: lea rsi,[rip+0x18d0]
0x13650: lea rdi,[rip+0x19ee]
0x13657: mov edx,0x1be
0x1365c: call 0x1a00
0x13661: lea rcx,[rip+0x1e58]
0x13668: lea rsi,[rip+0x18b1]
0x1366f: lea rdi,[rip+0x19b7]
0x13676: mov edx,0x1fb
0x1367b: call 0x1a00
0x13680: lea rcx,[rip+0x1e39]
0x13687: lea rsi,[rip+0x1892]
0x1368e: lea rdi,[rip+0x197b]
0x13695: mov edx,0x1f9
0x1369a: call 0x1a00
0x136a0: push r15
0x136a2: push r14
0x136a4: push r13
0x136a6: push r12
0x136a8: mov r12,rdi
0x136ab: push rbp
0x136ac: push rbx
0x136ad: mov rbp,r8
0x136b0: mov rbx,rdx
0x136b3: mov rdx,rbp
0x136b6: sub rsp,0x28
0x136ba: shr rdx,0x3f
0x136be: mov rax,qword ptr [rsp+0x70]
0x136c3: mov edi,edx
0x136c5: mov r8d,dword ptr [rsp+0x78]
0x136ca: shr rax,0x3f
0x136ce: or dil,al
0x136d1: jnz 0x137a0
0x136d7: test rbx,rbx
0x136da: js 0x137a0
0x136e0: mov r15,rbx
0x136e3: add r15,rbp
0x136e6: jo 0x137a0
0x136ec: test rbp,rbp
0x136ef: mov r14,rcx
0x136f2: mov rcx,r9
0x136f5: jz 0x137b0
0x136fb: xor r13d,r13d
0x136fe: test rbx,rbx
0x13701: mov qword ptr [rsp+0x8],rsi
0x13706: jnz 0x13750
0x13708: movzx r8d,r8b
0x1370c: mov rdx,r15
0x1370f: mov rsi,r14
0x13712: push r8
0x13714: push qword ptr [rsp+0x70]
0x13718: mov rdi,r12
0x1371b: mov r9,qword ptr [rsp+0x80]
0x13723: mov r8,qword ptr [rsp+0x70]
0x13728: call 0x13220
0x1372d: mov rdi,r13
0x13730: mov rbx,rax
0x13733: call 0x1880
0x13738: pop rax
0x13739: pop rdx
0x1373a: add rsp,0x28
0x1373e: mov rax,rbx
0x13741: pop rbx
0x13742: pop rbp
0x13743: pop r12
0x13745: pop r13
0x13747: pop r14
0x13749: pop r15
0x1374b: ret
0x1374c: nop qword ptr [rax+0x0]
0x13750: mov rdi,r15
0x13753: mov dword ptr [rsp+0x1c],r8d
0x13758: mov qword ptr [rsp+0x10],r9
0x1375d: call 0x1ac0
0x13762: test rax,rax
0x13765: mov r13,rax
0x13768: jz 0x137a0
0x1376a: mov rsi,qword ptr [rsp+0x8]
0x1376f: mov rdx,rbx
0x13772: mov rdi,rax
0x13775: call 0x1a90
0x1377a: lea rdi,[r13+rbx*1+0x0]
0x1377f: mov rsi,r14
0x13782: mov rdx,rbp
0x13785: mov r14,r13
0x13788: call 0x1a90
0x1378d: mov rcx,qword ptr [rsp+0x10]
0x13792: mov r8d,dword ptr [rsp+0x1c]
0x13797: jmp 0x13708
0x1379c: nop qword ptr [rax+0x0]
0x137a0: mov rbx,0xfffffffe
0x137a7: jmp 0x1373a
0x137a9: nop qword ptr [rax+0x0]
0x137b0: mov r14,rsi
0x137b3: xor r13d,r13d
0x137b6: jmp 0x13708
0x137c0: mov eax,edx
0x137c2: push r14
0x137c4: push r13
0x137c6: and eax,0x1
0x137c9: push r12
0x137cb: push rbp
0x137cc: cmp eax,0x1
0x137cf: push rbx
0x137d0: mov rbx,rdi
0x137d3: sbb r14,r14
0x137d6: mov [rdi],0x0
0x137dd: mov [rdi+0x8],0x0
0x137e5: and r14d,0xfd4fca
0x137ec: mov [rdi+0x10],0x0
0x137f4: mov edi,0x100
0x137f9: mov r12,rsi
0x137fc: mov ebp,edx
0x137fe: add r14,0x3b2fc
0x13805: call 0x1ac0
0x1380a: test rax,rax
0x1380d: mov qword ptr [rbx+0x20],rax
0x13811: jz 0x138c0
0x13817: mov r13,rbp
0x1381a: shl r13,0x15
0x1381e: and r13d,0x400000
0x13825: or r13,r14
0x13828: test bpl,0x4
0x1382c: jnz 0x13890
0x1382e: and [rbx+0x38],0x7f
0x13832: movzx edx,byte ptr [rbx+0x38]
0x13836: shr ebp,0x3
0x13839: mov rdi,r12
0x1383c: and ebp,0x1
0x1383f: mov [rbx+0x28],0x0
0x13847: shl ebp,0x4
0x1384a: and edx,0xef
0x1384d: or ebp,edx
0x1384f: mov byte ptr [rbx+0x38],bpl
0x13853: call 0x1980
0x13858: mov rcx,r13
0x1385b: mov rdx,rax
0x1385e: mov rsi,r12
0x13861: mov rdi,rbx
0x13864: call 0x11fd0
0x13869: cmp eax,0x10
0x1386c: mov ebp,eax
0x1386e: jz 0x138a8
0x13870: test eax,eax
0x13872: jnz 0x138ad
0x13874: mov rdi,rbx
0x13877: call 0x13150
0x1387c: pop rbx
0x1387d: mov eax,ebp
0x1387f: pop rbp
0x13880: pop r12
0x13882: pop r13
0x13884: pop r14
0x13886: ret
0x13887: nop qword ptr [rax+rax*1+0x0]
0x13890: and r13,0xffffffbf
0x13894: or [rbx+0x38],0x80
0x13898: or r13,0x100
0x1389f: jmp 0x13832
0x138a1: nop qword ptr [rax+0x0]
0x138a8: mov ebp,0x8
0x138ad: mov rdi,qword ptr [rbx+0x20]
0x138b1: call 0x1880
0x138b6: mov [rbx+0x20],0x0
0x138be: jmp 0x1387c
0x138c0: mov ebp,0xc
0x138c5: pop rbx
0x138c6: mov eax,ebp
0x138c8: pop rbp
0x138c9: pop r12
0x138cb: pop r13
0x138cd: pop r14
0x138cf: ret
0x138d0: push r13
0x138d2: push r12
0x138d4: push rbp
0x138d5: push rbx
0x138d6: sub rsp,0x8
0x138da: cmp edi,0x10
0x138dd: jnbe 0x13940
0x138df: lea rax,[rip+0x1c7a]
0x138e6: movsxd rdi,edi
0x138e9: lea rsi,[rip+0x1d10]
0x138f0: mov rbp,rdx
0x138f3: mov edx,0x5
0x138f8: mov r12,rcx
0x138fb: add rsi,qword ptr [rax+rdi*8+0x0]
0x138ff: xor edi,edi
0x13901: call 0x1960
0x13906: mov rdi,rax
0x13909: mov r13,rax
0x1390c: call 0x1980
0x13911: test r12,r12
0x13914: lea rbx,[rax+0x1]
0x13918: jz 0x1392d
0x1391a: cmp rbx,r12
0x1391d: mov rdx,rbx
0x13920: jnbe 0x13948
0x13922: mov rsi,r13
0x13925: mov rdi,rbp
0x13928: call 0x1a90
0x1392d: add rsp,0x8
0x13931: mov rax,rbx
0x13934: pop rbx
0x13935: pop rbp
0x13936: pop r12
0x13938: pop r13
0x1393a: ret
0x1393b: nop qword ptr [rax+rax*1+0x0]
0x13940: call 0x1890
0x13945: nop qword ptr [rax]
0x13948: lea rdx,[r12-0x1]
0x1394d: mov [rbp+r12*1-0x1],0x0
0x13953: jmp 0x13922
0x13960: push rbx
0x13961: mov rbx,rdi
0x13964: mov rdi,qword ptr [rdi]
0x13967: test rdi,rdi
0x1396a: jz 0x13971
0x1396c: call 0x7150
0x13971: mov rdi,qword ptr [rbx+0x20]
0x13975: mov [rbx],0x0
0x1397c: mov [rbx+0x8],0x0
0x13984: call 0x1880
0x13989: mov rdi,qword ptr [rbx+0x28]
0x1398d: mov [rbx+0x20],0x0
0x13995: call 0x1880
0x1399a: mov [rbx+0x28],0x0
0x139a2: pop rbx
0x139a3: ret
0x139b0: test r8d,0xfffffff8
0x139b7: jnz 0x13a48
0x139bd: push r13
0x139bf: push r12
0x139c1: mov r13,rdx
0x139c4: push rbp
0x139c5: push rbx
0x139c6: mov r12,rcx
0x139c9: mov ebx,r8d
0x139cc: mov rbp,rdi
0x139cf: sub rsp,0x18
0x139d3: test r8b,0x4
0x139d7: jnz 0x13a28
0x139d9: mov rdi,rsi
0x139dc: mov qword ptr [rsp+0x8],rsi
0x139e1: call 0x1980
0x139e6: xor ecx,ecx
0x139e8: test [rbp+0x38],0x10
0x139ec: mov rdx,rax
0x139ef: mov rsi,qword ptr [rsp+0x8]
0x139f4: jz 0x13a36
0x139f6: sub rsp,0x8
0x139fa: push rbx
0x139fb: push 0x0
0x139fd: push 0x0
0x139ff: mov rdi,rbp
0x13a02: mov r9,rdx
0x13a05: mov r8,rdx
0x13a08: call 0xde40
0x13a0d: add rsp,0x20
0x13a11: test eax,eax
0x13a13: setnz al
0x13a16: add rsp,0x18
0x13a1a: pop rbx
0x13a1b: movzx eax,al
0x13a1e: pop rbp
0x13a1f: pop r12
0x13a21: pop r13
0x13a23: ret
0x13a24: nop qword ptr [rax+0x0]
0x13a28: test [rbp+0x38],0x10
0x13a2c: mov rcx,qword ptr [rcx]
0x13a2f: mov rdx,qword ptr [r12+0x8]
0x13a34: jnz 0x139f6
0x13a36: sub rsp,0x8
0x13a3a: push rbx
0x13a3b: push r12
0x13a3d: push r13
0x13a3f: jmp 0x139ff
0x13a41: nop qword ptr [rax+0x0]
0x13a48: mov eax,0x2
0x13a4d: ret
0x13a50: sub rsp,0x8
0x13a54: mov r9,rdx
0x13a57: push 0x1
0x13a59: push r8
0x13a5b: xor r8d,r8d
0x13a5e: call 0x13220
0x13a63: add rsp,0x18
0x13a67: ret
0x13a70: sub rsp,0x8
0x13a74: push 0x0
0x13a76: push r9
0x13a78: mov r9,rdx
0x13a7b: call 0x13220
0x13a80: add rsp,0x18
0x13a84: ret
0x13a90: sub rsp,0x8
0x13a94: push 0x1
0x13a96: push qword ptr [rsp+0x20]
0x13a9a: push qword ptr [rsp+0x20]
0x13a9e: push 0x0
0x13aa0: call 0x136a0
0x13aa5: add rsp,0x28
0x13aa9: ret
0x13ab0: sub rsp,0x8
0x13ab4: push 0x0
0x13ab6: push qword ptr [rsp+0x28]
0x13aba: push qword ptr [rsp+0x28]
0x13abe: push qword ptr [rsp+0x28]
0x13ac2: call 0x136a0
0x13ac7: add rsp,0x28
0x13acb: ret
0x13ad0: test rdx,rdx
0x13ad3: jnz 0x13af8
0x13ad5: and [rdi+0x38],0xf9
0x13ad9: mov [rsi],0x0
0x13ae0: mov [rsi+0x10],0x0
0x13ae8: mov [rsi+0x8],0x0
0x13af0: ret
0x13af1: nop qword ptr [rax+0x0]
0x13af8: movzx eax,byte ptr [rdi+0x38]
0x13afc: and eax,0xf9
0x13aff: or eax,0x2
0x13b02: mov byte ptr [rdi+0x38],al
0x13b05: mov qword ptr [rsi],rdx
0x13b08: mov qword ptr [rsi+0x8],rcx
0x13b0c: mov qword ptr [rsi+0x10],r8
0x13b10: ret
0x13b20: push r12
0x13b22: push rbp
0x13b23: mov rbp,rdi
0x13b26: push rbx
0x13b27: call 0x18e0
0x13b2c: mov ebx,dword ptr [rbp+0x0]
0x13b2f: mov rdi,rbp
0x13b32: mov r12,rax
0x13b35: call 0x13d60
0x13b3a: and ebx,0x20
0x13b3d: test ebx,ebx
0x13b3f: jnz 0x13b58
0x13b41: test eax,eax
0x13b43: jz 0x13b4f
0x13b45: test r12,r12
0x13b48: mov eax,0xffffffff
0x13b4d: jz 0x13b88
0x13b4f: pop rbx
0x13b50: pop rbp
0x13b51: pop r12
0x13b53: ret
0x13b54: nop qword ptr [rax+0x0]
0x13b58: test eax,eax
0x13b5a: jnz 0x13b78
0x13b5c: call 0x18a0
0x13b61: mov [rax],0x0
0x13b67: mov eax,0xffffffff
0x13b6c: pop rbx
0x13b6d: pop rbp
0x13b6e: pop r12
0x13b70: ret
0x13b71: nop qword ptr [rax+0x0]
0x13b78: pop rbx
0x13b79: mov eax,0xffffffff
0x13b7e: pop rbp
0x13b7f: pop r12
0x13b81: ret
0x13b82: nop qword ptr [rax+rax*1+0x0]
0x13b88: call 0x18a0
0x13b8d: cmp [rax],0x9
0x13b90: pop rbx
0x13b91: pop rbp
0x13b92: pop r12
0x13b94: setnz al
0x13b97: movzx eax,al
0x13b9a: neg eax
0x13b9c: ret
0x13bc7: nop qword ptr [rax+rax*1+0x0]
0x13c1c: nop qword ptr [rax+0x0]
0x13c3e: nop 
0x13c50: push r13
0x13c52: push r12
0x13c54: push rbp
0x13c55: push rbx
0x13c56: mov ebx,edi
0x13c58: sub rsp,0x8
0x13c5c: cmp edi,0x2
0x13c5f: jnbe 0x13c82
0x13c61: call 0x13c90
0x13c66: mov r12d,eax
0x13c69: call 0x18a0
0x13c6e: mov r13d,dword ptr [rax]
0x13c71: mov rbp,rax
0x13c74: mov edi,ebx
0x13c76: call 0x1a20
0x13c7b: mov ebx,r12d
0x13c7e: mov dword ptr [rbp+0x0],r13d
0x13c82: add rsp,0x8
0x13c86: mov eax,ebx
0x13c88: pop rbx
0x13c89: pop rbp
0x13c8a: pop r12
0x13c8c: pop r13
0x13c8e: ret
0x13c90: and esi,0x80000
0x13c96: mov eax,0x406
0x13c9b: mov edx,0x3
0x13ca0: cmovne esi,eax
0x13ca3: xor eax,eax
0x13ca5: jmp 0x13de0
0x13cea: nop qword ptr [rax+rax*1+0x0]
0x13d36: nop qword ptr [rax+rax*1+0x0]
0x13d60: push r12
0x13d62: push rbp
0x13d63: push rbx
0x13d64: mov rbx,rdi
0x13d67: call 0x1aa0
0x13d6c: test eax,eax
0x13d6e: mov rdi,rbx
0x13d71: js 0x13dc7
0x13d73: call 0x1b10
0x13d78: test eax,eax
0x13d7a: jnz 0x13da8
0x13d7c: mov rdi,rbx
0x13d7f: call 0x14060
0x13d84: test eax,eax
0x13d86: jz 0x13dc4
0x13d88: call 0x18a0
0x13d8d: mov r12d,dword ptr [rax]
0x13d90: mov rdi,rbx
0x13d93: mov rbp,rax
0x13d96: call 0x1940
0x13d9b: test r12d,r12d
0x13d9e: jnz 0x13dd0
0x13da0: pop rbx
0x13da1: pop rbp
0x13da2: pop r12
0x13da4: ret
0x13da5: nop qword ptr [rax]
0x13da8: mov rdi,rbx
0x13dab: call 0x1aa0
0x13db0: xor esi,esi
0x13db2: mov edx,0x1
0x13db7: mov edi,eax
0x13db9: call 0x19f0
0x13dbe: cmp rax,0xffffffff
0x13dc2: jnz 0x13d7c
0x13dc4: mov rdi,rbx
0x13dc7: pop rbx
0x13dc8: pop rbp
0x13dc9: pop r12
0x13dcb: jmp 0x1940
0x13dd0: mov dword ptr [rbp+0x0],r12d
0x13dd4: mov eax,0xffffffff
0x13dd9: jmp 0x13da0
0x13e31: cmp esi,0x406
0x13e37: jnz 0x13e80
0x13e39: mov rax,qword ptr [rsp+0x10]
0x13e3e: cmp [rip+0x2075b3],0x0
0x13e45: mov [rsp],0x18
0x13e4c: mov r12d,dword ptr [rax+0x10]
0x13e50: mov edx,r12d
0x13e53: js 0x13f83
0x13e59: xor eax,eax
0x13e5b: mov esi,0x406
0x13e60: call 0x1900
0x13e65: test eax,eax
0x13e67: mov ebx,eax
0x13e69: js 0x13ff8
0x13e6f: mov [rip+0x20757f],0x1
0x13e79: jmp 0x13ec0
0x13e7b: nop qword ptr [rax+rax*1+0x0]
0x13e80: cmp esi,0xb
0x13e83: jz 0x13eb0
0x13e85: jnle 0x13ee0
0x13e87: cmp esi,0x4
0x13e8a: jz 0x13f60
0x13e90: jnle 0x13f50
0x13e96: cmp esi,0x2
0x13e99: jz 0x13f60
0x13e9f: jnle 0x13eb0
0x13ea1: cmp esi,0x1
0x13ea4: jnz 0x13f08
0x13ea6: nop qword ptr [rax+rax*1+0x0]
0x13eb0: mov edi,ebp
0x13eb2: xor eax,eax
0x13eb4: call 0x1900
0x13eb9: mov ebx,eax
0x13ebb: nop qword ptr [rax+rax*1+0x0]
0x13edf: nop 
0x13ee0: cmp esi,0x407
0x13ee6: jnle 0x13f30
0x13ee8: cmp esi,0x406
0x13eee: jnl 0x13f60
0x13ef0: cmp esi,0x401
0x13ef6: jz 0x13eb0
0x13ef8: cmp esi,0x402
0x13efe: jz 0x13f60
0x13f00: cmp esi,0x400
0x13f06: jz 0x13f60
0x13f08: mov eax,dword ptr [rsp]
0x13f0b: cmp eax,0x2f
0x13f0e: jnbe 0x1404a
0x13f14: add rax,qword ptr [rsp+0x10]
0x13f19: mov rdx,qword ptr [rax]
0x13f1c: mov edi,ebp
0x13f1e: xor eax,eax
0x13f20: call 0x1900
0x13f25: mov ebx,eax
0x13f27: jmp 0x13ec0
0x13f29: nop qword ptr [rax+0x0]
0x13f30: cmp esi,0x409
0x13f36: jz 0x13f60
0x13f38: jl 0x13eb0
0x13f3e: cmp esi,0x40a
0x13f44: jnz 0x13f08
0x13f46: jmp 0x13eb0
0x13f4b: nop qword ptr [rax+rax*1+0x0]
0x13f50: cmp esi,0x9
0x13f53: jz 0x13eb0
0x13f59: jnle 0x13f60
0x13f5b: cmp esi,0x8
0x13f5e: jnz 0x13f08
0x13f60: mov eax,dword ptr [rsp]
0x13f63: cmp eax,0x2f
0x13f66: jnbe 0x14054
0x13f6c: add rax,qword ptr [rsp+0x10]
0x13f71: mov edx,dword ptr [rax]
0x13f73: mov edi,ebp
0x13f75: xor eax,eax
0x13f77: call 0x1900
0x13f7c: mov ebx,eax
0x13f7e: jmp 0x13ec0
0x13f83: xor esi,esi
0x13f85: xor eax,eax
0x13f87: call 0x1900
0x13f8c: test eax,eax
0x13f8e: mov ebx,eax
0x13f90: js 0x13ec0
0x13f96: cmp [rip+0x20745b],0xff
0x13f9d: jnz 0x13ec0
0x13fa3: xor eax,eax
0x13fa5: mov esi,0x1
0x13faa: mov edi,ebx
0x13fac: call 0x1900
0x13fb1: test eax,eax
0x13fb3: js 0x13fd1
0x13fb5: or eax,0x1
0x13fb8: mov esi,0x2
0x13fbd: mov edi,ebx
0x13fbf: mov edx,eax
0x13fc1: xor eax,eax
0x13fc3: call 0x1900
0x13fc8: cmp eax,0xff
0x13fcb: jnz 0x13ec0
0x13fd1: call 0x18a0
0x13fd6: mov r12d,dword ptr [rax]
0x13fd9: mov rbp,rax
0x13fdc: mov edi,ebx
0x13fde: call 0x1a20
0x13fe3: mov ebx,0xffffffff
0x13fe8: mov dword ptr [rbp+0x0],r12d
0x13fec: jmp 0x13ec0
0x13ff1: nop qword ptr [rax+0x0]
0x13ff8: call 0x18a0
0x13ffd: cmp [rax],0x16
0x14000: jnz 0x13e6f
0x14006: xor esi,esi
0x14008: xor eax,eax
0x1400a: mov edx,r12d
0x1400d: mov edi,ebp
0x1400f: call 0x1900
0x14014: test eax,eax
0x14016: mov ebx,eax
0x14018: js 0x13ec0
0x1401e: mov [rip+0x2073d0],0xffffffff
0x14028: jmp 0x13fa3
0x1402d: call 0x1990
0x1404a: mov rax,qword ptr [rsp+0x8]
0x1404f: jmp 0x13f19
0x14054: mov rax,qword ptr [rsp+0x8]
0x14059: jmp 0x13f71
0x14060: test rdi,rdi
0x14063: push rbx
0x14064: mov rbx,rdi
0x14067: jz 0x1407a
0x14069: call 0x1b10
0x1406e: test eax,eax
0x14070: jz 0x1407a
0x14072: test [rbx],0x100
0x14078: jnz 0x14088
0x1407a: mov rdi,rbx
0x1407d: pop rbx
0x1407e: jmp 0x1ae0
0x14083: nop qword ptr [rax+rax*1+0x0]
0x14088: mov rdi,rbx
0x1408b: mov edx,0x1
0x14090: xor esi,esi
0x14092: call 0x5820
0x14097: mov rdi,rbx
0x1409a: pop rbx
0x1409b: jmp 0x1ae0
0x140a0: push r15
0x140a2: push r14
0x140a4: mov r15,rdx
0x140a7: push r13
0x140a9: push r12
0x140ab: lea r12,[rip+0x2049be]
0x140b2: push rbp
0x140b3: lea rbp,[rip+0x2049be]
0x140ba: push rbx
0x140bb: mov r13d,edi
0x140be: mov r14,rsi
0x140c1: sub rbp,r12
0x140c4: sub rsp,0x8
0x140c8: sar rbp,0x3
0x140cc: call 0x1838
0x140d1: test rbp,rbp
0x140d4: jz 0x140f6
0x140d6: xor ebx,ebx
0x140d8: nop qword ptr [rax+rax*1+0x0]
0x140e0: mov rdx,r15
0x140e3: mov rsi,r14
0x140e6: mov edi,r13d
0x140e9: call qword ptr [r12+rbx*8+0x0]
0x140ed: add rbx,0x1
0x140f1: cmp rbp,rbx
0x140f4: jnz 0x140e0
0x140f6: add rsp,0x8
0x140fa: pop rbx
0x140fb: pop rbp
0x140fc: pop r12
0x140fe: pop r13
0x14100: pop r14
0x14102: pop r15
0x14104: ret
0x14130: sub rsp,0x8
0x14134: add rsp,0x8
0x14138: ret
