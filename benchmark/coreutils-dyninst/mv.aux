0x2540: sub rsp,0x8
0x2544: mov rax,qword ptr [rip+0x219a95]
0x254b: test rax,rax
0x254e: jz 0x2552
0x2550: call rax
0x2552: add rsp,0x8
0x2556: ret
0x2576: push 0x0
0x2586: push 0x1
0x2596: push 0x2
0x25a6: push 0x3
0x25b6: push 0x4
0x25c6: push 0x5
0x25d0: jmp qword ptr [rip+0x21969a]
0x25d6: push 0x6
0x25e6: push 0x7
0x25f0: jmp qword ptr [rip+0x21968a]
0x25f6: push 0x8
0x2606: push 0x9
0x2616: push 0xa
0x2626: push 0xb
0x2636: push 0xc
0x2646: push 0xd
0x2650: jmp qword ptr [rip+0x21965a]
0x2656: push 0xe
0x2666: push 0xf
0x2676: push 0x10
0x2686: push 0x11
0x2696: push 0x12
0x26a6: push 0x13
0x26b0: jmp qword ptr [rip+0x21962a]
0x26b6: push 0x14
0x26c6: push 0x15
0x26d6: push 0x16
0x26e0: jmp qword ptr [rip+0x219612]
0x26e6: push 0x17
0x26f6: push 0x18
0x2706: push 0x19
0x2716: push 0x1a
0x2726: push 0x1b
0x2736: push 0x1c
0x2746: push 0x1d
0x2756: push 0x1e
0x2766: push 0x1f
0x2776: push 0x20
0x2786: push 0x21
0x2796: push 0x22
0x27a6: push 0x23
0x27b6: push 0x24
0x27c6: push 0x25
0x27d6: push 0x26
0x27e6: push 0x27
0x27f6: push 0x28
0x2806: push 0x29
0x2816: push 0x2a
0x2826: push 0x2b
0x2836: push 0x2c
0x2846: push 0x2d
0x2856: push 0x2e
0x2866: push 0x2f
0x2876: push 0x30
0x2886: push 0x31
0x2896: push 0x32
0x28a6: push 0x33
0x28b0: jmp qword ptr [rip+0x21952a]
0x28b6: push 0x34
0x28c6: push 0x35
0x28d6: push 0x36
0x28e6: push 0x37
0x28f6: push 0x38
0x2906: push 0x39
0x2916: push 0x3a
0x2926: push 0x3b
0x2936: push 0x3c
0x2946: push 0x3d
0x2956: push 0x3e
0x2966: push 0x3f
0x2976: push 0x40
0x2986: push 0x41
0x2996: push 0x42
0x29a6: push 0x43
0x29b6: push 0x44
0x29c0: jmp qword ptr [rip+0x2194a2]
0x29c6: push 0x45
0x29d6: push 0x46
0x29e6: push 0x47
0x29f6: push 0x48
0x2a06: push 0x49
0x2a10: jmp qword ptr [rip+0x21947a]
0x2a16: push 0x4a
0x2a26: push 0x4b
0x2a36: push 0x4c
0x2a46: push 0x4d
0x2a50: jmp qword ptr [rip+0x21945a]
0x2a56: push 0x4e
0x2a60: jmp qword ptr [rip+0x219452]
0x2a66: push 0x4f
0x2a76: push 0x50
0x2a80: jmp qword ptr [rip+0x219442]
0x2a86: push 0x51
0x2a96: push 0x52
0x2aa6: push 0x53
0x2ab6: push 0x54
0x2ac6: push 0x55
0x2ad0: jmp qword ptr [rip+0x21941a]
0x2ad6: push 0x56
0x2ae6: push 0x57
0x2af6: push 0x58
0x2b00: jmp qword ptr [rip+0x219402]
0x2b06: push 0x59
0x2b16: push 0x5a
0x2b26: push 0x5b
0x2b36: push 0x5c
0x2b40: jmp qword ptr [rip+0x2193e2]
0x2b46: push 0x5d
0x2b56: push 0x5e
0x2b60: jmp qword ptr [rip+0x2193d2]
0x2b66: push 0x5f
0x2b76: push 0x60
0x2b86: push 0x61
0x2b96: push 0x62
0x2ba6: push 0x63
0x2bb0: jmp qword ptr [rip+0x2193aa]
0x2bb6: push 0x64
0x2bc6: push 0x65
0x2bd6: push 0x66
0x2be6: push 0x67
0x2bf6: push 0x68
0x2c06: push 0x69
0x2c16: push 0x6a
0x2c26: push 0x6b
0x2c36: push 0x6c
0x2c46: push 0x6d
0x2c56: push 0x6e
0x2c66: push 0x6f
0x2c76: push 0x70
0x2c86: nop 
0x2c88: jmp qword ptr [rip+0x219362]
0x2c8e: nop 
0x2cd9: nop qword ptr [rax+0x0]
0x2e9f: nop 
0x2ec8: nop qword ptr [rax+rax*1+0x0]
0x2eda: nop qword ptr [rax+rax*1+0x0]
0x2efb: nop qword ptr [rax+rax*1+0x0]
0x2f4d: nop qword ptr [rax]
0x2fa2: lea rsi,[rip+0x1205e]
0x2fa9: mov rbx,rax
0x2fac: mov edx,0x5
0x2fb1: xor edi,edi
0x2fb3: call 0x2730
0x2fb8: mov rcx,rbx
0x2fbb: mov rdx,rax
0x2fbe: xor esi,esi
0x2fc0: mov edi,0x1
0x2fc5: xor eax,eax
0x2fc7: call 0x2b10
0x2fcc: nop qword ptr [rax+0x0]
0x2fda: nop qword ptr [rax+rax*1+0x0]
0x2fea: nop qword ptr [rax+rax*1+0x0]
0x3007: nop qword ptr [rax+rax*1+0x0]
0x301d: nop qword ptr [rax]
0x3039: nop qword ptr [rax+0x0]
0x30ed: mov r14d,eax
0x30f0: xor r14d,0x1
0x30f4: mov rcx,qword ptr [rsp+0x108]
0x30fc: xor rcx,0x28
0x3105: movzx eax,r14b
0x3109: jnz 0x346e
0x310f: add rsp,0x118
0x3116: pop rbx
0x3117: pop rbp
0x3118: pop r12
0x311a: pop r13
0x311c: pop r14
0x311e: pop r15
0x3120: ret
0x31b1: and r14d,eax
0x31b4: cmp r15,qword ptr [rsp+0x8]
0x31b9: jnz 0x3190
0x31bb: jmp 0x30f0
0x31d6: mov r14d,eax
0x31d9: jmp 0x30f0
0x330e: jmp 0x2ebe
0x3334: jmp 0x2ebe
0x3418: lea rsi,[rip+0x11bd4]
0x341f: mov edx,0x5
0x3424: xor edi,edi
0x3426: mov rbp,rax
0x3429: call 0x2730
0x342e: mov rbx,rax
0x3431: call 0x25a0
0x3436: mov esi,dword ptr [rax]
0x3438: mov rcx,rbp
0x343b: mov rdx,rbx
0x343e: mov edi,0x1
0x3443: xor eax,eax
0x3445: call 0x2b10
0x346e: call 0x2780
0x34aa: hlt 
0x34b0: lea rdi,[rip+0x218bf1]
0x34b7: push rbp
0x34b8: lea rax,[rip+0x218be9]
0x34bf: cmp rax,rdi
0x34c2: mov rbp,rsp
0x34c5: jz 0x34e0
0x34c7: mov rax,qword ptr [rip+0x218b02]
0x34ce: test rax,rax
0x34d1: jz 0x34e0
0x34d3: pop rbp
0x34d4: jmp rax
0x34d6: nop qword ptr [rax+rax*1+0x0]
0x34e0: pop rbp
0x34e1: ret
0x34f0: lea rdi,[rip+0x218bb1]
0x34f7: lea rsi,[rip+0x218baa]
0x34fe: push rbp
0x34ff: sub rsi,rdi
0x3502: mov rbp,rsp
0x3505: sar rsi,0x3
0x3509: mov rax,rsi
0x350c: shr rax,0x3f
0x3510: add rsi,rax
0x3513: sar rsi,0x1
0x3516: jz 0x3530
0x3518: mov rax,qword ptr [rip+0x218ac9]
0x351f: test rax,rax
0x3522: jz 0x3530
0x3524: pop rbp
0x3525: jmp rax
0x3527: nop qword ptr [rax+rax*1+0x0]
0x3530: pop rbp
0x3531: ret
0x3540: cmp [rip+0x218bc1],0x0
0x3547: jnz 0x3578
0x3549: cmp [rip+0x218a9f],0x0
0x3551: push rbp
0x3552: mov rbp,rsp
0x3555: jz 0x3563
0x3557: mov rdi,qword ptr [rip+0x218aaa]
0x355e: call 0x2c88
0x3563: call 0x34b0
0x3568: mov [rip+0x218b99],0x1
0x356f: pop rbp
0x3570: ret
0x3571: nop qword ptr [rax+0x0]
0x3578: rep ret
0x3580: push rbp
0x3581: mov rbp,rsp
0x3584: pop rbp
0x3585: jmp 0x34f0
0x35c0: test al,al
0x35c2: jz 0x3660
0x35c8: cmp [rsp+0xe],0x0
0x35cd: jnz 0x3680
0x35d3: cmp [rsp+0xf],0x1
0x35d8: jz 0x3660
0x35de: test rbx,rbx
0x35e1: jz 0x3660
0x35e3: lea rdi,[rip+0x218b26]
0x35ea: mov [rsp+0x10],0x0
0x35ef: mov [rsp+0x1a],0x1
0x35f4: mov [rsp+0x19],0x1
0x35f9: mov [rsp+0x18],0x0
0x35fe: mov [rsp+0x14],0x5
0x3606: mov [rsp+0x29],0x0
0x360b: mov [rsp+0x2a],0x0
0x3610: mov [rsp+0x2b],0x1
0x3615: call 0xec30
0x361a: test rax,rax
0x361d: mov qword ptr [rsp+0x20],rax
0x3622: jz 0x36a8
0x3628: movzx eax,byte ptr [rbp+0x2e]
0x362c: lea rsi,[rsp+0x10]
0x3631: lea rdi,[rsp+0x30]
0x3636: mov [rsp+0x28],0x0
0x363b: mov qword ptr [rsp+0x30],rbx
0x3640: mov [rsp+0x38],0x0
0x3649: mov byte ptr [rsp+0x2a],al
0x364d: call 0x4350
0x3652: lea edx,[rax-0x2]
0x3655: cmp edx,0x2
0x3658: jnbe 0x3689
0x365a: cmp eax,0x4
0x365d: setnz al
0x3660: mov rcx,qword ptr [rsp+0x48]
0x3665: xor rcx,0x28
0x366e: jnz 0x3684
0x3670: add rsp,0x58
0x3674: pop rbx
0x3675: pop rbp
0x3676: ret
0x3677: nop qword ptr [rax+rax*1+0x0]
0x3680: xor eax,eax
0x3682: jmp 0x3660
0x3684: call 0x2780
0x3689: lea rcx,[rip+0x123f8]
0x3690: lea rsi,[rip+0x1186d]
0x3697: lea rdi,[rip+0x11881]
0x369e: mov edx,0xef
0x36a3: call 0x2820
0x36a8: lea rsi,[rip+0x133df]
0x36af: mov edi,0x4
0x36b4: call 0xe6d0
0x36b9: lea rsi,[rip+0x11a58]
0x36c0: mov edx,0x5
0x36c5: xor edi,edi
0x36c7: mov rbp,rax
0x36ca: call 0x2730
0x36cf: mov rbx,rax
0x36d2: call 0x25a0
0x36d7: mov esi,dword ptr [rax]
0x36d9: mov rcx,rbp
0x36dc: mov rdx,rbx
0x36df: mov edi,0x1
0x36e4: xor eax,eax
0x36e6: call 0x2b10
0x36eb: nop qword ptr [rax+rax*1+0x0]
0x3724: nop qword ptr [rax+0x0]
0x3756: mov rdi,rbp
0x3759: mov ebx,eax
0x375b: call 0x2c80
0x3760: add rsp,0x10
0x3764: mov eax,ebx
0x3766: pop rbx
0x3767: pop rbp
0x3768: pop r12
0x376a: ret
0x376b: nop qword ptr [rax+rax*1+0x0]
0x3bb0: push r13
0x3bb2: push r12
0x3bb4: mov r13,rdx
0x3bb7: push rbp
0x3bb8: push rbx
0x3bb9: xor edx,edx
0x3bbb: mov r12,rdi
0x3bbe: mov rbx,rsi
0x3bc1: mov ebp,ecx
0x3bc3: sub rsp,0xa8
0x3bca: mov rsi,qword ptr [rsi+0x30]
0x3bce: mov edi,dword ptr [rdi+0x2c]
0x3bd1: mov rax,0x28
0x3bda: mov qword ptr [rsp+0x98],rax
0x3be2: xor eax,eax
0x3be4: test cl,cl
0x3be6: setnz dl
0x3be9: shl edx,0x9
0x3bec: call 0x2620
0x3bf1: test eax,eax
0x3bf3: jnz 0x3c30
0x3bf5: cmp [r13+0x1a],0x0
0x3bfa: mov eax,0x2
0x3bff: jnz 0x3ce8
0x3c05: mov rcx,qword ptr [rsp+0x98]
0x3c0d: xor rcx,0x28
0x3c16: jnz 0x3df8
0x3c1c: add rsp,0xa8
0x3c23: pop rbx
0x3c24: pop rbp
0x3c25: pop r12
0x3c27: pop r13
0x3c29: ret
0x3c2a: nop qword ptr [rax+rax*1+0x0]
0x3c30: call 0x25a0
0x3c35: mov edx,dword ptr [rax]
0x3c37: mov rbp,rax
0x3c3a: cmp edx,0x1e
0x3c3d: jz 0x3d38
0x3c43: cmp [r13+0x0],0x0
0x3c48: jz 0x3c70
0x3c4a: cmp edx,0x14
0x3c4d: jz 0x3db9
0x3c53: jle 0x3db0
0x3c59: cmp edx,0x16
0x3c5c: jz 0x3db9
0x3c62: cmp edx,0x54
0x3c65: jz 0x3db9
0x3c6b: nop qword ptr [rax+rax*1+0x0]
0x3c70: cmp [rbx+0x70],0x4
0x3c75: jz 0x3d70
0x3c7b: mov rsi,qword ptr [rbx+0x38]
0x3c7f: mov edi,0x4
0x3c84: call 0xe6d0
0x3c89: lea rsi,[rip+0x11e27]
0x3c90: xor edi,edi
0x3c92: mov edx,0x5
0x3c97: mov r12,rax
0x3c9a: call 0x2730
0x3c9f: mov esi,dword ptr [rbp+0x0]
0x3ca2: mov rdx,rax
0x3ca5: xor edi,edi
0x3ca7: xor eax,eax
0x3ca9: mov rcx,r12
0x3cac: call 0x2b10
0x3cb1: mov rax,qword ptr [rbx+0x8]
0x3cb5: cmp [rax+0x58],0x0
0x3cba: jns 0x3cd3
0x3cbc: jmp 0x3cda
0x3cbe: nop 
0x3cc0: mov [rax+0x20],0x1
0x3cc8: mov rax,qword ptr [rax+0x8]
0x3ccc: cmp [rax+0x58],0x0
0x3cd1: js 0x3cda
0x3cd3: cmp [rax+0x20],0x0
0x3cd8: jz 0x3cc0
0x3cda: mov eax,0x4
0x3cdf: jmp 0x3c05
0x3ce4: nop qword ptr [rax+0x0]
0x3ce8: mov rsi,qword ptr [rbx+0x38]
0x3cec: mov edi,0x4
0x3cf1: call 0xe6d0
0x3cf6: test bpl,bpl
0x3cf9: mov rbx,rax
0x3cfc: mov edx,0x5
0x3d01: jz 0x3dc8
0x3d07: lea rsi,[rip+0x11d87]
0x3d0e: xor edi,edi
0x3d10: call 0x2730
0x3d15: mov rsi,rax
0x3d18: mov rdx,rbx
0x3d1b: mov edi,0x1
0x3d20: xor eax,eax
0x3d22: call 0x2ab0
0x3d27: mov eax,0x2
0x3d2c: jmp 0x3c05
0x3d31: nop qword ptr [rax+0x0]
0x3d38: mov rdx,qword ptr [rbx+0x30]
0x3d3c: mov esi,dword ptr [r12+0x2c]
0x3d41: mov rcx,rsp
0x3d44: mov r8d,0x100
0x3d4a: mov edi,0x1
0x3d4f: call 0x27c0
0x3d54: test eax,eax
0x3d56: jz 0x3d60
0x3d58: mov edx,dword ptr [rbp+0x0]
0x3d5b: cmp edx,0x2
0x3d5e: jz 0x3ddb
0x3d60: mov [rbp+0x0],0x1e
0x3d67: jmp 0x3c7b
0x3d6c: nop qword ptr [rax+0x0]
0x3d70: cmp edx,0x27
0x3d73: jnbe 0x3c7b
0x3d79: mov rax,0x549759090688
0x3d83: bt rax,rdx
0x3d87: jnb 0x3c7b
0x3d8d: mov eax,dword ptr [rbx+0x40]
0x3d90: cmp eax,0x1
0x3d93: jz 0x3d9e
0x3d95: cmp eax,0xd
0x3d98: jnz 0x3c7b
0x3d9e: mov dword ptr [rbp+0x0],eax
0x3da1: jmp 0x3c7b
0x3da6: nop qword ptr [rax+rax*1+0x0]
0x3db0: cmp edx,0x2
0x3db3: jnz 0x3c70
0x3db9: mov eax,0x2
0x3dbe: jmp 0x3c05
0x3dc3: nop qword ptr [rax+rax*1+0x0]
0x3dc8: lea rsi,[rip+0x11cdc]
0x3dcf: xor edi,edi
0x3dd1: call 0x2730
0x3dd6: jmp 0x3d15
0x3ddb: cmp [r13+0x0],0x0
0x3de0: mov eax,0x2
0x3de5: jnz 0x3c05
0x3deb: cmp [rbx+0x70],0x4
0x3df0: jnz 0x3c7b
0x3df6: jmp 0x3d79
0x3df8: call 0x2780
0x3e00: push rbx
0x3e01: mov rax,qword ptr [rdx+0x30]
0x3e05: mov rbx,rdx
0x3e08: cmp rax,0xffffffff
0x3e0c: jz 0x3e20
0x3e0e: test rax,rax
0x3e11: js 0x3e66
0x3e13: xor eax,eax
0x3e15: pop rbx
0x3e16: ret
0x3e17: nop qword ptr [rax+rax*1+0x0]
0x3e20: mov rcx,rdx
0x3e23: mov r8d,0x100
0x3e29: mov rdx,rsi
0x3e2c: mov esi,edi
0x3e2e: mov edi,0x1
0x3e33: call 0x27c0
0x3e38: test eax,eax
0x3e3a: jz 0x3e60
0x3e3c: mov [rbx+0x30],0xfffffffe
0x3e44: call 0x25a0
0x3e49: movsxd rdx,dword ptr [rax]
0x3e4c: mov qword ptr [rbx+0x8],rdx
0x3e50: mov dword ptr [rax],edx
0x3e52: mov eax,0xffffffff
0x3e57: pop rbx
0x3e58: ret
0x3e59: nop qword ptr [rax+0x0]
0x3e60: mov rax,qword ptr [rbx+0x30]
0x3e64: jmp 0x3e0e
0x3e66: call 0x25a0
0x3e6b: mov rdx,qword ptr [rbx+0x8]
0x3e6f: jmp 0x3e50
0x3e80: push r15
0x3e82: push r14
0x3e84: push r13
0x3e86: push r12
0x3e88: mov r13,rcx
0x3e8b: push rbp
0x3e8c: push rbx
0x3e8d: mov rbx,rsi
0x3e90: sub rsp,0xc8
0x3e97: mov edi,dword ptr [rdi+0x2c]
0x3e9a: mov r15,qword ptr [rsi+0x30]
0x3e9e: mov rax,0x28
0x3ea7: mov qword ptr [rsp+0xb8],rax
0x3eaf: xor eax,eax
0x3eb1: mov rax,qword ptr [rsi+0x38]
0x3eb5: test r9,r9
0x3eb8: mov dword ptr [rsp+0x14],r8d
0x3ebd: mov dword ptr [rsp+0x10],edi
0x3ec1: mov qword ptr [rsp+0x8],rax
0x3ec6: jz 0x40b0
0x3ecc: xor ebp,ebp
0x3ece: test dl,dl
0x3ed0: mov [r9],0x2
0x3ed7: setnz bpl
0x3edb: mov edx,0x30900
0x3ee0: xor eax,eax
0x3ee2: mov rsi,r15
0x3ee5: mov r12,r9
0x3ee8: mov [rsp+0x50],0xffffffff
0x3ef1: shl ebp,0x2
0x3ef4: call 0x2770
0x3ef9: test eax,eax
0x3efb: js 0x3f65
0x3efd: mov edi,eax
0x3eff: mov dword ptr [rsp+0x18],eax
0x3f03: call 0x2b80
0x3f08: test rax,rax
0x3f0b: mov r14,rax
0x3f0e: mov edx,dword ptr [rsp+0x18]
0x3f12: jz 0x4170
0x3f18: call 0x25a0
0x3f1d: mov qword ptr [rsp+0x18],rax
0x3f22: mov [rax],0x0
0x3f28: nop qword ptr [rax+rax*1+0x0]
0x3f30: mov rdi,r14
0x3f33: call 0x29f0
0x3f38: test rax,rax
0x3f3b: jz 0x4188
0x3f41: cmp [rax+0x13],0x2e
0x3f45: jnz 0x3f5d
0x3f47: xor edx,edx
0x3f49: cmp [rax+0x14],0x2e
0x3f4d: setz dl
0x3f50: movzx eax,byte ptr [rax+rdx*1+0x14]
0x3f55: test al,al
0x3f57: jz 0x3f30
0x3f59: cmp al,0x2f
0x3f5b: jz 0x3f30
0x3f5d: mov rdi,r14
0x3f60: call 0x28a0
0x3f65: xor r14d,r14d
0x3f68: mov eax,0x3
0x3f6d: mov dword ptr [r12],eax
0x3f71: cmp [rbx+0x20],0x0
0x3f76: jnz 0x40a0
0x3f7c: mov eax,dword ptr [r13+0x4]
0x3f80: cmp eax,0x5
0x3f83: jz 0x3fb2
0x3f85: cmp [r13+0x0],0x0
0x3f8a: jnz 0x3fa9
0x3f8c: cmp eax,0x3
0x3f8f: jz 0x3f98
0x3f91: cmp [r13+0x19],0x0
0x3f96: jz 0x3fb2
0x3f98: call 0x10c80
0x3f9d: test al,al
0x3f9f: jz 0x4268
0x3fa5: mov eax,dword ptr [r13+0x4]
0x3fa9: cmp eax,0x3
0x3fac: jz 0x40e0
0x3fb2: mov eax,0x2
0x3fb7: mov rcx,qword ptr [rsp+0xb8]
0x3fbf: xor rcx,0x28
0x3fc8: jnz 0x4343
0x3fce: add rsp,0xc8
0x3fd5: pop rbx
0x3fd6: pop rbp
0x3fd7: pop r12
0x3fd9: pop r13
0x3fdb: pop r14
0x3fdd: pop r15
0x3fdf: ret
0x3fe0: lea rbx,[rsp+0x20]
0x3fe5: mov edi,dword ptr [rsp+0x10]
0x3fe9: mov rsi,r15
0x3fec: mov rdx,rbx
0x3fef: call 0x3e00
0x3ff4: test eax,eax
0x3ff6: jnz 0x41c0
0x3ffc: mov eax,dword ptr [rsp+0x38]
0x4000: and eax,0xf000
0x4005: cmp eax,0xa000
0x400a: jz 0x4254
0x4010: cmp eax,0x4000
0x4015: jz 0x40f4
0x401b: mov rsi,qword ptr [rsp+0x8]
0x4020: mov edi,0x4
0x4025: call 0xe6d0
0x402a: mov rbp,rax
0x402d: mov edi,dword ptr [rsp+0x10]
0x4031: mov rdx,rbx
0x4034: mov rsi,r15
0x4037: call 0x3e00
0x403c: test eax,eax
0x403e: jnz 0x42f0
0x4044: mov rdi,rbx
0x4047: call 0xb350
0x404c: test r12d,r12d
0x404f: mov r13,rax
0x4052: mov rbx,qword ptr [rip+0x218527]
0x4059: mov edx,0x5
0x405e: jz 0x42d8
0x4064: lea rsi,[rip+0x11b25]
0x406b: xor edi,edi
0x406d: call 0x2730
0x4072: mov rdi,qword ptr [rip+0x218087]
0x4079: mov rdx,rax
0x407c: mov r9,rbp
0x407f: mov r8,r13
0x4082: mov rcx,rbx
0x4085: mov esi,0x1
0x408a: xor eax,eax
0x408c: call 0x2c20
0x4091: call 0x10fd0
0x4096: test al,al
0x4098: jnz 0x3fb2
0x409e: nop 
0x40a0: mov eax,0x3
0x40a5: jmp 0x3fb7
0x40aa: nop qword ptr [rax+rax*1+0x0]
0x40b0: cmp dl,0x1
0x40b3: mov r14d,edx
0x40b6: mov eax,0x0
0x40bb: sbb ebp,ebp
0x40bd: mov [rsp+0x50],0xffffffff
0x40c6: not ebp
0x40c8: and ebp,0x4
0x40cb: test dl,dl
0x40cd: cmovne r14d,eax
0x40d1: jmp 0x3f71
0x40d6: nop qword ptr [rax+rax*1+0x0]
0x40e0: xor r12d,r12d
0x40e3: test ebp,ebp
0x40e5: jz 0x3fe0
0x40eb: cmp ebp,0x4
0x40ee: jnz 0x4238
0x40f4: cmp [r13+0x9],0x0
0x40f9: jz 0x4210
0x40ff: mov rsi,qword ptr [rsp+0x8]
0x4104: mov edi,0x4
0x4109: call 0xe6d0
0x410e: cmp [rsp+0x14],0x2
0x4113: mov rbp,rax
0x4116: jnz 0x424a
0x411c: test r14b,r14b
0x411f: jnz 0x424a
0x4125: test r12d,r12d
0x4128: mov rbx,qword ptr [rip+0x218451]
0x412f: mov edx,0x5
0x4134: jz 0x4330
0x413a: lea rsi,[rip+0x119ff]
0x4141: xor edi,edi
0x4143: call 0x2730
0x4148: mov rdi,qword ptr [rip+0x217fb1]
0x414f: mov rdx,rax
0x4152: mov r8,rbp
0x4155: mov rcx,rbx
0x4158: mov esi,0x1
0x415d: xor eax,eax
0x415f: call 0x2c20
0x4164: jmp 0x4091
0x4169: nop qword ptr [rax+0x0]
0x4170: mov edi,edx
0x4172: call 0x2870
0x4177: mov eax,0x3
0x417c: jmp 0x3f6d
0x4181: nop qword ptr [rax+0x0]
0x4188: mov rax,qword ptr [rsp+0x18]
0x418d: mov rdi,r14
0x4190: mov edx,dword ptr [rax]
0x4192: mov dword ptr [rsp+0x18],edx
0x4196: call 0x28a0
0x419b: mov edx,dword ptr [rsp+0x18]
0x419f: test edx,edx
0x41a1: jnz 0x3f65
0x41a7: mov r14d,0x1
0x41ad: mov eax,0x4
0x41b2: jmp 0x3f6d
0x41b7: nop qword ptr [rax+rax*1+0x0]
0x41c0: call 0x25a0
0x41c5: mov ebx,dword ptr [rax]
0x41c7: mov rsi,qword ptr [rsp+0x8]
0x41cc: mov edi,0x4
0x41d1: call 0xe6d0
0x41d6: mov rbp,rax
0x41d9: lea rsi,[rip+0x118d7]
0x41e0: mov edx,0x5
0x41e5: xor edi,edi
0x41e7: call 0x2730
0x41ec: mov rcx,rbp
0x41ef: mov rdx,rax
0x41f2: mov esi,ebx
0x41f4: xor eax,eax
0x41f6: xor edi,edi
0x41f8: call 0x2b10
0x41fd: mov eax,0x4
0x4202: jmp 0x3fb7
0x4207: nop qword ptr [rax+rax*1+0x0]
0x4210: cmp [r13+0xa],0x0
0x4215: jz 0x421c
0x4217: test r14b,r14b
0x421a: jnz 0x4238
0x421c: mov rsi,qword ptr [rsp+0x8]
0x4221: mov edi,0x4
0x4226: mov ebx,0x15
0x422b: call 0xe6d0
0x4230: mov rbp,rax
0x4233: jmp 0x41d9
0x4235: nop qword ptr [rax]
0x4238: mov rsi,qword ptr [rsp+0x8]
0x423d: mov edi,0x4
0x4242: call 0xe6d0
0x4247: mov rbp,rax
0x424a: lea rbx,[rsp+0x20]
0x424f: jmp 0x402d
0x4254: cmp [r13+0x4],0x3
0x4259: jnz 0x3fb2
0x425f: jmp 0x401b
0x4264: nop qword ptr [rax+0x0]
0x4268: lea rbx,[rsp+0x20]
0x426d: mov edi,dword ptr [rsp+0x10]
0x4271: mov rsi,r15
0x4274: mov rdx,rbx
0x4277: call 0x3e00
0x427c: test eax,eax
0x427e: jnz 0x41c0
0x4284: mov eax,dword ptr [rsp+0x38]
0x4288: and eax,0xf000
0x428d: cmp eax,0xa000
0x4292: jz 0x3fa5
0x4298: mov edi,dword ptr [rsp+0x10]
0x429c: mov ecx,0x200
0x42a1: mov edx,0x2
0x42a6: mov rsi,r15
0x42a9: call 0x2650
0x42ae: test eax,eax
0x42b0: jz 0x3fa5
0x42b6: call 0x25a0
0x42bb: mov ebx,dword ptr [rax]
0x42bd: mov r12d,0x1
0x42c3: cmp ebx,0xd
0x42c6: jz 0x40e3
0x42cc: jmp 0x41c7
0x42d1: nop qword ptr [rax+0x0]
0x42d8: lea rsi,[rip+0x117e9]
0x42df: xor edi,edi
0x42e1: call 0x2730
0x42e6: jmp 0x4072
0x42eb: nop qword ptr [rax+rax*1+0x0]
0x42f0: lea rsi,[rip+0x117c0]
0x42f7: mov edx,0x5
0x42fc: xor edi,edi
0x42fe: call 0x2730
0x4303: mov rbx,rax
0x4306: call 0x25a0
0x430b: mov esi,dword ptr [rax]
0x430d: mov rcx,rbp
0x4310: xor eax,eax
0x4312: mov rdx,rbx
0x4315: xor edi,edi
0x4317: call 0x2b10
0x431c: mov eax,0x4
0x4321: jmp 0x3fb7
0x4326: nop qword ptr [rax+rax*1+0x0]
0x4330: lea rsi,[rip+0x11839]
0x4337: xor edi,edi
0x4339: call 0x2730
0x433e: jmp 0x4148
0x4343: call 0x2780
0x4350: push r15
0x4352: push r14
0x4354: push r13
0x4356: push r12
0x4358: push rbp
0x4359: push rbx
0x435a: sub rsp,0xd8
0x4361: mov rax,0x28
0x436a: mov qword ptr [rsp+0xc8],rax
0x4372: xor eax,eax
0x4374: cmp [rdi],0x0
0x4378: jz 0x4ae8
0x437e: cmp [rsi+0x8],0x1
0x4382: mov r13,rsi
0x4385: lea r12,[rip+0x11a9c]
0x438c: mov ebp,0x2
0x4391: sbb esi,esi
0x4393: xor edx,edx
0x4395: and esi,0xc0
0x4398: add esi,0x258
0x439e: call 0x10f50
0x43a3: mov rbx,rax
0x43a6: lea rax,[rsp+0x2c]
0x43ab: mov qword ptr [rsp+0x10],rax
0x43b0: lea rax,[rsp+0x30]
0x43b5: mov qword ptr [rsp+0x18],rax
0x43ba: nop qword ptr [rax+rax*1+0x0]
0x43c0: mov rdi,rbx
0x43c3: call 0x12c60
0x43c8: test rax,rax
0x43cb: mov r15,rax
0x43ce: jz 0x445a
0x43d4: movzx edx,byte ptr [rax+0x70]
0x43d8: cmp dx,0xd
0x43dc: jnbe 0x4b37
0x43e2: movzx eax,dx
0x43e5: movsxd rax,dword ptr [r12+rax*4+0x0]
0x43e9: add rax,r12
0x43ec: jmp rax
0x43ee: nop 
0x43f0: mov rdx,qword ptr [r15+0x38]
0x43f4: mov esi,0x3
0x43f9: xor edi,edi
0x43fb: call 0xe7d0
0x4400: lea rsi,[rip+0x116e7]
0x4407: mov edx,0x5
0x440c: xor edi,edi
0x440e: mov rbp,rax
0x4411: call 0x2730
0x4416: mov esi,dword ptr [r15+0x40]
0x441a: mov rcx,rbp
0x441d: mov rdx,rax
0x4420: xor edi,edi
0x4422: xor eax,eax
0x4424: call 0x2b10
0x4429: mov rsi,r15
0x442c: mov edx,0x4
0x4431: mov rdi,rbx
0x4434: call 0x133e0
0x4439: mov rdi,rbx
0x443c: mov ebp,0x4
0x4441: call 0x12c60
0x4446: mov rdi,rbx
0x4449: call 0x12c60
0x444e: test rax,rax
0x4451: mov r15,rax
0x4454: jnz 0x43d4
0x445a: call 0x25a0
0x445f: mov r12,rax
0x4462: mov eax,dword ptr [rax]
0x4464: test eax,eax
0x4466: jnz 0x4978
0x446c: mov rdi,rbx
0x446f: call 0x12ad0
0x4474: test eax,eax
0x4476: jnz 0x49b0
0x447c: mov rbx,qword ptr [rsp+0xc8]
0x4484: xor rbx,0x28
0x448d: mov eax,ebp
0x448f: jnz 0x4ba0
0x4495: add rsp,0xd8
0x449c: pop rbx
0x449d: pop rbp
0x449e: pop r12
0x44a0: pop r13
0x44a2: pop r14
0x44a4: pop r15
0x44a6: ret
0x44a7: nop qword ptr [rax+rax*1+0x0]
0x44b0: cmp dx,0x6
0x44b4: jnz 0x44d8
0x44b6: cmp [r13+0x8],0x0
0x44bb: jz 0x44d8
0x44bd: cmp [r15+0x58],0x0
0x44c2: jle 0x44d8
0x44c4: mov rax,qword ptr [rbx+0x18]
0x44c8: cmp qword ptr [r15+0x78],rax
0x44cc: jnz 0x4a78
0x44d2: nop qword ptr [rax+rax*1+0x0]
0x44d8: and edx,0xfd
0x44db: xor r14d,r14d
0x44de: mov rcx,r13
0x44e1: cmp dx,0x4
0x44e5: mov r8d,0x3
0x44eb: mov rsi,r15
0x44ee: setz r14b
0x44f2: mov rdi,rbx
0x44f5: xor r9d,r9d
0x44f8: mov edx,r14d
0x44fb: call 0x3e80
0x4500: cmp eax,0x2
0x4503: mov ecx,eax
0x4505: jz 0x4768
0x450b: lea eax,[rcx-0x2]
0x450e: cmp eax,0x2
0x4511: jnbe 0x4b81
0x4517: cmp ecx,0x4
0x451a: jz 0x4ba5
0x4520: cmp ecx,0x3
0x4523: jnz 0x43c0
0x4529: cmp ebp,0x2
0x452c: mov eax,0x3
0x4531: cmove ebp,eax
0x4534: jmp 0x43c0
0x4539: nop qword ptr [rax+0x0]
0x4540: mov rdx,qword ptr [r15+0x38]
0x4544: mov esi,0x3
0x4549: xor edi,edi
0x454b: call 0xe7d0
0x4550: lea rsi,[rip+0x11791]
0x4557: mov rbp,rax
0x455a: mov edx,0x5
0x455f: xor edi,edi
0x4561: call 0x2730
0x4566: mov rcx,rbp
0x4569: mov rdx,rax
0x456c: xor esi,esi
0x456e: jmp 0x4420
0x4573: nop qword ptr [rax+rax*1+0x0]
0x4578: cmp [r13+0x9],0x0
0x457d: jnz 0x4638
0x4583: cmp [r13+0xa],0x0
0x4588: jz 0x46f0
0x458e: mov rsi,qword ptr [r15+0x30]
0x4592: mov edi,dword ptr [rbx+0x2c]
0x4595: xor eax,eax
0x4597: mov edx,0x30900
0x459c: call 0x2770
0x45a1: test eax,eax
0x45a3: js 0x4601
0x45a5: mov edi,eax
0x45a7: mov dword ptr [rsp+0x8],eax
0x45ab: call 0x2b80
0x45b0: test rax,rax
0x45b3: mov r14,rax
0x45b6: mov edx,dword ptr [rsp+0x8]
0x45ba: jz 0x4af2
0x45c0: call 0x25a0
0x45c5: mov qword ptr [rsp+0x8],rax
0x45ca: mov [rax],0x0
0x45d0: mov rdi,r14
0x45d3: call 0x29f0
0x45d8: test rax,rax
0x45db: jz 0x4616
0x45dd: cmp [rax+0x13],0x2e
0x45e1: jnz 0x45f9
0x45e3: xor edx,edx
0x45e5: cmp [rax+0x14],0x2e
0x45e9: setz dl
0x45ec: movzx eax,byte ptr [rax+rdx*1+0x14]
0x45f1: test al,al
0x45f3: jz 0x45d0
0x45f5: cmp al,0x2f
0x45f7: jz 0x45d0
0x45f9: mov rdi,r14
0x45fc: call 0x28a0
0x4601: cmp [r13+0xa],0x0
0x4606: jz 0x46f0
0x460c: mov ebp,0x27
0x4611: jmp 0x46f5
0x4616: mov rax,qword ptr [rsp+0x8]
0x461b: mov rdi,r14
0x461e: mov edx,dword ptr [rax]
0x4620: mov dword ptr [rsp+0x8],edx
0x4624: call 0x28a0
0x4629: mov edx,dword ptr [rsp+0x8]
0x462d: test edx,edx
0x462f: jnz 0x4601
0x4631: nop qword ptr [rax+0x0]
0x4638: cmp [r15+0x58],0x0
0x463d: jnz 0x4678
0x463f: mov r14,qword ptr [r15+0x30]
0x4643: mov rdi,r14
0x4646: call 0xb0c0
0x464b: cmp [rax],0x2e
0x464e: jz 0x47d0
0x4654: mov rax,qword ptr [r13+0x10]
0x4658: test rax,rax
0x465b: jz 0x466d
0x465d: mov rcx,qword ptr [rax]
0x4660: cmp qword ptr [r15+0x80],rcx
0x4667: jz 0x49e0
0x466d: cmp [r13+0x18],0x0
0x4672: jnz 0x4868
0x4678: mov r9,qword ptr [rsp+0x10]
0x467d: mov rcx,r13
0x4680: mov r8d,0x2
0x4686: mov edx,0x1
0x468b: mov rsi,r15
0x468e: mov rdi,rbx
0x4691: call 0x3e80
0x4696: cmp eax,0x2
0x4699: mov ecx,eax
0x469b: jz 0x4780
0x46a1: mov rax,qword ptr [r15+0x8]
0x46a5: cmp [rax+0x58],0x0
0x46aa: jns 0x46c3
0x46ac: jmp 0x46ca
0x46ae: nop 
0x46b0: mov [rax+0x20],0x1
0x46b8: mov rax,qword ptr [rax+0x8]
0x46bc: cmp [rax+0x58],0x0
0x46c1: js 0x46ca
0x46c3: cmp [rax+0x20],0x0
0x46c8: jz 0x46b0
0x46ca: mov edx,0x4
0x46cf: mov rsi,r15
0x46d2: mov rdi,rbx
0x46d5: mov dword ptr [rsp+0x8],ecx
0x46d9: call 0x133e0
0x46de: mov rdi,rbx
0x46e1: call 0x12c60
0x46e6: mov ecx,dword ptr [rsp+0x8]
0x46ea: jmp 0x450b
0x46ef: nop 
0x46f0: mov ebp,0x15
0x46f5: mov rsi,qword ptr [r15+0x38]
0x46f9: mov edi,0x4
0x46fe: call 0xe6d0
0x4703: lea rsi,[rip+0x113ad]
0x470a: xor edi,edi
0x470c: mov r14,rax
0x470f: mov edx,0x5
0x4714: call 0x2730
0x4719: xor edi,edi
0x471b: mov rdx,rax
0x471e: mov rcx,r14
0x4721: xor eax,eax
0x4723: mov esi,ebp
0x4725: call 0x2b10
0x472a: mov rax,qword ptr [r15+0x8]
0x472e: cmp [rax+0x58],0x0
0x4733: jns 0x4757
0x4735: jmp 0x4429
0x473a: nop qword ptr [rax+rax*1+0x0]
0x4740: mov [rax+0x20],0x1
0x4748: mov rax,qword ptr [rax+0x8]
0x474c: cmp [rax+0x58],0x0
0x4751: js 0x4429
0x4757: cmp [rax+0x20],0x0
0x475c: jz 0x4740
0x475e: jmp 0x4429
0x4763: nop qword ptr [rax+rax*1+0x0]
0x4768: mov ecx,r14d
0x476b: mov rdx,r13
0x476e: mov rsi,r15
0x4771: mov rdi,rbx
0x4774: call 0x3bb0
0x4779: mov ecx,eax
0x477b: jmp 0x450b
0x4780: cmp [rsp+0x2c],0x4
0x4785: jnz 0x43c0
0x478b: mov ecx,0x1
0x4790: mov rdx,r13
0x4793: mov rsi,r15
0x4796: mov rdi,rbx
0x4799: call 0x3bb0
0x479e: mov edx,0x4
0x47a3: mov rsi,r15
0x47a6: mov rdi,rbx
0x47a9: mov dword ptr [rsp+0x8],eax
0x47ad: call 0x133e0
0x47b2: mov rdi,rbx
0x47b5: call 0x12c60
0x47ba: mov ecx,dword ptr [rsp+0x8]
0x47be: cmp ecx,0x2
0x47c1: jz 0x43c0
0x47c7: jmp 0x46a1
0x47cc: nop qword ptr [rax+0x0]
0x47d0: xor edx,edx
0x47d2: cmp [rax+0x1],0x2e
0x47d6: setz dl
0x47d9: movzx eax,byte ptr [rax+rdx*1+0x1]
0x47de: test al,al
0x47e0: jz 0x47ea
0x47e2: cmp al,0x2f
0x47e4: jnz 0x4654
0x47ea: mov rdx,qword ptr [r15+0x38]
0x47ee: mov esi,0x4
0x47f3: mov edi,0x2
0x47f8: call 0xe5b0
0x47fd: lea rdx,[rip+0x112e7]
0x4804: mov esi,0x4
0x4809: mov edi,0x1
0x480e: mov rbp,rax
0x4811: call 0xe5b0
0x4816: lea rdx,[rip+0x112cf]
0x481d: xor edi,edi
0x481f: mov esi,0x4
0x4824: mov r14,rax
0x4827: call 0xe5b0
0x482c: lea rsi,[rip+0x11385]
0x4833: xor edi,edi
0x4835: mov edx,0x5
0x483a: mov qword ptr [rsp+0x8],rax
0x483f: call 0x2730
0x4844: mov rcx,qword ptr [rsp+0x8]
0x4849: mov rdx,rax
0x484c: mov r9,rbp
0x484f: mov r8,r14
0x4852: xor esi,esi
0x4854: xor edi,edi
0x4856: xor eax,eax
0x4858: call 0x2b10
0x485d: jmp 0x4429
0x4862: nop qword ptr [rax+rax*1+0x0]
0x4868: lea rsi,[rip+0x1127c]
0x486f: xor edx,edx
0x4871: mov rdi,r14
0x4874: call 0xb5e0
0x4879: test rax,rax
0x487c: mov r14,rax
0x487f: jz 0x4897
0x4881: mov rdx,qword ptr [rsp+0x18]
0x4886: mov rsi,rax
0x4889: mov edi,0x1
0x488e: call 0x2760
0x4893: test eax,eax
0x4895: jz 0x4900
0x4897: mov rdx,qword ptr [r15+0x30]
0x489b: mov esi,0x4
0x48a0: mov edi,0x1
0x48a5: call 0xe5b0
0x48aa: mov rdx,r14
0x48ad: xor edi,edi
0x48af: mov esi,0x4
0x48b4: mov rbp,rax
0x48b7: call 0xe5b0
0x48bc: lea rsi,[rip+0x113d5]
0x48c3: xor edi,edi
0x48c5: mov edx,0x5
0x48ca: mov qword ptr [rsp+0x8],rax
0x48cf: call 0x2730
0x48d4: mov rcx,qword ptr [rsp+0x8]
0x48d9: mov rdx,rax
0x48dc: xor edi,edi
0x48de: mov r8,rbp
0x48e1: xor esi,esi
0x48e3: xor eax,eax
0x48e5: call 0x2b10
0x48ea: mov rdi,r14
0x48ed: call 0x2c80
0x48f2: jmp 0x4429
0x48f7: nop qword ptr [rax+rax*1+0x0]
0x4900: mov rdi,r14
0x4903: call 0x2c80
0x4908: mov rax,qword ptr [rsp+0x30]
0x490d: cmp qword ptr [rbx+0x18],rax
0x4911: jz 0x4678
0x4917: mov rsi,qword ptr [r15+0x38]
0x491b: mov edi,0x4
0x4920: call 0xe6d0
0x4925: lea rsi,[rip+0x1138c]
0x492c: mov rbp,rax
0x492f: mov edx,0x5
0x4934: xor edi,edi
0x4936: call 0x2730
0x493b: xor esi,esi
0x493d: mov rdx,rax
0x4940: mov rcx,rbp
0x4943: xor edi,edi
0x4945: xor eax,eax
0x4947: call 0x2b10
0x494c: lea rsi,[rip+0x114ad]
0x4953: mov edx,0x5
0x4958: xor edi,edi
0x495a: call 0x2730
0x495f: xor esi,esi
0x4961: mov rdx,rax
0x4964: xor edi,edi
0x4966: xor eax,eax
0x4968: call 0x2b10
0x496d: jmp 0x4429
0x4972: nop qword ptr [rax+rax*1+0x0]
0x4978: lea rsi,[rip+0x1115c]
0x497f: xor edi,edi
0x4981: mov edx,0x5
0x4986: mov ebp,0x4
0x498b: call 0x2730
0x4990: mov esi,dword ptr [r12]
0x4994: mov rdx,rax
0x4997: xor edi,edi
0x4999: xor eax,eax
0x499b: call 0x2b10
0x49a0: mov rdi,rbx
0x49a3: call 0x12ad0
0x49a8: test eax,eax
0x49aa: jz 0x447c
0x49b0: lea rsi,[rip+0x11173]
0x49b7: mov edx,0x5
0x49bc: xor edi,edi
0x49be: mov ebp,0x4
0x49c3: call 0x2730
0x49c8: mov esi,dword ptr [r12]
0x49cc: mov rdx,rax
0x49cf: xor edi,edi
0x49d1: xor eax,eax
0x49d3: call 0x2b10
0x49d8: jmp 0x447c
0x49dd: nop qword ptr [rax]
0x49e0: mov rax,qword ptr [rax+0x8]
0x49e4: cmp qword ptr [r15+0x78],rax
0x49e8: jnz 0x466d
0x49ee: mov rdx,qword ptr [r15+0x38]
0x49f2: lea rdi,[rip+0x12095]
0x49f9: mov ecx,0x2
0x49fe: mov rsi,rdx
0x4a01: rep cmpsb ds:[rsi],es:[rdi]
0x4a03: setnbe al
0x4a06: sbb al,0x0
0x4a08: test al,al
0x4a0a: jz 0x4afe
0x4a10: lea rdx,[rip+0x12077]
0x4a17: mov esi,0x4
0x4a1c: mov edi,0x1
0x4a21: call 0xe5b0
0x4a26: mov rdx,qword ptr [r15+0x38]
0x4a2a: mov esi,0x4
0x4a2f: xor edi,edi
0x4a31: mov rbp,rax
0x4a34: call 0xe5b0
0x4a39: lea rsi,[rip+0x111e0]
0x4a40: mov r14,rax
0x4a43: mov edx,0x5
0x4a48: xor edi,edi
0x4a4a: call 0x2730
0x4a4f: mov r8,rbp
0x4a52: mov rdx,rax
0x4a55: mov rcx,r14
0x4a58: xor esi,esi
0x4a5a: xor edi,edi
0x4a5c: xor eax,eax
0x4a5e: call 0x2b10
0x4a63: mov edx,0x5
0x4a68: lea rsi,[rip+0x111f1]
0x4a6f: jmp 0x4958
0x4a74: nop qword ptr [rax+0x0]
0x4a78: mov rax,qword ptr [r15+0x8]
0x4a7c: cmp [rax+0x58],0x0
0x4a81: jns 0x4a9b
0x4a83: jmp 0x4aa2
0x4a85: nop qword ptr [rax]
0x4a88: mov [rax+0x20],0x1
0x4a90: mov rax,qword ptr [rax+0x8]
0x4a94: cmp [rax+0x58],0x0
0x4a99: js 0x4aa2
0x4a9b: cmp [rax+0x20],0x0
0x4aa0: jz 0x4a88
0x4aa2: mov rsi,qword ptr [r15+0x38]
0x4aa6: mov edi,0x4
0x4aab: call 0xe6d0
0x4ab0: lea rsi,[rip+0x11201]
0x4ab7: mov rbp,rax
0x4aba: mov edx,0x5
0x4abf: xor edi,edi
0x4ac1: call 0x2730
0x4ac6: mov rcx,rbp
0x4ac9: mov rdx,rax
0x4acc: xor esi,esi
0x4ace: xor edi,edi
0x4ad0: xor eax,eax
0x4ad2: mov ebp,0x4
0x4ad7: call 0x2b10
0x4adc: jmp 0x43c0
0x4ae1: nop qword ptr [rax+0x0]
0x4ae8: mov ebp,0x2
0x4aed: jmp 0x447c
0x4af2: mov edi,edx
0x4af4: call 0x2870
0x4af9: jmp 0x4601
0x4afe: mov rsi,rdx
0x4b01: mov edi,0x4
0x4b06: call 0xe6d0
0x4b0b: lea rsi,[rip+0x110de]
0x4b12: mov rbp,rax
0x4b15: xor edi,edi
0x4b17: mov edx,0x5
0x4b1c: call 0x2730
0x4b21: mov rcx,rbp
0x4b24: mov rdx,rax
0x4b27: xor esi,esi
0x4b29: xor edi,edi
0x4b2b: xor eax,eax
0x4b2d: call 0x2b10
0x4b32: jmp 0x4a63
0x4b37: mov rdx,qword ptr [r15+0x38]
0x4b3b: mov esi,0x3
0x4b40: xor edi,edi
0x4b42: call 0xe7d0
0x4b47: movzx ebx,byte ptr [r15+0x70]
0x4b4c: lea rsi,[rip+0x11255]
0x4b53: mov edx,0x5
0x4b58: xor edi,edi
0x4b5a: mov rbp,rax
0x4b5d: call 0x2730
0x4b62: lea r9,[rip+0x10f9a]
0x4b69: mov rdx,rax
0x4b6c: mov r8,rbp
0x4b6f: mov ecx,ebx
0x4b71: xor esi,esi
0x4b73: xor edi,edi
0x4b75: xor eax,eax
0x4b77: call 0x2b10
0x4b7c: call 0x2590
0x4b81: lea rcx,[rip+0x112d8]
0x4b88: lea rsi,[rip+0x11251]
0x4b8f: lea rdi,[rip+0x10f83]
0x4b96: mov edx,0x261
0x4b9b: call 0x2820
0x4ba0: call 0x2780
0x4ba5: mov ebp,0x4
0x4baa: jmp 0x43c0
0x4bd2: nop qword ptr [rax+rax*1+0x0]
0x4bde: nop 
0x4c1b: nop qword ptr [rax+rax*1+0x0]
0x4c55: nop qword ptr [rax]
0x4c62: nop qword ptr [rax+rax*1+0x0]
0x4ccb: nop qword ptr [rax+rax*1+0x0]
0x4d92: nop qword ptr [rax+rax*1+0x0]
0x4e0b: nop qword ptr [rax+rax*1+0x0]
0x4e52: nop qword ptr [rax+rax*1+0x0]
0x4ea6: xor ebx,ebx
0x4ea8: add rsp,0x8
0x4eac: mov eax,ebx
0x4eae: pop rbx
0x4eaf: pop rbp
0x4eb0: pop r12
0x4eb2: pop r13
0x4eb4: ret
0x4f81: nop qword ptr [rax+0x0]
0x504c: nop qword ptr [rax+0x0]
0x50a0: add rsp,0x8
0x50a4: xor eax,eax
0x50a6: pop rbx
0x50a7: pop rbp
0x50a8: pop r12
0x50aa: pop r13
0x50ac: ret
0x50ad: nop qword ptr [rax]
0x51e7: nop qword ptr [rax+rax*1+0x0]
0x534c: nop qword ptr [rax+0x0]
0x53a3: nop qword ptr [rax+rax*1+0x0]
0x53e4: nop qword ptr [rax+0x0]
0x5405: nop qword ptr [rax]
0x5416: nop qword ptr [rax+rax*1+0x0]
0x5439: nop qword ptr [rax+0x0]
0x5479: jmp 0x51d5
0x547e: nop 
0x54ce: jmp 0x51d5
0x5543: movzx ebx,byte ptr [rbp+0x26]
0x5557: nop qword ptr [rax+rax*1+0x0]
0x557a: nop qword ptr [rax+rax*1+0x0]
0x5594: nop qword ptr [rax+0x0]
0x560a: pop rbx
0x560b: xor eax,eax
0x560d: pop rbp
0x560e: pop r12
0x5610: ret
0x5611: nop qword ptr [rax+0x0]
0x5660: lea r8,[rip+0x74a9]
0x5667: lea rcx,[rip+0x7432]
0x566e: xor esi,esi
0x5670: lea rdx,[rip+0x7419]
0x5677: push rbx
0x5678: mov rbx,rdi
0x567b: mov edi,0x3d
0x5680: call 0xbff0
0x5685: mov qword ptr [rbx+0x48],rax
0x5689: pop rbx
0x568a: ret
0x57ad: nop qword ptr [rax]
0x57e6: nop qword ptr [rax+rax*1+0x0]
0x588a: jmp 0x58cc
0x588c: nop qword ptr [rax+0x0]
0x58e1: nop qword ptr [rax+0x0]
0x58ff: nop 
0x5b55: cmp [rbx+0x4],0x2
0x5b59: jz 0x6ed0
0x5c58: nop qword ptr [rax+rax*1+0x0]
0x5cad: nop qword ptr [rax]
0x5cb8: nop qword ptr [rax+rax*1+0x0]
0x5d83: jmp 0x6186
0x5d88: nop qword ptr [rax+rax*1+0x0]
0x600a: cmp [rbx+0x24],0x0
0x600e: jnz 0x5c50
0x6014: nop qword ptr [rax+0x0]
0x6136: nop qword ptr [rax+rax*1+0x0]
0x61ab: nop qword ptr [rax+rax*1+0x0]
0x61f2: nop qword ptr [rax+rax*1+0x0]
0x6207: nop qword ptr [rax+rax*1+0x0]
0x6261: jmp 0x6186
0x6266: nop qword ptr [rax+rax*1+0x0]
0x6346: nop qword ptr [rax+rax*1+0x0]
0x6385: nop qword ptr [rax]
0x63b9: nop qword ptr [rax+0x0]
0x641a: nop qword ptr [rax+rax*1+0x0]
0x6435: nop qword ptr [rax]
0x64a8: nop qword ptr [rax+rax*1+0x0]
0x6500: jmp 0x68d0
0x6505: nop qword ptr [rax]
0x6539: lea rsi,[rip+0xfa70]
0x6540: xor edi,edi
0x6542: call 0x2730
0x6547: mov rdx,rax
0x6558: jmp 0x6186
0x655d: nop qword ptr [rax]
0x656a: mov eax,dword ptr [rbp-0x314]
0x6570: and eax,0xf000
0x6575: cmp eax,0x4000
0x657a: jz 0x65d0
0x678e: nop 
0x67e4: jmp 0x6186
0x67e9: nop qword ptr [rax+0x0]
0x67fd: nop qword ptr [rax]
0x68cb: nop qword ptr [rax+rax*1+0x0]
0x6975: nop qword ptr [rax]
0x6a3c: mov rax,qword ptr [rbp-0x340]
0x6a43: mov [rax],0x1
0x6a55: nop qword ptr [rax]
0x6aa2: nop qword ptr [rax+rax*1+0x0]
0x6aff: mov rsi,qword ptr [rbp-0x280]
0x6b06: mov rdi,qword ptr [rbp-0x278]
0x6b0d: call 0x9c10
0x6b12: jmp 0x5c50
0x6b17: nop qword ptr [rax+rax*1+0x0]
0x6b28: nop qword ptr [rax+rax*1+0x0]
0x6be1: nop qword ptr [rax+0x0]
0x6c07: nop qword ptr [rax+rax*1+0x0]
0x6c6a: jmp 0x6186
0x6c6f: nop 
0x6cab: nop qword ptr [rax+rax*1+0x0]
0x6ccb: nop qword ptr [rax+rax*1+0x0]
0x6d11: nop qword ptr [rax+0x0]
0x6d96: nop qword ptr [rax+rax*1+0x0]
0x6e3f: jmp 0x68d0
0x6e44: nop qword ptr [rax+0x0]
0x6eb9: nop qword ptr [rax+0x0]
0x6ec9: nop qword ptr [rax+0x0]
0x6ed0: xor ecx,ecx
0x6ed2: xor r15d,r15d
0x6f04: cmp [rbx+0x18],0x0
0x6f08: jnz 0x6d8e
0x6f0e: cmp [rbx+0x4],0x2
0x6f12: jz 0x6d8e
0x6f18: mov eax,dword ptr [rdx+0x18]
0x6f1b: and eax,0xf000
0x6f20: cmp eax,0xa000
0x6f25: jnz 0x6d8e
0x6f2b: mov eax,dword ptr [r12+0x18]
0x6f30: and eax,0xf000
0x6f35: cmp eax,0xa000
0x6f3a: jz 0x6d8e
0x6f96: jmp 0x5c50
0x6f9b: nop qword ptr [rax+rax*1+0x0]
0x6faf: nop 
0x7198: nop qword ptr [rax+rax*1+0x0]
0x71c5: nop qword ptr [rax]
0x7247: nop qword ptr [rax+rax*1+0x0]
0x7264: nop qword ptr [rax+0x0]
0x72a0: jmp 0x6186
0x72a5: nop qword ptr [rax]
0x72c7: nop qword ptr [rax+rax*1+0x0]
0x72e6: nop qword ptr [rax+rax*1+0x0]
0x7346: mov rax,qword ptr [rbp-0x340]
0x734d: mov r12d,0x1
0x7353: mov [rax],0x1
0x7356: jmp 0x6186
0x735b: nop qword ptr [rax+rax*1+0x0]
0x73d1: nop qword ptr [rax+0x0]
0x757b: nop qword ptr [rax+rax*1+0x0]
0x75b9: nop qword ptr [rax+0x0]
0x7786: nop qword ptr [rax+rax*1+0x0]
0x7790: movzx eax,byte ptr [rbp-0x2f8]
0x7797: mov rdi,r15
0x779a: or byte ptr [rbp-0x315],al
0x77a0: call 0x2750
0x77a5: lea r15,[r15+rax*1+0x1]
0x77aa: cmp [r15],0x0
0x77ae: jz 0x7851
0x7822: and r12d,eax
0x7825: movzx eax,byte ptr [rbp-0x2f9]
0x782c: add rsp,0x20
0x7830: or byte ptr [r13+0x0],al
0x7834: mov rdi,r14
0x7837: call 0x2c80
0x783c: mov rdi,rbx
0x783f: call 0x2c80
0x7844: cmp [rbp-0x2f9],0x0
0x784b: jz 0x7790
0x7851: movzx r14d,byte ptr [rbp-0x370]
0x7859: mov rbx,qword ptr [rbp-0x378]
0x7860: mov r13d,dword ptr [rbp-0x380]
0x78a5: nop qword ptr [rax]
0x791f: nop 
0x79ab: jmp 0x6a46
0x79ca: nop qword ptr [rax+rax*1+0x0]
0x7a52: mov rsi,qword ptr [rbp-0x310]
0x7a59: mov edi,0x4
0x7a5e: call 0xe6d0
0x7a63: lea rsi,[rip+0xe856]
0x7a6a: mov r12,rax
0x7a6d: mov edx,0x5
0x7a72: xor edi,edi
0x7a74: call 0x2730
0x7a79: mov rcx,r12
0x7a7c: mov rdx,rax
0x7a7f: xor esi,esi
0x7a8a: xor r8d,r8d
0x7a8d: mov [rbp-0x330],0x0
0x7aea: nop qword ptr [rax+rax*1+0x0]
0x7b14: nop qword ptr [rax+0x0]
0x7b64: mov rdi,r12
0x7b67: call 0x2c80
0x7b6c: mov rdx,qword ptr [rbp-0x308]
0x7b73: mov esi,0x3
0x7b78: xor edi,edi
0x7b7a: call 0xe7d0
0x7b7f: mov edx,0x5
0x7b84: mov r12,rax
0x7b87: lea rsi,[rip+0xe7da]
0x7b8e: jmp 0x64e8
0x7c0f: nop 
0x7c6c: nop qword ptr [rax+0x0]
0x7d8d: jmp 0x6186
0x7e31: nop qword ptr [rax+0x0]
0x8042: cmp [rbx+0x18],0x0
0x8046: jnz 0x6bc4
0x804c: jmp 0x6180
0x80ae: jmp 0x6186
0x82aa: xor r12d,r12d
0x82ad: jmp 0x6186
0x83ff: nop 
0x8547: mov rdi,qword ptr [rbp-0x330]
0x854e: call 0x2c80
0x8553: jmp 0x68d0
0x859b: jmp 0x7883
0x863e: jmp 0x68d0
0x8a55: nop qword ptr [rax]
0x8af3: lea eax,[r13+0x1]
0x8af7: cmp rax,qword ptr [rbp-0x2d8]
0x8afe: mov rcx,r12
0x8b01: mov rdx,rbx
0x8b04: mov r13,rax
0x8b07: jnb 0x950e
0x8c3f: xor r8d,r8d
0x8c42: jmp 0x7a98
0x8de5: movzx r9d,byte ptr [rbp-0x330]
0x8ded: xor r8d,r8d
0x8df0: mov [rbp-0x330],0x0
0x8dfb: mov r14d,r9d
0x8dfe: jmp 0x7a98
0x9151: movzx r8d,byte ptr [rbx+0x30]
0x9156: test r8b,r8b
0x9159: jz 0x9947
0x915f: mov edx,dword ptr [rbp-0x330]
0x9165: mov rdi,qword ptr [rbp-0x308]
0x916c: mov esi,0x41
0x9171: xor eax,eax
0x9173: call 0xb1f0
0x9178: mov r8d,dword ptr [r12]
0x917c: mov dword ptr [rbp-0x328],eax
0x93a7: cmp [rbx+0x24],0x0
0x93ab: jz 0x8f04
0x93b1: jmp 0x8bd2
0x93fe: xor r8d,r8d
0x9401: mov [rbp-0x330],0x0
0x940c: jmp 0x8bd5
0x9502: jmp 0x8bd2
0x9621: add rax,0x1
0x9625: mov qword ptr [rbp-0x370],rax
0x962c: jmp 0x8943
0x971c: xor r8d,r8d
0x971f: mov [rbp-0x330],0x0
0x972a: jmp 0x8bd5
0x986b: jmp 0x8bc6
0x9883: mov edx,0x5
0x9888: mov r12,rax
0x988b: lea rsi,[rip+0xca8e]
0x9892: jmp 0x94da
0x9934: movzx r8d,byte ptr [rbx+0x24]
0x9939: test r8b,r8b
0x993c: jnz 0x68d0
0x9942: jmp 0x5ebf
0x9947: mov rsi,qword ptr [rbp-0x308]
0x994e: mov edi,0x4
0x9953: mov byte ptr [rbp-0x328],r8b
0x995a: call 0xe6d0
0x995f: lea rsi,[rip+0xc992]
0x9966: mov r12,rax
0x9969: mov edx,0x5
0x996e: xor edi,edi
0x9970: call 0x2730
0x9975: mov rcx,r12
0x9978: mov rdx,rax
0x997b: xor esi,esi
0x997d: xor edi,edi
0x997f: xor eax,eax
0x9981: call 0x2b10
0x9986: mov [rbp-0x330],0x0
0x9991: movzx r8d,byte ptr [rbp-0x328]
0x9999: jmp 0x7a98
0x9ad5: add rsp,0x20
0x9ad9: mov rsi,qword ptr [rsp+0x8]
0x9ade: xor rsi,0x28
0x9ae7: jnz 0x9b34
0x9ae9: add rsp,0x18
0x9aed: ret
0x9aee: nop 
0x9b34: call 0x2780
0x9b96: lea rcx,[rip+0xcc1b]
0x9b9d: lea rsi,[rip+0xcbe9]
0x9ba4: lea rdi,[rip+0xcbff]
0x9bab: mov edx,0xb86
0x9bb0: call 0x2820
0x9bdc: nop qword ptr [rax+0x0]
0x9bf0: push rbx
0x9bf1: mov rbx,rdi
0x9bf4: mov rdi,qword ptr [rdi+0x10]
0x9bf8: call 0x2c80
0x9bfd: mov rdi,rbx
0x9c00: pop rbx
0x9c01: jmp 0x2c80
0x9cca: nop qword ptr [rax+rax*1+0x0]
0x9d4f: nop 
0x9da0: mov rdi,qword ptr [rip+0x2127b1]
0x9da7: jmp 0xc240
0x9f69: nop qword ptr [rax+0x0]
0x9fe9: nop qword ptr [rax+0x0]
0xa045: nop qword ptr [rax]
0xa05a: nop qword ptr [rax+rax*1+0x0]
0xa076: nop qword ptr [rax+rax*1+0x0]
0xa0a2: nop qword ptr [rax+rax*1+0x0]
0xa0e8: call 0x2780
0xa27b: nop qword ptr [rax+rax*1+0x0]
0xa2a2: nop qword ptr [rax+rax*1+0x0]
0xa3d2: nop qword ptr [rax+rax*1+0x0]
0xa3f9: nop qword ptr [rax+0x0]
0xa4b9: nop qword ptr [rax+0x0]
0xa4e5: mov eax,ebx
0xa4e7: pop rbx
0xa4e8: pop rbp
0xa4e9: pop r12
0xa4eb: ret
0xa5dd: nop qword ptr [rax]
0xa5f1: nop qword ptr [rax+0x0]
0xa60e: nop 
0xa618: nop qword ptr [rax+rax*1+0x0]
0xa64e: nop 
0xa65f: nop 
0xaa39: nop qword ptr [rax+0x0]
0xaa5f: nop 
0xab1c: nop qword ptr [rax+0x0]
0xab66: nop qword ptr [rax+rax*1+0x0]
0xab7a: nop qword ptr [rax+rax*1+0x0]
0xab9b: nop qword ptr [rax+rax*1+0x0]
0xabd4: nop qword ptr [rax+0x0]
0xac64: call 0xa630
0xac69: mov rdi,qword ptr [rip+0x2118f0]
0xac70: jmp 0xa6e3
0xacf0: sub rsp,0x8
0xacf4: xor ecx,ecx
0xacf6: call 0xa680
0xacfb: test rax,rax
0xacfe: jz 0xad05
0xad00: add rsp,0x8
0xad04: ret
0xad05: call 0x10f10
0xad10: test rsi,rsi
0xad13: jz 0xad20
0xad15: cmp [rsi],0x0
0xad18: jz 0xad20
0xad1a: jmp 0xacb0
0xad1c: nop qword ptr [rax+0x0]
0xad20: mov eax,0x2
0xad25: ret
0xad67: nop qword ptr [rax+rax*1+0x0]
0xada2: nop qword ptr [rax+rax*1+0x0]
0xade3: nop qword ptr [rax+rax*1+0x0]
0xadf0: mov qword ptr [rip+0x211771],rdi
0xadf7: ret
0xae00: push r12
0xae02: push rbp
0xae03: push rbx
0xae04: mov rbx,qword ptr [rip+0x2112c5]
0xae0b: mov rdi,rbx
0xae0e: call 0x110b0
0xae13: test rax,rax
0xae16: jnz 0xaeb8
0xae1c: mov rdi,rbx
0xae1f: call 0x139f0
0xae24: test eax,eax
0xae26: jnz 0xae58
0xae28: pop rbx
0xae29: pop rbp
0xae2a: pop r12
0xae2c: jmp 0xaf30
0xae31: nop qword ptr [rax+0x0]
0xae38: call 0x11070
0xae3d: test eax,eax
0xae3f: mov rdi,qword ptr [rip+0x21128a]
0xae46: jz 0xaed6
0xae4c: call 0x139f0
0xae51: nop qword ptr [rax+0x0]
0xae58: lea rsi,[rip+0xbaa1]
0xae5f: xor edi,edi
0xae61: mov edx,0x5
0xae66: call 0x2730
0xae6b: mov rbx,qword ptr [rip+0x2116f6]
0xae72: mov r12,rax
0xae75: call 0x25a0
0xae7a: mov rbp,rax
0xae7d: test rbx,rbx
0xae80: jz 0xaef0
0xae82: mov rdi,rbx
0xae85: call 0xe7a0
0xae8a: mov esi,dword ptr [rbp+0x0]
0xae8d: lea rdx,[rip+0xba7f]
0xae94: mov rcx,rax
0xae97: mov r8,r12
0xae9a: xor edi,edi
0xae9c: xor eax,eax
0xae9e: call 0x2b10
0xaea3: call 0xaf30
0xaea8: mov edi,dword ptr [rip+0x21117a]
0xaeae: call 0x25d0
0xaeb3: nop qword ptr [rax+rax*1+0x0]
0xaeb8: xor esi,esi
0xaeba: mov rdi,rbx
0xaebd: mov edx,0x1
0xaec2: call 0x110e0
0xaec7: test eax,eax
0xaec9: mov rdi,qword ptr [rip+0x211200]
0xaed0: jz 0xae38
0xaed6: call 0x139f0
0xaedb: test eax,eax
0xaedd: jnz 0xae58
0xaee3: pop rbx
0xaee4: pop rbp
0xaee5: pop r12
0xaee7: jmp 0xaf30
0xaeec: nop qword ptr [rax+0x0]
0xaef0: mov esi,dword ptr [rax]
0xaef2: lea rdx,[rip+0xc54e]
0xaef9: mov rcx,r12
0xaefc: xor edi,edi
0xaefe: xor eax,eax
0xaf00: call 0x2b10
0xaf05: jmp 0xaea3
0xaf10: mov qword ptr [rip+0x211661],rdi
0xaf17: ret
0xaf20: mov byte ptr [rip+0x211649],dil
0xaf27: ret
0xaf30: push rbp
0xaf31: push rbx
0xaf32: sub rsp,0x8
0xaf36: mov rdi,qword ptr [rip+0x21118b]
0xaf3d: call 0x139f0
0xaf42: test eax,eax
0xaf44: jz 0xaf5c
0xaf46: call 0x25a0
0xaf4b: cmp [rip+0x21161e],0x0
0xaf52: mov rbx,rax
0xaf55: jz 0xaf73
0xaf57: cmp [rax],0x20
0xaf5a: jnz 0xaf73
0xaf5c: mov rdi,qword ptr [rip+0x21119d]
0xaf63: call 0x139f0
0xaf68: test eax,eax
0xaf6a: jnz 0xafb2
0xaf6c: add rsp,0x8
0xaf70: pop rbx
0xaf71: pop rbp
0xaf72: ret
0xaf73: lea rsi,[rip+0xb9a0]
0xaf7a: xor edi,edi
0xaf7c: mov edx,0x5
0xaf81: call 0x2730
0xaf86: mov rdi,qword ptr [rip+0x2115eb]
0xaf8d: mov rbp,rax
0xaf90: test rdi,rdi
0xaf93: jz 0xafbd
0xaf95: call 0xe7a0
0xaf9a: mov esi,dword ptr [rbx]
0xaf9c: lea rdx,[rip+0xb970]
0xafa3: mov rcx,rax
0xafa6: mov r8,rbp
0xafa9: xor edi,edi
0xafab: xor eax,eax
0xafad: call 0x2b10
0xafb2: mov edi,dword ptr [rip+0x211070]
0xafb8: call 0x25d0
0xafbd: mov esi,dword ptr [rbx]
0xafbf: lea rdx,[rip+0xc481]
0xafc6: mov rcx,rax
0xafc9: xor edi,edi
0xafcb: xor eax,eax
0xafcd: call 0x2b10
0xafd2: jmp 0xafb2
0xb02e: nop 
0xb04d: nop qword ptr [rax]
0xb0e7: nop qword ptr [rax+rax*1+0x0]
0xb13c: nop qword ptr [rax+0x0]
0xb15e: nop 
0xb1c0: test rdi,rdi
0xb1c3: jz 0xb1e0
0xb1c5: push rbx
0xb1c6: mov ebx,esi
0xb1c8: call 0x29c0
0xb1cd: mov ecx,ebx
0xb1cf: xor edx,edx
0xb1d1: xor esi,esi
0xb1d3: pop rbx
0xb1d4: mov edi,eax
0xb1d6: jmp 0x28b0
0xb1db: nop qword ptr [rax+rax*1+0x0]
0xb1e0: rep ret
0xb234: nop qword ptr [rax+0x0]
0xb238: lea rax,[rsp+0x60]
0xb23d: mov [rsp],0x10
0xb244: mov edx,dword ptr [rsp+0x30]
0xb248: mov qword ptr [rsp+0x8],rax
0xb24d: lea rax,[rsp+0x20]
0xb252: mov qword ptr [rsp+0x10],rax
0xb257: jmp 0xb211
0xb259: call 0x2780
0xb2c7: nop qword ptr [rax+rax*1+0x0]
0xb2db: nop qword ptr [rax+rax*1+0x0]
0xb350: mov eax,dword ptr [rdi+0x18]
0xb353: mov edx,0x5
0xb358: and eax,0xf000
0xb35d: cmp eax,0x8000
0xb362: jz 0xb3b0
0xb364: cmp eax,0x4000
0xb369: jz 0xb400
0xb36f: cmp eax,0xa000
0xb374: jz 0xb3e0
0xb376: cmp eax,0x6000
0xb37b: jz 0xb410
0xb381: cmp eax,0x2000
0xb386: jz 0xb420
0xb38c: cmp eax,0x1000
0xb391: jz 0xb430
0xb397: cmp eax,0xc000
0xb39c: jz 0xb3f0
0xb39e: lea rsi,[rip+0xb5e5]
0xb3a5: xor edi,edi
0xb3a7: jmp 0x2730
0xb3ac: nop qword ptr [rax+0x0]
0xb3b0: cmp [rdi+0x30],0x0
0xb3b5: jnz 0xb3c8
0xb3b7: lea rsi,[rip+0xb568]
0xb3be: xor edi,edi
0xb3c0: jmp 0x2730
0xb3c5: nop qword ptr [rax]
0xb3c8: lea rsi,[rip+0xb56a]
0xb3cf: xor edi,edi
0xb3d1: jmp 0x2730
0xb3d6: nop qword ptr [rax+rax*1+0x0]
0xb3e0: lea rsi,[rip+0xb55f]
0xb3e7: xor edi,edi
0xb3e9: jmp 0x2730
0xb3ee: nop 
0xb3f0: lea rsi,[rip+0xb58c]
0xb3f7: xor edi,edi
0xb3f9: jmp 0x2730
0xb3fe: nop 
0xb400: lea rsi,[rip+0x9c13]
0xb407: xor edi,edi
0xb409: jmp 0x2730
0xb40e: nop 
0xb410: lea rsi,[rip+0xb53d]
0xb417: xor edi,edi
0xb419: jmp 0x2730
0xb41e: nop 
0xb420: lea rsi,[rip+0xb540]
0xb427: xor edi,edi
0xb429: jmp 0x2730
0xb42e: nop 
0xb430: lea rsi,[rip+0xb547]
0xb437: xor edi,edi
0xb439: jmp 0x2730
0xb58b: nop qword ptr [rax+rax*1+0x0]
0xb59b: nop qword ptr [rax+rax*1+0x0]
0xb5b3: nop qword ptr [rax+rax*1+0x0]
0xb5d0: mov edi,dword ptr [rdi+0x18]
0xb5d3: jmp 0xb440
0xb66c: nop qword ptr [rax+0x0]
0xb6e8: nop qword ptr [rax+rax*1+0x0]
0xb71d: nop qword ptr [rax]
0xb752: nop qword ptr [rax+rax*1+0x0]
0xb7de: nop 
0xb820: mov rax,rdi
0xb823: xor edx,edx
0xb825: ror rax,0x3
0xb829: div rsi
0xb82c: mov rax,rdx
0xb82f: ret
0xb830: cmp rdi,rsi
0xb833: setz al
0xb836: ret
0xb8cb: nop qword ptr [rax+rax*1+0x0]
0xb92a: nop qword ptr [rax+rax*1+0x0]
0xb969: nop qword ptr [rax+0x0]
0xb979: nop qword ptr [rax+0x0]
0xba51: nop qword ptr [rax+0x0]
0xbb1c: nop qword ptr [rax+0x0]
0xbb2a: nop qword ptr [rax+rax*1+0x0]
0xbb50: mov rax,qword ptr [rdi+0x10]
0xbb54: ret
0xbb60: mov rax,qword ptr [rdi+0x18]
0xbb64: ret
0xbb70: mov rax,qword ptr [rdi+0x20]
0xbb74: ret
0xbb80: mov rsi,qword ptr [rdi]
0xbb83: mov rdi,qword ptr [rdi+0x8]
0xbb87: xor eax,eax
0xbb89: cmp rsi,rdi
0xbb8c: jnb 0xbbc7
0xbb8e: nop 
0xbb90: cmp [rsi],0x0
0xbb94: jz 0xbbbc
0xbb96: mov rdx,qword ptr [rsi+0x8]
0xbb9a: mov ecx,0x1
0xbb9f: test rdx,rdx
0xbba2: jz 0xbbb5
0xbba4: nop qword ptr [rax+0x0]
0xbba8: mov rdx,qword ptr [rdx+0x8]
0xbbac: add rcx,0x1
0xbbb0: test rdx,rdx
0xbbb3: jnz 0xbba8
0xbbb5: cmp rax,rcx
0xbbb8: cmovnae rax,rcx
0xbbbc: add rsi,0x10
0xbbc0: cmp rsi,rdi
0xbbc3: jb 0xbb90
0xbbc5: rep ret
0xbbc7: rep ret
0xbbd0: mov rcx,qword ptr [rdi]
0xbbd3: mov r8,qword ptr [rdi+0x8]
0xbbd7: xor edx,edx
0xbbd9: xor esi,esi
0xbbdb: cmp rcx,r8
0xbbde: jnb 0xbc16
0xbbe0: cmp [rcx],0x0
0xbbe4: jz 0xbc0d
0xbbe6: mov rax,qword ptr [rcx+0x8]
0xbbea: add rsi,0x1
0xbbee: add rdx,0x1
0xbbf2: test rax,rax
0xbbf5: jz 0xbc0d
0xbbf7: nop qword ptr [rax+rax*1+0x0]
0xbc00: mov rax,qword ptr [rax+0x8]
0xbc04: add rdx,0x1
0xbc08: test rax,rax
0xbc0b: jnz 0xbc00
0xbc0d: add rcx,0x10
0xbc11: cmp rcx,r8
0xbc14: jb 0xbbe0
0xbc16: xor eax,eax
0xbc18: cmp qword ptr [rdi+0x18],rsi
0xbc1c: jz 0xbc20
0xbc1e: rep ret
0xbc20: cmp qword ptr [rdi+0x20],rdx
0xbc24: setz al
0xbc27: ret
0xbc30: push r13
0xbc32: push r12
0xbc34: mov r12,rsi
0xbc37: push rbp
0xbc38: push rbx
0xbc39: xor ebx,ebx
0xbc3b: sub rsp,0x8
0xbc3f: mov rsi,qword ptr [rdi]
0xbc42: mov rcx,qword ptr [rdi+0x20]
0xbc46: mov rbp,qword ptr [rdi+0x10]
0xbc4a: mov r13,qword ptr [rdi+0x18]
0xbc4e: mov rdi,qword ptr [rdi+0x8]
0xbc52: cmp rsi,rdi
0xbc55: jnb 0xbc95
0xbc57: nop qword ptr [rax+rax*1+0x0]
0xbc60: cmp [rsi],0x0
0xbc64: jz 0xbc8c
0xbc66: mov rax,qword ptr [rsi+0x8]
0xbc6a: mov edx,0x1
0xbc6f: test rax,rax
0xbc72: jz 0xbc85
0xbc74: nop qword ptr [rax+0x0]
0xbc78: mov rax,qword ptr [rax+0x8]
0xbc7c: add rdx,0x1
0xbc80: test rax,rax
0xbc83: jnz 0xbc78
0xbc85: cmp rbx,rdx
0xbc88: cmovnae rbx,rdx
0xbc8c: add rsi,0x10
0xbc90: cmp rsi,rdi
0xbc93: jb 0xbc60
0xbc95: lea rdx,[rip+0xacf9]
0xbc9c: mov esi,0x1
0xbca1: mov rdi,r12
0xbca4: xor eax,eax
0xbca6: call 0x2c20
0xbcab: lea rdx,[rip+0xacfb]
0xbcb2: xor eax,eax
0xbcb4: mov rcx,rbp
0xbcb7: mov esi,0x1
0xbcbc: mov rdi,r12
0xbcbf: call 0x2c20
0xbcc4: test r13,r13
0xbcc7: js 0xbd30
0xbcc9: pxor xmm0,xmm0
0xbccd: test rbp,rbp
0xbcd0: cvtsi2sd xmm0,r13
0xbcd5: mulsd xmm0,[rip+0xad6b]
0xbcdd: js 0xbd59
0xbcdf: pxor xmm1,xmm1
0xbce3: cvtsi2sd xmm1,rbp
0xbce8: divsd xmm0,xmm1
0xbcec: lea rdx,[rip+0xaced]
0xbcf3: mov rcx,r13
0xbcf6: mov rdi,r12
0xbcf9: mov esi,0x1
0xbcfe: mov eax,0x1
0xbd03: call 0x2c20
0xbd08: add rsp,0x8
0xbd0c: mov rcx,rbx
0xbd0f: mov rdi,r12
0xbd12: pop rbx
0xbd13: pop rbp
0xbd14: pop r12
0xbd16: pop r13
0xbd18: lea rdx,[rip+0xaca6]
0xbd1f: mov esi,0x1
0xbd24: xor eax,eax
0xbd26: jmp 0x2c20
0xbd2b: nop qword ptr [rax+rax*1+0x0]
0xbd30: mov rax,r13
0xbd33: mov rdx,r13
0xbd36: pxor xmm0,xmm0
0xbd3a: shr rax,0x1
0xbd3d: and edx,0x1
0xbd40: or rax,rdx
0xbd43: test rbp,rbp
0xbd46: cvtsi2sd xmm0,rax
0xbd4b: addsd xmm0,xmm0
0xbd4f: mulsd xmm0,[rip+0xacf1]
0xbd57: jns 0xbcdf
0xbd59: mov rax,rbp
0xbd5c: pxor xmm1,xmm1
0xbd60: shr rax,0x1
0xbd63: and ebp,0x1
0xbd66: or rax,rbp
0xbd69: cvtsi2sd xmm1,rax
0xbd6e: addsd xmm1,xmm1
0xbd72: jmp 0xbce8
0xbd9c: nop qword ptr [rax+0x0]
0xbdc7: nop qword ptr [rax+rax*1+0x0]
0xbde0: cmp [rdi+0x20],0x0
0xbde5: jz 0xbe13
0xbde7: mov rdx,qword ptr [rdi]
0xbdea: mov rcx,qword ptr [rdi+0x8]
0xbdee: cmp rdx,rcx
0xbdf1: jnb 0xbe18
0xbdf3: mov rax,qword ptr [rdx]
0xbdf6: test rax,rax
0xbdf9: jnz 0xbe16
0xbdfb: nop qword ptr [rax+rax*1+0x0]
0xbe00: add rdx,0x10
0xbe04: cmp rdx,rcx
0xbe07: jnb 0xbe18
0xbe09: mov rax,qword ptr [rdx]
0xbe0c: test rax,rax
0xbe0f: jz 0xbe00
0xbe11: rep ret
0xbe13: xor eax,eax
0xbe15: ret
0xbe16: rep ret
0xbe18: sub rsp,0x8
0xbe1c: call 0x2590
0xbe30: push rbp
0xbe31: push rbx
0xbe32: mov rbp,rdi
0xbe35: mov rbx,rsi
0xbe38: sub rsp,0x8
0xbe3c: call 0xb840
0xbe41: mov rdx,rax
0xbe44: mov rcx,rax
0xbe47: mov rax,qword ptr [rdx]
0xbe4a: mov rdx,qword ptr [rdx+0x8]
0xbe4e: cmp rax,rbx
0xbe51: jz 0xbe69
0xbe53: nop qword ptr [rax+rax*1+0x0]
0xbe58: test rdx,rdx
0xbe5b: jz 0xbe6e
0xbe5d: mov rax,qword ptr [rdx]
0xbe60: mov rdx,qword ptr [rdx+0x8]
0xbe64: cmp rax,rbx
0xbe67: jnz 0xbe58
0xbe69: test rdx,rdx
0xbe6c: jnz 0xbe98
0xbe6e: mov rdx,qword ptr [rbp+0x8]
0xbe72: jmp 0xbe80
0xbe74: nop qword ptr [rax+0x0]
0xbe78: mov rax,qword ptr [rcx]
0xbe7b: test rax,rax
0xbe7e: jnz 0xbe8b
0xbe80: add rcx,0x10
0xbe84: cmp rdx,rcx
0xbe87: jnbe 0xbe78
0xbe89: xor eax,eax
0xbe8b: add rsp,0x8
0xbe8f: pop rbx
0xbe90: pop rbp
0xbe91: ret
0xbe92: nop qword ptr [rax+rax*1+0x0]
0xbe98: mov rax,qword ptr [rdx]
0xbe9b: add rsp,0x8
0xbe9f: pop rbx
0xbea0: pop rbp
0xbea1: ret
0xbeb0: mov r9,qword ptr [rdi]
0xbeb3: cmp qword ptr [rdi+0x8],r9
0xbeb7: jbe 0xbf12
0xbeb9: xor r8d,r8d
0xbebc: mov rcx,qword ptr [r9]
0xbebf: test rcx,rcx
0xbec2: jz 0xbefd
0xbec4: cmp rdx,r8
0xbec7: jbe 0xbf07
0xbec9: mov qword ptr [rsi+r8*8+0x0],rcx
0xbecd: mov rcx,qword ptr [r9+0x8]
0xbed1: lea rax,[r8+0x1]
0xbed5: test rcx,rcx
0xbed8: jz 0xbefa
0xbeda: nop qword ptr [rax+rax*1+0x0]
0xbee0: cmp rdx,rax
0xbee3: jz 0xbf10
0xbee5: mov r8,qword ptr [rcx]
0xbee8: add rax,0x1
0xbeec: mov qword ptr [rsi+rax*8-0x8],r8
0xbef1: mov rcx,qword ptr [rcx+0x8]
0xbef5: test rcx,rcx
0xbef8: jnz 0xbee0
0xbefa: mov r8,rax
0xbefd: add r9,0x10
0xbf01: cmp qword ptr [rdi+0x8],r9
0xbf05: jnbe 0xbebc
0xbf07: mov rax,r8
0xbf0a: ret
0xbf0b: nop qword ptr [rax+rax*1+0x0]
0xbf10: rep ret
0xbf12: xor eax,eax
0xbf14: ret
0xbf20: push r15
0xbf22: push r14
0xbf24: push r13
0xbf26: push r12
0xbf28: push rbp
0xbf29: push rbx
0xbf2a: sub rsp,0x8
0xbf2e: mov r14,qword ptr [rdi]
0xbf31: cmp qword ptr [rdi+0x8],r14
0xbf35: jbe 0xbf86
0xbf37: mov r13,rdx
0xbf3a: mov r12,rsi
0xbf3d: mov r15,rdi
0xbf40: xor ebp,ebp
0xbf42: mov rdi,qword ptr [r14]
0xbf45: test rdi,rdi
0xbf48: jz 0xbf6a
0xbf4a: mov rbx,r14
0xbf4d: jmp 0xbf53
0xbf4f: nop 
0xbf50: mov rdi,qword ptr [rbx]
0xbf53: mov rsi,r13
0xbf56: call r12
0xbf59: test al,al
0xbf5b: jz 0xbf74
0xbf5d: mov rbx,qword ptr [rbx+0x8]
0xbf61: add rbp,0x1
0xbf65: test rbx,rbx
0xbf68: jnz 0xbf50
0xbf6a: add r14,0x10
0xbf6e: cmp qword ptr [r15+0x8],r14
0xbf72: jnbe 0xbf42
0xbf74: add rsp,0x8
0xbf78: mov rax,rbp
0xbf7b: pop rbx
0xbf7c: pop rbp
0xbf7d: pop r12
0xbf7f: pop r13
0xbf81: pop r14
0xbf83: pop r15
0xbf85: ret
0xbf86: xor ebp,ebp
0xbf88: jmp 0xbf74
0xbf90: movzx ecx,byte ptr [rdi]
0xbf93: xor edx,edx
0xbf95: test cl,cl
0xbf97: jz 0xbfbd
0xbf99: nop qword ptr [rax+0x0]
0xbfa0: mov rax,rdx
0xbfa3: add rdi,0x1
0xbfa7: shl rax,0x5
0xbfab: sub rax,rdx
0xbfae: xor edx,edx
0xbfb0: add rax,rcx
0xbfb3: movzx ecx,byte ptr [rdi]
0xbfb6: div rsi
0xbfb9: test cl,cl
0xbfbb: jnz 0xbfa0
0xbfbd: mov rax,rdx
0xbfc0: ret
0xbfd0: mov rax,0x4575657221408423936
0xbfda: mov [rdi+0x10],0x0
0xbfde: mov qword ptr [rdi],rax
0xbfe1: mov rax,0x4590573145673223373
0xbfeb: mov qword ptr [rdi+0x8],rax
0xbfef: ret
0xc04c: mov qword ptr [rax+0x28],r15
0xc050: call 0xb990
0xc055: test al,al
0xc057: jz 0xc0e0
0xc05d: cmp [r15+0x10],0x0
0xc062: jz 0xc160
0xc0df: nop 
0xc0fc: nop qword ptr [rax+0x0]
0xc15f: nop 
0xc160: test rbp,rbp
0xc163: movss xmm1,[r15+0x8]
0xc169: jns 0xc121
0xc186: nop qword ptr [rax+rax*1+0x0]
0xc1b0: push r12
0xc1b2: push rbp
0xc1b3: mov rbp,rdi
0xc1b6: push rbx
0xc1b7: mov r12,qword ptr [rdi]
0xc1ba: cmp r12,qword ptr [rdi+0x8]
0xc1be: jnb 0xc22b
0xc1c0: cmp [r12],0x0
0xc1c5: jz 0xc221
0xc1c7: mov rbx,qword ptr [r12+0x8]
0xc1cc: mov rax,qword ptr [rbp+0x40]
0xc1d0: test rbx,rbx
0xc1d3: jz 0xc205
0xc1d5: nop qword ptr [rax]
0xc1d8: test rax,rax
0xc1db: jz 0xc1e6
0xc1dd: mov rdi,qword ptr [rbx]
0xc1e0: call rax
0xc1e2: mov rax,qword ptr [rbp+0x40]
0xc1e6: mov rdx,qword ptr [rbx+0x8]
0xc1ea: mov rcx,qword ptr [rbp+0x48]
0xc1ee: mov [rbx],0x0
0xc1f5: test rdx,rdx
0xc1f8: mov qword ptr [rbx+0x8],rcx
0xc1fc: mov qword ptr [rbp+0x48],rbx
0xc200: mov rbx,rdx
0xc203: jnz 0xc1d8
0xc205: test rax,rax
0xc208: jz 0xc210
0xc20a: mov rdi,qword ptr [r12]
0xc20e: call rax
0xc210: mov [r12],0x0
0xc218: mov [r12+0x8],0x0
0xc221: add r12,0x10
0xc225: cmp qword ptr [rbp+0x8],r12
0xc229: jnbe 0xc1c0
0xc22b: mov [rbp+0x18],0x0
0xc233: mov [rbp+0x20],0x0
0xc23b: pop rbx
0xc23c: pop rbp
0xc23d: pop r12
0xc23f: ret
0xc240: push r12
0xc242: push rbp
0xc243: mov r12,rdi
0xc246: push rbx
0xc247: cmp [rdi+0x40],0x0
0xc24c: mov rbp,qword ptr [rdi]
0xc24f: mov rax,qword ptr [rdi+0x8]
0xc253: jz 0xc2a3
0xc255: cmp [rdi+0x20],0x0
0xc25a: jz 0xc2a3
0xc25c: cmp rbp,rax
0xc25f: jnb 0xc2dc
0xc261: nop qword ptr [rax+0x0]
0xc268: mov rdi,qword ptr [rbp+0x0]
0xc26c: test rdi,rdi
0xc26f: jz 0xc296
0xc271: mov rbx,rbp
0xc274: jmp 0xc283
0xc276: nop qword ptr [rax+rax*1+0x0]
0xc280: mov rdi,qword ptr [rbx]
0xc283: call qword ptr [r12+0x40]
0xc288: mov rbx,qword ptr [rbx+0x8]
0xc28c: test rbx,rbx
0xc28f: jnz 0xc280
0xc291: mov rax,qword ptr [r12+0x8]
0xc296: add rbp,0x10
0xc29a: cmp rax,rbp
0xc29d: jnbe 0xc268
0xc29f: mov rbp,qword ptr [r12]
0xc2a3: cmp rbp,rax
0xc2a6: jnb 0xc2dc
0xc2a8: nop qword ptr [rax+rax*1+0x0]
0xc2b0: mov rdi,qword ptr [rbp+0x8]
0xc2b4: test rdi,rdi
0xc2b7: jz 0xc2d1
0xc2b9: nop qword ptr [rax+0x0]
0xc2c0: mov rbx,qword ptr [rdi+0x8]
0xc2c4: call 0x2c80
0xc2c9: test rbx,rbx
0xc2cc: mov rdi,rbx
0xc2cf: jnz 0xc2c0
0xc2d1: add rbp,0x10
0xc2d5: cmp qword ptr [r12+0x8],rbp
0xc2da: jnbe 0xc2b0
0xc2dc: mov rdi,qword ptr [r12+0x48]
0xc2e1: test rdi,rdi
0xc2e4: jz 0xc301
0xc2e6: nop qword ptr [rax+rax*1+0x0]
0xc2f0: mov rbx,qword ptr [rdi+0x8]
0xc2f4: call 0x2c80
0xc2f9: test rbx,rbx
0xc2fc: mov rdi,rbx
0xc2ff: jnz 0xc2f0
0xc301: mov rdi,qword ptr [r12]
0xc305: call 0x2c80
0xc30a: pop rbx
0xc30b: mov rdi,r12
0xc30e: pop rbp
0xc30f: pop r12
0xc311: jmp 0x2c80
0xc477: test al,al
0xc479: jz 0xc559
0xc47f: xor edx,edx
0xc481: mov rsi,r12
0xc484: mov rdi,rbp
0xc487: call 0xba10
0xc48c: test al,al
0xc48e: jz 0xc559
0xc494: mov rdi,qword ptr [rsp]
0xc498: call 0x2c80
0xc49d: jmp 0xc4a2
0xc49f: nop 
0xc4c1: nop qword ptr [rax+0x0]
0xc4e6: nop qword ptr [rax+rax*1+0x0]
0xc4fa: nop qword ptr [rax+rax*1+0x0]
0xc507: nop qword ptr [rax+rax*1+0x0]
0xc559: call 0x2590
0xc5cb: nop qword ptr [rax+rax*1+0x0]
0xc64e: nop 
0xc698: nop qword ptr [rax+rax*1+0x0]
0xc742: nop qword ptr [rax+rax*1+0x0]
0xc77d: nop qword ptr [rax]
0xc79e: nop 
0xc7be: nop 
0xc7df: call 0x2780
0xc836: nop qword ptr [rax+rax*1+0x0]
0xc844: call 0x2780
0xc8af: nop 
0xc996: nop qword ptr [rax+rax*1+0x0]
0xc9be: nop 
0xc9de: nop 
0xc9ff: nop 
0xca0a: nop qword ptr [rax+rax*1+0x0]
0xca2e: nop 
0xca60: push rbp
0xca61: push rbx
0xca62: mov rbp,rdi
0xca65: mov rbx,rsi
0xca68: sub rsp,0x8
0xca6c: mov rdi,qword ptr [rdi]
0xca6f: call 0x13c70
0xca74: xor rax,qword ptr [rbp+0x8]
0xca78: xor edx,edx
0xca7a: add rsp,0x8
0xca7e: div rbx
0xca81: pop rbx
0xca82: pop rbp
0xca83: mov rax,rdx
0xca86: ret
0xca90: mov rax,qword ptr [rdi+0x8]
0xca94: xor edx,edx
0xca96: div rsi
0xca99: mov rax,rdx
0xca9c: ret
0xcaa0: xor eax,eax
0xcaa2: mov rdx,qword ptr [rsi+0x8]
0xcaa6: cmp qword ptr [rdi+0x8],rdx
0xcaaa: jz 0xcab0
0xcaac: rep ret
0xcaae: nop 
0xcab0: mov rcx,qword ptr [rsi+0x10]
0xcab4: cmp qword ptr [rdi+0x10],rcx
0xcab8: jnz 0xcaac
0xcaba: sub rsp,0x8
0xcabe: mov rsi,qword ptr [rsi]
0xcac1: mov rdi,qword ptr [rdi]
0xcac4: call 0xeee0
0xcac9: add rsp,0x8
0xcacd: ret
0xcad0: xor eax,eax
0xcad2: mov rdx,qword ptr [rsi+0x8]
0xcad6: cmp qword ptr [rdi+0x8],rdx
0xcada: jz 0xcae0
0xcadc: rep ret
0xcade: nop 
0xcae0: mov rcx,qword ptr [rsi+0x10]
0xcae4: cmp qword ptr [rdi+0x10],rcx
0xcae8: jnz 0xcadc
0xcaea: sub rsp,0x8
0xcaee: mov rsi,qword ptr [rsi]
0xcaf1: mov rdi,qword ptr [rdi]
0xcaf4: call 0x2930
0xcaf9: test eax,eax
0xcafb: setz al
0xcafe: add rsp,0x8
0xcb02: ret
0xcb71: nop qword ptr [rax+0x0]
0xcb9c: nop qword ptr [rax+0x0]
0xccb5: nop qword ptr [rax]
0xccb8: mov ebp,0xfffffffe
0xccbd: jmp 0xcc9a
0xcd6c: nop qword ptr [rax+0x0]
0xcdbd: nop qword ptr [rax]
0xd0d7: nop qword ptr [rax+rax*1+0x0]
0xd10e: nop 
0xd131: nop qword ptr [rax+0x0]
0xd172: nop qword ptr [rax+rax*1+0x0]
0xd184: nop qword ptr [rax+0x0]
0xd228: nop qword ptr [rax+rax*1+0x0]
0xd251: nop qword ptr [rax+0x0]
0xd267: nop qword ptr [rax+rax*1+0x0]
0xd27f: nop 
0xd2ae: nop 
0xd2bd: nop qword ptr [rax]
0xd2cf: nop 
0xd2df: nop 
0xd2ef: nop 
0xd2ff: nop 
0xd30f: nop 
0xd37c: nop qword ptr [rax+0x0]
0xd39c: nop qword ptr [rax+0x0]
0xd3bf: nop 
0xd3d2: nop qword ptr [rax+rax*1+0x0]
0xd3ea: nop qword ptr [rax+rax*1+0x0]
0xd3fa: nop qword ptr [rax+rax*1+0x0]
0xd49b: nop qword ptr [rax+rax*1+0x0]
0xd4b5: nop qword ptr [rax]
0xd4c8: nop qword ptr [rax+rax*1+0x0]
0xd4e3: nop qword ptr [rax+rax*1+0x0]
0xd512: nop qword ptr [rax+rax*1+0x0]
0xd522: nop qword ptr [rax+rax*1+0x0]
0xd53a: nop qword ptr [rax+rax*1+0x0]
0xd54a: nop qword ptr [rax+rax*1+0x0]
0xd558: nop qword ptr [rax+rax*1+0x0]
0xd57f: nop 
0xd619: nop qword ptr [rax+0x0]
0xd662: nop qword ptr [rax+rax*1+0x0]
0xd6a1: nop qword ptr [rax+0x0]
0xd6c2: nop qword ptr [rax+rax*1+0x0]
0xd828: nop qword ptr [rax+rax*1+0x0]
0xd93b: nop qword ptr [rax+rax*1+0x0]
0xd95e: nop 
0xda25: nop qword ptr [rax]
0xdadd: nop qword ptr [rax]
0xdce6: nop qword ptr [rax+rax*1+0x0]
0xdd79: nop qword ptr [rax+0x0]
0xdecd: nop qword ptr [rax]
0xe1db: nop qword ptr [rax+rax*1+0x0]
0xe210: push r12
0xe212: push rbp
0xe213: push rbx
0xe214: mov rbx,rdi
0xe217: call 0x25a0
0xe21c: mov r12d,dword ptr [rax]
0xe21f: mov rbp,rax
0xe222: lea rax,[rip+0x20e477]
0xe229: test rbx,rbx
0xe22c: mov esi,0x38
0xe231: cmove rbx,rax
0xe235: mov rdi,rbx
0xe238: call 0x10ec0
0xe23d: mov dword ptr [rbp+0x0],r12d
0xe241: pop rbx
0xe242: pop rbp
0xe243: pop r12
0xe245: ret
0xe250: lea rax,[rip+0x20e449]
0xe257: test rdi,rdi
0xe25a: cmove rdi,rax
0xe25e: mov eax,dword ptr [rdi]
0xe260: ret
0xe270: lea rax,[rip+0x20e429]
0xe277: test rdi,rdi
0xe27a: cmove rdi,rax
0xe27e: mov dword ptr [rdi],esi
0xe280: ret
0xe290: lea rax,[rip+0x20e409]
0xe297: test rdi,rdi
0xe29a: mov ecx,esi
0xe29c: cmove rdi,rax
0xe2a0: mov eax,esi
0xe2a2: and ecx,0x1f
0xe2a5: shr al,0x5
0xe2a8: movzx eax,al
0xe2ab: lea rdi,[rdi+rax*4+0x8]
0xe2b0: mov esi,dword ptr [rdi]
0xe2b2: mov eax,esi
0xe2b4: shr eax,cl
0xe2b6: xor edx,eax
0xe2b8: and eax,0x1
0xe2bb: and edx,0x1
0xe2be: shl edx,cl
0xe2c0: xor edx,esi
0xe2c2: mov dword ptr [rdi],edx
0xe2c4: ret
0xe2d0: lea rax,[rip+0x20e3c9]
0xe2d7: test rdi,rdi
0xe2da: cmove rdi,rax
0xe2de: mov eax,dword ptr [rdi+0x4]
0xe2e1: mov dword ptr [rdi+0x4],esi
0xe2e4: ret
0xe2f0: lea rax,[rip+0x20e3a9]
0xe2f7: test rdi,rdi
0xe2fa: cmove rdi,rax
0xe2fe: test rsi,rsi
0xe301: mov [rdi],0xa
0xe307: jz 0xe317
0xe309: test rdx,rdx
0xe30c: jz 0xe317
0xe30e: mov qword ptr [rdi+0x28],rsi
0xe312: mov qword ptr [rdi+0x30],rdx
0xe316: ret
0xe317: sub rsp,0x8
0xe31b: call 0x2590
0xe320: push r15
0xe322: push r14
0xe324: lea rax,[rip+0x20e375]
0xe32b: push r13
0xe32d: push r12
0xe32f: mov r13,rdi
0xe332: push rbp
0xe333: push rbx
0xe334: mov rbx,r8
0xe337: mov r14,rsi
0xe33a: mov r15,rdx
0xe33d: sub rsp,0x18
0xe341: test r8,r8
0xe344: cmove rbx,rax
0xe348: mov qword ptr [rsp+0x8],rcx
0xe34d: call 0x25a0
0xe352: mov r12d,dword ptr [rax]
0xe355: mov rbp,rax
0xe358: lea rax,[rbx+0x8]
0xe35c: sub rsp,0x8
0xe360: mov r9d,dword ptr [rbx+0x4]
0xe364: push qword ptr [rbx+0x30]
0xe367: mov r8d,dword ptr [rbx]
0xe36a: push qword ptr [rbx+0x28]
0xe36d: mov rdx,r15
0xe370: push rax
0xe371: mov rcx,qword ptr [rsp+0x28]
0xe376: mov rsi,r14
0xe379: mov rdi,r13
0xe37c: call 0xce20
0xe381: mov dword ptr [rbp+0x0],r12d
0xe385: add rsp,0x38
0xe389: pop rbx
0xe38a: pop rbp
0xe38b: pop r12
0xe38d: pop r13
0xe38f: pop r14
0xe391: pop r15
0xe393: ret
0xe3a0: push r15
0xe3a2: push r14
0xe3a4: lea rax,[rip+0x20e2f5]
0xe3ab: push r13
0xe3ad: push r12
0xe3af: mov r12,rdx
0xe3b2: push rbp
0xe3b3: push rbx
0xe3b4: mov rbx,rcx
0xe3b7: mov r14,rdi
0xe3ba: mov r15,rsi
0xe3bd: sub rsp,0x38
0xe3c1: test rcx,rcx
0xe3c4: cmove rbx,rax
0xe3c8: xor ebp,ebp
0xe3ca: call 0x25a0
0xe3cf: test r12,r12
0xe3d2: mov r13,rax
0xe3d5: mov eax,dword ptr [rax]
0xe3d7: setz bpl
0xe3db: or ebp,dword ptr [rbx+0x4]
0xe3de: lea r10,[rbx+0x8]
0xe3e2: sub rsp,0x8
0xe3e6: mov r8d,dword ptr [rbx]
0xe3e9: mov rcx,r15
0xe3ec: mov dword ptr [rsp+0x14],eax
0xe3f0: push qword ptr [rbx+0x30]
0xe3f3: mov rdx,r14
0xe3f6: push qword ptr [rbx+0x28]
0xe3f9: push r10
0xe3fb: xor esi,esi
0xe3fd: mov r9d,ebp
0xe400: xor edi,edi
0xe402: mov qword ptr [rsp+0x40],r10
0xe407: call 0xce20
0xe40c: lea rsi,[rax+0x1]
0xe410: mov qword ptr [rsp+0x48],rax
0xe415: add rsp,0x20
0xe419: mov rdi,rsi
0xe41c: mov qword ptr [rsp+0x18],rsi
0xe421: call 0x10cc0
0xe426: mov qword ptr [rsp+0x10],rax
0xe42b: sub rsp,0x8
0xe42f: push qword ptr [rbx+0x30]
0xe432: push qword ptr [rbx+0x28]
0xe435: mov r10,qword ptr [rsp+0x38]
0xe43a: mov r9d,ebp
0xe43d: mov r8d,dword ptr [rbx]
0xe440: mov rcx,r15
0xe443: mov rdx,r14
0xe446: mov rdi,rax
0xe449: push r10
0xe44b: mov rsi,qword ptr [rsp+0x38]
0xe450: call 0xce20
0xe455: mov eax,dword ptr [rsp+0x2c]
0xe459: add rsp,0x20
0xe45d: test r12,r12
0xe460: mov dword ptr [r13+0x0],eax
0xe464: jz 0xe46f
0xe466: mov r11,qword ptr [rsp+0x28]
0xe46b: mov qword ptr [r12],r11
0xe46f: mov rax,qword ptr [rsp+0x10]
0xe474: add rsp,0x38
0xe478: pop rbx
0xe479: pop rbp
0xe47a: pop r12
0xe47c: pop r13
0xe47e: pop r14
0xe480: pop r15
0xe482: ret
0xe490: mov rcx,rdx
0xe493: xor edx,edx
0xe495: jmp 0xe3a0
0xe4a0: mov eax,dword ptr [rip+0x20dbd2]
0xe4a6: push r12
0xe4a8: mov r12,qword ptr [rip+0x20dbd1]
0xe4af: push rbp
0xe4b0: push rbx
0xe4b1: cmp eax,0x1
0xe4b4: jle 0xe4e1
0xe4b6: sub eax,0x2
0xe4b9: lea rbx,[r12+0x18]
0xe4be: shl rax,0x4
0xe4c2: lea rbp,[r12+rax*1+0x28]
0xe4c7: nop qword ptr [rax+rax*1+0x0]
0xe4d0: mov rdi,qword ptr [rbx]
0xe4d3: add rbx,0x10
0xe4d7: call 0x2c80
0xe4dc: cmp rbx,rbp
0xe4df: jnz 0xe4d0
0xe4e1: mov rdi,qword ptr [r12+0x8]
0xe4e6: lea rbx,[rip+0x20e0b3]
0xe4ed: cmp rdi,rbx
0xe4f0: jz 0xe509
0xe4f2: call 0x2c80
0xe4f7: mov [rip+0x20db8e],0x100
0xe502: mov qword ptr [rip+0x20db8f],rbx
0xe509: lea rbx,[rip+0x20db80]
0xe510: cmp r12,rbx
0xe513: jz 0xe524
0xe515: mov rdi,r12
0xe518: call 0x2c80
0xe51d: mov qword ptr [rip+0x20db5c],rbx
0xe524: pop rbx
0xe525: mov [rip+0x20db49],0x1
0xe52f: pop rbp
0xe530: pop r12
0xe532: ret
0xe540: lea rcx,[rip+0x20e159]
0xe547: mov rdx,0xffffffff
0xe54e: jmp 0xe060
0xe560: lea rcx,[rip+0x20e139]
0xe567: jmp 0xe060
0xe570: lea rcx,[rip+0x20e129]
0xe577: mov rsi,rdi
0xe57a: mov rdx,0xffffffff
0xe581: xor edi,edi
0xe583: jmp 0xe060
0xe590: lea rcx,[rip+0x20e109]
0xe597: mov rdx,rsi
0xe59a: mov rsi,rdi
0xe59d: xor edi,edi
0xe59f: jmp 0xe060
0xe634: call 0x2590
0xe640: sub rsp,0x48
0xe644: mov rax,rdx
0xe647: mov rdx,rcx
0xe64a: mov rcx,0x28
0xe653: mov qword ptr [rsp+0x38],rcx
0xe658: xor ecx,ecx
0xe65a: cmp esi,0xa
0xe65d: jz 0xe6c0
0xe65f: mov dword ptr [rsp],esi
0xe662: mov rcx,rsp
0xe665: mov rsi,rax
0xe668: mov [rsp+0x4],0x0
0xe671: mov [rsp+0xc],0x0
0xe67a: mov [rsp+0x14],0x0
0xe683: mov [rsp+0x1c],0x0
0xe68c: mov [rsp+0x24],0x0
0xe695: mov [rsp+0x2c],0x0
0xe69e: mov [rsp+0x34],0x0
0xe6a6: call 0xe060
0xe6ab: mov rdx,qword ptr [rsp+0x38]
0xe6b0: xor rdx,0x28
0xe6b9: jnz 0xe6c5
0xe6bb: add rsp,0x48
0xe6bf: ret
0xe6c0: call 0x2590
0xe6c5: call 0x2780
0xe6e0: mov rcx,rdx
0xe6e3: mov rdx,rsi
0xe6e6: mov esi,edi
0xe6e8: xor edi,edi
0xe6ea: jmp 0xe640
0xe6f0: sub rsp,0x48
0xe6f4: mov ecx,edx
0xe6f6: mov rax,0x28
0xe6ff: mov qword ptr [rsp+0x38],rax
0xe704: xor eax,eax
0xe706: mov rax,qword ptr [rip+0x20dfc3]
0xe70d: mov r8,rsp
0xe710: and ecx,0x1f
0xe713: movdqa xmm0,[rip+0x20df85]
0xe71b: mov qword ptr [rsp+0x30],rax
0xe720: mov eax,edx
0xe722: movaps [rsp],xmm0
0xe726: shr al,0x5
0xe729: movzx eax,al
0xe72c: lea r9,[r8+rax*4+0x8]
0xe731: movdqa xmm0,[rip+0x20df77]
0xe739: movaps [rsp+0x10],xmm0
0xe73e: movdqa xmm0,[rip+0x20df7a]
0xe746: movaps [rsp+0x20],xmm0
0xe74b: mov edx,dword ptr [r9]
0xe74e: mov eax,edx
0xe750: shr eax,cl
0xe752: not eax
0xe754: and eax,0x1
0xe757: shl eax,cl
0xe759: mov rcx,r8
0xe75c: xor eax,edx
0xe75e: mov rdx,rsi
0xe761: mov rsi,rdi
0xe764: mov dword ptr [r9],eax
0xe767: xor edi,edi
0xe769: call 0xe060
0xe76e: mov rsi,qword ptr [rsp+0x38]
0xe773: xor rsi,0x28
0xe77c: jnz 0xe783
0xe77e: add rsp,0x48
0xe782: ret
0xe783: call 0x2780
0xe790: movsx edx,sil
0xe794: mov rsi,0xffffffff
0xe79b: jmp 0xe6f0
0xe7a0: mov edx,0x3a
0xe7a5: mov rsi,0xffffffff
0xe7ac: jmp 0xe6f0
0xe7c0: mov edx,0x3a
0xe7c5: jmp 0xe6f0
0xe854: call 0x2590
0xe860: sub rsp,0x48
0xe864: mov r9,rcx
0xe867: mov rcx,qword ptr [rip+0x20de62]
0xe86e: movdqa xmm0,[rip+0x20de2a]
0xe876: mov rax,0x28
0xe87f: mov qword ptr [rsp+0x38],rax
0xe884: xor eax,eax
0xe886: movaps [rsp],xmm0
0xe88a: test rsi,rsi
0xe88d: mov qword ptr [rsp+0x30],rcx
0xe892: mov [rsp],0xa
0xe899: movdqa xmm0,[rip+0x20de0f]
0xe8a1: movaps [rsp+0x10],xmm0
0xe8a6: movdqa xmm0,[rip+0x20de12]
0xe8ae: movaps [rsp+0x20],xmm0
0xe8b3: jz 0xe8e7
0xe8b5: test rdx,rdx
0xe8b8: jz 0xe8e7
0xe8ba: mov qword ptr [rsp+0x28],rsi
0xe8bf: mov qword ptr [rsp+0x30],rdx
0xe8c4: mov rcx,rsp
0xe8c7: mov rdx,r8
0xe8ca: mov rsi,r9
0xe8cd: call 0xe060
0xe8d2: mov rdi,qword ptr [rsp+0x38]
0xe8d7: xor rdi,0x28
0xe8e0: jnz 0xe8ec
0xe8e2: add rsp,0x48
0xe8e6: ret
0xe8e7: call 0x2590
0xe8ec: call 0x2780
0xe900: mov r8,0xffffffff
0xe907: jmp 0xe860
0xe910: mov rcx,rdx
0xe913: mov r8,0xffffffff
0xe91a: mov rdx,rsi
0xe91d: mov rsi,rdi
0xe920: xor edi,edi
0xe922: jmp 0xe860
0xe930: mov r8,rcx
0xe933: mov rcx,rdx
0xe936: mov rdx,rsi
0xe939: mov rsi,rdi
0xe93c: xor edi,edi
0xe93e: jmp 0xe860
0xe950: lea rcx,[rip+0x20d6e9]
0xe957: jmp 0xe060
0xe960: lea rcx,[rip+0x20d6d9]
0xe967: mov rdx,rsi
0xe96a: mov rsi,rdi
0xe96d: xor edi,edi
0xe96f: jmp 0xe060
0xea46: nop qword ptr [rax+rax*1+0x0]
0xeabd: nop qword ptr [rax]
0xead7: nop qword ptr [rax+rax*1+0x0]
0xeb74: nop qword ptr [rax+0x0]
0xebd1: nop qword ptr [rax+0x0]
0xec30: push rbx
0xec31: lea rsi,[rip+0x7e56]
0xec38: mov rbx,rdi
0xec3b: mov edi,0x1
0xec40: sub rsp,0xa0
0xec47: mov rdx,rsp
0xec4a: mov rax,0x28
0xec53: mov qword ptr [rsp+0x98],rax
0xec5b: xor eax,eax
0xec5d: call 0x2760
0xec62: test eax,eax
0xec64: jnz 0xec98
0xec66: mov rax,qword ptr [rsp+0x8]
0xec6b: mov qword ptr [rbx],rax
0xec6e: mov rax,qword ptr [rsp]
0xec72: mov qword ptr [rbx+0x8],rax
0xec76: mov rax,rbx
0xec79: mov rcx,qword ptr [rsp+0x98]
0xec81: xor rcx,0x28
0xec8a: jnz 0xec9c
0xec8c: add rsp,0xa0
0xec93: pop rbx
0xec94: ret
0xec95: nop qword ptr [rax]
0xec98: xor eax,eax
0xec9a: jmp 0xec79
0xec9c: call 0x2780
0xecff: nop 
0xede4: nop qword ptr [rax+0x0]
0xee05: jmp 0xed98
0xee07: nop qword ptr [rax+rax*1+0x0]
0xee2d: jmp 0xed64
0xee9a: nop qword ptr [rax+rax*1+0x0]
0xef00: mov rax,qword ptr [rsi+0x8]
0xef04: cmp qword ptr [rdi+0x8],rax
0xef08: jb 0xef18
0xef0a: setnbe al
0xef0d: movzx eax,al
0xef10: ret
0xef11: nop qword ptr [rax+0x0]
0xef18: mov eax,0xffffffff
0xef1d: ret
0xef20: mov rsi,qword ptr [rsi]
0xef23: mov rdi,qword ptr [rdi]
0xef26: jmp 0x2930
0xef8a: nop qword ptr [rax+rax*1+0x0]
0xf03b: nop qword ptr [rax+rax*1+0x0]
0xf049: nop qword ptr [rax+0x0]
0xf09d: nop qword ptr [rax]
0xf10b: nop qword ptr [rax+rax*1+0x0]
0xf125: nop qword ptr [rax]
0xf23e: nop 
0xf240: mov rdi,qword ptr [rsp+0x10]
0xf245: call 0x2c80
0xf24a: mov rdi,r13
0xf24d: xor r13d,r13d
0xf250: call 0x2c80
0xf255: mov dword ptr [rbp+0x0],ebx
0xf258: jmp 0xf08b
0xf2e4: nop qword ptr [rax+0x0]
0xf2ec: nop qword ptr [rax+0x0]
0xf310: push rbx
0xf311: mov rsi,rdi
0xf314: mov edi,0x1
0xf319: sub rsp,0xa0
0xf320: mov rdx,rsp
0xf323: mov rax,0x28
0xf32c: mov qword ptr [rsp+0x98],rax
0xf334: xor eax,eax
0xf336: call 0x2760
0xf33b: mov ebx,eax
0xf33d: call 0x25a0
0xf342: test ebx,ebx
0xf344: jz 0xf360
0xf346: mov edx,dword ptr [rax]
0xf348: cmp edx,0x4b
0xf34b: jz 0xf360
0xf34d: xor eax,eax
0xf34f: cmp edx,0x2
0xf352: setnz al
0xf355: neg eax
0xf357: jmp 0xf36b
0xf359: nop qword ptr [rax+0x0]
0xf360: mov [rax],0x11
0xf366: mov eax,0xffffffff
0xf36b: mov rcx,qword ptr [rsp+0x98]
0xf373: xor rcx,0x28
0xf37c: jnz 0xf387
0xf37e: add rsp,0xa0
0xf385: pop rbx
0xf386: ret
0xf387: call 0x2780
0xf390: mov esi,0x1c0
0xf395: jmp 0x2610
0xf3a0: mov esi,dword ptr [rsi]
0xf3a2: mov edx,0x180
0xf3a7: xor eax,eax
0xf3a9: and sil,0x3c
0xf3ad: or sil,0xc2
0xf3b1: jmp 0x2b30
0xf540: sub rsp,0x18
0xf544: cmp ecx,0x1
0xf547: mov dword ptr [rsp+0xc],edx
0xf54b: jz 0xf5b0
0xf54d: cmp ecx,0x2
0xf550: jz 0xf578
0xf552: test ecx,ecx
0xf554: jz 0xf590
0xf556: lea rcx,[rip+0x7a63]
0xf55d: lea rsi,[rip+0x7a04]
0xf564: lea rdi,[rip+0x7a25]
0xf56b: mov edx,0x147
0xf570: call 0x2820
0xf575: nop qword ptr [rax]
0xf578: lea rdx,[rsp+0xc]
0xf57d: lea rcx,[rip-0x274]
0xf584: call 0xf3c0
0xf589: add rsp,0x18
0xf58d: ret
0xf58e: nop 
0xf590: lea rdx,[rsp+0xc]
0xf595: lea rcx,[rip-0x1fc]
0xf59c: call 0xf3c0
0xf5a1: add rsp,0x18
0xf5a5: ret
0xf5a6: nop qword ptr [rax+rax*1+0x0]
0xf5b0: lea rdx,[rsp+0xc]
0xf5b5: lea rcx,[rip-0x22c]
0xf5bc: call 0xf3c0
0xf5c1: add rsp,0x18
0xf5c5: ret
0xf5d0: mov r8d,0x6
0xf5d6: jmp 0xf540
0xf5e0: mov r8d,0x6
0xf5e6: jmp 0xf3c0
0xf630: mov rax,qword ptr [rdi]
0xf633: xor edx,edx
0xf635: div rsi
0xf638: mov rax,rdx
0xf63b: ret
0xf640: mov rax,qword ptr [rsi]
0xf643: cmp qword ptr [rdi],rax
0xf646: setz al
0xf649: ret
0xf7ba: nop qword ptr [rax+rax*1+0x0]
0xf7c4: nop qword ptr [rax+0x0]
0xf7cf: nop 
0xf821: nop qword ptr [rax+0x0]
0xfc79: nop qword ptr [rax+0x0]
0xfcdc: nop qword ptr [rax+0x0]
0xfe2f: nop 
0xfe67: nop qword ptr [rax+rax*1+0x0]
0xfeb1: nop qword ptr [rax+0x0]
0xff57: nop qword ptr [rax+rax*1+0x0]
0xff80: mov ecx,0x100
0xff85: jmp 0x2580
0x101ac: nop qword ptr [rax+0x0]
0x10206: nop qword ptr [rax+rax*1+0x0]
0x1027a: nop qword ptr [rax+rax*1+0x0]
0x10291: nop qword ptr [rax+0x0]
0x102e9: nop qword ptr [rax+0x0]
0x102f8: nop qword ptr [rax+rax*1+0x0]
0x10317: nop qword ptr [rax+rax*1+0x0]
0x10337: nop qword ptr [rax+rax*1+0x0]
0x1036e: nop 
0x10392: nop qword ptr [rax+rax*1+0x0]
0x103ad: nop qword ptr [rax]
0x1051d: nop qword ptr [rax]
0x10567: nop qword ptr [rax+rax*1+0x0]
0x1058f: nop 
0x105e5: nop qword ptr [rax]
0x10613: nop qword ptr [rax+rax*1+0x0]
0x10706: nop qword ptr [rax+rax*1+0x0]
0x10795: nop qword ptr [rax]
0x10798: mov r8,rcx
0x1079b: mov rcx,rdx
0x1079e: lea rdx,[rip+0x6886]
0x107a5: mov esi,0x1
0x107aa: xor eax,eax
0x107ac: call 0x2c20
0x107b1: jmp 0x1069c
0x107b6: nop qword ptr [rax+rax*1+0x0]
0x10815: nop qword ptr [rax]
0x10851: nop qword ptr [rax+0x0]
0x10898: nop qword ptr [rax+rax*1+0x0]
0x108e7: nop qword ptr [rax+rax*1+0x0]
0x10944: nop qword ptr [rax+0x0]
0x10972: nop qword ptr [rax+rax*1+0x0]
0x10a26: nop qword ptr [rax+rax*1+0x0]
0x10a80: xor r9d,r9d
0x10a83: cmp [r8],0x0
0x10a87: jz 0x10a9b
0x10a89: nop qword ptr [rax+0x0]
0x10a90: add r9,0x1
0x10a94: cmp [r8+r9*8+0x0],0x0
0x10a99: jnz 0x10a90
0x10a9b: jmp 0x10660
0x10aa0: sub rsp,0x68
0x10aa4: mov r10,r8
0x10aa7: xor r9d,r9d
0x10aaa: mov rax,0x28
0x10ab3: mov qword ptr [rsp+0x58],rax
0x10ab8: xor eax,eax
0x10aba: mov r8,rsp
0x10abd: nop qword ptr [rax]
0x10ac0: mov eax,dword ptr [r10]
0x10ac3: cmp eax,0x2f
0x10ac6: jnbe 0x10b0a
0x10ac8: mov r11d,eax
0x10acb: add r11,qword ptr [r10+0x10]
0x10acf: add eax,0x8
0x10ad2: mov dword ptr [r10],eax
0x10ad5: mov rax,qword ptr [r11]
0x10ad8: test rax,rax
0x10adb: mov qword ptr [r8+r9*8+0x0],rax
0x10adf: jz 0x10aeb
0x10ae1: add r9,0x1
0x10ae5: cmp r9,0xa
0x10ae9: jnz 0x10ac0
0x10aeb: call 0x10660
0x10af0: mov rax,qword ptr [rsp+0x58]
0x10af5: xor rax,0x28
0x10afe: jnz 0x10b05
0x10b00: add rsp,0x68
0x10b04: ret
0x10b05: call 0x2780
0x10b0a: mov r11,qword ptr [r10+0x8]
0x10b0e: lea rax,[r11+0x8]
0x10b12: mov qword ptr [r10+0x8],rax
0x10b16: jmp 0x10ad5
0x10be0: call 0x2780
0x10bec: mov rax,rbx
0x10bef: add rbx,0x8
0x10bf3: jmp 0x10ba6
0x10c00: push rbx
0x10c01: lea rsi,[rip+0x6471]
0x10c08: mov edx,0x5
0x10c0d: xor edi,edi
0x10c0f: call 0x2730
0x10c14: lea rdx,[rip+0x4ee8]
0x10c1b: mov rsi,rax
0x10c1e: mov edi,0x1
0x10c23: xor eax,eax
0x10c25: call 0x2ab0
0x10c2a: lea rsi,[rip+0x645d]
0x10c31: mov edx,0x5
0x10c36: xor edi,edi
0x10c38: call 0x2730
0x10c3d: lea rcx,[rip+0x4cbc]
0x10c44: lea rdx,[rip+0x4363]
0x10c4b: mov rsi,rax
0x10c4e: mov edi,0x1
0x10c53: xor eax,eax
0x10c55: call 0x2ab0
0x10c5a: mov rbx,qword ptr [rip+0x20b467]
0x10c61: lea rsi,[rip+0x6658]
0x10c68: xor edi,edi
0x10c6a: mov edx,0x5
0x10c6f: call 0x2730
0x10c74: mov rsi,rbx
0x10c77: mov rdi,rax
0x10c7a: pop rbx
0x10c7b: jmp 0x28f0
0x10c91: nop qword ptr [rax+0x0]
0x10ce0: mov rax,rdi
0x10ce3: mul rsi
0x10ce6: mov rdi,rax
0x10ce9: seto al
0x10cec: test rdi,rdi
0x10cef: js 0x10cfb
0x10cf1: movzx eax,al
0x10cf4: test rax,rax
0x10cf7: jnz 0x10cfb
0x10cf9: jmp 0x10cc0
0x10cfb: sub rsp,0x8
0x10cff: call 0x10f10
0x10d42: nop qword ptr [rax+rax*1+0x0]
0x10d60: mov rax,rsi
0x10d63: mul rdx
0x10d66: mov rsi,rax
0x10d69: seto al
0x10d6c: test rsi,rsi
0x10d6f: js 0x10d7b
0x10d71: movzx eax,al
0x10d74: test rax,rax
0x10d77: jnz 0x10d7b
0x10d79: jmp 0x10d20
0x10d7b: sub rsp,0x8
0x10d7f: call 0x10f10
0x10d90: test rdi,rdi
0x10d93: mov r9,rdx
0x10d96: mov rcx,qword ptr [rsi]
0x10d99: jz 0x10dd0
0x10d9b: xor edx,edx
0x10d9d: mov rax,0x6148914691236517204
0x10da7: div r9
0x10daa: cmp rax,rcx
0x10dad: jbe 0x10deb
0x10daf: mov rax,rcx
0x10db2: shr rax,0x1
0x10db5: lea rcx,[rax+rcx*1+0x1]
0x10dba: mov qword ptr [rsi],rcx
0x10dbd: imul rcx,r9
0x10dc1: mov rsi,rcx
0x10dc4: jmp 0x10d20
0x10dc9: nop qword ptr [rax+0x0]
0x10dd0: test rcx,rcx
0x10dd3: jz 0x10df8
0x10dd5: mov rax,rcx
0x10dd8: mul r9
0x10ddb: seto dl
0x10dde: test rax,rax
0x10de1: movzx edx,dl
0x10de4: js 0x10deb
0x10de6: test rdx,rdx
0x10de9: jz 0x10dba
0x10deb: sub rsp,0x8
0x10def: call 0x10f10
0x10df4: nop qword ptr [rax+0x0]
0x10df8: xor edx,edx
0x10dfa: mov eax,0x80
0x10dff: xor r8d,r8d
0x10e02: div r9
0x10e05: test rax,rax
0x10e08: setz r8b
0x10e0c: lea rcx,[r8+rax*1+0x0]
0x10e10: jmp 0x10dd5
0x10e20: test rdi,rdi
0x10e23: mov rax,qword ptr [rsi]
0x10e26: jz 0x10e50
0x10e28: mov rdx,0x6148914691236517203
0x10e32: cmp rax,rdx
0x10e35: jnbe 0x10e61
0x10e37: mov rdx,rax
0x10e3a: shr rdx,0x1
0x10e3d: lea rax,[rdx+rax*1+0x1]
0x10e42: mov qword ptr [rsi],rax
0x10e45: mov rsi,rax
0x10e48: jmp 0x10d20
0x10e4d: nop qword ptr [rax]
0x10e50: test rax,rax
0x10e53: mov edx,0x80
0x10e58: cmove rax,rdx
0x10e5c: test rax,rax
0x10e5f: jns 0x10e42
0x10e61: sub rsp,0x8
0x10e65: call 0x10f10
0x10e70: push rbx
0x10e71: mov rbx,rdi
0x10e74: call 0x10cc0
0x10e79: mov rdx,rbx
0x10e7c: xor esi,esi
0x10e7e: mov rdi,rax
0x10e81: pop rbx
0x10e82: jmp 0x2830
0x10e90: mov rax,rdi
0x10e93: sub rsp,0x8
0x10e97: mul rsi
0x10e9a: seto dl
0x10e9d: test rax,rax
0x10ea0: js 0x10eb9
0x10ea2: movzx edx,dl
0x10ea5: test rdx,rdx
0x10ea8: jnz 0x10eb9
0x10eaa: call 0x2910
0x10eaf: test rax,rax
0x10eb2: jz 0x10eb9
0x10eb4: add rsp,0x8
0x10eb8: ret
0x10eb9: call 0x10f10
0x10f40: call 0x2590
0x10f50: sub rsp,0x8
0x10f54: or esi,0x200
0x10f5a: call 0x12720
0x10f5f: test rax,rax
0x10f62: jz 0x10f70
0x10f64: add rsp,0x8
0x10f68: ret
0x10f69: nop qword ptr [rax+0x0]
0x10f70: call 0x25a0
0x10f75: cmp [rax],0x16
0x10f78: jz 0x10f80
0x10f7a: call 0x10f10
0x10f7f: nop 
0x10f80: lea rcx,[rip+0x6429]
0x10f87: lea rsi,[rip+0x63f2]
0x10f8e: lea rdi,[rip+0x6408]
0x10f95: mov edx,0x29
0x10f9a: call 0x2820
0x10fa0: mov edx,dword ptr [rdi+0x48]
0x10fa3: mov eax,0x1
0x10fa8: and edx,0x11
0x10fab: cmp edx,0x10
0x10fae: jz 0x10fb7
0x10fb0: xor eax,eax
0x10fb2: cmp edx,0x11
0x10fb5: jz 0x10fc0
0x10fb7: rep ret
0x10fb9: nop qword ptr [rax+0x0]
0x10fc0: cmp [rsi+0x58],0x0
0x10fc5: setnz al
0x10fc8: ret
0x11054: nop qword ptr [rax+0x0]
0x11070: test rdi,rdi
0x11073: push rbx
0x11074: mov rbx,rdi
0x11077: jz 0x1108a
0x11079: call 0x2a50
0x1107e: test eax,eax
0x11080: jz 0x1108a
0x11082: test [rbx],0x100
0x11088: jnz 0x11098
0x1108a: mov rdi,rbx
0x1108d: pop rbx
0x1108e: jmp 0x2a10
0x11093: nop qword ptr [rax+rax*1+0x0]
0x11098: mov rdi,rbx
0x1109b: mov edx,0x1
0x110a0: xor esi,esi
0x110a2: call 0x110e0
0x110a7: mov rdi,rbx
0x110aa: pop rbx
0x110ab: jmp 0x2a10
0x110b0: xor eax,eax
0x110b2: mov rcx,qword ptr [rdi+0x20]
0x110b6: cmp qword ptr [rdi+0x28],rcx
0x110ba: jnbe 0x110d7
0x110bc: mov rax,qword ptr [rdi+0x10]
0x110c0: sub rax,qword ptr [rdi+0x8]
0x110c4: test [rdi],0x100
0x110ca: jz 0x110d7
0x110cc: mov rdx,qword ptr [rdi+0x58]
0x110d0: sub rdx,qword ptr [rdi+0x48]
0x110d4: add rax,rdx
0x110d7: rep ret
0x110e0: mov rax,qword ptr [rdi+0x8]
0x110e4: cmp qword ptr [rdi+0x10],rax
0x110e8: jz 0x110f0
0x110ea: jmp 0x2b40
0x110ef: nop 
0x110f0: mov rax,qword ptr [rdi+0x20]
0x110f4: cmp qword ptr [rdi+0x28],rax
0x110f8: jnz 0x110ea
0x110fa: cmp [rdi+0x48],0x0
0x110ff: jnz 0x110ea
0x11101: push r12
0x11103: push rbp
0x11104: mov r12d,edx
0x11107: push rbx
0x11108: mov rbp,rsi
0x1110b: mov rbx,rdi
0x1110e: call 0x29c0
0x11113: mov edx,r12d
0x11116: mov rsi,rbp
0x11119: mov edi,eax
0x1111b: call 0x2800
0x11120: cmp rax,0xffffffff
0x11124: jz 0x11132
0x11126: and [rbx],0xef
0x11129: mov qword ptr [rbx+0x90],rax
0x11130: xor eax,eax
0x11132: pop rbx
0x11133: pop rbp
0x11134: pop r12
0x11136: ret
0x11140: xor eax,eax
0x11142: mov rdx,qword ptr [rsi+0x8]
0x11146: cmp qword ptr [rdi+0x8],rdx
0x1114a: jz 0x11150
0x1114c: rep ret
0x1114e: nop 
0x11150: mov rax,qword ptr [rsi]
0x11153: cmp qword ptr [rdi],rax
0x11156: setz al
0x11159: ret
0x11160: mov rax,qword ptr [rdi+0x8]
0x11164: xor edx,edx
0x11166: div rsi
0x11169: mov rax,rdx
0x1116c: ret
0x11170: mov rax,qword ptr [rdi]
0x11173: xor edx,edx
0x11175: div rsi
0x11178: mov rax,rdx
0x1117b: ret
0x11180: mov rax,qword ptr [rsi]
0x11183: cmp qword ptr [rdi],rax
0x11186: setz al
0x11189: ret
0x11190: mov rdx,qword ptr [rdi]
0x11193: mov rax,qword ptr [rsi]
0x11196: mov rax,qword ptr [rax+0x80]
0x1119d: cmp qword ptr [rdx+0x80],rax
0x111a4: jb 0x111b0
0x111a6: setnbe al
0x111a9: movzx eax,al
0x111ac: ret
0x111ad: nop qword ptr [rax]
0x111b0: mov eax,0xffffffff
0x111b5: ret
0x111c0: push r12
0x111c2: push rbp
0x111c3: mov rbp,rsi
0x111c6: push rbx
0x111c7: cmp [rbp+0x58],0x0
0x111cc: lea rbx,[rsi+0x78]
0x111d0: mov r12,rdi
0x111d3: mov eax,dword ptr [rdi+0x48]
0x111d6: mov rsi,qword ptr [rsi+0x30]
0x111da: jnz 0x11240
0x111dc: test al,0x1
0x111de: jz 0x11240
0x111e0: mov rdx,rbx
0x111e3: mov edi,0x1
0x111e8: call 0x29e0
0x111ed: test eax,eax
0x111ef: jz 0x1126b
0x111f1: call 0x25a0
0x111f6: mov r12,rax
0x111f9: mov eax,dword ptr [rax]
0x111fb: cmp eax,0x2
0x111fe: jz 0x11310
0x11204: lea rdi,[rbx+0x8]
0x11208: mov dword ptr [rbp+0x40],eax
0x1120b: mov [rbp+0x78],0x0
0x11213: mov [rbx+0x88],0x0
0x1121e: xor eax,eax
0x11220: and rdi,0xfffffff8
0x11224: sub rbx,rdi
0x11227: lea ecx,[rbx+0x90]
0x1122d: shr ecx,0x3
0x11230: rep stosd qword ptr es:[rdi],rax
0x11233: mov eax,0xa
0x11238: pop rbx
0x11239: pop rbp
0x1123a: pop r12
0x1123c: ret
0x1123d: nop qword ptr [rax]
0x11240: test al,0x2
0x11242: jnz 0x111e0
0x11244: test dl,dl
0x11246: jnz 0x111e0
0x11248: mov rdx,rsi
0x1124b: mov esi,dword ptr [r12+0x2c]
0x11250: mov r8d,0x100
0x11256: mov rcx,rbx
0x11259: mov edi,0x1
0x1125e: call 0x27c0
0x11263: test eax,eax
0x11265: jnz 0x11300
0x1126b: mov eax,dword ptr [rbp+0x90]
0x11271: and eax,0xf000
0x11276: cmp eax,0x4000
0x1127b: jz 0x112a0
0x1127d: cmp eax,0xa000
0x11282: jz 0x11358
0x11288: cmp eax,0x8000
0x1128d: setz al
0x11290: movzx eax,al
0x11293: pop rbx
0x11294: lea eax,[rax+rax*4+0x3]
0x11298: pop rbp
0x11299: pop r12
0x1129b: ret
0x1129c: nop qword ptr [rax+0x0]
0x112a0: mov rax,qword ptr [rbp+0x88]
0x112a7: cmp rax,0x1
0x112ab: jbe 0x11330
0x112b1: cmp [rbp+0x58],0x0
0x112b6: jle 0x11330
0x112b8: test [r12+0x48],0x20
0x112be: lea rdx,[rax-0x2]
0x112c2: cmove rax,rdx
0x112c6: cmp [rbp+0x108],0x2e
0x112cd: mov qword ptr [rbp+0x68],rax
0x112d1: mov eax,0x1
0x112d6: jnz 0x11238
0x112dc: cmp [rbp+0x109],0x0
0x112e3: jnz 0x11368
0x112e9: cmp [rbp+0x58],0x1
0x112ee: sbb eax,eax
0x112f0: and eax,0xfc
0x112f3: add eax,0x5
0x112f6: jmp 0x11238
0x112fb: nop qword ptr [rax+rax*1+0x0]
0x11300: call 0x25a0
0x11305: mov eax,dword ptr [rax]
0x11307: jmp 0x11204
0x1130c: nop qword ptr [rax+0x0]
0x11310: mov rsi,qword ptr [rbp+0x30]
0x11314: mov rdx,rbx
0x11317: mov edi,0x1
0x1131c: call 0x2760
0x11321: test eax,eax
0x11323: jz 0x11340
0x11325: mov eax,dword ptr [r12]
0x11329: jmp 0x11204
0x1132e: nop 
0x11330: mov rax,0xffffffff
0x11337: jmp 0x112c6
0x11339: nop qword ptr [rax+0x0]
0x11340: mov [r12],0x0
0x11348: mov eax,0xd
0x1134d: jmp 0x11238
0x11352: nop qword ptr [rax+rax*1+0x0]
0x11358: mov eax,0xc
0x1135d: jmp 0x11238
0x11362: nop qword ptr [rax+rax*1+0x0]
0x11368: mov edx,dword ptr [rbp+0x108]
0x1136e: and edx,0xffff00
0x11374: cmp edx,0x2e00
0x1137a: jnz 0x11238
0x11380: jmp 0x112e9
0x11390: push r13
0x11392: push r12
0x11394: mov r12,rdx
0x11397: push rbp
0x11398: push rbx
0x11399: mov rbp,rdi
0x1139c: mov rbx,rsi
0x1139f: sub rsp,0x8
0x113a3: cmp qword ptr [rbp+0x38],rdx
0x113a7: mov r13,qword ptr [rdi+0x40]
0x113ab: mov rdi,qword ptr [rdi+0x10]
0x113af: jnb 0x113e5
0x113b1: lea rsi,[rdx+0x28]
0x113b5: mov rax,0x2305843009213693951
0x113bf: cmp rsi,rax
0x113c2: mov qword ptr [rbp+0x38],rsi
0x113c6: jnbe 0x11464
0x113cc: shl rsi,0x3
0x113d0: call 0x2a70
0x113d5: test rax,rax
0x113d8: mov rdi,rax
0x113db: jz 0x11460
0x113e1: mov qword ptr [rbp+0x10],rax
0x113e5: test rbx,rbx
0x113e8: jz 0x11401
0x113ea: mov rdx,rdi
0x113ed: nop qword ptr [rax]
0x113f0: add rdx,0x8
0x113f4: mov qword ptr [rdx-0x8],rbx
0x113f8: mov rbx,qword ptr [rbx+0x10]
0x113fc: test rbx,rbx
0x113ff: jnz 0x113f0
0x11401: mov rcx,r13
0x11404: mov edx,0x8
0x11409: mov rsi,r12
0x1140c: call 0x2630
0x11411: mov r8,qword ptr [rbp+0x10]
0x11415: mov rcx,r12
0x11418: sub rcx,0x1
0x1141c: mov rax,qword ptr [r8]
0x1141f: jz 0x11490
0x11421: mov rdi,rax
0x11424: mov rdx,r8
0x11427: jmp 0x11433
0x11429: nop qword ptr [rax+0x0]
0x11430: mov rdi,qword ptr [rdx]
0x11433: mov rsi,qword ptr [rdx+0x8]
0x11437: add rdx,0x8
0x1143b: sub rcx,0x1
0x1143f: mov qword ptr [rdi+0x10],rsi
0x11443: jnz 0x11430
0x11445: mov rdx,qword ptr [r8+r12*8-0x8]
0x1144a: mov [rdx+0x10],0x0
0x11452: add rsp,0x8
0x11456: pop rbx
0x11457: pop rbp
0x11458: pop r12
0x1145a: pop r13
0x1145c: ret
0x1145d: nop qword ptr [rax]
0x11460: mov rdi,qword ptr [rbp+0x10]
0x11464: call 0x2c80
0x11469: mov [rbp+0x10],0x0
0x11471: mov [rbp+0x38],0x0
0x11479: add rsp,0x8
0x1147d: mov rax,rbx
0x11480: pop rbx
0x11481: pop rbp
0x11482: pop r12
0x11484: pop r13
0x11486: ret
0x11487: nop qword ptr [rax+rax*1+0x0]
0x11490: mov rdx,rax
0x11493: jmp 0x1144a
0x114a0: push r13
0x114a2: push r12
0x114a4: mov r12,rdi
0x114a7: push rbp
0x114a8: lea rdi,[rdx+0x110]
0x114af: push rbx
0x114b0: mov r13,rsi
0x114b3: mov rbp,rdx
0x114b6: sub rsp,0x8
0x114ba: and rdi,0xfffffff8
0x114be: call 0x2a00
0x114c3: test rax,rax
0x114c6: mov rbx,rax
0x114c9: jz 0x1151c
0x114cb: lea rdi,[rax+0x108]
0x114d2: mov rdx,rbp
0x114d5: mov rsi,r13
0x114d8: call 0x29a0
0x114dd: mov rax,qword ptr [r12+0x20]
0x114e2: mov [rbx+rbp*1+0x108],0x0
0x114ea: mov qword ptr [rbx+0x60],rbp
0x114ee: mov qword ptr [rbx+0x50],r12
0x114f2: mov [rbx+0x40],0x0
0x114f9: mov [rbx+0x18],0x0
0x11501: mov qword ptr [rbx+0x38],rax
0x11505: mov [rbx+0x72],0x30000
0x1150c: mov [rbx+0x20],0x0
0x11514: mov [rbx+0x28],0x0
0x1151c: add rsp,0x8
0x11520: mov rax,rbx
0x11523: pop rbx
0x11524: pop rbp
0x11525: pop r12
0x11527: pop r13
0x11529: ret
0x11530: test rdi,rdi
0x11533: jz 0x11570
0x11535: push rbp
0x11536: push rbx
0x11537: mov rbx,rdi
0x1153a: sub rsp,0x8
0x1153e: nop 
0x11540: mov rdi,qword ptr [rbx+0x18]
0x11544: mov rbp,qword ptr [rbx+0x10]
0x11548: test rdi,rdi
0x1154b: jz 0x11552
0x1154d: call 0x28a0
0x11552: mov rdi,rbx
0x11555: mov rbx,rbp
0x11558: call 0x2c80
0x1155d: test rbp,rbp
0x11560: jnz 0x11540
0x11562: add rsp,0x8
0x11566: pop rbx
0x11567: pop rbp
0x11568: ret
0x11569: nop qword ptr [rax+0x0]
0x11570: rep ret
0x11580: push rbx
0x11581: mov rbx,rdi
0x11584: jmp 0x1159c
0x11586: nop qword ptr [rax+rax*1+0x0]
0x11590: mov rdi,rbx
0x11593: call 0x13d20
0x11598: test eax,eax
0x1159a: jns 0x115b0
0x1159c: mov rdi,rbx
0x1159f: call 0x13cd0
0x115a4: test al,al
0x115a6: jz 0x11590
0x115a8: pop rbx
0x115a9: ret
0x115aa: nop qword ptr [rax+rax*1+0x0]
0x115b0: mov edi,eax
0x115b2: call 0x2870
0x115b7: jmp 0x1159c
0x115c0: push r13
0x115c2: push r12
0x115c4: push rbp
0x115c5: push rbx
0x115c6: sub rsp,0x98
0x115cd: mov rbx,qword ptr [rdi+0x50]
0x115d1: mov rax,0x28
0x115da: mov qword ptr [rsp+0x88],rax
0x115e2: xor eax,eax
0x115e4: test [rbx+0x49],0x2
0x115e8: jz 0x11652
0x115ea: mov r12,qword ptr [rbx+0x50]
0x115ee: mov rbp,rdi
0x115f1: mov r13d,esi
0x115f4: test r12,r12
0x115f7: jz 0x11620
0x115f9: mov rax,qword ptr [rbp+0x78]
0x115fd: mov rsi,rsp
0x11600: mov rdi,r12
0x11603: mov qword ptr [rsp],rax
0x11607: call 0xbd80
0x1160c: test rax,rax
0x1160f: jz 0x1164d
0x11611: mov rbx,qword ptr [rax+0x8]
0x11615: jmp 0x11654
0x11617: nop qword ptr [rax+rax*1+0x0]
0x11620: mov r8,qword ptr [rip+0x20a9a1]
0x11627: lea rcx,[rip-0x4ae]
0x1162e: lea rdx,[rip-0x4c5]
0x11635: xor esi,esi
0x11637: mov edi,0xd
0x1163c: call 0xbff0
0x11641: test rax,rax
0x11644: mov r12,rax
0x11647: mov qword ptr [rbx+0x50],rax
0x1164b: jnz 0x115f9
0x1164d: test r13d,r13d
0x11650: jns 0x11680
0x11652: xor ebx,ebx
0x11654: mov rdx,qword ptr [rsp+0x88]
0x1165c: xor rdx,0x28
0x11665: mov rax,rbx
0x11668: jnz 0x116e2
0x1166a: add rsp,0x98
0x11671: pop rbx
0x11672: pop rbp
0x11673: pop r12
0x11675: pop r13
0x11677: ret
0x11678: nop qword ptr [rax+rax*1+0x0]
0x11680: lea rsi,[rsp+0x10]
0x11685: mov edi,r13d
0x11688: call 0x2bb0
0x1168d: test eax,eax
0x1168f: jnz 0x11652
0x11691: test r12,r12
0x11694: mov rbx,qword ptr [rsp+0x10]
0x11699: jz 0x11654
0x1169b: mov edi,0x10
0x116a0: call 0x2a00
0x116a5: test rax,rax
0x116a8: mov r13,rax
0x116ab: jz 0x11654
0x116ad: mov rax,qword ptr [rbp+0x78]
0x116b1: mov qword ptr [r13+0x8],rbx
0x116b5: mov rsi,r13
0x116b8: mov rdi,r12
0x116bb: mov qword ptr [r13+0x0],rax
0x116bf: call 0xc7f0
0x116c4: test rax,rax
0x116c7: jz 0x116d8
0x116c9: cmp r13,rax
0x116cc: jnz 0x116e7
0x116ce: mov rbx,qword ptr [rsp+0x10]
0x116d3: jmp 0x11654
0x116d8: mov rdi,r13
0x116db: call 0x2c80
0x116e0: jmp 0x116ce
0x116e2: call 0x2780
0x116e7: call 0x2590
0x116f0: sub rsp,0x8
0x116f4: call 0x115c0
0x116f9: cmp rax,0x52654973
0x116ff: jz 0x11750
0x11701: jle 0x11730
0x11703: cmp rax,0x58465342
0x11709: jz 0x11750
0x1170b: mov edx,0xff534d42
0x11710: cmp rax,rdx
0x11713: jz 0x11745
0x11715: cmp rax,0x5346414f
0x1171b: jz 0x11745
0x1171d: mov eax,0x1
0x11722: add rsp,0x8
0x11726: ret
0x11727: nop qword ptr [rax+rax*1+0x0]
0x11730: cmp rax,0x6969
0x11736: jz 0x11745
0x11738: cmp rax,0x9fa0
0x1173e: jz 0x11745
0x11740: test rax,rax
0x11743: jnz 0x1171d
0x11745: xor eax,eax
0x11747: add rsp,0x8
0x1174b: ret
0x1174c: nop qword ptr [rax+0x0]
0x11750: mov eax,0x2
0x11755: add rsp,0x8
0x11759: ret
0x11760: push rbp
0x11761: push rbx
0x11762: mov ebp,esi
0x11764: mov rbx,rdi
0x11767: sub rsp,0x8
0x1176b: mov esi,dword ptr [rdi+0x2c]
0x1176e: cmp esi,ebp
0x11770: jnz 0x11777
0x11772: cmp esi,0x9c
0x11775: jnz 0x117c1
0x11777: test dl,dl
0x11779: jnz 0x11790
0x1177b: test [rbx+0x48],0x4
0x1177f: jnz 0x11785
0x11781: test esi,esi
0x11783: jns 0x117b0
0x11785: mov dword ptr [rbx+0x2c],ebp
0x11788: add rsp,0x8
0x1178c: pop rbx
0x1178d: pop rbp
0x1178e: ret
0x1178f: nop 
0x11790: lea rdi,[rbx+0x60]
0x11794: call 0x13ce0
0x11799: test eax,eax
0x1179b: js 0x11785
0x1179d: mov edi,eax
0x1179f: call 0x2870
0x117a4: mov dword ptr [rbx+0x2c],ebp
0x117a7: add rsp,0x8
0x117ab: pop rbx
0x117ac: pop rbp
0x117ad: ret
0x117ae: nop 
0x117b0: mov edi,esi
0x117b2: call 0x2870
0x117b7: mov dword ptr [rbx+0x2c],ebp
0x117ba: add rsp,0x8
0x117be: pop rbx
0x117bf: pop rbp
0x117c0: ret
0x117c1: call 0x2590
0x117d0: push rbp
0x117d1: push rbx
0x117d2: mov rbx,rdi
0x117d5: sub rsp,0x8
0x117d9: mov edx,dword ptr [rdi+0x48]
0x117dc: mov ebp,edx
0x117de: and ebp,0x4
0x117e1: jnz 0x11828
0x117e3: and dh,0x2
0x117e6: jnz 0x11810
0x117e8: mov edi,dword ptr [rdi+0x28]
0x117eb: xor ebp,ebp
0x117ed: call 0x2a60
0x117f2: test eax,eax
0x117f4: setnz bpl
0x117f8: lea rdi,[rbx+0x60]
0x117fc: call 0x11580
0x11801: add rsp,0x8
0x11805: mov eax,ebp
0x11807: pop rbx
0x11808: pop rbp
0x11809: ret
0x1180a: nop qword ptr [rax+rax*1+0x0]
0x11810: mov edx,0x1
0x11815: mov esi,0xffffff9c
0x1181a: call 0x11760
0x1181f: jmp 0x117f8
0x11821: nop qword ptr [rax+0x0]
0x11828: xor ebp,ebp
0x1182a: jmp 0x117f8
0x11830: push rbx
0x11831: mov rcx,qword ptr [rsi]
0x11834: mov rbx,rdi
0x11837: mov rdi,qword ptr [rdi]
0x1183a: lea rax,[rcx+rdx*1+0x100]
0x11842: cmp rcx,rax
0x11845: jnbe 0x11868
0x11847: mov qword ptr [rsi],rax
0x1184a: mov rsi,rax
0x1184d: call 0x2a70
0x11852: test rax,rax
0x11855: jz 0x11888
0x11857: mov qword ptr [rbx],rax
0x1185a: mov eax,0x1
0x1185f: pop rbx
0x11860: ret
0x11861: nop qword ptr [rax+0x0]
0x11868: call 0x2c80
0x1186d: mov [rbx],0x0
0x11874: call 0x25a0
0x11879: mov [rax],0x24
0x1187f: xor eax,eax
0x11881: pop rbx
0x11882: ret
0x11883: nop qword ptr [rax+rax*1+0x0]
0x11888: mov rdi,qword ptr [rbx]
0x1188b: call 0x2c80
0x11890: mov [rbx],0x0
0x11897: xor eax,eax
0x11899: pop rbx
0x1189a: ret
0x118a0: and edi,0x102
0x118a6: push rbx
0x118a7: mov rbx,rsi
0x118aa: jz 0x118e0
0x118ac: mov r8,qword ptr [rip+0x20a715]
0x118b3: lea rcx,[rip-0x77a]
0x118ba: lea rdx,[rip-0x761]
0x118c1: xor esi,esi
0x118c3: mov edi,0x1f
0x118c8: call 0xbff0
0x118cd: test rax,rax
0x118d0: mov qword ptr [rbx],rax
0x118d3: setnz al
0x118d6: pop rbx
0x118d7: ret
0x118d8: nop qword ptr [rax+rax*1+0x0]
0x118e0: mov edi,0x20
0x118e5: call 0x2a00
0x118ea: mov rdi,rax
0x118ed: mov qword ptr [rbx],rax
0x118f0: xor eax,eax
0x118f2: test rdi,rdi
0x118f5: jz 0x118d6
0x118f7: call 0x13a70
0x118fc: mov eax,0x1
0x11901: pop rbx
0x11902: ret
0x11910: mov rax,rdx
0x11913: mov edx,esi
0x11915: shl edx,0xd
0x11918: and edx,0x20000
0x1191e: or edx,0x90900
0x11924: and esi,0x200
0x1192a: jnz 0x11940
0x1192c: mov rdi,rax
0x1192f: mov esi,edx
0x11931: xor eax,eax
0x11933: jmp 0xb1f0
0x11938: nop qword ptr [rax+rax*1+0x0]
0x11940: mov rsi,rax
0x11943: xor eax,eax
0x11945: jmp 0x13da0
0x11950: push r15
0x11952: push r14
0x11954: mov r14,rsi
0x11957: push r13
0x11959: push r12
0x1195b: mov r13,rdi
0x1195e: push rbp
0x1195f: push rbx
0x11960: mov r12d,edx
0x11963: mov rbp,rcx
0x11966: sub rsp,0xb8
0x1196d: mov ebx,dword ptr [rdi+0x48]
0x11970: mov rax,0x28
0x11979: mov qword ptr [rsp+0xa8],rax
0x11981: xor eax,eax
0x11983: mov r9d,ebx
0x11986: and r9d,0x4
0x1198a: test rcx,rcx
0x1198d: jz 0x11a40
0x11993: lea rdx,[rip+0x4151]
0x1199a: mov ecx,0x3
0x1199f: mov rsi,rbp
0x119a2: mov rdi,rdx
0x119a5: rep cmpsb ds:[rsi],es:[rdi]
0x119a7: setnbe al
0x119aa: sbb al,0x0
0x119ac: test al,al
0x119ae: jnz 0x11a40
0x119b4: test r9d,r9d
0x119b7: jnz 0x11a45
0x119bd: test r12d,r12d
0x119c0: jns 0x11baa
0x119c6: test bh,0x2
0x119c9: jnz 0x11b10
0x119cf: mov [rsp+0xf],0x1
0x119d4: mov edi,dword ptr [r13+0x2c]
0x119d8: mov rdx,rbp
0x119db: mov esi,ebx
0x119dd: call 0x11910
0x119e2: test eax,eax
0x119e4: mov r15d,eax
0x119e7: js 0x11b9b
0x119ed: mov ebx,dword ptr [r13+0x48]
0x119f1: test bl,0x2
0x119f4: jz 0x11a9a
0x119fa: nop qword ptr [rax+rax*1+0x0]
0x11a00: lea rdx,[rsp+0x10]
0x11a05: mov esi,r15d
0x11a08: mov edi,0x1
0x11a0d: call 0x2a30
0x11a12: test eax,eax
0x11a14: jz 0x11ae0
0x11a1a: mov ebx,0xffffffff
0x11a1f: test r12d,r12d
0x11a22: jns 0x11a55
0x11a24: call 0x25a0
0x11a29: mov r12d,dword ptr [rax]
0x11a2c: mov rbp,rax
0x11a2f: mov edi,r15d
0x11a32: call 0x2870
0x11a37: mov dword ptr [rbp+0x0],r12d
0x11a3b: jmp 0x11a55
0x11a3d: nop qword ptr [rax]
0x11a40: test r9d,r9d
0x11a43: jz 0x11a80
0x11a45: and bh,0x2
0x11a48: jz 0x11a53
0x11a4a: test r12d,r12d
0x11a4d: jns 0x11b00
0x11a53: xor ebx,ebx
0x11a55: mov rcx,qword ptr [rsp+0xa8]
0x11a5d: xor rcx,0x28
0x11a66: mov eax,ebx
0x11a68: jnz 0x11ba5
0x11a6e: add rsp,0xb8
0x11a75: pop rbx
0x11a76: pop rbp
0x11a77: pop r12
0x11a79: pop r13
0x11a7b: pop r14
0x11a7d: pop r15
0x11a7f: ret
0x11a80: test r12d,r12d
0x11a83: js 0x11bc0
0x11a89: test bl,0x2
0x11a8c: mov r15d,r12d
0x11a8f: mov [rsp+0xf],0x0
0x11a94: jnz 0x11a00
0x11a9a: test rbp,rbp
0x11a9d: jz 0x11ac0
0x11a9f: lea rdx,[rip+0x4045]
0x11aa6: mov ecx,0x3
0x11aab: mov rsi,rbp
0x11aae: mov rdi,rdx
0x11ab1: rep cmpsb ds:[rsi],es:[rdi]
0x11ab3: setnbe al
0x11ab6: sbb al,0x0
0x11ab8: test al,al
0x11aba: jz 0x11a00
0x11ac0: and bh,0x2
0x11ac3: jnz 0x11b58
0x11ac9: mov edi,r15d
0x11acc: call 0x2a60
0x11ad1: mov ebx,eax
0x11ad3: jmp 0x11a1f
0x11ad8: nop qword ptr [rax+rax*1+0x0]
0x11ae0: mov rax,qword ptr [rsp+0x10]
0x11ae5: cmp qword ptr [r14+0x78],rax
0x11ae9: jz 0x11b80
0x11aef: call 0x25a0
0x11af4: mov [rax],0x2
0x11afa: jmp 0x11a1a
0x11aff: nop 
0x11b00: mov edi,r12d
0x11b03: xor ebx,ebx
0x11b05: call 0x2870
0x11b0a: jmp 0x11a55
0x11b0f: nop 
0x11b10: lea r15,[r13+0x60]
0x11b14: mov rdi,r15
0x11b17: call 0x13cd0
0x11b1c: test al,al
0x11b1e: mov byte ptr [rsp+0xf],al
0x11b22: jnz 0x119d4
0x11b28: mov rdi,r15
0x11b2b: call 0x13d20
0x11b30: test eax,eax
0x11b32: mov r15d,eax
0x11b35: mov ebx,dword ptr [r13+0x48]
0x11b39: js 0x119cf
0x11b3f: test bl,0x2
0x11b42: mov r12d,eax
0x11b45: mov [rsp+0xf],0x1
0x11b4a: jz 0x11ac0
0x11b50: jmp 0x11a00
0x11b55: nop qword ptr [rax]
0x11b58: movzx r14d,byte ptr [rsp+0xf]
0x11b5e: mov esi,r15d
0x11b61: mov rdi,r13
0x11b64: xor ebx,ebx
0x11b66: xor r14d,0x1
0x11b6a: movzx edx,r14b
0x11b6e: call 0x11760
0x11b73: jmp 0x11a55
0x11b78: nop qword ptr [rax+rax*1+0x0]
0x11b80: mov rax,qword ptr [rsp+0x18]
0x11b85: cmp qword ptr [r14+0x80],rax
0x11b8c: jnz 0x11aef
0x11b92: mov ebx,dword ptr [r13+0x48]
0x11b96: jmp 0x11ac0
0x11b9b: mov ebx,0xffffffff
0x11ba0: jmp 0x11a55
0x11ba5: call 0x2780
0x11baa: test bl,0x2
0x11bad: mov r15d,r12d
0x11bb0: mov [rsp+0xf],0x1
0x11bb5: jz 0x11aa6
0x11bbb: jmp 0x11a00
0x11bc0: mov [rsp+0xf],0x0
0x11bc5: jmp 0x119d4
0x11bd0: and edi,0x102
0x11bd6: push r12
0x11bd8: mov r12,rsi
0x11bdb: push rbp
0x11bdc: push rbx
0x11bdd: mov rbx,rdx
0x11be0: jz 0x11c50
0x11be2: mov edi,0x18
0x11be7: call 0x2a00
0x11bec: test rax,rax
0x11bef: mov rbp,rax
0x11bf2: jz 0x11c78
0x11bf8: mov rax,qword ptr [rbx+0x78]
0x11bfc: mov rdi,qword ptr [r12]
0x11c00: mov rsi,rbp
0x11c03: mov qword ptr [rbp+0x10],rbx
0x11c07: mov qword ptr [rbp+0x0],rax
0x11c0b: mov rax,qword ptr [rbx+0x80]
0x11c12: mov qword ptr [rbp+0x8],rax
0x11c16: call 0xc7f0
0x11c1b: cmp rbp,rax
0x11c1e: mov r12,rax
0x11c21: jz 0x11c41
0x11c23: mov rdi,rbp
0x11c26: call 0x2c80
0x11c2b: test r12,r12
0x11c2e: jz 0x11c78
0x11c30: mov rax,qword ptr [r12+0x10]
0x11c35: mov ecx,0x2
0x11c3a: mov word ptr [rbx+0x70],cx
0x11c3e: mov qword ptr [rbx],rax
0x11c41: pop rbx
0x11c42: mov eax,0x1
0x11c47: pop rbp
0x11c48: pop r12
0x11c4a: ret
0x11c4b: nop qword ptr [rax+rax*1+0x0]
0x11c50: mov rdi,qword ptr [r12]
0x11c54: lea rsi,[rdx+0x78]
0x11c58: call 0x13a80
0x11c5d: test al,al
0x11c5f: jz 0x11c41
0x11c61: mov edx,0x2
0x11c66: mov qword ptr [rbx],rbx
0x11c69: mov word ptr [rbx+0x70],dx
0x11c6d: pop rbx
0x11c6e: pop rbp
0x11c6f: pop r12
0x11c71: ret
0x11c72: nop qword ptr [rax+rax*1+0x0]
0x11c78: pop rbx
0x11c79: xor eax,eax
0x11c7b: pop rbp
0x11c7c: pop r12
0x11c7e: ret
0x11c80: sub rsp,0x28
0x11c84: mov rcx,rsi
0x11c87: mov rax,0x28
0x11c90: mov qword ptr [rsp+0x18],rax
0x11c95: xor eax,eax
0x11c97: and edi,0x102
0x11c9d: jnz 0x11ce0
0x11c9f: mov rax,qword ptr [rdx+0x8]
0x11ca3: test rax,rax
0x11ca6: jz 0x11cc5
0x11ca8: cmp [rax+0x58],0x0
0x11cad: js 0x11cc5
0x11caf: mov rcx,qword ptr [rsi]
0x11cb2: cmp [rcx+0x10],0x0
0x11cb7: jz 0x11d33
0x11cb9: mov rsi,qword ptr [rdx+0x80]
0x11cc0: cmp qword ptr [rcx],rsi
0x11cc3: jz 0x11d10
0x11cc5: mov rax,qword ptr [rsp+0x18]
0x11cca: xor rax,0x28
0x11cd3: jnz 0x11d2e
0x11cd5: add rsp,0x28
0x11cd9: ret
0x11cda: nop qword ptr [rax+rax*1+0x0]
0x11ce0: mov rax,qword ptr [rdx+0x78]
0x11ce4: mov rdi,qword ptr [rcx]
0x11ce7: mov rsi,rsp
0x11cea: mov qword ptr [rsp],rax
0x11cee: mov rax,qword ptr [rdx+0x80]
0x11cf5: mov qword ptr [rsp+0x8],rax
0x11cfa: call 0xc850
0x11cff: test rax,rax
0x11d02: jz 0x11d33
0x11d04: mov rdi,rax
0x11d07: call 0x2c80
0x11d0c: jmp 0x11cc5
0x11d0e: nop 
0x11d10: mov rsi,qword ptr [rdx+0x78]
0x11d14: cmp qword ptr [rcx+0x8],rsi
0x11d18: jnz 0x11cc5
0x11d1a: mov rdx,qword ptr [rax+0x78]
0x11d1e: mov rax,qword ptr [rax+0x80]
0x11d25: mov qword ptr [rcx+0x8],rdx
0x11d29: mov qword ptr [rcx],rax
0x11d2c: jmp 0x11cc5
0x11d2e: call 0x2780
0x11d33: call 0x2590
0x11d40: push r15
0x11d42: push r14
0x11d44: mov r15,rdi
0x11d47: push r13
0x11d49: push r12
0x11d4b: push rbp
0x11d4c: push rbx
0x11d4d: sub rsp,0x78
0x11d51: mov rbp,qword ptr [rdi]
0x11d54: mov rax,0x28
0x11d5d: mov qword ptr [rsp+0x68],rax
0x11d62: xor eax,eax
0x11d64: mov dword ptr [rsp+0x58],esi
0x11d68: mov rax,qword ptr [rbp+0x18]
0x11d6c: test rax,rax
0x11d6f: mov qword ptr [rsp+0x50],rax
0x11d74: jz 0x121b0
0x11d7a: mov rdi,rax
0x11d7d: call 0x2940
0x11d82: test eax,eax
0x11d84: mov dword ptr [rsp+0x64],eax
0x11d88: js 0x122e0
0x11d8e: cmp [r15+0x40],0x0
0x11d93: jz 0x12568
0x11d99: mov [rsp+0x38],0xffffffff
0x11da2: mov edi,dword ptr [r15+0x48]
0x11da6: mov [rsp+0x5f],0x1
0x11dab: mov rcx,qword ptr [rbp+0x48]
0x11daf: mov rdx,qword ptr [rbp+0x38]
0x11db3: mov [rsp+0x40],0x0
0x11dbc: cmp [rdx+rcx*1-0x1],0x2f
0x11dc1: lea rax,[rcx-0x1]
0x11dc5: cmovne rax,rcx
0x11dc9: and edi,0x4
0x11dcc: mov qword ptr [rsp+0x48],rax
0x11dd1: jz 0x11de3
0x11dd3: add rax,qword ptr [r15+0x20]
0x11dd7: lea rbx,[rax+0x1]
0x11ddb: mov [rax],0x2f
0x11dde: mov qword ptr [rsp+0x40],rbx
0x11de3: mov rax,qword ptr [rsp+0x48]
0x11de8: mov rbx,qword ptr [r15+0x30]
0x11dec: mov [rsp+0x5e],0x0
0x11df1: mov [rsp+0x5d],0x0
0x11df6: mov [rsp+0x8],0x0
0x11dff: mov [rsp+0x10],0x0
0x11e08: add rax,0x1
0x11e0c: mov qword ptr [rsp+0x20],rbp
0x11e11: sub rbx,rax
0x11e14: mov qword ptr [rsp+0x18],rax
0x11e19: mov rax,qword ptr [rbp+0x58]
0x11e1d: mov qword ptr [rsp+0x28],rbx
0x11e22: xor ebx,ebx
0x11e24: add rax,0x1
0x11e28: mov qword ptr [rsp+0x30],rax
0x11e2d: jmp 0x11f0f
0x11e32: nop qword ptr [rax+rax*1+0x0]
0x11e38: mov r9,r14
0x11e3b: add r9,qword ptr [rsp+0x18]
0x11e40: jb 0x126a0
0x11e46: mov rax,qword ptr [rsp+0x30]
0x11e4b: lea rsi,[r13+0x108]
0x11e52: mov qword ptr [r13+0x58],rax
0x11e56: mov rax,qword ptr [r15]
0x11e59: mov qword ptr [r13+0x48],r9
0x11e5d: mov qword ptr [r13+0x8],rax
0x11e61: mov rax,qword ptr [rbp+0x0]
0x11e65: mov qword ptr [r13+0x80],rax
0x11e6c: mov eax,dword ptr [r15+0x48]
0x11e70: test al,0x4
0x11e72: jnz 0x120e0
0x11e78: mov qword ptr [r13+0x30],rsi
0x11e7c: cmp [r15+0x40],0x0
0x11e81: jz 0x11e8c
0x11e83: test ah,0x4
0x11e86: jz 0x12188
0x11e8c: movzx edx,byte ptr [rbp+0x12]
0x11e90: and eax,0x18
0x11e93: mov esi,edx
0x11e95: sub edx,0x1
0x11e98: cmp eax,0x18
0x11e9b: jz 0x12150
0x11ea1: mov ecx,0xb
0x11ea6: cmp edx,0xb
0x11ea9: mov word ptr [r13+0x70],cx
0x11eae: jnbe 0x12118
0x11eb4: lea rax,[rip+0x5505]
0x11ebb: mov eax,dword ptr [rax+rdx*4+0x0]
0x11ebe: mov dword ptr [r13+0x90],eax
0x11ec5: mov eax,0x2
0x11eca: mov qword ptr [r13+0xa8],rax
0x11ed1: cmp [rsp+0x10],0x0
0x11ed7: mov [r13+0x10],0x0
0x11edf: jz 0x12108
0x11ee5: mov rax,qword ptr [rsp+0x8]
0x11eea: mov qword ptr [rax+0x10],r13
0x11eee: cmp rbx,0x2710
0x11ef5: jz 0x11ff0
0x11efb: add rbx,0x1
0x11eff: cmp rbx,qword ptr [rsp+0x38]
0x11f04: jnb 0x12048
0x11f0a: mov qword ptr [rsp+0x8],r13
0x11f0f: mov rax,qword ptr [rsp+0x20]
0x11f14: mov r13,qword ptr [rax+0x18]
0x11f18: test r13,r13
0x11f1b: jz 0x123e8
0x11f21: call 0x25a0
0x11f26: mov rdi,r13
0x11f29: mov [rax],0x0
0x11f2f: mov r12,rax
0x11f32: call 0x29f0
0x11f37: test rax,rax
0x11f3a: mov rbp,rax
0x11f3d: jz 0x124c0
0x11f43: test [r15+0x48],0x20
0x11f48: jnz 0x11f54
0x11f4a: cmp [rax+0x13],0x2e
0x11f4e: jz 0x12130
0x11f54: lea r13,[rbp+0x13]
0x11f58: mov rdi,r13
0x11f5b: call 0x2750
0x11f60: mov rsi,r13
0x11f63: mov rdx,rax
0x11f66: mov rdi,r15
0x11f69: mov r14,rax
0x11f6c: call 0x114a0
0x11f71: test rax,rax
0x11f74: mov r13,rax
0x11f77: jz 0x12390
0x11f7d: cmp qword ptr [rsp+0x28],r14
0x11f82: jnbe 0x11e38
0x11f88: mov rax,qword ptr [r15+0x20]
0x11f8c: lea rsi,[r15+0x30]
0x11f90: lea rdi,[r15+0x20]
0x11f94: mov qword ptr [rsp+0x28],rax
0x11f99: mov rax,qword ptr [rsp+0x48]
0x11f9e: lea rdx,[rax+r14*1+0x2]
0x11fa3: call 0x11830
0x11fa8: test al,al
0x11faa: jz 0x12390
0x11fb0: mov rdx,qword ptr [r15+0x20]
0x11fb4: cmp rdx,qword ptr [rsp+0x28]
0x11fb9: jz 0x121a0
0x11fbf: add rdx,qword ptr [rsp+0x18]
0x11fc4: test [r15+0x48],0x4
0x11fc9: cmove rdx,qword ptr [rsp+0x40]
0x11fcf: mov qword ptr [rsp+0x40],rdx
0x11fd4: mov rcx,qword ptr [r15+0x30]
0x11fd8: sub rcx,qword ptr [rsp+0x18]
0x11fdd: mov byte ptr [rsp+0x5d],al
0x11fe1: mov qword ptr [rsp+0x28],rcx
0x11fe6: jmp 0x11e38
0x11feb: nop qword ptr [rax+rax*1+0x0]
0x11ff0: cmp [r15+0x40],0x0
0x11ff5: jnz 0x11efb
0x11ffb: mov esi,dword ptr [rsp+0x64]
0x11fff: mov rdi,qword ptr [rsp+0x20]
0x12004: call 0x115c0
0x12009: cmp rax,0x1021994
0x1200f: jz 0x12380
0x12015: mov ecx,0xff534d42
0x1201a: cmp rax,rcx
0x1201d: jz 0x12380
0x12023: cmp rax,0x6969
0x12029: jz 0x12380
0x1202f: add rbx,0x1
0x12033: cmp rbx,qword ptr [rsp+0x38]
0x12038: mov [rsp+0x5e],0x1
0x1203d: jb 0x11f0a
0x12043: nop qword ptr [rax+rax*1+0x0]
0x12048: cmp [rsp+0x5d],0x0
0x1204d: mov rbp,qword ptr [rsp+0x20]
0x12052: jz 0x123f6
0x12058: mov rax,qword ptr [r15+0x8]
0x1205c: mov rcx,qword ptr [r15+0x20]
0x12060: test rax,rax
0x12063: jz 0x12090
0x12065: nop qword ptr [rax]
0x12068: mov rdx,qword ptr [rax+0x30]
0x1206c: lea rsi,[rax+0x108]
0x12073: cmp rdx,rsi
0x12076: jz 0x12083
0x12078: sub rdx,qword ptr [rax+0x38]
0x1207c: add rdx,rcx
0x1207f: mov qword ptr [rax+0x30],rdx
0x12083: mov qword ptr [rax+0x38],rcx
0x12087: mov rax,qword ptr [rax+0x10]
0x1208b: test rax,rax
0x1208e: jnz 0x12068
0x12090: mov rax,qword ptr [rsp+0x10]
0x12095: jmp 0x120a3
0x12097: nop qword ptr [rax+rax*1+0x0]
0x120a0: mov rax,rdx
0x120a3: cmp [rax+0x58],0x0
0x120a8: js 0x123f6
0x120ae: mov rdx,qword ptr [rax+0x30]
0x120b2: lea rsi,[rax+0x108]
0x120b9: cmp rdx,rsi
0x120bc: jz 0x120c9
0x120be: sub rdx,qword ptr [rax+0x38]
0x120c2: add rdx,rcx
0x120c5: mov qword ptr [rax+0x30],rdx
0x120c9: mov rdx,qword ptr [rax+0x10]
0x120cd: mov qword ptr [rax+0x38],rcx
0x120d1: test rdx,rdx
0x120d4: jnz 0x120a0
0x120d6: mov rdx,qword ptr [rax+0x8]
0x120da: jmp 0x120a0
0x120dc: nop qword ptr [rax+0x0]
0x120e0: mov rax,qword ptr [r13+0x38]
0x120e4: mov rdi,qword ptr [rsp+0x40]
0x120e9: mov qword ptr [r13+0x30],rax
0x120ed: mov rax,qword ptr [r13+0x60]
0x120f1: lea rdx,[rax+0x1]
0x120f5: call 0x2b00
0x120fa: mov eax,dword ptr [r15+0x48]
0x120fe: jmp 0x11e7c
0x12103: nop qword ptr [rax+rax*1+0x0]
0x12108: mov qword ptr [rsp+0x10],r13
0x1210d: jmp 0x11eee
0x12112: nop qword ptr [rax+rax*1+0x0]
0x12118: mov [r13+0x90],0x0
0x12123: mov eax,0x2
0x12128: jmp 0x11eca
0x1212d: nop qword ptr [rax]
0x12130: cmp [rax+0x14],0x0
0x12134: jz 0x12141
0x12136: cmp [rax+0x14],0x2e
0x1213b: jnz 0x11f54
0x12141: mov r13,qword ptr [rsp+0x8]
0x12146: jmp 0x11f0a
0x1214b: nop qword ptr [rax+rax*1+0x0]
0x12150: and esi,0xfb
0x12156: jz 0x11ea1
0x1215c: mov eax,0xb
0x12161: cmp edx,0xb
0x12164: mov word ptr [r13+0x70],ax
0x12169: jbe 0x126f6
0x1216f: mov [r13+0x90],0x0
0x1217a: mov eax,0x1
0x1217f: jmp 0x11eca
0x12184: nop qword ptr [rax+0x0]
0x12188: xor edx,edx
0x1218a: mov rsi,r13
0x1218d: mov rdi,r15
0x12190: call 0x111c0
0x12195: mov word ptr [r13+0x70],ax
0x1219a: jmp 0x11ed1
0x1219f: nop 
0x121a0: movzx eax,byte ptr [rsp+0x5d]
0x121a5: jmp 0x11fd4
0x121aa: nop qword ptr [rax+rax*1+0x0]
0x121b0: mov eax,dword ptr [rdi+0x48]
0x121b3: mov edx,eax
0x121b5: and edx,0x10
0x121b8: jz 0x121c7
0x121ba: test al,0x1
0x121bc: mov edx,0x20000
0x121c1: jnz 0x122c8
0x121c7: and eax,0x204
0x121cc: mov rsi,qword ptr [rbp+0x30]
0x121d0: mov edi,0xffffff9c
0x121d5: cmp eax,0x200
0x121da: jnz 0x121e0
0x121dc: mov edi,dword ptr [r15+0x2c]
0x121e0: lea rcx,[rsp+0x64]
0x121e5: call 0xcb30
0x121ea: test rax,rax
0x121ed: mov qword ptr [rbp+0x18],rax
0x121f1: jz 0x12510
0x121f7: cmp [rbp+0x70],0xb
0x121fc: jz 0x12590
0x12202: mov edi,dword ptr [r15+0x48]
0x12206: test edi,0x100
0x1220c: jnz 0x12330
0x12212: cmp [r15+0x40],0x1
0x12217: sbb rax,rax
0x1221a: and eax,0x186a1
0x1221f: sub rax,0x1
0x12223: cmp [rsp+0x58],0x2
0x12228: mov qword ptr [rsp+0x38],rax
0x1222d: jz 0x12580
0x12233: mov edx,dword ptr [r15+0x48]
0x12237: mov eax,dword ptr [rsp+0x64]
0x1223b: and edx,0x38
0x1223e: cmp edx,0x18
0x12241: jz 0x125e4
0x12247: cmp [rsp+0x58],0x3
0x1224c: mov r12d,0x1
0x12252: setz bl
0x12255: test [r15+0x49],0x2
0x1225a: jnz 0x1263c
0x12260: test eax,eax
0x12262: jns 0x125c8
0x12268: test bl,bl
0x1226a: jz 0x1227b
0x1226c: test r12b,r12b
0x1226f: jz 0x1227b
0x12271: call 0x25a0
0x12276: mov eax,dword ptr [rax]
0x12278: mov dword ptr [rbp+0x40],eax
0x1227b: or [rbp+0x72],0x1
0x12280: mov rdi,qword ptr [rbp+0x18]
0x12284: call 0x28a0
0x12289: mov edi,dword ptr [r15+0x48]
0x1228d: mov [rbp+0x18],0x0
0x12295: test edi,0x200
0x1229b: jz 0x122b0
0x1229d: mov eax,dword ptr [rsp+0x64]
0x122a1: test eax,eax
0x122a3: js 0x122b0
0x122a5: mov edi,eax
0x122a7: call 0x2870
0x122ac: mov edi,dword ptr [r15+0x48]
0x122b0: mov [rbp+0x18],0x0
0x122b8: mov [rsp+0x5f],0x0
0x122bd: jmp 0x11dab
0x122c2: nop qword ptr [rax+rax*1+0x0]
0x122c8: xor edx,edx
0x122ca: cmp [rbp+0x58],0x0
0x122cf: setnz dl
0x122d2: shl edx,0x11
0x122d5: jmp 0x121c7
0x122da: nop qword ptr [rax+rax*1+0x0]
0x122e0: mov rdi,qword ptr [rbp+0x18]
0x122e4: call 0x28a0
0x122e9: cmp [rsp+0x58],0x3
0x122ee: mov [rbp+0x18],0x0
0x122f6: jz 0x1251b
0x122fc: mov [rsp+0x10],0x0
0x12305: mov rbx,qword ptr [rsp+0x68]
0x1230a: xor rbx,0x28
0x12313: mov rax,qword ptr [rsp+0x10]
0x12318: jnz 0x126f1
0x1231e: add rsp,0x78
0x12322: pop rbx
0x12323: pop rbp
0x12324: pop r12
0x12326: pop r13
0x12328: pop r14
0x1232a: pop r15
0x1232c: ret
0x1232d: nop qword ptr [rax]
0x12330: lea rbx,[r15+0x58]
0x12334: mov rdx,rbp
0x12337: mov rsi,rbx
0x1233a: call 0x11c80
0x1233f: xor edx,edx
0x12341: mov rsi,rbp
0x12344: mov rdi,r15
0x12347: call 0x111c0
0x1234c: mov edi,dword ptr [r15+0x48]
0x12350: mov rdx,rbp
0x12353: mov rsi,rbx
0x12356: call 0x11bd0
0x1235b: test al,al
0x1235d: jnz 0x12212
0x12363: call 0x25a0
0x12368: mov [rsp+0x10],0x0
0x12371: mov [rax],0xc
0x12377: jmp 0x12305
0x12379: nop qword ptr [rax+0x0]
0x12380: mov [rsp+0x5e],0x0
0x12385: jmp 0x11efb
0x1238a: nop qword ptr [rax+rax*1+0x0]
0x12390: mov rdi,r13
0x12393: mov rbp,qword ptr [rsp+0x20]
0x12398: mov ebx,dword ptr [r12]
0x1239c: call 0x2c80
0x123a1: mov rdi,qword ptr [rsp+0x10]
0x123a6: call 0x11530
0x123ab: mov rdi,qword ptr [rbp+0x18]
0x123af: call 0x28a0
0x123b4: mov r9d,0x7
0x123ba: mov [rbp+0x18],0x0
0x123c2: mov [rsp+0x10],0x0
0x123cb: mov word ptr [rbp+0x70],r9w
0x123d0: or [r15+0x48],0x2000
0x123d8: mov dword ptr [r12],ebx
0x123dc: jmp 0x12305
0x123e1: nop qword ptr [rax+0x0]
0x123e8: mov rbp,rax
0x123eb: cmp [rsp+0x5d],0x0
0x123f0: jnz 0x12058
0x123f6: test [r15+0x48],0x4
0x123fb: jz 0x1241b
0x123fd: mov rax,qword ptr [rsp+0x18]
0x12402: cmp qword ptr [r15+0x30],rax
0x12406: jz 0x1240d
0x12408: test rbx,rbx
0x1240b: jnz 0x12413
0x1240d: sub [rsp+0x40],0x1
0x12413: mov rax,qword ptr [rsp+0x40]
0x12418: mov [rax],0x0
0x1241b: cmp [rsp+0x50],0x0
0x12421: jnz 0x12490
0x12423: cmp [rsp+0x5f],0x0
0x12428: jz 0x12490
0x1242a: cmp [rsp+0x58],0x1
0x1242f: jz 0x12470
0x12431: test rbx,rbx
0x12434: jz 0x12470
0x12436: cmp [rsp+0x5e],0x0
0x1243b: jnz 0x12538
0x12441: cmp [r15+0x40],0x0
0x12446: jz 0x12305
0x1244c: cmp rbx,0x1
0x12450: jz 0x12305
0x12456: mov rsi,qword ptr [rsp+0x10]
0x1245b: mov rdx,rbx
0x1245e: mov rdi,r15
0x12461: call 0x11390
0x12466: mov qword ptr [rsp+0x10],rax
0x1246b: jmp 0x12305
0x12470: cmp [rbp+0x58],0x0
0x12475: jnz 0x125a6
0x1247b: mov rdi,r15
0x1247e: call 0x117d0
0x12483: test eax,eax
0x12485: setnz al
0x12488: test al,al
0x1248a: jnz 0x12613
0x12490: test rbx,rbx
0x12493: jnz 0x12436
0x12495: cmp [rsp+0x58],0x3
0x1249a: jz 0x12658
0x124a0: mov rdi,qword ptr [rsp+0x10]
0x124a5: call 0x11530
0x124aa: mov [rsp+0x10],0x0
0x124b3: jmp 0x12305
0x124b8: nop qword ptr [rax+rax*1+0x0]
0x124c0: mov eax,dword ptr [r12]
0x124c4: mov rbp,qword ptr [rsp+0x20]
0x124c9: test eax,eax
0x124cb: jz 0x124ee
0x124cd: test rbx,rbx
0x124d0: mov dword ptr [rbp+0x40],eax
0x124d3: jnz 0x12609
0x124d9: cmp [rsp+0x50],0x0
0x124df: mov eax,0x4
0x124e4: jnz 0x12609
0x124ea: mov word ptr [rbp+0x70],ax
0x124ee: mov rdi,qword ptr [rbp+0x18]
0x124f2: test rdi,rdi
0x124f5: jz 0x123eb
0x124fb: call 0x28a0
0x12500: mov [rbp+0x18],0x0
0x12508: jmp 0x123eb
0x1250d: nop qword ptr [rax]
0x12510: cmp [rsp+0x58],0x3
0x12515: jnz 0x122fc
0x1251b: mov r10d,0x4
0x12521: mov word ptr [rbp+0x70],r10w
0x12526: call 0x25a0
0x1252b: mov eax,dword ptr [rax]
0x1252d: mov dword ptr [rbp+0x40],eax
0x12530: jmp 0x122fc
0x12535: nop qword ptr [rax]
0x12538: lea rax,[rip-0x13af]
0x1253f: mov rsi,qword ptr [rsp+0x10]
0x12544: mov rdx,rbx
0x12547: mov rdi,r15
0x1254a: mov qword ptr [r15+0x40],rax
0x1254e: call 0x11390
0x12553: mov [r15+0x40],0x0
0x1255b: mov qword ptr [rsp+0x10],rax
0x12560: jmp 0x12305
0x12565: nop qword ptr [rax]
0x12568: mov [rsp+0x38],0x186a0
0x12571: mov [rsp+0x5f],0x1
0x12576: mov edi,dword ptr [r15+0x48]
0x1257a: jmp 0x11dab
0x1257f: nop 
0x12580: mov [rsp+0x5f],0x0
0x12585: mov edi,dword ptr [r15+0x48]
0x12589: jmp 0x11dab
0x1258e: nop 
0x12590: xor edx,edx
0x12592: mov rsi,rbp
0x12595: mov rdi,r15
0x12598: call 0x111c0
0x1259d: mov word ptr [rbp+0x70],ax
0x125a1: jmp 0x12212
0x125a6: mov rsi,qword ptr [rbp+0x8]
0x125aa: lea rcx,[rip+0x353a]
0x125b1: mov edx,0xffffffff
0x125b6: mov rdi,r15
0x125b9: call 0x11950
0x125be: test eax,eax
0x125c0: setnz al
0x125c3: jmp 0x12488
0x125c8: xor ecx,ecx
0x125ca: mov edx,eax
0x125cc: mov rsi,rbp
0x125cf: mov rdi,r15
0x125d2: call 0x11950
0x125d7: test eax,eax
0x125d9: jnz 0x12268
0x125df: jmp 0x11da2
0x125e4: cmp [rbp+0x88],0x2
0x125ec: jnz 0x12247
0x125f2: mov esi,eax
0x125f4: mov rdi,rbp
0x125f7: call 0x116f0
0x125fc: test eax,eax
0x125fe: jnz 0x1267e
0x12600: mov eax,dword ptr [rsp+0x64]
0x12604: jmp 0x12247
0x12609: mov eax,0x7
0x1260e: jmp 0x124ea
0x12613: mov edi,0x7
0x12618: mov word ptr [rbp+0x70],di
0x1261c: or [r15+0x48],0x2000
0x12624: mov rdi,qword ptr [rsp+0x10]
0x12629: call 0x11530
0x1262e: mov [rsp+0x10],0x0
0x12637: jmp 0x12305
0x1263c: mov edi,eax
0x1263e: mov edx,0x3
0x12643: mov esi,0x406
0x12648: xor eax,eax
0x1264a: call 0x14b30
0x1264f: mov dword ptr [rsp+0x64],eax
0x12653: jmp 0x12260
0x12658: movzx eax,byte ptr [rbp+0x70]
0x1265c: cmp ax,0x7
0x12660: jz 0x124a0
0x12666: cmp ax,0x4
0x1266a: jz 0x124a0
0x12670: mov esi,0x6
0x12675: mov word ptr [rbp+0x70],si
0x12679: jmp 0x124a0
0x1267e: cmp [rsp+0x58],0x3
0x12683: jnz 0x12580
0x12689: mov eax,dword ptr [rsp+0x64]
0x1268d: xor r12d,r12d
0x12690: mov ebx,0x1
0x12695: jmp 0x12255
0x1269a: nop qword ptr [rax+rax*1+0x0]
0x126a0: mov rdi,r13
0x126a3: mov rbp,qword ptr [rsp+0x20]
0x126a8: call 0x2c80
0x126ad: mov rdi,qword ptr [rsp+0x10]
0x126b2: call 0x11530
0x126b7: mov rdi,qword ptr [rbp+0x18]
0x126bb: call 0x28a0
0x126c0: mov r8d,0x7
0x126c6: mov [rbp+0x18],0x0
0x126ce: mov [rsp+0x10],0x0
0x126d7: mov word ptr [rbp+0x70],r8w
0x126dc: or [r15+0x48],0x2000
0x126e4: mov [r12],0x24
0x126ec: jmp 0x12305
0x126f1: call 0x2780
0x126f6: lea rax,[rip+0x4cc3]
0x126fd: mov eax,dword ptr [rax+rdx*4+0x0]
0x12700: mov dword ptr [r13+0x90],eax
0x12707: mov eax,0x1
0x1270c: jmp 0x11eca
0x12720: push r15
0x12722: push r14
0x12724: push r13
0x12726: push r12
0x12728: push rbp
0x12729: push rbx
0x1272a: sub rsp,0x28
0x1272e: test esi,0xfffff000
0x12734: jnz 0x12ab8
0x1273a: mov eax,esi
0x1273c: mov ebp,esi
0x1273e: and eax,0x204
0x12743: cmp eax,0x204
0x12748: jz 0x12ab8
0x1274e: test sil,0x12
0x12752: jz 0x12ab8
0x12758: mov r13,rdi
0x1275b: mov esi,0x1
0x12760: mov edi,0x80
0x12765: mov r14,rdx
0x12768: call 0x2910
0x1276d: test rax,rax
0x12770: mov rbx,rax
0x12773: jz 0x129ce
0x12779: test bpl,0x2
0x1277d: mov qword ptr [rax+0x40],r14
0x12781: jnz 0x129e0
0x12787: mov rdi,qword ptr [r13+0x0]
0x1278b: mov dword ptr [rax+0x48],ebp
0x1278e: mov [rbx+0x2c],0xffffff9c
0x12795: test rdi,rdi
0x12798: jz 0x129ff
0x1279e: mov r15,r13
0x127a1: xor r12d,r12d
0x127a4: nop qword ptr [rax+0x0]
0x127a8: call 0x2750
0x127ad: cmp r12,rax
0x127b0: cmovnae r12,rax
0x127b4: add r15,0x8
0x127b8: mov rdi,qword ptr [r15]
0x127bb: test rdi,rdi
0x127be: jnz 0x127a8
0x127c0: lea rdx,[r12+0x1]
0x127c5: mov eax,0x1000
0x127ca: cmp rdx,0x1000
0x127d1: cmovnae rdx,rax
0x127d5: lea rsi,[rbx+0x30]
0x127d9: lea rdi,[rbx+0x20]
0x127dd: call 0x11830
0x127e2: test al,al
0x127e4: mov byte ptr [rsp+0x16],al
0x127e8: jz 0x12a89
0x127ee: mov rsi,qword ptr [r13+0x0]
0x127f2: test rsi,rsi
0x127f5: jz 0x12aa0
0x127fb: lea rsi,[rip+0x3f8a]
0x12802: xor edx,edx
0x12804: mov rdi,rbx
0x12807: call 0x114a0
0x1280c: test rax,rax
0x1280f: mov r15,rax
0x12812: jz 0x12a80
0x12818: mov rax,0xffffffff
0x1281f: test r14,r14
0x12822: mov rsi,qword ptr [r13+0x0]
0x12826: mov qword ptr [r15+0x58],rax
0x1282a: mov qword ptr [r15+0x68],rax
0x1282e: jz 0x1283d
0x12830: mov eax,dword ptr [rbx+0x48]
0x12833: shr eax,0xa
0x12836: and eax,0x1
0x12839: mov byte ptr [rsp+0x16],al
0x1283d: test rsi,rsi
0x12840: jz 0x12aac
0x12846: shr ebp,0xb
0x12849: mov [rsp+0x18],0x0
0x12852: xor r12d,r12d
0x12855: xor ebp,0x1
0x12858: mov eax,ebp
0x1285a: xor ebp,ebp
0x1285c: and eax,0x1
0x1285f: mov byte ptr [rsp+0x17],al
0x12863: jmp 0x128dc
0x12865: nop qword ptr [rax]
0x12868: mov rdx,rax
0x1286b: mov rdi,rbx
0x1286e: call 0x114a0
0x12873: test rax,rax
0x12876: mov rcx,rax
0x12879: jz 0x12a70
0x1287f: mov [rax+0x58],0x0
0x12887: mov qword ptr [rax+0x8],r15
0x1288b: lea rax,[rax+0x108]
0x12892: test r12,r12
0x12895: mov qword ptr [rcx+0x30],rax
0x12899: jz 0x12a10
0x1289f: cmp [rsp+0x16],0x0
0x128a4: jz 0x12a10
0x128aa: mov esi,0xb
0x128af: test r14,r14
0x128b2: mov [rcx+0xa8],0x2
0x128bd: mov word ptr [rcx+0x70],si
0x128c1: jz 0x12a50
0x128c7: mov qword ptr [rcx+0x10],r12
0x128cb: mov r12,rcx
0x128ce: add rbp,0x1
0x128d2: mov rsi,qword ptr [r13+rbp*8+0x0]
0x128d7: test rsi,rsi
0x128da: jz 0x12930
0x128dc: mov rdi,rsi
0x128df: mov qword ptr [rsp+0x8],rsi
0x128e4: call 0x2750
0x128e9: cmp rax,0x2
0x128ed: mov rsi,qword ptr [rsp+0x8]
0x128f2: jbe 0x12868
0x128f8: cmp [rsp+0x17],0x0
0x128fd: jz 0x12868
0x12903: cmp [rsi+rax*1-0x1],0x2f
0x12908: jnz 0x12868
0x1290e: nop 
0x12910: cmp [rsi+rax*1-0x2],0x2f
0x12915: jnz 0x12868
0x1291b: sub rax,0x1
0x1291f: cmp rax,0x1
0x12923: jnz 0x12910
0x12925: jmp 0x12868
0x1292a: nop qword ptr [rax+rax*1+0x0]
0x12930: test r14,r14
0x12933: jz 0x1294c
0x12935: cmp rbp,0x1
0x12939: jbe 0x1294c
0x1293b: mov rsi,r12
0x1293e: mov rdx,rbp
0x12941: mov rdi,rbx
0x12944: call 0x11390
0x12949: mov r12,rax
0x1294c: lea rsi,[rip+0x3e39]
0x12953: xor edx,edx
0x12955: mov rdi,rbx
0x12958: call 0x114a0
0x1295d: test rax,rax
0x12960: mov qword ptr [rbx],rax
0x12963: jz 0x12a70
0x12969: mov edi,dword ptr [rbx+0x48]
0x1296c: mov edx,0x9
0x12971: lea rsi,[rbx+0x58]
0x12975: mov qword ptr [rax+0x10],r12
0x12979: mov word ptr [rax+0x70],dx
0x1297d: mov [rax+0x58],0x1
0x12985: call 0x118a0
0x1298a: test al,al
0x1298c: jz 0x12a70
0x12992: mov esi,dword ptr [rbx+0x48]
0x12995: test esi,0x204
0x1299b: jnz 0x129c0
0x1299d: mov edi,dword ptr [rbx+0x2c]
0x129a0: lea rdx,[rip+0x3145]
0x129a7: call 0x11910
0x129ac: test eax,eax
0x129ae: mov dword ptr [rbx+0x28],eax
0x129b1: jns 0x129c0
0x129b3: or [rbx+0x48],0x4
0x129b7: nop qword ptr [rax+rax*1+0x0]
0x129c0: lea rdi,[rbx+0x60]
0x129c4: mov esi,0xffffffff
0x129c9: call 0x13cb0
0x129ce: add rsp,0x28
0x129d2: mov rax,rbx
0x129d5: pop rbx
0x129d6: pop rbp
0x129d7: pop r12
0x129d9: pop r13
0x129db: pop r14
0x129dd: pop r15
0x129df: ret
0x129e0: mov rdi,qword ptr [r13+0x0]
0x129e4: mov eax,ebp
0x129e6: mov [rbx+0x2c],0xffffff9c
0x129ed: and ah,0xfd
0x129f0: or eax,0x4
0x129f3: test rdi,rdi
0x129f6: mov dword ptr [rbx+0x48],eax
0x129f9: jnz 0x1279e
0x129ff: mov edx,0x1000
0x12a04: jmp 0x127d5
0x12a09: nop qword ptr [rax+0x0]
0x12a10: xor edx,edx
0x12a12: mov rsi,rcx
0x12a15: mov rdi,rbx
0x12a18: mov qword ptr [rsp+0x8],rcx
0x12a1d: call 0x111c0
0x12a22: mov rcx,qword ptr [rsp+0x8]
0x12a27: test r14,r14
0x12a2a: mov word ptr [rcx+0x70],ax
0x12a2e: jnz 0x128c7
0x12a34: test r12,r12
0x12a37: mov [rcx+0x10],0x0
0x12a3f: jnz 0x12a58
0x12a41: mov qword ptr [rsp+0x18],rcx
0x12a46: mov r12,rcx
0x12a49: jmp 0x128ce
0x12a4e: nop 
0x12a50: mov [rcx+0x10],0x0
0x12a58: mov rax,qword ptr [rsp+0x18]
0x12a5d: mov qword ptr [rsp+0x18],rcx
0x12a62: mov qword ptr [rax+0x10],rcx
0x12a66: jmp 0x128ce
0x12a6b: nop qword ptr [rax+rax*1+0x0]
0x12a70: mov rdi,r12
0x12a73: call 0x11530
0x12a78: mov rdi,r15
0x12a7b: call 0x2c80
0x12a80: mov rdi,qword ptr [rbx+0x20]
0x12a84: call 0x2c80
0x12a89: mov rdi,rbx
0x12a8c: xor ebx,ebx
0x12a8e: call 0x2c80
0x12a93: jmp 0x129ce
0x12a98: nop qword ptr [rax+rax*1+0x0]
0x12aa0: xor r15d,r15d
0x12aa3: test r14,r14
0x12aa6: jnz 0x12830
0x12aac: xor r12d,r12d
0x12aaf: jmp 0x1294c
0x12ab4: nop qword ptr [rax+0x0]
0x12ab8: call 0x25a0
0x12abd: xor ebx,ebx
0x12abf: mov [rax],0x16
0x12ac5: jmp 0x129ce
0x12ad0: push r12
0x12ad2: push rbp
0x12ad3: mov rbp,rdi
0x12ad6: push rbx
0x12ad7: mov rdi,qword ptr [rdi]
0x12ada: test rdi,rdi
0x12add: jz 0x12b23
0x12adf: cmp [rdi+0x58],0x0
0x12ae4: jns 0x12aff
0x12ae6: jmp 0x12c00
0x12aeb: nop qword ptr [rax+rax*1+0x0]
0x12af0: call 0x2c80
0x12af5: cmp [rbx+0x58],0x0
0x12afa: mov rdi,rbx
0x12afd: js 0x12b1b
0x12aff: mov rbx,qword ptr [rdi+0x10]
0x12b03: test rbx,rbx
0x12b06: jnz 0x12af0
0x12b08: mov rbx,qword ptr [rdi+0x8]
0x12b0c: call 0x2c80
0x12b11: cmp [rbx+0x58],0x0
0x12b16: mov rdi,rbx
0x12b19: jns 0x12aff
0x12b1b: mov rdi,rbx
0x12b1e: call 0x2c80
0x12b23: mov rdi,qword ptr [rbp+0x8]
0x12b27: test rdi,rdi
0x12b2a: jz 0x12b31
0x12b2c: call 0x11530
0x12b31: mov rdi,qword ptr [rbp+0x10]
0x12b35: call 0x2c80
0x12b3a: mov rdi,qword ptr [rbp+0x20]
0x12b3e: call 0x2c80
0x12b43: mov eax,dword ptr [rbp+0x48]
0x12b46: test ah,0x2
0x12b49: jz 0x12bb0
0x12b4b: mov edi,dword ptr [rbp+0x2c]
0x12b4e: test edi,edi
0x12b50: jns 0x12be0
0x12b56: xor ebx,ebx
0x12b58: lea rdi,[rbp+0x60]
0x12b5c: call 0x11580
0x12b61: mov rdi,qword ptr [rbp+0x50]
0x12b65: test rdi,rdi
0x12b68: jz 0x12b6f
0x12b6a: call 0xc240
0x12b6f: test [rbp+0x48],0x102
0x12b76: mov rdi,qword ptr [rbp+0x58]
0x12b7a: jz 0x12ba0
0x12b7c: test rdi,rdi
0x12b7f: jz 0x12b86
0x12b81: call 0xc240
0x12b86: mov rdi,rbp
0x12b89: call 0x2c80
0x12b8e: test ebx,ebx
0x12b90: jnz 0x12c41
0x12b96: mov eax,ebx
0x12b98: pop rbx
0x12b99: pop rbp
0x12b9a: pop r12
0x12b9c: ret
0x12b9d: nop qword ptr [rax]
0x12ba0: call 0x2c80
0x12ba5: jmp 0x12b86
0x12ba7: nop qword ptr [rax+rax*1+0x0]
0x12bb0: test al,0x4
0x12bb2: jnz 0x12b56
0x12bb4: mov edi,dword ptr [rbp+0x28]
0x12bb7: call 0x2a60
0x12bbc: test eax,eax
0x12bbe: jnz 0x12c10
0x12bc0: mov edi,dword ptr [rbp+0x28]
0x12bc3: call 0x2870
0x12bc8: test eax,eax
0x12bca: jz 0x12b56
0x12bcc: call 0x25a0
0x12bd1: mov r12,rax
0x12bd4: jmp 0x12c38
0x12bd6: nop qword ptr [rax+rax*1+0x0]
0x12be0: call 0x2870
0x12be5: test eax,eax
0x12be7: jz 0x12b56
0x12bed: call 0x25a0
0x12bf2: mov ebx,dword ptr [rax]
0x12bf4: jmp 0x12b58
0x12bf9: nop qword ptr [rax+0x0]
0x12c00: mov rbx,rdi
0x12c03: mov rdi,rbx
0x12c06: call 0x2c80
0x12c0b: jmp 0x12b23
0x12c10: call 0x25a0
0x12c15: mov edi,dword ptr [rbp+0x28]
0x12c18: mov r12,rax
0x12c1b: mov ebx,dword ptr [rax]
0x12c1d: call 0x2870
0x12c22: test eax,eax
0x12c24: jz 0x12b58
0x12c2a: test ebx,ebx
0x12c2c: jnz 0x12b58
0x12c32: nop qword ptr [rax+rax*1+0x0]
0x12c38: mov ebx,dword ptr [r12]
0x12c3c: jmp 0x12b58
0x12c41: call 0x25a0
0x12c46: mov dword ptr [rax],ebx
0x12c48: mov ebx,0xffffffff
0x12c4d: jmp 0x12b96
0x12c60: push r14
0x12c62: push r13
0x12c64: push r12
0x12c66: push rbp
0x12c67: push rbx
0x12c68: mov rbp,qword ptr [rdi]
0x12c6b: test rbp,rbp
0x12c6e: jz 0x12d7e
0x12c74: mov edx,dword ptr [rdi+0x48]
0x12c77: test dh,0x20
0x12c7a: jnz 0x12d7e
0x12c80: movzx eax,byte ptr [rbp+0x74]
0x12c84: mov ebx,0x3
0x12c89: mov r12,rdi
0x12c8c: mov word ptr [rbp+0x74],bx
0x12c90: cmp ax,0x1
0x12c94: jz 0x12ee0
0x12c9a: cmp ax,0x2
0x12c9e: movzx ecx,byte ptr [rbp+0x70]
0x12ca2: jz 0x12d90
0x12ca8: cmp cx,0x1
0x12cac: jnz 0x12ce0
0x12cae: jmp 0x12ed0
0x12cb3: nop qword ptr [rax+rax*1+0x0]
0x12cb8: mov qword ptr [r12],rbx
0x12cbc: mov rdi,rbp
0x12cbf: call 0x2c80
0x12cc4: cmp [rbx+0x58],0x0
0x12cc9: jz 0x12f00
0x12ccf: movzx eax,byte ptr [rbx+0x74]
0x12cd3: mov rbp,rbx
0x12cd6: cmp ax,0x4
0x12cda: jnz 0x13008
0x12ce0: mov rbx,qword ptr [rbp+0x10]
0x12ce4: test rbx,rbx
0x12ce7: jnz 0x12cb8
0x12ce9: mov rbx,qword ptr [rbp+0x8]
0x12ced: cmp [rbx+0x18],0x0
0x12cf2: jnz 0x13260
0x12cf8: mov qword ptr [r12],rbx
0x12cfc: mov rdi,rbp
0x12cff: call 0x2c80
0x12d04: cmp [rbx+0x58],0xffffffff
0x12d09: jz 0x131c2
0x12d0f: cmp [rbx+0x70],0xb
0x12d14: jz 0x12e4f
0x12d1a: mov rdx,qword ptr [r12+0x20]
0x12d1f: mov rax,qword ptr [rbx+0x48]
0x12d23: mov [rdx+rax*1+0x0],0x0
0x12d27: cmp [rbx+0x58],0x0
0x12d2c: jz 0x130f0
0x12d32: movzx eax,byte ptr [rbx+0x72]
0x12d36: test al,0x2
0x12d38: jz 0x130a8
0x12d3e: mov eax,dword ptr [r12+0x48]
0x12d43: mov edi,dword ptr [rbx+0x44]
0x12d46: test al,0x4
0x12d48: jz 0x1314c
0x12d4e: call 0x2870
0x12d53: mov edi,dword ptr [r12+0x48]
0x12d58: cmp [rbx+0x70],0x2
0x12d5d: jz 0x12d73
0x12d5f: mov ecx,dword ptr [rbx+0x40]
0x12d62: test ecx,ecx
0x12d64: jz 0x13108
0x12d6a: mov edx,0x7
0x12d6f: mov word ptr [rbx+0x70],dx
0x12d73: and edi,0x2000
0x12d79: mov rbp,rbx
0x12d7c: jz 0x12dfa
0x12d7e: xor ebp,ebp
0x12d80: pop rbx
0x12d81: mov rax,rbp
0x12d84: pop rbp
0x12d85: pop r12
0x12d87: pop r13
0x12d89: pop r14
0x12d8b: ret
0x12d8c: nop qword ptr [rax+0x0]
0x12d90: lea eax,[rcx-0xc]
0x12d93: cmp ax,0x1
0x12d97: jbe 0x12e10
0x12d99: cmp cx,0x1
0x12d9d: jnz 0x12ce0
0x12da3: test dl,0x40
0x12da6: jz 0x12e58
0x12dac: mov rax,qword ptr [r12+0x18]
0x12db1: cmp qword ptr [rbp+0x78],rax
0x12db5: jz 0x12e58
0x12dbb: test [rbp+0x72],0x2
0x12dbf: jnz 0x132a0
0x12dc5: mov rdi,qword ptr [r12+0x8]
0x12dca: test rdi,rdi
0x12dcd: jz 0x12ddd
0x12dcf: call 0x11530
0x12dd4: mov [r12+0x8],0x0
0x12ddd: mov edi,dword ptr [r12+0x48]
0x12de2: mov r10d,0x6
0x12de8: lea rsi,[r12+0x58]
0x12ded: mov word ptr [rbp+0x70],r10w
0x12df2: mov rdx,rbp
0x12df5: call 0x11c80
0x12dfa: pop rbx
0x12dfb: mov rax,rbp
0x12dfe: pop rbp
0x12dff: pop r12
0x12e01: pop r13
0x12e03: pop r14
0x12e05: ret
0x12e06: nop qword ptr [rax+rax*1+0x0]
0x12e10: mov edx,0x1
0x12e15: mov rsi,rbp
0x12e18: call 0x111c0
0x12e1d: cmp ax,0x1
0x12e21: mov word ptr [rbp+0x70],ax
0x12e25: jz 0x1316c
0x12e2b: cmp ax,0xb
0x12e2f: mov qword ptr [r12],rbp
0x12e33: jnz 0x12dfa
0x12e35: nop qword ptr [rax]
0x12e38: mov rax,qword ptr [rbp+0xa8]
0x12e3f: cmp rax,0x2
0x12e43: jz 0x131e8
0x12e49: cmp rax,0x1
0x12e4d: jz 0x12dfa
0x12e4f: call 0x2590
0x12e54: nop qword ptr [rax+0x0]
0x12e58: mov rdi,qword ptr [r12+0x8]
0x12e5d: test rdi,rdi
0x12e60: jz 0x13078
0x12e66: test dh,0x10
0x12e69: jnz 0x13062
0x12e6f: mov rcx,qword ptr [rbp+0x30]
0x12e73: mov edx,0xffffffff
0x12e78: mov rsi,rbp
0x12e7b: mov rdi,r12
0x12e7e: call 0x11950
0x12e83: test eax,eax
0x12e85: jz 0x13142
0x12e8b: call 0x25a0
0x12e90: mov eax,dword ptr [rax]
0x12e92: or [rbp+0x72],0x1
0x12e97: mov dword ptr [rbp+0x40],eax
0x12e9a: mov rbp,qword ptr [r12+0x8]
0x12e9f: test rbp,rbp
0x12ea2: jz 0x13096
0x12ea8: mov rax,rbp
0x12eab: nop qword ptr [rax+rax*1+0x0]
0x12eb0: mov rdx,qword ptr [rax+0x8]
0x12eb4: mov rdx,qword ptr [rdx+0x30]
0x12eb8: mov qword ptr [rax+0x30],rdx
0x12ebc: mov rax,qword ptr [rax+0x10]
0x12ec0: test rax,rax
0x12ec3: jnz 0x12eb0
0x12ec5: jmp 0x13096
0x12eca: nop qword ptr [rax+rax*1+0x0]
0x12ed0: cmp ax,0x4
0x12ed4: jnz 0x12da3
0x12eda: jmp 0x12dbb
0x12edf: nop 
0x12ee0: mov rsi,rbp
0x12ee3: xor edx,edx
0x12ee5: call 0x111c0
0x12eea: mov word ptr [rbp+0x70],ax
0x12eee: mov rax,rbp
0x12ef1: pop rbx
0x12ef2: pop rbp
0x12ef3: pop r12
0x12ef5: pop r13
0x12ef7: pop r14
0x12ef9: ret
0x12efa: nop qword ptr [rax+rax*1+0x0]
0x12f00: mov rdi,r12
0x12f03: call 0x117d0
0x12f08: test eax,eax
0x12f0a: jnz 0x13311
0x12f10: test [r12+0x48],0x102
0x12f19: mov rdi,qword ptr [r12+0x58]
0x12f1e: jz 0x13058
0x12f24: test rdi,rdi
0x12f27: jz 0x12f2e
0x12f29: call 0xc240
0x12f2e: mov rdx,qword ptr [rbx+0x60]
0x12f32: lea rbp,[rbx+0x108]
0x12f39: mov rdi,qword ptr [r12+0x20]
0x12f3e: mov rsi,rbp
0x12f41: mov qword ptr [rbx+0x48],rdx
0x12f45: add rdx,0x1
0x12f49: call 0x2b00
0x12f4e: mov esi,0x2f
0x12f53: mov rdi,rbp
0x12f56: call 0x27e0
0x12f5b: test rax,rax
0x12f5e: jz 0x12f8b
0x12f60: cmp rbp,rax
0x12f63: jz 0x13130
0x12f69: lea r13,[rax+0x1]
0x12f6d: mov rdi,r13
0x12f70: call 0x2750
0x12f75: lea rdx,[rax+0x1]
0x12f79: mov r14,rax
0x12f7c: mov rsi,r13
0x12f7f: mov rdi,rbp
0x12f82: call 0x2b00
0x12f87: mov qword ptr [rbx+0x60],r14
0x12f8b: mov rax,qword ptr [r12+0x20]
0x12f90: mov edi,dword ptr [r12+0x48]
0x12f95: lea rsi,[r12+0x58]
0x12f9a: mov rbp,rbx
0x12f9d: mov qword ptr [rbx+0x38],rax
0x12fa1: mov qword ptr [rbx+0x30],rax
0x12fa5: call 0x118a0
0x12faa: movzx eax,byte ptr [rbx+0x70]
0x12fae: cmp ax,0xb
0x12fb2: mov qword ptr [r12],rbp
0x12fb6: jz 0x12e38
0x12fbc: cmp ax,0x1
0x12fc0: jnz 0x12dfa
0x12fc6: cmp [rbp+0x58],0x0
0x12fcb: jnz 0x12fd6
0x12fcd: mov rax,qword ptr [rbp+0x78]
0x12fd1: mov qword ptr [r12+0x18],rax
0x12fd6: mov edi,dword ptr [r12+0x48]
0x12fdb: lea rsi,[r12+0x58]
0x12fe0: mov rdx,rbp
0x12fe3: call 0x11bd0
0x12fe8: test al,al
0x12fea: jnz 0x12dfa
0x12ff0: call 0x25a0
0x12ff5: xor ebp,ebp
0x12ff7: mov [rax],0xc
0x12ffd: jmp 0x12dfa
0x13002: nop qword ptr [rax+rax*1+0x0]
0x13008: cmp ax,0x2
0x1300c: jz 0x132ad
0x13012: mov rax,qword ptr [rbp+0x8]
0x13016: lea rsi,[rbp+0x108]
0x1301d: mov rdi,qword ptr [rax+0x48]
0x13021: mov rax,qword ptr [rax+0x38]
0x13025: cmp [rax+rdi*1-0x1],0x2f
0x1302a: lea rdx,[rdi-0x1]
0x1302e: cmove rdi,rdx
0x13032: add rdi,qword ptr [r12+0x20]
0x13037: mov [rdi],0x2f
0x1303a: mov rax,qword ptr [rbp+0x60]
0x1303e: add rdi,0x1
0x13042: lea rdx,[rax+0x1]
0x13046: call 0x2b00
0x1304b: movzx eax,byte ptr [rbp+0x70]
0x1304f: jmp 0x12fae
0x13054: nop qword ptr [rax+0x0]
0x13058: call 0x2c80
0x1305d: jmp 0x12f2e
0x13062: and dh,0xef
0x13065: mov dword ptr [r12+0x48],edx
0x1306a: call 0x11530
0x1306f: mov [r12+0x8],0x0
0x13078: mov esi,0x3
0x1307d: mov rdi,r12
0x13080: call 0x11d40
0x13085: test rax,rax
0x13088: mov qword ptr [r12+0x8],rax
0x1308d: jz 0x13184
0x13093: mov rbp,rax
0x13096: mov [r12+0x8],0x0
0x1309f: jmp 0x13012
0x130a4: nop qword ptr [rax+0x0]
0x130a8: test al,0x1
0x130aa: jnz 0x12d53
0x130b0: mov rsi,qword ptr [rbx+0x8]
0x130b4: lea rcx,[rip+0x2a30]
0x130bb: mov edx,0xffffffff
0x130c0: mov rdi,r12
0x130c3: call 0x11950
0x130c8: test eax,eax
0x130ca: jz 0x12d53
0x130d0: call 0x25a0
0x130d5: mov edi,dword ptr [r12+0x48]
0x130da: mov eax,dword ptr [rax]
0x130dc: or edi,0x2000
0x130e2: mov dword ptr [rbx+0x40],eax
0x130e5: mov dword ptr [r12+0x48],edi
0x130ea: jmp 0x12d58
0x130ef: nop 
0x130f0: mov rdi,r12
0x130f3: call 0x117d0
0x130f8: test eax,eax
0x130fa: jnz 0x130d0
0x130fc: jmp 0x12d53
0x13101: nop qword ptr [rax+0x0]
0x13108: mov eax,0x6
0x1310d: lea rsi,[r12+0x58]
0x13112: mov rdx,rbx
0x13115: mov word ptr [rbx+0x70],ax
0x13119: call 0x11c80
0x1311e: mov edi,dword ptr [r12+0x48]
0x13123: jmp 0x12d73
0x13128: nop qword ptr [rax+rax*1+0x0]
0x13130: cmp [rbx+0x109],0x0
0x13137: jnz 0x12f69
0x1313d: jmp 0x12f8b
0x13142: mov rbp,qword ptr [r12+0x8]
0x13147: jmp 0x13096
0x1314c: test ah,0x2
0x1314f: jz 0x132ed
0x13155: mov esi,edi
0x13157: mov edx,0x1
0x1315c: mov rdi,r12
0x1315f: call 0x11760
0x13164: mov edi,dword ptr [rbx+0x44]
0x13167: jmp 0x12d4e
0x1316c: mov esi,dword ptr [r12+0x48]
0x13171: test sil,0x4
0x13175: jz 0x1337c
0x1317b: mov qword ptr [r12],rbp
0x1317f: jmp 0x12fc6
0x13184: mov edi,dword ptr [r12+0x48]
0x13189: test edi,0x2000
0x1318f: jnz 0x12d7e
0x13195: mov r9d,dword ptr [rbp+0x40]
0x13199: test r9d,r9d
0x1319c: jz 0x131b0
0x1319e: cmp [rbp+0x70],0x4
0x131a3: jz 0x131b0
0x131a5: mov r8d,0x7
0x131ab: mov word ptr [rbp+0x70],r8w
0x131b0: lea rsi,[r12+0x58]
0x131b5: mov rdx,rbp
0x131b8: call 0x11c80
0x131bd: jmp 0x12dfa
0x131c2: mov rdi,rbx
0x131c5: xor ebp,ebp
0x131c7: call 0x2c80
0x131cc: call 0x25a0
0x131d1: mov [rax],0x0
0x131d7: mov [r12],0x0
0x131df: jmp 0x12dfa
0x131e4: nop qword ptr [rax+0x0]
0x131e8: mov rbx,qword ptr [rbp+0x8]
0x131ec: cmp [rbx+0x68],0x0
0x131f1: jnz 0x13204
0x131f3: mov eax,dword ptr [r12+0x48]
0x131f8: and eax,0x18
0x131fb: cmp eax,0x18
0x131fe: jz 0x1335d
0x13204: xor edx,edx
0x13206: mov rsi,rbp
0x13209: mov rdi,r12
0x1320c: call 0x111c0
0x13211: mov edx,dword ptr [rbp+0x90]
0x13217: mov word ptr [rbp+0x70],ax
0x1321b: and edx,0xf000
0x13221: cmp edx,0x4000
0x13227: jnz 0x12fbc
0x1322d: cmp [rbp+0x58],0x0
0x13232: jz 0x1334e
0x13238: mov rcx,qword ptr [rbx+0x68]
0x1323c: lea rdx,[rcx-0x1]
0x13240: cmp rdx,0xfffffffd
0x13244: jnbe 0x1324a
0x13246: mov qword ptr [rbx+0x68],rdx
0x1324a: cmp ax,0x1
0x1324e: jnz 0x12dfa
0x13254: jmp 0x12fd6
0x13259: nop qword ptr [rax+0x0]
0x13260: mov rax,qword ptr [rbx+0x48]
0x13264: mov rdx,qword ptr [r12+0x20]
0x13269: mov esi,0x3
0x1326e: mov qword ptr [r12],rbx
0x13272: mov rdi,r12
0x13275: mov [rdx+rax*1+0x0],0x0
0x13279: call 0x11d40
0x1327e: test rax,rax
0x13281: mov rbx,rax
0x13284: jz 0x132d8
0x13286: mov rdi,rbp
0x13289: mov rbp,rbx
0x1328c: call 0x2c80
0x13291: jmp 0x13012
0x13296: nop qword ptr [rax+rax*1+0x0]
0x132a0: mov edi,dword ptr [rbp+0x44]
0x132a3: call 0x2870
0x132a8: jmp 0x12dc5
0x132ad: mov edx,0x1
0x132b2: mov rsi,rbx
0x132b5: mov rdi,r12
0x132b8: call 0x111c0
0x132bd: cmp ax,0x1
0x132c1: mov word ptr [rbx+0x70],ax
0x132c5: jz 0x13321
0x132c7: mov esi,0x3
0x132cc: mov rbp,rbx
0x132cf: mov word ptr [rbx+0x74],si
0x132d3: jmp 0x13012
0x132d8: test [r12+0x49],0x20
0x132de: jnz 0x12d7e
0x132e4: mov rbx,qword ptr [rbp+0x8]
0x132e8: jmp 0x12cf8
0x132ed: call 0x2a60
0x132f2: test eax,eax
0x132f4: jz 0x13309
0x132f6: call 0x25a0
0x132fb: mov eax,dword ptr [rax]
0x132fd: mov dword ptr [rbx+0x40],eax
0x13300: or [r12+0x48],0x2000
0x13309: mov edi,dword ptr [rbx+0x44]
0x1330c: jmp 0x12d4e
0x13311: or [r12+0x48],0x2000
0x1331a: xor ebp,ebp
0x1331c: jmp 0x12dfa
0x13321: mov esi,dword ptr [r12+0x48]
0x13326: test sil,0x4
0x1332a: jnz 0x132c7
0x1332c: mov edi,dword ptr [r12+0x2c]
0x13331: lea rdx,[rip+0x27b4]
0x13338: call 0x11910
0x1333d: test eax,eax
0x1333f: mov dword ptr [rbx+0x44],eax
0x13342: js 0x133c0
0x13344: or [rbx+0x72],0x2
0x13349: jmp 0x132c7
0x1334e: cmp ax,0x1
0x13352: jnz 0x12dfa
0x13358: jmp 0x12fcd
0x1335d: mov esi,dword ptr [r12+0x2c]
0x13362: mov rdi,rbx
0x13365: call 0x116f0
0x1336a: cmp eax,0x2
0x1336d: jnz 0x13204
0x13373: movzx eax,byte ptr [rbp+0x70]
0x13377: jmp 0x12fbc
0x1337c: mov edi,dword ptr [r12+0x2c]
0x13381: lea rdx,[rip+0x2764]
0x13388: call 0x11910
0x1338d: test eax,eax
0x1338f: mov dword ptr [rbp+0x44],eax
0x13392: js 0x133a2
0x13394: or [rbp+0x72],0x2
0x13399: movzx eax,byte ptr [rbp+0x70]
0x1339d: jmp 0x12fae
0x133a2: call 0x25a0
0x133a7: mov eax,dword ptr [rax]
0x133a9: mov r11d,0x7
0x133af: mov word ptr [rbp+0x70],r11w
0x133b4: mov dword ptr [rbp+0x40],eax
0x133b7: mov qword ptr [r12],rbp
0x133bb: jmp 0x12dfa
0x133c0: call 0x25a0
0x133c5: mov eax,dword ptr [rax]
0x133c7: mov edi,0x7
0x133cc: mov word ptr [rbx+0x70],di
0x133d0: mov dword ptr [rbx+0x40],eax
0x133d3: jmp 0x132c7
0x133e0: cmp edx,0x4
0x133e3: jnbe 0x133f0
0x133e5: mov word ptr [rsi+0x74],dx
0x133e9: xor eax,eax
0x133eb: ret
0x133ec: nop qword ptr [rax+0x0]
0x133f0: sub rsp,0x8
0x133f4: call 0x25a0
0x133f9: mov [rax],0x16
0x133ff: mov eax,0x1
0x13404: add rsp,0x8
0x13408: ret
0x13410: push r14
0x13412: push r13
0x13414: push r12
0x13416: push rbp
0x13417: mov r12d,esi
0x1341a: push rbx
0x1341b: mov rbx,rdi
0x1341e: call 0x25a0
0x13423: test r12d,0xffffefff
0x1342a: mov r13,rax
0x1342d: jnz 0x13518
0x13433: mov rbp,qword ptr [rbx]
0x13436: mov [rax],0x0
0x1343c: test [rbx+0x49],0x20
0x13440: jnz 0x134c0
0x13442: movzx eax,byte ptr [rbp+0x70]
0x13446: cmp ax,0x9
0x1344a: jz 0x134b0
0x1344c: cmp ax,0x1
0x13450: jnz 0x134c0
0x13452: mov rdi,qword ptr [rbx+0x8]
0x13456: test rdi,rdi
0x13459: jz 0x13460
0x1345b: call 0x11530
0x13460: cmp r12d,0x1000
0x13467: mov r14d,0x1
0x1346d: jnz 0x1347c
0x1346f: or [rbx+0x48],0x1000
0x13476: mov r14d,0x2
0x1347c: cmp [rbp+0x58],0x0
0x13481: jnz 0x13495
0x13483: mov rax,qword ptr [rbp+0x30]
0x13487: cmp [rax],0x2f
0x1348a: jz 0x13495
0x1348c: mov esi,dword ptr [rbx+0x48]
0x1348f: test sil,0x4
0x13493: jz 0x134d0
0x13495: mov esi,r14d
0x13498: mov rdi,rbx
0x1349b: call 0x11d40
0x134a0: mov qword ptr [rbx+0x8],rax
0x134a4: pop rbx
0x134a5: pop rbp
0x134a6: pop r12
0x134a8: pop r13
0x134aa: pop r14
0x134ac: ret
0x134ad: nop qword ptr [rax]
0x134b0: pop rbx
0x134b1: mov rax,qword ptr [rbp+0x10]
0x134b5: pop rbp
0x134b6: pop r12
0x134b8: pop r13
0x134ba: pop r14
0x134bc: ret
0x134bd: nop qword ptr [rax]
0x134c0: pop rbx
0x134c1: xor eax,eax
0x134c3: pop rbp
0x134c4: pop r12
0x134c6: pop r13
0x134c8: pop r14
0x134ca: ret
0x134cb: nop qword ptr [rax+rax*1+0x0]
0x134d0: mov edi,dword ptr [rbx+0x2c]
0x134d3: lea rdx,[rip+0x2612]
0x134da: call 0x11910
0x134df: test eax,eax
0x134e1: mov ebp,eax
0x134e3: js 0x13539
0x134e5: mov esi,r14d
0x134e8: mov rdi,rbx
0x134eb: call 0x11d40
0x134f0: test [rbx+0x49],0x2
0x134f4: mov qword ptr [rbx+0x8],rax
0x134f8: jnz 0x13528
0x134fa: mov edi,ebp
0x134fc: call 0x2a60
0x13501: test eax,eax
0x13503: jnz 0x13548
0x13505: mov edi,ebp
0x13507: call 0x2870
0x1350c: mov rax,qword ptr [rbx+0x8]
0x13510: jmp 0x134a4
0x13512: nop qword ptr [rax+rax*1+0x0]
0x13518: mov [rax],0x16
0x1351e: xor eax,eax
0x13520: jmp 0x134a4
0x13525: nop qword ptr [rax]
0x13528: mov edx,0x1
0x1352d: mov esi,ebp
0x1352f: mov rdi,rbx
0x13532: call 0x11760
0x13537: jmp 0x1350c
0x13539: mov [rbx+0x8],0x0
0x13541: xor eax,eax
0x13543: jmp 0x134a4
0x13548: mov ebx,dword ptr [r13+0x0]
0x1354c: mov edi,ebp
0x1354e: call 0x2870
0x13553: xor eax,eax
0x13555: mov dword ptr [r13+0x0],ebx
0x13559: jmp 0x134a4
0x13660: mov edi,0x1
0x13665: jmp 0x3780
0x136b6: nop qword ptr [rax+rax*1+0x0]
0x13777: nop qword ptr [rax+rax*1+0x0]
0x137ed: nop qword ptr [rax]
0x13810: push r15
0x13812: push r14
0x13814: mov r14,rdi
0x13817: push r13
0x13819: push r12
0x1381b: xor edi,edi
0x1381d: push rbp
0x1381e: push rbx
0x1381f: mov rbp,rsi
0x13822: lea rsi,[rip+0x3bff]
0x13829: mov r12,rdx
0x1382c: mov edx,0x5
0x13831: sub rsp,0x8
0x13835: mov rbx,qword ptr [rip+0x2088c4]
0x1383c: call 0x2730
0x13841: mov rdi,rax
0x13844: mov rsi,rbx
0x13847: call 0x28f0
0x1384c: mov r15,qword ptr [r14]
0x1384f: test r15,r15
0x13852: jz 0x138e8
0x13858: xor r13d,r13d
0x1385b: xor ebx,ebx
0x1385d: jmp 0x13898
0x1385f: nop 
0x13860: mov rdi,r15
0x13863: add rbx,0x1
0x13867: mov r13,rbp
0x1386a: call 0xe9a0
0x1386f: mov rdi,qword ptr [rip+0x20888a]
0x13876: lea rdx,[rip+0x3bc0]
0x1387d: mov rcx,rax
0x13880: mov esi,0x1
0x13885: xor eax,eax
0x13887: add rbp,r12
0x1388a: call 0x2c20
0x1388f: mov r15,qword ptr [r14+rbx*8+0x0]
0x13893: test r15,r15
0x13896: jz 0x138e8
0x13898: test rbx,rbx
0x1389b: jz 0x13860
0x1389d: mov rdx,r12
0x138a0: mov rsi,rbp
0x138a3: mov rdi,r13
0x138a6: call 0x28d0
0x138ab: test eax,eax
0x138ad: jnz 0x13860
0x138af: mov rdi,r15
0x138b2: add rbx,0x1
0x138b6: add rbp,r12
0x138b9: call 0xe9a0
0x138be: mov rdi,qword ptr [rip+0x20883b]
0x138c5: lea rdx,[rip+0x3b79]
0x138cc: mov rcx,rax
0x138cf: mov esi,0x1
0x138d4: xor eax,eax
0x138d6: call 0x2c20
0x138db: mov r15,qword ptr [r14+rbx*8+0x0]
0x138df: test r15,r15
0x138e2: jnz 0x13898
0x138e4: nop qword ptr [rax+0x0]
0x138e8: mov rdi,qword ptr [rip+0x208811]
0x138ef: mov rax,qword ptr [rdi+0x28]
0x138f3: cmp rax,qword ptr [rdi+0x30]
0x138f7: jnb 0x13918
0x138f9: lea rdx,[rax+0x1]
0x138fd: mov qword ptr [rdi+0x28],rdx
0x13901: mov [rax],0xa
0x13904: add rsp,0x8
0x13908: pop rbx
0x13909: pop rbp
0x1390a: pop r12
0x1390c: pop r13
0x1390e: pop r14
0x13910: pop r15
0x13912: ret
0x13913: nop qword ptr [rax+rax*1+0x0]
0x13918: add rsp,0x8
0x1391c: mov esi,0xa
0x13921: pop rbx
0x13922: pop rbp
0x13923: pop r12
0x13925: pop r13
0x13927: pop r14
0x13929: pop r15
0x1392b: jmp 0x27d0
0x13983: mov rdx,r15
0x13986: mov rsi,rbp
0x13989: mov rdi,rbx
0x1398c: call 0x13810
0x13991: call r13
0x13994: mov rax,0xffffffff
0x1399b: jmp 0x13966
0x139a0: push r14
0x139a2: push r13
0x139a4: push r12
0x139a6: push rbp
0x139a7: push rbx
0x139a8: mov r14,qword ptr [rsi]
0x139ab: test r14,r14
0x139ae: jz 0x139e1
0x139b0: mov r12,rcx
0x139b3: mov r13,rdi
0x139b6: mov rbp,rdx
0x139b9: lea rbx,[rsi+0x8]
0x139bd: jmp 0x139cf
0x139bf: nop 
0x139c0: mov r14,qword ptr [rbx]
0x139c3: add rbp,r12
0x139c6: add rbx,0x8
0x139ca: test r14,r14
0x139cd: jz 0x139e1
0x139cf: mov rdx,r12
0x139d2: mov rsi,rbp
0x139d5: mov rdi,r13
0x139d8: call 0x28d0
0x139dd: test eax,eax
0x139df: jnz 0x139c0
0x139e1: pop rbx
0x139e2: mov rax,r14
0x139e5: pop rbp
0x139e6: pop r12
0x139e8: pop r13
0x139ea: pop r14
0x139ec: ret
0x139f0: push r12
0x139f2: push rbp
0x139f3: mov rbp,rdi
0x139f6: push rbx
0x139f7: call 0x25f0
0x139fc: mov ebx,dword ptr [rbp+0x0]
0x139ff: mov rdi,rbp
0x13a02: mov r12,rax
0x13a05: call 0x14ab0
0x13a0a: and ebx,0x20
0x13a0d: test ebx,ebx
0x13a0f: jnz 0x13a28
0x13a11: test eax,eax
0x13a13: jz 0x13a1f
0x13a15: test r12,r12
0x13a18: mov eax,0xffffffff
0x13a1d: jz 0x13a58
0x13a1f: pop rbx
0x13a20: pop rbp
0x13a21: pop r12
0x13a23: ret
0x13a24: nop qword ptr [rax+0x0]
0x13a28: test eax,eax
0x13a2a: jnz 0x13a48
0x13a2c: call 0x25a0
0x13a31: mov [rax],0x0
0x13a37: mov eax,0xffffffff
0x13a3c: pop rbx
0x13a3d: pop rbp
0x13a3e: pop r12
0x13a40: ret
0x13a41: nop qword ptr [rax+0x0]
0x13a48: pop rbx
0x13a49: mov eax,0xffffffff
0x13a4e: pop rbp
0x13a4f: pop r12
0x13a51: ret
0x13a52: nop qword ptr [rax+rax*1+0x0]
0x13a58: call 0x25a0
0x13a5d: cmp [rax],0x9
0x13a60: pop rbx
0x13a61: pop rbp
0x13a62: pop r12
0x13a64: setnz al
0x13a67: movzx eax,al
0x13a6a: neg eax
0x13a6c: ret
0x13a70: mov [rdi+0x10],0x0
0x13a78: mov [rdi+0x18],0x95f616
0x13a7f: ret
0x13a80: cmp [rdi+0x18],0x95f616
0x13a87: jnz 0x13ae7
0x13a89: mov rdx,qword ptr [rdi+0x10]
0x13a8d: mov rcx,qword ptr [rsi+0x8]
0x13a91: test rdx,rdx
0x13a94: jz 0x13ab0
0x13a96: cmp qword ptr [rdi],rcx
0x13a99: jz 0x13ac8
0x13a9b: lea r8,[rdx+0x1]
0x13a9f: xor eax,eax
0x13aa1: test rdx,r8
0x13aa4: mov qword ptr [rdi+0x10],r8
0x13aa8: jz 0x13ae0
0x13aaa: rep ret
0x13aac: nop qword ptr [rax+0x0]
0x13ab0: mov [rdi+0x10],0x1
0x13ab8: mov rax,qword ptr [rsi]
0x13abb: mov qword ptr [rdi],rcx
0x13abe: mov qword ptr [rdi+0x8],rax
0x13ac2: xor eax,eax
0x13ac4: ret
0x13ac5: nop qword ptr [rax]
0x13ac8: mov rax,qword ptr [rdi+0x8]
0x13acc: cmp qword ptr [rsi],rax
0x13acf: jnz 0x13a9b
0x13ad1: mov eax,0x1
0x13ad6: ret
0x13ad7: nop qword ptr [rax+rax*1+0x0]
0x13ae0: test r8,r8
0x13ae3: jz 0x13ad1
0x13ae5: jmp 0x13ab8
0x13ae7: lea rcx,[rip+0x39a2]
0x13aee: lea rsi,[rip+0x395b]
0x13af5: lea rdi,[rip+0x397c]
0x13afc: sub rsp,0x8
0x13b00: mov edx,0x3c
0x13b05: call 0x2820
0x13b3e: nop 
0x13b84: nop qword ptr [rax+0x0]
0x13bc0: sub rsp,0x28
0x13bc4: xor edi,edi
0x13bc6: mov rsi,rsp
0x13bc9: mov rax,0x28
0x13bd2: mov qword ptr [rsp+0x18],rax
0x13bd7: xor eax,eax
0x13bd9: call 0x2680
0x13bde: mov rcx,qword ptr [rsp+0x18]
0x13be3: xor rcx,0x28
0x13bec: mov rax,qword ptr [rsp]
0x13bf0: mov rdx,qword ptr [rsp+0x8]
0x13bf5: jnz 0x13bfc
0x13bf7: add rsp,0x28
0x13bfb: ret
0x13bfc: call 0x2780
0x13c4a: nop qword ptr [rax+rax*1+0x0]
0x13c70: movsx rcx,byte ptr [rdi]
0x13c74: test cl,cl
0x13c76: jz 0x13ca0
0x13c78: xor eax,eax
0x13c7a: nop qword ptr [rax+rax*1+0x0]
0x13c80: rol rax,0x9
0x13c84: add rdi,0x1
0x13c88: add rax,rcx
0x13c8b: movsx rcx,byte ptr [rdi]
0x13c8f: test cl,cl
0x13c91: jnz 0x13c80
0x13c93: xor edx,edx
0x13c95: div rsi
0x13c98: mov rax,rdx
0x13c9b: ret
0x13c9c: nop qword ptr [rax+0x0]
0x13ca0: xor edx,edx
0x13ca2: mov rax,rdx
0x13ca5: ret
0x13cb0: mov [rdi+0x1c],0x1
0x13cb4: mov [rdi+0x14],0x0
0x13cbc: mov dword ptr [rdi],esi
0x13cbe: mov dword ptr [rdi+0x4],esi
0x13cc1: mov dword ptr [rdi+0x8],esi
0x13cc4: mov dword ptr [rdi+0xc],esi
0x13cc7: mov dword ptr [rdi+0x10],esi
0x13cca: ret
0x13cd0: movzx eax,byte ptr [rdi+0x1c]
0x13cd4: ret
0x13ce0: movzx edx,byte ptr [rdi+0x1c]
0x13ce4: mov ecx,dword ptr [rdi+0x14]
0x13ce7: xor edx,0x1
0x13cea: movzx edx,dl
0x13ced: add ecx,edx
0x13cef: and ecx,0x3
0x13cf2: mov eax,ecx
0x13cf4: lea r8,[rdi+rax*4+0x0]
0x13cf8: mov eax,dword ptr [r8]
0x13cfb: mov dword ptr [r8],esi
0x13cfe: mov esi,dword ptr [rdi+0x18]
0x13d01: mov dword ptr [rdi+0x14],ecx
0x13d04: cmp esi,ecx
0x13d06: jnz 0x13d10
0x13d08: add edx,esi
0x13d0a: and edx,0x3
0x13d0d: mov dword ptr [rdi+0x18],edx
0x13d10: mov [rdi+0x1c],0x0
0x13d14: ret
0x13d20: cmp [rdi+0x1c],0x0
0x13d24: jnz 0x13d55
0x13d26: mov eax,dword ptr [rdi+0x14]
0x13d29: mov esi,dword ptr [rdi+0x10]
0x13d2c: lea rcx,[rdi+rax*4+0x0]
0x13d30: mov rdx,rax
0x13d33: mov eax,dword ptr [rcx]
0x13d35: mov dword ptr [rcx],esi
0x13d37: cmp edx,dword ptr [rdi+0x18]
0x13d3a: jz 0x13d50
0x13d3c: add edx,0x3
0x13d3f: and edx,0x3
0x13d42: mov dword ptr [rdi+0x14],edx
0x13d45: ret
0x13d46: nop qword ptr [rax+rax*1+0x0]
0x13d50: mov [rdi+0x1c],0x1
0x13d54: ret
0x13d55: sub rsp,0x8
0x13d59: call 0x2590
0x13d86: nop qword ptr [rax+rax*1+0x0]
0x13de3: nop qword ptr [rax+rax*1+0x0]
0x13de8: lea rax,[rsp+0x60]
0x13ded: mov [rsp],0x18
0x13df4: mov ecx,dword ptr [rsp+0x38]
0x13df8: mov qword ptr [rsp+0x8],rax
0x13dfd: lea rax,[rsp+0x20]
0x13e02: mov qword ptr [rsp+0x10],rax
0x13e07: jmp 0x13dc0
0x13e09: call 0x2780
0x13e10: push rbx
0x13e11: mov rbx,rdi
0x13e14: mov edi,0x18
0x13e19: call 0x10cc0
0x13e1e: mov qword ptr [rax],rbx
0x13e21: mov [rax+0x10],0x0
0x13e29: mov [rax+0x8],0x0
0x13e31: pop rbx
0x13e32: ret
0x13e6d: nop qword ptr [rax]
0x13e80: mov rax,qword ptr [rdi]
0x13e83: ret
0x13ecf: nop 
0x13f91: nop qword ptr [rax+0x0]
0x13fa5: call 0x2780
0x13fb0: push rbx
0x13fb1: mov rdx,0xffffffff
0x13fb8: mov rbx,rdi
0x13fbb: mov esi,0x18
0x13fc0: call 0x2b20
0x13fc5: mov rdi,rbx
0x13fc8: pop rbx
0x13fc9: jmp 0x2c80
0x14030: push rbp
0x14031: push rbx
0x14032: sub rsp,0x8
0x14036: test rdi,rdi
0x14039: jz 0x14078
0x1403b: call 0xe9a0
0x14040: mov rbp,rax
0x14043: call 0x25a0
0x14048: cmp [rax],0x0
0x1404b: mov rbx,rax
0x1404e: mov edx,0x5
0x14053: jz 0x1407d
0x14055: lea rsi,[rip+0x345e]
0x1405c: xor edi,edi
0x1405e: call 0x2730
0x14063: mov edi,dword ptr [rip+0x207fbf]
0x14069: mov esi,dword ptr [rbx]
0x1406b: mov rdx,rax
0x1406e: mov rcx,rbp
0x14071: xor eax,eax
0x14073: call 0x2b10
0x14078: call 0x2590
0x1407d: lea rsi,[rip+0x3426]
0x14084: xor edi,edi
0x14086: call 0x2730
0x1408b: jmp 0x14063
0x140c2: lea rsi,[rip+0x340d]
0x140c9: call 0x14db0
0x140ce: test rax,rax
0x140d1: mov r13,rax
0x140d4: jz 0x142d8
0x140da: mov edi,0x1038
0x140df: call 0x10cc0
0x140e4: mov rbx,rax
0x140e7: mov qword ptr [rax],r13
0x140ea: lea rax,[rip-0xc1]
0x140f1: cmp rbp,0x1000
0x140f8: mov ecx,0x1000
0x140fd: lea rsi,[rbx+0x18]
0x14101: cmovbe rcx,rbp
0x14105: mov qword ptr [rbx+0x8],rax
0x14109: mov qword ptr [rbx+0x10],r12
0x1410d: xor edx,edx
0x1410f: mov rdi,r13
0x14112: call 0x2ad0
0x1413d: nop qword ptr [rax]
0x141d2: nop qword ptr [rax+rax*1+0x0]
0x141d8: mov edi,0x1038
0x141dd: call 0x10cc0
0x141e2: mov rbx,rax
0x141e5: mov [rax],0x0
0x141ec: lea rax,[rip-0x1c3]
0x141f3: mov [rbx+0x10],0x0
0x141fb: mov qword ptr [rbx+0x8],rax
0x141ff: jmp 0x14117
0x14204: nop qword ptr [rax+0x0]
0x142d2: nop qword ptr [rax+rax*1+0x0]
0x142d8: xor ebx,ebx
0x142da: jmp 0x14117
0x142df: call 0x2780
0x1432d: mov r15,r14
0x14330: mov r8d,0x4
0x14336: sub r15,rbp
0x14339: mov qword ptr [rsp+0x8],r8
0x1433e: cmp r15,0x4
0x14342: cmovnbe r15,r8
0x14346: lea rdx,[rbp+r15*1+0x0]
0x1434b: add rbp,r13
0x1434e: mov qword ptr [rsp],rdx
0x14352: call 0x26a0
0x14357: mov rdx,qword ptr [rsp]
0x1435b: mov dword ptr [rsp+0x10],eax
0x1435f: mov ecx,r15d
0x14362: mov rdi,rbp
0x14365: mov rsi,r12
0x14368: mov r8,qword ptr [rsp+0x8]
0x1436d: rep movsb byte ptr es:[rdi],byte ptr ds:[rsi]
0x1436f: cmp rdx,0x7ff
0x14376: jnle 0x141c5
0x1437c: sub r14,rdx
0x1437f: cmp r14,0x4
0x14383: cmovnbe r14,r8
0x14387: call 0x2bf0
0x1438c: mov rdx,qword ptr [rsp]
0x14390: mov dword ptr [rsp+0x10],eax
0x14394: mov ecx,r14d
0x14397: mov rsi,r12
0x1439a: lea rax,[r13+rdx*1+0x0]
0x1439f: add r14,rdx
0x143a2: cmp r14,0x7ff
0x143a9: mov rdi,rax
0x143ac: rep movsb byte ptr es:[rdi],byte ptr ds:[rsi]
0x143ae: jnbe 0x141c5
0x143b4: jmp 0x1423f
0x143c0: mov qword ptr [rdi+0x8],rsi
0x143c4: ret
0x143d0: mov qword ptr [rdi+0x10],rsi
0x143d4: ret
0x14404: call 0x25a0
0x14409: mov rcx,qword ptr [rsp+0x8]
0x1440e: mov r13,rax
0x14411: jmp 0x14436
0x14413: nop qword ptr [rax+rax*1+0x0]
0x14418: mov rax,qword ptr [r12]
0x1441c: mov rdi,qword ptr [r12+0x10]
0x14421: mov eax,dword ptr [rax]
0x14423: and eax,0x20
0x14426: cmovne eax,edx
0x14429: mov dword ptr [r13+0x0],eax
0x1442d: call qword ptr [r12+0x8]
0x14432: mov rcx,qword ptr [r12]
0x14436: mov rdx,rbp
0x14439: mov rdi,rbx
0x1443c: mov esi,0x1
0x14441: call 0x26b0
0x14446: add rbx,rax
0x14449: sub rbp,rax
0x1444c: mov edx,dword ptr [r13+0x0]
0x14450: jnz 0x14418
0x14461: nop qword ptr [rax+0x0]
0x144c8: nop qword ptr [rax+rax*1+0x0]
0x1450e: nop 
0x145aa: add rsp,0x8
0x145ae: mov rdi,rbp
0x145b1: pop rbx
0x145b2: pop rbp
0x145b3: jmp 0x14ab0
0x145b8: nop qword ptr [rax+rax*1+0x0]
0x14ab0: push r12
0x14ab2: push rbp
0x14ab3: push rbx
0x14ab4: mov rbx,rdi
0x14ab7: call 0x29c0
0x14abc: test eax,eax
0x14abe: mov rdi,rbx
0x14ac1: js 0x14b17
0x14ac3: call 0x2a50
0x14ac8: test eax,eax
0x14aca: jnz 0x14af8
0x14acc: mov rdi,rbx
0x14acf: call 0x11070
0x14ad4: test eax,eax
0x14ad6: jz 0x14b14
0x14ad8: call 0x25a0
0x14add: mov r12d,dword ptr [rax]
0x14ae0: mov rdi,rbx
0x14ae3: mov rbp,rax
0x14ae6: call 0x26e0
0x14aeb: test r12d,r12d
0x14aee: jnz 0x14b20
0x14af0: pop rbx
0x14af1: pop rbp
0x14af2: pop r12
0x14af4: ret
0x14af5: nop qword ptr [rax]
0x14af8: mov rdi,rbx
0x14afb: call 0x29c0
0x14b00: xor esi,esi
0x14b02: mov edx,0x1
0x14b07: mov edi,eax
0x14b09: call 0x2800
0x14b0e: cmp rax,0xffffffff
0x14b12: jnz 0x14acc
0x14b14: mov rdi,rbx
0x14b17: pop rbx
0x14b18: pop rbp
0x14b19: pop r12
0x14b1b: jmp 0x26e0
0x14b20: mov dword ptr [rbp+0x0],r12d
0x14b24: mov eax,0xffffffff
0x14b29: jmp 0x14af0
0x14bcb: nop qword ptr [rax+rax*1+0x0]
0x14c2f: nop 
0x14c79: nop qword ptr [rax+0x0]
0x14c9b: nop qword ptr [rax+rax*1+0x0]
0x14d41: nop qword ptr [rax+0x0]
0x14d9a: mov rax,qword ptr [rsp+0x8]
0x14d9f: jmp 0x14c69
0x14da4: mov rax,qword ptr [rsp+0x8]
0x14da9: jmp 0x14cc1
0x14db0: push r12
0x14db2: push rbp
0x14db3: mov rbp,rsi
0x14db6: push rbx
0x14db7: call 0x2b60
0x14dbc: test rax,rax
0x14dbf: mov rbx,rax
0x14dc2: jz 0x14dd1
0x14dc4: mov rdi,rax
0x14dc7: call 0x29c0
0x14dcc: cmp eax,0x2
0x14dcf: jbe 0x14de0
0x14dd1: mov rax,rbx
0x14dd4: pop rbx
0x14dd5: pop rbp
0x14dd6: pop r12
0x14dd8: ret
0x14dd9: nop qword ptr [rax+0x0]
0x14de0: mov edi,eax
0x14de2: call 0x14aa0
0x14de7: test eax,eax
0x14de9: mov r12d,eax
0x14dec: js 0x14e28
0x14dee: mov rdi,rbx
0x14df1: call 0x14ab0
0x14df6: test eax,eax
0x14df8: jnz 0x14e0d
0x14dfa: mov rsi,rbp
0x14dfd: mov edi,r12d
0x14e00: call 0x2a80
0x14e05: test rax,rax
0x14e08: mov rbx,rax
0x14e0b: jnz 0x14dd1
0x14e0d: call 0x25a0
0x14e12: mov ebp,dword ptr [rax]
0x14e14: mov rbx,rax
0x14e17: mov edi,r12d
0x14e1a: call 0x2870
0x14e1f: mov dword ptr [rbx],ebp
0x14e21: xor ebx,ebx
0x14e23: jmp 0x14dd1
0x14e25: nop qword ptr [rax]
0x14e28: call 0x25a0
0x14e2d: mov r12d,dword ptr [rax]
0x14e30: mov rbp,rax
0x14e33: mov rdi,rbx
0x14e36: call 0x14ab0
0x14e3b: xor ebx,ebx
0x14e3d: mov dword ptr [rbp+0x0],r12d
0x14e41: jmp 0x14dd1
0x14e50: push r15
0x14e52: push r14
0x14e54: mov r15,rdx
0x14e57: push r13
0x14e59: push r12
0x14e5b: lea r12,[rip+0x20692e]
0x14e62: push rbp
0x14e63: lea rbp,[rip+0x20692e]
0x14e6a: push rbx
0x14e6b: mov r13d,edi
0x14e6e: mov r14,rsi
0x14e71: sub rbp,r12
0x14e74: sub rsp,0x8
0x14e78: sar rbp,0x3
0x14e7c: call 0x2540
0x14e81: test rbp,rbp
0x14e84: jz 0x14ea6
0x14e86: xor ebx,ebx
0x14e88: nop qword ptr [rax+rax*1+0x0]
0x14e90: mov rdx,r15
0x14e93: mov rsi,r14
0x14e96: mov edi,r13d
0x14e99: call qword ptr [r12+rbx*8+0x0]
0x14e9d: add rbx,0x1
0x14ea1: cmp rbp,rbx
0x14ea4: jnz 0x14e90
0x14ea6: add rsp,0x8
0x14eaa: pop rbx
0x14eab: pop rbp
0x14eac: pop r12
0x14eae: pop r13
0x14eb0: pop r14
0x14eb2: pop r15
0x14eb4: ret
0x14ee0: sub rsp,0x8
0x14ee4: add rsp,0x8
0x14ee8: ret
