0x16c8: sub rsp,0x8
0x16cc: mov rax,qword ptr [rip+0x20c915]
0x16d3: test rax,rax
0x16d6: jz 0x16da
0x16d8: call rax
0x16da: add rsp,0x8
0x16de: ret
0x16f6: push 0x0
0x1706: push 0x1
0x1716: push 0x2
0x1720: jmp qword ptr [rip+0x20c6f2]
0x1726: push 0x3
0x1730: jmp qword ptr [rip+0x20c6ea]
0x1736: push 0x4
0x1746: push 0x5
0x1756: push 0x6
0x1766: push 0x7
0x1770: jmp qword ptr [rip+0x20c6ca]
0x1776: push 0x8
0x1786: push 0x9
0x1796: push 0xa
0x17a6: push 0xb
0x17b6: push 0xc
0x17c6: push 0xd
0x17d6: push 0xe
0x17e6: push 0xf
0x17f6: push 0x10
0x1806: push 0x11
0x1816: push 0x12
0x1826: push 0x13
0x1830: jmp qword ptr [rip+0x20c66a]
0x1836: push 0x14
0x1846: push 0x15
0x1856: push 0x16
0x1866: push 0x17
0x1876: push 0x18
0x1886: push 0x19
0x1896: push 0x1a
0x18a6: push 0x1b
0x18b0: jmp qword ptr [rip+0x20c62a]
0x18b6: push 0x1c
0x18c6: push 0x1d
0x18d6: push 0x1e
0x18e6: push 0x1f
0x18f0: jmp qword ptr [rip+0x20c60a]
0x18f6: push 0x20
0x1906: push 0x21
0x1916: push 0x22
0x1926: push 0x23
0x1930: jmp qword ptr [rip+0x20c5ea]
0x1936: push 0x24
0x1946: push 0x25
0x1956: push 0x26
0x1966: push 0x27
0x1970: jmp qword ptr [rip+0x20c5ca]
0x1976: push 0x28
0x1986: push 0x29
0x1996: push 0x2a
0x19a6: push 0x2b
0x19b6: push 0x2c
0x19c6: push 0x2d
0x19d6: push 0x2e
0x19e6: push 0x2f
0x19f0: jmp qword ptr [rip+0x20c58a]
0x19f6: push 0x30
0x1a06: push 0x31
0x1a16: push 0x32
0x1a26: push 0x33
0x1a36: push 0x34
0x1a46: push 0x35
0x1a56: push 0x36
0x1a66: push 0x37
0x1a76: push 0x38
0x1a86: push 0x39
0x1a96: nop 
0x1a98: jmp qword ptr [rip+0x20c55a]
0x1a9e: nop 
0x1bb6: nop qword ptr [rax+rax*1+0x0]
0x1c2c: nop qword ptr [rax+0x0]
0x1cdc: nop qword ptr [rax+0x0]
0x1cef: nop 
0x1cff: nop 
0x1d0b: nop qword ptr [rax+rax*1+0x0]
0x1f41: lea rsi,[rip+0x83a0]
0x1f48: mov r15,rax
0x1f4b: xor edi,edi
0x1f4d: mov edx,0x5
0x1f52: call 0x1790
0x1f57: mov rcx,r15
0x1f5a: mov rdx,rax
0x1f5d: xor esi,esi
0x1f5f: xor edi,edi
0x1f61: xor eax,eax
0x1f63: call 0x19d0
0x1f68: jmp 0x1ef0
0x1f96: lea rsi,[rip+0x7d8f]
0x1f9d: mov r15,rax
0x1fa0: mov edx,0x5
0x1fa5: xor edi,edi
0x1fa7: call 0x1790
0x1fac: mov esi,dword ptr [r14+0x40]
0x1fb0: mov rdx,rax
0x1fb3: mov rcx,r15
0x1fb6: xor edi,edi
0x1fb8: xor eax,eax
0x1fba: call 0x19d0
0x1fbf: jmp 0x1ef0
0x1fe0: mov esi,dword ptr [r14+0x40]
0x1fe4: lea rdx,[rip+0x7d2e]
0x1feb: mov rcx,rax
0x1fee: xor edi,edi
0x1ff0: xor eax,eax
0x1ff2: call 0x19d0
0x1ff7: jmp 0x1ef0
0x201b: mov rcx,qword ptr [rax]
0x201e: cmp qword ptr [r14+0x80],rcx
0x2025: jz 0x248a
0x20ae: lea rsi,[rip+0x7ca1]
0x20b5: xor edi,edi
0x20b7: mov edx,0x5
0x20bc: mov r15,rax
0x20bf: call 0x1790
0x20c4: mov rdx,rax
0x20c7: mov rax,qword ptr [rsp+0x20]
0x20cc: mov rcx,r15
0x20cf: xor edi,edi
0x20d1: mov esi,dword ptr [rax]
0x20d3: xor eax,eax
0x20d5: call 0x19d0
0x20da: jmp 0x1ef0
0x217d: mov ecx,dword ptr [rsp+0x4]
0x2181: sub rsp,0x8
0x2185: mov rsi,r15
0x2188: mov rdx,qword ptr [rsp+0x10]
0x218d: mov edi,0x1
0x2192: xor r15d,r15d
0x2195: and ecx,0xfff
0x219b: add rdx,0x1
0x219f: push rdx
0x21a0: mov r9d,dword ptr [rsp+0x10]
0x21a5: mov rdx,rax
0x21a8: mov r8,qword ptr [rsp+0x28]
0x21ad: xor eax,eax
0x21af: and r9d,0xfff
0x21b6: call 0x19b0
0x21bb: pop rax
0x21bc: pop rdx
0x21bd: jmp 0x1f09
0x21e4: lea rsi,[rip+0x82ed]
0x21eb: mov r13,rax
0x21ee: mov edx,0x5
0x21f3: xor edi,edi
0x21f5: call 0x1790
0x21fa: mov rdx,r13
0x21fd: mov rsi,rax
0x2200: mov edi,0x1
0x2205: xor eax,eax
0x2207: call 0x19b0
0x220c: jmp 0x1f09
0x2294: mov ecx,dword ptr [rsp+0x4]
0x2298: sub rsp,0x8
0x229c: mov edi,0x1
0x22a1: mov rsi,qword ptr [rsp+0x10]
0x22a6: and ecx,0xfff
0x22ac: lea rdx,[rsi+0x1]
0x22b0: mov rsi,r15
0x22b3: push rdx
0x22b4: mov r9d,dword ptr [rsp+0x10]
0x22b9: mov rdx,rax
0x22bc: mov r8,qword ptr [rsp+0x28]
0x22c1: xor eax,eax
0x22c3: and r9d,0xfff
0x22ca: call 0x19b0
0x22cf: pop rcx
0x22d0: pop rsi
0x2359: lea rsi,[rip+0x8118]
0x2360: mov edx,0x5
0x2365: xor edi,edi
0x2367: mov r13,rax
0x236a: call 0x1790
0x236f: mov r9,qword ptr [rsp+0x18]
0x2374: lea r8,[r15+0x1]
0x2378: mov rdx,rax
0x237b: mov rcx,r13
0x237e: xor esi,esi
0x2380: xor edi,edi
0x2382: xor eax,eax
0x2384: xor r15d,r15d
0x2387: call 0x19d0
0x238c: jmp 0x1f09
0x23c9: lea rsi,[rip+0x79a1]
0x23d0: mov edx,0x5
0x23d5: xor edi,edi
0x23d7: mov r15,rax
0x23da: call 0x1790
0x23df: mov rdx,rax
0x23e2: mov rax,qword ptr [rsp+0x20]
0x23e7: mov rcx,r15
0x23ea: xor edi,edi
0x23ec: mov esi,dword ptr [rax]
0x23ee: xor eax,eax
0x23f0: call 0x19d0
0x2450: mov rdx,qword ptr [rsp+0x8]
0x2455: mov ecx,dword ptr [rsp]
0x2458: mov rsi,r15
0x245b: mov edi,0x1
0x2460: lea r8,[rdx+0x1]
0x2464: and ecx,0xfff
0x246a: mov rdx,rax
0x246d: xor eax,eax
0x246f: call 0x19b0
0x2474: jmp 0x22d1
0x248a: mov rax,qword ptr [rax+0x8]
0x248e: cmp qword ptr [r14+0x78],rax
0x2492: jnz 0x202b
0x2498: lea rsi,[rip+0x81e7]
0x249f: mov rdi,r13
0x24a2: call 0x18b0
0x24a7: test eax,eax
0x24a9: jnz 0x26b3
0x24af: mov rsi,r13
0x24b2: mov edi,0x4
0x24b7: call 0x4f60
0x24bc: lea rsi,[rip+0x7f0d]
0x24c3: mov r13,rax
0x24c6: mov edx,0x5
0x24cb: xor edi,edi
0x24cd: call 0x1790
0x24d2: mov rcx,r13
0x24d5: mov rdx,rax
0x24d8: xor esi,esi
0x24da: xor edi,edi
0x24dc: xor eax,eax
0x24de: call 0x19d0
0x24e3: lea rsi,[rip+0x7f56]
0x24ea: mov edx,0x5
0x24ef: xor edi,edi
0x24f1: xor r15d,r15d
0x24f4: call 0x1790
0x24f9: xor esi,esi
0x24fb: mov rdx,rax
0x24fe: xor edi,edi
0x2500: xor eax,eax
0x2502: call 0x19d0
0x2507: mov edx,0x4
0x250c: mov rsi,r14
0x250f: mov rdi,rbp
0x2512: call 0x7ea0
0x2517: mov rdi,rbp
0x251a: call 0x7720
0x251f: jmp 0x1e48
0x255b: mov edx,0x5
0x2560: mov r15,rax
0x2563: lea rsi,[rip+0x77d3]
0x256a: jmp 0x1fa5
0x257e: lea rsi,[rip+0x7d8b]
0x2585: mov r13,rax
0x2588: mov edx,0x5
0x258d: xor edi,edi
0x258f: xor r15d,r15d
0x2592: call 0x1790
0x2597: mov rcx,r13
0x259a: mov rdx,rax
0x259d: xor esi,esi
0x259f: xor edi,edi
0x25a1: xor eax,eax
0x25a3: call 0x19d0
0x25a8: jmp 0x1e48
0x25dc: jmp 0x1e76
0x260e: lea rsi,[rip+0x7cb3]
0x2615: mov edx,0x5
0x261a: xor edi,edi
0x261c: mov rbx,rax
0x261f: call 0x1790
0x2624: mov rdx,rax
0x2627: mov rax,qword ptr [rsp+0x20]
0x262c: mov rcx,rbx
0x262f: mov edi,0x1
0x2634: mov esi,dword ptr [rax]
0x2636: xor eax,eax
0x2638: call 0x19d0
0x26b3: lea rdx,[rip+0x7fcc]
0x26ba: mov esi,0x4
0x26bf: mov edi,0x1
0x26c4: call 0x4e40
0x26c9: mov rdx,r13
0x26cc: xor edi,edi
0x26ce: mov esi,0x4
0x26d3: mov r15,rax
0x26d6: call 0x4e40
0x26db: lea rsi,[rip+0x7d1e]
0x26e2: mov r13,rax
0x26e5: xor edi,edi
0x26e7: mov edx,0x5
0x26ec: call 0x1790
0x26f1: mov r8,r15
0x26f4: mov rdx,rax
0x26f7: mov rcx,r13
0x26fa: xor esi,esi
0x26fc: xor edi,edi
0x26fe: xor eax,eax
0x2700: call 0x19d0
0x2705: jmp 0x24e3
0x2711: call 0x17e0
0x2723: lea rsi,[rip+0x7b9e]
0x272a: mov edx,0x5
0x272f: xor edi,edi
0x2731: mov rbx,rax
0x2734: call 0x1790
0x2739: mov esi,dword ptr [r12]
0x273d: mov rdx,rax
0x2740: mov rcx,rbx
0x2743: mov edi,0x1
0x2748: xor eax,eax
0x274a: call 0x19d0
0x277e: mov edi,0x1
0x2783: call 0x28f0
0x27b9: jmp 0x26a9
0x280a: hlt 
0x2810: lea rdi,[rip+0x20b889]
0x2817: push rbp
0x2818: lea rax,[rip+0x20b881]
0x281f: cmp rax,rdi
0x2822: mov rbp,rsp
0x2825: jz 0x2840
0x2827: mov rax,qword ptr [rip+0x20b7aa]
0x282e: test rax,rax
0x2831: jz 0x2840
0x2833: pop rbp
0x2834: jmp rax
0x2836: nop qword ptr [rax+rax*1+0x0]
0x2840: pop rbp
0x2841: ret
0x2850: lea rdi,[rip+0x20b849]
0x2857: lea rsi,[rip+0x20b842]
0x285e: push rbp
0x285f: sub rsi,rdi
0x2862: mov rbp,rsp
0x2865: sar rsi,0x3
0x2869: mov rax,rsi
0x286c: shr rax,0x3f
0x2870: add rsi,rax
0x2873: sar rsi,0x1
0x2876: jz 0x2890
0x2878: mov rax,qword ptr [rip+0x20b771]
0x287f: test rax,rax
0x2882: jz 0x2890
0x2884: pop rbp
0x2885: jmp rax
0x2887: nop qword ptr [rax+rax*1+0x0]
0x2890: pop rbp
0x2891: ret
0x28a0: cmp [rip+0x20b841],0x0
0x28a7: jnz 0x28d8
0x28a9: cmp [rip+0x20b747],0x0
0x28b1: push rbp
0x28b2: mov rbp,rsp
0x28b5: jz 0x28c3
0x28b7: mov rdi,qword ptr [rip+0x20b74a]
0x28be: call 0x1a98
0x28c3: call 0x2810
0x28c8: mov [rip+0x20b819],0x1
0x28cf: pop rbp
0x28d0: ret
0x28d1: nop qword ptr [rax+0x0]
0x28d8: rep ret
0x28e0: push rbp
0x28e1: mov rbp,rsp
0x28e4: pop rbp
0x28e5: jmp 0x2850
0x2d00: mov qword ptr [rip+0x20b419],rdi
0x2d07: ret
0x2d10: mov byte ptr [rip+0x20b401],dil
0x2d17: ret
0x2d20: push rbp
0x2d21: push rbx
0x2d22: sub rsp,0x8
0x2d26: mov rdi,qword ptr [rip+0x20b37b]
0x2d2d: call 0x80b0
0x2d32: test eax,eax
0x2d34: jz 0x2d4c
0x2d36: call 0x1700
0x2d3b: cmp [rip+0x20b3d6],0x0
0x2d42: mov rbx,rax
0x2d45: jz 0x2d63
0x2d47: cmp [rax],0x20
0x2d4a: jnz 0x2d63
0x2d4c: mov rdi,qword ptr [rip+0x20b38d]
0x2d53: call 0x80b0
0x2d58: test eax,eax
0x2d5a: jnz 0x2da2
0x2d5c: add rsp,0x8
0x2d60: pop rbx
0x2d61: pop rbp
0x2d62: ret
0x2d63: lea rsi,[rip+0x7847]
0x2d6a: xor edi,edi
0x2d6c: mov edx,0x5
0x2d71: call 0x1790
0x2d76: mov rdi,qword ptr [rip+0x20b3a3]
0x2d7d: mov rbp,rax
0x2d80: test rdi,rdi
0x2d83: jz 0x2dad
0x2d85: call 0x5030
0x2d8a: mov esi,dword ptr [rbx]
0x2d8c: lea rdx,[rip+0x782a]
0x2d93: mov rcx,rax
0x2d96: mov r8,rbp
0x2d99: xor edi,edi
0x2d9b: xor eax,eax
0x2d9d: call 0x19d0
0x2da2: mov edi,dword ptr [rip+0x20b278]
0x2da8: call 0x1720
0x2dad: mov esi,dword ptr [rbx]
0x2daf: lea rdx,[rip+0x6f63]
0x2db6: mov rcx,rax
0x2db9: xor edi,edi
0x2dbb: xor eax,eax
0x2dbd: call 0x19d0
0x2dc2: jmp 0x2da2
0x2f1b: nop qword ptr [rax+rax*1+0x0]
0x2f2b: nop qword ptr [rax+rax*1+0x0]
0x2f43: nop qword ptr [rax+rax*1+0x0]
0x2f60: mov edi,dword ptr [rdi+0x18]
0x2f63: jmp 0x2dd0
0x3034: nop qword ptr [rax+0x0]
0x303f: nop 
0x3068: nop qword ptr [rax+rax*1+0x0]
0x308f: nop 
0x317a: nop qword ptr [rax+rax*1+0x0]
0x31a7: nop qword ptr [rax+rax*1+0x0]
0x31e2: nop qword ptr [rax+rax*1+0x0]
0x31ee: nop 
0x31f6: nop qword ptr [rax+rax*1+0x0]
0x3209: nop qword ptr [rax+0x0]
0x3219: nop qword ptr [rax+0x0]
0x3229: nop qword ptr [rax+0x0]
0x323b: nop qword ptr [rax+rax*1+0x0]
0x324f: nop 
0x325f: nop 
0x3269: nop qword ptr [rax+0x0]
0x3279: nop qword ptr [rax+0x0]
0x3289: nop qword ptr [rax+0x0]
0x32ee: nop 
0x3396: nop qword ptr [rax+rax*1+0x0]
0x33a4: call 0x17e0
0x34d1: mov dword ptr [r8],r11d
0x34d9: nop qword ptr [rax+0x0]
0x34f7: nop qword ptr [rax+rax*1+0x0]
0x350c: nop qword ptr [rax+0x0]
0x3518: mov dword ptr [r8],r11d
0x35fc: nop qword ptr [rax+0x0]
0x364d: nop qword ptr [rax]
0x3967: nop qword ptr [rax+rax*1+0x0]
0x399e: nop 
0x39c1: nop qword ptr [rax+0x0]
0x3a02: nop qword ptr [rax+rax*1+0x0]
0x3a14: nop qword ptr [rax+0x0]
0x3ab8: nop qword ptr [rax+rax*1+0x0]
0x3ae1: nop qword ptr [rax+0x0]
0x3af7: nop qword ptr [rax+rax*1+0x0]
0x3b0f: nop 
0x3b3e: nop 
0x3b4d: nop qword ptr [rax]
0x3b5f: nop 
0x3b6f: nop 
0x3b7f: nop 
0x3b8f: nop 
0x3b9f: nop 
0x3c0c: nop qword ptr [rax+0x0]
0x3c2c: nop qword ptr [rax+0x0]
0x3c4f: nop 
0x3c62: nop qword ptr [rax+rax*1+0x0]
0x3c7a: nop qword ptr [rax+rax*1+0x0]
0x3c8a: nop qword ptr [rax+rax*1+0x0]
0x3d2b: nop qword ptr [rax+rax*1+0x0]
0x3d45: nop qword ptr [rax]
0x3d58: nop qword ptr [rax+rax*1+0x0]
0x3d73: nop qword ptr [rax+rax*1+0x0]
0x3da2: nop qword ptr [rax+rax*1+0x0]
0x3db2: nop qword ptr [rax+rax*1+0x0]
0x3dca: nop qword ptr [rax+rax*1+0x0]
0x3dda: nop qword ptr [rax+rax*1+0x0]
0x3de8: nop qword ptr [rax+rax*1+0x0]
0x3e0f: nop 
0x3ea9: nop qword ptr [rax+0x0]
0x3ef2: nop qword ptr [rax+rax*1+0x0]
0x3eff: lea rcx,[rbp+0x2]
0x3f03: cmp rcx,r11
0x3f06: jnb 0x3f20
0x3f08: mov rax,qword ptr [rsp+0x10]
0x3f0d: cmp [rax+rbp*1+0x1],0x3f
0x3f12: jz 0x46a2
0x3f18: nop qword ptr [rax+rax*1+0x0]
0x3f31: nop qword ptr [rax+0x0]
0x3f52: nop qword ptr [rax+rax*1+0x0]
0x40b8: nop qword ptr [rax+rax*1+0x0]
0x41cb: nop qword ptr [rax+rax*1+0x0]
0x41ee: nop 
0x4282: add rsp,0x20
0x4286: mov r15,rax
0x42b5: nop qword ptr [rax]
0x436d: nop qword ptr [rax]
0x4576: nop qword ptr [rax+rax*1+0x0]
0x4609: nop qword ptr [rax+0x0]
0x46a2: movzx ebx,byte ptr [rax+rcx*1+0x0]
0x46a6: cmp bl,0x3e
0x46a9: jnbe 0x3f20
0x46af: mov rax,0x8070630310989004800
0x46b9: bt rax,rbx
0x46bd: jnb 0x3f20
0x46c3: cmp [rsp+0xf],0x0
0x46c8: jnz 0x48b2
0x46ce: cmp r13,r15
0x46d1: jbe 0x46d8
0x46d3: mov [r14+r15*1+0x0],0x3f
0x46d8: lea rax,[r15+0x1]
0x46dc: cmp r13,rax
0x46df: jbe 0x46e7
0x46e1: mov [r14+r15*1+0x1],0x22
0x46e7: lea rax,[r15+0x2]
0x46eb: cmp r13,rax
0x46ee: jbe 0x46f6
0x46f0: mov [r14+r15*1+0x2],0x22
0x46f6: lea rax,[r15+0x3]
0x46fa: cmp r13,rax
0x46fd: jbe 0x4705
0x46ff: mov [r14+r15*1+0x3],0x3f
0x4705: add r15,0x4
0x4709: xor edx,edx
0x470b: xor r12d,r12d
0x470e: xor eax,eax
0x4710: mov rbp,rcx
0x4713: jmp 0x38d8
0x4720: lea rax,[rip+0x5f76]
0x4727: mov [rsp+0xe],0x1
0x472c: mov [rsp+0x7c],0x0
0x4731: xor r12d,r12d
0x4734: mov [rsp+0x50],0x0
0x473d: mov [rsp+0xf],0x1
0x4742: mov [rsp+0xd],0x0
0x4747: mov [rsp+0x18],0x1
0x4750: xor r15d,r15d
0x4753: mov qword ptr [rsp+0x48],rax
0x4758: jmp 0x3783
0x475d: nop qword ptr [rax]
0x476d: lea rax,[rip+0x5f27]
0x4774: mov [rsp+0xe],0x1
0x4779: mov [rsp+0x7c],0x0
0x477e: xor r12d,r12d
0x4781: mov [rsp+0x50],0x0
0x478a: mov [rsp+0xf],0x1
0x478f: mov [rsp+0xd],0x1
0x4794: mov [rsp+0x18],0x1
0x479d: xor r15d,r15d
0x47a0: mov qword ptr [rsp+0x48],rax
0x47a5: jmp 0x3783
0x4880: add rsp,0x20
0x4884: mov r15,rax
0x4887: jmp 0x4289
0x48a3: call 0x17e0
0x48b2: mov rbp,r11
0x48b5: jmp 0x4250
0x4a6b: nop qword ptr [rax+rax*1+0x0]
0x4a91: call 0x16f0
0x4a96: call 0x5b40
0x4aa0: push r12
0x4aa2: push rbp
0x4aa3: push rbx
0x4aa4: mov rbx,rdi
0x4aa7: call 0x1700
0x4aac: mov r12d,dword ptr [rax]
0x4aaf: mov rbp,rax
0x4ab2: lea rax,[rip+0x209787]
0x4ab9: test rbx,rbx
0x4abc: mov esi,0x38
0x4ac1: cmove rbx,rax
0x4ac5: mov rdi,rbx
0x4ac8: call 0x5af0
0x4acd: mov dword ptr [rbp+0x0],r12d
0x4ad1: pop rbx
0x4ad2: pop rbp
0x4ad3: pop r12
0x4ad5: ret
0x4ae0: lea rax,[rip+0x209759]
0x4ae7: test rdi,rdi
0x4aea: cmove rdi,rax
0x4aee: mov eax,dword ptr [rdi]
0x4af0: ret
0x4b00: lea rax,[rip+0x209739]
0x4b07: test rdi,rdi
0x4b0a: cmove rdi,rax
0x4b0e: mov dword ptr [rdi],esi
0x4b10: ret
0x4b20: lea rax,[rip+0x209719]
0x4b27: test rdi,rdi
0x4b2a: mov ecx,esi
0x4b2c: cmove rdi,rax
0x4b30: mov eax,esi
0x4b32: and ecx,0x1f
0x4b35: shr al,0x5
0x4b38: movzx eax,al
0x4b3b: lea rdi,[rdi+rax*4+0x8]
0x4b40: mov esi,dword ptr [rdi]
0x4b42: mov eax,esi
0x4b44: shr eax,cl
0x4b46: xor edx,eax
0x4b48: and eax,0x1
0x4b4b: and edx,0x1
0x4b4e: shl edx,cl
0x4b50: xor edx,esi
0x4b52: mov dword ptr [rdi],edx
0x4b54: ret
0x4b60: lea rax,[rip+0x2096d9]
0x4b67: test rdi,rdi
0x4b6a: cmove rdi,rax
0x4b6e: mov eax,dword ptr [rdi+0x4]
0x4b71: mov dword ptr [rdi+0x4],esi
0x4b74: ret
0x4b80: lea rax,[rip+0x2096b9]
0x4b87: test rdi,rdi
0x4b8a: cmove rdi,rax
0x4b8e: test rsi,rsi
0x4b91: mov [rdi],0xa
0x4b97: jz 0x4ba7
0x4b99: test rdx,rdx
0x4b9c: jz 0x4ba7
0x4b9e: mov qword ptr [rdi+0x28],rsi
0x4ba2: mov qword ptr [rdi+0x30],rdx
0x4ba6: ret
0x4ba7: sub rsp,0x8
0x4bab: call 0x16f0
0x4bb0: push r15
0x4bb2: push r14
0x4bb4: lea rax,[rip+0x209685]
0x4bbb: push r13
0x4bbd: push r12
0x4bbf: mov r13,rdi
0x4bc2: push rbp
0x4bc3: push rbx
0x4bc4: mov rbx,r8
0x4bc7: mov r14,rsi
0x4bca: mov r15,rdx
0x4bcd: sub rsp,0x18
0x4bd1: test r8,r8
0x4bd4: cmove rbx,rax
0x4bd8: mov qword ptr [rsp+0x8],rcx
0x4bdd: call 0x1700
0x4be2: mov r12d,dword ptr [rax]
0x4be5: mov rbp,rax
0x4be8: lea rax,[rbx+0x8]
0x4bec: sub rsp,0x8
0x4bf0: mov r9d,dword ptr [rbx+0x4]
0x4bf4: push qword ptr [rbx+0x30]
0x4bf7: mov r8d,dword ptr [rbx]
0x4bfa: push qword ptr [rbx+0x28]
0x4bfd: mov rdx,r15
0x4c00: push rax
0x4c01: mov rcx,qword ptr [rsp+0x28]
0x4c06: mov rsi,r14
0x4c09: mov rdi,r13
0x4c0c: call 0x36b0
0x4c11: mov dword ptr [rbp+0x0],r12d
0x4c15: add rsp,0x38
0x4c19: pop rbx
0x4c1a: pop rbp
0x4c1b: pop r12
0x4c1d: pop r13
0x4c1f: pop r14
0x4c21: pop r15
0x4c23: ret
0x4c30: push r15
0x4c32: push r14
0x4c34: lea rax,[rip+0x209605]
0x4c3b: push r13
0x4c3d: push r12
0x4c3f: mov r12,rdx
0x4c42: push rbp
0x4c43: push rbx
0x4c44: mov rbx,rcx
0x4c47: mov r14,rdi
0x4c4a: mov r15,rsi
0x4c4d: sub rsp,0x38
0x4c51: test rcx,rcx
0x4c54: cmove rbx,rax
0x4c58: xor ebp,ebp
0x4c5a: call 0x1700
0x4c5f: test r12,r12
0x4c62: mov r13,rax
0x4c65: mov eax,dword ptr [rax]
0x4c67: setz bpl
0x4c6b: or ebp,dword ptr [rbx+0x4]
0x4c6e: lea r10,[rbx+0x8]
0x4c72: sub rsp,0x8
0x4c76: mov r8d,dword ptr [rbx]
0x4c79: mov rcx,r15
0x4c7c: mov dword ptr [rsp+0x14],eax
0x4c80: push qword ptr [rbx+0x30]
0x4c83: mov rdx,r14
0x4c86: push qword ptr [rbx+0x28]
0x4c89: push r10
0x4c8b: xor esi,esi
0x4c8d: mov r9d,ebp
0x4c90: xor edi,edi
0x4c92: mov qword ptr [rsp+0x40],r10
0x4c97: call 0x36b0
0x4c9c: lea rsi,[rax+0x1]
0x4ca0: mov qword ptr [rsp+0x48],rax
0x4ca5: add rsp,0x20
0x4ca9: mov rdi,rsi
0x4cac: mov qword ptr [rsp+0x18],rsi
0x4cb1: call 0x58f0
0x4cb6: mov qword ptr [rsp+0x10],rax
0x4cbb: sub rsp,0x8
0x4cbf: push qword ptr [rbx+0x30]
0x4cc2: push qword ptr [rbx+0x28]
0x4cc5: mov r10,qword ptr [rsp+0x38]
0x4cca: mov r9d,ebp
0x4ccd: mov r8d,dword ptr [rbx]
0x4cd0: mov rcx,r15
0x4cd3: mov rdx,r14
0x4cd6: mov rdi,rax
0x4cd9: push r10
0x4cdb: mov rsi,qword ptr [rsp+0x38]
0x4ce0: call 0x36b0
0x4ce5: mov eax,dword ptr [rsp+0x2c]
0x4ce9: add rsp,0x20
0x4ced: test r12,r12
0x4cf0: mov dword ptr [r13+0x0],eax
0x4cf4: jz 0x4cff
0x4cf6: mov r11,qword ptr [rsp+0x28]
0x4cfb: mov qword ptr [r12],r11
0x4cff: mov rax,qword ptr [rsp+0x10]
0x4d04: add rsp,0x38
0x4d08: pop rbx
0x4d09: pop rbp
0x4d0a: pop r12
0x4d0c: pop r13
0x4d0e: pop r14
0x4d10: pop r15
0x4d12: ret
0x4d20: mov rcx,rdx
0x4d23: xor edx,edx
0x4d25: jmp 0x4c30
0x4d30: mov eax,dword ptr [rip+0x209342]
0x4d36: push r12
0x4d38: mov r12,qword ptr [rip+0x209341]
0x4d3f: push rbp
0x4d40: push rbx
0x4d41: cmp eax,0x1
0x4d44: jle 0x4d71
0x4d46: sub eax,0x2
0x4d49: lea rbx,[r12+0x18]
0x4d4e: shl rax,0x4
0x4d52: lea rbp,[r12+rax*1+0x28]
0x4d57: nop qword ptr [rax+rax*1+0x0]
0x4d60: mov rdi,qword ptr [rbx]
0x4d63: add rbx,0x10
0x4d67: call 0x1a90
0x4d6c: cmp rbx,rbp
0x4d6f: jnz 0x4d60
0x4d71: mov rdi,qword ptr [r12+0x8]
0x4d76: lea rbx,[rip+0x2093c3]
0x4d7d: cmp rdi,rbx
0x4d80: jz 0x4d99
0x4d82: call 0x1a90
0x4d87: mov [rip+0x2092fe],0x100
0x4d92: mov qword ptr [rip+0x2092ff],rbx
0x4d99: lea rbx,[rip+0x2092f0]
0x4da0: cmp r12,rbx
0x4da3: jz 0x4db4
0x4da5: mov rdi,r12
0x4da8: call 0x1a90
0x4dad: mov qword ptr [rip+0x2092cc],rbx
0x4db4: pop rbx
0x4db5: mov [rip+0x2092b9],0x1
0x4dbf: pop rbp
0x4dc0: pop r12
0x4dc2: ret
0x4dd0: lea rcx,[rip+0x209469]
0x4dd7: mov rdx,0xffffffff
0x4dde: jmp 0x48f0
0x4df0: lea rcx,[rip+0x209449]
0x4df7: jmp 0x48f0
0x4e00: lea rcx,[rip+0x209439]
0x4e07: mov rsi,rdi
0x4e0a: mov rdx,0xffffffff
0x4e11: xor edi,edi
0x4e13: jmp 0x48f0
0x4e20: lea rcx,[rip+0x209419]
0x4e27: mov rdx,rsi
0x4e2a: mov rsi,rdi
0x4e2d: xor edi,edi
0x4e2f: jmp 0x48f0
0x4ebf: add rsp,0x48
0x4ec3: ret
0x4ec4: call 0x16f0
0x4ed0: sub rsp,0x48
0x4ed4: mov rax,rdx
0x4ed7: mov rdx,rcx
0x4eda: mov rcx,0x28
0x4ee3: mov qword ptr [rsp+0x38],rcx
0x4ee8: xor ecx,ecx
0x4eea: cmp esi,0xa
0x4eed: jz 0x4f50
0x4eef: mov dword ptr [rsp],esi
0x4ef2: mov rcx,rsp
0x4ef5: mov rsi,rax
0x4ef8: mov [rsp+0x4],0x0
0x4f01: mov [rsp+0xc],0x0
0x4f0a: mov [rsp+0x14],0x0
0x4f13: mov [rsp+0x1c],0x0
0x4f1c: mov [rsp+0x24],0x0
0x4f25: mov [rsp+0x2c],0x0
0x4f2e: mov [rsp+0x34],0x0
0x4f36: call 0x48f0
0x4f3b: mov rdx,qword ptr [rsp+0x38]
0x4f40: xor rdx,0x28
0x4f49: jnz 0x4f55
0x4f4b: add rsp,0x48
0x4f4f: ret
0x4f50: call 0x16f0
0x4f55: call 0x17e0
0x4f70: mov rcx,rdx
0x4f73: mov rdx,rsi
0x4f76: mov esi,edi
0x4f78: xor edi,edi
0x4f7a: jmp 0x4ed0
0x4f80: sub rsp,0x48
0x4f84: mov ecx,edx
0x4f86: mov rax,0x28
0x4f8f: mov qword ptr [rsp+0x38],rax
0x4f94: xor eax,eax
0x4f96: mov rax,qword ptr [rip+0x2092d3]
0x4f9d: mov r8,rsp
0x4fa0: and ecx,0x1f
0x4fa3: movdqa xmm0,[rip+0x209295]
0x4fab: mov qword ptr [rsp+0x30],rax
0x4fb0: mov eax,edx
0x4fb2: movaps [rsp],xmm0
0x4fb6: shr al,0x5
0x4fb9: movzx eax,al
0x4fbc: lea r9,[r8+rax*4+0x8]
0x4fc1: movdqa xmm0,[rip+0x209287]
0x4fc9: movaps [rsp+0x10],xmm0
0x4fce: movdqa xmm0,[rip+0x20928a]
0x4fd6: movaps [rsp+0x20],xmm0
0x4fdb: mov edx,dword ptr [r9]
0x4fde: mov eax,edx
0x4fe0: shr eax,cl
0x4fe2: not eax
0x4fe4: and eax,0x1
0x4fe7: shl eax,cl
0x4fe9: mov rcx,r8
0x4fec: xor eax,edx
0x4fee: mov rdx,rsi
0x4ff1: mov rsi,rdi
0x4ff4: mov dword ptr [r9],eax
0x4ff7: xor edi,edi
0x4ff9: call 0x48f0
0x4ffe: mov rsi,qword ptr [rsp+0x38]
0x5003: xor rsi,0x28
0x500c: jnz 0x5013
0x500e: add rsp,0x48
0x5012: ret
0x5013: call 0x17e0
0x5020: movsx edx,sil
0x5024: mov rsi,0xffffffff
0x502b: jmp 0x4f80
0x5030: mov edx,0x3a
0x5035: mov rsi,0xffffffff
0x503c: jmp 0x4f80
0x5050: mov edx,0x3a
0x5055: jmp 0x4f80
0x50df: add rsp,0x48
0x50e3: ret
0x50e4: call 0x16f0
0x50f0: sub rsp,0x48
0x50f4: mov r9,rcx
0x50f7: mov rcx,qword ptr [rip+0x209172]
0x50fe: movdqa xmm0,[rip+0x20913a]
0x5106: mov rax,0x28
0x510f: mov qword ptr [rsp+0x38],rax
0x5114: xor eax,eax
0x5116: movaps [rsp],xmm0
0x511a: test rsi,rsi
0x511d: mov qword ptr [rsp+0x30],rcx
0x5122: mov [rsp],0xa
0x5129: movdqa xmm0,[rip+0x20911f]
0x5131: movaps [rsp+0x10],xmm0
0x5136: movdqa xmm0,[rip+0x209122]
0x513e: movaps [rsp+0x20],xmm0
0x5143: jz 0x5177
0x5145: test rdx,rdx
0x5148: jz 0x5177
0x514a: mov qword ptr [rsp+0x28],rsi
0x514f: mov qword ptr [rsp+0x30],rdx
0x5154: mov rcx,rsp
0x5157: mov rdx,r8
0x515a: mov rsi,r9
0x515d: call 0x48f0
0x5162: mov rdi,qword ptr [rsp+0x38]
0x5167: xor rdi,0x28
0x5170: jnz 0x517c
0x5172: add rsp,0x48
0x5176: ret
0x5177: call 0x16f0
0x517c: call 0x17e0
0x5190: mov r8,0xffffffff
0x5197: jmp 0x50f0
0x51a0: mov rcx,rdx
0x51a3: mov r8,0xffffffff
0x51aa: mov rdx,rsi
0x51ad: mov rsi,rdi
0x51b0: xor edi,edi
0x51b2: jmp 0x50f0
0x51c0: mov r8,rcx
0x51c3: mov rcx,rdx
0x51c6: mov rdx,rsi
0x51c9: mov rsi,rdi
0x51cc: xor edi,edi
0x51ce: jmp 0x50f0
0x51e0: lea rcx,[rip+0x208e59]
0x51e7: jmp 0x48f0
0x51f0: lea rcx,[rip+0x208e49]
0x51f7: mov rdx,rsi
0x51fa: mov rsi,rdi
0x51fd: xor edi,edi
0x51ff: jmp 0x48f0
0x5210: lea rcx,[rip+0x208e29]
0x5217: mov rdx,0xffffffff
0x521e: jmp 0x48f0
0x52b5: nop qword ptr [rax]
0x52bc: call 0x17e0
0x5376: nop qword ptr [rax+rax*1+0x0]
0x5405: nop qword ptr [rax]
0x5408: mov r8,rcx
0x540b: mov rcx,rdx
0x540e: lea rdx,[rip+0x575f]
0x5415: mov esi,0x1
0x541a: xor eax,eax
0x541c: call 0x1a50
0x5421: jmp 0x530c
0x5426: nop qword ptr [rax+rax*1+0x0]
0x5485: nop qword ptr [rax]
0x54c1: nop qword ptr [rax+0x0]
0x5508: nop qword ptr [rax+rax*1+0x0]
0x5557: nop qword ptr [rax+rax*1+0x0]
0x55b4: nop qword ptr [rax+0x0]
0x55e2: nop qword ptr [rax+rax*1+0x0]
0x5696: nop qword ptr [rax+rax*1+0x0]
0x56f0: xor r9d,r9d
0x56f3: cmp [r8],0x0
0x56f7: jz 0x570b
0x56f9: nop qword ptr [rax+0x0]
0x5700: add r9,0x1
0x5704: cmp [r8+r9*8+0x0],0x0
0x5709: jnz 0x5700
0x570b: jmp 0x52d0
0x5710: sub rsp,0x68
0x5714: mov r10,r8
0x5717: xor r9d,r9d
0x571a: mov rax,0x28
0x5723: mov qword ptr [rsp+0x58],rax
0x5728: xor eax,eax
0x572a: mov r8,rsp
0x572d: nop qword ptr [rax]
0x5730: mov eax,dword ptr [r10]
0x5733: cmp eax,0x2f
0x5736: jnbe 0x577a
0x5738: mov r11d,eax
0x573b: add r11,qword ptr [r10+0x10]
0x573f: add eax,0x8
0x5742: mov dword ptr [r10],eax
0x5745: mov rax,qword ptr [r11]
0x5748: test rax,rax
0x574b: mov qword ptr [r8+r9*8+0x0],rax
0x574f: jz 0x575b
0x5751: add r9,0x1
0x5755: cmp r9,0xa
0x5759: jnz 0x5730
0x575b: call 0x52d0
0x5760: mov rax,qword ptr [rsp+0x58]
0x5765: xor rax,0x28
0x576e: jnz 0x5775
0x5770: add rsp,0x68
0x5774: ret
0x5775: call 0x17e0
0x577a: mov r11,qword ptr [r10+0x8]
0x577e: lea rax,[r11+0x8]
0x5782: mov qword ptr [r10+0x8],rax
0x5786: jmp 0x5745
0x5850: call 0x17e0
0x585c: mov rax,rbx
0x585f: add rbx,0x8
0x5863: jmp 0x5816
0x5870: push rbx
0x5871: lea rsi,[rip+0x534a]
0x5878: mov edx,0x5
0x587d: xor edi,edi
0x587f: call 0x1790
0x5884: lea rdx,[rip+0x534c]
0x588b: mov rsi,rax
0x588e: mov edi,0x1
0x5893: xor eax,eax
0x5895: call 0x19b0
0x589a: lea rsi,[rip+0x534c]
0x58a1: mov edx,0x5
0x58a6: xor edi,edi
0x58a8: call 0x1790
0x58ad: lea rcx,[rip+0x48f4]
0x58b4: lea rdx,[rip+0x43c5]
0x58bb: mov rsi,rax
0x58be: mov edi,0x1
0x58c3: xor eax,eax
0x58c5: call 0x19b0
0x58ca: mov rbx,qword ptr [rip+0x2087d7]
0x58d1: lea rsi,[rip+0x5548]
0x58d8: xor edi,edi
0x58da: mov edx,0x5
0x58df: call 0x1790
0x58e4: mov rsi,rbx
0x58e7: mov rdi,rax
0x58ea: pop rbx
0x58eb: jmp 0x1890
0x5910: mov rax,rdi
0x5913: mul rsi
0x5916: mov rdi,rax
0x5919: seto al
0x591c: test rdi,rdi
0x591f: js 0x592b
0x5921: movzx eax,al
0x5924: test rax,rax
0x5927: jnz 0x592b
0x5929: jmp 0x58f0
0x592b: sub rsp,0x8
0x592f: call 0x5b40
0x5972: nop qword ptr [rax+rax*1+0x0]
0x5990: mov rax,rsi
0x5993: mul rdx
0x5996: mov rsi,rax
0x5999: seto al
0x599c: test rsi,rsi
0x599f: js 0x59ab
0x59a1: movzx eax,al
0x59a4: test rax,rax
0x59a7: jnz 0x59ab
0x59a9: jmp 0x5950
0x59ab: sub rsp,0x8
0x59af: call 0x5b40
0x59c0: test rdi,rdi
0x59c3: mov r9,rdx
0x59c6: mov rcx,qword ptr [rsi]
0x59c9: jz 0x5a00
0x59cb: xor edx,edx
0x59cd: mov rax,0x6148914691236517204
0x59d7: div r9
0x59da: cmp rax,rcx
0x59dd: jbe 0x5a1b
0x59df: mov rax,rcx
0x59e2: shr rax,0x1
0x59e5: lea rcx,[rax+rcx*1+0x1]
0x59ea: mov qword ptr [rsi],rcx
0x59ed: imul rcx,r9
0x59f1: mov rsi,rcx
0x59f4: jmp 0x5950
0x59f9: nop qword ptr [rax+0x0]
0x5a00: test rcx,rcx
0x5a03: jz 0x5a28
0x5a05: mov rax,rcx
0x5a08: mul r9
0x5a0b: seto dl
0x5a0e: test rax,rax
0x5a11: movzx edx,dl
0x5a14: js 0x5a1b
0x5a16: test rdx,rdx
0x5a19: jz 0x59ea
0x5a1b: sub rsp,0x8
0x5a1f: call 0x5b40
0x5a24: nop qword ptr [rax+0x0]
0x5a28: xor edx,edx
0x5a2a: mov eax,0x80
0x5a2f: xor r8d,r8d
0x5a32: div r9
0x5a35: test rax,rax
0x5a38: setz r8b
0x5a3c: lea rcx,[r8+rax*1+0x0]
0x5a40: jmp 0x5a05
0x5a7d: nop qword ptr [rax]
0x5aa0: push rbx
0x5aa1: mov rbx,rdi
0x5aa4: call 0x58f0
0x5aa9: mov rdx,rbx
0x5aac: xor esi,esi
0x5aae: mov rdi,rax
0x5ab1: pop rbx
0x5ab2: jmp 0x1850
0x5ac0: mov rax,rdi
0x5ac3: sub rsp,0x8
0x5ac7: mul rsi
0x5aca: seto dl
0x5acd: test rax,rax
0x5ad0: js 0x5ae9
0x5ad2: movzx edx,dl
0x5ad5: test rdx,rdx
0x5ad8: jnz 0x5ae9
0x5ada: call 0x18a0
0x5adf: test rax,rax
0x5ae2: jz 0x5ae9
0x5ae4: add rsp,0x8
0x5ae8: ret
0x5ae9: call 0x5b40
0x5af0: push rbp
0x5af1: push rbx
0x5af2: mov rbp,rdi
0x5af5: mov rdi,rsi
0x5af8: mov rbx,rsi
0x5afb: sub rsp,0x8
0x5aff: call 0x58f0
0x5b04: add rsp,0x8
0x5b08: mov rdx,rbx
0x5b0b: mov rsi,rbp
0x5b0e: pop rbx
0x5b0f: pop rbp
0x5b10: mov rdi,rax
0x5b13: jmp 0x18e0
0x5b20: push rbx
0x5b21: mov rbx,rdi
0x5b24: call 0x17b0
0x5b29: mov rdi,rbx
0x5b2c: lea rsi,[rax+0x1]
0x5b30: pop rbx
0x5b31: jmp 0x5af0
0x5b70: call 0x16f0
0x5b99: nop qword ptr [rax+0x0]
0x5baf: nop 
0x5be9: nop qword ptr [rax+0x0]
0x5c00: xor eax,eax
0x5c02: mov rdx,qword ptr [rsi+0x8]
0x5c06: cmp qword ptr [rdi+0x8],rdx
0x5c0a: jz 0x5c10
0x5c0c: rep ret
0x5c0e: nop 
0x5c10: mov rax,qword ptr [rsi]
0x5c13: cmp qword ptr [rdi],rax
0x5c16: setz al
0x5c19: ret
0x5c20: mov rax,qword ptr [rdi+0x8]
0x5c24: xor edx,edx
0x5c26: div rsi
0x5c29: mov rax,rdx
0x5c2c: ret
0x5c50: mov rdx,qword ptr [rdi]
0x5c53: mov rax,qword ptr [rsi]
0x5c56: mov rax,qword ptr [rax+0x80]
0x5c5d: cmp qword ptr [rdx+0x80],rax
0x5c64: jb 0x5c70
0x5c66: setnbe al
0x5c69: movzx eax,al
0x5c6c: ret
0x5c6d: nop qword ptr [rax]
0x5c70: mov eax,0xffffffff
0x5c75: ret
0x5cfd: nop qword ptr [rax]
0x5d5c: nop qword ptr [rax+0x0]
0x5dbb: nop qword ptr [rax+rax*1+0x0]
0x5dcc: nop qword ptr [rax+0x0]
0x5dee: nop 
0x5df9: nop qword ptr [rax+0x0]
0x5e12: nop qword ptr [rax+rax*1+0x0]
0x5e22: nop qword ptr [rax+rax*1+0x0]
0x5ee9: nop qword ptr [rax+0x0]
0x5f1d: nop qword ptr [rax]
0x5f47: nop qword ptr [rax+rax*1+0x0]
0x6029: nop qword ptr [rax+0x0]
0x6046: nop qword ptr [rax+rax*1+0x0]
0x606a: nop qword ptr [rax+rax*1+0x0]
0x60d7: nop qword ptr [rax+rax*1+0x0]
0x6138: nop qword ptr [rax+rax*1+0x0]
0x61e7: nop qword ptr [rax+rax*1+0x0]
0x620c: nop qword ptr [rax+0x0]
0x624f: nop 
0x626e: nop 
0x62ca: nop qword ptr [rax+rax*1+0x0]
0x62e1: nop qword ptr [rax+0x0]
0x6321: nop qword ptr [rax+0x0]
0x6343: nop qword ptr [rax+rax*1+0x0]
0x6398: nop qword ptr [rax+rax*1+0x0]
0x63f8: nop qword ptr [rax+rax*1+0x0]
0x64fd: nop qword ptr [rax]
0x6598: nop qword ptr [rax+rax*1+0x0]
0x65bf: nop 
0x65cf: nop 
0x6615: nop qword ptr [rax]
0x6638: nop qword ptr [rax+rax*1+0x0]
0x66db: cmp rbp,rax
0x66de: mov r12,rax
0x66e1: jz 0x6701
0x66e3: mov rdi,rbp
0x66e6: call 0x1a90
0x66eb: test r12,r12
0x66ee: jz 0x6738
0x66f0: mov rax,qword ptr [r12+0x10]
0x66f5: mov ecx,0x2
0x66fa: mov word ptr [rbx+0x70],cx
0x66fe: mov qword ptr [rbx],rax
0x670b: nop qword ptr [rax+rax*1+0x0]
0x6721: mov edx,0x2
0x6726: mov qword ptr [rbx],rbx
0x6729: mov word ptr [rbx+0x70],dx
0x672d: pop rbx
0x672e: pop rbp
0x672f: pop r12
0x6731: ret
0x6732: nop qword ptr [rax+rax*1+0x0]
0x6779: mov rsi,qword ptr [rdx+0x80]
0x6780: cmp qword ptr [rcx],rsi
0x6783: jz 0x67d0
0x679a: nop qword ptr [rax+rax*1+0x0]
0x67ce: nop 
0x67d0: mov rsi,qword ptr [rdx+0x78]
0x67d4: cmp qword ptr [rcx+0x8],rsi
0x67d8: jnz 0x6785
0x67da: mov rdx,qword ptr [rax+0x78]
0x67de: mov rax,qword ptr [rax+0x80]
0x67e5: mov qword ptr [rcx+0x8],rdx
0x67e9: mov qword ptr [rcx],rax
0x67ec: jmp 0x6785
0x67ee: call 0x17e0
0x68f2: nop qword ptr [rax+rax*1+0x0]
0x6aab: nop qword ptr [rax+rax*1+0x0]
0x6b57: nop qword ptr [rax+rax*1+0x0]
0x6b9c: nop qword ptr [rax+0x0]
0x6bc3: nop qword ptr [rax+rax*1+0x0]
0x6bd2: nop qword ptr [rax+rax*1+0x0]
0x6bed: nop qword ptr [rax]
0x6c0b: nop qword ptr [rax+rax*1+0x0]
0x6c44: nop qword ptr [rax+0x0]
0x6c5f: nop 
0x6c6a: nop qword ptr [rax+rax*1+0x0]
0x6d82: nop qword ptr [rax+rax*1+0x0]
0x6d9a: nop qword ptr [rax+rax*1+0x0]
0x6ded: nop qword ptr [rax]
0x6e39: nop qword ptr [rax+0x0]
0x6e4a: nop qword ptr [rax+rax*1+0x0]
0x6ea1: nop qword ptr [rax+0x0]
0x6f78: nop qword ptr [rax+rax*1+0x0]
0x6f8d: test rbx,rbx
0x6f90: mov dword ptr [rbp+0x40],eax
0x6f93: jnz 0x70c9
0x6f99: cmp [rsp+0x50],0x0
0x6f9f: mov eax,0x4
0x6fa4: jnz 0x70c9
0x6faa: mov word ptr [rbp+0x70],ax
0x6fcd: nop qword ptr [rax]
0x6ff5: nop qword ptr [rax]
0x7025: nop qword ptr [rax]
0x703f: nop 
0x704e: nop 
0x70c9: mov eax,0x7
0x70ce: jmp 0x6faa
0x715a: nop qword ptr [rax+rax*1+0x0]
0x72f0: mov eax,dword ptr [rbx+0x48]
0x72f3: shr eax,0xa
0x72f6: and eax,0x1
0x72f9: mov byte ptr [rsp+0x16],al
0x7325: nop qword ptr [rax]
0x73ea: nop qword ptr [rax+rax*1+0x0]
0x73f5: cmp rbp,0x1
0x73f9: jbe 0x740c
0x73fb: mov rsi,r12
0x73fe: mov rdx,rbp
0x7401: mov rdi,rbx
0x7404: call 0x5e50
0x7409: mov r12,rax
0x745d: mov edi,dword ptr [rbx+0x2c]
0x7460: lea rdx,[rip+0x3ab4]
0x7467: call 0x63d0
0x746c: test eax,eax
0x746e: mov dword ptr [rbx+0x28],eax
0x7471: jns 0x7480
0x7473: or [rbx+0x48],0x4
0x7477: nop qword ptr [rax+rax*1+0x0]
0x74a0: mov rdi,qword ptr [r13+0x0]
0x74a4: mov eax,ebp
0x74a6: mov [rbx+0x2c],0xffffff9c
0x74ad: and ah,0xfd
0x74b0: or eax,0x4
0x74b3: test rdi,rdi
0x74b6: mov dword ptr [rbx+0x48],eax
0x74b9: jnz 0x725e
0x74c9: nop qword ptr [rax+0x0]
0x750e: nop 
0x752b: nop qword ptr [rax+rax*1+0x0]
0x7558: nop qword ptr [rax+rax*1+0x0]
0x7574: nop qword ptr [rax+0x0]
0x7578: call 0x1700
0x757d: xor ebx,ebx
0x757f: mov [rax],0x16
0x7585: jmp 0x748e
0x75ab: nop qword ptr [rax+rax*1+0x0]
0x765d: nop qword ptr [rax]
0x7667: nop qword ptr [rax+rax*1+0x0]
0x7670: test al,0x4
0x7672: jnz 0x7616
0x7674: mov edi,dword ptr [rbp+0x28]
0x7677: call 0x1980
0x767c: test eax,eax
0x767e: jnz 0x76d0
0x7680: mov edi,dword ptr [rbp+0x28]
0x7683: call 0x1860
0x7688: test eax,eax
0x768a: jz 0x7616
0x768c: call 0x1700
0x7691: mov r12,rax
0x7694: jmp 0x76f8
0x7696: nop qword ptr [rax+rax*1+0x0]
0x76b9: nop qword ptr [rax+0x0]
0x76d0: call 0x1700
0x76d5: mov edi,dword ptr [rbp+0x28]
0x76d8: mov r12,rax
0x76db: mov ebx,dword ptr [rax]
0x76dd: call 0x1860
0x76e2: test eax,eax
0x76e4: jz 0x7618
0x76ea: test ebx,ebx
0x76ec: jnz 0x7618
0x76f2: nop qword ptr [rax+rax*1+0x0]
0x76f8: mov ebx,dword ptr [r12]
0x76fc: jmp 0x7618
0x7773: nop qword ptr [rax+rax*1+0x0]
0x784c: nop qword ptr [rax+0x0]
0x786c: mov rax,qword ptr [r12+0x18]
0x7871: cmp qword ptr [rbp+0x78],rax
0x7875: jz 0x7918
0x78c6: nop qword ptr [rax+rax*1+0x0]
0x7914: nop qword ptr [rax+0x0]
0x798a: nop qword ptr [rax+rax*1+0x0]
0x799f: nop 
0x79ba: nop qword ptr [rax+rax*1+0x0]
0x7ac2: nop qword ptr [rax+rax*1+0x0]
0x7b14: nop qword ptr [rax+0x0]
0x7b22: and dh,0xef
0x7b25: mov dword ptr [r12+0x48],edx
0x7b2a: call 0x5ff0
0x7b2f: mov [r12+0x8],0x0
0x7b64: nop qword ptr [rax+0x0]
0x7baf: nop 
0x7bc1: nop qword ptr [rax+0x0]
0x7be8: nop qword ptr [rax+rax*1+0x0]
0x7c3b: mov qword ptr [r12],rbp
0x7c3f: jmp 0x7a86
0x7ca4: nop qword ptr [rax+0x0]
0x7d19: nop qword ptr [rax+0x0]
0x7d56: nop qword ptr [rax+rax*1+0x0]
0x7e33: movzx eax,byte ptr [rbp+0x70]
0x7e37: jmp 0x7a7c
0x7eac: nop qword ptr [rax+0x0]
0x7eb0: sub rsp,0x8
0x7eb4: call 0x1700
0x7eb9: mov [rax],0x16
0x7ebf: mov eax,0x1
0x7ec4: add rsp,0x8
0x7ec8: ret
0x7ed0: push r14
0x7ed2: push r13
0x7ed4: push r12
0x7ed6: push rbp
0x7ed7: mov r12d,esi
0x7eda: push rbx
0x7edb: mov rbx,rdi
0x7ede: call 0x1700
0x7ee3: test r12d,0xffffefff
0x7eea: mov r13,rax
0x7eed: jnz 0x7fd8
0x7ef3: mov rbp,qword ptr [rbx]
0x7ef6: mov [rax],0x0
0x7efc: test [rbx+0x49],0x20
0x7f00: jnz 0x7f80
0x7f02: movzx eax,byte ptr [rbp+0x70]
0x7f06: cmp ax,0x9
0x7f0a: jz 0x7f70
0x7f0c: cmp ax,0x1
0x7f10: jnz 0x7f80
0x7f12: mov rdi,qword ptr [rbx+0x8]
0x7f16: test rdi,rdi
0x7f19: jz 0x7f20
0x7f1b: call 0x5ff0
0x7f20: cmp r12d,0x1000
0x7f27: mov r14d,0x1
0x7f2d: jnz 0x7f3c
0x7f2f: or [rbx+0x48],0x1000
0x7f36: mov r14d,0x2
0x7f3c: cmp [rbp+0x58],0x0
0x7f41: jnz 0x7f55
0x7f43: mov rax,qword ptr [rbp+0x30]
0x7f47: cmp [rax],0x2f
0x7f4a: jz 0x7f55
0x7f4c: mov esi,dword ptr [rbx+0x48]
0x7f4f: test sil,0x4
0x7f53: jz 0x7f90
0x7f55: mov esi,r14d
0x7f58: mov rdi,rbx
0x7f5b: call 0x6800
0x7f60: mov qword ptr [rbx+0x8],rax
0x7f64: pop rbx
0x7f65: pop rbp
0x7f66: pop r12
0x7f68: pop r13
0x7f6a: pop r14
0x7f6c: ret
0x7f6d: nop qword ptr [rax]
0x7f70: pop rbx
0x7f71: mov rax,qword ptr [rbp+0x10]
0x7f75: pop rbp
0x7f76: pop r12
0x7f78: pop r13
0x7f7a: pop r14
0x7f7c: ret
0x7f7d: nop qword ptr [rax]
0x7f80: pop rbx
0x7f81: xor eax,eax
0x7f83: pop rbp
0x7f84: pop r12
0x7f86: pop r13
0x7f88: pop r14
0x7f8a: ret
0x7f8b: nop qword ptr [rax+rax*1+0x0]
0x7f90: mov edi,dword ptr [rbx+0x2c]
0x7f93: lea rdx,[rip+0x2f81]
0x7f9a: call 0x63d0
0x7f9f: test eax,eax
0x7fa1: mov ebp,eax
0x7fa3: js 0x7ff9
0x7fa5: mov esi,r14d
0x7fa8: mov rdi,rbx
0x7fab: call 0x6800
0x7fb0: test [rbx+0x49],0x2
0x7fb4: mov qword ptr [rbx+0x8],rax
0x7fb8: jnz 0x7fe8
0x7fba: mov edi,ebp
0x7fbc: call 0x1980
0x7fc1: test eax,eax
0x7fc3: jnz 0x8008
0x7fc5: mov edi,ebp
0x7fc7: call 0x1860
0x7fcc: mov rax,qword ptr [rbx+0x8]
0x7fd0: jmp 0x7f64
0x7fd2: nop qword ptr [rax+rax*1+0x0]
0x7fd8: mov [rax],0x16
0x7fde: xor eax,eax
0x7fe0: jmp 0x7f64
0x7fe5: nop qword ptr [rax]
0x7fe8: mov edx,0x1
0x7fed: mov esi,ebp
0x7fef: mov rdi,rbx
0x7ff2: call 0x6220
0x7ff7: jmp 0x7fcc
0x7ff9: mov [rbx+0x8],0x0
0x8001: xor eax,eax
0x8003: jmp 0x7f64
0x8008: mov ebx,dword ptr [r13+0x0]
0x800c: mov edi,ebp
0x800e: call 0x1860
0x8013: xor eax,eax
0x8015: mov dword ptr [r13+0x0],ebx
0x8019: jmp 0x7f64
0x809e: call 0x17e0
0x80b0: push r12
0x80b2: push rbp
0x80b3: mov rbp,rdi
0x80b6: push rbx
0x80b7: call 0x1730
0x80bc: mov ebx,dword ptr [rbp+0x0]
0x80bf: mov rdi,rbp
0x80c2: mov r12,rax
0x80c5: call 0x97a0
0x80ca: and ebx,0x20
0x80cd: test ebx,ebx
0x80cf: jnz 0x80e8
0x80d1: test eax,eax
0x80d3: jz 0x80df
0x80d5: test r12,r12
0x80d8: mov eax,0xffffffff
0x80dd: jz 0x8118
0x80df: pop rbx
0x80e0: pop rbp
0x80e1: pop r12
0x80e3: ret
0x80e4: nop qword ptr [rax+0x0]
0x80e8: test eax,eax
0x80ea: jnz 0x8108
0x80ec: call 0x1700
0x80f1: mov [rax],0x0
0x80f7: mov eax,0xffffffff
0x80fc: pop rbx
0x80fd: pop rbp
0x80fe: pop r12
0x8100: ret
0x8101: nop qword ptr [rax+0x0]
0x8108: pop rbx
0x8109: mov eax,0xffffffff
0x810e: pop rbp
0x810f: pop r12
0x8111: ret
0x8112: nop qword ptr [rax+rax*1+0x0]
0x8118: call 0x1700
0x811d: cmp [rax],0x9
0x8120: pop rbx
0x8121: pop rbp
0x8122: pop r12
0x8124: setnz al
0x8127: movzx eax,al
0x812a: neg eax
0x812c: ret
0x8156: cmp qword ptr [rdi],rcx
0x8159: jz 0x8188
0x815b: lea r8,[rdx+0x1]
0x815f: xor eax,eax
0x8161: test rdx,r8
0x8164: mov qword ptr [rdi+0x10],r8
0x8168: jz 0x81a0
0x816a: rep ret
0x816c: nop qword ptr [rax+0x0]
0x8185: nop qword ptr [rax]
0x8188: mov rax,qword ptr [rdi+0x8]
0x818c: cmp qword ptr [rsi],rax
0x818f: jnz 0x815b
0x8191: mov eax,0x1
0x8196: ret
0x8197: nop qword ptr [rax+rax*1+0x0]
0x81a0: test r8,r8
0x81a3: jz 0x8191
0x81a5: jmp 0x8178
0x81a7: lea rcx,[rip+0x2de2]
0x81ae: lea rsi,[rip+0x2d9b]
0x81b5: lea rdi,[rip+0x2db8]
0x81bc: sub rsp,0x8
0x81c0: mov edx,0x3c
0x81c5: call 0x1840
0x8214: nop qword ptr [rax+0x0]
0x8218: lea rax,[rsp+0x60]
0x821d: mov [rsp],0x10
0x8224: mov edx,dword ptr [rsp+0x30]
0x8228: mov qword ptr [rsp+0x8],rax
0x822d: lea rax,[rsp+0x20]
0x8232: mov qword ptr [rsp+0x10],rax
0x8237: jmp 0x81f1
0x827a: nop qword ptr [rax+rax*1+0x0]
0x82fe: nop 
0x8340: mov rax,rdi
0x8343: xor edx,edx
0x8345: ror rax,0x3
0x8349: div rsi
0x834c: mov rax,rdx
0x834f: ret
0x8350: cmp rdi,rsi
0x8353: setz al
0x8356: ret
0x83eb: nop qword ptr [rax+rax*1+0x0]
0x844a: nop qword ptr [rax+rax*1+0x0]
0x8489: nop qword ptr [rax+0x0]
0x8499: nop qword ptr [rax+0x0]
0x8571: nop qword ptr [rax+0x0]
0x863c: nop qword ptr [rax+0x0]
0x864a: nop qword ptr [rax+rax*1+0x0]
0x8670: mov rax,qword ptr [rdi+0x10]
0x8674: ret
0x8680: mov rax,qword ptr [rdi+0x18]
0x8684: ret
0x8690: mov rax,qword ptr [rdi+0x20]
0x8694: ret
0x86a0: mov rsi,qword ptr [rdi]
0x86a3: mov rdi,qword ptr [rdi+0x8]
0x86a7: xor eax,eax
0x86a9: cmp rsi,rdi
0x86ac: jnb 0x86e7
0x86ae: nop 
0x86b0: cmp [rsi],0x0
0x86b4: jz 0x86dc
0x86b6: mov rdx,qword ptr [rsi+0x8]
0x86ba: mov ecx,0x1
0x86bf: test rdx,rdx
0x86c2: jz 0x86d5
0x86c4: nop qword ptr [rax+0x0]
0x86c8: mov rdx,qword ptr [rdx+0x8]
0x86cc: add rcx,0x1
0x86d0: test rdx,rdx
0x86d3: jnz 0x86c8
0x86d5: cmp rax,rcx
0x86d8: cmovnae rax,rcx
0x86dc: add rsi,0x10
0x86e0: cmp rsi,rdi
0x86e3: jb 0x86b0
0x86e5: rep ret
0x86e7: rep ret
0x86f0: mov rcx,qword ptr [rdi]
0x86f3: mov r8,qword ptr [rdi+0x8]
0x86f7: xor edx,edx
0x86f9: xor esi,esi
0x86fb: cmp rcx,r8
0x86fe: jnb 0x8736
0x8700: cmp [rcx],0x0
0x8704: jz 0x872d
0x8706: mov rax,qword ptr [rcx+0x8]
0x870a: add rsi,0x1
0x870e: add rdx,0x1
0x8712: test rax,rax
0x8715: jz 0x872d
0x8717: nop qword ptr [rax+rax*1+0x0]
0x8720: mov rax,qword ptr [rax+0x8]
0x8724: add rdx,0x1
0x8728: test rax,rax
0x872b: jnz 0x8720
0x872d: add rcx,0x10
0x8731: cmp rcx,r8
0x8734: jb 0x8700
0x8736: xor eax,eax
0x8738: cmp qword ptr [rdi+0x18],rsi
0x873c: jz 0x8740
0x873e: rep ret
0x8740: cmp qword ptr [rdi+0x20],rdx
0x8744: setz al
0x8747: ret
0x8750: push r13
0x8752: push r12
0x8754: mov r12,rsi
0x8757: push rbp
0x8758: push rbx
0x8759: xor ebx,ebx
0x875b: sub rsp,0x8
0x875f: mov rsi,qword ptr [rdi]
0x8762: mov rcx,qword ptr [rdi+0x20]
0x8766: mov rbp,qword ptr [rdi+0x10]
0x876a: mov r13,qword ptr [rdi+0x18]
0x876e: mov rdi,qword ptr [rdi+0x8]
0x8772: cmp rsi,rdi
0x8775: jnb 0x87b5
0x8777: nop qword ptr [rax+rax*1+0x0]
0x8780: cmp [rsi],0x0
0x8784: jz 0x87ac
0x8786: mov rax,qword ptr [rsi+0x8]
0x878a: mov edx,0x1
0x878f: test rax,rax
0x8792: jz 0x87a5
0x8794: nop qword ptr [rax+0x0]
0x8798: mov rax,qword ptr [rax+0x8]
0x879c: add rdx,0x1
0x87a0: test rax,rax
0x87a3: jnz 0x8798
0x87a5: cmp rbx,rdx
0x87a8: cmovnae rbx,rdx
0x87ac: add rsi,0x10
0x87b0: cmp rsi,rdi
0x87b3: jb 0x8780
0x87b5: lea rdx,[rip+0x27e8]
0x87bc: mov esi,0x1
0x87c1: mov rdi,r12
0x87c4: xor eax,eax
0x87c6: call 0x1a50
0x87cb: lea rdx,[rip+0x27ea]
0x87d2: xor eax,eax
0x87d4: mov rcx,rbp
0x87d7: mov esi,0x1
0x87dc: mov rdi,r12
0x87df: call 0x1a50
0x87e4: test r13,r13
0x87e7: js 0x8850
0x87e9: pxor xmm0,xmm0
0x87ed: test rbp,rbp
0x87f0: cvtsi2sd xmm0,r13
0x87f5: mulsd xmm0,[rip+0x285b]
0x87fd: js 0x8879
0x87ff: pxor xmm1,xmm1
0x8803: cvtsi2sd xmm1,rbp
0x8808: divsd xmm0,xmm1
0x880c: lea rdx,[rip+0x27dd]
0x8813: mov rcx,r13
0x8816: mov rdi,r12
0x8819: mov esi,0x1
0x881e: mov eax,0x1
0x8823: call 0x1a50
0x8828: add rsp,0x8
0x882c: mov rcx,rbx
0x882f: mov rdi,r12
0x8832: pop rbx
0x8833: pop rbp
0x8834: pop r12
0x8836: pop r13
0x8838: lea rdx,[rip+0x2795]
0x883f: mov esi,0x1
0x8844: xor eax,eax
0x8846: jmp 0x1a50
0x884b: nop qword ptr [rax+rax*1+0x0]
0x8850: mov rax,r13
0x8853: mov rdx,r13
0x8856: pxor xmm0,xmm0
0x885a: shr rax,0x1
0x885d: and edx,0x1
0x8860: or rax,rdx
0x8863: test rbp,rbp
0x8866: cvtsi2sd xmm0,rax
0x886b: addsd xmm0,xmm0
0x886f: mulsd xmm0,[rip+0x27e1]
0x8877: jns 0x87ff
0x8879: mov rax,rbp
0x887c: pxor xmm1,xmm1
0x8880: shr rax,0x1
0x8883: and ebp,0x1
0x8886: or rax,rbp
0x8889: cvtsi2sd xmm1,rax
0x888e: addsd xmm1,xmm1
0x8892: jmp 0x8808
0x88bc: nop qword ptr [rax+0x0]
0x88e7: nop qword ptr [rax+rax*1+0x0]
0x8900: cmp [rdi+0x20],0x0
0x8905: jz 0x8933
0x8907: mov rdx,qword ptr [rdi]
0x890a: mov rcx,qword ptr [rdi+0x8]
0x890e: cmp rdx,rcx
0x8911: jnb 0x8938
0x8913: mov rax,qword ptr [rdx]
0x8916: test rax,rax
0x8919: jnz 0x8936
0x891b: nop qword ptr [rax+rax*1+0x0]
0x8920: add rdx,0x10
0x8924: cmp rdx,rcx
0x8927: jnb 0x8938
0x8929: mov rax,qword ptr [rdx]
0x892c: test rax,rax
0x892f: jz 0x8920
0x8931: rep ret
0x8933: xor eax,eax
0x8935: ret
0x8936: rep ret
0x8938: sub rsp,0x8
0x893c: call 0x16f0
0x8950: push rbp
0x8951: push rbx
0x8952: mov rbp,rdi
0x8955: mov rbx,rsi
0x8958: sub rsp,0x8
0x895c: call 0x8360
0x8961: mov rdx,rax
0x8964: mov rcx,rax
0x8967: mov rax,qword ptr [rdx]
0x896a: mov rdx,qword ptr [rdx+0x8]
0x896e: cmp rax,rbx
0x8971: jz 0x8989
0x8973: nop qword ptr [rax+rax*1+0x0]
0x8978: test rdx,rdx
0x897b: jz 0x898e
0x897d: mov rax,qword ptr [rdx]
0x8980: mov rdx,qword ptr [rdx+0x8]
0x8984: cmp rax,rbx
0x8987: jnz 0x8978
0x8989: test rdx,rdx
0x898c: jnz 0x89b8
0x898e: mov rdx,qword ptr [rbp+0x8]
0x8992: jmp 0x89a0
0x8994: nop qword ptr [rax+0x0]
0x8998: mov rax,qword ptr [rcx]
0x899b: test rax,rax
0x899e: jnz 0x89ab
0x89a0: add rcx,0x10
0x89a4: cmp rdx,rcx
0x89a7: jnbe 0x8998
0x89a9: xor eax,eax
0x89ab: add rsp,0x8
0x89af: pop rbx
0x89b0: pop rbp
0x89b1: ret
0x89b2: nop qword ptr [rax+rax*1+0x0]
0x89b8: mov rax,qword ptr [rdx]
0x89bb: add rsp,0x8
0x89bf: pop rbx
0x89c0: pop rbp
0x89c1: ret
0x89d0: mov r9,qword ptr [rdi]
0x89d3: cmp qword ptr [rdi+0x8],r9
0x89d7: jbe 0x8a32
0x89d9: xor r8d,r8d
0x89dc: mov rcx,qword ptr [r9]
0x89df: test rcx,rcx
0x89e2: jz 0x8a1d
0x89e4: cmp rdx,r8
0x89e7: jbe 0x8a27
0x89e9: mov qword ptr [rsi+r8*8+0x0],rcx
0x89ed: mov rcx,qword ptr [r9+0x8]
0x89f1: lea rax,[r8+0x1]
0x89f5: test rcx,rcx
0x89f8: jz 0x8a1a
0x89fa: nop qword ptr [rax+rax*1+0x0]
0x8a00: cmp rdx,rax
0x8a03: jz 0x8a30
0x8a05: mov r8,qword ptr [rcx]
0x8a08: add rax,0x1
0x8a0c: mov qword ptr [rsi+rax*8-0x8],r8
0x8a11: mov rcx,qword ptr [rcx+0x8]
0x8a15: test rcx,rcx
0x8a18: jnz 0x8a00
0x8a1a: mov r8,rax
0x8a1d: add r9,0x10
0x8a21: cmp qword ptr [rdi+0x8],r9
0x8a25: jnbe 0x89dc
0x8a27: mov rax,r8
0x8a2a: ret
0x8a2b: nop qword ptr [rax+rax*1+0x0]
0x8a30: rep ret
0x8a32: xor eax,eax
0x8a34: ret
0x8a40: push r15
0x8a42: push r14
0x8a44: push r13
0x8a46: push r12
0x8a48: push rbp
0x8a49: push rbx
0x8a4a: sub rsp,0x8
0x8a4e: mov r14,qword ptr [rdi]
0x8a51: cmp qword ptr [rdi+0x8],r14
0x8a55: jbe 0x8aa6
0x8a57: mov r13,rdx
0x8a5a: mov r12,rsi
0x8a5d: mov r15,rdi
0x8a60: xor ebp,ebp
0x8a62: mov rdi,qword ptr [r14]
0x8a65: test rdi,rdi
0x8a68: jz 0x8a8a
0x8a6a: mov rbx,r14
0x8a6d: jmp 0x8a73
0x8a6f: nop 
0x8a70: mov rdi,qword ptr [rbx]
0x8a73: mov rsi,r13
0x8a76: call r12
0x8a79: test al,al
0x8a7b: jz 0x8a94
0x8a7d: mov rbx,qword ptr [rbx+0x8]
0x8a81: add rbp,0x1
0x8a85: test rbx,rbx
0x8a88: jnz 0x8a70
0x8a8a: add r14,0x10
0x8a8e: cmp qword ptr [r15+0x8],r14
0x8a92: jnbe 0x8a62
0x8a94: add rsp,0x8
0x8a98: mov rax,rbp
0x8a9b: pop rbx
0x8a9c: pop rbp
0x8a9d: pop r12
0x8a9f: pop r13
0x8aa1: pop r14
0x8aa3: pop r15
0x8aa5: ret
0x8aa6: xor ebp,ebp
0x8aa8: jmp 0x8a94
0x8ab0: movzx ecx,byte ptr [rdi]
0x8ab3: xor edx,edx
0x8ab5: test cl,cl
0x8ab7: jz 0x8add
0x8ab9: nop qword ptr [rax+0x0]
0x8ac0: mov rax,rdx
0x8ac3: add rdi,0x1
0x8ac7: shl rax,0x5
0x8acb: sub rax,rdx
0x8ace: xor edx,edx
0x8ad0: add rax,rcx
0x8ad3: movzx ecx,byte ptr [rdi]
0x8ad6: div rsi
0x8ad9: test cl,cl
0x8adb: jnz 0x8ac0
0x8add: mov rax,rdx
0x8ae0: ret
0x8af0: mov rax,0x4575657221408423936
0x8afa: mov [rdi+0x10],0x0
0x8afe: mov qword ptr [rdi],rax
0x8b01: mov rax,0x4590573145673223373
0x8b0b: mov qword ptr [rdi+0x8],rax
0x8b0f: ret
0x8b6c: mov qword ptr [rax+0x28],r15
0x8b70: call 0x84b0
0x8b75: test al,al
0x8b77: jz 0x8c00
0x8b7d: cmp [r15+0x10],0x0
0x8b82: jz 0x8c80
0x8bff: nop 
0x8c1c: nop qword ptr [rax+0x0]
0x8c7f: nop 
0x8c80: test rbp,rbp
0x8c83: movss xmm1,[r15+0x8]
0x8c89: jns 0x8c41
0x8ca6: nop qword ptr [rax+rax*1+0x0]
0x8cd0: push r12
0x8cd2: push rbp
0x8cd3: mov rbp,rdi
0x8cd6: push rbx
0x8cd7: mov r12,qword ptr [rdi]
0x8cda: cmp r12,qword ptr [rdi+0x8]
0x8cde: jnb 0x8d4b
0x8ce0: cmp [r12],0x0
0x8ce5: jz 0x8d41
0x8ce7: mov rbx,qword ptr [r12+0x8]
0x8cec: mov rax,qword ptr [rbp+0x40]
0x8cf0: test rbx,rbx
0x8cf3: jz 0x8d25
0x8cf5: nop qword ptr [rax]
0x8cf8: test rax,rax
0x8cfb: jz 0x8d06
0x8cfd: mov rdi,qword ptr [rbx]
0x8d00: call rax
0x8d02: mov rax,qword ptr [rbp+0x40]
0x8d06: mov rdx,qword ptr [rbx+0x8]
0x8d0a: mov rcx,qword ptr [rbp+0x48]
0x8d0e: mov [rbx],0x0
0x8d15: test rdx,rdx
0x8d18: mov qword ptr [rbx+0x8],rcx
0x8d1c: mov qword ptr [rbp+0x48],rbx
0x8d20: mov rbx,rdx
0x8d23: jnz 0x8cf8
0x8d25: test rax,rax
0x8d28: jz 0x8d30
0x8d2a: mov rdi,qword ptr [r12]
0x8d2e: call rax
0x8d30: mov [r12],0x0
0x8d38: mov [r12+0x8],0x0
0x8d41: add r12,0x10
0x8d45: cmp qword ptr [rbp+0x8],r12
0x8d49: jnbe 0x8ce0
0x8d4b: mov [rbp+0x18],0x0
0x8d53: mov [rbp+0x20],0x0
0x8d5b: pop rbx
0x8d5c: pop rbp
0x8d5d: pop r12
0x8d5f: ret
0x8d96: nop qword ptr [rax+rax*1+0x0]
0x8da0: mov rdi,qword ptr [rbx]
0x8da8: mov rbx,qword ptr [rbx+0x8]
0x8dac: test rbx,rbx
0x8daf: jnz 0x8da0
0x8db1: mov rax,qword ptr [r12+0x8]
0x8f97: test al,al
0x8f99: jz 0x9079
0x8f9f: xor edx,edx
0x8fa1: mov rsi,r12
0x8fa4: mov rdi,rbp
0x8fa7: call 0x8530
0x8fac: test al,al
0x8fae: jz 0x9079
0x8fb4: mov rdi,qword ptr [rsp]
0x8fb8: call 0x1a90
0x8fbd: jmp 0x8fc2
0x8fbf: nop 
0x8fe1: nop qword ptr [rax+0x0]
0x9006: nop qword ptr [rax+rax*1+0x0]
0x901a: nop qword ptr [rax+rax*1+0x0]
0x9027: nop qword ptr [rax+rax*1+0x0]
0x906a: call 0x17e0
0x9079: call 0x16f0
0x90eb: nop qword ptr [rax+rax*1+0x0]
0x916e: nop 
0x91b8: nop qword ptr [rax+rax*1+0x0]
0x9262: nop qword ptr [rax+rax*1+0x0]
0x929d: nop qword ptr [rax]
0x92be: nop 
0x92de: nop 
0x92ff: call 0x17e0
0x9356: nop qword ptr [rax+rax*1+0x0]
0x93cf: nop 
0x94b6: nop qword ptr [rax+rax*1+0x0]
0x94c0: mov rcx,rax
0x94c3: pxor xmm1,xmm1
0x94c7: shr rcx,0x1
0x94ca: and eax,0x1
0x94cd: or rcx,rax
0x94d0: cvtsi2ss xmm1,rcx
0x94d5: addss xmm1,xmm1
0x94d9: jmp 0x9408
0x94de: nop 
0x94e0: mov rdx,rax
0x94e3: pxor xmm0,xmm0
0x94e7: shr rdx,0x1
0x94ea: and eax,0x1
0x94ed: or rdx,rax
0x94f0: cvtsi2ss xmm0,rdx
0x94f5: addss xmm0,xmm0
0x94f9: jmp 0x93ee
0x94fe: nop 
0x951f: nop 
0x952a: nop qword ptr [rax+rax*1+0x0]
0x9530: mov rcx,rax
0x9533: pxor xmm1,xmm1
0x9537: shr rcx,0x1
0x953a: and eax,0x1
0x953d: or rcx,rax
0x9540: cvtsi2ss xmm1,rcx
0x9545: addss xmm1,xmm1
0x9549: jmp 0x944a
0x954e: nop 
0x9550: mov rcx,rax
0x9553: pxor xmm0,xmm0
0x9557: shr rcx,0x1
0x955a: and eax,0x1
0x955d: or rcx,rax
0x9560: cvtsi2ss xmm0,rcx
0x9565: addss xmm0,xmm0
0x9569: jmp 0x9434
0x9616: nop qword ptr [rax+rax*1+0x0]
0x9656: nop qword ptr [rax+rax*1+0x0]
0x96b3: nop qword ptr [rax+rax*1+0x0]
0x96b8: lea rax,[rsp+0x60]
0x96bd: mov [rsp],0x18
0x96c4: mov ecx,dword ptr [rsp+0x38]
0x96c8: mov qword ptr [rsp+0x8],rax
0x96cd: lea rax,[rsp+0x20]
0x96d2: mov qword ptr [rsp+0x10],rax
0x96d7: jmp 0x9690
0x9721: nop qword ptr [rax+0x0]
0x974c: nop qword ptr [rax+0x0]
0x97a0: push r12
0x97a2: push rbp
0x97a3: push rbx
0x97a4: mov rbx,rdi
0x97a7: call 0x18f0
0x97ac: test eax,eax
0x97ae: mov rdi,rbx
0x97b1: js 0x9807
0x97b3: call 0x1970
0x97b8: test eax,eax
0x97ba: jnz 0x97e8
0x97bc: mov rdi,rbx
0x97bf: call 0x9aa0
0x97c4: test eax,eax
0x97c6: jz 0x9804
0x97c8: call 0x1700
0x97cd: mov r12d,dword ptr [rax]
0x97d0: mov rdi,rbx
0x97d3: mov rbp,rax
0x97d6: call 0x1770
0x97db: test r12d,r12d
0x97de: jnz 0x9810
0x97e0: pop rbx
0x97e1: pop rbp
0x97e2: pop r12
0x97e4: ret
0x97e5: nop qword ptr [rax]
0x97e8: mov rdi,rbx
0x97eb: call 0x18f0
0x97f0: xor esi,esi
0x97f2: mov edx,0x1
0x97f7: mov edi,eax
0x97f9: call 0x1830
0x97fe: cmp rax,0xffffffff
0x9802: jnz 0x97bc
0x9804: mov rdi,rbx
0x9807: pop rbx
0x9808: pop rbp
0x9809: pop r12
0x980b: jmp 0x1770
0x9810: mov dword ptr [rbp+0x0],r12d
0x9814: mov eax,0xffffffff
0x9819: jmp 0x97e0
0x98bb: nop qword ptr [rax+rax*1+0x0]
0x991f: nop 
0x9969: nop qword ptr [rax+0x0]
0x998b: nop qword ptr [rax+rax*1+0x0]
0x9a31: nop qword ptr [rax+0x0]
0x9a8a: mov rax,qword ptr [rsp+0x8]
0x9a8f: jmp 0x9959
0x9a94: mov rax,qword ptr [rsp+0x8]
0x9a99: jmp 0x99b1
0x9aa0: test rdi,rdi
0x9aa3: push rbx
0x9aa4: mov rbx,rdi
0x9aa7: jz 0x9aba
0x9aa9: call 0x1970
0x9aae: test eax,eax
0x9ab0: jz 0x9aba
0x9ab2: test [rbx],0x100
0x9ab8: jnz 0x9ac8
0x9aba: mov rdi,rbx
0x9abd: pop rbx
0x9abe: jmp 0x1930
0x9ac3: nop qword ptr [rax+rax*1+0x0]
0x9ac8: mov rdi,rbx
0x9acb: mov edx,0x1
0x9ad0: xor esi,esi
0x9ad2: call 0x9ae0
0x9ad7: mov rdi,rbx
0x9ada: pop rbx
0x9adb: jmp 0x1930
0x9ae0: mov rax,qword ptr [rdi+0x8]
0x9ae4: cmp qword ptr [rdi+0x10],rax
0x9ae8: jz 0x9af0
0x9aea: jmp 0x19f0
0x9aef: nop 
0x9af0: mov rax,qword ptr [rdi+0x20]
0x9af4: cmp qword ptr [rdi+0x28],rax
0x9af8: jnz 0x9aea
0x9afa: cmp [rdi+0x48],0x0
0x9aff: jnz 0x9aea
0x9b01: push r12
0x9b03: push rbp
0x9b04: mov r12d,edx
0x9b07: push rbx
0x9b08: mov rbp,rsi
0x9b0b: mov rbx,rdi
0x9b0e: call 0x18f0
0x9b13: mov edx,r12d
0x9b16: mov rsi,rbp
0x9b19: mov edi,eax
0x9b1b: call 0x1830
0x9b20: cmp rax,0xffffffff
0x9b24: jz 0x9b32
0x9b26: and [rbx],0xef
0x9b29: mov qword ptr [rbx+0x90],rax
0x9b30: xor eax,eax
0x9b32: pop rbx
0x9b33: pop rbp
0x9b34: pop r12
0x9b36: ret
0x9b50: push r15
0x9b52: push r14
0x9b54: mov r15,rdx
0x9b57: push r13
0x9b59: push r12
0x9b5b: lea r12,[rip+0x203ece]
0x9b62: push rbp
0x9b63: lea rbp,[rip+0x203ece]
0x9b6a: push rbx
0x9b6b: mov r13d,edi
0x9b6e: mov r14,rsi
0x9b71: sub rbp,r12
0x9b74: sub rsp,0x8
0x9b78: sar rbp,0x3
0x9b7c: call 0x16c8
0x9b81: test rbp,rbp
0x9b84: jz 0x9ba6
0x9b86: xor ebx,ebx
0x9b88: nop qword ptr [rax+rax*1+0x0]
0x9b90: mov rdx,r15
0x9b93: mov rsi,r14
0x9b96: mov edi,r13d
0x9b99: call qword ptr [r12+rbx*8+0x0]
0x9b9d: add rbx,0x1
0x9ba1: cmp rbp,rbx
0x9ba4: jnz 0x9b90
0x9ba6: add rsp,0x8
0x9baa: pop rbx
0x9bab: pop rbp
0x9bac: pop r12
0x9bae: pop r13
0x9bb0: pop r14
0x9bb2: pop r15
0x9bb4: ret
0x9be0: sub rsp,0x8
0x9be4: add rsp,0x8
0x9be8: ret
