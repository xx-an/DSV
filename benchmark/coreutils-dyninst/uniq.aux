0x1718: sub rsp,0x8
0x171c: mov rax,qword ptr [rip+0x2088c5]
0x1723: test rax,rax
0x1726: jz 0x172a
0x1728: call rax
0x172a: add rsp,0x8
0x172e: ret
0x1746: push 0x0
0x1756: push 0x1
0x1766: push 0x2
0x1776: push 0x3
0x1786: push 0x4
0x1796: push 0x5
0x17a6: push 0x6
0x17b0: jmp qword ptr [rip+0x2086a2]
0x17b6: push 0x7
0x17c0: jmp qword ptr [rip+0x20869a]
0x17c6: push 0x8
0x17d6: push 0x9
0x17e6: push 0xa
0x17f6: push 0xb
0x1806: push 0xc
0x1816: push 0xd
0x1826: push 0xe
0x1836: push 0xf
0x1846: push 0x10
0x1856: push 0x11
0x1866: push 0x12
0x1876: push 0x13
0x1886: push 0x14
0x1896: push 0x15
0x18a6: push 0x16
0x18b0: jmp qword ptr [rip+0x208622]
0x18b6: push 0x17
0x18c6: push 0x18
0x18d6: push 0x19
0x18e6: push 0x1a
0x18f6: push 0x1b
0x1906: push 0x1c
0x1916: push 0x1d
0x1920: jmp qword ptr [rip+0x2085ea]
0x1926: push 0x1e
0x1936: push 0x1f
0x1946: push 0x20
0x1950: jmp qword ptr [rip+0x2085d2]
0x1956: push 0x21
0x1966: push 0x22
0x1976: push 0x23
0x1986: push 0x24
0x1996: push 0x25
0x19a6: push 0x26
0x19b6: push 0x27
0x19c6: push 0x28
0x19d6: push 0x29
0x19e6: push 0x2a
0x19f6: push 0x2b
0x1a06: push 0x2c
0x1a16: push 0x2d
0x1a26: push 0x2e
0x1a36: push 0x2f
0x1a46: push 0x30
0x1a56: push 0x31
0x1a66: push 0x32
0x1a76: push 0x33
0x1a86: push 0x34
0x1a96: push 0x35
0x1aa6: push 0x36
0x1ab0: jmp qword ptr [rip+0x208542]
0x1ab6: nop 
0x1bda: nop qword ptr [rax+rax*1+0x0]
0x1c9b: nop qword ptr [rax+rax*1+0x0]
0x1cd7: nop qword ptr [rax+rax*1+0x0]
0x1d18: nop qword ptr [rax+rax*1+0x0]
0x210c: nop qword ptr [rax+0x0]
0x225f: mov rbx,rax
0x2262: call 0x1790
0x2267: mov esi,dword ptr [rax]
0x2269: lea rdx,[rip+0x4f88]
0x2270: mov rcx,rbx
0x2273: mov edi,0x1
0x2278: xor eax,eax
0x227a: call 0x1a00
0x2393: lea rsi,[rip+0x44ed]
0x239a: mov rbx,rax
0x239d: mov edx,0x5
0x23a2: xor edi,edi
0x23a4: call 0x1800
0x23a9: mov rcx,rbx
0x23ac: mov rdx,rax
0x23af: xor esi,esi
0x23b1: mov edi,0x1
0x23b6: xor eax,eax
0x23b8: call 0x1a00
0x24d3: mov ecx,dword ptr [rsp+0x38]
0x24d7: jmp 0x20da
0x2508: mov edi,0x1
0x250d: call 0x2920
0x251b: jmp 0x2327
0x2529: jmp 0x1f4e
0x2556: jmp 0x1ccd
0x255b: call 0x1830
0x256f: mov rbx,rax
0x2572: call 0x1790
0x2577: mov esi,dword ptr [rax]
0x2579: lea rdx,[rip+0x4c78]
0x2580: mov rcx,rbx
0x2583: mov edi,0x1
0x2588: xor eax,eax
0x258a: call 0x1a00
0x258f: nop 
0x25ba: hlt 
0x25c0: lea rdi,[rip+0x207ad9]
0x25c7: push rbp
0x25c8: lea rax,[rip+0x207ad1]
0x25cf: cmp rax,rdi
0x25d2: mov rbp,rsp
0x25d5: jz 0x25f0
0x25d7: mov rax,qword ptr [rip+0x2079fa]
0x25de: test rax,rax
0x25e1: jz 0x25f0
0x25e3: pop rbp
0x25e4: jmp rax
0x25e6: nop qword ptr [rax+rax*1+0x0]
0x25f0: pop rbp
0x25f1: ret
0x2600: lea rdi,[rip+0x207a99]
0x2607: lea rsi,[rip+0x207a92]
0x260e: push rbp
0x260f: sub rsi,rdi
0x2612: mov rbp,rsp
0x2615: sar rsi,0x3
0x2619: mov rax,rsi
0x261c: shr rax,0x3f
0x2620: add rsi,rax
0x2623: sar rsi,0x1
0x2626: jz 0x2640
0x2628: mov rax,qword ptr [rip+0x2079c1]
0x262f: test rax,rax
0x2632: jz 0x2640
0x2634: pop rbp
0x2635: jmp rax
0x2637: nop qword ptr [rax+rax*1+0x0]
0x2640: pop rbp
0x2641: ret
0x2650: cmp [rip+0x207a91],0x0
0x2657: jnz 0x2688
0x2659: cmp [rip+0x207997],0x0
0x2661: push rbp
0x2662: mov rbp,rsp
0x2665: jz 0x2673
0x2667: mov rdi,qword ptr [rip+0x20799a]
0x266e: call 0x1ab0
0x2673: call 0x25c0
0x2678: mov [rip+0x207a69],0x1
0x267f: pop rbp
0x2680: ret
0x2681: nop qword ptr [rax+0x0]
0x2688: rep ret
0x2690: push rbp
0x2691: mov rbp,rsp
0x2694: pop rbp
0x2695: jmp 0x2600
0x26d1: nop qword ptr [rax+0x0]
0x26fa: nop qword ptr [rax+rax*1+0x0]
0x270f: nop 
0x27fb: nop qword ptr [rax+rax*1+0x0]
0x2815: nop qword ptr [rax]
0x2824: nop qword ptr [rax+0x0]
0x289d: nop qword ptr [rax]
0x28fa: nop qword ptr [rax+rax*1+0x0]
0x2de0: mov edi,0x1
0x2de5: jmp 0x2920
0x2e36: nop qword ptr [rax+rax*1+0x0]
0x2ef7: nop qword ptr [rax+rax*1+0x0]
0x2f55: mov r8,rbp
0x2f58: mov rdx,rbx
0x2f5b: mov rcx,rax
0x2f5e: pop rbx
0x2f5f: pop rbp
0x2f60: pop r12
0x2f62: xor esi,esi
0x2f64: xor edi,edi
0x2f66: xor eax,eax
0x2f68: jmp 0x1a00
0x2f6d: nop qword ptr [rax]
0x2f90: push r15
0x2f92: push r14
0x2f94: mov r14,rdi
0x2f97: push r13
0x2f99: push r12
0x2f9b: xor edi,edi
0x2f9d: push rbp
0x2f9e: push rbx
0x2f9f: mov rbp,rsi
0x2fa2: lea rsi,[rip+0x4230]
0x2fa9: mov r12,rdx
0x2fac: mov edx,0x5
0x2fb1: sub rsp,0x8
0x2fb5: mov rbx,qword ptr [rip+0x207124]
0x2fbc: call 0x1800
0x2fc1: mov rdi,rax
0x2fc4: mov rsi,rbx
0x2fc7: call 0x1910
0x2fcc: mov r15,qword ptr [r14]
0x2fcf: test r15,r15
0x2fd2: jz 0x3068
0x2fd8: xor r13d,r13d
0x2fdb: xor ebx,ebx
0x2fdd: jmp 0x3018
0x2fdf: nop 
0x2fe0: mov rdi,r15
0x2fe3: add rbx,0x1
0x2fe7: mov r13,rbp
0x2fea: call 0x5410
0x2fef: mov rdi,qword ptr [rip+0x2070ea]
0x2ff6: lea rdx,[rip+0x41f1]
0x2ffd: mov rcx,rax
0x3000: mov esi,0x1
0x3005: xor eax,eax
0x3007: add rbp,r12
0x300a: call 0x1a70
0x300f: mov r15,qword ptr [r14+rbx*8+0x0]
0x3013: test r15,r15
0x3016: jz 0x3068
0x3018: test rbx,rbx
0x301b: jz 0x2fe0
0x301d: mov rdx,r12
0x3020: mov rsi,rbp
0x3023: mov rdi,r13
0x3026: call 0x1900
0x302b: test eax,eax
0x302d: jnz 0x2fe0
0x302f: mov rdi,r15
0x3032: add rbx,0x1
0x3036: add rbp,r12
0x3039: call 0x5410
0x303e: mov rdi,qword ptr [rip+0x20709b]
0x3045: lea rdx,[rip+0x41aa]
0x304c: mov rcx,rax
0x304f: mov esi,0x1
0x3054: xor eax,eax
0x3056: call 0x1a70
0x305b: mov r15,qword ptr [r14+rbx*8+0x0]
0x305f: test r15,r15
0x3062: jnz 0x3018
0x3064: nop qword ptr [rax+0x0]
0x3068: mov rdi,qword ptr [rip+0x207071]
0x306f: mov rax,qword ptr [rdi+0x28]
0x3073: cmp rax,qword ptr [rdi+0x30]
0x3077: jnb 0x3098
0x3079: lea rdx,[rax+0x1]
0x307d: mov qword ptr [rdi+0x28],rdx
0x3081: mov [rax],0xa
0x3084: add rsp,0x8
0x3088: pop rbx
0x3089: pop rbp
0x308a: pop r12
0x308c: pop r13
0x308e: pop r14
0x3090: pop r15
0x3092: ret
0x3093: nop qword ptr [rax+rax*1+0x0]
0x3098: add rsp,0x8
0x309c: mov esi,0xa
0x30a1: pop rbx
0x30a2: pop rbp
0x30a3: pop r12
0x30a5: pop r13
0x30a7: pop r14
0x30a9: pop r15
0x30ab: jmp 0x1880
0x3103: mov rdx,r15
0x3106: mov rsi,rbp
0x3109: mov rdi,rbx
0x310c: call 0x2f90
0x3111: call r13
0x3114: mov rax,0xffffffff
0x311b: jmp 0x30e6
0x3120: push r14
0x3122: push r13
0x3124: push r12
0x3126: push rbp
0x3127: push rbx
0x3128: mov r14,qword ptr [rsi]
0x312b: test r14,r14
0x312e: jz 0x3161
0x3130: mov r12,rcx
0x3133: mov r13,rdi
0x3136: mov rbp,rdx
0x3139: lea rbx,[rsi+0x8]
0x313d: jmp 0x314f
0x313f: nop 
0x3140: mov r14,qword ptr [rbx]
0x3143: add rbp,r12
0x3146: add rbx,0x8
0x314a: test r14,r14
0x314d: jz 0x3161
0x314f: mov rdx,r12
0x3152: mov rsi,rbp
0x3155: mov rdi,r13
0x3158: call 0x1900
0x315d: test eax,eax
0x315f: jnz 0x3140
0x3161: pop rbx
0x3162: mov rax,r14
0x3165: pop rbp
0x3166: pop r12
0x3168: pop r13
0x316a: pop r14
0x316c: ret
0x3170: mov qword ptr [rip+0x206fb1],rdi
0x3177: ret
0x3180: mov byte ptr [rip+0x206f99],dil
0x3187: ret
0x3190: push rbp
0x3191: push rbx
0x3192: sub rsp,0x8
0x3196: mov rdi,qword ptr [rip+0x206f0b]
0x319d: call 0x6410
0x31a2: test eax,eax
0x31a4: jz 0x31bc
0x31a6: call 0x1790
0x31ab: cmp [rip+0x206f6e],0x0
0x31b2: mov rbx,rax
0x31b5: jz 0x31d3
0x31b7: cmp [rax],0x20
0x31ba: jnz 0x31d3
0x31bc: mov rdi,qword ptr [rip+0x206f1d]
0x31c3: call 0x6410
0x31c8: test eax,eax
0x31ca: jnz 0x3212
0x31cc: add rsp,0x8
0x31d0: pop rbx
0x31d1: pop rbp
0x31d2: ret
0x31d3: lea rsi,[rip+0x4021]
0x31da: xor edi,edi
0x31dc: mov edx,0x5
0x31e1: call 0x1800
0x31e6: mov rdi,qword ptr [rip+0x206f3b]
0x31ed: mov rbp,rax
0x31f0: test rdi,rdi
0x31f3: jz 0x321d
0x31f5: call 0x5210
0x31fa: mov esi,dword ptr [rbx]
0x31fc: lea rdx,[rip+0x3541]
0x3203: mov rcx,rax
0x3206: mov r8,rbp
0x3209: xor edi,edi
0x320b: xor eax,eax
0x320d: call 0x1a00
0x3212: mov edi,dword ptr [rip+0x206e08]
0x3218: call 0x17b0
0x321d: mov esi,dword ptr [rbx]
0x321f: lea rdx,[rip+0x3fd2]
0x3226: mov rcx,rax
0x3229: xor edi,edi
0x322b: xor eax,eax
0x322d: call 0x1a00
0x3232: jmp 0x3212
0x326b: nop qword ptr [rax+rax*1+0x0]
0x33c2: nop qword ptr [rax+rax*1+0x0]
0x33d1: nop qword ptr [rax+0x0]
0x3428: nop qword ptr [rax+rax*1+0x0]
0x344f: nop 
0x3457: nop qword ptr [rax+rax*1+0x0]
0x3469: nop qword ptr [rax+0x0]
0x34ba: nop qword ptr [rax+rax*1+0x0]
0x359f: nop 
0x35db: nop qword ptr [rax+rax*1+0x0]
0x3600: mov edx,0xa
0x3605: jmp 0x34f0
0x3610: mov rdi,qword ptr [rdi+0x10]
0x3614: jmp 0x1770
0x363e: nop 
0x3662: nop qword ptr [rax+rax*1+0x0]
0x36b8: nop qword ptr [rax+rax*1+0x0]
0x36f9: call 0x1830
0x37dc: nop qword ptr [rax+0x0]
0x382d: nop qword ptr [rax]
0x3b47: nop qword ptr [rax+rax*1+0x0]
0x3b7e: nop 
0x3ba1: nop qword ptr [rax+0x0]
0x3be2: nop qword ptr [rax+rax*1+0x0]
0x3bf4: nop qword ptr [rax+0x0]
0x3c98: nop qword ptr [rax+rax*1+0x0]
0x3cc1: nop qword ptr [rax+0x0]
0x3cd7: nop qword ptr [rax+rax*1+0x0]
0x3cef: nop 
0x3d1e: nop 
0x3d2d: nop qword ptr [rax]
0x3d3f: nop 
0x3d4f: nop 
0x3d5f: nop 
0x3d6f: nop 
0x3d7f: nop 
0x3dec: nop qword ptr [rax+0x0]
0x3e0c: nop qword ptr [rax+0x0]
0x3e2f: nop 
0x3e42: nop qword ptr [rax+rax*1+0x0]
0x3e5a: nop qword ptr [rax+rax*1+0x0]
0x3e6a: nop qword ptr [rax+rax*1+0x0]
0x3f0b: nop qword ptr [rax+rax*1+0x0]
0x3f25: nop qword ptr [rax]
0x3f38: nop qword ptr [rax+rax*1+0x0]
0x3f53: nop qword ptr [rax+rax*1+0x0]
0x3f82: nop qword ptr [rax+rax*1+0x0]
0x3f92: nop qword ptr [rax+rax*1+0x0]
0x3faa: nop qword ptr [rax+rax*1+0x0]
0x3fba: nop qword ptr [rax+rax*1+0x0]
0x3fc8: nop qword ptr [rax+rax*1+0x0]
0x3fef: nop 
0x402d: cmp [rsp+0xe],0x0
0x4032: jnz 0x4a2d
0x4038: test r13,r13
0x403b: setz al
0x403e: cmp [rsp+0x50],0x0
0x4044: setnz dl
0x4047: and al,dl
0x4049: jz 0x4a6c
0x404f: mov r13,qword ptr [rsp+0x50]
0x4089: nop qword ptr [rax+0x0]
0x40d2: nop qword ptr [rax+rax*1+0x0]
0x4111: nop qword ptr [rax+0x0]
0x4132: nop qword ptr [rax+rax*1+0x0]
0x4298: nop qword ptr [rax+rax*1+0x0]
0x43ab: nop qword ptr [rax+rax*1+0x0]
0x43ce: nop 
0x4495: nop qword ptr [rax]
0x454d: nop qword ptr [rax]
0x4756: nop qword ptr [rax+rax*1+0x0]
0x47e9: nop qword ptr [rax+0x0]
0x493d: nop qword ptr [rax]
0x4a2d: sub rsp,0x8
0x4a31: mov r8d,0x5
0x4a37: mov rcx,r11
0x4a3a: push qword ptr [rsp+0x68]
0x4a3e: push qword ptr [rsp+0x78]
0x4a42: mov rdi,r14
0x4a45: push qword ptr [rsp+0x38]
0x4a49: mov r9d,dword ptr [rsp+0x98]
0x4a51: mov rdx,qword ptr [rsp+0x30]
0x4a56: mov rsi,qword ptr [rsp+0x70]
0x4a5b: call 0x3890
0x4a60: add rsp,0x20
0x4a64: mov r15,rax
0x4a67: jmp 0x4469
0x4a6c: movzx eax,byte ptr [rsp+0x7c]
0x4a71: jmp 0x498c
0x4a83: call 0x1830
0x4c4b: nop qword ptr [rax+rax*1+0x0]
0x4c80: push r12
0x4c82: push rbp
0x4c83: push rbx
0x4c84: mov rbx,rdi
0x4c87: call 0x1790
0x4c8c: mov r12d,dword ptr [rax]
0x4c8f: mov rbp,rax
0x4c92: lea rax,[rip+0x2055a7]
0x4c99: test rbx,rbx
0x4c9c: mov esi,0x38
0x4ca1: cmove rbx,rax
0x4ca5: mov rdi,rbx
0x4ca8: call 0x5c50
0x4cad: mov dword ptr [rbp+0x0],r12d
0x4cb1: pop rbx
0x4cb2: pop rbp
0x4cb3: pop r12
0x4cb5: ret
0x4cc0: lea rax,[rip+0x205579]
0x4cc7: test rdi,rdi
0x4cca: cmove rdi,rax
0x4cce: mov eax,dword ptr [rdi]
0x4cd0: ret
0x4ce0: lea rax,[rip+0x205559]
0x4ce7: test rdi,rdi
0x4cea: cmove rdi,rax
0x4cee: mov dword ptr [rdi],esi
0x4cf0: ret
0x4d00: lea rax,[rip+0x205539]
0x4d07: test rdi,rdi
0x4d0a: mov ecx,esi
0x4d0c: cmove rdi,rax
0x4d10: mov eax,esi
0x4d12: and ecx,0x1f
0x4d15: shr al,0x5
0x4d18: movzx eax,al
0x4d1b: lea rdi,[rdi+rax*4+0x8]
0x4d20: mov esi,dword ptr [rdi]
0x4d22: mov eax,esi
0x4d24: shr eax,cl
0x4d26: xor edx,eax
0x4d28: and eax,0x1
0x4d2b: and edx,0x1
0x4d2e: shl edx,cl
0x4d30: xor edx,esi
0x4d32: mov dword ptr [rdi],edx
0x4d34: ret
0x4d40: lea rax,[rip+0x2054f9]
0x4d47: test rdi,rdi
0x4d4a: cmove rdi,rax
0x4d4e: mov eax,dword ptr [rdi+0x4]
0x4d51: mov dword ptr [rdi+0x4],esi
0x4d54: ret
0x4d60: lea rax,[rip+0x2054d9]
0x4d67: test rdi,rdi
0x4d6a: cmove rdi,rax
0x4d6e: test rsi,rsi
0x4d71: mov [rdi],0xa
0x4d77: jz 0x4d87
0x4d79: test rdx,rdx
0x4d7c: jz 0x4d87
0x4d7e: mov qword ptr [rdi+0x28],rsi
0x4d82: mov qword ptr [rdi+0x30],rdx
0x4d86: ret
0x4d87: sub rsp,0x8
0x4d8b: call 0x1780
0x4d90: push r15
0x4d92: push r14
0x4d94: lea rax,[rip+0x2054a5]
0x4d9b: push r13
0x4d9d: push r12
0x4d9f: mov r13,rdi
0x4da2: push rbp
0x4da3: push rbx
0x4da4: mov rbx,r8
0x4da7: mov r14,rsi
0x4daa: mov r15,rdx
0x4dad: sub rsp,0x18
0x4db1: test r8,r8
0x4db4: cmove rbx,rax
0x4db8: mov qword ptr [rsp+0x8],rcx
0x4dbd: call 0x1790
0x4dc2: mov r12d,dword ptr [rax]
0x4dc5: mov rbp,rax
0x4dc8: lea rax,[rbx+0x8]
0x4dcc: sub rsp,0x8
0x4dd0: mov r9d,dword ptr [rbx+0x4]
0x4dd4: push qword ptr [rbx+0x30]
0x4dd7: mov r8d,dword ptr [rbx]
0x4dda: push qword ptr [rbx+0x28]
0x4ddd: mov rdx,r15
0x4de0: push rax
0x4de1: mov rcx,qword ptr [rsp+0x28]
0x4de6: mov rsi,r14
0x4de9: mov rdi,r13
0x4dec: call 0x3890
0x4df1: mov dword ptr [rbp+0x0],r12d
0x4df5: add rsp,0x38
0x4df9: pop rbx
0x4dfa: pop rbp
0x4dfb: pop r12
0x4dfd: pop r13
0x4dff: pop r14
0x4e01: pop r15
0x4e03: ret
0x4e10: push r15
0x4e12: push r14
0x4e14: lea rax,[rip+0x205425]
0x4e1b: push r13
0x4e1d: push r12
0x4e1f: mov r12,rdx
0x4e22: push rbp
0x4e23: push rbx
0x4e24: mov rbx,rcx
0x4e27: mov r14,rdi
0x4e2a: mov r15,rsi
0x4e2d: sub rsp,0x38
0x4e31: test rcx,rcx
0x4e34: cmove rbx,rax
0x4e38: xor ebp,ebp
0x4e3a: call 0x1790
0x4e3f: test r12,r12
0x4e42: mov r13,rax
0x4e45: mov eax,dword ptr [rax]
0x4e47: setz bpl
0x4e4b: or ebp,dword ptr [rbx+0x4]
0x4e4e: lea r10,[rbx+0x8]
0x4e52: sub rsp,0x8
0x4e56: mov r8d,dword ptr [rbx]
0x4e59: mov rcx,r15
0x4e5c: mov dword ptr [rsp+0x14],eax
0x4e60: push qword ptr [rbx+0x30]
0x4e63: mov rdx,r14
0x4e66: push qword ptr [rbx+0x28]
0x4e69: push r10
0x4e6b: xor esi,esi
0x4e6d: mov r9d,ebp
0x4e70: xor edi,edi
0x4e72: mov qword ptr [rsp+0x40],r10
0x4e77: call 0x3890
0x4e7c: lea rsi,[rax+0x1]
0x4e80: mov qword ptr [rsp+0x48],rax
0x4e85: add rsp,0x20
0x4e89: mov rdi,rsi
0x4e8c: mov qword ptr [rsp+0x18],rsi
0x4e91: call 0x5a50
0x4e96: mov qword ptr [rsp+0x10],rax
0x4e9b: sub rsp,0x8
0x4e9f: push qword ptr [rbx+0x30]
0x4ea2: push qword ptr [rbx+0x28]
0x4ea5: mov r10,qword ptr [rsp+0x38]
0x4eaa: mov r9d,ebp
0x4ead: mov r8d,dword ptr [rbx]
0x4eb0: mov rcx,r15
0x4eb3: mov rdx,r14
0x4eb6: mov rdi,rax
0x4eb9: push r10
0x4ebb: mov rsi,qword ptr [rsp+0x38]
0x4ec0: call 0x3890
0x4ec5: mov eax,dword ptr [rsp+0x2c]
0x4ec9: add rsp,0x20
0x4ecd: test r12,r12
0x4ed0: mov dword ptr [r13+0x0],eax
0x4ed4: jz 0x4edf
0x4ed6: mov r11,qword ptr [rsp+0x28]
0x4edb: mov qword ptr [r12],r11
0x4edf: mov rax,qword ptr [rsp+0x10]
0x4ee4: add rsp,0x38
0x4ee8: pop rbx
0x4ee9: pop rbp
0x4eea: pop r12
0x4eec: pop r13
0x4eee: pop r14
0x4ef0: pop r15
0x4ef2: ret
0x4f00: mov rcx,rdx
0x4f03: xor edx,edx
0x4f05: jmp 0x4e10
0x4f10: mov eax,dword ptr [rip+0x205162]
0x4f16: push r12
0x4f18: mov r12,qword ptr [rip+0x205161]
0x4f1f: push rbp
0x4f20: push rbx
0x4f21: cmp eax,0x1
0x4f24: jle 0x4f51
0x4f26: sub eax,0x2
0x4f29: lea rbx,[r12+0x18]
0x4f2e: shl rax,0x4
0x4f32: lea rbp,[r12+rax*1+0x28]
0x4f37: nop qword ptr [rax+rax*1+0x0]
0x4f40: mov rdi,qword ptr [rbx]
0x4f43: add rbx,0x10
0x4f47: call 0x1770
0x4f4c: cmp rbx,rbp
0x4f4f: jnz 0x4f40
0x4f51: mov rdi,qword ptr [r12+0x8]
0x4f56: lea rbx,[rip+0x2051e3]
0x4f5d: cmp rdi,rbx
0x4f60: jz 0x4f79
0x4f62: call 0x1770
0x4f67: mov [rip+0x20511e],0x100
0x4f72: mov qword ptr [rip+0x20511f],rbx
0x4f79: lea rbx,[rip+0x205110]
0x4f80: cmp r12,rbx
0x4f83: jz 0x4f94
0x4f85: mov rdi,r12
0x4f88: call 0x1770
0x4f8d: mov qword ptr [rip+0x2050ec],rbx
0x4f94: pop rbx
0x4f95: mov [rip+0x2050d9],0x1
0x4f9f: pop rbp
0x4fa0: pop r12
0x4fa2: ret
0x4fb0: lea rcx,[rip+0x205289]
0x4fb7: mov rdx,0xffffffff
0x4fbe: jmp 0x4ad0
0x4fd0: lea rcx,[rip+0x205269]
0x4fd7: jmp 0x4ad0
0x4fe0: lea rcx,[rip+0x205259]
0x4fe7: mov rsi,rdi
0x4fea: mov rdx,0xffffffff
0x4ff1: xor edi,edi
0x4ff3: jmp 0x4ad0
0x5000: lea rcx,[rip+0x205239]
0x5007: mov rdx,rsi
0x500a: mov rsi,rdi
0x500d: xor edi,edi
0x500f: jmp 0x4ad0
0x509f: add rsp,0x48
0x50a3: ret
0x50b0: sub rsp,0x48
0x50b4: mov rax,rdx
0x50b7: mov rdx,rcx
0x50ba: mov rcx,0x28
0x50c3: mov qword ptr [rsp+0x38],rcx
0x50c8: xor ecx,ecx
0x50ca: cmp esi,0xa
0x50cd: jz 0x5130
0x50cf: mov dword ptr [rsp],esi
0x50d2: mov rcx,rsp
0x50d5: mov rsi,rax
0x50d8: mov [rsp+0x4],0x0
0x50e1: mov [rsp+0xc],0x0
0x50ea: mov [rsp+0x14],0x0
0x50f3: mov [rsp+0x1c],0x0
0x50fc: mov [rsp+0x24],0x0
0x5105: mov [rsp+0x2c],0x0
0x510e: mov [rsp+0x34],0x0
0x5116: call 0x4ad0
0x511b: mov rdx,qword ptr [rsp+0x38]
0x5120: xor rdx,0x28
0x5129: jnz 0x5135
0x512b: add rsp,0x48
0x512f: ret
0x5130: call 0x1780
0x5135: call 0x1830
0x5150: mov rcx,rdx
0x5153: mov rdx,rsi
0x5156: mov esi,edi
0x5158: xor edi,edi
0x515a: jmp 0x50b0
0x5160: sub rsp,0x48
0x5164: mov ecx,edx
0x5166: mov rax,0x28
0x516f: mov qword ptr [rsp+0x38],rax
0x5174: xor eax,eax
0x5176: mov rax,qword ptr [rip+0x2050f3]
0x517d: mov r8,rsp
0x5180: and ecx,0x1f
0x5183: movdqa xmm0,[rip+0x2050b5]
0x518b: mov qword ptr [rsp+0x30],rax
0x5190: mov eax,edx
0x5192: movaps [rsp],xmm0
0x5196: shr al,0x5
0x5199: movzx eax,al
0x519c: lea r9,[r8+rax*4+0x8]
0x51a1: movdqa xmm0,[rip+0x2050a7]
0x51a9: movaps [rsp+0x10],xmm0
0x51ae: movdqa xmm0,[rip+0x2050aa]
0x51b6: movaps [rsp+0x20],xmm0
0x51bb: mov edx,dword ptr [r9]
0x51be: mov eax,edx
0x51c0: shr eax,cl
0x51c2: not eax
0x51c4: and eax,0x1
0x51c7: shl eax,cl
0x51c9: mov rcx,r8
0x51cc: xor eax,edx
0x51ce: mov rdx,rsi
0x51d1: mov rsi,rdi
0x51d4: mov dword ptr [r9],eax
0x51d7: xor edi,edi
0x51d9: call 0x4ad0
0x51de: mov rsi,qword ptr [rsp+0x38]
0x51e3: xor rsi,0x28
0x51ec: jnz 0x51f3
0x51ee: add rsp,0x48
0x51f2: ret
0x51f3: call 0x1830
0x5200: movsx edx,sil
0x5204: mov rsi,0xffffffff
0x520b: jmp 0x5160
0x5210: mov edx,0x3a
0x5215: mov rsi,0xffffffff
0x521c: jmp 0x5160
0x5230: mov edx,0x3a
0x5235: jmp 0x5160
0x52bf: add rsp,0x48
0x52c3: ret
0x52c4: call 0x1780
0x52d0: sub rsp,0x48
0x52d4: mov r9,rcx
0x52d7: mov rcx,qword ptr [rip+0x204f92]
0x52de: movdqa xmm0,[rip+0x204f5a]
0x52e6: mov rax,0x28
0x52ef: mov qword ptr [rsp+0x38],rax
0x52f4: xor eax,eax
0x52f6: movaps [rsp],xmm0
0x52fa: test rsi,rsi
0x52fd: mov qword ptr [rsp+0x30],rcx
0x5302: mov [rsp],0xa
0x5309: movdqa xmm0,[rip+0x204f3f]
0x5311: movaps [rsp+0x10],xmm0
0x5316: movdqa xmm0,[rip+0x204f42]
0x531e: movaps [rsp+0x20],xmm0
0x5323: jz 0x5357
0x5325: test rdx,rdx
0x5328: jz 0x5357
0x532a: mov qword ptr [rsp+0x28],rsi
0x532f: mov qword ptr [rsp+0x30],rdx
0x5334: mov rcx,rsp
0x5337: mov rdx,r8
0x533a: mov rsi,r9
0x533d: call 0x4ad0
0x5342: mov rdi,qword ptr [rsp+0x38]
0x5347: xor rdi,0x28
0x5350: jnz 0x535c
0x5352: add rsp,0x48
0x5356: ret
0x5357: call 0x1780
0x535c: call 0x1830
0x5370: mov r8,0xffffffff
0x5377: jmp 0x52d0
0x5380: mov rcx,rdx
0x5383: mov r8,0xffffffff
0x538a: mov rdx,rsi
0x538d: mov rsi,rdi
0x5390: xor edi,edi
0x5392: jmp 0x52d0
0x53a0: mov r8,rcx
0x53a3: mov rcx,rdx
0x53a6: mov rdx,rsi
0x53a9: mov rsi,rdi
0x53ac: xor edi,edi
0x53ae: jmp 0x52d0
0x53c0: lea rcx,[rip+0x204c79]
0x53c7: jmp 0x4ad0
0x53d0: lea rcx,[rip+0x204c69]
0x53d7: mov rdx,rsi
0x53da: mov rsi,rdi
0x53dd: xor edi,edi
0x53df: jmp 0x4ad0
0x54d6: nop qword ptr [rax+rax*1+0x0]
0x5565: nop qword ptr [rax]
0x5568: mov r8,rcx
0x556b: mov rcx,rdx
0x556e: lea rdx,[rip+0x21df]
0x5575: mov esi,0x1
0x557a: xor eax,eax
0x557c: call 0x1a70
0x5581: jmp 0x546c
0x5586: nop qword ptr [rax+rax*1+0x0]
0x55e5: nop qword ptr [rax]
0x5621: nop qword ptr [rax+0x0]
0x5668: nop qword ptr [rax+rax*1+0x0]
0x56b7: nop qword ptr [rax+rax*1+0x0]
0x5714: nop qword ptr [rax+0x0]
0x5742: nop qword ptr [rax+rax*1+0x0]
0x57f6: nop qword ptr [rax+rax*1+0x0]
0x5850: xor r9d,r9d
0x5853: cmp [r8],0x0
0x5857: jz 0x586b
0x5859: nop qword ptr [rax+0x0]
0x5860: add r9,0x1
0x5864: cmp [r8+r9*8+0x0],0x0
0x5869: jnz 0x5860
0x586b: jmp 0x5430
0x5870: sub rsp,0x68
0x5874: mov r10,r8
0x5877: xor r9d,r9d
0x587a: mov rax,0x28
0x5883: mov qword ptr [rsp+0x58],rax
0x5888: xor eax,eax
0x588a: mov r8,rsp
0x588d: nop qword ptr [rax]
0x5890: mov eax,dword ptr [r10]
0x5893: cmp eax,0x2f
0x5896: jnbe 0x58da
0x5898: mov r11d,eax
0x589b: add r11,qword ptr [r10+0x10]
0x589f: add eax,0x8
0x58a2: mov dword ptr [r10],eax
0x58a5: mov rax,qword ptr [r11]
0x58a8: test rax,rax
0x58ab: mov qword ptr [r8+r9*8+0x0],rax
0x58af: jz 0x58bb
0x58b1: add r9,0x1
0x58b5: cmp r9,0xa
0x58b9: jnz 0x5890
0x58bb: call 0x5430
0x58c0: mov rax,qword ptr [rsp+0x58]
0x58c5: xor rax,0x28
0x58ce: jnz 0x58d5
0x58d0: add rsp,0x68
0x58d4: ret
0x58d5: call 0x1830
0x58da: mov r11,qword ptr [r10+0x8]
0x58de: lea rax,[r11+0x8]
0x58e2: mov qword ptr [r10+0x8],rax
0x58e6: jmp 0x58a5
0x59b0: call 0x1830
0x59bc: mov rax,rbx
0x59bf: add rbx,0x8
0x59c3: jmp 0x5976
0x59d0: push rbx
0x59d1: lea rsi,[rip+0x1dca]
0x59d8: mov edx,0x5
0x59dd: xor edi,edi
0x59df: call 0x1800
0x59e4: lea rdx,[rip+0x1dcc]
0x59eb: mov rsi,rax
0x59ee: mov edi,0x1
0x59f3: xor eax,eax
0x59f5: call 0x19f0
0x59fa: lea rsi,[rip+0x1dcc]
0x5a01: mov edx,0x5
0x5a06: xor edi,edi
0x5a08: call 0x1800
0x5a0d: lea rcx,[rip+0x15a4]
0x5a14: lea rdx,[rip+0xdb1]
0x5a1b: mov rsi,rax
0x5a1e: mov edi,0x1
0x5a23: xor eax,eax
0x5a25: call 0x19f0
0x5a2a: mov rbx,qword ptr [rip+0x204677]
0x5a31: lea rsi,[rip+0x1fc8]
0x5a38: xor edi,edi
0x5a3a: mov edx,0x5
0x5a3f: call 0x1800
0x5a44: mov rsi,rbx
0x5a47: mov rdi,rax
0x5a4a: pop rbx
0x5a4b: jmp 0x1910
0x5a70: mov rax,rdi
0x5a73: mul rsi
0x5a76: mov rdi,rax
0x5a79: seto al
0x5a7c: test rdi,rdi
0x5a7f: js 0x5a8b
0x5a81: movzx eax,al
0x5a84: test rax,rax
0x5a87: jnz 0x5a8b
0x5a89: jmp 0x5a50
0x5a8b: sub rsp,0x8
0x5a8f: call 0x5ca0
0x5ad2: nop qword ptr [rax+rax*1+0x0]
0x5af0: mov rax,rsi
0x5af3: mul rdx
0x5af6: mov rsi,rax
0x5af9: seto al
0x5afc: test rsi,rsi
0x5aff: js 0x5b0b
0x5b01: movzx eax,al
0x5b04: test rax,rax
0x5b07: jnz 0x5b0b
0x5b09: jmp 0x5ab0
0x5b0b: sub rsp,0x8
0x5b0f: call 0x5ca0
0x5b20: test rdi,rdi
0x5b23: mov r9,rdx
0x5b26: mov rcx,qword ptr [rsi]
0x5b29: jz 0x5b60
0x5b2b: xor edx,edx
0x5b2d: mov rax,0x6148914691236517204
0x5b37: div r9
0x5b3a: cmp rax,rcx
0x5b3d: jbe 0x5b7b
0x5b3f: mov rax,rcx
0x5b42: shr rax,0x1
0x5b45: lea rcx,[rax+rcx*1+0x1]
0x5b4a: mov qword ptr [rsi],rcx
0x5b4d: imul rcx,r9
0x5b51: mov rsi,rcx
0x5b54: jmp 0x5ab0
0x5b59: nop qword ptr [rax+0x0]
0x5b60: test rcx,rcx
0x5b63: jz 0x5b88
0x5b65: mov rax,rcx
0x5b68: mul r9
0x5b6b: seto dl
0x5b6e: test rax,rax
0x5b71: movzx edx,dl
0x5b74: js 0x5b7b
0x5b76: test rdx,rdx
0x5b79: jz 0x5b4a
0x5b7b: sub rsp,0x8
0x5b7f: call 0x5ca0
0x5b84: nop qword ptr [rax+0x0]
0x5b88: xor edx,edx
0x5b8a: mov eax,0x80
0x5b8f: xor r8d,r8d
0x5b92: div r9
0x5b95: test rax,rax
0x5b98: setz r8b
0x5b9c: lea rcx,[r8+rax*1+0x0]
0x5ba0: jmp 0x5b65
0x5bdd: nop qword ptr [rax]
0x5c00: push rbx
0x5c01: mov rbx,rdi
0x5c04: call 0x5a50
0x5c09: mov rdx,rbx
0x5c0c: xor esi,esi
0x5c0e: mov rdi,rax
0x5c11: pop rbx
0x5c12: jmp 0x18c0
0x5c20: mov rax,rdi
0x5c23: sub rsp,0x8
0x5c27: mul rsi
0x5c2a: seto dl
0x5c2d: test rax,rax
0x5c30: js 0x5c49
0x5c32: movzx edx,dl
0x5c35: test rdx,rdx
0x5c38: jnz 0x5c49
0x5c3a: call 0x1920
0x5c3f: test rax,rax
0x5c42: jz 0x5c49
0x5c44: add rsp,0x8
0x5c48: ret
0x5c49: call 0x5ca0
0x5c50: push rbp
0x5c51: push rbx
0x5c52: mov rbp,rdi
0x5c55: mov rdi,rsi
0x5c58: mov rbx,rsi
0x5c5b: sub rsp,0x8
0x5c5f: call 0x5a50
0x5c64: add rsp,0x8
0x5c68: mov rdx,rbx
0x5c6b: mov rsi,rbp
0x5c6e: pop rbx
0x5c6f: pop rbp
0x5c70: mov rdi,rax
0x5c73: jmp 0x1950
0x5c80: push rbx
0x5c81: mov rbx,rdi
0x5c84: call 0x1820
0x5c89: mov rdi,rbx
0x5c8c: lea rsi,[rax+0x1]
0x5c90: pop rbx
0x5c91: jmp 0x5c50
0x5cd0: call 0x1780
0x5d19: lea rsi,[rip+0x1dc0]
0x5d20: mov edx,0x5
0x5d25: xor edi,edi
0x5d27: call 0x1800
0x5d2c: xor esi,esi
0x5d2e: mov rdx,rax
0x5d31: xor edi,edi
0x5d33: xor eax,eax
0x5d35: call 0x1a00
0x5d3a: mov rcx,r13
0x5d3d: mov rdx,rbp
0x5d40: mov esi,0x8
0x5d45: mov edi,0x1
0x5d4a: call 0x50b0
0x5d4f: mov rcx,r12
0x5d52: mov rdx,rbx
0x5d55: mov esi,0x8
0x5d5a: xor edi,edi
0x5d5c: mov rbp,rax
0x5d5f: call 0x50b0
0x5d64: lea rsi,[rip+0x1da5]
0x5d6b: mov rbx,rax
0x5d6e: mov edx,0x5
0x5d73: xor edi,edi
0x5d75: call 0x1800
0x5d7a: mov r8,rbp
0x5d7d: mov rcx,rbx
0x5d80: mov edi,dword ptr [rip+0x20429a]
0x5d86: pop rbx
0x5d87: pop rbp
0x5d88: pop r12
0x5d8a: pop r13
0x5d8c: pop r14
0x5d8e: mov rdx,rax
0x5d91: xor esi,esi
0x5d93: xor eax,eax
0x5d95: jmp 0x1a00
0x5df0: push r14
0x5df2: push r13
0x5df4: mov r14,rcx
0x5df7: push r12
0x5df9: push rbp
0x5dfa: mov r12,rdx
0x5dfd: push rbx
0x5dfe: mov rbp,rdi
0x5e01: mov rbx,rsi
0x5e04: call 0x6640
0x5e09: mov r13d,eax
0x5e0c: call 0x1790
0x5e11: mov edi,dword ptr [rax]
0x5e13: test edi,edi
0x5e15: jz 0x5e2a
0x5e17: lea rdx,[rbx-0x1]
0x5e1b: lea r8,[r14-0x1]
0x5e1f: mov rcx,r12
0x5e22: mov rsi,rbp
0x5e25: call 0x5ce0
0x5e2a: pop rbx
0x5e2b: mov eax,r13d
0x5e2e: pop rbp
0x5e2f: pop r12
0x5e31: pop r13
0x5e33: pop r14
0x5e35: ret
0x5ea6: nop qword ptr [rax+rax*1+0x0]
0x5ee4: cmp eax,0x22
0x5ee7: mov ebp,0x1
0x5eec: jnz 0x5f18
0x5f01: nop qword ptr [rax+0x0]
0x5f12: nop qword ptr [rax+rax*1+0x0]
0x5f42: nop qword ptr [rax+rax*1+0x0]
0x5f4c: nop qword ptr [rax+0x0]
0x5feb: nop qword ptr [rax+rax*1+0x0]
0x611c: nop qword ptr [rax+0x0]
0x61a3: nop qword ptr [rax+rax*1+0x0]
0x61c5: lea rcx,[rip+0x1a8c]
0x61cc: lea rsi,[rip+0x1965]
0x61d3: lea rdi,[rip+0x197e]
0x61da: mov edx,0x54
0x61df: call 0x18b0
0x62a5: nop qword ptr [rax]
0x6303: nop qword ptr [rax+rax*1+0x0]
0x632f: nop 
0x63fe: call 0x1830
0x6410: push r12
0x6412: push rbp
0x6413: mov rbp,rdi
0x6416: push rbx
0x6417: call 0x17c0
0x641c: mov ebx,dword ptr [rbp+0x0]
0x641f: mov rdi,rbp
0x6422: mov r12,rax
0x6425: call 0x6260
0x642a: and ebx,0x20
0x642d: test ebx,ebx
0x642f: jnz 0x6448
0x6431: test eax,eax
0x6433: jz 0x643f
0x6435: test r12,r12
0x6438: mov eax,0xffffffff
0x643d: jz 0x6478
0x643f: pop rbx
0x6440: pop rbp
0x6441: pop r12
0x6443: ret
0x6444: nop qword ptr [rax+0x0]
0x6448: test eax,eax
0x644a: jnz 0x6468
0x644c: call 0x1790
0x6451: mov [rax],0x0
0x6457: mov eax,0xffffffff
0x645c: pop rbx
0x645d: pop rbp
0x645e: pop r12
0x6460: ret
0x6461: nop qword ptr [rax+0x0]
0x6468: pop rbx
0x6469: mov eax,0xffffffff
0x646e: pop rbp
0x646f: pop r12
0x6471: ret
0x6472: nop qword ptr [rax+rax*1+0x0]
0x6478: call 0x1790
0x647d: cmp [rax],0x9
0x6480: pop rbx
0x6481: pop rbp
0x6482: pop r12
0x6484: setnz al
0x6487: movzx eax,al
0x648a: neg eax
0x648c: ret
0x64b6: nop qword ptr [rax+rax*1+0x0]
0x64f4: nop qword ptr [rax+0x0]
0x6548: nop qword ptr [rax+rax*1+0x0]
0x6569: nop qword ptr [rax+0x0]
0x65fb: movzx r9d,byte ptr [rsp+0xf]
0x6601: movzx r8d,byte ptr [rsp+0x8]
0x6607: mov edx,eax
0x6609: mov byte ptr [r13+0x0],r9b
0x660d: mov byte ptr [r12],r8b
0x6622: nop qword ptr [rax+rax*1+0x0]
0x6640: push r12
0x6642: push rbp
0x6643: mov r12,rdx
0x6646: push rbx
0x6647: mov rbp,rdi
0x664a: mov rbx,rsi
0x664d: sub rsp,0x10
0x6651: cmp rsi,rcx
0x6654: jnz 0x666f
0x6656: mov rdx,rsi
0x6659: mov rsi,r12
0x665c: mov qword ptr [rsp+0x8],rcx
0x6661: call 0x1900
0x6666: test eax,eax
0x6668: mov rcx,qword ptr [rsp+0x8]
0x666d: jz 0x6688
0x666f: add rsp,0x10
0x6673: mov rdx,r12
0x6676: mov rsi,rbx
0x6679: mov rdi,rbp
0x667c: pop rbx
0x667d: pop rbp
0x667e: pop r12
0x6680: jmp 0x64d0
0x6685: nop qword ptr [rax]
0x6688: call 0x1790
0x668d: mov [rax],0x0
0x6693: add rsp,0x10
0x6697: xor eax,eax
0x6699: pop rbx
0x669a: pop rbp
0x669b: pop r12
0x669d: ret
0x66a0: push r15
0x66a2: push r14
0x66a4: mov r15,rdx
0x66a7: push r13
0x66a9: push r12
0x66ab: lea r12,[rip+0x2032fe]
0x66b2: push rbp
0x66b3: lea rbp,[rip+0x2032fe]
0x66ba: push rbx
0x66bb: mov r13d,edi
0x66be: mov r14,rsi
0x66c1: sub rbp,r12
0x66c4: sub rsp,0x8
0x66c8: sar rbp,0x3
0x66cc: call 0x1718
0x66d1: test rbp,rbp
0x66d4: jz 0x66f6
0x66d6: xor ebx,ebx
0x66d8: nop qword ptr [rax+rax*1+0x0]
0x66e0: mov rdx,r15
0x66e3: mov rsi,r14
0x66e6: mov edi,r13d
0x66e9: call qword ptr [r12+rbx*8+0x0]
0x66ed: add rbx,0x1
0x66f1: cmp rbp,rbx
0x66f4: jnz 0x66e0
0x66f6: add rsp,0x8
0x66fa: pop rbx
0x66fb: pop rbp
0x66fc: pop r12
0x66fe: pop r13
0x6700: pop r14
0x6702: pop r15
0x6704: ret
0x6730: sub rsp,0x8
0x6734: add rsp,0x8
0x6738: ret
