0x28c0: sub rsp,0x8
0x28c4: mov rax,qword ptr [rip+0x21a71d]
0x28cb: test rax,rax
0x28ce: jz 0x28d2
0x28d0: call rax
0x28d2: add rsp,0x8
0x28d6: ret
0x28f0: jmp qword ptr [rip+0x21a2ea]
0x28f6: push 0x0
0x2906: push 0x1
0x2910: jmp qword ptr [rip+0x21a2da]
0x2916: push 0x2
0x2920: jmp qword ptr [rip+0x21a2d2]
0x2926: push 0x3
0x2930: jmp qword ptr [rip+0x21a2ca]
0x2936: push 0x4
0x2946: push 0x5
0x2956: push 0x6
0x2960: jmp qword ptr [rip+0x21a2b2]
0x2966: push 0x7
0x2976: push 0x8
0x2980: jmp qword ptr [rip+0x21a2a2]
0x2986: push 0x9
0x2990: jmp qword ptr [rip+0x21a29a]
0x2996: push 0xa
0x29a0: jmp qword ptr [rip+0x21a292]
0x29a6: push 0xb
0x29b0: jmp qword ptr [rip+0x21a28a]
0x29b6: push 0xc
0x29c0: jmp qword ptr [rip+0x21a282]
0x29c6: push 0xd
0x29d0: jmp qword ptr [rip+0x21a27a]
0x29d6: push 0xe
0x29e0: jmp qword ptr [rip+0x21a272]
0x29e6: push 0xf
0x29f0: jmp qword ptr [rip+0x21a26a]
0x29f6: push 0x10
0x2a00: jmp qword ptr [rip+0x21a262]
0x2a06: push 0x11
0x2a10: jmp qword ptr [rip+0x21a25a]
0x2a16: push 0x12
0x2a20: jmp qword ptr [rip+0x21a252]
0x2a26: push 0x13
0x2a30: jmp qword ptr [rip+0x21a24a]
0x2a36: push 0x14
0x2a40: jmp qword ptr [rip+0x21a242]
0x2a46: push 0x15
0x2a56: push 0x16
0x2a60: jmp qword ptr [rip+0x21a232]
0x2a66: push 0x17
0x2a70: jmp qword ptr [rip+0x21a22a]
0x2a76: push 0x18
0x2a80: jmp qword ptr [rip+0x21a222]
0x2a86: push 0x19
0x2a90: jmp qword ptr [rip+0x21a21a]
0x2a96: push 0x1a
0x2aa6: push 0x1b
0x2ab0: jmp qword ptr [rip+0x21a20a]
0x2ab6: push 0x1c
0x2ac0: jmp qword ptr [rip+0x21a202]
0x2ac6: push 0x1d
0x2ad6: push 0x1e
0x2ae6: push 0x1f
0x2af6: push 0x20
0x2b00: jmp qword ptr [rip+0x21a1e2]
0x2b06: push 0x21
0x2b10: jmp qword ptr [rip+0x21a1da]
0x2b16: push 0x22
0x2b20: jmp qword ptr [rip+0x21a1d2]
0x2b26: push 0x23
0x2b36: push 0x24
0x2b40: jmp qword ptr [rip+0x21a1c2]
0x2b46: push 0x25
0x2b56: push 0x26
0x2b66: push 0x27
0x2b70: jmp qword ptr [rip+0x21a1aa]
0x2b76: push 0x28
0x2b80: jmp qword ptr [rip+0x21a1a2]
0x2b86: push 0x29
0x2b90: jmp qword ptr [rip+0x21a19a]
0x2b96: push 0x2a
0x2ba6: push 0x2b
0x2bb0: jmp qword ptr [rip+0x21a18a]
0x2bb6: push 0x2c
0x2bc0: jmp qword ptr [rip+0x21a182]
0x2bc6: push 0x2d
0x2bd0: jmp qword ptr [rip+0x21a17a]
0x2bd6: push 0x2e
0x2be0: jmp qword ptr [rip+0x21a172]
0x2be6: push 0x2f
0x2bf6: push 0x30
0x2c06: push 0x31
0x2c10: jmp qword ptr [rip+0x21a15a]
0x2c16: push 0x32
0x2c20: jmp qword ptr [rip+0x21a152]
0x2c26: push 0x33
0x2c30: jmp qword ptr [rip+0x21a14a]
0x2c36: push 0x34
0x2c40: jmp qword ptr [rip+0x21a142]
0x2c46: push 0x35
0x2c50: jmp qword ptr [rip+0x21a13a]
0x2c56: push 0x36
0x2c60: jmp qword ptr [rip+0x21a132]
0x2c66: push 0x37
0x2c70: jmp qword ptr [rip+0x21a12a]
0x2c76: push 0x38
0x2c80: jmp qword ptr [rip+0x21a122]
0x2c86: push 0x39
0x2c96: push 0x3a
0x2ca0: jmp qword ptr [rip+0x21a112]
0x2ca6: push 0x3b
0x2cb6: push 0x3c
0x2cc0: jmp qword ptr [rip+0x21a102]
0x2cc6: push 0x3d
0x2cd0: jmp qword ptr [rip+0x21a0fa]
0x2cd6: push 0x3e
0x2ce0: jmp qword ptr [rip+0x21a0f2]
0x2ce6: push 0x3f
0x2cf0: jmp qword ptr [rip+0x21a0ea]
0x2cf6: push 0x40
0x2d06: push 0x41
0x2d10: jmp qword ptr [rip+0x21a0da]
0x2d16: push 0x42
0x2d20: jmp qword ptr [rip+0x21a0d2]
0x2d26: push 0x43
0x2d30: jmp qword ptr [rip+0x21a0ca]
0x2d36: push 0x44
0x2d40: jmp qword ptr [rip+0x21a0c2]
0x2d46: push 0x45
0x2d50: jmp qword ptr [rip+0x21a0ba]
0x2d56: push 0x46
0x2d60: jmp qword ptr [rip+0x21a0b2]
0x2d66: push 0x47
0x2d76: push 0x48
0x2d86: push 0x49
0x2d90: jmp qword ptr [rip+0x21a09a]
0x2d96: push 0x4a
0x2da0: jmp qword ptr [rip+0x21a092]
0x2da6: push 0x4b
0x2db0: jmp qword ptr [rip+0x21a08a]
0x2db6: push 0x4c
0x2dc0: jmp qword ptr [rip+0x21a082]
0x2dc6: push 0x4d
0x2dd6: push 0x4e
0x2de0: jmp qword ptr [rip+0x21a072]
0x2de6: push 0x4f
0x2df6: push 0x50
0x2e00: jmp qword ptr [rip+0x21a062]
0x2e06: push 0x51
0x2e16: push 0x52
0x2e20: jmp qword ptr [rip+0x21a052]
0x2e26: push 0x53
0x2e30: jmp qword ptr [rip+0x21a04a]
0x2e36: push 0x54
0x2e40: jmp qword ptr [rip+0x21a042]
0x2e46: push 0x55
0x2e50: jmp qword ptr [rip+0x21a03a]
0x2e56: push 0x56
0x2e60: jmp qword ptr [rip+0x21a032]
0x2e66: push 0x57
0x2e70: jmp qword ptr [rip+0x21a02a]
0x2e76: push 0x58
0x2e80: jmp qword ptr [rip+0x21a022]
0x2e86: push 0x59
0x2e96: push 0x5a
0x2ea0: jmp qword ptr [rip+0x21a012]
0x2ea6: push 0x5b
0x2eb0: jmp qword ptr [rip+0x21a00a]
0x2eb6: push 0x5c
0x2ec0: jmp qword ptr [rip+0x21a002]
0x2ec6: push 0x5d
0x2ed6: push 0x5e
0x2ee6: push 0x5f
0x2ef0: jmp qword ptr [rip+0x219fea]
0x2ef6: push 0x60
0x2f00: jmp qword ptr [rip+0x219fe2]
0x2f06: push 0x61
0x2f10: jmp qword ptr [rip+0x219fda]
0x2f16: push 0x62
0x2f20: jmp qword ptr [rip+0x219fd2]
0x2f26: push 0x63
0x2f36: push 0x64
0x2f40: jmp qword ptr [rip+0x219fc2]
0x2f46: push 0x65
0x2f50: jmp qword ptr [rip+0x219fba]
0x2f56: push 0x66
0x2f60: jmp qword ptr [rip+0x219fb2]
0x2f66: push 0x67
0x2f70: jmp qword ptr [rip+0x219faa]
0x2f76: push 0x68
0x2f80: jmp qword ptr [rip+0x219fa2]
0x2f86: push 0x69
0x2f90: jmp qword ptr [rip+0x219f9a]
0x2f96: push 0x6a
0x2fa0: jmp qword ptr [rip+0x219f92]
0x2fa6: push 0x6b
0x2fb0: jmp qword ptr [rip+0x219f8a]
0x2fb6: push 0x6c
0x2fc0: jmp qword ptr [rip+0x219f82]
0x2fc6: push 0x6d
0x2fd0: jmp qword ptr [rip+0x219f7a]
0x2fd6: push 0x6e
0x2fe0: jmp qword ptr [rip+0x219f72]
0x2fe6: push 0x6f
0x2ff6: push 0x70
0x3000: jmp qword ptr [rip+0x219f62]
0x3006: push 0x71
0x3010: jmp qword ptr [rip+0x219f5a]
0x3016: push 0x72
0x3020: jmp qword ptr [rip+0x219f52]
0x3026: push 0x73
0x3036: push 0x74
0x3046: push 0x75
0x3056: push 0x76
0x3066: push 0x77
0x3070: jmp qword ptr [rip+0x219f2a]
0x3076: push 0x78
0x3080: jmp qword ptr [rip+0x219f22]
0x3086: push 0x79
0x3096: push 0x7a
0x30a0: jmp qword ptr [rip+0x219f12]
0x30a6: push 0x7b
0x30b0: jmp qword ptr [rip+0x219f0a]
0x30b6: push 0x7c
0x30c6: push 0x7d
0x30d6: nop 
0x30d8: jmp qword ptr [rip+0x219f1a]
0x30de: nop 
0x30e0: test edi,edi
0x30e2: mov rax,rsi
0x30e5: mov esi,edx
0x30e7: js 0x30ee
0x30e9: jmp 0x2ef0
0x30ee: mov rdi,rax
0x30f1: jmp 0x2f10
0x30f6: push rbx
0x30f7: call 0x2950
0x30fc: lea rsi,[rip+0x145ad]
0x3103: mov rbx,rax
0x3106: mov edx,0x5
0x310b: xor edi,edi
0x310d: mov [rax],0x5f
0x3113: call 0x2ad0
0x3118: mov esi,dword ptr [rbx]
0x311a: mov rdx,rax
0x311d: mov edi,0x1
0x3122: xor eax,eax
0x3124: call 0x2f30
0x3129: nop qword ptr [rax+0x0]
0x334a: nop qword ptr [rax+rax*1+0x0]
0x3386: nop qword ptr [rax+rax*1+0x0]
0x33ce: nop 
0x358f: jmp 0x32f0
0x3614: cmp [rsp+0x28],0x0
0x361a: jnz 0x3d1a
0x3620: movsxd rax,dword ptr [rip+0x219ad1]
0x3627: sub ebx,eax
0x3629: lea rax,[rbp+rax*8+0x0]
0x362e: mov qword ptr [rsp+0x10],rax
0x3633: movzx eax,byte ptr [rip+0x21bb06]
0x363a: xor eax,0x1
0x363d: test r15,r15
0x3640: setz dl
0x3643: and eax,edx
0x3645: movzx edx,al
0x3648: cmp edx,ebx
0x364a: jnl 0x3cd3
0x3650: cmp [rsp+0x26],0x0
0x3655: jz 0x3908
0x365b: test r15,r15
0x365e: jnz 0x3caf
0x3664: cmp ebx,0x2
0x3667: jnle 0x3ddd
0x366d: mov rax,qword ptr [rsp+0x18]
0x3672: test rax,rax
0x3675: jz 0x36c8
0x3677: mov rdi,rax
0x367a: call 0xd2a0
0x367f: test rax,rax
0x3682: mov rbp,rax
0x3685: jz 0x3da9
0x368b: xor r8d,r8d
0x368e: mov rcx,rax
0x3691: xor edx,edx
0x3693: xor esi,esi
0x3695: xor edi,edi
0x3697: call 0xd6e0
0x369c: lea r8,[rip+0x219971]
0x36a3: xor edi,edi
0x36a5: mov rcx,rbp
0x36a8: xor edx,edx
0x36aa: mov esi,0x1
0x36af: mov dword ptr [rip+0x219967],eax
0x36b5: call 0xd6e0
0x36ba: mov rdi,rbp
0x36bd: mov dword ptr [rip+0x219955],eax
0x36c3: call 0x30d0
0x36c8: cmp [rsp+0x27],0x0
0x36cd: jz 0x36dc
0x36cf: cmp [rip+0x21ba6b],0x0
0x36d6: jz 0x3a54
0x36dc: cmp [rip+0x21ba5f],0x0
0x36e3: jz 0x3719
0x36e5: cmp [rsp+0x5f],0x0
0x36ea: jnz 0x3d9b
0x36f0: cmp [rip+0x21ba4a],0x0
0x36f7: mov edx,0x5
0x36fc: lea rsi,[rip+0x13f0d]
0x3703: jnz 0x3d81
0x3709: test [rip+0x219909],0xffff0e00
0x3713: jnz 0x3a7a
0x3719: mov rdi,qword ptr [rip+0x21ba38]
0x3720: test rdi,rdi
0x3723: jz 0x39f8
0x3729: call 0x2d20
0x372e: test rax,rax
0x3731: jz 0x3b41
0x3737: mov eax,dword ptr [rax+0x10]
0x373a: mov dword ptr [rip+0x21ba10],eax
0x3740: call 0x2e30
0x3745: mov rdi,qword ptr [rip+0x21b9fc]
0x374c: test rdi,rdi
0x374f: jz 0x39e9
0x3755: call 0x2d90
0x375a: test rax,rax
0x375d: jz 0x3adc
0x3763: mov eax,dword ptr [rax+0x10]
0x3766: mov dword ptr [rip+0x21b9d8],eax
0x376c: call 0x28f0
0x3771: cmp [rip+0x21b9c8],0x0
0x3778: jnz 0x3a07
0x377e: call 0xa040
0x3783: test r15,r15
0x3786: jz 0x3860
0x378c: mov rdi,qword ptr [rsp+0x8]
0x3791: xor ebp,ebp
0x3793: xor r13d,r13d
0x3796: call 0x5910
0x379b: mov qword ptr [rsp+0x18],r15
0x37a0: jmp 0x37bc
0x37a2: mov rdi,r15
0x37a5: mov r13d,0x1
0x37ab: call 0x30d0
0x37b0: add rbp,0x1
0x37b4: cmp ebx,ebp
0x37b6: jle 0x388e
0x37bc: mov rax,qword ptr [rsp+0x10]
0x37c1: test ebp,ebp
0x37c3: setz r12b
0x37c7: and r12b,byte ptr [rsp+0x25]
0x37cc: mov r14,qword ptr [rax+rbp*8+0x0]
0x37d0: mov rdi,r14
0x37d3: call 0xb3a0
0x37d8: mov rdi,qword ptr [rsp+0x18]
0x37dd: xor edx,edx
0x37df: mov rsi,rax
0x37e2: call 0xb790
0x37e7: test r12b,r12b
0x37ea: mov r15,rax
0x37ed: jz 0x3808
0x37ef: mov rdx,qword ptr [rsp+0x8]
0x37f4: mov ecx,0x1
0x37f9: mov rsi,rax
0x37fc: mov rdi,r14
0x37ff: call 0x3f40
0x3804: test al,al
0x3806: jz 0x37a2
0x3808: mov rdx,qword ptr [rsp+0x8]
0x380d: mov rsi,r15
0x3810: mov rdi,r14
0x3813: call 0x4260
0x3818: test al,al
0x381a: jz 0x37a2
0x381c: mov rdi,r15
0x381f: call 0x30d0
0x3824: jmp 0x37b0
0x3860: cmp [rsp+0x25],0x0
0x3865: mov rax,qword ptr [rsp+0x10]
0x386a: mov rbp,qword ptr [rax+0x8]
0x386e: mov rbx,qword ptr [rax]
0x3871: jnz 0x3aa0
0x3877: mov rdx,qword ptr [rsp+0x8]
0x387c: mov rsi,rbp
0x387f: mov rdi,rbx
0x3882: call 0x4260
0x3887: xor eax,0x1
0x388a: movzx r13d,al
0x388e: mov rcx,qword ptr [rsp+0x128]
0x3896: xor rcx,0x28
0x389f: mov eax,r13d
0x38a2: jnz 0x3e04
0x38a8: add rsp,0x138
0x38af: pop rbx
0x38b0: pop rbp
0x38b1: pop r12
0x38b3: pop r13
0x38b5: pop r14
0x38b7: pop r15
0x38b9: ret
0x38ba: cmp [rsp+0x28],0x0
0x38c0: jz 0x3620
0x38c6: call 0x2950
0x38cb: mov rdi,qword ptr [rsp+0x28]
0x38d0: mov [rax],0x5f
0x38d6: mov rbx,rax
0x38d9: call 0xf6c0
0x38de: lea rsi,[rip+0x13beb]
0x38e5: mov edx,0x5
0x38ea: xor edi,edi
0x38ec: mov rbp,rax
0x38ef: call 0x2ad0
0x38f4: mov esi,dword ptr [rbx]
0x38f6: mov rdx,rax
0x38f9: mov rcx,rbp
0x38fc: mov edi,0x1
0x3901: xor eax,eax
0x3903: call 0x2f30
0x3908: test al,al
0x390a: jz 0x366d
0x3910: xor r15d,r15d
0x3913: cmp ebx,0x1
0x3916: jz 0x366d
0x391c: mov rcx,qword ptr [rsp+0x10]
0x3921: movsxd rax,ebx
0x3924: mov r12d,0x1
0x392a: lea r13,[rcx+rax*8-0x8]
0x392f: mov rbp,qword ptr [r13+0x0]
0x3933: mov rdi,rbp
0x3936: call 0xb3a0
0x393b: mov rdi,rax
0x393e: mov rdx,rax
0x3941: movzx eax,byte ptr [rsp+0x26]
0x3946: or rcx,0xffffffff
0x394a: repnz scasb al,byte ptr es:[rdi]
0x394c: mov rax,rcx
0x394f: not rax
0x3952: sub rax,0x1
0x3956: jz 0x3964
0x3958: xor r12d,r12d
0x395b: cmp [rdx+rax*1-0x1],0x2f
0x3960: setz r12b
0x3964: lea rdx,[rsp+0x90]
0x396c: mov rsi,rbp
0x396f: mov edi,0x1
0x3974: call 0x2dd0
0x3979: test eax,eax
0x397b: jz 0x3ba6
0x3981: call 0x2950
0x3986: mov r14d,dword ptr [rax]
0x3989: test r14d,r14d
0x398c: jz 0x3ba6
0x3992: cmp r14d,0x2
0x3996: jnz 0x3c14
0x399c: test r12d,r12d
0x399f: jnz 0x3bdc
0x39a5: xor r15d,r15d
0x39a8: cmp ebx,0x2
0x39ab: jz 0x366d
0x39b1: mov rsi,qword ptr [r13+0x0]
0x39b5: mov edi,0x4
0x39ba: call 0xf3f0
0x39bf: lea rsi,[rip+0x12bbe]
0x39c6: mov rbx,rax
0x39c9: mov edx,0x5
0x39ce: xor edi,edi
0x39d0: call 0x2ad0
0x39d5: mov rcx,rbx
0x39d8: mov rdx,rax
0x39db: xor esi,esi
0x39dd: mov edi,0x1
0x39e2: xor eax,eax
0x39e4: call 0x2f30
0x39e9: mov [rip+0x21b751],0xffffffff
0x39f3: jmp 0x3771
0x39f8: mov [rip+0x21b74e],0xffffffff
0x3a02: jmp 0x3745
0x3a07: mov rcx,qword ptr [rsp+0x8]
0x3a0c: mov rsi,qword ptr [rsp+0x10]
0x3a11: lea rdx,[rip+0x708]
0x3a18: mov edi,ebx
0x3a1a: call 0x104d0
0x3a1f: mov r13d,eax
0x3a22: jmp 0x388e
0x3a54: lea rsi,[rip+0x13b25]
0x3a5b: xor edi,edi
0x3a5d: mov edx,0x5
0x3a62: call 0x2ad0
0x3a67: xor esi,esi
0x3a69: mov rdx,rax
0x3a6c: xor edi,edi
0x3a6e: xor eax,eax
0x3a70: call 0x2f30
0x3a75: jmp 0x36dc
0x3a7a: lea rsi,[rip+0x13bcf]
0x3a81: xor edi,edi
0x3a83: mov edx,0x5
0x3a88: call 0x2ad0
0x3a8d: xor esi,esi
0x3a8f: mov rdx,rax
0x3a92: xor edi,edi
0x3a94: xor eax,eax
0x3a96: call 0x2f30
0x3a9b: jmp 0x3719
0x3aa0: mov rdx,qword ptr [rsp+0x8]
0x3aa5: xor ecx,ecx
0x3aa7: mov rsi,rbp
0x3aaa: mov rdi,rbx
0x3aad: xor r13d,r13d
0x3ab0: call 0x3f40
0x3ab5: test al,al
0x3ab7: jz 0x3acd
0x3ab9: mov rdx,qword ptr [rsp+0x8]
0x3abe: mov rsi,rbp
0x3ac1: mov rdi,rbx
0x3ac4: call 0x4260
0x3ac9: movzx r13d,al
0x3acd: and r13d,0x1
0x3ad1: mov eax,r13d
0x3ad4: xor eax,0x1
0x3ad7: jmp 0x388a
0x3adc: mov rdi,qword ptr [rip+0x21b665]
0x3ae3: lea rcx,[rsp+0x38]
0x3ae8: xor r8d,r8d
0x3aeb: xor edx,edx
0x3aed: xor esi,esi
0x3aef: call 0x122a0
0x3af4: test eax,eax
0x3af6: jnz 0x3b0b
0x3af8: mov rax,qword ptr [rsp+0x38]
0x3afd: mov edx,0xffffffff
0x3b02: cmp rax,rdx
0x3b05: jbe 0x3766
0x3b0b: mov rdi,qword ptr [rip+0x21b636]
0x3b12: call 0xf6c0
0x3b17: lea rsi,[rip+0x12ad5]
0x3b1e: mov rbx,rax
0x3b21: mov edx,0x5
0x3b26: xor edi,edi
0x3b28: call 0x2ad0
0x3b2d: mov rcx,rbx
0x3b30: mov rdx,rax
0x3b33: xor esi,esi
0x3b35: mov edi,0x1
0x3b3a: xor eax,eax
0x3b3c: call 0x2f30
0x3b41: mov rdi,qword ptr [rip+0x21b610]
0x3b48: lea rcx,[rsp+0x38]
0x3b4d: xor r8d,r8d
0x3b50: xor edx,edx
0x3b52: xor esi,esi
0x3b54: call 0x122a0
0x3b59: test eax,eax
0x3b5b: jnz 0x3b70
0x3b5d: mov rax,qword ptr [rsp+0x38]
0x3b62: mov edx,0xffffffff
0x3b67: cmp rax,rdx
0x3b6a: jbe 0x373a
0x3b70: mov rdi,qword ptr [rip+0x21b5e1]
0x3b77: call 0xf6c0
0x3b7c: lea rsi,[rip+0x12a60]
0x3b83: mov rbx,rax
0x3b86: mov edx,0x5
0x3b8b: xor edi,edi
0x3b8d: call 0x2ad0
0x3b92: mov rcx,rbx
0x3b95: mov rdx,rax
0x3b98: xor esi,esi
0x3b9a: mov edi,0x1
0x3b9f: xor eax,eax
0x3ba1: call 0x2f30
0x3ba6: mov eax,dword ptr [rsp+0xa8]
0x3bad: and eax,0xf000
0x3bb2: cmp eax,0x4000
0x3bb7: jz 0x3bc1
0x3bb9: xor r14d,r14d
0x3bbc: jmp 0x399c
0x3bc1: mov rcx,qword ptr [rsp+0x10]
0x3bc6: sub ebx,0x1
0x3bc9: movsxd rax,ebx
0x3bcc: mov r15,qword ptr [rcx+rax*8+0x0]
0x3bd0: jmp 0x366d
0x3bdc: mov rsi,rbp
0x3bdf: mov edi,0x4
0x3be4: call 0xf3f0
0x3be9: lea rsi,[rip+0x12994]
0x3bf0: mov rbx,rax
0x3bf3: mov edx,0x5
0x3bf8: xor edi,edi
0x3bfa: call 0x2ad0
0x3bff: mov rcx,rbx
0x3c02: mov rdx,rax
0x3c05: mov esi,r14d
0x3c08: mov edi,0x1
0x3c0d: xor eax,eax
0x3c0f: call 0x2f30
0x3c14: mov rsi,rbp
0x3c17: mov edi,0x4
0x3c1c: call 0xf3f0
0x3c21: lea rsi,[rip+0x12948]
0x3c28: mov rbx,rax
0x3c2b: mov edx,0x5
0x3c30: xor edi,edi
0x3c32: call 0x2ad0
0x3c37: mov rcx,rbx
0x3c3a: mov rdx,rax
0x3c3d: mov esi,r14d
0x3c40: mov edi,0x1
0x3c45: xor eax,eax
0x3c47: call 0x2f30
0x3c59: lea rsi,[rip+0x12910]
0x3c60: mov edx,0x5
0x3c65: xor edi,edi
0x3c67: mov rbp,rax
0x3c6a: call 0x2ad0
0x3c6f: mov rbx,rax
0x3c72: call 0x2950
0x3c77: mov esi,dword ptr [rax]
0x3c79: mov rcx,rbp
0x3c7c: mov rdx,rbx
0x3c7f: mov edi,0x1
0x3c84: xor eax,eax
0x3c86: call 0x2f30
0x3caf: lea rsi,[rip+0x13882]
0x3cb6: mov edx,0x5
0x3cbb: xor edi,edi
0x3cbd: call 0x2ad0
0x3cc2: xor esi,esi
0x3cc4: mov rdx,rax
0x3cc7: mov edi,0x1
0x3ccc: xor eax,eax
0x3cce: call 0x2f30
0x3cd3: sub ebx,0x1
0x3cd6: jnz 0x3d75
0x3cdc: mov rax,qword ptr [rsp+0x10]
0x3ce1: mov edi,0x4
0x3ce6: mov rsi,qword ptr [rax]
0x3ce9: call 0xf3f0
0x3cee: lea rsi,[rip+0x13813]
0x3cf5: mov rbx,rax
0x3cf8: mov edx,0x5
0x3cfd: xor edi,edi
0x3cff: call 0x2ad0
0x3d04: mov rcx,rbx
0x3d07: mov rdx,rax
0x3d0a: xor esi,esi
0x3d0c: xor edi,edi
0x3d0e: xor eax,eax
0x3d10: call 0x2f30
0x3d15: jmp 0x337c
0x3d4b: lea rsi,[rip+0x12832]
0x3d52: mov rbx,rax
0x3d55: mov edx,0x5
0x3d5a: xor edi,edi
0x3d5c: call 0x2ad0
0x3d61: mov rcx,rbx
0x3d64: mov rdx,rax
0x3d67: xor esi,esi
0x3d69: mov edi,0x1
0x3d6e: xor eax,eax
0x3d70: call 0x2f30
0x3d75: lea rsi,[rip+0x12831]
0x3d7c: mov edx,0x5
0x3d81: xor edi,edi
0x3d83: call 0x2ad0
0x3d88: xor esi,esi
0x3d8a: mov rdx,rax
0x3d8d: xor edi,edi
0x3d8f: xor eax,eax
0x3d91: call 0x2f30
0x3d96: jmp 0x337c
0x3d9b: mov edx,0x5
0x3da0: lea rsi,[rip+0x13821]
0x3da7: jmp 0x3d81
0x3da9: mov rdi,qword ptr [rsp+0x18]
0x3dae: call 0xf6c0
0x3db3: lea rsi,[rip+0x12819]
0x3dba: mov rbx,rax
0x3dbd: mov edx,0x5
0x3dc2: xor edi,edi
0x3dc4: call 0x2ad0
0x3dc9: mov rcx,rbx
0x3dcc: mov rdx,rax
0x3dcf: xor esi,esi
0x3dd1: mov edi,0x1
0x3dd6: xor eax,eax
0x3dd8: call 0x2f30
0x3ddd: mov rax,qword ptr [rsp+0x10]
0x3de2: mov edi,0x4
0x3de7: mov rsi,qword ptr [rax+0x10]
0x3deb: call 0xf3f0
0x3df0: mov edx,0x5
0x3df5: mov rbx,rax
0x3df8: lea rsi,[rip+0x127c3]
0x3dff: jmp 0x3cfd
0x3e04: call 0x2b30
0x3e2d: nop qword ptr [rax]
0x3e5a: hlt 
0x3e60: lea rdi,[rip+0x219261]
0x3e67: push rbp
0x3e68: lea rax,[rip+0x219259]
0x3e6f: cmp rax,rdi
0x3e72: mov rbp,rsp
0x3e75: jz 0x3e90
0x3e77: mov rax,qword ptr [rip+0x21915a]
0x3e7e: test rax,rax
0x3e81: jz 0x3e90
0x3e83: pop rbp
0x3e84: jmp rax
0x3e86: nop qword ptr [rax+rax*1+0x0]
0x3e90: pop rbp
0x3e91: ret
0x3ea0: lea rdi,[rip+0x219221]
0x3ea7: lea rsi,[rip+0x21921a]
0x3eae: push rbp
0x3eaf: sub rsi,rdi
0x3eb2: mov rbp,rsp
0x3eb5: sar rsi,0x3
0x3eb9: mov rax,rsi
0x3ebc: shr rax,0x3f
0x3ec0: add rsi,rax
0x3ec3: sar rsi,0x1
0x3ec6: jz 0x3ee0
0x3ec8: mov rax,qword ptr [rip+0x219121]
0x3ecf: test rax,rax
0x3ed2: jz 0x3ee0
0x3ed4: pop rbp
0x3ed5: jmp rax
0x3ed7: nop qword ptr [rax+rax*1+0x0]
0x3ee0: pop rbp
0x3ee1: ret
0x3ef0: cmp [rip+0x219231],0x0
0x3ef7: jnz 0x3f28
0x3ef9: cmp [rip+0x2190f7],0x0
0x3f01: push rbp
0x3f02: mov rbp,rsp
0x3f05: jz 0x3f13
0x3f07: mov rdi,qword ptr [rip+0x2190fa]
0x3f0e: call 0x30d8
0x3f13: call 0x3e60
0x3f18: mov [rip+0x219209],0x1
0x3f1f: pop rbp
0x3f20: ret
0x3f21: nop qword ptr [rax+0x0]
0x3f28: rep ret
0x3f30: push rbp
0x3f31: mov rbp,rsp
0x3f34: pop rbp
0x3f35: jmp 0x3ea0
0x3f40: push r13
0x3f42: push r12
0x3f44: push rbp
0x3f45: push rbx
0x3f46: mov rbx,rsi
0x3f49: sub rsp,0x28
0x3f4d: mov rax,0x28
0x3f56: mov qword ptr [rsp+0x18],rax
0x3f5b: xor eax,eax
0x3f5d: test cl,cl
0x3f5f: jnz 0x3f6a
0x3f61: cmp [rdi],0x2f
0x3f64: jz 0x4010
0x3f6a: lea rbp,[rsp+0x10]
0x3f6f: mov rcx,rdx
0x3f72: lea rdx,[rip+0x277]
0x3f79: mov rdi,rbx
0x3f7c: mov [rsp+0x10],0x0
0x3f84: mov rsi,rbp
0x3f87: call 0xcd60
0x3f8c: cmp rax,0xffffffff
0x3f90: jnz 0x405a
0x3f96: mov rsi,rbx
0x3f99: mov edi,0x4
0x3f9e: call 0xf3f0
0x3fa3: lea rsi,[rip+0x1241a]
0x3faa: mov edx,0x5
0x3faf: xor edi,edi
0x3fb1: mov r12,rax
0x3fb4: call 0x2ad0
0x3fb9: mov rbx,rax
0x3fbc: call 0x2950
0x3fc1: mov esi,dword ptr [rax]
0x3fc3: mov rcx,r12
0x3fc6: mov rdx,rbx
0x3fc9: xor edi,edi
0x3fcb: xor eax,eax
0x3fcd: call 0x2f30
0x3fd2: mov esi,0x1
0x3fd7: mov rdi,rbp
0x3fda: call 0x102f0
0x3fdf: mov rdi,rbp
0x3fe2: call 0x10450
0x3fe7: xor eax,eax
0x3fe9: mov rbx,qword ptr [rsp+0x18]
0x3fee: xor rbx,0x28
0x3ff7: jnz 0x40ca
0x3ffd: add rsp,0x28
0x4001: pop rbx
0x4002: pop rbp
0x4003: pop r12
0x4005: pop r13
0x4007: ret
0x4008: nop qword ptr [rax+rax*1+0x0]
0x4010: cmp [rsi],0x2f
0x4013: jnz 0x3f6a
0x4019: lea rbp,[rsp+0x10]
0x401e: mov qword ptr [rsp+0x8],rdx
0x4023: mov [rsp+0x10],0x0
0x402b: mov rdi,rbp
0x402e: call 0x10450
0x4033: mov rdx,qword ptr [rsp+0x8]
0x4038: mov rsi,rbp
0x403b: mov rdi,rbx
0x403e: mov rcx,rdx
0x4041: lea rdx,[rip+0x1a8]
0x4048: call 0xcd60
0x404d: cmp rax,0xffffffff
0x4051: jz 0x40cf
0x4053: mov eax,0x1
0x4058: jmp 0x3fe9
0x405a: xor esi,esi
0x405c: mov rdi,rbp
0x405f: call 0x102f0
0x4064: mov r13d,eax
0x4067: call 0x2950
0x406c: mov rdi,rbp
0x406f: mov r12d,dword ptr [rax]
0x4072: call 0x10450
0x4077: xor eax,eax
0x4079: cmp r13d,0x0
0x407d: jnle 0x3fe9
0x4083: mov eax,0x1
0x4088: jnl 0x3fe9
0x408e: mov rsi,rbx
0x4091: mov edi,0x4
0x4096: call 0xf3f0
0x409b: lea rsi,[rip+0x12322]
0x40a2: mov rbx,rax
0x40a5: mov edx,0x5
0x40aa: xor edi,edi
0x40ac: call 0x2ad0
0x40b1: mov rcx,rbx
0x40b4: mov rdx,rax
0x40b7: mov esi,r12d
0x40ba: xor eax,eax
0x40bc: xor edi,edi
0x40be: call 0x2f30
0x40c3: xor eax,eax
0x40c5: jmp 0x3fe9
0x40ca: call 0x2b30
0x40cf: mov rsi,rbx
0x40d2: mov edi,0x4
0x40d7: call 0xf3f0
0x40dc: lea rsi,[rip+0x122e1]
0x40e3: mov edx,0x5
0x40e8: xor edi,edi
0x40ea: mov rbp,rax
0x40ed: call 0x2ad0
0x40f2: mov rbx,rax
0x40f5: call 0x2950
0x40fa: mov esi,dword ptr [rax]
0x40fc: mov rcx,rbp
0x40ff: xor eax,eax
0x4101: mov rdx,rbx
0x4104: xor edi,edi
0x4106: call 0x2f30
0x410b: xor eax,eax
0x410d: jmp 0x3fe9
0x4120: push rbp
0x4121: push rbx
0x4122: mov rcx,rdx
0x4125: mov rbx,rdx
0x4128: lea r9,[rip+0xa1]
0x412f: lea rdx,[rip+0xba]
0x4136: sub rsp,0x8
0x413a: mov eax,dword ptr [rip+0x21b004]
0x4140: mov r8d,dword ptr [rip+0x218ed1]
0x4147: push 0x0
0x4149: push rax
0x414a: mov eax,dword ptr [rip+0x21b000]
0x4150: push rax
0x4151: mov eax,dword ptr [rip+0x218ebd]
0x4157: push rax
0x4158: call 0xced0
0x415d: xor eax,0x1
0x4160: add rsp,0x20
0x4164: test al,al
0x4166: movzx ebp,al
0x4169: jnz 0x417c
0x416b: cmp [rbx+0x21],0x0
0x416f: jz 0x417c
0x4171: call 0x2950
0x4176: mov [rax],0x5f
0x417c: add rsp,0x8
0x4180: mov eax,ebp
0x4182: pop rbx
0x4183: pop rbp
0x4184: ret
0x4190: push rbx
0x4191: mov rsi,rdi
0x4194: mov edi,0x4
0x4199: call 0xf3f0
0x419e: lea rsi,[rip+0x1223a]
0x41a5: mov rbx,rax
0x41a8: mov edx,0x5
0x41ad: xor edi,edi
0x41af: call 0x2ad0
0x41b4: mov rdx,rbx
0x41b7: mov rdi,qword ptr [rip+0x218f2a]
0x41be: mov rsi,rax
0x41c1: pop rbx
0x41c2: xor eax,eax
0x41c4: jmp 0x4d70
0x41d0: cmp [rsi+0x2e],0x0
0x41d4: jnz 0x41e0
0x41d6: rep ret
0x41d8: nop qword ptr [rax+rax*1+0x0]
0x41e0: jmp 0x4190
0x41f0: push r12
0x41f2: push rbp
0x41f3: mov r12,rdi
0x41f6: push rbx
0x41f7: mov rbp,rsi
0x41fa: mov rbx,rdx
0x41fd: sub rsp,0x10
0x4201: cmp [rdx+0x21],0x0
0x4205: jz 0x4212
0x4207: call 0x2950
0x420c: mov [rax],0x5f
0x4212: mov esi,0x1ed
0x4217: mov rdi,rbp
0x421a: call 0x29c0
0x421f: test eax,eax
0x4221: jnz 0x4229
0x4223: cmp [rbx+0x2e],0x0
0x4227: jnz 0x4238
0x4229: add rsp,0x10
0x422d: pop rbx
0x422e: pop rbp
0x422f: pop r12
0x4231: ret
0x4232: nop qword ptr [rax+rax*1+0x0]
0x4238: mov rdi,r12
0x423b: mov dword ptr [rsp+0xc],eax
0x423f: call 0x4190
0x4244: mov eax,dword ptr [rsp+0xc]
0x4248: add rsp,0x10
0x424c: pop rbx
0x424d: pop rbp
0x424e: pop r12
0x4250: ret
0x4260: push r15
0x4262: push r14
0x4264: push r13
0x4266: push r12
0x4268: mov r12,rdi
0x426b: push rbp
0x426c: push rbx
0x426d: mov rbp,rsi
0x4270: mov rbx,rdx
0x4273: sub rsp,0x1e8
0x427a: mov rax,0x28
0x4283: mov qword ptr [rsp+0x1d8],rax
0x428b: xor eax,eax
0x428d: cmp [rdx+0x1f],0x0
0x4291: jz 0x42ad
0x4293: lea rdx,[rsp+0x20]
0x4298: mov rsi,rdi
0x429b: mov edi,0x1
0x42a0: call 0x2dd0
0x42a5: test eax,eax
0x42a7: jnz 0x4620
0x42ad: cmp [rip+0x21ae8e],0x0
0x42b4: jz 0x42ca
0x42b6: mov r13d,dword ptr [rip+0x218d5f]
0x42bd: test r13d,0xffff0e00
0x42c4: jz 0x4488
0x42ca: lea r8,[rsp+0x1c]
0x42cf: xor r9d,r9d
0x42d2: xor edx,edx
0x42d4: mov rcx,rbx
0x42d7: mov rsi,rbp
0x42da: mov rdi,r12
0x42dd: call 0x9d30
0x42e2: test al,al
0x42e4: jnz 0x4323
0x42e6: xor ebx,ebx
0x42e8: mov rcx,qword ptr [rsp+0x1d8]
0x42f0: xor rcx,0x28
0x42f9: mov eax,ebx
0x42fb: jnz 0x4848
0x4301: add rsp,0x1e8
0x4308: pop rbx
0x4309: pop rbp
0x430a: pop r12
0x430c: pop r13
0x430e: pop r14
0x4310: pop r15
0x4312: ret
0x4313: mov edi,r13d
0x4316: call 0x2c30
0x431b: mov edi,r14d
0x431e: call 0x2c30
0x4323: cmp [rip+0x21ae17],0x0
0x432a: jnz 0x46c0
0x4330: cmp [rbx+0x1f],0x0
0x4334: jz 0x43e0
0x433a: mov eax,dword ptr [rsp+0x38]
0x433e: and eax,0xf000
0x4343: cmp eax,0x8000
0x4348: jz 0x43e0
0x434e: mov rax,qword ptr [rsp+0x68]
0x4353: lea rsi,[rsp+0x140]
0x435b: mov rdi,rbp
0x435e: mov qword ptr [rsp+0x140],rax
0x4366: mov rax,qword ptr [rsp+0x70]
0x436b: mov qword ptr [rsp+0x148],rax
0x4373: mov rax,qword ptr [rsp+0x78]
0x4378: mov qword ptr [rsp+0x150],rax
0x4380: mov rax,qword ptr [rsp+0x80]
0x4388: mov qword ptr [rsp+0x158],rax
0x4390: call 0x11740
0x4395: test eax,eax
0x4397: jz 0x43e0
0x4399: mov rsi,rbp
0x439c: mov edi,0x4
0x43a1: call 0xf3f0
0x43a6: lea rsi,[rip+0x120a0]
0x43ad: mov rbp,rax
0x43b0: mov edx,0x5
0x43b5: xor edi,edi
0x43b7: call 0x2ad0
0x43bc: mov rbx,rax
0x43bf: call 0x2950
0x43c4: mov esi,dword ptr [rax]
0x43c6: mov rcx,rbp
0x43c9: mov rdx,rbx
0x43cc: xor edi,edi
0x43ce: xor eax,eax
0x43d0: call 0x2f30
0x43d5: jmp 0x42e6
0x43da: nop qword ptr [rax+rax*1+0x0]
0x43e0: mov esi,dword ptr [rip+0x21ad6a]
0x43e6: mov edx,dword ptr [rip+0x21ad58]
0x43ec: cmp esi,0xff
0x43ef: jnz 0x43f6
0x43f1: cmp edx,0xff
0x43f4: jz 0x4406
0x43f6: mov rdi,rbp
0x43f9: call 0x2e40
0x43fe: test eax,eax
0x4400: jnz 0x4648
0x4406: mov esi,dword ptr [rip+0x218c10]
0x440c: mov rdi,rbp
0x440f: mov ebx,0x1
0x4414: call 0x2f10
0x4419: test eax,eax
0x441b: jnz 0x46a0
0x4421: cmp [rip+0x218bf8],0x0
0x4428: jz 0x42e8
0x442e: cmp [rip+0x21ad2b],0x1
0x4435: jnz 0x42e8
0x443b: lea rdx,[rsp+0x140]
0x4443: mov rsi,rbp
0x4446: mov edi,0x1
0x444b: call 0x2b00
0x4450: test eax,eax
0x4452: jnz 0x42e8
0x4458: cmp [rip+0x218bb1],0x0
0x445f: jz 0x446b
0x4461: cmp [rbp+0x0],0x2f
0x4465: jz 0x47d1
0x446b: mov [rip+0x218b9e],0x0
0x4472: call 0x2950
0x4477: mov [rax],0x5f
0x447d: jmp 0x42e8
0x4482: nop qword ptr [rax+rax*1+0x0]
0x4488: lea rdx,[rsp+0xb0]
0x4490: mov rsi,r12
0x4493: mov edi,0x1
0x4498: call 0x2b00
0x449d: test eax,eax
0x449f: jnz 0x42ca
0x44a5: lea rdx,[rsp+0x140]
0x44ad: mov rsi,rbp
0x44b0: mov edi,0x1
0x44b5: call 0x2b00
0x44ba: test eax,eax
0x44bc: jnz 0x42ca
0x44c2: mov eax,dword ptr [rsp+0xc8]
0x44c9: mov edx,eax
0x44cb: and edx,0xf000
0x44d1: cmp edx,0x8000
0x44d7: jnz 0x42ca
0x44dd: mov edx,dword ptr [rsp+0x158]
0x44e4: mov ecx,edx
0x44e6: and ecx,0xf000
0x44ec: cmp ecx,0x8000
0x44f2: jnz 0x42ca
0x44f8: test eax,0xffff0e00
0x44fd: jnz 0x42ca
0x4503: test edx,0xffff0e00
0x4509: jnz 0x42ca
0x450f: mov rax,qword ptr [rsp+0x170]
0x4517: cmp qword ptr [rsp+0xe0],rax
0x451f: jnz 0x42ca
0x4525: and edx,0xfff
0x452b: cmp r13d,edx
0x452e: jnz 0x42ca
0x4534: mov eax,dword ptr [rip+0x21ac16]
0x453a: cmp eax,0xff
0x453d: jz 0x48de
0x4543: cmp eax,dword ptr [rsp+0x15c]
0x454a: jnz 0x42ca
0x4550: mov eax,dword ptr [rip+0x21abee]
0x4556: cmp eax,0xff
0x4559: jz 0x48a5
0x455f: cmp eax,dword ptr [rsp+0x160]
0x4566: jnz 0x42ca
0x456c: cmp [rip+0x21abed],0x0
0x4573: jz 0x457f
0x4575: cmp [rbx+0x25],0x0
0x4579: jnz 0x490a
0x457f: xor esi,esi
0x4581: xor eax,eax
0x4583: mov rdi,r12
0x4586: call 0x2f60
0x458b: test eax,eax
0x458d: mov r13d,eax
0x4590: js 0x42ca
0x4596: xor esi,esi
0x4598: xor eax,eax
0x459a: mov rdi,rbp
0x459d: call 0x2f60
0x45a2: test eax,eax
0x45a4: mov r14d,eax
0x45a7: lea r15,[rip+0x218b92]
0x45ae: js 0x48d1
0x45b4: mov edx,0x1000
0x45b9: mov rsi,r15
0x45bc: mov edi,r13d
0x45bf: call 0xb8b0
0x45c4: test rax,rax
0x45c7: mov rcx,rax
0x45ca: jz 0x4313
0x45d0: lea rsi,[rip+0x219b69]
0x45d7: mov edx,0x1000
0x45dc: mov edi,r14d
0x45df: mov qword ptr [rsp+0x8],rcx
0x45e4: call 0xb8b0
0x45e9: mov rcx,qword ptr [rsp+0x8]
0x45ee: cmp rax,rcx
0x45f1: jnz 0x4609
0x45f3: lea rsi,[rip+0x219b46]
0x45fa: mov rdx,rax
0x45fd: mov rdi,r15
0x4600: call 0x2c90
0x4605: test eax,eax
0x4607: jz 0x45b4
0x4609: mov edi,r13d
0x460c: call 0x2c30
0x4611: mov edi,r14d
0x4614: call 0x2c30
0x4619: jmp 0x42ca
0x461e: nop 
0x4620: mov rsi,r12
0x4623: mov edi,0x4
0x4628: call 0xf3f0
0x462d: mov edx,0x5
0x4632: mov rbp,rax
0x4635: lea rsi,[rip+0x11db9]
0x463c: jmp 0x43b5
0x4641: nop qword ptr [rax+0x0]
0x4648: mov rsi,rbp
0x464b: mov edi,0x4
0x4650: call 0xf3f0
0x4655: lea rsi,[rip+0x11e0e]
0x465c: mov r12,rax
0x465f: mov edx,0x5
0x4664: xor edi,edi
0x4666: call 0x2ad0
0x466b: mov rbx,rax
0x466e: call 0x2950
0x4673: mov esi,dword ptr [rax]
0x4675: mov rdx,rbx
0x4678: xor edi,edi
0x467a: xor eax,eax
0x467c: mov rcx,r12
0x467f: xor ebx,ebx
0x4681: call 0x2f30
0x4686: cmp [rip+0x218993],0x0
0x468d: jz 0x42e8
0x4693: jmp 0x442e
0x4698: nop qword ptr [rax+rax*1+0x0]
0x46a0: mov rsi,rbp
0x46a3: mov edi,0x4
0x46a8: call 0xf3f0
0x46ad: mov edx,0x5
0x46b2: mov r12,rax
0x46b5: lea rsi,[rip+0x11ff4]
0x46bc: jmp 0x4664
0x46be: nop 
0x46c0: call 0x30a0
0x46c5: cmp eax,0xff
0x46c8: jz 0x4720
0x46ca: test eax,eax
0x46cc: jz 0x484d
0x46d2: lea rsi,[rsp+0x1c]
0x46d7: xor edx,edx
0x46d9: mov edi,eax
0x46db: call 0x2f40
0x46e0: test eax,eax
0x46e2: js 0x47c0
0x46e8: mov eax,dword ptr [rsp+0x1c]
0x46ec: test al,0x7f
0x46ee: jnz 0x46f9
0x46f0: test ah,0xff
0x46f3: jz 0x47a0
0x46f9: lea rsi,[rip+0x11f88]
0x4700: xor edi,edi
0x4702: mov edx,0x5
0x4707: call 0x2ad0
0x470c: xor esi,esi
0x470e: mov rdx,rax
0x4711: xor edi,edi
0x4713: xor eax,eax
0x4715: call 0x2f30
0x471a: jmp 0x4749
0x471c: nop qword ptr [rax+0x0]
0x4720: lea rsi,[rip+0x11cdd]
0x4727: mov edx,0x5
0x472c: xor edi,edi
0x472e: call 0x2ad0
0x4733: mov rbx,rax
0x4736: call 0x2950
0x473b: mov esi,dword ptr [rax]
0x473d: mov rdx,rbx
0x4740: xor edi,edi
0x4742: xor eax,eax
0x4744: call 0x2f30
0x4749: mov rdi,rbp
0x474c: call 0x2960
0x4751: test eax,eax
0x4753: jz 0x42e6
0x4759: mov rsi,rbp
0x475c: mov edi,0x4
0x4761: call 0xf3f0
0x4766: lea rsi,[rip+0x11ccf]
0x476d: mov edx,0x5
0x4772: xor edi,edi
0x4774: mov rbp,rax
0x4777: call 0x2ad0
0x477c: mov rbx,rax
0x477f: call 0x2950
0x4784: mov esi,dword ptr [rax]
0x4786: mov rcx,rbp
0x4789: mov rdx,rbx
0x478c: mov edi,0x1
0x4791: xor eax,eax
0x4793: call 0x2f30
0x4798: nop qword ptr [rax+rax*1+0x0]
0x47a0: cmp [rbx+0x1f],0x0
0x47a4: jz 0x43e0
0x47aa: cmp [rip+0x21a990],0x0
0x47b1: jnz 0x434e
0x47b7: jmp 0x433a
0x47bc: nop qword ptr [rax+0x0]
0x47c0: mov edx,0x5
0x47c5: lea rsi,[rip+0x11c5e]
0x47cc: jmp 0x472c
0x47d1: movzx edx,byte ptr [rbp+0x1]
0x47d5: lea rax,[rbp+0x1]
0x47d9: cmp dl,0x2f
0x47dc: jnz 0x47ec
0x47de: nop 
0x47e0: add rax,0x1
0x47e4: movzx edx,byte ptr [rax]
0x47e7: cmp dl,0x2f
0x47ea: jz 0x47e0
0x47ec: test dl,dl
0x47ee: jz 0x446b
0x47f4: mov rdx,rax
0x47f7: jmp 0x47fe
0x47f9: cmp cl,0x2f
0x47fc: jz 0x4809
0x47fe: add rdx,0x1
0x4802: movzx ecx,byte ptr [rdx]
0x4805: test cl,cl
0x4807: jnz 0x47f9
0x4809: lea rbp,[rax-0x1]
0x480d: sub rdx,rbp
0x4810: lea rdi,[rdx+0x2]
0x4814: mov r12,rdx
0x4817: call 0x2df0
0x481c: test rax,rax
0x481f: mov r13,rax
0x4822: jz 0x446b
0x4828: mov rdx,r12
0x482b: mov rsi,rbp
0x482e: mov rdi,rax
0x4831: call 0x2ea0
0x4836: mov rdi,r13
0x4839: mov [rax],0x2f
0x483e: call 0x30d0
0x4843: jmp 0x446b
0x4848: call 0x2b30
0x484d: mov rbx,qword ptr [rip+0x2187d4]
0x4854: xor ecx,ecx
0x4856: mov rdx,rbp
0x4859: xor eax,eax
0x485b: mov rsi,rbx
0x485e: mov rdi,rbx
0x4861: call 0x3080
0x4866: mov rsi,rbx
0x4869: mov edi,0x4
0x486e: call 0xf3f0
0x4873: lea rsi,[rip+0x11ba2]
0x487a: mov edx,0x5
0x487f: xor edi,edi
0x4881: mov rbp,rax
0x4884: call 0x2ad0
0x4889: mov rbx,rax
0x488c: call 0x2950
0x4891: mov esi,dword ptr [rax]
0x4893: mov rcx,rbp
0x4896: mov rdx,rbx
0x4899: mov edi,0x1
0x489e: xor eax,eax
0x48a0: call 0x2f30
0x48a5: call 0x2950
0x48aa: mov [rax],0x0
0x48b0: mov r13,rax
0x48b3: call 0x2dc0
0x48b8: cmp eax,0xff
0x48bb: jnz 0x455f
0x48c1: cmp [r13+0x0],0x0
0x48c6: jz 0x455f
0x48cc: jmp 0x42ca
0x48d1: mov edi,r13d
0x48d4: call 0x2c30
0x48d9: jmp 0x42ca
0x48de: call 0x2950
0x48e3: mov [rax],0x0
0x48e9: mov r13,rax
0x48ec: call 0x2b40
0x48f1: cmp eax,0xff
0x48f4: jnz 0x4543
0x48fa: cmp [r13+0x0],0x0
0x48ff: jz 0x4543
0x4905: jmp 0x42ca
0x490a: call 0x2950
0x490f: mov [rax],0x5f
0x4915: jmp 0x42ca
0x4d70: push rbp
0x4d71: push rbx
0x4d72: mov rbp,rsi
0x4d75: mov rbx,rdi
0x4d78: sub rsp,0xd8
0x4d7f: test al,al
0x4d81: mov qword ptr [rsp+0x30],rdx
0x4d86: mov qword ptr [rsp+0x38],rcx
0x4d8b: mov qword ptr [rsp+0x40],r8
0x4d90: mov qword ptr [rsp+0x48],r9
0x4d95: jz 0x4dce
0x4d97: movaps [rsp+0x50],xmm0
0x4d9c: movaps [rsp+0x60],xmm1
0x4da1: movaps [rsp+0x70],xmm2
0x4da6: movaps [rsp+0x80],xmm3
0x4dae: movaps [rsp+0x90],xmm4
0x4db6: movaps [rsp+0xa0],xmm5
0x4dbe: movaps [rsp+0xb0],xmm6
0x4dc6: movaps [rsp+0xc0],xmm7
0x4dce: mov rsi,rbx
0x4dd1: mov rax,0x28
0x4dda: mov qword ptr [rsp+0x18],rax
0x4ddf: xor eax,eax
0x4de1: mov rdi,qword ptr [rip+0x21a7d8]
0x4de8: call 0x2cb0
0x4ded: lea rdi,[rip+0x128b2]
0x4df4: mov rcx,rbx
0x4df7: mov edx,0x2
0x4dfc: mov esi,0x1
0x4e01: call 0x2e70
0x4e06: lea rax,[rsp+0xf0]
0x4e0e: mov rdx,rsp
0x4e11: mov rsi,rbp
0x4e14: mov rdi,rbx
0x4e17: mov [rsp],0x10
0x4e1e: mov [rsp+0x4],0x30
0x4e26: mov qword ptr [rsp+0x8],rax
0x4e2b: lea rax,[rsp+0x20]
0x4e30: mov qword ptr [rsp+0x10],rax
0x4e35: call 0x128c0
0x4e3a: mov rax,qword ptr [rbx+0x28]
0x4e3e: cmp rax,qword ptr [rbx+0x30]
0x4e42: jnb 0x4e70
0x4e44: lea rdx,[rax+0x1]
0x4e48: mov qword ptr [rbx+0x28],rdx
0x4e4c: mov [rax],0xa
0x4e4f: mov rax,qword ptr [rsp+0x18]
0x4e54: xor rax,0x28
0x4e5d: jnz 0x4e7f
0x4e5f: add rsp,0xd8
0x4e66: pop rbx
0x4e67: pop rbp
0x4e68: ret
0x4e69: nop qword ptr [rax+0x0]
0x4e70: mov esi,0xa
0x4e75: mov rdi,rbx
0x4e78: call 0x2b90
0x4e7d: jmp 0x4e4f
0x4e7f: call 0x2b30
0x4e90: and esi,0xf000
0x4e96: cmp esi,0xa000
0x4e9c: jz 0x4eb8
0x4e9e: push rbx
0x4e9f: mov rbx,rdi
0x4ea2: call 0x11fd0
0x4ea7: test al,al
0x4ea9: jz 0x4ec0
0x4eab: mov eax,0x1
0x4eb0: pop rbx
0x4eb1: ret
0x4eb2: nop qword ptr [rax+rax*1+0x0]
0x4eb8: mov eax,0x1
0x4ebd: ret
0x4ebe: nop 
0x4ec0: mov rdi,rbx
0x4ec3: mov esi,0x2
0x4ec8: call 0x2fd0
0x4ecd: test eax,eax
0x4ecf: setz al
0x4ed2: pop rbx
0x4ed3: ret
0x4ee0: cmp [rip+0x21a698],0x0
0x4ee8: push r12
0x4eea: mov r12d,edi
0x4eed: push rbp
0x4eee: push rbx
0x4eef: mov rbx,rsi
0x4ef2: jz 0x4f48
0x4ef4: test rbx,rbx
0x4ef7: jnz 0x4f05
0x4ef9: jmp 0x4f38
0x4efb: nop qword ptr [rax+rax*1+0x0]
0x4f00: sub rbx,rax
0x4f03: jz 0x4f38
0x4f05: cmp qword ptr [rip+0x21812c],rbx
0x4f0c: mov rbp,rbx
0x4f0f: mov rsi,qword ptr [rip+0x21a66a]
0x4f16: cmovbe rbp,qword ptr [rip+0x21811a]
0x4f1e: mov edi,r12d
0x4f21: mov rdx,rbp
0x4f24: call 0xb930
0x4f29: cmp rax,rbp
0x4f2c: jz 0x4f00
0x4f2e: pop rbx
0x4f2f: xor eax,eax
0x4f31: pop rbp
0x4f32: pop r12
0x4f34: ret
0x4f35: nop qword ptr [rax]
0x4f38: pop rbx
0x4f39: mov eax,0x1
0x4f3e: pop rbp
0x4f3f: pop r12
0x4f41: ret
0x4f42: nop qword ptr [rax+rax*1+0x0]
0x4f48: mov rdi,qword ptr [rip+0x2180e9]
0x4f4f: mov esi,0x1
0x4f54: call 0x2cd0
0x4f59: test rax,rax
0x4f5c: jz 0x4f67
0x4f5e: mov qword ptr [rip+0x21a61b],rax
0x4f65: jmp 0x4ef4
0x4f67: lea rax,[rip+0x21a212]
0x4f6e: mov [rip+0x2180bf],0x400
0x4f79: mov qword ptr [rip+0x21a600],rax
0x4f80: jmp 0x4ef4
0x4f90: push rbx
0x4f91: mov rcx,rdx
0x4f94: mov rdx,rsi
0x4f97: mov esi,0x3
0x4f9c: call 0x2ca0
0x4fa1: test eax,eax
0x4fa3: mov ebx,eax
0x4fa5: js 0x4fb0
0x4fa7: mov eax,ebx
0x4fa9: pop rbx
0x4faa: ret
0x4fab: nop qword ptr [rax+rax*1+0x0]
0x4fb0: call 0x2950
0x4fb5: mov eax,dword ptr [rax]
0x4fb7: cmp eax,0x26
0x4fba: jz 0x4fc1
0x4fbc: cmp eax,0x5f
0x4fbf: jnz 0x4fa7
0x4fc1: xor ebx,ebx
0x4fc3: mov eax,ebx
0x4fc5: pop rbx
0x4fc6: ret
0x4fd0: push r12
0x4fd2: push rbp
0x4fd3: mov r12,rdi
0x4fd6: push rbx
0x4fd7: mov edi,0x1
0x4fdc: mov rbx,rdx
0x4fdf: mov rdx,rsi
0x4fe2: mov esi,0x4
0x4fe7: call 0xf2d0
0x4fec: xor edi,edi
0x4fee: mov rdx,r12
0x4ff1: mov esi,0x4
0x4ff6: mov rbp,rax
0x4ff9: call 0xf2d0
0x4ffe: lea rsi,[rip+0x12cf4]
0x5005: mov rdx,rax
0x5008: mov rcx,rbp
0x500b: xor eax,eax
0x500d: mov edi,0x1
0x5012: call 0x2ee0
0x5017: test rbx,rbx
0x501a: jz 0x5051
0x501c: mov rsi,rbx
0x501f: mov edi,0x4
0x5024: call 0xf3f0
0x5029: lea rsi,[rip+0x12cd2]
0x5030: mov rbx,rax
0x5033: mov edx,0x5
0x5038: xor edi,edi
0x503a: call 0x2ad0
0x503f: mov rdx,rbx
0x5042: mov rsi,rax
0x5045: mov edi,0x1
0x504a: xor eax,eax
0x504c: call 0x2ee0
0x5051: mov rdi,qword ptr [rip+0x218090]
0x5058: mov rax,qword ptr [rdi+0x28]
0x505c: cmp rax,qword ptr [rdi+0x30]
0x5060: jnb 0x5078
0x5062: lea rdx,[rax+0x1]
0x5066: mov qword ptr [rdi+0x28],rdx
0x506a: mov [rax],0xa
0x506d: pop rbx
0x506e: pop rbp
0x506f: pop r12
0x5071: ret
0x5072: nop qword ptr [rax+rax*1+0x0]
0x5078: pop rbx
0x5079: pop rbp
0x507a: pop r12
0x507c: mov esi,0xa
0x5081: jmp 0x2b90
0x5090: push r13
0x5092: push r12
0x5094: movzx r9d,dl
0x5098: push rbp
0x5099: push rbx
0x509a: mov edx,0xffffff9c
0x509f: mov r13,rdi
0x50a2: mov r12,rsi
0x50a5: mov ebp,ecx
0x50a7: sub rsp,0x10
0x50ab: test r8b,r8b
0x50ae: mov rcx,rsi
0x50b1: setnz r8b
0x50b5: push 0xff
0x50b7: mov rsi,rdi
0x50ba: movzx r8d,r8b
0x50be: mov edi,edx
0x50c0: shl r8d,0xa
0x50c4: call 0xa470
0x50c9: test eax,eax
0x50cb: mov ebx,eax
0x50cd: pop rdx
0x50ce: pop rcx
0x50cf: jnle 0x5138
0x50d1: shr ebx,0x1f
0x50d4: and bl,bpl
0x50d7: jnz 0x50f0
0x50d9: add rsp,0x8
0x50dd: mov ebx,0x1
0x50e2: mov eax,ebx
0x50e4: pop rbx
0x50e5: pop rbp
0x50e6: pop r12
0x50e8: pop r13
0x50ea: ret
0x50eb: nop qword ptr [rax+rax*1+0x0]
0x50f0: mov rsi,r12
0x50f3: mov edi,0x4
0x50f8: call 0xf3f0
0x50fd: lea rsi,[rip+0x12c0c]
0x5104: mov rbp,rax
0x5107: mov edx,0x5
0x510c: xor edi,edi
0x510e: call 0x2ad0
0x5113: mov rdx,rbp
0x5116: mov rsi,rax
0x5119: mov edi,0x1
0x511e: xor eax,eax
0x5120: call 0x2ee0
0x5125: add rsp,0x8
0x5129: mov eax,ebx
0x512b: pop rbx
0x512c: pop rbp
0x512d: pop r12
0x512f: pop r13
0x5131: ret
0x5132: nop qword ptr [rax+rax*1+0x0]
0x5138: mov rdx,r13
0x513b: mov esi,0x4
0x5140: mov edi,0x1
0x5145: call 0xf2d0
0x514a: mov rdx,r12
0x514d: mov esi,0x4
0x5152: xor edi,edi
0x5154: mov r13,rax
0x5157: call 0xf2d0
0x515c: lea rsi,[rip+0x12585]
0x5163: mov rbp,rax
0x5166: mov edx,0x5
0x516b: xor edi,edi
0x516d: call 0x2ad0
0x5172: mov r8,r13
0x5175: mov rcx,rbp
0x5178: mov rdx,rax
0x517b: mov esi,ebx
0x517d: xor eax,eax
0x517f: xor edi,edi
0x5181: call 0x2f30
0x5186: xor ebx,ebx
0x5188: add rsp,0x8
0x518c: mov eax,ebx
0x518e: pop rbx
0x518f: pop rbp
0x5190: pop r12
0x5192: pop r13
0x5194: ret
0x51a0: push r14
0x51a2: push r13
0x51a4: mov r13,rdi
0x51a7: push r12
0x51a9: push rbp
0x51aa: mov rbp,rdx
0x51ad: push rbx
0x51ae: mov rbx,rsi
0x51b1: mov rdi,rbx
0x51b4: sub rsp,0x20
0x51b8: mov esi,dword ptr [rdx]
0x51ba: mov rax,0x28
0x51c3: mov qword ptr [rsp+0x18],rax
0x51c8: xor eax,eax
0x51ca: call 0x4e90
0x51cf: test al,al
0x51d1: jnz 0x5268
0x51d7: mov edi,dword ptr [rbp+0x0]
0x51da: lea r12,[rsp+0xc]
0x51df: mov rsi,r12
0x51e2: call 0xb5f0
0x51e7: mov ebp,dword ptr [rbp+0x0]
0x51ea: mov rsi,rbx
0x51ed: mov edi,0x4
0x51f2: mov [rsp+0x16],0x0
0x51f7: call 0xf3f0
0x51fc: and ebp,0xfff
0x5202: cmp [r13+0x18],0x0
0x5207: mov r14,rax
0x520a: mov rbx,qword ptr [rip+0x21a3af]
0x5211: mov edx,0x5
0x5216: jnz 0x5226
0x5218: test [r13+0x14],0xffff00
0x5220: jz 0x52d0
0x5226: lea rsi,[rip+0x124e3]
0x522d: xor edi,edi
0x522f: call 0x2ad0
0x5234: mov rdx,rax
0x5237: sub rsp,0x8
0x523b: add r12,0x1
0x523f: mov rdi,qword ptr [rip+0x217eda]
0x5246: push r12
0x5248: mov r9,rbp
0x524b: mov r8,r14
0x524e: mov rcx,rbx
0x5251: mov esi,0x1
0x5256: xor eax,eax
0x5258: call 0x3050
0x525d: pop rax
0x525e: pop rdx
0x525f: jmp 0x52ae
0x5261: nop qword ptr [rax+0x0]
0x5268: mov rsi,rbx
0x526b: mov edi,0x4
0x5270: call 0xf3f0
0x5275: lea rsi,[rip+0x12aa0]
0x527c: mov rbx,qword ptr [rip+0x21a33d]
0x5283: mov edx,0x5
0x5288: xor edi,edi
0x528a: mov rbp,rax
0x528d: call 0x2ad0
0x5292: mov rdi,qword ptr [rip+0x217e87]
0x5299: mov rdx,rax
0x529c: mov r8,rbp
0x529f: mov rcx,rbx
0x52a2: mov esi,0x1
0x52a7: xor eax,eax
0x52a9: call 0x3050
0x52ae: call 0x126c0
0x52b3: mov rcx,qword ptr [rsp+0x18]
0x52b8: xor rcx,0x28
0x52c1: jnz 0x52e6
0x52c3: add rsp,0x20
0x52c7: pop rbx
0x52c8: pop rbp
0x52c9: pop r12
0x52cb: pop r13
0x52cd: pop r14
0x52cf: ret
0x52d0: lea rsi,[rip+0x12469]
0x52d7: xor edi,edi
0x52d9: call 0x2ad0
0x52de: mov rdx,rax
0x52e1: jmp 0x5237
0x52e6: call 0x2b30
0x52f0: push r13
0x52f2: push r12
0x52f4: mov r13,rsi
0x52f7: push rbp
0x52f8: push rbx
0x52f9: mov r12d,edx
0x52fc: mov rsi,rcx
0x52ff: mov edx,0x1
0x5304: mov ebp,edi
0x5306: sub rsp,0x8
0x530a: mov rbx,rcx
0x530d: call 0x2bc0
0x5312: test rax,rax
0x5315: js 0x5390
0x5317: test r12b,r12b
0x531a: jnz 0x5330
0x531c: add rsp,0x8
0x5320: mov eax,0x1
0x5325: pop rbx
0x5326: pop rbp
0x5327: pop r12
0x5329: pop r13
0x532b: ret
0x532c: nop qword ptr [rax+0x0]
0x5330: sub rax,rbx
0x5333: mov rdx,rbx
0x5336: mov edi,ebp
0x5338: mov rsi,rax
0x533b: call 0x4f90
0x5340: test eax,eax
0x5342: jns 0x531c
0x5344: mov rsi,r13
0x5347: mov edi,0x4
0x534c: call 0xf3f0
0x5351: lea rsi,[rip+0x129e7]
0x5358: mov rbp,rax
0x535b: mov edx,0x5
0x5360: xor edi,edi
0x5362: call 0x2ad0
0x5367: mov rbx,rax
0x536a: call 0x2950
0x536f: mov esi,dword ptr [rax]
0x5371: mov rcx,rbp
0x5374: mov rdx,rbx
0x5377: xor eax,eax
0x5379: xor edi,edi
0x537b: call 0x2f30
0x5380: add rsp,0x8
0x5384: xor eax,eax
0x5386: pop rbx
0x5387: pop rbp
0x5388: pop r12
0x538a: pop r13
0x538c: ret
0x538d: nop qword ptr [rax]
0x5390: mov rsi,r13
0x5393: mov edi,0x4
0x5398: call 0xf3f0
0x539d: mov edx,0x5
0x53a2: mov rbp,rax
0x53a5: lea rsi,[rip+0x12983]
0x53ac: jmp 0x5360
0x53b0: push r15
0x53b2: push r14
0x53b4: push r13
0x53b6: push r12
0x53b8: push rbp
0x53b9: push rbx
0x53ba: sub rsp,0x78
0x53be: mov rax,qword ptr [rsp+0xb0]
0x53c6: mov rbx,qword ptr [rsp+0xc8]
0x53ce: mov r10,qword ptr [rsp+0xd0]
0x53d6: mov byte ptr [rsp+0x1f],r9b
0x53db: mov qword ptr [rsp+0x58],rax
0x53e0: mov rax,qword ptr [rsp+0xb8]
0x53e8: mov [r10],0x0
0x53ec: mov qword ptr [rsp+0x40],rbx
0x53f1: mov qword ptr [rsp+0x60],r10
0x53f6: mov [rbx],0x0
0x53fd: mov qword ptr [rsp+0x10],rax
0x5402: mov rax,qword ptr [rsp+0xc0]
0x540a: test rax,rax
0x540d: mov qword ptr [rsp+0x28],rax
0x5412: jz 0x57b3
0x5418: test r8,r8
0x541b: mov qword ptr [rsp+0x50],r8
0x5420: mov dword ptr [rsp+0x6c],r9d
0x5425: cmove r8,rcx
0x5429: mov qword ptr [rsp+0x38],rcx
0x542e: mov qword ptr [rsp+0x20],rdx
0x5433: mov dword ptr [rsp+0x18],esi
0x5437: mov dword ptr [rsp+0x68],edi
0x543b: xor r13d,r13d
0x543e: mov qword ptr [rsp+0x48],r8
0x5443: xor r15d,r15d
0x5446: mov rax,qword ptr [rsp+0x38]
0x544b: mov rdx,qword ptr [rsp+0x28]
0x5450: mov rsi,qword ptr [rsp+0x20]
0x5455: mov edi,dword ptr [rsp+0x68]
0x5459: cmp rax,rdx
0x545c: cmovbe rdx,rax
0x5460: call 0x2c80
0x5465: test rax,rax
0x5468: mov qword ptr [rsp+0x30],rax
0x546d: jns 0x54d0
0x546f: call 0x2950
0x5474: cmp [rax],0x4
0x5477: jz 0x5446
0x5479: mov rsi,qword ptr [rsp+0x58]
0x547e: mov edi,0x4
0x5483: mov rbx,rax
0x5486: xor r15d,r15d
0x5489: call 0xf3f0
0x548e: lea rsi,[rip+0x128c0]
0x5495: mov edx,0x5
0x549a: xor edi,edi
0x549c: mov rbp,rax
0x549f: call 0x2ad0
0x54a4: mov esi,dword ptr [rbx]
0x54a6: mov rdx,rax
0x54a9: mov rcx,rbp
0x54ac: xor edi,edi
0x54ae: xor eax,eax
0x54b0: call 0x2f30
0x54b5: add rsp,0x78
0x54b9: mov eax,r15d
0x54bc: pop rbx
0x54bd: pop rbp
0x54be: pop r12
0x54c0: pop r13
0x54c2: pop r14
0x54c4: pop r15
0x54c6: ret
0x54c7: nop qword ptr [rax+rax*1+0x0]
0x54d0: jz 0x55ff
0x54d6: mov rax,qword ptr [rsp+0x40]
0x54db: mov rbp,qword ptr [rsp+0x30]
0x54e0: mov ecx,r15d
0x54e3: mov r14,qword ptr [rsp+0x20]
0x54e8: mov r10,qword ptr [rsp+0x48]
0x54ed: add qword ptr [rax],rbp
0x54f0: cmp [rsp+0x50],0x0
0x54f6: mov r11,r14
0x54f9: mov r15,r10
0x54fc: setnz qword ptr [rsp+0x1d]
0x5501: nop qword ptr [rax+0x0]
0x5508: cmp rbp,r15
0x550b: mov rbx,r15
0x550e: cmovbe rbx,rbp
0x5512: test rbx,rbx
0x5515: setnz r12b
0x5519: and r12b,byte ptr [rsp+0x1d]
0x551e: jz 0x5630
0x5524: mov rsi,r14
0x5527: mov rdx,rbx
0x552a: cmp [rsi],0x0
0x552d: jnz 0x5760
0x5533: add rsi,0x1
0x5537: sub rdx,0x1
0x553b: jz 0x56c8
0x5541: test dl,0xf
0x5544: jnz 0x552a
0x5546: mov rdi,r14
0x5549: mov qword ptr [rsp+0x8],r11
0x554e: mov byte ptr [rsp+0x1e],cl
0x5552: call 0x2c90
0x5557: movzx ecx,byte ptr [rsp+0x1e]
0x555c: test eax,eax
0x555e: mov r11,qword ptr [rsp+0x8]
0x5563: setz r12b
0x5567: mov edx,r12d
0x556a: xor edx,ecx
0x556c: test eax,eax
0x556e: setnz al
0x5571: test r13,r13
0x5574: setnz r9b
0x5578: and r9d,edx
0x557b: cmp rbp,r15
0x557e: jnbe 0x56d8
0x5584: test al,al
0x5586: jz 0x56d8
0x558c: test r9b,r9b
0x558f: jz 0x563a
0x5595: mov r15d,0x1
0x559b: test cl,cl
0x559d: mov byte ptr [rsp+0x1e],cl
0x55a1: jnz 0x5652
0x55a7: mov edi,dword ptr [rsp+0x18]
0x55ab: mov rdx,r13
0x55ae: mov rsi,r11
0x55b1: mov byte ptr [rsp+0x8],r9b
0x55b6: call 0xb930
0x55bb: cmp r13,rax
0x55be: movzx r9d,byte ptr [rsp+0x8]
0x55c4: movzx ecx,byte ptr [rsp+0x1e]
0x55c9: jnz 0x576d
0x55cf: test r15d,r15d
0x55d2: mov r13,rbx
0x55d5: jz 0x56e8
0x55db: test rbx,rbx
0x55de: jnz 0x5700
0x55e4: mov rdi,qword ptr [rsp+0x30]
0x55e9: sub qword ptr [rsp+0x28],rdi
0x55ee: mov r15d,r12d
0x55f1: mov rax,qword ptr [rsp+0x60]
0x55f6: mov byte ptr [rax],r12b
0x55f9: jnz 0x5446
0x55ff: test r15b,r15b
0x5602: jz 0x57b3
0x5608: movzx edx,byte ptr [rsp+0x6c]
0x560d: mov rsi,qword ptr [rsp+0x10]
0x5612: mov rcx,r13
0x5615: mov edi,dword ptr [rsp+0x18]
0x5619: add rsp,0x78
0x561d: pop rbx
0x561e: pop rbp
0x561f: pop r12
0x5621: pop r13
0x5623: pop r14
0x5625: pop r15
0x5627: jmp 0x52f0
0x562c: nop qword ptr [rax+0x0]
0x5630: cmp cl,0x1
0x5633: jz 0x5688
0x5635: cmp rbp,r15
0x5638: jnbe 0x5688
0x563a: add r13,rbx
0x563d: xor r9d,r9d
0x5640: test cl,cl
0x5642: mov r15d,0x1
0x5648: mov byte ptr [rsp+0x1e],cl
0x564c: jz 0x55a7
0x5652: movzx edx,byte ptr [rsp+0x1f]
0x5657: mov rsi,qword ptr [rsp+0x10]
0x565c: mov rcx,r13
0x565f: mov edi,dword ptr [rsp+0x18]
0x5663: mov byte ptr [rsp+0x1e],r9b
0x5668: call 0x52f0
0x566d: test al,al
0x566f: movzx r9d,byte ptr [rsp+0x1e]
0x5675: jnz 0x55cf
0x567b: mov r15d,eax
0x567e: jmp 0x54b5
0x5683: nop qword ptr [rax+rax*1+0x0]
0x5688: test rbx,rbx
0x568b: jnz 0x5698
0x568d: mov r12d,ecx
0x5690: jmp 0x563a
0x5692: mov ecx,r12d
0x5695: nop qword ptr [rax]
0x5698: mov rax,0x9223372036854775807
0x56a2: sub rax,rbx
0x56a5: cmp rax,r13
0x56a8: jb 0x5720
0x56aa: add r13,rbx
0x56ad: add r14,rbx
0x56b0: mov r15,rbx
0x56b3: sub rbp,r15
0x56b6: jnz 0x5508
0x56bc: mov r12d,ecx
0x56bf: jmp 0x55e4
0x56c4: nop qword ptr [rax+0x0]
0x56c8: mov r9d,ecx
0x56cb: xor r9d,0x1
0x56cf: test r13,r13
0x56d2: setnz al
0x56d5: and r9d,eax
0x56d8: test r9b,r9b
0x56db: jz 0x5692
0x56dd: xor r15d,r15d
0x56e0: jmp 0x559b
0x56e5: nop qword ptr [rax]
0x56e8: mov r11,r14
0x56eb: mov ecx,r12d
0x56ee: add r14,rbx
0x56f1: mov r15,rbx
0x56f4: jmp 0x56b3
0x56f6: nop qword ptr [rax+rax*1+0x0]
0x5700: xor r15d,r15d
0x5703: test r9b,r9b
0x5706: mov ecx,r12d
0x5709: mov r11,r14
0x570c: jnz 0x56b3
0x570e: add r14,rbx
0x5711: mov r15,rbx
0x5714: xor r13d,r13d
0x5717: jmp 0x56b3
0x5719: nop qword ptr [rax+0x0]
0x5720: mov rsi,qword ptr [rsp+0x58]
0x5725: mov edi,0x4
0x572a: xor r15d,r15d
0x572d: call 0xf3f0
0x5732: lea rsi,[rip+0x1263e]
0x5739: mov rbx,rax
0x573c: mov edx,0x5
0x5741: xor edi,edi
0x5743: call 0x2ad0
0x5748: mov rcx,rbx
0x574b: mov rdx,rax
0x574e: xor esi,esi
0x5750: xor edi,edi
0x5752: xor eax,eax
0x5754: call 0x2f30
0x5759: jmp 0x54b5
0x575e: nop 
0x5760: mov eax,r12d
0x5763: mov edx,ecx
0x5765: xor r12d,r12d
0x5768: jmp 0x5571
0x576d: mov rsi,qword ptr [rsp+0x10]
0x5772: mov edi,0x4
0x5777: mov r15d,ecx
0x577a: call 0xf3f0
0x577f: lea rsi,[rip+0x125e0]
0x5786: xor edi,edi
0x5788: mov edx,0x5
0x578d: mov rbp,rax
0x5790: call 0x2ad0
0x5795: mov rbx,rax
0x5798: call 0x2950
0x579d: mov esi,dword ptr [rax]
0x579f: mov rcx,rbp
0x57a2: mov rdx,rbx
0x57a5: xor edi,edi
0x57a7: xor eax,eax
0x57a9: call 0x2f30
0x57ae: jmp 0x54b5
0x57b3: mov r15d,0x1
0x57b9: jmp 0x54b5
0x57c0: push r13
0x57c2: push r12
0x57c4: push rbp
0x57c5: push rbx
0x57c6: mov rbp,r8
0x57c9: sub rsp,0x8
0x57cd: cmp [r8+0x25],0x0
0x57d2: jz 0x5840
0x57d4: mov r13,rdi
0x57d7: call 0x2950
0x57dc: cmp [rbp+0x23],0x0
0x57e0: mov r12,rax
0x57e3: jnz 0x5860
0x57e5: mov rsi,r13
0x57e8: mov edi,0x4
0x57ed: mov [r12],0x5f
0x57f5: call 0xf3f0
0x57fa: lea rsi,[rip+0x11f77]
0x5801: mov edx,0x5
0x5806: xor edi,edi
0x5808: mov rbx,rax
0x580b: call 0x2ad0
0x5810: mov esi,dword ptr [r12]
0x5814: mov rcx,rbx
0x5817: mov rdx,rax
0x581a: xor edi,edi
0x581c: xor eax,eax
0x581e: call 0x2f30
0x5823: movzx ebx,byte ptr [rbp+0x26]
0x5827: add rsp,0x8
0x582b: xor ebx,0x1
0x582e: mov eax,ebx
0x5830: pop rbx
0x5831: pop rbp
0x5832: pop r12
0x5834: pop r13
0x5836: ret
0x5837: nop qword ptr [rax+rax*1+0x0]
0x5840: mov ebx,ecx
0x5842: and bl,byte ptr [r8+0x21]
0x5846: jnz 0x5878
0x5848: add rsp,0x8
0x584c: mov ebx,0x1
0x5851: mov eax,ebx
0x5853: pop rbx
0x5854: pop rbp
0x5855: pop r12
0x5857: pop r13
0x5859: ret
0x585a: nop qword ptr [rax+rax*1+0x0]
0x5860: movzx ebx,byte ptr [rbp+0x26]
0x5864: test bl,bl
0x5866: jnz 0x57e5
0x586c: mov [rax],0x5f
0x5872: jmp 0x5827
0x5874: nop qword ptr [rax+0x0]
0x5878: call 0x2950
0x587d: mov [rax],0x5f
0x5883: add rsp,0x8
0x5887: mov eax,ebx
0x5889: pop rbx
0x588a: pop rbp
0x588b: pop r12
0x588d: pop r13
0x588f: ret
0x5890: push r12
0x5892: push rbp
0x5893: mov rbp,rcx
0x5896: push rbx
0x5897: mov r12,rdi
0x589a: call 0x2950
0x589f: cmp [rbp+0x23],0x0
0x58a3: mov rbx,rax
0x58a6: jz 0x58ae
0x58a8: cmp [rbp+0x26],0x0
0x58ac: jz 0x58f8
0x58ae: mov rdx,r12
0x58b1: mov [rbx],0x5f
0x58b7: mov esi,0x4
0x58bc: xor edi,edi
0x58be: call 0xf2d0
0x58c3: lea rsi,[rip+0x11ed6]
0x58ca: mov edx,0x5
0x58cf: xor edi,edi
0x58d1: mov rbp,rax
0x58d4: call 0x2ad0
0x58d9: mov esi,dword ptr [rbx]
0x58db: mov rcx,rbp
0x58de: mov rdx,rax
0x58e1: xor edi,edi
0x58e3: xor eax,eax
0x58e5: call 0x2f30
0x58ea: pop rbx
0x58eb: xor eax,eax
0x58ed: pop rbp
0x58ee: pop r12
0x58f0: ret
0x58f1: nop qword ptr [rax+0x0]
0x58f8: mov [rax],0x5f
0x58fe: xor eax,eax
0x5900: pop rbx
0x5901: pop rbp
0x5902: pop r12
0x5904: ret
0x5910: lea r8,[rip+0x7429]
0x5917: lea rcx,[rip+0x73b2]
0x591e: xor esi,esi
0x5920: lea rdx,[rip+0x7369]
0x5927: push rbx
0x5928: mov rbx,rdi
0x592b: mov edi,0x3d
0x5930: call 0xc220
0x5935: mov qword ptr [rbx+0x40],rax
0x5939: pop rbx
0x593a: ret
0x5940: lea r8,[rip+0x73f9]
0x5947: lea rcx,[rip+0x7382]
0x594e: xor esi,esi
0x5950: lea rdx,[rip+0x7369]
0x5957: push rbx
0x5958: mov rbx,rdi
0x595b: mov edi,0x3d
0x5960: call 0xc220
0x5965: mov qword ptr [rbx+0x48],rax
0x5969: pop rbx
0x596a: ret
0x59b0: push rbx
0x59b1: mov rbx,rdi
0x59b4: call 0x2950
0x59b9: mov edx,dword ptr [rax]
0x59bb: cmp edx,0x1
0x59be: setz al
0x59c1: cmp edx,0x16
0x59c4: setz dl
0x59c7: or al,dl
0x59c9: jz 0x59d2
0x59cb: movzx eax,byte ptr [rbx+0x1a]
0x59cf: xor eax,0x1
0x59d2: pop rbx
0x59d3: ret
0x59e0: push r15
0x59e2: push r14
0x59e4: push r13
0x59e6: push r12
0x59e8: mov r13,rsi
0x59eb: push rbp
0x59ec: push rbx
0x59ed: mov rbp,rdi
0x59f0: mov ebx,edx
0x59f2: sub rsp,0x8
0x59f6: test r8b,r8b
0x59f9: mov r14d,dword ptr [rcx+0x1c]
0x59fd: mov r12d,dword ptr [rcx+0x20]
0x5a01: jnz 0x5a35
0x5a03: mov rax,0x71776119061217535
0x5a0d: test qword ptr [rdi+0x18],rax
0x5a11: jz 0x5ab0
0x5a17: mov esi,dword ptr [r9+0x18]
0x5a1b: mov edx,dword ptr [rcx+0x18]
0x5a1e: mov eax,edx
0x5a20: mov ecx,esi
0x5a22: not eax
0x5a24: and ecx,0xfff
0x5a2a: or ah,0xe
0x5a2d: test eax,ecx
0x5a2f: jnz 0x5b00
0x5a35: cmp ebx,0xff
0x5a38: mov edx,r12d
0x5a3b: mov esi,r14d
0x5a3e: jz 0x5a90
0x5a40: mov edi,ebx
0x5a42: call 0x2f80
0x5a47: test eax,eax
0x5a49: jz 0x5a9c
0x5a4b: call 0x2950
0x5a50: mov r14d,dword ptr [rax]
0x5a53: mov r15,rax
0x5a56: cmp r14d,0x1
0x5a5a: jz 0x5bc8
0x5a60: cmp r14d,0x16
0x5a64: jz 0x5bc8
0x5a6a: mov rdi,rbp
0x5a6d: call 0x59b0
0x5a72: mov edx,eax
0x5a74: xor eax,eax
0x5a76: test dl,dl
0x5a78: jz 0x5b70
0x5a7e: add rsp,0x8
0x5a82: pop rbx
0x5a83: pop rbp
0x5a84: pop r12
0x5a86: pop r13
0x5a88: pop r14
0x5a8a: pop r15
0x5a8c: ret
0x5a8d: nop qword ptr [rax]
0x5a90: mov rdi,r13
0x5a93: call 0x2e40
0x5a98: test eax,eax
0x5a9a: jnz 0x5ad0
0x5a9c: add rsp,0x8
0x5aa0: mov eax,0x1
0x5aa5: pop rbx
0x5aa6: pop rbp
0x5aa7: pop r12
0x5aa9: pop r13
0x5aab: pop r14
0x5aad: pop r15
0x5aaf: ret
0x5ab0: cmp [rdi+0x2b],0x0
0x5ab4: jz 0x5a35
0x5aba: mov esi,dword ptr [r9+0x18]
0x5abe: mov edx,dword ptr [rdi+0x10]
0x5ac1: jmp 0x5a1e
0x5ac6: nop qword ptr [rax+rax*1+0x0]
0x5ad0: call 0x2950
0x5ad5: mov ebx,dword ptr [rax]
0x5ad7: mov r14,rax
0x5ada: cmp ebx,0x1
0x5add: jz 0x5ae8
0x5adf: cmp ebx,0x16
0x5ae2: jnz 0x5a6a
0x5ae8: mov edx,r12d
0x5aeb: mov esi,0xffffffff
0x5af0: mov rdi,r13
0x5af3: call 0x2e40
0x5af8: mov dword ptr [r14],ebx
0x5afb: jmp 0x5a6a
0x5b00: and edx,esi
0x5b02: mov rdi,r13
0x5b05: mov esi,ebx
0x5b07: and edx,0x1c0
0x5b0d: call 0xd9f0
0x5b12: test eax,eax
0x5b14: jz 0x5a35
0x5b1a: call 0x2950
0x5b1f: mov rbx,rax
0x5b22: mov eax,dword ptr [rax]
0x5b24: cmp eax,0x1
0x5b27: jz 0x5be0
0x5b2d: cmp eax,0x16
0x5b30: jz 0x5be0
0x5b36: mov rsi,r13
0x5b39: mov edi,0x4
0x5b3e: call 0xf3f0
0x5b43: lea rsi,[rip+0x12241]
0x5b4a: xor edi,edi
0x5b4c: mov edx,0x5
0x5b51: mov r12,rax
0x5b54: call 0x2ad0
0x5b59: mov esi,dword ptr [rbx]
0x5b5b: mov rdx,rax
0x5b5e: mov rcx,r12
0x5b61: xor edi,edi
0x5b63: xor eax,eax
0x5b65: call 0x2f30
0x5b6a: jmp 0x5bac
0x5b6c: nop qword ptr [rax+0x0]
0x5b70: mov rsi,r13
0x5b73: mov edi,0x4
0x5b78: call 0xf3f0
0x5b7d: lea rsi,[rip+0x11c4c]
0x5b84: mov edx,0x5
0x5b89: xor edi,edi
0x5b8b: mov r12,rax
0x5b8e: call 0x2ad0
0x5b93: mov rbx,rax
0x5b96: call 0x2950
0x5b9b: mov esi,dword ptr [rax]
0x5b9d: mov rcx,r12
0x5ba0: mov rdx,rbx
0x5ba3: xor edi,edi
0x5ba5: xor eax,eax
0x5ba7: call 0x2f30
0x5bac: movzx eax,byte ptr [rbp+0x24]
0x5bb0: add rsp,0x8
0x5bb4: pop rbx
0x5bb5: pop rbp
0x5bb6: pop r12
0x5bb8: neg eax
0x5bba: pop r13
0x5bbc: pop r14
0x5bbe: pop r15
0x5bc0: ret
0x5bc1: nop qword ptr [rax+0x0]
0x5bc8: mov edx,r12d
0x5bcb: mov esi,0xffffffff
0x5bd0: mov edi,ebx
0x5bd2: call 0x2f80
0x5bd7: mov dword ptr [r15],r14d
0x5bda: jmp 0x5a6a
0x5bdf: nop 
0x5be0: cmp [rbp+0x1b],0x0
0x5be4: jnz 0x5b36
0x5bea: jmp 0x5bac
0x5bf0: push rbx
0x5bf1: mov ebx,dword ptr [rip+0x217439]
0x5bf7: cmp ebx,0xff
0x5bfa: jz 0x5c00
0x5bfc: mov eax,ebx
0x5bfe: pop rbx
0x5bff: ret
0x5c00: xor edi,edi
0x5c02: call 0x2d70
0x5c07: mov ebx,eax
0x5c09: mov edi,eax
0x5c0b: mov dword ptr [rip+0x21741f],eax
0x5c11: call 0x2d70
0x5c16: mov eax,ebx
0x5c18: pop rbx
0x5c19: ret
0x5c20: push rbp
0x5c21: mov rbp,rsp
0x5c24: push r15
0x5c26: push r14
0x5c28: push r13
0x5c2a: push r12
0x5c2c: mov r14d,edx
0x5c2f: push rbx
0x5c30: mov rbx,r9
0x5c33: sub rsp,0x398
0x5c3a: mov rax,qword ptr [rbp+0x18]
0x5c3e: mov r13d,dword ptr [rbp+0x10]
0x5c42: mov qword ptr [rbp-0x348],rcx
0x5c49: mov rcx,qword ptr [rbp+0x28]
0x5c4d: mov qword ptr [rbp-0x310],rdi
0x5c54: mov qword ptr [rbp-0x308],rsi
0x5c5b: mov qword ptr [rbp-0x338],rax
0x5c62: mov rax,qword ptr [rbp+0x20]
0x5c66: mov qword ptr [rbp-0x320],rcx
0x5c6d: mov qword ptr [rbp-0x330],r8
0x5c74: mov rcx,0x28
0x5c7d: mov qword ptr [rbp-0x38],rcx
0x5c81: xor ecx,ecx
0x5c83: mov [rax],0x0
0x5c86: movzx r12d,byte ptr [r9+0x18]
0x5c8b: mov qword ptr [rbp-0x340],rax
0x5c92: mov byte ptr [rbp-0x315],r13b
0x5c99: mov r15d,dword ptr [r9+0x34]
0x5c9d: test r12b,r12b
0x5ca0: jz 0x5cc1
0x5ca2: test r15d,r15d
0x5ca5: js 0x5f40
0x5cab: mov rax,qword ptr [rbp-0x320]
0x5cb2: test r15d,r15d
0x5cb5: setz r14b
0x5cb9: test rax,rax
0x5cbc: jz 0x5cc1
0x5cbe: mov byte ptr [rax],r14b
0x5cc1: test r15d,r15d
0x5cc4: jz 0x5f78
0x5cca: cmp r15d,0x11
0x5cce: mov r12,qword ptr [rbp-0x310]
0x5cd5: jz 0x64d8
0x5cdb: cmp [rbx+0x4],0x2
0x5cdf: lea r10,[rbp-0x280]
0x5ce6: mov rsi,r12
0x5ce9: mov edi,0x1
0x5cee: mov rdx,r10
0x5cf1: jz 0x64f0
0x5cf7: call 0x2dd0
0x5cfc: test eax,eax
0x5cfe: mov rsi,r12
0x5d01: setnz al
0x5d04: test al,al
0x5d06: jnz 0x6505
0x5d0c: mov eax,dword ptr [rbp-0x268]
0x5d12: mov dword ptr [rbp-0x314],eax
0x5d18: and eax,0xf000
0x5d1d: cmp eax,0x4000
0x5d22: jz 0x67e8
0x5d28: test r13b,r13b
0x5d2b: jz 0x5d6a
0x5d2d: mov rdi,qword ptr [rbx+0x48]
0x5d31: test rdi,rdi
0x5d34: jz 0x5d6a
0x5d36: mov eax,dword ptr [rbp-0x314]
0x5d3c: lea r10,[rbp-0x280]
0x5d43: and eax,0xf000
0x5d48: cmp eax,0x4000
0x5d4d: jz 0x5d5b
0x5d4f: mov r11d,dword ptr [rbx]
0x5d52: test r11d,r11d
0x5d55: jz 0x6668
0x5d5b: mov rsi,qword ptr [rbp-0x310]
0x5d62: mov rdx,r10
0x5d65: call 0xb500
0x5d6a: mov eax,dword ptr [rbx+0x4]
0x5d6d: mov [rbp-0x328],0x1
0x5d77: cmp eax,0x4
0x5d7a: jz 0x5d8e
0x5d7c: cmp eax,0x3
0x5d7f: setz al
0x5d82: movzx eax,al
0x5d85: and eax,r13d
0x5d88: mov dword ptr [rbp-0x328],eax
0x5d8e: test r14b,r14b
0x5d91: jnz 0x5fa0
0x5d97: cmp r15d,0x11
0x5d9b: jz 0x6700
0x5da1: mov eax,dword ptr [rbp-0x314]
0x5da7: and eax,0xf000
0x5dac: cmp eax,0x8000
0x5db1: jz 0x66a0
0x5db7: cmp eax,0xa000
0x5dbc: mov r8d,0x100
0x5dc2: setz r9b
0x5dc6: cmp eax,0x4000
0x5dcb: setz al
0x5dce: or r9d,eax
0x5dd1: movzx eax,byte ptr [rbx+0x14]
0x5dd5: xor eax,0x1
0x5dd8: or r9b,al
0x5ddb: jz 0x66a0
0x5de1: lea r12,[rbp-0x1f0]
0x5de8: mov rdx,qword ptr [rbp-0x308]
0x5def: mov esi,0xffffff9c
0x5df4: mov edi,0x1
0x5df9: mov byte ptr [rbp-0x350],r9b
0x5e00: mov rcx,r12
0x5e03: call 0x2b80
0x5e08: test eax,eax
0x5e0a: movzx r9d,byte ptr [rbp-0x350]
0x5e12: jnz 0x6490
0x5e18: xor r8d,r8d
0x5e1b: cmp [rbx+0x8],0x2
0x5e1f: jz 0x5e3f
0x5e21: mov rax,qword ptr [rbp-0x1e8]
0x5e28: cmp qword ptr [rbp-0x278],rax
0x5e2f: jz 0x6ff8
0x5e35: cmp [rbx+0x4],0x2
0x5e39: jz 0x71b0
0x5e3f: cmp [rbx+0x2d],0x0
0x5e43: jz 0x6840
0x5e49: mov eax,dword ptr [rbp-0x314]
0x5e4f: and eax,0xf000
0x5e54: cmp eax,0x4000
0x5e59: jz 0x7280
0x5e5f: xor ecx,ecx
0x5e61: cmp [rbx+0x1f],0x0
0x5e65: jz 0x5e85
0x5e67: cmp [rbx+0x18],0x0
0x5e6b: mov ecx,0x1
0x5e70: jz 0x5e85
0x5e72: xor ecx,ecx
0x5e74: mov rax,qword ptr [rbp-0x280]
0x5e7b: cmp qword ptr [rbp-0x1f0],rax
0x5e82: setnz cl
0x5e85: lea r10,[rbp-0x280]
0x5e8c: mov rdi,qword ptr [rbp-0x308]
0x5e93: lea rsi,[rbp-0x1f0]
0x5e9a: mov byte ptr [rbp-0x358],r9b
0x5ea1: mov byte ptr [rbp-0x350],r8b
0x5ea8: mov rdx,r10
0x5eab: call 0x11120
0x5eb0: test eax,eax
0x5eb2: movzx r8d,byte ptr [rbp-0x350]
0x5eba: movzx r9d,byte ptr [rbp-0x358]
0x5ec2: js 0x6e10
0x5ec8: mov rax,qword ptr [rbp-0x320]
0x5ecf: test rax,rax
0x5ed2: jz 0x5ed7
0x5ed4: mov [rax],0x1
0x5ed7: mov rdx,qword ptr [rbp-0x280]
0x5ede: mov rsi,qword ptr [rbp-0x278]
0x5ee5: mov rdi,qword ptr [rbp-0x308]
0x5eec: call 0x9fc0
0x5ef1: test rax,rax
0x5ef4: jz 0x6460
0x5efa: movzx ecx,byte ptr [rbx+0x2e]
0x5efe: mov r8d,dword ptr [rbp-0x328]
0x5f05: mov edx,0x1
0x5f0a: mov rsi,qword ptr [rbp-0x308]
0x5f11: mov rdi,rax
0x5f14: call 0x5090
0x5f19: test al,al
0x5f1b: jnz 0x6460
0x5f21: cmp [rbx+0x25],0x0
0x5f25: jnz 0x6d30
0x5f2b: nop qword ptr [rax+rax*1+0x0]
0x5f30: xor r12d,r12d
0x5f33: jmp 0x6466
0x5f38: nop qword ptr [rax+rax*1+0x0]
0x5f40: mov edx,0xffffff9c
0x5f45: mov rcx,rsi
0x5f48: mov r8d,0x1
0x5f4e: mov rsi,rdi
0x5f51: mov edi,edx
0x5f53: call 0xf6e0
0x5f58: test eax,eax
0x5f5a: jnz 0x6ad0
0x5f60: mov rax,qword ptr [rbp-0x320]
0x5f67: mov r14d,r12d
0x5f6a: test rax,rax
0x5f6d: jz 0x5f78
0x5f6f: mov [rax],0x1
0x5f72: nop qword ptr [rax+rax*1+0x0]
0x5f78: cmp [rbx+0x31],0x0
0x5f7c: jnz 0x5f90
0x5f7e: mov r12,qword ptr [rbp-0x308]
0x5f85: xor r15d,r15d
0x5f88: jmp 0x5cdb
0x5f8d: nop qword ptr [rax]
0x5f90: xor r15d,r15d
0x5f93: jmp 0x5d28
0x5f98: nop qword ptr [rax+rax*1+0x0]
0x5fa0: xor r9d,r9d
0x5fa3: mov [rbp-0x350],0x0
0x5fae: test r13b,r13b
0x5fb1: jz 0x6070
0x5fb7: cmp [rbx+0x40],0x0
0x5fbc: jz 0x6070
0x5fc2: movzx r12d,byte ptr [rbx+0x18]
0x5fc7: test r12b,r12b
0x5fca: jnz 0x6070
0x5fd0: mov edx,dword ptr [rbx]
0x5fd2: test edx,edx
0x5fd4: jnz 0x6c58
0x5fda: test r9b,r9b
0x5fdd: lea rdx,[rbp-0x1f0]
0x5fe4: jz 0x7860
0x5fea: mov eax,dword ptr [rdx+0x18]
0x5fed: and eax,0xf000
0x5ff2: cmp eax,0xa000
0x5ff7: jnz 0x6070
0x5ff9: mov rdi,qword ptr [rbx+0x40]
0x5ffd: mov rsi,qword ptr [rbp-0x308]
0x6004: call 0xb590
0x6009: test al,al
0x600b: jz 0x6070
0x600d: mov rdx,qword ptr [rbp-0x308]
0x6014: mov esi,0x4
0x6019: mov edi,0x1
0x601e: call 0xf2d0
0x6023: mov rdx,qword ptr [rbp-0x310]
0x602a: xor edi,edi
0x602c: mov esi,0x4
0x6031: mov r13,rax
0x6034: call 0xf2d0
0x6039: lea rsi,[rip+0x11960]
0x6040: mov rbx,rax
0x6043: xor edi,edi
0x6045: mov edx,0x5
0x604a: call 0x2ad0
0x604f: mov r8,r13
0x6052: mov rdx,rax
0x6055: mov rcx,rbx
0x6058: xor esi,esi
0x605a: xor edi,edi
0x605c: xor eax,eax
0x605e: call 0x2f30
0x6063: jmp 0x6466
0x6068: nop qword ptr [rax+rax*1+0x0]
0x6070: cmp [rbx+0x2e],0x0
0x6074: jz 0x6080
0x6076: cmp [rbx+0x18],0x0
0x607a: jz 0x6630
0x6080: test r15d,r15d
0x6083: jz 0x6420
0x6089: cmp [rbx+0x2a],0x0
0x608d: jz 0x60a5
0x608f: mov eax,dword ptr [rbp-0x314]
0x6095: and eax,0xf000
0x609a: cmp eax,0x4000
0x609f: jz 0x6c70
0x60a5: movzx eax,byte ptr [rbx+0x18]
0x60a9: test al,al
0x60ab: jnz 0x6550
0x60b1: cmp [rbx+0x22],0x0
0x60b5: jnz 0x7c90
0x60bb: movzx eax,r14b
0x60bf: mov [rbp-0x358],0x0
0x60ca: mov dword ptr [rbp-0x320],eax
0x60d0: mov r12d,dword ptr [rbp-0x314]
0x60d7: and r12d,0xfff
0x60de: cmp [rbx+0x2b],0x0
0x60e2: jz 0x60ef
0x60e4: mov r12d,dword ptr [rbx+0x10]
0x60e8: and r12d,0xfff
0x60ef: cmp [rbx+0x1d],0x0
0x60f3: jnz 0x6718
0x60f9: mov r15d,dword ptr [rbp-0x314]
0x6100: and r15d,0xf000
0x6107: cmp r15d,0x4000
0x610e: jz 0x6f50
0x6114: mov ecx,dword ptr [rbp-0x320]
0x611a: mov edx,dword ptr [rbp-0x314]
0x6120: mov r8,rbx
0x6123: mov rsi,qword ptr [rbp-0x308]
0x612a: mov rdi,qword ptr [rbp-0x310]
0x6131: call 0x57c0
0x6136: test al,al
0x6138: mov [rbp-0x35c],0x0
0x6142: jz 0x5f30
0x6148: movzx eax,byte ptr [rbx+0x2c]
0x614c: test al,al
0x614e: mov byte ptr [rbp-0x320],al
0x6154: jnz 0x6ae0
0x615a: cmp [rbx+0x17],0x0
0x615e: jz 0x74a8
0x6164: cmp [rbx+0x16],0x0
0x6168: mov edx,0x1
0x616d: jnz 0x6178
0x616f: xor edx,edx
0x6171: cmp [rbx+0x8],0x3
0x6175: setz dl
0x6178: mov r8d,dword ptr [rbp-0x328]
0x617f: mov rsi,qword ptr [rbp-0x308]
0x6186: xor ecx,ecx
0x6188: mov rdi,qword ptr [rbp-0x310]
0x618f: call 0x5090
0x6194: test al,al
0x6196: jz 0x6bb0
0x619c: xor r8d,r8d
0x619f: cmp r15d,0x4000
0x61a6: setnz r15b
0x61aa: test r14b,r14b
0x61ad: jnz 0x61c2
0x61af: movzx eax,byte ptr [rbx+0x14]
0x61b3: xor eax,0x1
0x61b6: and al,r15b
0x61b9: mov r12d,eax
0x61bc: jnz 0x7ef0
0x61c2: test r13b,r13b
0x61c5: mov r12d,0x1
0x61cb: jz 0x6222
0x61cd: mov [rbp-0x330],0x0
0x61d4: cmp [rbx+0x40],0x0
0x61d9: jz 0x620d
0x61db: lea r12,[rbp-0xd0]
0x61e2: mov rsi,qword ptr [rbp-0x308]
0x61e9: mov edi,0x1
0x61ee: mov byte ptr [rbp-0x328],r8b
0x61f5: mov rdx,r12
0x61f8: call 0x2b00
0x61fd: test eax,eax
0x61ff: movzx r8d,byte ptr [rbp-0x328]
0x6207: jz 0x8252
0x620d: movzx eax,byte ptr [rbp-0x330]
0x6214: movzx r12d,byte ptr [rbp-0x315]
0x621c: mov byte ptr [rbp-0x315],al
0x6222: cmp [rbx+0x17],0x0
0x6226: jz 0x6231
0x6228: test r15b,r15b
0x622b: jnz 0x6466
0x6231: test r8b,r8b
0x6234: jnz 0x6466
0x623a: cmp [rbx+0x1f],0x0
0x623e: jz 0x62f8
0x6244: mov rax,qword ptr [rbp-0x238]
0x624b: cmp [rbp-0x320],0x0
0x6252: lea rsi,[rbp-0xd0]
0x6259: mov rdi,qword ptr [rbp-0x308]
0x6260: mov qword ptr [rbp-0xd0],rax
0x6267: mov rax,qword ptr [rbp-0x230]
0x626e: mov qword ptr [rbp-0xc8],rax
0x6275: mov rax,qword ptr [rbp-0x228]
0x627c: mov qword ptr [rbp-0xc0],rax
0x6283: mov rax,qword ptr [rbp-0x220]
0x628a: mov qword ptr [rbp-0xb8],rax
0x6291: jz 0x8240
0x6297: call 0x11750
0x629c: test eax,eax
0x629e: jz 0x62f8
0x62a0: call 0x2950
0x62a5: cmp [rax],0x26
0x62a8: jz 0x62f8
0x62aa: mov rsi,qword ptr [rbp-0x308]
0x62b1: mov edi,0x4
0x62b6: call 0xf3f0
0x62bb: lea rsi,[rip+0x11c2c]
0x62c2: xor edi,edi
0x62c4: mov edx,0x5
0x62c9: mov r13,rax
0x62cc: call 0x2ad0
0x62d1: mov r15,rax
0x62d4: call 0x2950
0x62d9: mov esi,dword ptr [rax]
0x62db: xor edi,edi
0x62dd: xor eax,eax
0x62df: mov rcx,r13
0x62e2: mov rdx,r15
0x62e5: call 0x2f30
0x62ea: cmp [rbx+0x24],0x0
0x62ee: jnz 0x5f30
0x62f4: nop qword ptr [rax+0x0]
0x62f8: cmp [rbp-0x320],0x0
0x62ff: jnz 0x6466
0x6305: cmp [rbx+0x1d],0x0
0x6309: jz 0x6367
0x630b: test r14b,r14b
0x630e: jnz 0x6322
0x6310: mov eax,dword ptr [rbp-0x1d4]
0x6316: cmp dword ptr [rbp-0x264],eax
0x631c: jz 0x89ca
0x6322: mov rsi,qword ptr [rbp-0x308]
0x6329: lea rcx,[rbp-0x280]
0x6330: lea r9,[rbp-0x1f0]
0x6337: movzx r8d,r14b
0x633b: mov edx,0xffffffff
0x6340: mov rdi,rbx
0x6343: call 0x59e0
0x6348: cmp eax,0xff
0x634b: jz 0x5f30
0x6351: mov ecx,dword ptr [rbp-0x314]
0x6357: mov edx,ecx
0x6359: and dh,0xf1
0x635c: test eax,eax
0x635e: cmovne edx,ecx
0x6361: mov dword ptr [rbp-0x314],edx
0x6367: mov rax,0x71776119061217535
0x6371: test qword ptr [rbx+0x18],rax
0x6375: jnz 0x8410
0x637b: cmp [rbx+0x2b],0x0
0x637f: jnz 0x8775
0x6385: test byte ptr [rbx+0x20],r14b
0x6389: jnz 0x8a29
0x638f: mov eax,dword ptr [rbp-0x35c]
0x6395: test eax,eax
0x6397: jnz 0x89e1
0x639d: cmp [rbp-0x315],0x0
0x63a4: jz 0x6466
0x63aa: mov esi,dword ptr [rbp-0x38c]
0x63b0: or esi,dword ptr [rbp-0x35c]
0x63b6: mov rdi,qword ptr [rbp-0x308]
0x63bd: call 0x2f10
0x63c2: test eax,eax
0x63c4: jz 0x6466
0x63ca: mov rsi,qword ptr [rbp-0x308]
0x63d1: mov edi,0x4
0x63d6: call 0xf3f0
0x63db: lea rsi,[rip+0x11b24]
0x63e2: mov edx,0x5
0x63e7: xor edi,edi
0x63e9: mov r14,rax
0x63ec: call 0x2ad0
0x63f1: mov r13,rax
0x63f4: call 0x2950
0x63f9: mov esi,dword ptr [rax]
0x63fb: mov rcx,r14
0x63fe: mov rdx,r13
0x6401: xor edi,edi
0x6403: xor eax,eax
0x6405: call 0x2f30
0x640a: cmp [rbx+0x24],0x0
0x640e: jnz 0x5f30
0x6414: jmp 0x6466
0x6416: nop qword ptr [rax+rax*1+0x0]
0x6420: cmp [rbx+0x18],0x0
0x6424: jz 0x60bb
0x642a: cmp [rbx+0x2e],0x0
0x642e: jnz 0x6fb0
0x6434: cmp [rbx+0x21],0x0
0x6438: jnz 0x6f90
0x643e: mov rax,qword ptr [rbp-0x320]
0x6445: test rax,rax
0x6448: jz 0x644d
0x644a: mov [rax],0x1
0x644d: test r13b,r13b
0x6450: jz 0x6460
0x6452: cmp [rbx+0x31],0x0
0x6456: jz 0x6ec8
0x645c: nop qword ptr [rax+0x0]
0x6460: mov r12d,0x1
0x6466: mov rsi,qword ptr [rbp-0x38]
0x646a: xor rsi,0x28
0x6473: mov eax,r12d
0x6476: jnz 0x9144
0x647c: lea rsp,[rbp-0x28]
0x6480: pop rbx
0x6481: pop r12
0x6483: pop r13
0x6485: pop r14
0x6487: pop r15
0x6489: pop rbp
0x648a: ret
0x648b: nop qword ptr [rax+rax*1+0x0]
0x6490: call 0x2950
0x6495: mov r9,rax
0x6498: mov eax,dword ptr [rax]
0x649a: cmp eax,0x28
0x649d: jz 0x6a70
0x64a3: cmp eax,0x2
0x64a6: mov r8d,0x1
0x64ac: jnz 0x6a7a
0x64b2: xor r9d,r9d
0x64b5: cmp r15d,0x11
0x64b9: jz 0x5e1b
0x64bf: mov r14d,r8d
0x64c2: mov [rbp-0x350],0x0
0x64cd: jmp 0x5fae
0x64d2: nop qword ptr [rax+rax*1+0x0]
0x64d8: cmp [rbx+0x8],0x2
0x64dc: jz 0x5d28
0x64e2: jmp 0x5cdb
0x64e7: nop qword ptr [rax+rax*1+0x0]
0x64f0: call 0x2b00
0x64f5: test eax,eax
0x64f7: mov rsi,r12
0x64fa: setnz al
0x64fd: test al,al
0x64ff: jz 0x5d0c
0x6505: mov edi,0x4
0x650a: call 0xf3f0
0x650f: lea rsi,[rip+0xfedf]
0x6516: mov r12,rax
0x6519: mov edx,0x5
0x651e: xor edi,edi
0x6520: call 0x2ad0
0x6525: mov rbx,rax
0x6528: call 0x2950
0x652d: mov esi,dword ptr [rax]
0x652f: mov rcx,r12
0x6532: mov rdx,rbx
0x6535: xor edi,edi
0x6537: xor eax,eax
0x6539: xor r12d,r12d
0x653c: call 0x2f30
0x6541: jmp 0x6466
0x6546: nop qword ptr [rax+rax*1+0x0]
0x6550: cmp [rbp-0x270],0x1
0x6558: jz 0x7588
0x655e: cmp [rbx+0x22],0x0
0x6562: mov [rbp-0x358],0x0
0x656d: jz 0x6579
0x656f: cmp [rbx+0x17],0x0
0x6573: jz 0x6d38
0x6579: cmp r15d,0x11
0x657d: jnz 0x65ab
0x657f: mov rsi,qword ptr [rbp-0x308]
0x6586: mov rdi,qword ptr [rbp-0x310]
0x658d: call 0x2fa0
0x6592: test eax,eax
0x6594: jz 0x642a
0x659a: call 0x2950
0x659f: mov r15d,dword ptr [rax]
0x65a2: test r15d,r15d
0x65a5: jz 0x642a
0x65ab: cmp r15d,0x16
0x65af: jz 0x75d0
0x65b5: cmp r15d,0x12
0x65b9: jnz 0x6d88
0x65bf: mov r12d,dword ptr [rbp-0x314]
0x65c6: mov rdi,qword ptr [rbp-0x308]
0x65cd: and r12d,0xf000
0x65d4: cmp r12d,0x4000
0x65db: jz 0x7640
0x65e1: call 0x2960
0x65e6: test eax,eax
0x65e8: jz 0x65fb
0x65ea: call 0x2950
0x65ef: cmp [rax],0x2
0x65f2: mov r14,rax
0x65f5: jnz 0x765e
0x65fb: cmp r12d,0x4000
0x6602: setnz dl
0x6605: and dl,byte ptr [rbx+0x2e]
0x6608: mov r14d,edx
0x660b: jnz 0x7f50
0x6611: mov [rbp-0x320],0x1
0x661b: mov r14d,0x1
0x6621: jmp 0x60d0
0x6626: nop qword ptr [rax+rax*1+0x0]
0x6630: mov eax,dword ptr [rbp-0x314]
0x6636: and eax,0xf000
0x663b: cmp eax,0x4000
0x6640: jz 0x6080
0x6646: mov rdx,qword ptr [rbp-0x350]
0x664d: mov rsi,qword ptr [rbp-0x308]
0x6654: mov rdi,qword ptr [rbp-0x310]
0x665b: call 0x4fd0
0x6660: jmp 0x6080
0x6665: nop qword ptr [rax]
0x6668: mov rsi,qword ptr [rbp-0x310]
0x666f: mov rdx,r10
0x6672: mov qword ptr [rbp-0x328],r10
0x6679: call 0xb590
0x667e: test al,al
0x6680: mov r12d,eax
0x6683: jnz 0x7548
0x6689: mov rdi,qword ptr [rbx+0x48]
0x668d: mov r10,qword ptr [rbp-0x328]
0x6694: jmp 0x5d5b
0x6699: nop qword ptr [rax+0x0]
0x66a0: movzx r9d,byte ptr [rbx+0x18]
0x66a5: mov r8d,0x100
0x66ab: test r9b,r9b
0x66ae: jnz 0x5de1
0x66b4: movzx r9d,byte ptr [rbx+0x2c]
0x66b9: test r9b,r9b
0x66bc: jnz 0x5de1
0x66c2: movzx r9d,byte ptr [rbx+0x17]
0x66c7: test r9b,r9b
0x66ca: jnz 0x5de1
0x66d0: mov r10d,dword ptr [rbx]
0x66d3: mov r9d,0x1
0x66d9: test r10d,r10d
0x66dc: jnz 0x5de1
0x66e2: movzx r9d,byte ptr [rbx+0x15]
0x66e7: xor r8d,r8d
0x66ea: test r9b,r9b
0x66ed: setnz r8b
0x66f1: shl r8d,0x8
0x66f5: jmp 0x5de1
0x66fa: nop qword ptr [rax+rax*1+0x0]
0x6700: cmp [rbx+0x8],0x2
0x6704: jnz 0x5da1
0x670a: xor r8d,r8d
0x670d: xor r9d,r9d
0x6710: jmp 0x5e3f
0x6715: nop qword ptr [rax]
0x6718: mov ecx,dword ptr [rbp-0x320]
0x671e: mov edx,dword ptr [rbp-0x314]
0x6724: mov r8,rbx
0x6727: mov rsi,qword ptr [rbp-0x308]
0x672e: mov rdi,qword ptr [rbp-0x310]
0x6735: call 0x57c0
0x673a: test al,al
0x673c: jz 0x5f30
0x6742: mov r15d,dword ptr [rbp-0x314]
0x6749: mov eax,r12d
0x674c: and eax,0x3f
0x674f: mov dword ptr [rbp-0x35c],eax
0x6755: and r15d,0xf000
0x675c: cmp r15d,0x4000
0x6763: jnz 0x6148
0x6769: mov rax,qword ptr [rbp-0x330]
0x6770: mov rdx,qword ptr [rbp-0x278]
0x6777: mov rcx,qword ptr [rbp-0x280]
0x677e: test rax,rax
0x6781: jnz 0x679c
0x6783: jmp 0x7080
0x6788: nop qword ptr [rax+rax*1+0x0]
0x6790: mov rax,qword ptr [rax]
0x6793: test rax,rax
0x6796: jz 0x7080
0x679c: cmp qword ptr [rax+0x8],rdx
0x67a0: jnz 0x6790
0x67a2: cmp qword ptr [rax+0x10],rcx
0x67a6: jnz 0x6790
0x67a8: mov rsi,qword ptr [rbp-0x310]
0x67af: mov edi,0x4
0x67b4: call 0xf3f0
0x67b9: lea rsi,[rip+0x113c8]
0x67c0: mov r12,rax
0x67c3: mov edx,0x5
0x67c8: xor edi,edi
0x67ca: call 0x2ad0
0x67cf: mov rcx,r12
0x67d2: mov rdx,rax
0x67d5: xor esi,esi
0x67d7: xor edi,edi
0x67d9: xor eax,eax
0x67db: call 0x2f30
0x67e0: jmp 0x6bb0
0x67e5: nop qword ptr [rax]
0x67e8: movzx r12d,byte ptr [rbx+0x2a]
0x67ed: test r12b,r12b
0x67f0: jnz 0x5d28
0x67f6: mov rsi,qword ptr [rbp-0x310]
0x67fd: mov edi,0x4
0x6802: call 0xf3f0
0x6807: cmp [rbx+0x19],0x0
0x680b: mov r13,rax
0x680e: mov edx,0x5
0x6813: jnz 0x75b0
0x6819: lea rsi,[rip+0x10fd8]
0x6820: xor edi,edi
0x6822: call 0x2ad0
0x6827: mov rdx,rax
0x682a: mov rcx,r13
0x682d: xor esi,esi
0x682f: xor edi,edi
0x6831: xor eax,eax
0x6833: call 0x2f30
0x6838: jmp 0x6466
0x683d: nop qword ptr [rax]
0x6840: cmp [rbx+0x18],0x0
0x6844: jnz 0x6e20
0x684a: mov eax,dword ptr [rbp-0x314]
0x6850: and eax,0xf000
0x6855: cmp eax,0x4000
0x685a: jz 0x68b0
0x685c: mov eax,dword ptr [rbx+0x8]
0x685f: cmp eax,0x2
0x6862: jz 0x6460
0x6868: cmp eax,0x3
0x686b: jnz 0x68b0
0x686d: mov rsi,qword ptr [rbp-0x308]
0x6874: lea rdx,[rbp-0x1d8]
0x687b: mov rdi,rbx
0x687e: mov byte ptr [rbp-0x358],r9b
0x6885: mov byte ptr [rbp-0x350],r8b
0x688c: call 0x51a0
0x6891: test al,al
0x6893: movzx r8d,byte ptr [rbp-0x350]
0x689b: movzx r9d,byte ptr [rbp-0x358]
0x68a3: jz 0x6460
0x68a9: nop qword ptr [rax+0x0]
0x68b0: test r14b,r14b
0x68b3: jnz 0x6460
0x68b9: mov eax,dword ptr [rbp-0x1d8]
0x68bf: mov r12d,dword ptr [rbp-0x314]
0x68c6: mov edx,eax
0x68c8: and r12d,0xf000
0x68cf: and edx,0xf000
0x68d5: cmp edx,0x4000
0x68db: jz 0x6ef0
0x68e1: cmp r12d,0x4000
0x68e8: jz 0x7b88
0x68ee: test r13b,r13b
0x68f1: mov r15d,dword ptr [rbx]
0x68f4: jz 0x7413
0x68fa: cmp r15d,0x3
0x68fe: jnz 0x73b0
0x6904: cmp [rbx+0x18],0x0
0x6908: jnz 0x7ba7
0x690e: mov rdi,qword ptr [rbp-0x310]
0x6915: mov byte ptr [rbp-0x358],r9b
0x691c: mov byte ptr [rbp-0x350],r8b
0x6923: call 0xb3a0
0x6928: cmp [rax],0x2e
0x692b: mov r14,rax
0x692e: movzx r8d,byte ptr [rbp-0x350]
0x6936: movzx r9d,byte ptr [rbp-0x358]
0x693e: jnz 0x6967
0x6940: xor eax,eax
0x6942: xor edx,edx
0x6944: cmp [r14+0x1],0x2e
0x6949: setz dl
0x694c: movzx edx,byte ptr [r14+rdx*1+0x1]
0x6952: test dl,dl
0x6954: jz 0x7428
0x695a: cmp dl,0x2f
0x695d: jz 0x7428
0x6963: test al,al
0x6965: jnz 0x697d
0x6967: mov eax,dword ptr [rbp-0x1d8]
0x696d: and eax,0xf000
0x6972: cmp eax,0x4000
0x6977: jz 0x7447
0x697d: cmp r15d,0x3
0x6981: jz 0x69e9
0x6983: mov rdi,r14
0x6986: mov byte ptr [rbp-0x35c],r9b
0x698d: call 0x2af0
0x6992: mov rdi,qword ptr [rbp-0x308]
0x6999: mov qword ptr [rbp-0x350],rax
0x69a0: call 0xb3a0
0x69a5: mov rdi,rax
0x69a8: mov qword ptr [rbp-0x358],rax
0x69af: call 0x2af0
0x69b4: mov r15,qword ptr [rip+0x218be5]
0x69bb: mov r12,rax
0x69be: mov rdi,r15
0x69c1: call 0x2af0
0x69c6: mov r8,rax
0x69c9: lea rax,[r12+rax*1+0x0]
0x69cd: cmp qword ptr [rbp-0x350],rax
0x69d4: mov rsi,qword ptr [rbp-0x358]
0x69db: movzx r9d,byte ptr [rbp-0x35c]
0x69e3: jz 0x843e
0x69e9: mov edx,dword ptr [rbx]
0x69eb: mov rsi,qword ptr [rbp-0x308]
0x69f2: mov edi,0xffffff9c
0x69f7: mov byte ptr [rbp-0x350],r9b
0x69fe: call 0xaf80
0x6a03: test rax,rax
0x6a06: mov r12,rax
0x6a09: movzx r9d,byte ptr [rbp-0x350]
0x6a11: jz 0x8331
0x6a17: mov rdi,rax
0x6a1a: mov byte ptr [rbp-0x358],r9b
0x6a21: mov r14d,0x1
0x6a27: call 0x2af0
0x6a2c: lea rdx,[rax+0x1]
0x6a30: add rax,0x1f
0x6a34: mov rsi,r12
0x6a37: and rax,0xfffffff0
0x6a3b: mov r15d,0x11
0x6a41: sub rsp,rax
0x6a44: lea rdi,[rsp+0xf]
0x6a49: and rdi,0xfffffff0
0x6a4d: call 0x2d80
0x6a52: mov rdi,r12
0x6a55: mov qword ptr [rbp-0x350],rax
0x6a5c: call 0x30d0
0x6a61: movzx r9d,byte ptr [rbp-0x358]
0x6a69: jmp 0x5fae
0x6a6e: nop 
0x6a70: cmp [rbx+0x16],0x0
0x6a74: jnz 0x6e00
0x6a7a: mov rsi,qword ptr [rbp-0x308]
0x6a81: mov edi,0x4
0x6a86: mov qword ptr [rbp-0x310],r9
0x6a8d: xor r12d,r12d
0x6a90: call 0xf3f0
0x6a95: lea rsi,[rip+0xf959]
0x6a9c: mov edx,0x5
0x6aa1: xor edi,edi
0x6aa3: mov rbx,rax
0x6aa6: call 0x2ad0
0x6aab: mov r9,qword ptr [rbp-0x310]
0x6ab2: mov rdx,rax
0x6ab5: mov rcx,rbx
0x6ab8: xor edi,edi
0x6aba: xor eax,eax
0x6abc: mov esi,dword ptr [r9]
0x6abf: call 0x2f30
0x6ac4: jmp 0x6466
0x6ac9: nop qword ptr [rax+0x0]
0x6ad0: call 0x2950
0x6ad5: mov r15d,dword ptr [rax]
0x6ad8: jmp 0x5cab
0x6add: nop qword ptr [rax]
0x6ae0: mov rax,qword ptr [rbp-0x310]
0x6ae7: cmp [rax],0x2f
0x6aea: jz 0x6b24
0x6aec: mov rdi,qword ptr [rbp-0x308]
0x6af3: call 0xb2c0
0x6af8: lea r8,[rip+0x11364]
0x6aff: mov rdi,rax
0x6b02: mov ecx,0x2
0x6b07: mov r12,rax
0x6b0a: mov rsi,r8
0x6b0d: rep cmpsb ds:[rsi],es:[rdi]
0x6b0f: setnbe al
0x6b12: sbb al,0x0
0x6b14: test al,al
0x6b16: jnz 0x7df8
0x6b1c: mov rdi,r12
0x6b1f: call 0x30d0
0x6b24: movzx ecx,byte ptr [rbx+0x16]
0x6b28: mov rdx,qword ptr [rbp-0x308]
0x6b2f: mov r8d,0xffffffff
0x6b35: mov rdi,qword ptr [rbp-0x310]
0x6b3c: mov esi,0xffffff9c
0x6b41: call 0xa5e0
0x6b46: xor r8d,r8d
0x6b49: test eax,eax
0x6b4b: mov r12d,eax
0x6b4e: jle 0x619f
0x6b54: mov rdx,qword ptr [rbp-0x310]
0x6b5b: mov esi,0x4
0x6b60: mov edi,0x1
0x6b65: call 0xf2d0
0x6b6a: mov rdx,qword ptr [rbp-0x308]
0x6b71: mov esi,0x4
0x6b76: xor edi,edi
0x6b78: mov r13,rax
0x6b7b: call 0xf2d0
0x6b80: lea rsi,[rip+0x10f59]
0x6b87: mov r14,rax
0x6b8a: mov edx,0x5
0x6b8f: xor edi,edi
0x6b91: call 0x2ad0
0x6b96: mov r8,r13
0x6b99: mov rdx,rax
0x6b9c: mov rcx,r14
0x6b9f: mov esi,r12d
0x6ba2: xor edi,edi
0x6ba4: xor eax,eax
0x6ba6: call 0x2f30
0x6bab: nop qword ptr [rax+rax*1+0x0]
0x6bb0: cmp [rbx+0x25],0x0
0x6bb4: jnz 0x6d30
0x6bba: cmp [rbp-0x358],0x0
0x6bc2: jz 0x7460
0x6bc8: mov rax,qword ptr [rbp-0x350]
0x6bcf: test rax,rax
0x6bd2: jz 0x5f30
0x6bd8: mov rsi,qword ptr [rbp-0x308]
0x6bdf: mov rdi,rax
0x6be2: call 0x2fa0
0x6be7: test eax,eax
0x6be9: jnz 0x7480
0x6bef: cmp [rbx+0x2e],0x0
0x6bf3: jz 0x5f30
0x6bf9: mov rdx,qword ptr [rbp-0x308]
0x6c00: mov esi,0x4
0x6c05: mov edi,0x1
0x6c0a: call 0xf2d0
0x6c0f: mov rdx,qword ptr [rbp-0x350]
0x6c16: xor edi,edi
0x6c18: mov esi,0x4
0x6c1d: mov r12,rax
0x6c20: call 0xf2d0
0x6c25: lea rsi,[rip+0x11389]
0x6c2c: mov rbx,rax
0x6c2f: xor edi,edi
0x6c31: mov edx,0x5
0x6c36: call 0x2ad0
0x6c3b: mov rcx,r12
0x6c3e: mov rsi,rax
0x6c41: mov rdx,rbx
0x6c44: mov edi,0x1
0x6c49: xor eax,eax
0x6c4b: call 0x2ee0
0x6c50: jmp 0x5f30
0x6c55: nop qword ptr [rax]
0x6c58: cmp [rbx+0x2e],0x0
0x6c5c: jnz 0x6630
0x6c62: test r15d,r15d
0x6c65: jz 0x60bb
0x6c6b: jmp 0x6089
0x6c70: test r13b,r13b
0x6c73: mov rdx,qword ptr [rbp-0x280]
0x6c7a: mov rdi,qword ptr [rbp-0x278]
0x6c81: jz 0x7530
0x6c87: mov rsi,rdi
0x6c8a: mov rdi,qword ptr [rbp-0x308]
0x6c91: call 0x9fc0
0x6c96: mov qword ptr [rbp-0x358],rax
0x6c9d: cmp [rbp-0x358],0x0
0x6ca5: jz 0x71a0
0x6cab: mov rsi,qword ptr [rbp-0x358]
0x6cb2: mov rdi,qword ptr [rbp-0x310]
0x6cb9: call 0xfbe0
0x6cbe: test al,al
0x6cc0: jz 0x7c00
0x6cc6: mov rdx,qword ptr [rip+0x2188bb]
0x6ccd: mov esi,0x4
0x6cd2: mov edi,0x1
0x6cd7: call 0xf2d0
0x6cdc: mov rdx,qword ptr [rip+0x2188ad]
0x6ce3: mov esi,0x4
0x6ce8: xor edi,edi
0x6cea: mov r13,rax
0x6ced: call 0xf2d0
0x6cf2: lea rsi,[rip+0x10cdf]
0x6cf9: mov r12,rax
0x6cfc: mov edx,0x5
0x6d01: xor edi,edi
0x6d03: call 0x2ad0
0x6d08: mov r8,r13
0x6d0b: mov rdx,rax
0x6d0e: mov rcx,r12
0x6d11: xor eax,eax
0x6d13: xor esi,esi
0x6d15: xor edi,edi
0x6d17: call 0x2f30
0x6d1c: mov rax,qword ptr [rbp-0x340]
0x6d23: mov [rax],0x1
0x6d26: cmp [rbx+0x25],0x0
0x6d2a: jz 0x6bc8
0x6d30: call 0x30f6
0x6d35: nop qword ptr [rax]
0x6d38: cmp [rbp-0x270],0x1
0x6d40: jnbe 0x7128
0x6d46: test r13b,r13b
0x6d49: mov edx,dword ptr [rbx+0x4]
0x6d4c: jz 0x6d57
0x6d4e: cmp edx,0x3
0x6d51: jz 0x7128
0x6d57: cmp edx,0x4
0x6d5a: mov [rbp-0x358],0x0
0x6d65: jz 0x7128
0x6d6b: test al,al
0x6d6d: jnz 0x6579
0x6d73: movzx eax,r14b
0x6d77: mov dword ptr [rbp-0x320],eax
0x6d7d: jmp 0x60d0
0x6d82: nop qword ptr [rax+rax*1+0x0]
0x6d88: mov rdx,qword ptr [rbp-0x308]
0x6d8f: mov esi,0x4
0x6d94: mov edi,0x1
0x6d99: call 0xf2d0
0x6d9e: mov rdx,qword ptr [rbp-0x310]
0x6da5: mov esi,0x4
0x6daa: xor edi,edi
0x6dac: mov r12,rax
0x6daf: call 0xf2d0
0x6db4: lea rsi,[rip+0x11049]
0x6dbb: mov rbx,rax
0x6dbe: mov edx,0x5
0x6dc3: xor edi,edi
0x6dc5: call 0x2ad0
0x6dca: mov r8,r12
0x6dcd: mov rcx,rbx
0x6dd0: mov rdx,rax
0x6dd3: mov esi,r15d
0x6dd6: xor edi,edi
0x6dd8: xor eax,eax
0x6dda: call 0x2f30
0x6ddf: mov rsi,qword ptr [rbp-0x280]
0x6de6: mov rdi,qword ptr [rbp-0x278]
0x6ded: call 0x9ef0
0x6df2: jmp 0x5f30
0x6df7: nop qword ptr [rax+rax*1+0x0]
0x6e00: xor r8d,r8d
0x6e03: jmp 0x64b2
0x6e08: nop qword ptr [rax+rax*1+0x0]
0x6e10: cmp [rbx+0x18],0x0
0x6e14: jz 0x685c
0x6e1a: nop qword ptr [rax+rax*1+0x0]
0x6e20: mov eax,dword ptr [rbx+0x8]
0x6e23: cmp eax,0x2
0x6e26: jz 0x6ea4
0x6e28: cmp eax,0x3
0x6e2b: jz 0x6e78
0x6e2d: cmp eax,0x4
0x6e30: jnz 0x68b0
0x6e36: cmp [rbx+0x2f],0x0
0x6e3a: jz 0x68b0
0x6e40: mov esi,dword ptr [rbp-0x1d8]
0x6e46: mov rdi,qword ptr [rbp-0x308]
0x6e4d: mov byte ptr [rbp-0x358],r9b
0x6e54: mov byte ptr [rbp-0x350],r8b
0x6e5b: call 0x4e90
0x6e60: test al,al
0x6e62: movzx r8d,byte ptr [rbp-0x350]
0x6e6a: movzx r9d,byte ptr [rbp-0x358]
0x6e72: jnz 0x68b0
0x6e78: mov rsi,qword ptr [rbp-0x308]
0x6e7f: lea rdx,[rbp-0x1d8]
0x6e86: mov rdi,rbx
0x6e89: mov byte ptr [rbp-0x358],r9b
0x6e90: mov byte ptr [rbp-0x350],r8b
0x6e97: call 0x51a0
0x6e9c: test al,al
0x6e9e: jnz 0x82b0
0x6ea4: cmp [rbp-0x320],0x0
0x6eac: jz 0x6460
0x6eb2: mov rax,qword ptr [rbp-0x320]
0x6eb9: mov [rax],0x1
0x6ebc: jmp 0x6460
0x6ec1: nop qword ptr [rax+0x0]
0x6ec8: mov rdi,qword ptr [rbx+0x40]
0x6ecc: mov rsi,qword ptr [rbp-0x308]
0x6ed3: lea rdx,[rbp-0x280]
0x6eda: mov r12d,r13d
0x6edd: call 0xb500
0x6ee2: jmp 0x6466
0x6ee7: nop qword ptr [rax+rax*1+0x0]
0x6ef0: cmp r12d,0x4000
0x6ef7: jz 0x7410
0x6efd: cmp [rbx+0x18],0x0
0x6f01: jz 0x6f0f
0x6f03: mov r15d,dword ptr [rbx]
0x6f06: test r15d,r15d
0x6f09: jnz 0x7ba7
0x6f0f: mov rsi,qword ptr [rbp-0x308]
0x6f16: mov edi,0x4
0x6f1b: xor r12d,r12d
0x6f1e: call 0xf3f0
0x6f23: lea rsi,[rip+0x10996]
0x6f2a: mov rbx,rax
0x6f2d: mov edx,0x5
0x6f32: xor edi,edi
0x6f34: call 0x2ad0
0x6f39: mov rcx,rbx
0x6f3c: mov rdx,rax
0x6f3f: xor esi,esi
0x6f41: xor edi,edi
0x6f43: xor eax,eax
0x6f45: call 0x2f30
0x6f4a: jmp 0x6466
0x6f4f: nop 
0x6f50: mov ecx,dword ptr [rbp-0x320]
0x6f56: mov edx,dword ptr [rbp-0x314]
0x6f5c: mov r8,rbx
0x6f5f: mov rsi,qword ptr [rbp-0x308]
0x6f66: mov rdi,qword ptr [rbp-0x310]
0x6f6d: call 0x57c0
0x6f72: test al,al
0x6f74: jz 0x5f30
0x6f7a: mov eax,r12d
0x6f7d: and eax,0x12
0x6f80: mov dword ptr [rbp-0x35c],eax
0x6f86: jmp 0x6769
0x6f8b: nop qword ptr [rax+rax*1+0x0]
0x6f90: mov rdi,qword ptr [rbp-0x308]
0x6f97: mov rcx,rbx
0x6f9a: mov edx,0x1
0x6f9f: xor esi,esi
0x6fa1: call 0x5890
0x6fa6: jmp 0x643e
0x6fab: nop qword ptr [rax+rax*1+0x0]
0x6fb0: lea rsi,[rip+0x10e44]
0x6fb7: mov edx,0x5
0x6fbc: xor edi,edi
0x6fbe: call 0x2ad0
0x6fc3: mov edi,0x1
0x6fc8: mov rsi,rax
0x6fcb: xor eax,eax
0x6fcd: call 0x2ee0
0x6fd2: mov rdx,qword ptr [rbp-0x350]
0x6fd9: mov rsi,qword ptr [rbp-0x308]
0x6fe0: mov rdi,qword ptr [rbp-0x310]
0x6fe7: call 0x4fd0
0x6fec: jmp 0x6434
0x6ff1: nop qword ptr [rax+0x0]
0x6ff8: mov rax,qword ptr [rbp-0x1f0]
0x6fff: cmp qword ptr [rbp-0x280],rax
0x7006: jnz 0x5e35
0x700c: movzx eax,byte ptr [rbx+0x17]
0x7010: test al,al
0x7012: jnz 0x73a8
0x7018: cmp [rbx+0x4],0x2
0x701c: mov ecx,0x1
0x7021: mov r15d,0x1
0x7027: jz 0x71b5
0x702d: lea r12,[rbp-0x160]
0x7034: mov rsi,qword ptr [rbp-0x308]
0x703b: mov edi,0x1
0x7040: mov byte ptr [rbp-0x358],r9b
0x7047: mov byte ptr [rbp-0x350],r8b
0x704e: mov rdx,r12
0x7051: call 0x2b00
0x7056: test eax,eax
0x7058: movzx r8d,byte ptr [rbp-0x350]
0x7060: movzx r9d,byte ptr [rbp-0x358]
0x7068: jz 0x8072
0x706e: xor r14d,r14d
0x7071: jmp 0x5e3f
0x7076: nop qword ptr [rax+rax*1+0x0]
0x7080: sub rsp,0x30
0x7084: mov rsi,qword ptr [rbp-0x330]
0x708b: lea rax,[rsp+0xf]
0x7090: and rax,0xfffffff0
0x7094: test r14b,r14b
0x7097: mov qword ptr [rbp-0x328],rax
0x709e: mov qword ptr [rax],rsi
0x70a1: mov qword ptr [rax+0x8],rdx
0x70a5: mov qword ptr [rax+0x10],rcx
0x70a9: jnz 0x70c1
0x70ab: mov eax,dword ptr [rbp-0x1d8]
0x70b1: and eax,0xf000
0x70b6: cmp eax,0x4000
0x70bb: jz 0x8118
0x70c1: mov esi,dword ptr [rbp-0x35c]
0x70c7: mov r15,qword ptr [rbp-0x308]
0x70ce: not esi
0x70d0: mov rdi,r15
0x70d3: and esi,r12d
0x70d6: call 0x29c0
0x70db: test eax,eax
0x70dd: jz 0x78a0
0x70e3: mov rsi,r15
0x70e6: mov edi,0x4
0x70eb: call 0xf3f0
0x70f0: lea rsi,[rip+0xf2cd]
0x70f7: mov r13,rax
0x70fa: mov edx,0x5
0x70ff: xor edi,edi
0x7101: call 0x2ad0
0x7106: mov r12,rax
0x7109: call 0x2950
0x710e: mov esi,dword ptr [rax]
0x7110: mov rcx,r13
0x7113: mov rdx,r12
0x7116: xor edi,edi
0x7118: xor eax,eax
0x711a: call 0x2f30
0x711f: jmp 0x6bb0
0x7124: nop qword ptr [rax+0x0]
0x7128: mov rdx,qword ptr [rbp-0x280]
0x712f: mov rsi,qword ptr [rbp-0x278]
0x7136: mov rdi,qword ptr [rbp-0x308]
0x713d: call 0x9fc0
0x7142: mov qword ptr [rbp-0x358],rax
0x7149: cmp [rbp-0x358],0x0
0x7151: jz 0x71a0
0x7153: mov eax,dword ptr [rbp-0x314]
0x7159: and eax,0xf000
0x715e: cmp eax,0x4000
0x7163: jz 0x6cab
0x7169: movzx ecx,byte ptr [rbx+0x2e]
0x716d: mov r8d,dword ptr [rbp-0x328]
0x7174: mov edx,0x1
0x7179: mov rsi,qword ptr [rbp-0x308]
0x7180: mov rdi,qword ptr [rbp-0x358]
0x7187: call 0x5090
0x718c: test al,al
0x718e: jz 0x6d26
0x7194: jmp 0x6460
0x7199: nop qword ptr [rax+0x0]
0x71a0: movzx eax,byte ptr [rbx+0x18]
0x71a4: jmp 0x6d6b
0x71a9: nop qword ptr [rax+0x0]
0x71b0: xor ecx,ecx
0x71b2: xor r15d,r15d
0x71b5: mov eax,dword ptr [rbp-0x268]
0x71bb: lea rdx,[rbp-0x280]
0x71c2: and eax,0xf000
0x71c7: cmp eax,0xa000
0x71cc: jz 0x7e73
0x71d2: mov esi,dword ptr [rbx]
0x71d4: test esi,esi
0x71d6: jz 0x76b8
0x71dc: test cl,cl
0x71de: jnz 0x8272
0x71e4: cmp [rbx+0x18],0x0
0x71e8: jnz 0x706e
0x71ee: cmp [rbx+0x4],0x2
0x71f2: jz 0x706e
0x71f8: mov eax,dword ptr [rdx+0x18]
0x71fb: and eax,0xf000
0x7200: cmp eax,0xa000
0x7205: jnz 0x706e
0x720b: mov eax,dword ptr [r12+0x18]
0x7210: and eax,0xf000
0x7215: cmp eax,0xa000
0x721a: jz 0x706e
0x7220: mov rdx,qword ptr [rbp-0x308]
0x7227: mov esi,0x4
0x722c: mov edi,0x1
0x7231: call 0xf2d0
0x7236: mov rdx,qword ptr [rbp-0x310]
0x723d: mov esi,0x4
0x7242: xor edi,edi
0x7244: mov r12,rax
0x7247: call 0xf2d0
0x724c: lea rsi,[rip+0x10b6a]
0x7253: mov rbx,rax
0x7256: mov edx,0x5
0x725b: xor edi,edi
0x725d: call 0x2ad0
0x7262: mov r8,r12
0x7265: mov rdx,rax
0x7268: mov rcx,rbx
0x726b: xor esi,esi
0x726d: xor edi,edi
0x726f: xor eax,eax
0x7271: call 0x2f30
0x7276: jmp 0x5f30
0x727b: nop qword ptr [rax+rax*1+0x0]
0x7280: cmp [rbx+0x18],0x0
0x7284: jz 0x68b0
0x728a: jmp 0x6e20
0x728f: nop 
0x7290: mov eax,dword ptr [r12+0x18]
0x7295: and eax,0xf000
0x729a: cmp eax,0xa000
0x729f: jz 0x5e3f
0x72a5: test cl,cl
0x72a7: jz 0x72b5
0x72a9: cmp [r12+0x10],0x1
0x72af: jnbe 0x866b
0x72b5: mov eax,dword ptr [rdx+0x18]
0x72b8: and eax,0xf000
0x72bd: cmp eax,0xa000
0x72c2: jz 0x72f0
0x72c4: mov rax,qword ptr [r12+0x8]
0x72c9: cmp qword ptr [rdx+0x8],rax
0x72cd: jnz 0x5e3f
0x72d3: mov rax,qword ptr [r12]
0x72d7: cmp qword ptr [rdx],rax
0x72da: jnz 0x5e3f
0x72e0: movzx eax,byte ptr [rbx+0x17]
0x72e4: test al,al
0x72e6: jnz 0x73a8
0x72ec: movzx esi,byte ptr [rbx+0x18]
0x72f0: test sil,sil
0x72f3: jz 0x76e2
0x72f9: mov eax,dword ptr [rbp-0x268]
0x72ff: and eax,0xf000
0x7304: cmp eax,0xa000
0x7309: jnz 0x76e2
0x730f: cmp [r12+0x10],0x1
0x7315: jbe 0x76e2
0x731b: mov rdi,qword ptr [rbp-0x310]
0x7322: mov byte ptr [rbp-0x35c],r9b
0x7329: mov byte ptr [rbp-0x358],r8b
0x7330: mov qword ptr [rbp-0x350],rdx
0x7337: call 0x2c20
0x733c: test rax,rax
0x733f: mov r15,rax
0x7342: mov rdx,qword ptr [rbp-0x350]
0x7349: movzx r8d,byte ptr [rbp-0x358]
0x7351: movzx r9d,byte ptr [rbp-0x35c]
0x7359: jz 0x76e2
0x735f: mov rsi,qword ptr [rbp-0x308]
0x7366: mov rdi,rax
0x7369: mov byte ptr [rbp-0x358],r9b
0x7370: mov byte ptr [rbp-0x350],r8b
0x7377: call 0xfbe0
0x737c: mov rdi,r15
0x737f: xor eax,0x1
0x7382: mov r12d,eax
0x7385: call 0x30d0
0x738a: movzx r8d,byte ptr [rbp-0x350]
0x7392: movzx r9d,byte ptr [rbp-0x358]
0x739a: xor eax,eax
0x739c: test r12b,r12b
0x739f: jz 0x7220
0x73a5: nop qword ptr [rax]
0x73a8: mov r14d,eax
0x73ab: jmp 0x5e3f
0x73b0: mov rdi,qword ptr [rbx+0x40]
0x73b4: mov rsi,qword ptr [rbp-0x308]
0x73bb: lea rdx,[rbp-0x1f0]
0x73c2: mov byte ptr [rbp-0x358],r9b
0x73c9: mov byte ptr [rbp-0x350],r8b
0x73d0: call 0xb590
0x73d5: test al,al
0x73d7: movzx r8d,byte ptr [rbp-0x350]
0x73df: movzx r9d,byte ptr [rbp-0x358]
0x73e7: jnz 0x8735
0x73ed: cmp r12d,0x4000
0x73f4: jz 0x7410
0x73f6: mov eax,dword ptr [rbp-0x1d8]
0x73fc: mov edx,eax
0x73fe: and edx,0xf000
0x7404: cmp edx,0x4000
0x740a: jz 0x6efd
0x7410: mov r15d,dword ptr [rbx]
0x7413: movzx eax,byte ptr [rbx+0x18]
0x7417: test al,al
0x7419: jnz 0x7dd0
0x741f: test r15d,r15d
0x7422: jnz 0x690e
0x7428: mov edx,dword ptr [rbp-0x1d8]
0x742e: and edx,0xf000
0x7434: cmp edx,0x4000
0x743a: setz r12b
0x743e: or r12b,al
0x7441: jz 0x7fdb
0x7447: mov r14d,r8d
0x744a: mov r15d,0x11
0x7450: mov [rbp-0x350],0x0
0x745b: jmp 0x5fae
0x7460: mov rsi,qword ptr [rbp-0x280]
0x7467: mov rdi,qword ptr [rbp-0x278]
0x746e: call 0x9ef0
0x7473: jmp 0x6bc8
0x7478: nop qword ptr [rax+rax*1+0x0]
0x7480: mov rsi,qword ptr [rbp-0x308]
0x7487: mov edi,0x4
0x748c: call 0xf3f0
0x7491: mov edx,0x5
0x7496: mov r12,rax
0x7499: lea rsi,[rip+0x10b01]
0x74a0: jmp 0x651e
0x74a5: nop qword ptr [rax]
0x74a8: cmp r15d,0x8000
0x74af: jz 0x7cb0
0x74b5: cmp r15d,0xa000
0x74bc: setnz r8b
0x74c0: and r8b,byte ptr [rbx+0x14]
0x74c4: jnz 0x7cb0
0x74ca: cmp r15d,0x1000
0x74d1: jz 0x8592
0x74d7: mov eax,r15d
0x74da: and ah,0xbf
0x74dd: cmp eax,0x2000
0x74e2: jz 0x81cc
0x74e8: cmp r15d,0xc000
0x74ef: jz 0x81cc
0x74f5: cmp r15d,0xa000
0x74fc: jz 0x8880
0x7502: mov rsi,qword ptr [rbp-0x310]
0x7509: mov edi,0x4
0x750e: call 0xf3f0
0x7513: mov edx,0x5
0x7518: mov r12,rax
0x751b: lea rsi,[rip+0x10a66]
0x7522: jmp 0x67c8
0x7527: nop qword ptr [rax+rax*1+0x0]
0x7530: mov rsi,rdx
0x7533: call 0x9f60
0x7538: mov qword ptr [rbp-0x358],rax
0x753f: jmp 0x6c9d
0x7544: nop qword ptr [rax+0x0]
0x7548: mov rsi,qword ptr [rbp-0x310]
0x754f: mov edi,0x4
0x7554: call 0xf3f0
0x7559: lea rsi,[rip+0x102c0]
0x7560: mov rbx,rax
0x7563: xor edi,edi
0x7565: mov edx,0x5
0x756a: call 0x2ad0
0x756f: mov rcx,rbx
0x7572: mov rdx,rax
0x7575: xor esi,esi
0x7577: xor edi,edi
0x7579: xor eax,eax
0x757b: call 0x2f30
0x7580: jmp 0x6466
0x7585: nop qword ptr [rax]
0x7588: mov rsi,qword ptr [rbp-0x280]
0x758f: mov rdi,qword ptr [rbp-0x278]
0x7596: call 0x9f60
0x759b: mov qword ptr [rbp-0x358],rax
0x75a2: jmp 0x7149
0x75a7: nop qword ptr [rax+rax*1+0x0]
0x75b0: lea rsi,[rip+0x107f0]
0x75b7: xor edi,edi
0x75b9: call 0x2ad0
0x75be: mov rdx,rax
0x75c1: jmp 0x682a
0x75c6: nop qword ptr [rax+rax*1+0x0]
0x75d0: mov rdx,qword ptr [rip+0x217fb1]
0x75d7: mov esi,0x4
0x75dc: mov edi,0x1
0x75e1: call 0xf2d0
0x75e6: mov rdx,qword ptr [rip+0x217fa3]
0x75ed: mov esi,0x4
0x75f2: xor edi,edi
0x75f4: mov r12,rax
0x75f7: call 0xf2d0
0x75fc: lea rsi,[rip+0x1046d]
0x7603: mov rbx,rax
0x7606: mov edx,0x5
0x760b: xor edi,edi
0x760d: call 0x2ad0
0x7612: mov r8,r12
0x7615: mov rdx,rax
0x7618: mov rcx,rbx
0x761b: xor eax,eax
0x761d: xor esi,esi
0x761f: xor edi,edi
0x7621: call 0x2f30
0x7626: mov rax,qword ptr [rbp-0x340]
0x762d: mov r12d,0x1
0x7633: mov [rax],0x1
0x7636: jmp 0x6466
0x763b: nop qword ptr [rax+rax*1+0x0]
0x7640: call 0x2ac0
0x7645: test eax,eax
0x7647: jz 0x6611
0x764d: call 0x2950
0x7652: cmp [rax],0x2
0x7655: mov r14,rax
0x7658: jz 0x6611
0x765e: mov rdx,qword ptr [rbp-0x308]
0x7665: mov esi,0x4
0x766a: mov edi,0x1
0x766f: call 0xf2d0
0x7674: mov rdx,qword ptr [rbp-0x310]
0x767b: mov esi,0x4
0x7680: xor edi,edi
0x7682: mov r12,rax
0x7685: call 0xf2d0
0x768a: lea rsi,[rip+0x1040f]
0x7691: mov rbx,rax
0x7694: mov edx,0x5
0x7699: xor edi,edi
0x769b: call 0x2ad0
0x76a0: mov r8,r12
0x76a3: mov rcx,rbx
0x76a6: mov rdx,rax
0x76a9: mov esi,dword ptr [r14]
0x76ac: jmp 0x6dd6
0x76b1: nop qword ptr [rax+0x0]
0x76b8: movzx esi,byte ptr [rbx+0x18]
0x76bc: test sil,sil
0x76bf: jnz 0x7290
0x76c5: cmp [rbx+0x15],0x0
0x76c9: jnz 0x7290
0x76cf: mov eax,dword ptr [rdx+0x18]
0x76d2: and eax,0xf000
0x76d7: cmp eax,0xa000
0x76dc: jnz 0x86c5
0x76e2: cmp [rbx+0x2c],0x0
0x76e6: jz 0x76fd
0x76e8: mov eax,dword ptr [r12+0x18]
0x76ed: and eax,0xf000
0x76f2: cmp eax,0xa000
0x76f7: jz 0x5e3f
0x76fd: cmp [rbx+0x4],0x2
0x7701: jnz 0x7220
0x7707: mov eax,dword ptr [rdx+0x18]
0x770a: and eax,0xf000
0x770f: cmp eax,0xa000
0x7714: jz 0x918c
0x771a: movdqa xmm0,[rdx]
0x771e: movaps [rbp-0xd0],xmm0
0x7725: movdqa xmm0,[rdx+0x10]
0x772a: movaps [rbp-0xc0],xmm0
0x7731: movdqa xmm0,[rdx+0x20]
0x7736: movaps [rbp-0xb0],xmm0
0x773d: movdqa xmm0,[rdx+0x30]
0x7742: movaps [rbp-0xa0],xmm0
0x7749: movdqa xmm0,[rdx+0x40]
0x774e: movaps [rbp-0x90],xmm0
0x7755: movdqa xmm0,[rdx+0x50]
0x775a: movaps [rbp-0x80],xmm0
0x775e: movdqa xmm0,[rdx+0x60]
0x7763: movaps [rbp-0x70],xmm0
0x7767: movdqa xmm0,[rdx+0x70]
0x776c: movaps [rbp-0x60],xmm0
0x7770: movdqa xmm0,[rdx+0x80]
0x7778: movaps [rbp-0x50],xmm0
0x777c: mov eax,dword ptr [r12+0x18]
0x7781: and eax,0xf000
0x7786: cmp eax,0xa000
0x778b: jz 0x9149
0x7791: movdqa xmm0,[r12]
0x7797: movaps [rbp-0x160],xmm0
0x779e: movdqa xmm0,[r12+0x10]
0x77a5: movaps [rbp-0x150],xmm0
0x77ac: movdqa xmm0,[r12+0x20]
0x77b3: movaps [rbp-0x140],xmm0
0x77ba: movdqa xmm0,[r12+0x30]
0x77c1: movaps [rbp-0x130],xmm0
0x77c8: movdqa xmm0,[r12+0x40]
0x77cf: movaps [rbp-0x120],xmm0
0x77d6: movdqa xmm0,[r12+0x50]
0x77dd: movaps [rbp-0x110],xmm0
0x77e4: movdqa xmm0,[r12+0x60]
0x77eb: movaps [rbp-0x100],xmm0
0x77f2: movdqa xmm0,[r12+0x70]
0x77f9: movaps [rbp-0xf0],xmm0
0x7800: movdqa xmm0,[r12+0x80]
0x780a: movaps [rbp-0xe0],xmm0
0x7811: mov rax,qword ptr [rbp-0x158]
0x7818: cmp qword ptr [rbp-0xc8],rax
0x781f: jnz 0x5e3f
0x7825: mov rax,qword ptr [rbp-0x160]
0x782c: cmp qword ptr [rbp-0xd0],rax
0x7833: jnz 0x5e3f
0x7839: cmp [rbx+0x17],0x0
0x783d: jz 0x7220
0x7843: mov eax,dword ptr [r12+0x18]
0x7848: and eax,0xf000
0x784d: cmp eax,0xa000
0x7852: setnz r14b
0x7856: jmp 0x5e3f
0x785b: nop qword ptr [rax+rax*1+0x0]
0x7860: lea rcx,[rbp-0xd0]
0x7867: mov rsi,qword ptr [rbp-0x308]
0x786e: mov edi,0x1
0x7873: mov rdx,rcx
0x7876: mov qword ptr [rbp-0x358],rcx
0x787d: call 0x2b00
0x7882: test eax,eax
0x7884: jnz 0x6070
0x788a: mov rcx,qword ptr [rbp-0x358]
0x7891: mov rdx,rcx
0x7894: jmp 0x5fea
0x7899: nop qword ptr [rax+0x0]
0x78a0: mov rsi,qword ptr [rbp-0x308]
0x78a7: lea rdx,[rbp-0x1f0]
0x78ae: mov edi,0x1
0x78b3: call 0x2b00
0x78b8: test eax,eax
0x78ba: jnz 0x82c5
0x78c0: mov r12d,dword ptr [rbp-0x1d8]
0x78c7: mov [rbp-0x330],0x0
0x78ce: mov eax,r12d
0x78d1: and eax,0x1c0
0x78d6: cmp eax,0x1c0
0x78db: jz 0x7908
0x78dd: mov rdi,qword ptr [rbp-0x308]
0x78e4: mov esi,r12d
0x78e7: or esi,0x1c0
0x78ed: call 0x2f10
0x78f2: test eax,eax
0x78f4: mov dword ptr [rbp-0x38c],r12d
0x78fb: mov [rbp-0x330],0x1
0x7902: jnz 0x8923
0x7908: mov rax,qword ptr [rbp-0x338]
0x790f: cmp [rax],0x0
0x7912: jz 0x870c
0x7918: cmp [rbx+0x2e],0x0
0x791c: jz 0x7968
0x791e: cmp [rbx+0x18],0x0
0x7922: jz 0x87cd
0x7928: mov rsi,qword ptr [rbp-0x308]
0x792f: mov edi,0x4
0x7934: call 0xf3f0
0x7939: lea rsi,[rip+0x104fc]
0x7940: mov r12,rax
0x7943: mov edx,0x5
0x7948: xor edi,edi
0x794a: call 0x2ad0
0x794f: mov rdx,r12
0x7952: mov rsi,rax
0x7955: mov edi,0x1
0x795a: xor eax,eax
0x795c: call 0x2ee0
0x7961: nop qword ptr [rax+0x0]
0x7968: mov rax,qword ptr [rbp-0x348]
0x796f: test rax,rax
0x7972: setnz r12b
0x7976: and r12b,byte ptr [rbx+0x1c]
0x797a: jnz 0x815b
0x7980: movdqu xmm0,[rbx]
0x7984: mov esi,0x2
0x7989: mov rdi,qword ptr [rbp-0x310]
0x7990: movaps [rbp-0x2f0],xmm0
0x7997: movdqu xmm0,[rbx+0x10]
0x799c: movaps [rbp-0x2e0],xmm0
0x79a3: movdqu xmm0,[rbx+0x20]
0x79a8: movaps [rbp-0x2d0],xmm0
0x79af: movdqu xmm0,[rbx+0x30]
0x79b4: movaps [rbp-0x2c0],xmm0
0x79bb: movdqu xmm0,[rbx+0x40]
0x79c0: movaps [rbp-0x2b0],xmm0
0x79c7: call 0xffb0
0x79cc: test rax,rax
0x79cf: mov qword ptr [rbp-0x368],rax
0x79d6: jz 0x8838
0x79dc: cmp [rbx+0x4],0x3
0x79e0: jnz 0x79ec
0x79e2: mov [rbp-0x2ec],0x2
0x79ec: mov rax,qword ptr [rbp-0x368]
0x79f3: cmp [rax],0x0
0x79f6: jz 0x8f35
0x79fc: lea rax,[rbp-0x2f0]
0x7a03: lea r10,[rbp-0x280]
0x7a0a: mov dword ptr [rbp-0x380],r13d
0x7a11: mov r15,qword ptr [rbp-0x368]
0x7a18: mov r13,qword ptr [rbp-0x340]
0x7a1f: mov r12d,0x1
0x7a25: mov qword ptr [rbp-0x348],rax
0x7a2c: lea rax,[rbp-0x2f9]
0x7a33: mov [rbp-0x315],0x0
0x7a3a: mov byte ptr [rbp-0x370],r14b
0x7a41: mov qword ptr [rbp-0x378],rbx
0x7a48: mov qword ptr [rbp-0x350],rax
0x7a4f: lea rax,[rbp-0x2f8]
0x7a56: mov qword ptr [rbp-0x340],r10
0x7a5d: mov qword ptr [rbp-0x358],rax
0x7a64: jmp 0x7a94
0x7a66: nop qword ptr [rax+rax*1+0x0]
0x7a70: movzx eax,byte ptr [rbp-0x2f8]
0x7a77: mov rdi,r15
0x7a7a: or byte ptr [rbp-0x315],al
0x7a80: call 0x2af0
0x7a85: lea r15,[r15+rax*1+0x1]
0x7a8a: cmp [r15],0x0
0x7a8e: jz 0x7b31
0x7a94: mov rdi,qword ptr [rbp-0x310]
0x7a9b: xor edx,edx
0x7a9d: mov rsi,r15
0x7aa0: call 0xb790
0x7aa5: mov rdi,qword ptr [rbp-0x308]
0x7aac: xor edx,edx
0x7aae: mov rsi,r15
0x7ab1: mov rbx,rax
0x7ab4: call 0xb790
0x7ab9: mov r14,rax
0x7abc: mov rax,qword ptr [rbp-0x338]
0x7ac3: mov r9,qword ptr [rbp-0x348]
0x7aca: mov r8,qword ptr [rbp-0x328]
0x7ad1: mov rcx,qword ptr [rbp-0x340]
0x7ad8: mov rsi,r14
0x7adb: mov edx,dword ptr [rbp-0x320]
0x7ae1: mov rdi,rbx
0x7ae4: movzx eax,byte ptr [rax]
0x7ae7: push 0x0
0x7ae9: push qword ptr [rbp-0x350]
0x7aef: push qword ptr [rbp-0x358]
0x7af5: push 0x0
0x7af7: mov byte ptr [rbp-0x2f8],al
0x7afd: call 0x5c20
0x7b02: and r12d,eax
0x7b05: movzx eax,byte ptr [rbp-0x2f9]
0x7b0c: add rsp,0x20
0x7b10: or byte ptr [r13+0x0],al
0x7b14: mov rdi,r14
0x7b17: call 0x30d0
0x7b1c: mov rdi,rbx
0x7b1f: call 0x30d0
0x7b24: cmp [rbp-0x2f9],0x0
0x7b2b: jz 0x7a70
0x7b31: movzx r14d,byte ptr [rbp-0x370]
0x7b39: mov rbx,qword ptr [rbp-0x378]
0x7b40: mov r13d,dword ptr [rbp-0x380]
0x7b47: mov rdi,qword ptr [rbp-0x368]
0x7b4e: call 0x30d0
0x7b53: movzx ecx,byte ptr [rbp-0x315]
0x7b5a: mov rax,qword ptr [rbp-0x338]
0x7b61: mov byte ptr [rax],cl
0x7b63: test r13b,r13b
0x7b66: jnz 0x8142
0x7b6c: movzx eax,byte ptr [rbp-0x330]
0x7b73: mov [rbp-0x320],0x0
0x7b7a: mov byte ptr [rbp-0x315],al
0x7b80: jmp 0x623a
0x7b85: nop qword ptr [rax]
0x7b88: cmp [rbx+0x18],0x0
0x7b8c: jz 0x7f9b
0x7b92: mov r15d,dword ptr [rbx]
0x7b95: test r15d,r15d
0x7b98: jz 0x7f9b
0x7b9e: test r13b,r13b
0x7ba1: jnz 0x68fa
0x7ba7: mov edx,dword ptr [rbp-0x268]
0x7bad: and edx,0xf000
0x7bb3: cmp edx,0x4000
0x7bb9: jz 0x8176
0x7bbf: mov rdi,qword ptr [rbp-0x310]
0x7bc6: mov byte ptr [rbp-0x358],r9b
0x7bcd: mov byte ptr [rbp-0x350],r8b
0x7bd4: call 0xb3a0
0x7bd9: cmp [rax],0x2e
0x7bdc: mov r14,rax
0x7bdf: movzx r8d,byte ptr [rbp-0x350]
0x7be7: movzx r9d,byte ptr [rbp-0x358]
0x7bef: jnz 0x697d
0x7bf5: mov eax,0x1
0x7bfa: jmp 0x6942
0x7bff: nop 
0x7c00: mov rsi,qword ptr [rbp-0x358]
0x7c07: mov rdi,qword ptr [rbp-0x308]
0x7c0e: call 0xfbe0
0x7c13: test al,al
0x7c15: jnz 0x82ea
0x7c1b: mov eax,dword ptr [rbx+0x4]
0x7c1e: cmp eax,0x4
0x7c21: jz 0x71a0
0x7c27: cmp eax,0x3
0x7c2a: jnz 0x7c35
0x7c2c: test r13b,r13b
0x7c2f: jnz 0x71a0
0x7c35: mov rdx,qword ptr [rbp-0x358]
0x7c3c: mov esi,0x4
0x7c41: mov edi,0x1
0x7c46: call 0xf2d0
0x7c4b: mov rdx,qword ptr [rbp-0x308]
0x7c52: xor edi,edi
0x7c54: mov esi,0x4
0x7c59: mov r13,rax
0x7c5c: call 0xf2d0
0x7c61: lea rsi,[rip+0xfdd8]
0x7c68: mov r12,rax
0x7c6b: xor edi,edi
0x7c6d: mov edx,0x5
0x7c72: call 0x2ad0
0x7c77: mov r8,r13
0x7c7a: mov rdx,rax
0x7c7d: mov rcx,r12
0x7c80: xor esi,esi
0x7c82: xor edi,edi
0x7c84: xor eax,eax
0x7c86: call 0x2f30
0x7c8b: jmp 0x6d26
0x7c90: cmp [rbx+0x17],0x0
0x7c94: jz 0x6d38
0x7c9a: mov [rbp-0x358],0x0
0x7ca5: jmp 0x6d73
0x7caa: nop qword ptr [rax+rax*1+0x0]
0x7cb0: mov eax,dword ptr [rbp-0x268]
0x7cb6: xor esi,esi
0x7cb8: cmp [rbx+0x4],0x2
0x7cbc: mov rdi,qword ptr [rbp-0x310]
0x7cc3: mov dword ptr [rbp-0x340],eax
0x7cc9: movzx eax,byte ptr [rbx+0x23]
0x7ccd: setz sil
0x7cd1: shl esi,0x11
0x7cd4: mov byte ptr [rbp-0x338],al
0x7cda: xor eax,eax
0x7cdc: call 0xb490
0x7ce1: test eax,eax
0x7ce3: mov dword ptr [rbp-0x320],eax
0x7ce9: js 0x83eb
0x7cef: mov esi,dword ptr [rbp-0x320]
0x7cf5: lea rdx,[rbp-0x160]
0x7cfc: mov edi,0x1
0x7d01: call 0x2e20
0x7d06: test eax,eax
0x7d08: jnz 0x8627
0x7d0e: mov rax,qword ptr [rbp-0x158]
0x7d15: cmp qword ptr [rbp-0x278],rax
0x7d1c: jnz 0x7d32
0x7d1e: mov rax,qword ptr [rbp-0x160]
0x7d25: cmp qword ptr [rbp-0x280],rax
0x7d2c: jz 0x8a56
0x7d32: mov rsi,qword ptr [rbp-0x310]
0x7d39: mov edi,0x4
0x7d3e: call 0xf3f0
0x7d43: lea rsi,[rip+0xfdbe]
0x7d4a: mov r12,rax
0x7d4d: mov edx,0x5
0x7d52: xor edi,edi
0x7d54: call 0x2ad0
0x7d59: mov rcx,r12
0x7d5c: mov rdx,rax
0x7d5f: xor esi,esi
0x7d61: xor edi,edi
0x7d63: xor eax,eax
0x7d65: call 0x2f30
0x7d6a: xor r8d,r8d
0x7d6d: mov [rbp-0x330],0x0
0x7d78: mov edi,dword ptr [rbp-0x320]
0x7d7e: mov byte ptr [rbp-0x328],r8b
0x7d85: call 0x2c30
0x7d8a: test eax,eax
0x7d8c: movzx r8d,byte ptr [rbp-0x328]
0x7d94: js 0x87e7
0x7d9a: mov rdi,qword ptr [rbp-0x330]
0x7da1: mov byte ptr [rbp-0x328],r8b
0x7da8: call 0x30d0
0x7dad: movzx r8d,byte ptr [rbp-0x328]
0x7db5: mov [rbp-0x320],0x0
0x7dbc: test r8b,r8b
0x7dbf: jnz 0x619f
0x7dc5: jmp 0x6bb0
0x7dca: nop qword ptr [rax+rax*1+0x0]
0x7dd0: mov eax,dword ptr [rbp-0x268]
0x7dd6: and eax,0xf000
0x7ddb: cmp eax,0x4000
0x7de0: jz 0x8170
0x7de6: test r15d,r15d
0x7de9: jz 0x7447
0x7def: jmp 0x7bbf
0x7df4: nop qword ptr [rax+0x0]
0x7df8: lea rdx,[rbp-0x160]
0x7dff: mov rsi,r8
0x7e02: mov edi,0x1
0x7e07: call 0x2dd0
0x7e0c: test eax,eax
0x7e0e: jnz 0x6b1c
0x7e14: lea rdx,[rbp-0xd0]
0x7e1b: mov rsi,r12
0x7e1e: mov edi,0x1
0x7e23: call 0x2dd0
0x7e28: test eax,eax
0x7e2a: jnz 0x6b1c
0x7e30: mov rax,qword ptr [rbp-0xc8]
0x7e37: cmp qword ptr [rbp-0x158],rax
0x7e3e: jz 0x8f47
0x7e44: mov rdi,r12
0x7e47: call 0x30d0
0x7e4c: mov rdx,qword ptr [rbp-0x308]
0x7e53: mov esi,0x3
0x7e58: xor edi,edi
0x7e5a: call 0xf4f0
0x7e5f: mov edx,0x5
0x7e64: mov r12,rax
0x7e67: lea rsi,[rip+0xfd42]
0x7e6e: jmp 0x67c8
0x7e73: mov eax,dword ptr [rbp-0x1d8]
0x7e79: lea rdx,[rbp-0x280]
0x7e80: and eax,0xf000
0x7e85: cmp eax,0xa000
0x7e8a: jnz 0x71d2
0x7e90: mov rsi,qword ptr [rbp-0x308]
0x7e97: mov rdi,qword ptr [rbp-0x310]
0x7e9e: mov byte ptr [rbp-0x358],r9b
0x7ea5: mov byte ptr [rbp-0x350],r8b
0x7eac: call 0xfbe0
0x7eb1: test al,al
0x7eb3: jnz 0x7220
0x7eb9: mov edi,dword ptr [rbx]
0x7ebb: movzx r8d,byte ptr [rbp-0x350]
0x7ec3: movzx r9d,byte ptr [rbp-0x358]
0x7ecb: test edi,edi
0x7ecd: jnz 0x706e
0x7ed3: test r15d,r15d
0x7ed6: jz 0x706e
0x7edc: movzx r12d,byte ptr [rbx+0x18]
0x7ee1: mov eax,0x1
0x7ee6: xor r12d,0x1
0x7eea: jmp 0x739c
0x7eef: nop 
0x7ef0: mov r15d,eax
0x7ef3: mov rax,0x280375465148160
0x7efd: test qword ptr [rbx+0x20],rax
0x7f01: jz 0x61c2
0x7f07: movzx esi,byte ptr [rbx+0x25]
0x7f0b: mov rdi,qword ptr [rbp-0x308]
0x7f12: xor edx,edx
0x7f14: mov rcx,rbx
0x7f17: mov byte ptr [rbp-0x328],r8b
0x7f1e: call 0x5890
0x7f23: test al,al
0x7f25: mov r15d,eax
0x7f28: movzx r8d,byte ptr [rbp-0x328]
0x7f30: jnz 0x61c2
0x7f36: movzx r14d,byte ptr [rbx+0x26]
0x7f3b: test r14b,r14b
0x7f3e: jnz 0x6bb0
0x7f44: mov r15d,r12d
0x7f47: jmp 0x61c2
0x7f4c: nop qword ptr [rax+0x0]
0x7f50: lea rsi,[rip+0xfec2]
0x7f57: mov edx,0x5
0x7f5c: xor edi,edi
0x7f5e: call 0x2ad0
0x7f63: mov edi,0x1
0x7f68: mov rsi,rax
0x7f6b: xor eax,eax
0x7f6d: call 0x2ee0
0x7f72: mov rdx,qword ptr [rbp-0x350]
0x7f79: mov rsi,qword ptr [rbp-0x308]
0x7f80: mov rdi,qword ptr [rbp-0x310]
0x7f87: call 0x4fd0
0x7f8c: mov [rbp-0x320],0x1
0x7f96: jmp 0x60d0
0x7f9b: mov rdx,qword ptr [rbp-0x310]
0x7fa2: mov esi,0x4
0x7fa7: mov edi,0x1
0x7fac: call 0xf2d0
0x7fb1: mov rdx,qword ptr [rbp-0x308]
0x7fb8: mov esi,0x4
0x7fbd: xor edi,edi
0x7fbf: mov r12,rax
0x7fc2: call 0xf2d0
0x7fc7: mov edx,0x5
0x7fcc: mov rbx,rax
0x7fcf: lea rsi,[rip+0xf882]
0x7fd6: jmp 0x725b
0x7fdb: cmp [rbx+0x15],0x0
0x7fdf: jnz 0x7ff9
0x7fe1: cmp [rbx+0x22],0x0
0x7fe5: jz 0x83c6
0x7feb: cmp [rbp-0x1e0],0x1
0x7ff3: jbe 0x83c6
0x7ff9: mov r14,qword ptr [rbp-0x308]
0x8000: mov byte ptr [rbp-0x350],r9b
0x8007: mov rdi,r14
0x800a: call 0x2960
0x800f: test eax,eax
0x8011: movzx r9d,byte ptr [rbp-0x350]
0x8019: jz 0x8393
0x801f: call 0x2950
0x8024: cmp [rax],0x2
0x8027: mov r15,rax
0x802a: movzx r9d,byte ptr [rbp-0x350]
0x8032: jz 0x8393
0x8038: mov rsi,r14
0x803b: mov edi,0x4
0x8040: call 0xf3f0
0x8045: lea rsi,[rip+0xfd9e]
0x804c: xor edi,edi
0x804e: mov edx,0x5
0x8053: mov rbx,rax
0x8056: call 0x2ad0
0x805b: mov esi,dword ptr [r15]
0x805e: mov rdx,rax
0x8061: mov rcx,rbx
0x8064: xor edi,edi
0x8066: xor eax,eax
0x8068: call 0x2f30
0x806d: jmp 0x6466
0x8072: lea rax,[rbp-0xd0]
0x8079: mov rsi,qword ptr [rbp-0x310]
0x8080: mov edi,0x1
0x8085: mov rdx,rax
0x8088: mov qword ptr [rbp-0x368],rax
0x808f: call 0x2b00
0x8094: test eax,eax
0x8096: movzx r8d,byte ptr [rbp-0x350]
0x809e: movzx r9d,byte ptr [rbp-0x358]
0x80a6: jnz 0x706e
0x80ac: xor ecx,ecx
0x80ae: mov rax,qword ptr [rbp-0x158]
0x80b5: cmp qword ptr [rbp-0xc8],rax
0x80bc: jnz 0x80cf
0x80be: mov rax,qword ptr [rbp-0x160]
0x80c5: cmp qword ptr [rbp-0xd0],rax
0x80cc: setz cl
0x80cf: mov eax,dword ptr [rbp-0xb8]
0x80d5: mov rdx,qword ptr [rbp-0x368]
0x80dc: and eax,0xf000
0x80e1: cmp eax,0xa000
0x80e6: jnz 0x71d2
0x80ec: mov eax,dword ptr [rbp-0x148]
0x80f2: and eax,0xf000
0x80f7: cmp eax,0xa000
0x80fc: jnz 0x71d2
0x8102: cmp [rbx+0x15],0x0
0x8106: jz 0x71d2
0x810c: jmp 0x706e
0x8111: nop qword ptr [rax+0x0]
0x8118: mov rax,0x280375465148160
0x8122: test qword ptr [rbx+0x20],rax
0x8126: jnz 0x86e0
0x812c: mov [rbp-0x330],0x0
0x8133: mov [rbp-0x35c],0x0
0x813d: jmp 0x7968
0x8142: mov byte ptr [rbp-0x315],r12b
0x8149: xor r15d,r15d
0x814c: xor r8d,r8d
0x814f: mov [rbp-0x320],0x0
0x8156: jmp 0x61d4
0x815b: mov rcx,qword ptr [rbp-0x280]
0x8162: cmp qword ptr [rax],rcx
0x8165: jnz 0x7b63
0x816b: jmp 0x7980
0x8170: mov eax,dword ptr [rbp-0x1d8]
0x8176: and eax,0xf000
0x817b: cmp eax,0x4000
0x8180: jz 0x7de6
0x8186: test r15d,r15d
0x8189: jnz 0x7bbf
0x818f: mov rdx,qword ptr [rbp-0x308]
0x8196: mov esi,0x3
0x819b: xor edi,edi
0x819d: call 0xf4f0
0x81a2: mov rdx,qword ptr [rbp-0x310]
0x81a9: mov esi,0x3
0x81ae: xor edi,edi
0x81b0: mov r12,rax
0x81b3: call 0xf4f0
0x81b8: mov edx,0x5
0x81bd: mov rbx,rax
0x81c0: lea rsi,[rip+0xf731]
0x81c7: jmp 0x725b
0x81cc: mov edx,dword ptr [rbp-0x35c]
0x81d2: mov rax,qword ptr [rbp-0x258]
0x81d9: lea rcx,[rbp-0x2f0]
0x81e0: mov rsi,qword ptr [rbp-0x308]
0x81e7: xor edi,edi
0x81e9: mov byte ptr [rbp-0x328],r8b
0x81f0: not edx
0x81f2: and edx,dword ptr [rbp-0x314]
0x81f8: mov qword ptr [rbp-0x2f0],rax
0x81ff: call 0x2da0
0x8204: test eax,eax
0x8206: mov [rbp-0x320],0x0
0x820d: movzx r8d,byte ptr [rbp-0x328]
0x8215: jz 0x619f
0x821b: mov rsi,qword ptr [rbp-0x308]
0x8222: mov edi,0x4
0x8227: call 0xf3f0
0x822c: mov edx,0x5
0x8231: mov r13,rax
0x8234: lea rsi,[rip+0xfd12]
0x823b: jmp 0x70ff
0x8240: call 0x11740
0x8245: test eax,eax
0x8247: jz 0x6305
0x824d: jmp 0x62aa
0x8252: mov rdi,qword ptr [rbx+0x40]
0x8256: mov rsi,qword ptr [rbp-0x308]
0x825d: mov rdx,r12
0x8260: call 0xb500
0x8265: movzx r8d,byte ptr [rbp-0x328]
0x826d: jmp 0x620d
0x8272: mov rsi,qword ptr [rbp-0x308]
0x8279: mov rdi,qword ptr [rbp-0x310]
0x8280: mov byte ptr [rbp-0x358],r9b
0x8287: mov byte ptr [rbp-0x350],r8b
0x828e: call 0xfbe0
0x8293: xor eax,0x1
0x8296: movzx r8d,byte ptr [rbp-0x350]
0x829e: movzx r9d,byte ptr [rbp-0x358]
0x82a6: mov r12d,eax
0x82a9: xor eax,eax
0x82ab: jmp 0x739c
0x82b0: movzx r8d,byte ptr [rbp-0x350]
0x82b8: movzx r9d,byte ptr [rbp-0x358]
0x82c0: jmp 0x68b0
0x82c5: mov rsi,qword ptr [rbp-0x308]
0x82cc: mov edi,0x4
0x82d1: call 0xf3f0
0x82d6: mov edx,0x5
0x82db: mov r13,rax
0x82de: lea rsi,[rip+0xe110]
0x82e5: jmp 0x70ff
0x82ea: mov rsi,qword ptr [rip+0x21729f]
0x82f1: mov edi,0x4
0x82f6: call 0xf3f0
0x82fb: lea rsi,[rip+0xf706]
0x8302: xor edi,edi
0x8304: mov r12,rax
0x8307: mov edx,0x5
0x830c: call 0x2ad0
0x8311: xor esi,esi
0x8313: mov rdx,rax
0x8316: xor edi,edi
0x8318: xor eax,eax
0x831a: mov rcx,r12
0x831d: call 0x2f30
0x8322: cmp [rbx+0x18],0x0
0x8326: jnz 0x6ea4
0x832c: jmp 0x6460
0x8331: mov byte ptr [rbp-0x350],r9b
0x8338: call 0x2950
0x833d: cmp [rax],0x2
0x8340: mov r12,rax
0x8343: movzx r9d,byte ptr [rbp-0x350]
0x834b: jz 0x87b1
0x8351: mov rsi,qword ptr [rbp-0x308]
0x8358: mov edi,0x4
0x835d: call 0xf3f0
0x8362: lea rsi,[rip+0xfa70]
0x8369: mov edx,0x5
0x836e: xor edi,edi
0x8370: mov rbx,rax
0x8373: call 0x2ad0
0x8378: mov esi,dword ptr [r12]
0x837c: mov rdx,rax
0x837f: mov rcx,rbx
0x8382: xor edi,edi
0x8384: xor eax,eax
0x8386: xor r12d,r12d
0x8389: call 0x2f30
0x838e: jmp 0x6466
0x8393: movzx r14d,byte ptr [rbx+0x2e]
0x8398: test r14b,r14b
0x839b: jnz 0x896c
0x83a1: test r13b,r13b
0x83a4: jnz 0x8948
0x83aa: mov [rbp-0x350],0x0
0x83b5: mov r14d,0x1
0x83bb: mov r15d,0x11
0x83c1: jmp 0x6089
0x83c6: cmp [rbx+0x4],0x2
0x83ca: jnz 0x7447
0x83d0: mov eax,dword ptr [rbp-0x268]
0x83d6: and eax,0xf000
0x83db: cmp eax,0x8000
0x83e0: jnz 0x7ff9
0x83e6: jmp 0x7447
0x83eb: mov rsi,qword ptr [rbp-0x310]
0x83f2: mov edi,0x4
0x83f7: call 0xf3f0
0x83fc: mov edx,0x5
0x8401: mov r13,rax
0x8404: lea rsi,[rip+0xfa5a]
0x840b: jmp 0x70ff
0x8410: mov r8d,dword ptr [rbp-0x314]
0x8417: mov rdx,qword ptr [rbp-0x308]
0x841e: mov ecx,0xffffffff
0x8423: mov rdi,qword ptr [rbp-0x310]
0x842a: mov esi,ecx
0x842c: call 0xa740
0x8431: test eax,eax
0x8433: jnz 0x640a
0x8439: jmp 0x6466
0x843e: mov rdx,r12
0x8441: mov rdi,r14
0x8444: mov byte ptr [rbp-0x350],r9b
0x844b: mov qword ptr [rbp-0x358],r8
0x8452: call 0x2c90
0x8457: test eax,eax
0x8459: movzx r9d,byte ptr [rbp-0x350]
0x8461: jnz 0x69e9
0x8467: lea rdi,[r14+r12*1+0x0]
0x846b: mov rsi,r15
0x846e: call 0x2cf0
0x8473: test eax,eax
0x8475: movzx r9d,byte ptr [rbp-0x350]
0x847d: mov r8,qword ptr [rbp-0x358]
0x8484: jnz 0x69e9
0x848a: mov rdi,qword ptr [rbp-0x308]
0x8491: or rcx,0xffffffff
0x8495: repnz scasb al,byte ptr es:[rdi]
0x8497: mov rax,rcx
0x849a: not rax
0x849d: lea r14,[rax-0x1]
0x84a1: lea rdi,[r14+r8*1+0x1]
0x84a6: call 0x12010
0x84ab: mov r15,qword ptr [rip+0x2170ee]
0x84b2: mov rsi,qword ptr [rbp-0x308]
0x84b9: mov rdx,r14
0x84bc: mov rdi,rax
0x84bf: mov r12,rax
0x84c2: call 0x2f20
0x84c7: mov rsi,r15
0x84ca: mov rdi,rax
0x84cd: call 0x2990
0x84d2: lea rdx,[rbp-0xd0]
0x84d9: mov rsi,r12
0x84dc: mov edi,0x1
0x84e1: call 0x2dd0
0x84e6: mov rdi,r12
0x84e9: mov r15d,eax
0x84ec: call 0x30d0
0x84f1: test r15d,r15d
0x84f4: movzx r9d,byte ptr [rbp-0x350]
0x84fc: jnz 0x69e9
0x8502: mov rax,qword ptr [rbp-0xc8]
0x8509: cmp qword ptr [rbp-0x278],rax
0x8510: jnz 0x69e9
0x8516: mov rax,qword ptr [rbp-0xd0]
0x851d: cmp qword ptr [rbp-0x280],rax
0x8524: jnz 0x69e9
0x852a: cmp [rbx+0x18],0x0
0x852e: jz 0x8796
0x8534: lea rsi,[rip+0xf3f5]
0x853b: mov edx,0x5
0x8540: xor edi,edi
0x8542: call 0x2ad0
0x8547: mov rbx,rax
0x854a: mov rdx,qword ptr [rbp-0x310]
0x8551: mov esi,0x4
0x8556: mov edi,0x1
0x855b: call 0xf2d0
0x8560: mov rdx,qword ptr [rbp-0x308]
0x8567: mov r12,rax
0x856a: mov esi,0x4
0x856f: xor edi,edi
0x8571: call 0xf2d0
0x8576: mov r8,r12
0x8579: mov rcx,rax
0x857c: mov rdx,rbx
0x857f: xor esi,esi
0x8581: xor edi,edi
0x8583: xor eax,eax
0x8585: call 0x2f30
0x858a: xor r12d,r12d
0x858d: jmp 0x6466
0x8592: mov r12d,dword ptr [rbp-0x35c]
0x8599: mov rsi,qword ptr [rbp-0x308]
0x85a0: lea rcx,[rbp-0x2f8]
0x85a7: xor edi,edi
0x85a9: mov byte ptr [rbp-0x320],r8b
0x85b0: mov [rbp-0x2f8],0x0
0x85bb: not r12d
0x85be: and r12d,dword ptr [rbp-0x314]
0x85c5: mov edx,r12d
0x85c8: call 0x2da0
0x85cd: test eax,eax
0x85cf: movzx r8d,byte ptr [rbp-0x320]
0x85d7: jz 0x619f
0x85dd: mov rdi,qword ptr [rbp-0x308]
0x85e4: mov esi,r12d
0x85e7: and esi,0xffffefff
0x85ed: call 0x2d60
0x85f2: test eax,eax
0x85f4: movzx r8d,byte ptr [rbp-0x320]
0x85fc: jz 0x619f
0x8602: mov rsi,qword ptr [rbp-0x308]
0x8609: mov edi,0x4
0x860e: call 0xf3f0
0x8613: mov edx,0x5
0x8618: mov r13,rax
0x861b: lea rsi,[rip+0xf915]
0x8622: jmp 0x70ff
0x8627: mov rsi,qword ptr [rbp-0x310]
0x862e: mov edi,0x4
0x8633: call 0xf3f0
0x8638: lea rsi,[rip+0xf841]
0x863f: mov edx,0x5
0x8644: mov r12,rax
0x8647: xor edi,edi
0x8649: call 0x2ad0
0x864e: mov qword ptr [rbp-0x328],rax
0x8655: call 0x2950
0x865a: mov rcx,r12
0x865d: mov rdx,qword ptr [rbp-0x328]
0x8664: mov esi,dword ptr [rax]
0x8666: jmp 0x7d61
0x866b: mov rsi,qword ptr [rbp-0x308]
0x8672: mov rdi,qword ptr [rbp-0x310]
0x8679: mov byte ptr [rbp-0x35c],r9b
0x8680: mov byte ptr [rbp-0x358],r8b
0x8687: mov qword ptr [rbp-0x350],rdx
0x868e: call 0xfbe0
0x8693: test al,al
0x8695: mov rdx,qword ptr [rbp-0x350]
0x869c: movzx r8d,byte ptr [rbp-0x358]
0x86a4: movzx r9d,byte ptr [rbp-0x35c]
0x86ac: jz 0x8f27
0x86b2: mov eax,dword ptr [rdx+0x18]
0x86b5: and eax,0xf000
0x86ba: cmp eax,0xa000
0x86bf: jz 0x72ec
0x86c5: mov eax,dword ptr [r12+0x18]
0x86ca: and eax,0xf000
0x86cf: cmp eax,0xa000
0x86d4: jz 0x72ec
0x86da: jmp 0x72c4
0x86df: nop 
0x86e0: movzx esi,byte ptr [rbx+0x25]
0x86e4: mov rdi,qword ptr [rbp-0x308]
0x86eb: xor edx,edx
0x86ed: mov rcx,rbx
0x86f0: call 0x5890
0x86f5: test al,al
0x86f7: jnz 0x812c
0x86fd: cmp [rbx+0x26],0x0
0x8701: jnz 0x6bb0
0x8707: jmp 0x812c
0x870c: mov rdx,qword ptr [rbp-0x1f0]
0x8713: mov rsi,qword ptr [rbp-0x1e8]
0x871a: mov rdi,qword ptr [rbp-0x308]
0x8721: call 0x9fc0
0x8726: mov rax,qword ptr [rbp-0x338]
0x872d: mov [rax],0x1
0x8730: jmp 0x7918
0x8735: mov rdx,qword ptr [rbp-0x310]
0x873c: mov esi,0x4
0x8741: mov edi,0x1
0x8746: call 0xf2d0
0x874b: mov rdx,qword ptr [rbp-0x308]
0x8752: mov esi,0x4
0x8757: xor edi,edi
0x8759: mov r12,rax
0x875c: call 0xf2d0
0x8761: mov edx,0x5
0x8766: mov rbx,rax
0x8769: lea rsi,[rip+0xf120]
0x8770: jmp 0x725b
0x8775: mov edx,dword ptr [rbx+0x10]
0x8778: mov rdi,qword ptr [rbp-0x308]
0x877f: mov esi,0xffffffff
0x8784: call 0xa7d0
0x8789: test eax,eax
0x878b: jnz 0x5f30
0x8791: jmp 0x6466
0x8796: lea rsi,[rip+0xf1cb]
0x879d: mov edx,0x5
0x87a2: xor edi,edi
0x87a4: call 0x2ad0
0x87a9: mov rbx,rax
0x87ac: jmp 0x854a
0x87b1: mov [rbp-0x350],0x0
0x87bc: mov r14d,0x1
0x87c2: mov r15d,0x11
0x87c8: jmp 0x5fae
0x87cd: mov rsi,qword ptr [rbp-0x308]
0x87d4: mov rdi,qword ptr [rbp-0x310]
0x87db: xor edx,edx
0x87dd: call 0x4fd0
0x87e2: jmp 0x7968
0x87e7: mov rsi,qword ptr [rbp-0x310]
0x87ee: mov edi,0x4
0x87f3: call 0xf3f0
0x87f8: lea rsi,[rip+0xf725]
0x87ff: xor edi,edi
0x8801: mov edx,0x5
0x8806: mov r12,rax
0x8809: call 0x2ad0
0x880e: mov r13,rax
0x8811: call 0x2950
0x8816: mov esi,dword ptr [rax]
0x8818: xor edi,edi
0x881a: mov rcx,r12
0x881d: mov rdx,r13
0x8820: xor eax,eax
0x8822: call 0x2f30
0x8827: mov rdi,qword ptr [rbp-0x330]
0x882e: call 0x30d0
0x8833: jmp 0x6bb0
0x8838: mov rsi,qword ptr [rbp-0x310]
0x883f: mov edi,0x4
0x8844: call 0xf3f0
0x8849: lea rsi,[rip+0xf602]
0x8850: mov edx,0x5
0x8855: xor edi,edi
0x8857: mov r12,rax
0x885a: call 0x2ad0
0x885f: mov r15,rax
0x8862: call 0x2950
0x8867: mov esi,dword ptr [rax]
0x8869: mov rcx,r12
0x886c: mov rdx,r15
0x886f: xor edi,edi
0x8871: xor eax,eax
0x8873: xor r12d,r12d
0x8876: call 0x2f30
0x887b: jmp 0x7b63
0x8880: mov rsi,qword ptr [rbp-0x250]
0x8887: mov rdi,qword ptr [rbp-0x310]
0x888e: call 0xa820
0x8893: test rax,rax
0x8896: mov r12,rax
0x8899: jz 0x90e3
0x889f: movzx ecx,byte ptr [rbx+0x16]
0x88a3: mov rdx,qword ptr [rbp-0x308]
0x88aa: mov r8d,0xffffffff
0x88b0: mov esi,0xffffff9c
0x88b5: mov rdi,rax
0x88b8: call 0xa5e0
0x88bd: test eax,eax
0x88bf: mov dword ptr [rbp-0x320],eax
0x88c5: jle 0x9108
0x88cb: cmp [rbx+0x2d],0x1
0x88cf: jnz 0x88da
0x88d1: test r14b,r14b
0x88d4: jz 0x94b9
0x88da: mov rdi,r12
0x88dd: call 0x30d0
0x88e2: mov rsi,qword ptr [rbp-0x308]
0x88e9: mov edi,0x4
0x88ee: call 0xf3f0
0x88f3: lea rsi,[rip+0xf2f6]
0x88fa: xor edi,edi
0x88fc: mov edx,0x5
0x8901: mov r12,rax
0x8904: call 0x2ad0
0x8909: mov esi,dword ptr [rbp-0x320]
0x890f: mov rdx,rax
0x8912: mov rcx,r12
0x8915: xor edi,edi
0x8917: xor eax,eax
0x8919: call 0x2f30
0x891e: jmp 0x6bb0
0x8923: mov rsi,qword ptr [rbp-0x308]
0x892a: mov edi,0x4
0x892f: call 0xf3f0
0x8934: mov edx,0x5
0x8939: mov r13,rax
0x893c: lea rsi,[rip+0xf4de]
0x8943: jmp 0x70ff
0x8948: cmp [rbx+0x40],0x0
0x894d: mov r14d,r13d
0x8950: mov [rbp-0x350],0x0
0x895b: mov r15d,0x11
0x8961: jnz 0x5fc2
0x8967: jmp 0x6089
0x896c: mov rsi,qword ptr [rbp-0x308]
0x8973: mov edi,0x4
0x8978: mov byte ptr [rbp-0x358],r9b
0x897f: mov r15d,0x11
0x8985: call 0xf3f0
0x898a: lea rsi,[rip+0xf37f]
0x8991: mov r12,rax
0x8994: mov edx,0x5
0x8999: xor edi,edi
0x899b: call 0x2ad0
0x89a0: mov rdx,r12
0x89a3: mov rsi,rax
0x89a6: mov edi,0x1
0x89ab: xor eax,eax
0x89ad: call 0x2ee0
0x89b2: mov [rbp-0x350],0x0
0x89bd: movzx r9d,byte ptr [rbp-0x358]
0x89c5: jmp 0x5fae
0x89ca: mov eax,dword ptr [rbp-0x1d0]
0x89d0: cmp dword ptr [rbp-0x260],eax
0x89d6: jnz 0x6322
0x89dc: jmp 0x6367
0x89e1: call 0x5bf0
0x89e6: not eax
0x89e8: and dword ptr [rbp-0x35c],eax
0x89ee: jz 0x639d
0x89f4: cmp [rbp-0x315],0x1
0x89fb: jz 0x63aa
0x8a01: test r14b,r14b
0x8a04: jnz 0x9377
0x8a0a: mov eax,dword ptr [rbp-0x1d8]
0x8a10: mov dword ptr [rbp-0x38c],eax
0x8a16: not eax
0x8a18: test dword ptr [rbp-0x35c],eax
0x8a1e: jnz 0x63aa
0x8a24: jmp 0x6466
0x8a29: mov eax,dword ptr [rbp-0x314]
0x8a2f: mov edx,0x1b6
0x8a34: mov ebx,0x1ff
0x8a39: and eax,0x7000
0x8a3e: cmp eax,0x4000
0x8a43: cmovne ebx,edx
0x8a46: call 0x5bf0
0x8a4b: not eax
0x8a4d: mov edx,eax
0x8a4f: and edx,ebx
0x8a51: jmp 0x8778
0x8a56: and r12d,0x1ff
0x8a5d: test r14b,r14b
0x8a60: mov dword ptr [rbp-0x3a4],r12d
0x8a67: jnz 0x9000
0x8a6d: cmp [rbx+0x23],0x1
0x8a71: mov rdi,qword ptr [rbp-0x308]
0x8a78: sbb esi,esi
0x8a7a: xor eax,eax
0x8a7c: and esi,0xfffffe00
0x8a82: add esi,0x201
0x8a88: call 0xb490
0x8a8d: mov dword ptr [rbp-0x328],eax
0x8a93: call 0x2950
0x8a98: mov r12,rax
0x8a9b: mov rax,0x280375465148160
0x8aa5: test qword ptr [rbx+0x20],rax
0x8aa9: jnz 0x9335
0x8aaf: cmp [rbp-0x328],0x0
0x8ab6: js 0x9342
0x8abc: mov [rbp-0x378],0x0
0x8ac6: lea rax,[rbp-0xd0]
0x8acd: mov esi,dword ptr [rbp-0x328]
0x8ad3: mov edi,0x1
0x8ad8: mov rdx,rax
0x8adb: mov qword ptr [rbp-0x368],rax
0x8ae2: call 0x2e20
0x8ae7: test eax,eax
0x8ae9: mov dword ptr [rbp-0x348],eax
0x8aef: jnz 0x9696
0x8af5: cmp [rbp-0x338],0x0
0x8afc: jz 0x91cf
0x8b02: cmp [rbx+0x38],0x0
0x8b06: jnz 0x9964
0x8b0c: call 0x3010
0x8b11: mov rcx,qword ptr [rbp-0x98]
0x8b18: movsxd r12,eax
0x8b1b: mov rax,0x2305843009213562880
0x8b25: mov r8d,0x200
0x8b2b: mov edi,dword ptr [rbp-0x320]
0x8b31: mov qword ptr [rbp-0x330],r8
0x8b38: lea rdx,[rcx-0x20000]
0x8b3f: cmp rdx,rax
0x8b42: mov eax,0x20000
0x8b47: lea rdx,[rcx-0x1]
0x8b4b: cmovbe rax,rcx
0x8b4f: mov qword ptr [rbp-0x370],rax
0x8b56: mov rax,0x2305843009213693951
0x8b60: cmp rdx,rax
0x8b63: cmovnbe rcx,r8
0x8b67: xor edx,edx
0x8b69: xor esi,esi
0x8b6b: mov qword ptr [rbp-0x398],rcx
0x8b72: mov ecx,0x2
0x8b77: call 0xb450
0x8b7c: mov r9d,dword ptr [rbp-0x148]
0x8b83: mov r8,qword ptr [rbp-0x330]
0x8b8a: and r9d,0xf000
0x8b91: cmp r9d,0x8000
0x8b98: jz 0x9a7a
0x8b9e: mov eax,dword ptr [rbp-0xb8]
0x8ba4: and eax,0xf000
0x8ba9: cmp eax,0x8000
0x8bae: jz 0x9a0f
0x8bb4: mov rdi,qword ptr [rbp-0x128]
0x8bbb: mov rax,0x9223372036854775807
0x8bc5: mov rsi,qword ptr [rbp-0x370]
0x8bcc: sub rax,r12
0x8bcf: mov dword ptr [rbp-0x380],r9d
0x8bd6: mov r8,rax
0x8bd9: mov rax,0x2305843009213562880
0x8be3: lea rdx,[rdi-0x20000]
0x8bea: mov qword ptr [rbp-0x330],r8
0x8bf1: cmp rdx,rax
0x8bf4: mov eax,0x20000
0x8bf9: mov rdx,r8
0x8bfc: cmovnbe rdi,rax
0x8c00: call 0xb060
0x8c05: mov r9d,dword ptr [rbp-0x380]
0x8c0c: mov rcx,rax
0x8c0f: mov r8,qword ptr [rbp-0x330]
0x8c16: cmp r9d,0x8000
0x8c1d: jz 0x98ed
0x8c23: mov rax,qword ptr [rbp-0x370]
0x8c2a: xor edx,edx
0x8c2c: lea rsi,[rcx+rax*1-0x1]
0x8c31: mov rax,rsi
0x8c34: div rcx
0x8c37: sub rsi,rdx
0x8c3a: mov qword ptr [rbp-0x370],rsi
0x8c41: jz 0x96f1
0x8c47: cmp rsi,r8
0x8c4a: jnbe 0x96f1
0x8c50: mov rax,qword ptr [rbp-0x370]
0x8c57: lea rdi,[r12+rax*1+0x0]
0x8c5b: call 0x12010
0x8c60: lea rcx,[rax+r12*1-0x1]
0x8c65: xor edx,edx
0x8c67: mov qword ptr [rbp-0x330],rax
0x8c6e: mov rax,rcx
0x8c71: div r12
0x8c74: sub rcx,rdx
0x8c77: cmp [rbp-0x348],0x0
0x8c7e: mov qword ptr [rbp-0x3b0],rcx
0x8c85: jz 0x96fd
0x8c8b: mov [rbp-0x3a5],0x0
0x8c92: mov [rbp-0x390],0x1
0x8c9c: mov rax,qword ptr [rbp-0x130]
0x8ca3: mov edi,dword ptr [rbp-0x320]
0x8ca9: xor r12d,r12d
0x8cac: mov qword ptr [rbp-0x380],rax
0x8cb3: lea rax,[rbp-0x2f0]
0x8cba: mov rsi,rax
0x8cbd: mov qword ptr [rbp-0x348],rax
0x8cc4: call 0xa090
0x8cc9: lea rax,[rbp-0x2f9]
0x8cd0: xor ecx,ecx
0x8cd2: mov qword ptr [rbp-0x388],rbx
0x8cd9: mov [rbp-0x3a0],0x0
0x8ce4: mov rbx,rcx
0x8ce7: mov dword ptr [rbp-0x360],r13d
0x8cee: mov qword ptr [rbp-0x3b8],rax
0x8cf5: lea rax,[rbp-0x2f8]
0x8cfc: mov qword ptr [rbp-0x3c0],rax
0x8d03: mov rdi,qword ptr [rbp-0x348]
0x8d0a: call 0xa0c0
0x8d0f: test al,al
0x8d11: jz 0x9911
0x8d17: cmp [rbp-0x2d8],0x0
0x8d1f: jz 0x97ee
0x8d25: mov rdx,rbx
0x8d28: mov rcx,r12
0x8d2b: xor r13d,r13d
0x8d2e: xor eax,eax
0x8d30: jmp 0x8ded
0x8d35: nop qword ptr [rax]
0x8d38: cmp [rbp-0x390],0x3
0x8d3f: mov r8d,0x0
0x8d45: cmove r8,qword ptr [rbp-0x398]
0x8d4d: sub rsp,0x8
0x8d51: mov rcx,qword ptr [rbp-0x370]
0x8d58: mov rdx,qword ptr [rbp-0x3b0]
0x8d5f: mov esi,dword ptr [rbp-0x328]
0x8d65: mov edi,dword ptr [rbp-0x320]
0x8d6b: mov r9d,0x1
0x8d71: push qword ptr [rbp-0x3b8]
0x8d77: push qword ptr [rbp-0x3c0]
0x8d7d: push rbx
0x8d7e: push qword ptr [rbp-0x308]
0x8d84: push qword ptr [rbp-0x310]
0x8d8a: call 0x53b0
0x8d8f: add rsp,0x30
0x8d93: test al,al
0x8d95: jz 0x8e98
0x8d9b: mov rax,qword ptr [rbp-0x2f8]
0x8da2: lea rcx,[r12+rax*1+0x0]
0x8da6: test rax,rax
0x8da9: mov qword ptr [rbp-0x3a0],rcx
0x8db0: jz 0x8dbf
0x8db2: movzx eax,byte ptr [rbp-0x2f9]
0x8db9: mov byte ptr [rbp-0x338],al
0x8dbf: mov rcx,qword ptr [rbp-0x3a0]
0x8dc6: cmp qword ptr [rbp-0x380],rcx
0x8dcd: jz 0x97e7
0x8dd3: lea eax,[r13+0x1]
0x8dd7: cmp rax,qword ptr [rbp-0x2d8]
0x8dde: mov rcx,r12
0x8de1: mov rdx,rbx
0x8de4: mov r13,rax
0x8de7: jnb 0x97ee
0x8ded: lea rsi,[rax+rax*2+0x0]
0x8df1: mov rax,qword ptr [rbp-0x2c8]
0x8df8: lea rax,[rax+rsi*8+0x0]
0x8dfc: mov rsi,qword ptr [rbp-0x380]
0x8e03: mov r12,qword ptr [rax]
0x8e06: mov rbx,qword ptr [rax+0x8]
0x8e0a: lea rax,[r12+rbx*1+0x0]
0x8e0e: cmp rsi,rax
0x8e11: jnl 0x8e20
0x8e13: cmp r12,rsi
0x8e16: cmovnl r12,rsi
0x8e1a: sub rsi,r12
0x8e1d: mov rbx,rsi
0x8e20: mov rax,r12
0x8e23: mov [rbp-0x338],0x0
0x8e2a: sub rax,rcx
0x8e2d: mov rcx,rax
0x8e30: sub rcx,rdx
0x8e33: jz 0x8d38
0x8e39: mov edi,dword ptr [rbp-0x320]
0x8e3f: xor edx,edx
0x8e41: mov rsi,r12
0x8e44: mov qword ptr [rbp-0x3a0],rcx
0x8e4b: call 0x2bc0
0x8e50: test rax,rax
0x8e53: mov rcx,qword ptr [rbp-0x3a0]
0x8e5a: js 0x9ccf
0x8e60: mov eax,dword ptr [rbp-0x390]
0x8e66: cmp eax,0x3
0x8e69: setz dl
0x8e6c: sub eax,0x1
0x8e6f: jz 0x95c8
0x8e75: mov rsi,qword ptr [rbp-0x308]
0x8e7c: mov edi,dword ptr [rbp-0x328]
0x8e82: movzx edx,dl
0x8e85: call 0x52f0
0x8e8a: test al,al
0x8e8c: mov byte ptr [rbp-0x338],al
0x8e92: jnz 0x8d38
0x8e98: mov rbx,qword ptr [rbp-0x388]
0x8e9f: mov r13d,dword ptr [rbp-0x360]
0x8ea6: mov rdi,qword ptr [rbp-0x2c8]
0x8ead: call 0x30d0
0x8eb2: xor r8d,r8d
0x8eb5: mov edi,dword ptr [rbp-0x328]
0x8ebb: mov byte ptr [rbp-0x338],r8b
0x8ec2: call 0x2c30
0x8ec7: test eax,eax
0x8ec9: movzx r8d,byte ptr [rbp-0x338]
0x8ed1: jns 0x7d78
0x8ed7: mov rsi,qword ptr [rbp-0x308]
0x8ede: mov edi,0x4
0x8ee3: call 0xf3f0
0x8ee8: lea rsi,[rip+0xf035]
0x8eef: mov edx,0x5
0x8ef4: xor edi,edi
0x8ef6: mov r12,rax
0x8ef9: call 0x2ad0
0x8efe: mov qword ptr [rbp-0x328],rax
0x8f05: call 0x2950
0x8f0a: mov rdx,qword ptr [rbp-0x328]
0x8f11: mov esi,dword ptr [rax]
0x8f13: mov rcx,r12
0x8f16: xor edi,edi
0x8f18: xor eax,eax
0x8f1a: call 0x2f30
0x8f1f: xor r8d,r8d
0x8f22: jmp 0x7d78
0x8f27: movzx r12d,byte ptr [rbx+0x18]
0x8f2c: xor r12d,0x1
0x8f30: jmp 0x739c
0x8f35: mov [rbp-0x315],0x0
0x8f3c: mov r12d,0x1
0x8f42: jmp 0x7b47
0x8f47: mov rax,qword ptr [rbp-0xd0]
0x8f4e: cmp qword ptr [rbp-0x160],rax
0x8f55: jnz 0x7e44
0x8f5b: jmp 0x6b1c
0x8f60: mov rdi,qword ptr [rbp-0x308]
0x8f67: call 0x2960
0x8f6c: test eax,eax
0x8f6e: jnz 0x9ba6
0x8f74: cmp [rbx+0x2e],0x0
0x8f78: jz 0x8fb3
0x8f7a: mov rsi,qword ptr [rbp-0x308]
0x8f81: mov edi,0x4
0x8f86: call 0xf3f0
0x8f8b: lea rsi,[rip+0xed7e]
0x8f92: mov r12,rax
0x8f95: mov edx,0x5
0x8f9a: xor edi,edi
0x8f9c: call 0x2ad0
0x8fa1: mov rdx,r12
0x8fa4: mov rsi,rax
0x8fa7: mov edi,0x1
0x8fac: xor eax,eax
0x8fae: call 0x2ee0
0x8fb3: movzx r14d,byte ptr [rbx+0x21]
0x8fb8: mov eax,dword ptr [rbp-0x35c]
0x8fbe: mov dword ptr [rbp-0x378],eax
0x8fc4: test r14b,r14b
0x8fc7: jz 0x900c
0x8fc9: mov edx,dword ptr [rbp-0x3a4]
0x8fcf: mov rsi,qword ptr [rbp-0x308]
0x8fd6: mov r8,rbx
0x8fd9: mov rdi,qword ptr [rbp-0x310]
0x8fe0: mov ecx,0x1
0x8fe5: call 0x57c0
0x8fea: test al,al
0x8fec: mov r8d,eax
0x8fef: mov [rbp-0x330],0x0
0x8ffa: jz 0x7d78
0x9000: mov eax,dword ptr [rbp-0x35c]
0x9006: mov dword ptr [rbp-0x378],eax
0x900c: mov eax,dword ptr [rbp-0x378]
0x9012: mov rdi,qword ptr [rbp-0x308]
0x9019: mov esi,0xc1
0x901e: not eax
0x9020: and eax,dword ptr [rbp-0x3a4]
0x9026: mov edx,eax
0x9028: mov dword ptr [rbp-0x330],eax
0x902e: xor eax,eax
0x9030: call 0xb490
0x9035: mov r14d,eax
0x9038: mov dword ptr [rbp-0x328],eax
0x903e: call 0x2950
0x9043: mov r8d,dword ptr [rax]
0x9046: mov r12,rax
0x9049: mov eax,r14d
0x904c: shr eax,0x1f
0x904f: cmp r8d,0x11
0x9053: setz dl
0x9056: and dl,al
0x9058: mov r14d,edx
0x905b: jz 0x9462
0x9061: cmp [rbx+0x18],0x0
0x9065: mov r8d,0x11
0x906b: jz 0x93f5
0x9071: mov r9d,0x1
0x9077: mov rsi,qword ptr [rbp-0x308]
0x907e: mov edi,0x4
0x9083: mov byte ptr [rbp-0x330],r9b
0x908a: mov dword ptr [rbp-0x328],r8d
0x9091: call 0xf3f0
0x9096: lea rsi,[rip+0xedf3]
0x909d: mov edx,0x5
0x90a2: xor edi,edi
0x90a4: mov r12,rax
0x90a7: call 0x2ad0
0x90ac: mov r8d,dword ptr [rbp-0x328]
0x90b3: mov rdx,rax
0x90b6: mov rcx,r12
0x90b9: xor edi,edi
0x90bb: xor eax,eax
0x90bd: mov esi,r8d
0x90c0: call 0x2f30
0x90c5: movzx r9d,byte ptr [rbp-0x330]
0x90cd: xor r8d,r8d
0x90d0: mov [rbp-0x330],0x0
0x90db: mov r14d,r9d
0x90de: jmp 0x7d78
0x90e3: mov rsi,qword ptr [rbp-0x310]
0x90ea: mov edi,0x4
0x90ef: call 0xf3f0
0x90f4: mov edx,0x5
0x90f9: mov r13,rax
0x90fc: lea rsi,[rip+0xee68]
0x9103: jmp 0x70ff
0x9108: mov rdi,r12
0x910b: call 0x30d0
0x9110: movzx r8d,byte ptr [rbx+0x25]
0x9115: test r8b,r8b
0x9118: jnz 0x6d30
0x911e: movzx eax,byte ptr [rbx+0x1d]
0x9122: test al,al
0x9124: mov byte ptr [rbp-0x320],al
0x912a: jnz 0x93a3
0x9130: movzx r8d,byte ptr [rbp-0x320]
0x9138: mov [rbp-0x320],0x1
0x913f: jmp 0x619f
0x9144: call 0x2b30
0x9149: mov rsi,qword ptr [rbp-0x308]
0x9150: lea rdx,[rbp-0x160]
0x9157: mov edi,0x1
0x915c: mov byte ptr [rbp-0x358],r9b
0x9163: mov byte ptr [rbp-0x350],r8b
0x916a: call 0x2dd0
0x916f: test eax,eax
0x9171: movzx r8d,byte ptr [rbp-0x350]
0x9179: movzx r9d,byte ptr [rbp-0x358]
0x9181: jz 0x7811
0x9187: jmp 0x5e3f
0x918c: mov rsi,qword ptr [rbp-0x310]
0x9193: lea rdx,[rbp-0xd0]
0x919a: mov edi,0x1
0x919f: mov byte ptr [rbp-0x358],r9b
0x91a6: mov byte ptr [rbp-0x350],r8b
0x91ad: call 0x2dd0
0x91b2: test eax,eax
0x91b4: movzx r8d,byte ptr [rbp-0x350]
0x91bc: movzx r9d,byte ptr [rbp-0x358]
0x91c4: jz 0x777c
0x91ca: jmp 0x5e3f
0x91cf: mov [rbp-0x330],0x0
0x91da: cmp [rbx+0x1f],0x0
0x91de: jnz 0x95e6
0x91e4: cmp [rbx+0x1d],0x0
0x91e8: jz 0x9244
0x91ea: mov eax,dword ptr [rbp-0xb4]
0x91f0: cmp dword ptr [rbp-0x264],eax
0x91f6: jnz 0x9206
0x91f8: mov eax,dword ptr [rbp-0xb0]
0x91fe: cmp dword ptr [rbp-0x260],eax
0x9204: jz 0x9244
0x9206: mov r9,qword ptr [rbp-0x368]
0x920d: mov edx,dword ptr [rbp-0x328]
0x9213: lea rcx,[rbp-0x280]
0x921a: mov rsi,qword ptr [rbp-0x308]
0x9221: movzx r8d,r14b
0x9225: mov rdi,rbx
0x9228: call 0x59e0
0x922d: cmp eax,0xff
0x9230: jz 0x8eb2
0x9236: test eax,eax
0x9238: jnz 0x9244
0x923a: and [rbp-0x340],0xfffff1ff
0x9244: cmp [rbx+0x27],0x0
0x9248: jz 0x9257
0x924a: test [rbp-0xb8],0x80
0x9251: jz 0x9c7e
0x9257: mov rax,0x71776119061217535
0x9261: test qword ptr [rbx+0x18],rax
0x9265: jnz 0x953d
0x926b: cmp [rbx+0x2b],0x0
0x926f: jnz 0x9d02
0x9275: mov r12d,r14d
0x9278: and r12b,byte ptr [rbx+0x20]
0x927c: jnz 0x9b77
0x9282: cmp [rbp-0x378],0x0
0x9289: mov r8d,0x1
0x928f: jz 0x8eb5
0x9295: mov byte ptr [rbp-0x338],r8b
0x929c: call 0x5bf0
0x92a1: not eax
0x92a3: test dword ptr [rbp-0x378],eax
0x92a9: movzx r8d,byte ptr [rbp-0x338]
0x92b1: jz 0x8eb5
0x92b7: mov edx,dword ptr [rbp-0x3a4]
0x92bd: mov rsi,qword ptr [rbp-0x308]
0x92c4: mov edi,dword ptr [rbp-0x328]
0x92ca: call 0x30e0
0x92cf: test eax,eax
0x92d1: movzx r8d,byte ptr [rbp-0x338]
0x92d9: jz 0x8eb5
0x92df: mov rsi,qword ptr [rbp-0x308]
0x92e6: mov edi,0x4
0x92eb: call 0xf3f0
0x92f0: lea rsi,[rip+0xec0f]
0x92f7: mov edx,0x5
0x92fc: xor edi,edi
0x92fe: mov r12,rax
0x9301: call 0x2ad0
0x9306: mov qword ptr [rbp-0x338],rax
0x930d: call 0x2950
0x9312: mov rdx,qword ptr [rbp-0x338]
0x9319: mov esi,dword ptr [rax]
0x931b: mov rcx,r12
0x931e: xor edi,edi
0x9320: xor eax,eax
0x9322: call 0x2f30
0x9327: movzx r8d,byte ptr [rbx+0x24]
0x932c: xor r8d,0x1
0x9330: jmp 0x8eb5
0x9335: cmp [rbp-0x328],0x0
0x933c: jns 0x958e
0x9342: movzx r9d,byte ptr [rbx+0x16]
0x9347: test r9b,r9b
0x934a: jnz 0x8f60
0x9350: mov r8d,dword ptr [r12]
0x9354: cmp r8d,0x2
0x9358: jnz 0x9077
0x935e: cmp [rbx+0x18],0x0
0x9362: jnz 0x9077
0x9368: mov [rbp-0x378],0x0
0x9372: jmp 0x900c
0x9377: mov rsi,qword ptr [rbp-0x308]
0x937e: lea rdx,[rbp-0x1f0]
0x9385: mov edi,0x1
0x938a: call 0x2b00
0x938f: test eax,eax
0x9391: jz 0x8a0a
0x9397: mov rsi,qword ptr [rbp-0x308]
0x939e: jmp 0x6505
0x93a3: mov edx,dword ptr [rbp-0x260]
0x93a9: mov esi,dword ptr [rbp-0x264]
0x93af: mov rdi,qword ptr [rbp-0x308]
0x93b6: mov byte ptr [rbp-0x328],r8b
0x93bd: call 0x2e40
0x93c2: test eax,eax
0x93c4: movzx r8d,byte ptr [rbp-0x328]
0x93cc: jz 0x619f
0x93d2: mov rdi,rbx
0x93d5: call 0x59b0
0x93da: test al,al
0x93dc: movzx r8d,byte ptr [rbp-0x328]
0x93e4: jz 0x9be4
0x93ea: mov byte ptr [rbp-0x320],al
0x93f0: jmp 0x619f
0x93f5: mov rsi,qword ptr [rbp-0x308]
0x93fc: lea rdx,[rbp-0xd0]
0x9403: mov edi,0x1
0x9408: mov dword ptr [rbp-0x348],r8d
0x940f: call 0x2b00
0x9414: test eax,eax
0x9416: mov r8d,dword ptr [rbp-0x348]
0x941d: jnz 0x9462
0x941f: mov eax,dword ptr [rbp-0xb8]
0x9425: and eax,0xf000
0x942a: cmp eax,0xa000
0x942f: jnz 0x9462
0x9431: movzx r8d,byte ptr [rbx+0x30]
0x9436: test r8b,r8b
0x9439: jz 0x9c27
0x943f: mov edx,dword ptr [rbp-0x330]
0x9445: mov rdi,qword ptr [rbp-0x308]
0x944c: mov esi,0x41
0x9451: xor eax,eax
0x9453: call 0xb490
0x9458: mov r8d,dword ptr [r12]
0x945c: mov dword ptr [rbp-0x328],eax
0x9462: mov eax,dword ptr [rbp-0x328]
0x9468: shr eax,0x1f
0x946b: cmp r8d,0x15
0x946f: setz dl
0x9472: and dl,al
0x9474: mov r9d,edx
0x9477: jz 0x9576
0x947d: mov rsi,qword ptr [rbp-0x308]
0x9484: mov r8d,0x15
0x948a: cmp [rsi],0x0
0x948d: mov rdi,rsi
0x9490: jz 0x9077
0x9496: xor eax,eax
0x9498: or rcx,0xffffffff
0x949c: xor r8d,r8d
0x949f: repnz scasb al,byte ptr es:[rdi]
0x94a1: mov rax,rcx
0x94a4: not rax
0x94a7: cmp [rsi+rax*1-0x2],0x2f
0x94ac: setnz r8b
0x94b0: add r8d,0x14
0x94b4: jmp 0x9077
0x94b9: mov eax,dword ptr [rbp-0x1d8]
0x94bf: and eax,0xf000
0x94c4: cmp eax,0xa000
0x94c9: jnz 0x88da
0x94cf: or rcx,0xffffffff
0x94d3: mov eax,r14d
0x94d6: mov rdi,r12
0x94d9: repnz scasb al,byte ptr es:[rdi]
0x94db: mov rsi,qword ptr [rbp-0x1c0]
0x94e2: not rcx
0x94e5: lea rax,[rcx-0x1]
0x94e9: cmp rsi,rax
0x94ec: jnz 0x88da
0x94f2: mov rdi,qword ptr [rbp-0x308]
0x94f9: call 0xa820
0x94fe: test rax,rax
0x9501: jz 0x88da
0x9507: mov rdi,rax
0x950a: mov rsi,r12
0x950d: mov qword ptr [rbp-0x328],rax
0x9514: call 0x2cf0
0x9519: mov rdx,qword ptr [rbp-0x328]
0x9520: test eax,eax
0x9522: mov rdi,rdx
0x9525: jnz 0x9d22
0x952b: call 0x30d0
0x9530: mov rdi,r12
0x9533: call 0x30d0
0x9538: jmp 0x9110
0x953d: mov r8d,dword ptr [rbp-0x340]
0x9544: mov ecx,dword ptr [rbp-0x328]
0x954a: mov rdx,qword ptr [rbp-0x308]
0x9551: mov esi,dword ptr [rbp-0x320]
0x9557: mov rdi,qword ptr [rbp-0x310]
0x955e: call 0xa740
0x9563: test eax,eax
0x9565: mov r8d,0x1
0x956b: jz 0x8eb5
0x9571: jmp 0x9327
0x9576: cmp [rbp-0x328],0x0
0x957d: mov r14d,0x1
0x9583: jns 0x8ac6
0x9589: jmp 0x9071
0x958e: movzx esi,byte ptr [rbx+0x25]
0x9592: mov rdi,qword ptr [rbp-0x308]
0x9599: xor edx,edx
0x959b: mov rcx,rbx
0x959e: call 0x5890
0x95a3: test al,al
0x95a5: mov r8d,eax
0x95a8: jnz 0x8abc
0x95ae: cmp [rbx+0x26],0x0
0x95b2: mov [rbp-0x330],0x0
0x95bd: jnz 0x8eb5
0x95c3: jmp 0x8abc
0x95c8: mov edi,dword ptr [rbp-0x328]
0x95ce: mov rsi,rcx
0x95d1: call 0x4ee0
0x95d6: test al,al
0x95d8: jz 0x9af3
0x95de: xor r8d,r8d
0x95e1: jmp 0x8d4d
0x95e6: mov rax,qword ptr [rbp-0x238]
0x95ed: mov rsi,qword ptr [rbp-0x308]
0x95f4: lea rdx,[rbp-0x2a0]
0x95fb: mov edi,dword ptr [rbp-0x328]
0x9601: mov qword ptr [rbp-0x2a0],rax
0x9608: mov rax,qword ptr [rbp-0x230]
0x960f: mov qword ptr [rbp-0x298],rax
0x9616: mov rax,qword ptr [rbp-0x228]
0x961d: mov qword ptr [rbp-0x290],rax
0x9624: mov rax,qword ptr [rbp-0x220]
0x962b: mov qword ptr [rbp-0x288],rax
0x9632: call 0x112e0
0x9637: test eax,eax
0x9639: jz 0x91e4
0x963f: mov rsi,qword ptr [rbp-0x308]
0x9646: mov edi,0x4
0x964b: call 0xf3f0
0x9650: lea rsi,[rip+0xe897]
0x9657: xor edi,edi
0x9659: mov edx,0x5
0x965e: mov r12,rax
0x9661: call 0x2ad0
0x9666: mov qword ptr [rbp-0x338],rax
0x966d: call 0x2950
0x9672: mov rdx,qword ptr [rbp-0x338]
0x9679: mov esi,dword ptr [rax]
0x967b: xor edi,edi
0x967d: xor eax,eax
0x967f: mov rcx,r12
0x9682: call 0x2f30
0x9687: cmp [rbx+0x24],0x0
0x968b: jz 0x91e4
0x9691: jmp 0x8eb2
0x9696: mov rsi,qword ptr [rbp-0x308]
0x969d: mov edi,0x4
0x96a2: call 0xf3f0
0x96a7: lea rsi,[rip+0xe7d2]
0x96ae: mov edx,0x5
0x96b3: xor edi,edi
0x96b5: mov r12,rax
0x96b8: call 0x2ad0
0x96bd: mov qword ptr [rbp-0x330],rax
0x96c4: call 0x2950
0x96c9: mov rdx,qword ptr [rbp-0x330]
0x96d0: mov esi,dword ptr [rax]
0x96d2: mov rcx,r12
0x96d5: xor edi,edi
0x96d7: xor eax,eax
0x96d9: call 0x2f30
0x96de: xor r8d,r8d
0x96e1: mov [rbp-0x330],0x0
0x96ec: jmp 0x8eb5
0x96f1: mov qword ptr [rbp-0x370],rcx
0x96f8: jmp 0x8c50
0x96fd: xor r9d,r9d
0x9700: cmp [rbx+0xc],0x3
0x9704: lea rax,[rbp-0x2f0]
0x970b: mov [rbp-0x398],0x0
0x9716: mov qword ptr [rbp-0x348],rax
0x971d: setz r9b
0x9721: lea rax,[rbp-0x2f8]
0x9728: sub rsp,0x8
0x972c: mov r8,qword ptr [rbp-0x398]
0x9733: mov rcx,qword ptr [rbp-0x370]
0x973a: mov rdx,qword ptr [rbp-0x3b0]
0x9741: mov esi,dword ptr [rbp-0x328]
0x9747: mov edi,dword ptr [rbp-0x320]
0x974d: push rax
0x974e: push qword ptr [rbp-0x348]
0x9754: push 0xff
0x9756: push qword ptr [rbp-0x308]
0x975c: push qword ptr [rbp-0x310]
0x9762: call 0x53b0
0x9767: add rsp,0x30
0x976b: test al,al
0x976d: jz 0x8eb2
0x9773: cmp [rbp-0x2f8],0x0
0x977a: jz 0x91da
0x9780: mov rsi,qword ptr [rbp-0x2f0]
0x9787: mov edi,dword ptr [rbp-0x328]
0x978d: call 0x2bb0
0x9792: test eax,eax
0x9794: jns 0x91da
0x979a: mov rsi,qword ptr [rbp-0x308]
0x97a1: mov edi,0x4
0x97a6: call 0xf3f0
0x97ab: lea rsi,[rip+0xe728]
0x97b2: mov r12,rax
0x97b5: mov edx,0x5
0x97ba: xor edi,edi
0x97bc: call 0x2ad0
0x97c1: mov qword ptr [rbp-0x338],rax
0x97c8: call 0x2950
0x97cd: mov rdx,qword ptr [rbp-0x338]
0x97d4: mov esi,dword ptr [rax]
0x97d6: mov rcx,r12
0x97d9: xor edi,edi
0x97db: xor eax,eax
0x97dd: call 0x2f30
0x97e2: jmp 0x8eb2
0x97e7: mov [rbp-0x2cf],0x1
0x97ee: mov rdi,qword ptr [rbp-0x2c8]
0x97f5: call 0x30d0
0x97fa: cmp [rbp-0x2cf],0x0
0x9801: mov [rbp-0x2c8],0x0
0x980c: mov [rbp-0x2d8],0x0
0x9817: jz 0x8d03
0x981d: mov rbx,qword ptr [rbp-0x388]
0x9824: mov r13d,dword ptr [rbp-0x360]
0x982b: mov rcx,qword ptr [rbp-0x3a0]
0x9832: cmp qword ptr [rbp-0x380],rcx
0x9839: setnle r12b
0x983d: jnle 0x984c
0x983f: cmp [rbp-0x338],0x0
0x9846: jz 0x91da
0x984c: cmp [rbp-0x390],0x1
0x9853: mov rsi,qword ptr [rbp-0x380]
0x985a: jz 0x98ce
0x985c: mov edi,dword ptr [rbp-0x328]
0x9862: call 0x2bb0
0x9867: test eax,eax
0x9869: jnz 0x979a
0x986f: cmp [rbp-0x390],0x3
0x9876: jnz 0x91da
0x987c: test r12b,r12b
0x987f: jz 0x91da
0x9885: mov rdx,qword ptr [rbp-0x380]
0x988c: mov rsi,qword ptr [rbp-0x3a0]
0x9893: mov edi,dword ptr [rbp-0x328]
0x9899: sub rdx,rsi
0x989c: call 0x4f90
0x98a1: test eax,eax
0x98a3: jns 0x91da
0x98a9: mov rsi,qword ptr [rbp-0x308]
0x98b0: mov edi,0x4
0x98b5: call 0xf3f0
0x98ba: mov edx,0x5
0x98bf: mov r12,rax
0x98c2: lea rsi,[rip+0xe476]
0x98c9: jmp 0x97ba
0x98ce: sub rsi,qword ptr [rbp-0x3a0]
0x98d5: mov edi,dword ptr [rbp-0x328]
0x98db: call 0x4ee0
0x98e0: test al,al
0x98e2: jnz 0x91da
0x98e8: jmp 0x979a
0x98ed: mov rax,qword ptr [rbp-0x130]
0x98f4: cmp qword ptr [rbp-0x370],rax
0x98fb: jbe 0x8c23
0x9901: add rax,0x1
0x9905: mov qword ptr [rbp-0x370],rax
0x990c: jmp 0x8c23
0x9911: cmp [rbp-0x2cf],0x0
0x9918: mov rbx,qword ptr [rbp-0x388]
0x991f: mov r13d,dword ptr [rbp-0x360]
0x9926: jnz 0x982b
0x992c: cmp [rbp-0x2d0],0x0
0x9933: jz 0x9b50
0x9939: xor r9d,r9d
0x993c: cmp [rbx+0xc],0x3
0x9940: mov eax,0x0
0x9945: setz r9b
0x9949: cmp [rbp-0x3a5],0x0
0x9950: cmovne rax,qword ptr [rbp-0x398]
0x9958: mov qword ptr [rbp-0x398],rax
0x995f: jmp 0x9721
0x9964: mov edx,dword ptr [rbp-0x320]
0x996a: mov edi,dword ptr [rbp-0x328]
0x9970: xor eax,eax
0x9972: mov esi,0x40049409
0x9977: call 0x2c10
0x997c: test eax,eax
0x997e: jz 0x91cf
0x9984: cmp [rbx+0x38],0x2
0x9988: jnz 0x8b0c
0x998e: mov rdx,qword ptr [rbp-0x310]
0x9995: mov esi,0x4
0x999a: mov edi,0x1
0x999f: call 0xf2d0
0x99a4: mov rdx,qword ptr [rbp-0x308]
0x99ab: mov esi,0x4
0x99b0: xor edi,edi
0x99b2: mov r12,rax
0x99b5: call 0xf2d0
0x99ba: lea rsi,[rip+0xe4ed]
0x99c1: mov edx,0x5
0x99c6: xor edi,edi
0x99c8: mov qword ptr [rbp-0x338],rax
0x99cf: call 0x2ad0
0x99d4: mov qword ptr [rbp-0x330],rax
0x99db: call 0x2950
0x99e0: mov rcx,qword ptr [rbp-0x338]
0x99e7: mov esi,dword ptr [rax]
0x99e9: mov r8,r12
0x99ec: mov rdx,qword ptr [rbp-0x330]
0x99f3: xor edi,edi
0x99f5: xor eax,eax
0x99f7: call 0x2f30
0x99fc: xor r8d,r8d
0x99ff: mov [rbp-0x330],0x0
0x9a0a: jmp 0x8eb5
0x9a0f: mov eax,dword ptr [rbx+0xc]
0x9a12: cmp eax,0x3
0x9a15: jz 0x9a9e
0x9a1b: cmp eax,0x2
0x9a1e: jnz 0x8bb4
0x9a24: test [rbp-0x348],0x1
0x9a2b: jz 0x8bb4
0x9a31: mov rax,qword ptr [rbp-0x370]
0x9a38: lea rdi,[r12+rax*1+0x0]
0x9a3c: call 0x12010
0x9a41: lea rcx,[rax+r12*1-0x1]
0x9a46: mov qword ptr [rbp-0x330],rax
0x9a4d: xor edx,edx
0x9a4f: mov rax,rcx
0x9a52: div r12
0x9a55: sub rcx,rdx
0x9a58: mov qword ptr [rbp-0x3b0],rcx
0x9a5f: mov eax,dword ptr [rbx+0xc]
0x9a62: mov dword ptr [rbp-0x390],eax
0x9a68: movzx eax,byte ptr [rbp-0x338]
0x9a6f: mov byte ptr [rbp-0x3a5],al
0x9a75: jmp 0x8c9c
0x9a7a: mov rax,qword ptr [rbp-0x130]
0x9a81: cqo
0x9a83: idiv r8
0x9a86: cmp qword ptr [rbp-0x120],rax
0x9a8d: setl al
0x9a90: movzx eax,al
0x9a93: mov dword ptr [rbp-0x348],eax
0x9a99: jmp 0x8b9e
0x9a9e: mov rax,qword ptr [rbp-0x370]
0x9aa5: lea rdi,[r12+rax*1+0x0]
0x9aa9: call 0x12010
0x9aae: lea rcx,[rax+r12*1-0x1]
0x9ab3: xor edx,edx
0x9ab5: mov qword ptr [rbp-0x330],rax
0x9abc: mov rax,rcx
0x9abf: div r12
0x9ac2: sub rcx,rdx
0x9ac5: cmp [rbp-0x348],0x0
0x9acc: mov qword ptr [rbp-0x3b0],rcx
0x9ad3: jnz 0x9a5f
0x9ad5: xor r9d,r9d
0x9ad8: cmp [rbx+0xc],0x3
0x9adc: lea rax,[rbp-0x2f0]
0x9ae3: mov qword ptr [rbp-0x348],rax
0x9aea: setz r9b
0x9aee: jmp 0x9721
0x9af3: mov rdx,qword ptr [rbp-0x308]
0x9afa: mov esi,0x3
0x9aff: xor edi,edi
0x9b01: mov rbx,qword ptr [rbp-0x388]
0x9b08: mov r13d,dword ptr [rbp-0x360]
0x9b0f: call 0xf4f0
0x9b14: lea rsi,[rip+0xe3ae]
0x9b1b: mov r12,rax
0x9b1e: mov edx,0x5
0x9b23: xor edi,edi
0x9b25: call 0x2ad0
0x9b2a: mov qword ptr [rbp-0x338],rax
0x9b31: call 0x2950
0x9b36: mov rdx,qword ptr [rbp-0x338]
0x9b3d: mov esi,dword ptr [rax]
0x9b3f: mov rcx,r12
0x9b42: xor edi,edi
0x9b44: xor eax,eax
0x9b46: call 0x2f30
0x9b4b: jmp 0x8ea6
0x9b50: mov rdx,qword ptr [rbp-0x310]
0x9b57: mov esi,0x3
0x9b5c: xor edi,edi
0x9b5e: call 0xf4f0
0x9b63: mov edx,0x5
0x9b68: mov r12,rax
0x9b6b: lea rsi,[rip+0xdff6]
0x9b72: jmp 0x97ba
0x9b77: call 0x5bf0
0x9b7c: mov esi,dword ptr [rbp-0x328]
0x9b82: not eax
0x9b84: mov rdi,qword ptr [rbp-0x308]
0x9b8b: mov edx,eax
0x9b8d: mov r14d,r12d
0x9b90: and edx,0x1b6
0x9b96: call 0xa7d0
0x9b9b: test eax,eax
0x9b9d: setz r8b
0x9ba1: jmp 0x8eb5
0x9ba6: mov rsi,qword ptr [rbp-0x308]
0x9bad: mov edi,0x4
0x9bb2: call 0xf3f0
0x9bb7: lea rsi,[rip+0xe22c]
0x9bbe: mov edx,0x5
0x9bc3: xor edi,edi
0x9bc5: mov qword ptr [rbp-0x328],rax
0x9bcc: call 0x2ad0
0x9bd1: mov rcx,qword ptr [rbp-0x328]
0x9bd8: mov rdx,rax
0x9bdb: mov esi,dword ptr [r12]
0x9bdf: jmp 0x7d61
0x9be4: lea rsi,[rip+0xdbe5]
0x9beb: xor edi,edi
0x9bed: mov edx,0x5
0x9bf2: call 0x2ad0
0x9bf7: mov r12,rax
0x9bfa: call 0x2950
0x9bff: mov rcx,qword ptr [rbp-0x308]
0x9c06: mov esi,dword ptr [rax]
0x9c08: xor edi,edi
0x9c0a: xor eax,eax
0x9c0c: mov rdx,r12
0x9c0f: call 0x2f30
0x9c14: movzx r8d,byte ptr [rbx+0x24]
0x9c19: test r8b,r8b
0x9c1c: jnz 0x6bb0
0x9c22: jmp 0x619f
0x9c27: mov rsi,qword ptr [rbp-0x308]
0x9c2e: mov edi,0x4
0x9c33: mov byte ptr [rbp-0x328],r8b
0x9c3a: call 0xf3f0
0x9c3f: lea rsi,[rip+0xdefa]
0x9c46: mov r12,rax
0x9c49: mov edx,0x5
0x9c4e: xor edi,edi
0x9c50: call 0x2ad0
0x9c55: mov rcx,r12
0x9c58: mov rdx,rax
0x9c5b: xor esi,esi
0x9c5d: xor edi,edi
0x9c5f: xor eax,eax
0x9c61: call 0x2f30
0x9c66: mov [rbp-0x330],0x0
0x9c71: movzx r8d,byte ptr [rbp-0x328]
0x9c79: jmp 0x7d78
0x9c7e: call 0x2c00
0x9c83: test eax,eax
0x9c85: jz 0x9257
0x9c8b: mov rsi,qword ptr [rbp-0x308]
0x9c92: mov edi,dword ptr [rbp-0x328]
0x9c98: mov edx,0x180
0x9c9d: call 0x30e0
0x9ca2: test eax,eax
0x9ca4: jnz 0x9257
0x9caa: mov edx,dword ptr [rbp-0x378]
0x9cb0: mov rsi,qword ptr [rbp-0x308]
0x9cb7: mov edi,dword ptr [rbp-0x328]
0x9cbd: not edx
0x9cbf: and edx,dword ptr [rbp-0x3a4]
0x9cc5: call 0x30e0
0x9cca: jmp 0x9257
0x9ccf: mov rsi,qword ptr [rbp-0x310]
0x9cd6: mov edi,0x4
0x9cdb: mov rbx,qword ptr [rbp-0x388]
0x9ce2: mov r13d,dword ptr [rbp-0x360]
0x9ce9: call 0xf3f0
0x9cee: mov edx,0x5
0x9cf3: mov r12,rax
0x9cf6: lea rsi,[rip+0xe032]
0x9cfd: jmp 0x9b23
0x9d02: mov edx,dword ptr [rbx+0x10]
0x9d05: mov esi,dword ptr [rbp-0x328]
0x9d0b: mov rdi,qword ptr [rbp-0x308]
0x9d12: call 0xa7d0
0x9d17: test eax,eax
0x9d19: setz r8b
0x9d1d: jmp 0x8eb5
0x9d22: call 0x30d0
0x9d27: jmp 0x88da
0x9d30: sub rsp,0x18
0x9d34: mov rax,0x28
0x9d3d: mov qword ptr [rsp+0x8],rax
0x9d42: xor eax,eax
0x9d44: test rcx,rcx
0x9d47: jz 0x9e76
0x9d4d: cmp [rcx],0x3
0x9d50: jnbe 0x9e57
0x9d56: mov eax,dword ptr [rcx+0xc]
0x9d59: lea r10d,[rax-0x1]
0x9d5d: cmp r10d,0x2
0x9d61: jnbe 0x9e38
0x9d67: mov r10d,dword ptr [rcx+0x38]
0x9d6b: cmp r10d,0x2
0x9d6f: jnbe 0x9e19
0x9d75: cmp [rcx+0x17],0x0
0x9d79: jnz 0x9dd0
0x9d7b: cmp eax,0x2
0x9d7e: jz 0x9d86
0x9d80: cmp r10d,0x2
0x9d84: jz 0x9df5
0x9d86: mov [rsp+0x7],0x0
0x9d8b: push r9
0x9d8d: movzx edx,dl
0x9d90: push r8
0x9d92: mov r9,rcx
0x9d95: xor r8d,r8d
0x9d98: xor ecx,ecx
0x9d9a: mov qword ptr [rip+0x2157e7],rsi
0x9da1: mov qword ptr [rip+0x2157e8],rdi
0x9da8: lea rax,[rsp+0x17]
0x9dad: push rax
0x9dae: push 0x1
0x9db0: call 0x5c20
0x9db5: add rsp,0x20
0x9db9: mov rsi,qword ptr [rsp+0x8]
0x9dbe: xor rsi,0x28
0x9dc7: jnz 0x9e14
0x9dc9: add rsp,0x18
0x9dcd: ret
0x9dce: nop 
0x9dd0: cmp [rcx+0x2c],0x0
0x9dd4: jz 0x9d7b
0x9dd6: lea rcx,[rip+0xe21b]
0x9ddd: lea rsi,[rip+0xe1e6]
0x9de4: lea rdi,[rip+0xde9d]
0x9deb: mov edx,0xb8a
0x9df0: call 0x2be0
0x9df5: lea rcx,[rip+0xe1fc]
0x9dfc: lea rsi,[rip+0xe1c7]
0x9e03: lea rdi,[rip+0xdea6]
0x9e0a: mov edx,0xb8d
0x9e0f: call 0x2be0
0x9e14: call 0x2b30
0x9e19: lea rcx,[rip+0xe1d8]
0x9e20: lea rsi,[rip+0xe1a3]
0x9e27: lea rdi,[rip+0xde32]
0x9e2e: mov edx,0xb89
0x9e33: call 0x2be0
0x9e38: lea rcx,[rip+0xe1b9]
0x9e3f: lea rsi,[rip+0xe184]
0x9e46: lea rdi,[rip+0xddeb]
0x9e4d: mov edx,0xb88
0x9e52: call 0x2be0
0x9e57: lea rcx,[rip+0xe19a]
0x9e5e: lea rsi,[rip+0xe165]
0x9e65: lea rdi,[rip+0xdda4]
0x9e6c: mov edx,0xb87
0x9e71: call 0x2be0
0x9e76: lea rcx,[rip+0xe17b]
0x9e7d: lea rsi,[rip+0xe146]
0x9e84: lea rdi,[rip+0xe15c]
0x9e8b: mov edx,0xb86
0x9e90: call 0x2be0
0x9ea0: mov rax,qword ptr [rdi]
0x9ea3: xor edx,edx
0x9ea5: div rsi
0x9ea8: mov rax,rdx
0x9eab: ret
0x9eb0: xor eax,eax
0x9eb2: mov rdx,qword ptr [rsi]
0x9eb5: cmp qword ptr [rdi],rdx
0x9eb8: jz 0x9ec0
0x9eba: rep ret
0x9ebc: nop qword ptr [rax+0x0]
0x9ec0: mov rax,qword ptr [rsi+0x8]
0x9ec4: cmp qword ptr [rdi+0x8],rax
0x9ec8: setz al
0x9ecb: ret
0x9ed0: push rbx
0x9ed1: mov rbx,rdi
0x9ed4: mov rdi,qword ptr [rdi+0x10]
0x9ed8: call 0x30d0
0x9edd: mov rdi,rbx
0x9ee0: pop rbx
0x9ee1: jmp 0x30d0
0x9ef0: push rbx
0x9ef1: sub rsp,0x20
0x9ef5: mov qword ptr [rsp],rdi
0x9ef9: mov rdi,qword ptr [rip+0x215698]
0x9f00: mov qword ptr [rsp+0x8],rsi
0x9f05: mov rsi,rsp
0x9f08: mov [rsp+0x10],0x0
0x9f11: mov rax,0x28
0x9f1a: mov qword ptr [rsp+0x18],rax
0x9f1f: xor eax,eax
0x9f21: call 0xca80
0x9f26: test rax,rax
0x9f29: jz 0x9f3f
0x9f2b: mov rdi,qword ptr [rax+0x10]
0x9f2f: mov rbx,rax
0x9f32: call 0x30d0
0x9f37: mov rdi,rbx
0x9f3a: call 0x30d0
0x9f3f: mov rax,qword ptr [rsp+0x18]
0x9f44: xor rax,0x28
0x9f4d: jnz 0x9f55
0x9f4f: add rsp,0x20
0x9f53: pop rbx
0x9f54: ret
0x9f55: call 0x2b30
0x9f60: sub rsp,0x28
0x9f64: mov qword ptr [rsp],rdi
0x9f68: mov rdi,qword ptr [rip+0x215629]
0x9f6f: mov qword ptr [rsp+0x8],rsi
0x9f74: mov rsi,rsp
0x9f77: mov rax,0x28
0x9f80: mov qword ptr [rsp+0x18],rax
0x9f85: xor eax,eax
0x9f87: call 0xbfb0
0x9f8c: test rax,rax
0x9f8f: jz 0x9fb0
0x9f91: mov rax,qword ptr [rax+0x10]
0x9f95: mov rdx,qword ptr [rsp+0x18]
0x9f9a: xor rdx,0x28
0x9fa3: jnz 0x9fb4
0x9fa5: add rsp,0x28
0x9fa9: ret
0x9faa: nop qword ptr [rax+rax*1+0x0]
0x9fb0: xor eax,eax
0x9fb2: jmp 0x9f95
0x9fb4: call 0x2b30
0x9fc0: push r13
0x9fc2: push r12
0x9fc4: mov r13,rdi
0x9fc7: push rbp
0x9fc8: push rbx
0x9fc9: mov edi,0x18
0x9fce: mov r12,rsi
0x9fd1: mov rbp,rdx
0x9fd4: sub rsp,0x8
0x9fd8: call 0x12010
0x9fdd: mov rdi,r13
0x9fe0: mov rbx,rax
0x9fe3: call 0x12240
0x9fe8: mov rdi,qword ptr [rip+0x2155a9]
0x9fef: mov rsi,rbx
0x9ff2: mov qword ptr [rbx+0x10],rax
0x9ff6: mov qword ptr [rbx],r12
0x9ff9: mov qword ptr [rbx+0x8],rbp
0x9ffd: call 0xca20
0xa002: test rax,rax
0xa005: jz 0xa034
0xa007: cmp rbx,rax
0xa00a: mov rbp,rax
0xa00d: jz 0xa030
0xa00f: mov rdi,qword ptr [rbx+0x10]
0xa013: call 0x30d0
0xa018: mov rdi,rbx
0xa01b: call 0x30d0
0xa020: mov rax,qword ptr [rbp+0x10]
0xa024: add rsp,0x8
0xa028: pop rbx
0xa029: pop rbp
0xa02a: pop r12
0xa02c: pop r13
0xa02e: ret
0xa02f: nop 
0xa030: xor eax,eax
0xa032: jmp 0xa024
0xa034: call 0x12260
0xa040: lea r8,[rip-0x177]
0xa047: lea rcx,[rip-0x19e]
0xa04e: lea rdx,[rip-0x1b5]
0xa055: sub rsp,0x8
0xa059: xor esi,esi
0xa05b: mov edi,0x67
0xa060: call 0xc220
0xa065: test rax,rax
0xa068: mov qword ptr [rip+0x215529],rax
0xa06f: jz 0xa076
0xa071: add rsp,0x8
0xa075: ret
0xa076: call 0x12260
0xa080: mov rdi,qword ptr [rip+0x215511]
0xa087: jmp 0xc470
0xa090: mov dword ptr [rsi],edi
0xa092: mov [rsi+0x18],0x0
0xa09a: mov [rsi+0x28],0x0
0xa0a2: mov [rsi+0x8],0x0
0xa0aa: mov [rsi+0x20],0x0
0xa0ae: mov [rsi+0x21],0x0
0xa0b2: mov [rsi+0x10],0x1
0xa0b9: ret
0xa0c0: push r15
0xa0c2: push r14
0xa0c4: xor r15d,r15d
0xa0c7: push r13
0xa0c9: push r12
0xa0cb: mov r14,rdi
0xa0ce: push rbp
0xa0cf: push rbx
0xa0d0: mov r13,0x9223372036854775807
0xa0da: sub rsp,0x1018
0xa0e1: mov rbx,qword ptr [rdi+0x28]
0xa0e5: mov rdx,qword ptr [rdi+0x8]
0xa0e9: mov rbp,rsp
0xa0ec: mov rax,0x28
0xa0f5: mov qword ptr [rsp+0x1008],rax
0xa0fd: xor eax,eax
0xa0ff: lea r12,[rbp+0x20]
0xa103: xor eax,eax
0xa105: mov ecx,0x200
0xa10a: mov rdi,rbp
0xa10d: rep stosd qword ptr es:[rdi],rax
0xa110: mov eax,dword ptr [r14+0x10]
0xa114: mov edi,dword ptr [r14]
0xa117: mov esi,0xc020660b
0xa11c: mov qword ptr [rsp],rdx
0xa120: not rdx
0xa123: mov [rsp+0x18],0x48
0xa12b: mov qword ptr [rsp+0x8],rdx
0xa130: mov rdx,rbp
0xa133: mov dword ptr [rsp+0x10],eax
0xa137: xor eax,eax
0xa139: call 0x2c10
0xa13e: test eax,eax
0xa140: js 0xa210
0xa146: mov eax,dword ptr [rsp+0x14]
0xa14a: test eax,eax
0xa14c: jz 0xa388
0xa152: mov rcx,qword ptr [r14+0x18]
0xa156: mov rdx,rax
0xa159: not rdx
0xa15c: cmp rcx,rdx
0xa15f: jnbe 0xa39a
0xa165: mov rdi,qword ptr [r14+0x28]
0xa169: mov edx,0x18
0xa16e: add rcx,rax
0xa171: mov rax,rdx
0xa174: xor esi,esi
0xa176: mov qword ptr [r14+0x18],rcx
0xa17a: sub rbx,rdi
0xa17d: mul rcx
0xa180: jo 0xa3b9
0xa186: test rax,rax
0xa189: js 0xa3c3
0xa18f: test rsi,rsi
0xa192: jnz 0xa3c3
0xa198: lea rsi,[rcx+rcx*2+0x0]
0xa19c: shl rsi,0x3
0xa1a0: call 0x12070
0xa1a5: mov r8d,dword ptr [rsp+0x14]
0xa1aa: add rbx,rax
0xa1ad: mov qword ptr [r14+0x28],rax
0xa1b1: test r8d,r8d
0xa1b4: jz 0xa2f0
0xa1ba: mov rax,qword ptr [rsp+0x30]
0xa1bf: mov rdx,qword ptr [rsp+0x20]
0xa1c4: mov rcx,r13
0xa1c7: sub rcx,rax
0xa1ca: cmp rdx,rcx
0xa1cd: jnbe 0xa2aa
0xa1d3: xor ecx,ecx
0xa1d5: mov rsi,r12
0xa1d8: test r15d,r15d
0xa1db: jz 0xa250
0xa1dd: mov r9d,dword ptr [rsi+0x28]
0xa1e1: mov r10,qword ptr [rbx+0x8]
0xa1e5: mov rdi,qword ptr [rbx]
0xa1e8: mov r11d,r9d
0xa1eb: add rdi,r10
0xa1ee: and r11d,0xfe
0xa1f2: cmp dword ptr [rbx+0x10],r11d
0xa1f6: jz 0xa2d0
0xa1fc: cmp rdi,rdx
0xa1ff: jbe 0xa25d
0xa201: mov r10,rdi
0xa204: sub r10,rdx
0xa207: cmp r10,rax
0xa20a: jnb 0xa328
0xa210: xor eax,eax
0xa212: cmp [r14+0x8],0x0
0xa217: jnz 0xa220
0xa219: mov [r14+0x20],0x1
0xa21e: xor eax,eax
0xa220: mov rbx,qword ptr [rsp+0x1008]
0xa228: xor rbx,0x28
0xa231: jnz 0xa3c8
0xa237: add rsp,0x1018
0xa23e: pop rbx
0xa23f: pop rbp
0xa240: pop r12
0xa242: pop r13
0xa244: pop r14
0xa246: pop r15
0xa248: ret
0xa249: nop qword ptr [rax+0x0]
0xa250: mov rdi,qword ptr [r14+0x8]
0xa254: cmp rdi,rdx
0xa257: jnbe 0xa201
0xa259: mov r9d,dword ptr [rsi+0x28]
0xa25d: mov esi,r15d
0xa260: add r15d,0x1
0xa264: lea rdi,[rsi+rsi*2+0x0]
0xa268: mov rsi,qword ptr [r14+0x28]
0xa26c: lea rbx,[rsi+rdi*8+0x0]
0xa270: mov qword ptr [rbx],rdx
0xa273: mov qword ptr [rbx+0x8],rax
0xa277: mov dword ptr [rbx+0x10],r9d
0xa27b: add ecx,0x1
0xa27e: cmp ecx,r8d
0xa281: jnb 0xa2f0
0xa283: mov edx,ecx
0xa285: mov rdi,r13
0xa288: lea rax,[rdx*8+0x0]
0xa290: sub rax,rdx
0xa293: lea rsi,[r12+rax*8+0x0]
0xa297: mov rax,qword ptr [rsi+0x10]
0xa29b: mov rdx,qword ptr [rsi]
0xa29e: sub rdi,rax
0xa2a1: cmp rdx,rdi
0xa2a4: jbe 0xa1d8
0xa2aa: lea rcx,[rip+0xddff]
0xa2b1: lea rsi,[rip+0xdd50]
0xa2b8: lea rdi,[rip+0xdda9]
0xa2bf: mov edx,0x8d
0xa2c4: call 0x2be0
0xa2c9: nop qword ptr [rax+0x0]
0xa2d0: cmp rdi,rdx
0xa2d3: jnz 0xa1fc
0xa2d9: add ecx,0x1
0xa2dc: add rax,r10
0xa2df: mov dword ptr [rbx+0x10],r9d
0xa2e3: cmp ecx,r8d
0xa2e6: mov qword ptr [rbx+0x8],rax
0xa2ea: jb 0xa283
0xa2ec: nop qword ptr [rax+0x0]
0xa2f0: test [rbx+0x10],0x1
0xa2f4: jnz 0xa340
0xa2f6: cmp r15d,0x48
0xa2fa: movzx eax,byte ptr [r14+0x21]
0xa2ff: jbe 0xa360
0xa301: test al,al
0xa303: jnz 0xa345
0xa305: lea eax,[r15-0x1]
0xa309: mov rdx,qword ptr [r14+0x28]
0xa30d: lea rcx,[rax+rax*2+0x0]
0xa311: mov qword ptr [r14+0x18],rax
0xa315: mov rax,qword ptr [rdx+rcx*8-0x18]
0xa31a: add rax,qword ptr [rdx+rcx*8-0x10]
0xa31f: mov qword ptr [r14+0x8],rax
0xa323: jmp 0xa34c
0xa325: nop qword ptr [rax]
0xa328: sub rax,r10
0xa32b: mov qword ptr [rsi],rdi
0xa32e: sub ecx,0x1
0xa331: mov qword ptr [rsi+0x10],rax
0xa335: jmp 0xa27b
0xa33a: nop qword ptr [rax+rax*1+0x0]
0xa340: mov [r14+0x21],0x1
0xa345: mov eax,r15d
0xa348: mov qword ptr [r14+0x18],rax
0xa34c: mov eax,0x1
0xa351: jmp 0xa220
0xa356: nop qword ptr [rax+rax*1+0x0]
0xa360: mov ecx,r15d
0xa363: test al,al
0xa365: mov qword ptr [r14+0x18],rcx
0xa369: jnz 0xa34c
0xa36b: mov rdx,qword ptr [rbx+0x8]
0xa36f: add rdx,qword ptr [rbx]
0xa372: cmp r15d,0x47
0xa376: mov qword ptr [r14+0x8],rdx
0xa37a: jbe 0xa103
0xa380: jmp 0xa34c
0xa382: nop qword ptr [rax+rax*1+0x0]
0xa388: cmp [r14+0x8],0x0
0xa38d: mov [r14+0x21],0x1
0xa392: setnz al
0xa395: jmp 0xa220
0xa39a: lea rcx,[rip+0xdd0f]
0xa3a1: lea rsi,[rip+0xdc60]
0xa3a8: lea rdi,[rip+0xdc81]
0xa3af: mov edx,0x7e
0xa3b4: call 0x2be0
0xa3b9: mov esi,0x1
0xa3be: jmp 0xa186
0xa3c3: call 0x12260
0xa3c8: call 0x2b30
0xa3d0: mov rax,rsi
0xa3d3: mov rcx,rdi
0xa3d6: mov edx,dword ptr [rsi+0x10]
0xa3d9: mov r8d,dword ptr [rax+0x14]
0xa3dd: mov rsi,qword ptr [rsi+0x8]
0xa3e1: mov edi,dword ptr [rax]
0xa3e3: jmp 0x2ec0
0xa3f0: push r12
0xa3f2: push rbp
0xa3f3: mov rbp,rdi
0xa3f6: push rbx
0xa3f7: mov r12,rsi
0xa3fa: call 0xb3a0
0xa3ff: sub rax,rbp
0xa402: lea rdi,[rax+0x9]
0xa406: mov rbx,rax
0xa409: cmp rdi,0x100
0xa410: jbe 0xa421
0xa412: call 0x2df0
0xa417: mov r12,rax
0xa41a: xor eax,eax
0xa41c: test r12,r12
0xa41f: jz 0xa443
0xa421: mov rdx,rbx
0xa424: mov rsi,rbp
0xa427: mov rdi,r12
0xa42a: call 0x2f20
0xa42f: mov rcx,0x6365935209750754627
0xa439: mov [rax+0x8],0x0
0xa43d: mov qword ptr [rax],rcx
0xa440: mov rax,r12
0xa443: pop rbx
0xa444: pop rbp
0xa445: pop r12
0xa447: ret
0xa450: mov rax,rsi
0xa453: mov rdx,rdi
0xa456: mov esi,dword ptr [rsi+0x8]
0xa459: mov rdi,qword ptr [rax]
0xa45c: jmp 0x3070
0xa470: push r15
0xa472: push r14
0xa474: mov r14d,edi
0xa477: push r13
0xa479: push r12
0xa47b: mov r13,rsi
0xa47e: push rbp
0xa47f: push rbx
0xa480: mov rbx,rcx
0xa483: mov ebp,edx
0xa485: mov r12d,r8d
0xa488: sub rsp,0x148
0xa48f: mov ecx,dword ptr [rsp+0x180]
0xa496: mov rax,0x28
0xa49f: mov qword ptr [rsp+0x138],rax
0xa4a7: xor eax,eax
0xa4a9: test ecx,ecx
0xa4ab: js 0xa560
0xa4b1: cmp r9b,0x1
0xa4b5: jnz 0xa530
0xa4b7: cmp ecx,0x11
0xa4ba: jnz 0xa530
0xa4bc: lea rax,[rsp+0x30]
0xa4c1: mov rdi,rbx
0xa4c4: mov rsi,rax
0xa4c7: mov qword ptr [rsp],rax
0xa4cb: call 0xa3f0
0xa4d0: test rax,rax
0xa4d3: mov r15,rax
0xa4d6: jz 0xa5c0
0xa4dc: lea rdx,[rsp+0x10]
0xa4e1: lea rcx,[rip-0x118]
0xa4e8: xor esi,esi
0xa4ea: mov r8d,0x6
0xa4f0: mov rdi,rax
0xa4f3: mov dword ptr [rsp+0x10],r14d
0xa4f8: mov qword ptr [rsp+0x18],r13
0xa4fd: mov dword ptr [rsp+0x20],ebp
0xa501: mov dword ptr [rsp+0x24],r12d
0xa506: call 0x10710
0xa50b: test eax,eax
0xa50d: jz 0xa588
0xa50f: call 0x2950
0xa514: mov ecx,dword ptr [rax]
0xa516: cmp r15,qword ptr [rsp]
0xa51a: jz 0xa530
0xa51c: mov rdi,r15
0xa51f: mov dword ptr [rsp],ecx
0xa522: call 0x30d0
0xa527: mov ecx,dword ptr [rsp]
0xa52a: nop qword ptr [rax+rax*1+0x0]
0xa530: mov rbx,qword ptr [rsp+0x138]
0xa538: xor rbx,0x28
0xa541: mov eax,ecx
0xa543: jnz 0xa5cc
0xa549: add rsp,0x148
0xa550: pop rbx
0xa551: pop rbp
0xa552: pop r12
0xa554: pop r13
0xa556: pop r14
0xa558: pop r15
0xa55a: ret
0xa55b: nop qword ptr [rax+rax*1+0x0]
0xa560: mov rcx,rbx
0xa563: mov dword ptr [rsp],r9d
0xa567: call 0x2ec0
0xa56c: test eax,eax
0xa56e: mov ecx,eax
0xa570: jz 0xa530
0xa572: call 0x2950
0xa577: mov r9d,dword ptr [rsp]
0xa57b: mov ecx,dword ptr [rax]
0xa57d: jmp 0xa4b1
0xa582: nop qword ptr [rax+rax*1+0x0]
0xa588: mov rcx,rbx
0xa58b: mov edx,ebp
0xa58d: mov rsi,r15
0xa590: mov edi,ebp
0xa592: call 0x3000
0xa597: test eax,eax
0xa599: mov ecx,0xffffffff
0xa59e: jz 0xa5a7
0xa5a0: call 0x2950
0xa5a5: mov ecx,dword ptr [rax]
0xa5a7: xor edx,edx
0xa5a9: mov rsi,r15
0xa5ac: mov edi,ebp
0xa5ae: mov dword ptr [rsp+0xc],ecx
0xa5b2: call 0x29d0
0xa5b7: mov ecx,dword ptr [rsp+0xc]
0xa5bb: jmp 0xa516
0xa5c0: call 0x2950
0xa5c5: mov ecx,dword ptr [rax]
0xa5c7: jmp 0xa530
0xa5cc: call 0x2b30
0xa5e0: push r14
0xa5e2: push r13
0xa5e4: push r12
0xa5e6: push rbp
0xa5e7: mov r12,rdi
0xa5ea: push rbx
0xa5eb: mov ebp,esi
0xa5ed: mov rbx,rdx
0xa5f0: sub rsp,0x130
0xa5f7: mov rax,0x28
0xa600: mov qword ptr [rsp+0x128],rax
0xa608: xor eax,eax
0xa60a: test r8d,r8d
0xa60d: js 0xa6b8
0xa613: cmp cl,0x1
0xa616: jnz 0xa688
0xa618: cmp r8d,0x11
0xa61c: jnz 0xa688
0xa61e: lea r14,[rsp+0x20]
0xa623: mov rdi,rbx
0xa626: mov rsi,r14
0xa629: call 0xa3f0
0xa62e: test rax,rax
0xa631: mov r13,rax
0xa634: jz 0xa720
0xa63a: lea rdx,[rsp+0x10]
0xa63f: lea rcx,[rip-0x1f6]
0xa646: xor esi,esi
0xa648: mov r8d,0x6
0xa64e: mov rdi,rax
0xa651: mov qword ptr [rsp+0x10],r12
0xa656: mov dword ptr [rsp+0x18],ebp
0xa65a: call 0x10710
0xa65f: test eax,eax
0xa661: jz 0xa6e0
0xa663: call 0x2950
0xa668: mov r8d,dword ptr [rax]
0xa66b: cmp r13,r14
0xa66e: jz 0xa688
0xa670: mov rdi,r13
0xa673: mov dword ptr [rsp+0xc],r8d
0xa678: call 0x30d0
0xa67d: mov r8d,dword ptr [rsp+0xc]
0xa682: nop qword ptr [rax+rax*1+0x0]
0xa688: mov rbx,qword ptr [rsp+0x128]
0xa690: xor rbx,0x28
0xa699: mov eax,r8d
0xa69c: jnz 0xa72d
0xa6a2: add rsp,0x130
0xa6a9: pop rbx
0xa6aa: pop rbp
0xa6ab: pop r12
0xa6ad: pop r13
0xa6af: pop r14
0xa6b1: ret
0xa6b2: nop qword ptr [rax+rax*1+0x0]
0xa6b8: mov dword ptr [rsp+0xc],ecx
0xa6bc: call 0x3070
0xa6c1: test eax,eax
0xa6c3: mov r8d,eax
0xa6c6: jz 0xa688
0xa6c8: call 0x2950
0xa6cd: mov ecx,dword ptr [rsp+0xc]
0xa6d1: mov r8d,dword ptr [rax]
0xa6d4: jmp 0xa613
0xa6d9: nop qword ptr [rax+0x0]
0xa6e0: mov rcx,rbx
0xa6e3: mov edx,ebp
0xa6e5: mov rsi,r13
0xa6e8: mov edi,ebp
0xa6ea: call 0x3000
0xa6ef: test eax,eax
0xa6f1: mov r8d,0xffffffff
0xa6f7: jz 0xa66b
0xa6fd: call 0x2950
0xa702: mov r8d,dword ptr [rax]
0xa705: xor edx,edx
0xa707: mov rsi,r13
0xa70a: mov edi,ebp
0xa70c: mov dword ptr [rsp+0xc],r8d
0xa711: call 0x29d0
0xa716: mov r8d,dword ptr [rsp+0xc]
0xa71b: jmp 0xa66b
0xa720: call 0x2950
0xa725: mov r8d,dword ptr [rax]
0xa728: jmp 0xa688
0xa72d: call 0x2b30
0xa740: push r12
0xa742: push rbp
0xa743: mov r12,rdi
0xa746: push rbx
0xa747: mov rbp,rdx
0xa74a: call 0xd970
0xa74f: cmp eax,0xfe
0xa752: mov ebx,eax
0xa754: jz 0xa7a0
0xa756: cmp eax,0xff
0xa759: jnz 0xa792
0xa75b: mov rdi,rbp
0xa75e: call 0xf6c0
0xa763: lea rsi,[rip+0xd79c]
0xa76a: mov edx,0x5
0xa76f: xor edi,edi
0xa771: mov r12,rax
0xa774: call 0x2ad0
0xa779: mov rbp,rax
0xa77c: call 0x2950
0xa781: mov esi,dword ptr [rax]
0xa783: mov rcx,r12
0xa786: mov rdx,rbp
0xa789: xor edi,edi
0xa78b: xor eax,eax
0xa78d: call 0x2f30
0xa792: mov eax,ebx
0xa794: pop rbx
0xa795: pop rbp
0xa796: pop r12
0xa798: ret
0xa799: nop qword ptr [rax+0x0]
0xa7a0: mov rdi,r12
0xa7a3: call 0xf6c0
0xa7a8: mov rbp,rax
0xa7ab: call 0x2950
0xa7b0: mov esi,dword ptr [rax]
0xa7b2: lea rdx,[rip+0xe6a7]
0xa7b9: mov rcx,rbp
0xa7bc: xor eax,eax
0xa7be: xor edi,edi
0xa7c0: call 0x2f30
0xa7c5: mov eax,ebx
0xa7c7: pop rbx
0xa7c8: pop rbp
0xa7c9: pop r12
0xa7cb: ret
0xa7d0: push r12
0xa7d2: push rbp
0xa7d3: mov rbp,rdi
0xa7d6: push rbx
0xa7d7: call 0xd9f0
0xa7dc: test eax,eax
0xa7de: mov ebx,eax
0xa7e0: jz 0xa819
0xa7e2: mov rdi,rbp
0xa7e5: call 0xf6c0
0xa7ea: lea rsi,[rip+0xd630]
0xa7f1: mov edx,0x5
0xa7f6: xor edi,edi
0xa7f8: mov r12,rax
0xa7fb: call 0x2ad0
0xa800: mov rbp,rax
0xa803: call 0x2950
0xa808: mov esi,dword ptr [rax]
0xa80a: mov rcx,r12
0xa80d: mov rdx,rbp
0xa810: xor edi,edi
0xa812: xor eax,eax
0xa814: call 0x2f30
0xa819: mov eax,ebx
0xa81b: pop rbx
0xa81c: pop rbp
0xa81d: pop r12
0xa81f: ret
0xa820: push r15
0xa822: push r14
0xa824: mov eax,0x401
0xa829: push r13
0xa82b: push r12
0xa82d: mov r13,rdi
0xa830: push rbp
0xa831: push rbx
0xa832: lea rbx,[rsi+0x1]
0xa836: mov r14,0x4611686018427387903
0xa840: mov r15,0x9223372036854775806
0xa84a: sub rsp,0x8
0xa84e: cmp rsi,0x401
0xa855: cmovnb rbx,rax
0xa859: nop qword ptr [rax+0x0]
0xa860: mov rdi,rbx
0xa863: call 0x2df0
0xa868: test rax,rax
0xa86b: mov rbp,rax
0xa86e: jz 0xa8ab
0xa870: mov rdx,rbx
0xa873: mov rsi,rax
0xa876: mov rdi,r13
0xa879: call 0x29f0
0xa87e: test rax,rax
0xa881: mov r12,rax
0xa884: js 0xa8d8
0xa886: cmp rbx,r12
0xa889: jnbe 0xa8f0
0xa88b: mov rdi,rbp
0xa88e: call 0x30d0
0xa893: cmp rbx,r14
0xa896: jnbe 0xa8c0
0xa898: add rbx,rbx
0xa89b: mov rdi,rbx
0xa89e: call 0x2df0
0xa8a3: test rax,rax
0xa8a6: mov rbp,rax
0xa8a9: jnz 0xa870
0xa8ab: add rsp,0x8
0xa8af: mov rax,rbp
0xa8b2: pop rbx
0xa8b3: pop rbp
0xa8b4: pop r12
0xa8b6: pop r13
0xa8b8: pop r14
0xa8ba: pop r15
0xa8bc: ret
0xa8bd: nop qword ptr [rax]
0xa8c0: cmp rbx,r15
0xa8c3: jnbe 0xa900
0xa8c5: mov rbx,0x9223372036854775807
0xa8cf: jmp 0xa860
0xa8d1: nop qword ptr [rax+0x0]
0xa8d8: call 0x2950
0xa8dd: cmp [rax],0x22
0xa8e0: jz 0xa886
0xa8e2: mov rdi,rbp
0xa8e5: xor ebp,ebp
0xa8e7: call 0x30d0
0xa8ec: jmp 0xa8ab
0xa8ee: nop 
0xa8f0: mov [rbp+r12*1+0x0],0x0
0xa8f6: jmp 0xa8ab
0xa8f8: nop qword ptr [rax+rax*1+0x0]
0xa900: call 0x2950
0xa905: xor ebp,ebp
0xa907: mov [rax],0xc
0xa90d: jmp 0xa8ab
0xa92e: nop 
0xa93f: nop 
0xa960: push r15
0xa962: push r14
0xa964: push r13
0xa966: push r12
0xa968: push rbp
0xa969: push rbx
0xa96a: mov rbx,rsi
0xa96d: sub rsp,0x88
0xa974: mov dword ptr [rsp+0x64],edi
0xa978: mov rdi,rsi
0xa97b: mov qword ptr [rsp+0x10],rsi
0xa980: mov dword ptr [rsp+0x20],edx
0xa984: mov byte ptr [rsp+0x63],cl
0xa988: mov rax,0x28
0xa991: mov qword ptr [rsp+0x78],rax
0xa996: xor eax,eax
0xa998: call 0xb3a0
0xa99d: mov rdi,rax
0xa9a0: mov r14,rax
0xa9a3: call 0x2af0
0xa9a8: mov rdi,qword ptr [rip+0x214bf1]
0xa9af: sub r14,rbx
0xa9b2: add rax,r14
0xa9b5: mov qword ptr [rsp+0x18],rax
0xa9ba: test rdi,rdi
0xa9bd: jz 0xaf44
0xa9c3: call 0x2af0
0xa9c8: mov rsi,qword ptr [rsp+0x18]
0xa9cd: add rax,0x1
0xa9d1: cmp rax,0x9
0xa9d5: mov qword ptr [rsp+0x50],rax
0xa9da: lea rdx,[rsi+0x1]
0xa9de: mov rsi,rax
0xa9e1: mov eax,0x9
0xa9e6: cmovnb rax,rsi
0xa9ea: add rax,rdx
0xa9ed: mov qword ptr [rsp+0x38],rdx
0xa9f2: mov rdi,rax
0xa9f5: mov qword ptr [rsp+0x40],rax
0xa9fa: call 0x2df0
0xa9ff: test rax,rax
0xaa02: mov r15,rax
0xaa05: jz 0xacf0
0xaa0b: lea rax,[rsp+0x74]
0xaa10: mov [rsp+0x74],0xffffffff
0xaa18: mov [rsp+0x48],0x0
0xaa21: xor r13d,r13d
0xaa24: mov qword ptr [rsp+0x68],rax
0xaa29: mov rdx,qword ptr [rsp+0x38]
0xaa2e: mov rsi,qword ptr [rsp+0x10]
0xaa33: mov rdi,r15
0xaa36: call 0x2d80
0xaa3b: cmp [rsp+0x20],0x1
0xaa40: jz 0xad20
0xaa46: lea rbp,[r15+r14*1+0x0]
0xaa4a: mov rdi,rbp
0xaa4d: call 0xb400
0xaa52: test r13,r13
0xaa55: mov r12,rax
0xaa58: jz 0xae00
0xaa5e: mov rdi,r13
0xaa61: call 0x2c40
0xaa66: mov rax,qword ptr [rsp+0x40]
0xaa6b: mov [rsp+0x28],0x1
0xaa74: mov [rsp+0x24],0x2
0xaa7c: mov qword ptr [rsp+0x30],rax
0xaa81: lea rax,[r12+0x4]
0xaa86: mov qword ptr [rsp+0x8],rax
0xaa8b: nop qword ptr [rax+rax*1+0x0]
0xaa90: mov rdi,r13
0xaa93: call 0x2de0
0xaa98: test rax,rax
0xaa9b: jz 0xac50
0xaaa1: lea rbx,[rax+0x13]
0xaaa5: mov rdi,rbx
0xaaa8: call 0x2af0
0xaaad: cmp rax,qword ptr [rsp+0x8]
0xaab2: jb 0xaa90
0xaab4: lea rbp,[r12+0x2]
0xaab9: lea rdi,[r15+r14*1+0x0]
0xaabd: mov rsi,rbx
0xaac0: mov rdx,rbp
0xaac3: call 0x2c90
0xaac8: test eax,eax
0xaaca: jnz 0xaa90
0xaacc: add rbx,rbp
0xaacf: movzx eax,byte ptr [rbx]
0xaad2: lea edx,[rax-0x31]
0xaad5: cmp dl,0x8
0xaad8: jnbe 0xaa90
0xaada: cmp al,0x39
0xaadc: movsx eax,byte ptr [rbx+0x1]
0xaae0: mov ebp,0x1
0xaae5: setz r8b
0xaae9: mov ecx,eax
0xaaeb: sub eax,0x30
0xaaee: cmp eax,0x9
0xaaf1: jnbe 0xab13
0xaaf3: nop qword ptr [rax+rax*1+0x0]
0xaaf8: cmp cl,0x39
0xaafb: setz al
0xaafe: add rbp,0x1
0xab02: and r8d,eax
0xab05: movsx eax,byte ptr [rbx+rbp*1+0x0]
0xab09: mov ecx,eax
0xab0b: sub eax,0x30
0xab0e: cmp eax,0x9
0xab11: jbe 0xaaf8
0xab13: cmp cl,0x7e
0xab16: jnz 0xaa90
0xab1c: cmp [rbx+rbp*1+0x1],0x0
0xab21: jnz 0xaa90
0xab27: mov rdx,qword ptr [rsp+0x28]
0xab2c: cmp rdx,rbp
0xab2f: jb 0xab5c
0xab31: mov byte ptr [rsp+0x58],r8b
0xab36: jnz 0xaa90
0xab3c: mov rax,qword ptr [rsp+0x18]
0xab41: mov rsi,rbx
0xab44: lea rdi,[r15+rax*1+0x2]
0xab49: call 0x2c90
0xab4e: test eax,eax
0xab50: movzx r8d,byte ptr [rsp+0x58]
0xab56: jnle 0xaa90
0xab5c: movzx esi,r8b
0xab60: movzx r9d,r8b
0xab64: mov dword ptr [rsp+0x24],esi
0xab68: mov rsi,qword ptr [rsp+0x18]
0xab6d: lea rax,[r9+rbp*1+0x0]
0xab71: mov qword ptr [rsp+0x28],rax
0xab76: lea rcx,[rsi+rax*1+0x4]
0xab7b: cmp rcx,qword ptr [rsp+0x30]
0xab80: jbe 0xaeb8
0xab86: mov edx,0x2
0xab8b: xor esi,esi
0xab8d: mov rax,rdx
0xab90: mul rcx
0xab93: jo 0xaf63
0xab99: test rax,rax
0xab9c: js 0xae50
0xaba2: test rsi,rsi
0xaba5: jnz 0xae50
0xabab: lea rax,[rcx+rcx*1+0x0]
0xabaf: mov qword ptr [rsp+0x30],rax
0xabb4: mov rsi,qword ptr [rsp+0x30]
0xabb9: mov rdi,r15
0xabbc: mov qword ptr [rsp+0x58],r9
0xabc1: call 0x2e90
0xabc6: test rax,rax
0xabc9: mov r8,rax
0xabcc: mov r9,qword ptr [rsp+0x58]
0xabd1: jz 0xae60
0xabd7: mov rax,qword ptr [rsp+0x18]
0xabdc: lea rdx,[rbp+0x2]
0xabe0: mov qword ptr [rsp+0x58],r8
0xabe5: mov rsi,rbx
0xabe8: add rax,r8
0xabeb: mov r8d,0x7e2e
0xabf1: lea rcx,[rax+r9*1+0x2]
0xabf6: mov word ptr [rax],r8w
0xabfa: mov [rax+0x2],0x30
0xabfe: mov rdi,rcx
0xac01: call 0x2d80
0xac06: add rbp,rax
0xac09: mov r8,qword ptr [rsp+0x58]
0xac0e: movzx edx,byte ptr [rbp-0x1]
0xac12: lea rax,[rbp-0x1]
0xac16: cmp dl,0x39
0xac19: jnz 0xac2f
0xac1b: nop qword ptr [rax+rax*1+0x0]
0xac20: mov [rax],0x30
0xac23: sub rax,0x1
0xac27: movzx edx,byte ptr [rax]
0xac2a: cmp dl,0x39
0xac2d: jz 0xac20
0xac2f: add edx,0x1
0xac32: mov rdi,r13
0xac35: mov r15,r8
0xac38: mov byte ptr [rax],dl
0xac3a: call 0x2de0
0xac3f: test rax,rax
0xac42: jnz 0xaaa1
0xac48: nop qword ptr [rax+rax*1+0x0]
0xac50: mov eax,dword ptr [rsp+0x24]
0xac54: cmp eax,0x2
0xac57: jz 0xad40
0xac5d: cmp eax,0x3
0xac60: jz 0xae60
0xac66: cmp eax,0x1
0xac69: jz 0xad70
0xac6f: cmp [rsp+0x63],0x0
0xac74: jz 0xaf2e
0xac7a: mov edx,dword ptr [rsp+0x74]
0xac7e: lea rcx,[r15+r14*1+0x0]
0xac82: test edx,edx
0xac84: jns 0xac99
0xac86: mov [rsp+0x74],0xffffff9c
0xac8e: mov rcx,r15
0xac91: mov edx,0xffffff9c
0xac96: xor r14d,r14d
0xac99: xor r8d,r8d
0xac9c: cmp [rsp+0x20],0x1
0xaca1: mov rsi,qword ptr [rsp+0x10]
0xaca6: mov edi,0xffffff9c
0xacab: setnz r8b
0xacaf: call 0xf6e0
0xacb4: test eax,eax
0xacb6: jz 0xaf2e
0xacbc: call 0x2950
0xacc1: mov ebp,dword ptr [rax]
0xacc3: cmp ebp,0x11
0xacc6: jz 0xaa29
0xaccc: test r13,r13
0xaccf: mov rbx,rax
0xacd2: jz 0xacdc
0xacd4: mov rdi,r13
0xacd7: call 0x2c60
0xacdc: mov rdi,r15
0xacdf: xor r15d,r15d
0xace2: call 0x30d0
0xace7: mov dword ptr [rbx],ebp
0xace9: nop qword ptr [rax+0x0]
0xacf0: mov rsi,qword ptr [rsp+0x78]
0xacf5: xor rsi,0x28
0xacfe: mov rax,r15
0xad01: jnz 0xaf6d
0xad07: add rsp,0x88
0xad0e: pop rbx
0xad0f: pop rbp
0xad10: pop r12
0xad12: pop r13
0xad14: pop r14
0xad16: pop r15
0xad18: ret
0xad19: nop qword ptr [rax+0x0]
0xad20: mov rax,qword ptr [rsp+0x18]
0xad25: mov rdx,qword ptr [rsp+0x50]
0xad2a: mov rsi,qword ptr [rip+0x21486f]
0xad31: lea rdi,[r15+rax*1+0x0]
0xad35: call 0x2d80
0xad3a: jmp 0xac6f
0xad3f: nop 
0xad40: cmp [rsp+0x20],0x2
0xad45: jnz 0xad70
0xad47: mov rax,qword ptr [rsp+0x18]
0xad4c: mov rdx,qword ptr [rsp+0x50]
0xad51: mov rsi,qword ptr [rip+0x214848]
0xad58: lea rdi,[r15+rax*1+0x0]
0xad5c: call 0x2d80
0xad61: mov [rsp+0x20],0x1
0xad69: nop qword ptr [rax+0x0]
0xad70: mov rdi,r15
0xad73: call 0xb3a0
0xad78: mov rdi,rax
0xad7b: mov rbx,rax
0xad7e: call 0xb400
0xad83: cmp rax,0xe
0xad87: mov rbp,rax
0xad8a: jbe 0xac6f
0xad90: cmp [rsp+0x48],0x0
0xad96: jnz 0xae80
0xad9c: mov edi,dword ptr [rsp+0x74]
0xada0: mov dword ptr [rsp+0x8],edi
0xada4: call 0x2950
0xada9: mov edi,dword ptr [rsp+0x8]
0xadad: mov r12,rax
0xadb0: test edi,edi
0xadb2: js 0xaef2
0xadb8: mov [rax],0x0
0xadbe: mov esi,0x3
0xadc3: call 0x2d30
0xadc8: mov ecx,dword ptr [r12]
0xadcc: xor edx,edx
0xadce: test ecx,ecx
0xadd0: setz dl
0xadd3: sub rax,rdx
0xadd6: test rax,rax
0xadd9: mov qword ptr [rsp+0x48],rax
0xadde: jns 0xae80
0xade4: cmp rax,0xffffffff
0xade8: jnz 0xaf55
0xadee: mov [rsp+0x48],0xffffffff
0xadf7: jmp 0xac6f
0xadfc: nop qword ptr [rax+0x0]
0xae00: mov rcx,qword ptr [rsp+0x68]
0xae05: mov edi,dword ptr [rsp+0x64]
0xae09: mov r9d,0x2e
0xae0f: xor edx,edx
0xae11: movzx ebx,byte ptr [rbp+0x0]
0xae15: mov rsi,r15
0xae18: mov word ptr [rbp+0x0],r9w
0xae1d: call 0xd850
0xae22: test rax,rax
0xae25: mov r13,rax
0xae28: lea rdx,[rbp+r12*1+0x0]
0xae2d: jz 0xaec0
0xae33: mov word ptr [rbp+0x0],bx
0xae37: mov [rdx],0x7e317e2e
0xae3d: mov [rdx+0x4],0x0
0xae41: jmp 0xaa66
0xae46: nop qword ptr [rax+rax*1+0x0]
0xae50: mov qword ptr [rsp+0x30],rcx
0xae55: jmp 0xabb4
0xae5a: nop qword ptr [rax+rax*1+0x0]
0xae60: mov rdi,r15
0xae63: xor r15d,r15d
0xae66: call 0x30d0
0xae6b: call 0x2950
0xae70: mov [rax],0xc
0xae76: jmp 0xacf0
0xae7b: nop qword ptr [rax+rax*1+0x0]
0xae80: cmp rbp,qword ptr [rsp+0x48]
0xae85: jbe 0xac6f
0xae8b: mov rax,qword ptr [rsp+0x18]
0xae90: mov rsi,qword ptr [rsp+0x48]
0xae95: add rax,r15
0xae98: lea rdx,[rsi-0x1]
0xae9c: sub rax,rbx
0xae9f: cmp rax,rsi
0xaea2: cmovnb rax,rdx
0xaea6: mov [rbx+rax*1+0x0],0x7e
0xaeaa: mov [rbx+rax*1+0x1],0x0
0xaeaf: jmp 0xac6f
0xaeb4: nop qword ptr [rax+0x0]
0xaeb8: mov r8,r15
0xaebb: jmp 0xabd7
0xaec0: mov qword ptr [rsp+0x8],rdx
0xaec5: call 0x2950
0xaeca: cmp [rax],0xc
0xaecd: mov rdx,qword ptr [rsp+0x8]
0xaed2: mov word ptr [rbp+0x0],bx
0xaed6: mov [rdx],0x7e317e2e
0xaedc: mov [rdx+0x4],0x0
0xaee0: setz al
0xaee3: movzx eax,al
0xaee6: add eax,0x2
0xaee9: mov dword ptr [rsp+0x24],eax
0xaeed: jmp 0xac50
0xaef2: movzx edx,byte ptr [rbx]
0xaef5: mov esi,0x2e
0xaefa: mov rdi,r15
0xaefd: mov word ptr [rbx],si
0xaf00: mov [rax],0x0
0xaf06: mov esi,0x3
0xaf0b: mov dword ptr [rsp+0x8],edx
0xaf0f: call 0x2a60
0xaf14: mov edi,dword ptr [r12]
0xaf18: mov edx,dword ptr [rsp+0x8]
0xaf1c: xor ecx,ecx
0xaf1e: test edi,edi
0xaf20: mov word ptr [rbx],dx
0xaf23: setz cl
0xaf26: sub rax,rcx
0xaf29: jmp 0xadd6
0xaf2e: test r13,r13
0xaf31: jz 0xacf0
0xaf37: mov rdi,r13
0xaf3a: call 0x2c60
0xaf3f: jmp 0xacf0
0xaf44: call 0xa910
0xaf49: mov rdi,qword ptr [rip+0x214650]
0xaf50: jmp 0xa9c3
0xaf55: mov [rsp+0x48],0xe
0xaf5e: jmp 0xae8b
0xaf63: mov esi,0x1
0xaf68: jmp 0xab99
0xaf6d: call 0x2b30
0xaf80: mov ecx,0x1
0xaf85: jmp 0xa960
0xafd0: sub rsp,0x8
0xafd4: xor ecx,ecx
0xafd6: call 0xa960
0xafdb: test rax,rax
0xafde: jz 0xafe5
0xafe0: add rsp,0x8
0xafe4: ret
0xafe5: call 0x12260
0xaff0: test rsi,rsi
0xaff3: jz 0xb000
0xaff5: cmp [rsi],0x0
0xaff8: jz 0xb000
0xaffa: jmp 0xaf90
0xaffc: nop qword ptr [rax+0x0]
0xb000: mov eax,0x2
0xb005: ret
0xb047: nop qword ptr [rax+rax*1+0x0]
0xb060: test rdi,rdi
0xb063: mov rcx,rdx
0xb066: jnz 0xb088
0xb068: test rsi,rsi
0xb06b: mov edi,0x2000
0xb070: cmovne rdi,rsi
0xb074: cmp rdi,rcx
0xb077: cmovbe rcx,rdi
0xb07b: mov r8,rcx
0xb07e: mov rax,r8
0xb081: ret
0xb082: nop qword ptr [rax+rax*1+0x0]
0xb088: test rsi,rsi
0xb08b: jz 0xb074
0xb08d: mov r8,rsi
0xb090: mov rax,rdi
0xb093: xor edx,edx
0xb095: div r8
0xb098: test rdx,rdx
0xb09b: jnz 0xb0c8
0xb09d: xor edx,edx
0xb09f: mov rax,rdi
0xb0a2: div r8
0xb0a5: mov r8,rsi
0xb0a8: imul r8,rax
0xb0ac: mov r9,rax
0xb0af: cmp r8,rcx
0xb0b2: jnbe 0xb074
0xb0b4: xor edx,edx
0xb0b6: mov rax,r8
0xb0b9: div rsi
0xb0bc: cmp rax,r9
0xb0bf: jnz 0xb074
0xb0c1: jmp 0xb07e
0xb0c3: nop qword ptr [rax+rax*1+0x0]
0xb0c8: mov rax,r8
0xb0cb: mov r8,rdx
0xb0ce: jmp 0xb093
0xb0d0: mov qword ptr [rip+0x2144d1],rdi
0xb0d7: ret
0xb0e0: push r12
0xb0e2: push rbp
0xb0e3: push rbx
0xb0e4: mov rbx,qword ptr [rip+0x212005]
0xb0eb: mov rdi,rbx
0xb0ee: call 0x127a0
0xb0f3: test rax,rax
0xb0f6: jnz 0xb198
0xb0fc: mov rdi,rbx
0xb0ff: call 0x12dc0
0xb104: test eax,eax
0xb106: jnz 0xb138
0xb108: pop rbx
0xb109: pop rbp
0xb10a: pop r12
0xb10c: jmp 0xb210
0xb111: nop qword ptr [rax+0x0]
0xb118: call 0x12760
0xb11d: test eax,eax
0xb11f: mov rdi,qword ptr [rip+0x211fca]
0xb126: jz 0xb1b6
0xb12c: call 0x12dc0
0xb131: nop qword ptr [rax+0x0]
0xb138: lea rsi,[rip+0xd001]
0xb13f: xor edi,edi
0xb141: mov edx,0x5
0xb146: call 0x2ad0
0xb14b: mov rbx,qword ptr [rip+0x214456]
0xb152: mov r12,rax
0xb155: call 0x2950
0xb15a: mov rbp,rax
0xb15d: test rbx,rbx
0xb160: jz 0xb1d0
0xb162: mov rdi,rbx
0xb165: call 0xf4c0
0xb16a: mov esi,dword ptr [rbp+0x0]
0xb16d: lea rdx,[rip+0xcfdf]
0xb174: mov rcx,rax
0xb177: mov r8,r12
0xb17a: xor edi,edi
0xb17c: xor eax,eax
0xb17e: call 0x2f30
0xb183: call 0xb210
0xb188: mov edi,dword ptr [rip+0x211eba]
0xb18e: call 0x2980
0xb193: nop qword ptr [rax+rax*1+0x0]
0xb198: xor esi,esi
0xb19a: mov rdi,rbx
0xb19d: mov edx,0x1
0xb1a2: call 0x127d0
0xb1a7: test eax,eax
0xb1a9: mov rdi,qword ptr [rip+0x211f40]
0xb1b0: jz 0xb118
0xb1b6: call 0x12dc0
0xb1bb: test eax,eax
0xb1bd: jnz 0xb138
0xb1c3: pop rbx
0xb1c4: pop rbp
0xb1c5: pop r12
0xb1c7: jmp 0xb210
0xb1cc: nop qword ptr [rax+0x0]
0xb1d0: mov esi,dword ptr [rax]
0xb1d2: lea rdx,[rip+0xdc87]
0xb1d9: mov rcx,r12
0xb1dc: xor edi,edi
0xb1de: xor eax,eax
0xb1e0: call 0x2f30
0xb1e5: jmp 0xb183
0xb1f0: mov qword ptr [rip+0x2143c1],rdi
0xb1f7: ret
0xb200: mov byte ptr [rip+0x2143a9],dil
0xb207: ret
0xb210: push rbp
0xb211: push rbx
0xb212: sub rsp,0x8
0xb216: mov rdi,qword ptr [rip+0x211ecb]
0xb21d: call 0x12dc0
0xb222: test eax,eax
0xb224: jz 0xb23c
0xb226: call 0x2950
0xb22b: cmp [rip+0x21437e],0x0
0xb232: mov rbx,rax
0xb235: jz 0xb253
0xb237: cmp [rax],0x20
0xb23a: jnz 0xb253
0xb23c: mov rdi,qword ptr [rip+0x211edd]
0xb243: call 0x12dc0
0xb248: test eax,eax
0xb24a: jnz 0xb292
0xb24c: add rsp,0x8
0xb250: pop rbx
0xb251: pop rbp
0xb252: ret
0xb253: lea rsi,[rip+0xcf00]
0xb25a: xor edi,edi
0xb25c: mov edx,0x5
0xb261: call 0x2ad0
0xb266: mov rdi,qword ptr [rip+0x21434b]
0xb26d: mov rbp,rax
0xb270: test rdi,rdi
0xb273: jz 0xb29d
0xb275: call 0xf4c0
0xb27a: mov esi,dword ptr [rbx]
0xb27c: lea rdx,[rip+0xced0]
0xb283: mov rcx,rax
0xb286: mov r8,rbp
0xb289: xor edi,edi
0xb28b: xor eax,eax
0xb28d: call 0x2f30
0xb292: mov edi,dword ptr [rip+0x211db0]
0xb298: call 0x2980
0xb29d: mov esi,dword ptr [rbx]
0xb29f: lea rdx,[rip+0xdbba]
0xb2a6: mov rcx,rax
0xb2a9: xor edi,edi
0xb2ab: xor eax,eax
0xb2ad: call 0x2f30
0xb2b2: jmp 0xb292
0xb2c0: sub rsp,0x8
0xb2c4: call 0xb340
0xb2c9: test rax,rax
0xb2cc: jz 0xb2d3
0xb2ce: add rsp,0x8
0xb2d2: ret
0xb2d3: call 0x12260
0xb2e0: push rbp
0xb2e1: push rbx
0xb2e2: xor ebp,ebp
0xb2e4: mov rbx,rdi
0xb2e7: sub rsp,0x8
0xb2eb: cmp [rdi],0x2f
0xb2ee: setz bpl
0xb2f2: call 0xb3a0
0xb2f7: mov rcx,rax
0xb2fa: sub rcx,rbx
0xb2fd: cmp rcx,rbp
0xb300: jbe 0xb330
0xb302: cmp [rax-0x1],0x2f
0xb306: lea rdx,[rcx-0x1]
0xb30a: jz 0xb31e
0xb30c: jmp 0xb330
0xb30e: nop 
0xb310: cmp [rbx+rdx*1-0x1],0x2f
0xb315: lea rax,[rdx-0x1]
0xb319: jnz 0xb323
0xb31b: mov rdx,rax
0xb31e: cmp rbp,rdx
0xb321: jnz 0xb310
0xb323: add rsp,0x8
0xb327: mov rax,rdx
0xb32a: pop rbx
0xb32b: pop rbp
0xb32c: ret
0xb32d: nop qword ptr [rax]
0xb330: add rsp,0x8
0xb334: mov rdx,rcx
0xb337: mov rax,rdx
0xb33a: pop rbx
0xb33b: pop rbp
0xb33c: ret
0xb340: push rbp
0xb341: push rbx
0xb342: mov rbp,rdi
0xb345: sub rsp,0x8
0xb349: call 0xb2e0
0xb34e: test rax,rax
0xb351: mov rbx,rax
0xb354: setz al
0xb357: movzx eax,al
0xb35a: lea rdi,[rbx+rax*1+0x1]
0xb35f: call 0x2df0
0xb364: test rax,rax
0xb367: mov rcx,rax
0xb36a: jz 0xb386
0xb36c: mov rdx,rbx
0xb36f: mov rsi,rbp
0xb372: mov rdi,rax
0xb375: call 0x2d80
0xb37a: test rbx,rbx
0xb37d: mov rcx,rax
0xb380: jz 0xb390
0xb382: mov [rcx+rbx*1+0x0],0x0
0xb386: add rsp,0x8
0xb38a: mov rax,rcx
0xb38d: pop rbx
0xb38e: pop rbp
0xb38f: ret
0xb390: mov [rax],0x2e
0xb393: mov ebx,0x1
0xb398: jmp 0xb382
0xb3c7: nop qword ptr [rax+rax*1+0x0]
0xb400: push rbx
0xb401: mov rbx,rdi
0xb404: call 0x2af0
0xb409: cmp rax,0x1
0xb40d: jbe 0xb41a
0xb40f: cmp [rbx+rax*1-0x1],0x2f
0xb414: lea rdx,[rax-0x1]
0xb418: jz 0xb428
0xb41a: pop rbx
0xb41b: ret
0xb41c: nop qword ptr [rax+0x0]
0xb420: mov rdx,rax
0xb423: nop qword ptr [rax+rax*1+0x0]
0xb428: cmp rdx,0x1
0xb42c: jz 0xb440
0xb42e: cmp [rbx+rdx*1-0x1],0x2f
0xb433: lea rax,[rdx-0x1]
0xb437: jz 0xb420
0xb439: mov rax,rdx
0xb43c: pop rbx
0xb43d: ret
0xb43e: nop 
0xb440: mov eax,0x1
0xb445: pop rbx
0xb446: ret
0xb460: test rdi,rdi
0xb463: jz 0xb480
0xb465: push rbx
0xb466: mov ebx,esi
0xb468: call 0x2db0
0xb46d: mov ecx,ebx
0xb46f: xor edx,edx
0xb471: xor esi,esi
0xb473: pop rbx
0xb474: mov edi,eax
0xb476: jmp 0x2c70
0xb47b: nop qword ptr [rax+rax*1+0x0]
0xb480: rep ret
0xb490: sub rsp,0x58
0xb494: mov qword ptr [rsp+0x30],rdx
0xb499: xor edx,edx
0xb49b: mov rax,0x28
0xb4a4: mov qword ptr [rsp+0x18],rax
0xb4a9: xor eax,eax
0xb4ab: test sil,0x40
0xb4af: jnz 0xb4d8
0xb4b1: xor eax,eax
0xb4b3: call 0x2f60
0xb4b8: mov edi,eax
0xb4ba: call 0x10940
0xb4bf: mov rcx,qword ptr [rsp+0x18]
0xb4c4: xor rcx,0x28
0xb4cd: jnz 0xb4f9
0xb4cf: add rsp,0x58
0xb4d3: ret
0xb4d4: nop qword ptr [rax+0x0]
0xb4d8: lea rax,[rsp+0x60]
0xb4dd: mov [rsp],0x10
0xb4e4: mov edx,dword ptr [rsp+0x30]
0xb4e8: mov qword ptr [rsp+0x8],rax
0xb4ed: lea rax,[rsp+0x20]
0xb4f2: mov qword ptr [rsp+0x10],rax
0xb4f7: jmp 0xb4b1
0xb4f9: call 0x2b30
0xb500: test rdi,rdi
0xb503: jz 0xb580
0xb505: push r13
0xb507: push r12
0xb509: mov r13,rdi
0xb50c: push rbp
0xb50d: push rbx
0xb50e: mov r12,rsi
0xb511: mov edi,0x18
0xb516: mov rbp,rdx
0xb519: sub rsp,0x8
0xb51d: call 0x12010
0xb522: mov rdi,r12
0xb525: mov rbx,rax
0xb528: call 0x12240
0xb52d: mov qword ptr [rbx],rax
0xb530: mov rax,qword ptr [rbp+0x8]
0xb534: mov rsi,rbx
0xb537: mov rdi,r13
0xb53a: mov qword ptr [rbx+0x8],rax
0xb53e: mov rax,qword ptr [rbp+0x0]
0xb542: mov qword ptr [rbx+0x10],rax
0xb546: call 0xca20
0xb54b: test rax,rax
0xb54e: jz 0xb582
0xb550: cmp rbx,rax
0xb553: jz 0xb570
0xb555: add rsp,0x8
0xb559: mov rdi,rbx
0xb55c: pop rbx
0xb55d: pop rbp
0xb55e: pop r12
0xb560: pop r13
0xb562: jmp 0xcd40
0xb567: nop qword ptr [rax+rax*1+0x0]
0xb570: add rsp,0x8
0xb574: pop rbx
0xb575: pop rbp
0xb576: pop r12
0xb578: pop r13
0xb57a: ret
0xb57b: nop qword ptr [rax+rax*1+0x0]
0xb580: rep ret
0xb582: call 0x12260
0xb590: sub rsp,0x28
0xb594: mov rax,0x28
0xb59d: mov qword ptr [rsp+0x18],rax
0xb5a2: xor eax,eax
0xb5a4: test rdi,rdi
0xb5a7: jz 0xb5cc
0xb5a9: mov rax,qword ptr [rdx+0x8]
0xb5ad: mov qword ptr [rsp],rsi
0xb5b1: mov rsi,rsp
0xb5b4: mov qword ptr [rsp+0x8],rax
0xb5b9: mov rax,qword ptr [rdx]
0xb5bc: mov qword ptr [rsp+0x10],rax
0xb5c1: call 0xbfb0
0xb5c6: test rax,rax
0xb5c9: setnz al
0xb5cc: mov rcx,qword ptr [rsp+0x18]
0xb5d1: xor rcx,0x28
0xb5da: jnz 0xb5e1
0xb5dc: add rsp,0x28
0xb5e0: ret
0xb5e1: call 0x2b30
0xb5f0: mov edx,edi
0xb5f2: mov eax,0x2d
0xb5f7: and edx,0xf000
0xb5fd: cmp edx,0x8000
0xb603: jz 0xb660
0xb605: cmp edx,0x4000
0xb60b: mov eax,0x64
0xb610: jz 0xb660
0xb612: cmp edx,0x6000
0xb618: mov eax,0x62
0xb61d: jz 0xb660
0xb61f: cmp edx,0x2000
0xb625: mov eax,0x63
0xb62a: jz 0xb660
0xb62c: cmp edx,0xa000
0xb632: mov eax,0x6c
0xb637: jz 0xb660
0xb639: cmp edx,0x1000
0xb63f: mov eax,0x70
0xb644: jz 0xb660
0xb646: cmp edx,0xc000
0xb64c: mov eax,0x73
0xb651: mov edx,0x3f
0xb656: cmovne eax,edx
0xb659: nop qword ptr [rax+0x0]
0xb660: mov byte ptr [rsi],al
0xb662: mov eax,edi
0xb664: and eax,0x100
0xb669: cmp eax,0x1
0xb66c: sbb eax,eax
0xb66e: and eax,0xbb
0xb671: add eax,0x72
0xb674: mov byte ptr [rsi+0x1],al
0xb677: mov eax,edi
0xb679: and eax,0x80
0xb67e: cmp eax,0x1
0xb681: sbb eax,eax
0xb683: and eax,0xb6
0xb686: add eax,0x77
0xb689: mov byte ptr [rsi+0x2],al
0xb68c: mov eax,edi
0xb68e: and eax,0x40
0xb691: cmp eax,0x1
0xb694: sbb eax,eax
0xb696: test edi,0x800
0xb69c: jz 0xb740
0xb6a2: and eax,0xe0
0xb6a5: add eax,0x73
0xb6a8: mov byte ptr [rsi+0x3],al
0xb6ab: mov eax,edi
0xb6ad: and eax,0x20
0xb6b0: cmp eax,0x1
0xb6b3: sbb eax,eax
0xb6b5: and eax,0xbb
0xb6b8: add eax,0x72
0xb6bb: mov byte ptr [rsi+0x4],al
0xb6be: mov eax,edi
0xb6c0: and eax,0x10
0xb6c3: cmp eax,0x1
0xb6c6: sbb eax,eax
0xb6c8: and eax,0xb6
0xb6cb: add eax,0x77
0xb6ce: mov byte ptr [rsi+0x5],al
0xb6d1: mov eax,edi
0xb6d3: and eax,0x8
0xb6d6: cmp eax,0x1
0xb6d9: sbb eax,eax
0xb6db: test edi,0x400
0xb6e1: jz 0xb768
0xb6e7: and eax,0xe0
0xb6ea: add eax,0x73
0xb6ed: mov byte ptr [rsi+0x6],al
0xb6f0: mov eax,edi
0xb6f2: and eax,0x4
0xb6f5: cmp eax,0x1
0xb6f8: sbb eax,eax
0xb6fa: and eax,0xbb
0xb6fd: add eax,0x72
0xb700: mov byte ptr [rsi+0x7],al
0xb703: mov eax,edi
0xb705: and eax,0x2
0xb708: cmp eax,0x1
0xb70b: sbb eax,eax
0xb70d: and eax,0xb6
0xb710: add eax,0x77
0xb713: mov byte ptr [rsi+0x8],al
0xb716: mov eax,edi
0xb718: and eax,0x1
0xb71b: cmp eax,0x1
0xb71e: sbb eax,eax
0xb720: and edi,0x200
0xb726: jz 0xb750
0xb728: and eax,0xe0
0xb72b: add eax,0x74
0xb72e: mov byte ptr [rsi+0x9],al
0xb731: mov eax,0x20
0xb736: mov word ptr [rsi+0xa],ax
0xb73a: ret
0xb73b: nop qword ptr [rax+rax*1+0x0]
0xb740: and eax,0xb5
0xb743: add eax,0x78
0xb746: jmp 0xb6a8
0xb74b: nop qword ptr [rax+rax*1+0x0]
0xb750: and eax,0xb5
0xb753: add eax,0x78
0xb756: mov byte ptr [rsi+0x9],al
0xb759: mov eax,0x20
0xb75e: mov word ptr [rsi+0xa],ax
0xb762: ret
0xb763: nop qword ptr [rax+rax*1+0x0]
0xb768: and eax,0xb5
0xb76b: add eax,0x78
0xb76e: jmp 0xb6ed
0xb780: mov edi,dword ptr [rdi+0x18]
0xb783: jmp 0xb5f0
0xb790: sub rsp,0x8
0xb794: call 0xb7b0
0xb799: test rax,rax
0xb79c: jz 0xb7a3
0xb79e: add rsp,0x8
0xb7a2: ret
0xb7a3: call 0x12260
0xb7b0: push r15
0xb7b2: push r14
0xb7b4: mov r15,rdx
0xb7b7: push r13
0xb7b9: push r12
0xb7bb: mov r12,rdi
0xb7be: push rbp
0xb7bf: push rbx
0xb7c0: mov rbp,rsi
0xb7c3: sub rsp,0x18
0xb7c7: call 0xb3a0
0xb7cc: mov rbx,rax
0xb7cf: mov rdi,rax
0xb7d2: call 0xb400
0xb7d7: sub rbx,r12
0xb7da: mov r13,rax
0xb7dd: mov rdi,rbp
0xb7e0: add rbx,rax
0xb7e3: call 0x2af0
0xb7e8: test r13,r13
0xb7eb: mov r14,rax
0xb7ee: jz 0xb820
0xb7f0: cmp [r12+rbx*1-0x1],0x2f
0xb7f6: jz 0xb8a0
0xb7fc: xor eax,eax
0xb7fe: cmp [rbp+0x0],0x2f
0xb802: mov edx,0x0
0xb807: setnz al
0xb80a: mov qword ptr [rsp],rax
0xb80e: mov eax,0x2f
0xb813: cmove eax,edx
0xb816: mov byte ptr [rsp+0xf],al
0xb81a: jmp 0xb83e
0xb81c: nop qword ptr [rax+0x0]
0xb820: xor eax,eax
0xb822: cmp [rbp+0x0],0x2f
0xb826: mov edx,0x0
0xb82b: setz al
0xb82e: mov qword ptr [rsp],rax
0xb832: mov eax,0x2e
0xb837: cmovne eax,edx
0xb83a: mov byte ptr [rsp+0xf],al
0xb83e: lea rdi,[rbx+r14*1+0x1]
0xb843: add rdi,qword ptr [rsp]
0xb847: call 0x2df0
0xb84c: test rax,rax
0xb84f: mov r13,rax
0xb852: jz 0xb886
0xb854: mov rdi,rax
0xb857: mov rdx,rbx
0xb85a: mov rsi,r12
0xb85d: call 0x2f20
0xb862: movzx ecx,byte ptr [rsp+0xf]
0xb867: mov rdi,qword ptr [rsp]
0xb86b: add rdi,rax
0xb86e: test r15,r15
0xb871: mov byte ptr [rax],cl
0xb873: jz 0xb878
0xb875: mov qword ptr [r15],rdi
0xb878: mov rdx,r14
0xb87b: mov rsi,rbp
0xb87e: call 0x2f20
0xb883: mov [rax],0x0
0xb886: add rsp,0x18
0xb88a: mov rax,r13
0xb88d: pop rbx
0xb88e: pop rbp
0xb88f: pop r12
0xb891: pop r13
0xb893: pop r14
0xb895: pop r15
0xb897: ret
0xb898: nop qword ptr [rax+rax*1+0x0]
0xb8a0: mov [rsp],0x0
0xb8a8: mov [rsp+0xf],0x0
0xb8ad: jmp 0xb83e
0xb8b0: push r13
0xb8b2: push r12
0xb8b4: push rbp
0xb8b5: push rbx
0xb8b6: sub rsp,0x8
0xb8ba: test rdx,rdx
0xb8bd: jz 0xb921
0xb8bf: mov r13d,edi
0xb8c2: mov rbp,rsi
0xb8c5: mov rbx,rdx
0xb8c8: xor r12d,r12d
0xb8cb: jmp 0xb8e0
0xb8cd: nop qword ptr [rax]
0xb8d0: test rax,rax
0xb8d3: jz 0xb908
0xb8d5: add r12,rax
0xb8d8: add rbp,rax
0xb8db: sub rbx,rax
0xb8de: jz 0xb8f4
0xb8e0: mov rdx,rbx
0xb8e3: mov rsi,rbp
0xb8e6: mov edi,r13d
0xb8e9: call 0xf950
0xb8ee: cmp rax,0xffffffff
0xb8f2: jnz 0xb8d0
0xb8f4: add rsp,0x8
0xb8f8: mov rax,r12
0xb8fb: pop rbx
0xb8fc: pop rbp
0xb8fd: pop r12
0xb8ff: pop r13
0xb901: ret
0xb902: nop qword ptr [rax+rax*1+0x0]
0xb908: call 0x2950
0xb90d: mov [rax],0x0
0xb913: add rsp,0x8
0xb917: mov rax,r12
0xb91a: pop rbx
0xb91b: pop rbp
0xb91c: pop r12
0xb91e: pop r13
0xb920: ret
0xb921: xor r12d,r12d
0xb924: jmp 0xb8f4
0xb930: push r13
0xb932: push r12
0xb934: push rbp
0xb935: push rbx
0xb936: sub rsp,0x8
0xb93a: test rdx,rdx
0xb93d: jz 0xb9a1
0xb93f: mov r13d,edi
0xb942: mov rbp,rsi
0xb945: mov rbx,rdx
0xb948: xor r12d,r12d
0xb94b: jmp 0xb960
0xb94d: nop qword ptr [rax]
0xb950: test rax,rax
0xb953: jz 0xb988
0xb955: add r12,rax
0xb958: add rbp,rax
0xb95b: sub rbx,rax
0xb95e: jz 0xb974
0xb960: mov rdx,rbx
0xb963: mov rsi,rbp
0xb966: mov edi,r13d
0xb969: call 0xf9b0
0xb96e: cmp rax,0xffffffff
0xb972: jnz 0xb950
0xb974: add rsp,0x8
0xb978: mov rax,r12
0xb97b: pop rbx
0xb97c: pop rbp
0xb97d: pop r12
0xb97f: pop r13
0xb981: ret
0xb982: nop qword ptr [rax+rax*1+0x0]
0xb988: call 0x2950
0xb98d: mov [rax],0x1c
0xb993: add rsp,0x8
0xb997: mov rax,r12
0xb99a: pop rbx
0xb99b: pop rbp
0xb99c: pop r12
0xb99e: pop r13
0xb9a0: ret
0xb9a1: xor r12d,r12d
0xb9a4: jmp 0xb974
0xb9b0: cmp rdi,0xa
0xb9b4: mov eax,0xa
0xb9b9: mov r9,-0x6148914691236517205
0xb9c3: cmovnae rdi,rax
0xb9c7: or rdi,0x1
0xb9cb: cmp rdi,0xffffffff
0xb9cf: jz 0xba3f
0xb9d1: nop qword ptr [rax+0x0]
0xb9d8: mov rax,rdi
0xb9db: mov rcx,rdi
0xb9de: mul r9
0xb9e1: mov rax,rdx
0xb9e4: shr rax,0x1
0xb9e7: lea rax,[rax+rax*2+0x0]
0xb9eb: sub rcx,rax
0xb9ee: cmp rdi,0x9
0xb9f2: mov rax,rcx
0xb9f5: jbe 0xba30
0xb9f7: test rcx,rcx
0xb9fa: jz 0xba35
0xb9fc: mov r8d,0x10
0xba02: mov esi,0x9
0xba07: mov ecx,0x3
0xba0c: jmp 0xba19
0xba0e: nop 
0xba10: add r8,0x8
0xba14: test rdx,rdx
0xba17: jz 0xba35
0xba19: add rcx,0x2
0xba1d: xor edx,edx
0xba1f: mov rax,rdi
0xba22: div rcx
0xba25: add rsi,r8
0xba28: cmp rsi,rdi
0xba2b: mov rax,rdx
0xba2e: jb 0xba10
0xba30: test rax,rax
0xba33: jnz 0xba3f
0xba35: add rdi,0x2
0xba39: cmp rdi,0xffffffff
0xba3d: jnz 0xb9d8
0xba3f: mov rax,rdi
0xba42: ret
0xba50: mov rax,rdi
0xba53: xor edx,edx
0xba55: ror rax,0x3
0xba59: div rsi
0xba5c: mov rax,rdx
0xba5f: ret
0xba60: cmp rdi,rsi
0xba63: setz al
0xba66: ret
0xba70: push rbx
0xba71: mov rbx,rdi
0xba74: mov rdi,rsi
0xba77: mov rsi,qword ptr [rbx+0x10]
0xba7b: call qword ptr [rbx+0x30]
0xba7e: cmp qword ptr [rbx+0x10],rax
0xba82: jbe 0xba8d
0xba84: shl rax,0x4
0xba88: add rax,qword ptr [rbx]
0xba8b: pop rbx
0xba8c: ret
0xba8d: call 0x2940
0xbaa0: push r14
0xbaa2: push r13
0xbaa4: mov r14,rdx
0xbaa7: push r12
0xbaa9: push rbp
0xbaaa: mov r12,rdi
0xbaad: push rbx
0xbaae: mov rbp,rsi
0xbab1: mov r13d,ecx
0xbab4: call 0xba70
0xbab9: mov qword ptr [r14],rax
0xbabc: mov rsi,qword ptr [rax]
0xbabf: test rsi,rsi
0xbac2: jz 0xbbb0
0xbac8: cmp rsi,rbp
0xbacb: mov rbx,rax
0xbace: jz 0xbb63
0xbad4: mov rdi,rbp
0xbad7: call qword ptr [r12+0x38]
0xbadc: test al,al
0xbade: jnz 0xbb60
0xbae4: mov rax,qword ptr [rbx+0x8]
0xbae8: test rax,rax
0xbaeb: jz 0xbbb0
0xbaf1: mov rsi,qword ptr [rax]
0xbaf4: cmp rbp,rsi
0xbaf7: jnz 0xbb19
0xbaf9: jmp 0xbb2c
0xbafb: nop qword ptr [rax+rax*1+0x0]
0xbb00: mov rbx,qword ptr [rbx+0x8]
0xbb04: mov rax,qword ptr [rbx+0x8]
0xbb08: test rax,rax
0xbb0b: jz 0xbbb0
0xbb11: mov rsi,qword ptr [rax]
0xbb14: cmp rsi,rbp
0xbb17: jz 0xbb2c
0xbb19: mov rdi,rbp
0xbb1c: call qword ptr [r12+0x38]
0xbb21: test al,al
0xbb23: jz 0xbb00
0xbb25: mov rax,qword ptr [rbx+0x8]
0xbb29: mov rsi,qword ptr [rax]
0xbb2c: test r13b,r13b
0xbb2f: jz 0xbb4e
0xbb31: mov rdx,qword ptr [rax+0x8]
0xbb35: mov qword ptr [rbx+0x8],rdx
0xbb39: mov [rax],0x0
0xbb40: mov rdx,qword ptr [r12+0x48]
0xbb45: mov qword ptr [rax+0x8],rdx
0xbb49: mov qword ptr [r12+0x48],rax
0xbb4e: pop rbx
0xbb4f: mov rax,rsi
0xbb52: pop rbp
0xbb53: pop r12
0xbb55: pop r13
0xbb57: pop r14
0xbb59: ret
0xbb5a: nop qword ptr [rax+rax*1+0x0]
0xbb60: mov rsi,qword ptr [rbx]
0xbb63: test r13b,r13b
0xbb66: jz 0xbb4e
0xbb68: mov rax,qword ptr [rbx+0x8]
0xbb6c: test rax,rax
0xbb6f: jz 0xbba0
0xbb71: movdqu xmm0,[rax]
0xbb75: movups [rbx],xmm0
0xbb78: mov [rax],0x0
0xbb7f: mov rdx,qword ptr [r12+0x48]
0xbb84: mov qword ptr [rax+0x8],rdx
0xbb88: mov qword ptr [r12+0x48],rax
0xbb8d: mov rax,rsi
0xbb90: pop rbx
0xbb91: pop rbp
0xbb92: pop r12
0xbb94: pop r13
0xbb96: pop r14
0xbb98: ret
0xbb99: nop qword ptr [rax+0x0]
0xbba0: mov [rbx],0x0
0xbba7: jmp 0xbb4e
0xbba9: nop qword ptr [rax+0x0]
0xbbb0: xor esi,esi
0xbbb2: pop rbx
0xbbb3: mov rax,rsi
0xbbb6: pop rbp
0xbbb7: pop r12
0xbbb9: pop r13
0xbbbb: pop r14
0xbbbd: ret
0xbbc0: mov rdx,qword ptr [rdi]
0xbbc3: lea rcx,[rip+0xc616]
0xbbca: mov eax,0x1
0xbbcf: cmp rdx,rcx
0xbbd2: jz 0xbc35
0xbbd4: movss xmm0,[rdx+0x8]
0xbbd9: ucomiss xmm0,[rip+0xc614]
0xbbe0: jbe 0xbc30
0xbbe2: movss xmm1,[rip+0xc60e]
0xbbea: ucomiss xmm1,xmm0
0xbbed: jbe 0xbc30
0xbbef: movss xmm1,[rdx+0xc]
0xbbf4: ucomiss xmm1,[rip+0xc601]
0xbbfb: jbe 0xbc30
0xbbfd: movss xmm1,[rdx]
0xbc01: ucomiss xmm1,[rip+0xc5f8]
0xbc08: jb 0xbc30
0xbc0a: addss xmm1,[rip+0xc5e2]
0xbc12: movss xmm2,[rdx+0x4]
0xbc17: ucomiss xmm2,xmm1
0xbc1a: jbe 0xbc30
0xbc1c: movss xmm3,[rip+0xc5e0]
0xbc24: ucomiss xmm3,xmm2
0xbc27: jb 0xbc30
0xbc29: ucomiss xmm0,xmm1
0xbc2c: jnbe 0xbc35
0xbc2e: nop 
0xbc30: mov qword ptr [rdi],rcx
0xbc33: xor eax,eax
0xbc35: rep ret
0xbc40: push r15
0xbc42: push r14
0xbc44: push r13
0xbc46: push r12
0xbc48: push rbp
0xbc49: push rbx
0xbc4a: sub rsp,0x8
0xbc4e: mov r12,qword ptr [rsi]
0xbc51: cmp r12,qword ptr [rsi+0x8]
0xbc55: jnb 0xbd38
0xbc5b: mov rbp,rdi
0xbc5e: mov r13,rsi
0xbc61: mov r14d,edx
0xbc64: nop qword ptr [rax+0x0]
0xbc68: mov r15,qword ptr [r12]
0xbc6c: test r15,r15
0xbc6f: jz 0xbd2a
0xbc75: mov rbx,qword ptr [r12+0x8]
0xbc7a: test rbx,rbx
0xbc7d: jnz 0xbc9c
0xbc7f: jmp 0xbcdb
0xbc81: nop qword ptr [rax+0x0]
0xbc88: mov rcx,qword ptr [rax+0x8]
0xbc8c: test rdx,rdx
0xbc8f: mov qword ptr [rbx+0x8],rcx
0xbc93: mov qword ptr [rax+0x8],rbx
0xbc97: mov rbx,rdx
0xbc9a: jz 0xbcd7
0xbc9c: mov r15,qword ptr [rbx]
0xbc9f: mov rdi,rbp
0xbca2: mov rsi,r15
0xbca5: call 0xba70
0xbcaa: cmp [rax],0x0
0xbcae: mov rdx,qword ptr [rbx+0x8]
0xbcb2: jnz 0xbc88
0xbcb4: mov qword ptr [rax],r15
0xbcb7: add [rbp+0x18],0x1
0xbcbc: test rdx,rdx
0xbcbf: mov [rbx],0x0
0xbcc6: mov rax,qword ptr [rbp+0x48]
0xbcca: mov qword ptr [rbx+0x8],rax
0xbcce: mov qword ptr [rbp+0x48],rbx
0xbcd2: mov rbx,rdx
0xbcd5: jnz 0xbc9c
0xbcd7: mov r15,qword ptr [r12]
0xbcdb: test r14b,r14b
0xbcde: mov [r12+0x8],0x0
0xbce7: jnz 0xbd2a
0xbce9: mov rsi,r15
0xbcec: mov rdi,rbp
0xbcef: call 0xba70
0xbcf4: cmp [rax],0x0
0xbcf8: mov rbx,rax
0xbcfb: jz 0xbd50
0xbcfd: mov rax,qword ptr [rbp+0x48]
0xbd01: test rax,rax
0xbd04: jz 0xbd60
0xbd06: mov rdx,qword ptr [rax+0x8]
0xbd0a: mov qword ptr [rbp+0x48],rdx
0xbd0e: mov rdx,qword ptr [rbx+0x8]
0xbd12: mov qword ptr [rax],r15
0xbd15: mov qword ptr [rax+0x8],rdx
0xbd19: mov qword ptr [rbx+0x8],rax
0xbd1d: mov [r12],0x0
0xbd25: sub [r13+0x18],0x1
0xbd2a: add r12,0x10
0xbd2e: cmp qword ptr [r13+0x8],r12
0xbd32: jnbe 0xbc68
0xbd38: add rsp,0x8
0xbd3c: mov eax,0x1
0xbd41: pop rbx
0xbd42: pop rbp
0xbd43: pop r12
0xbd45: pop r13
0xbd47: pop r14
0xbd49: pop r15
0xbd4b: ret
0xbd4c: nop qword ptr [rax+0x0]
0xbd50: mov qword ptr [rax],r15
0xbd53: add [rbp+0x18],0x1
0xbd58: jmp 0xbd1d
0xbd5a: nop qword ptr [rax+rax*1+0x0]
0xbd60: mov edi,0x10
0xbd65: call 0x2df0
0xbd6a: test rax,rax
0xbd6d: jnz 0xbd0e
0xbd6f: add rsp,0x8
0xbd73: xor eax,eax
0xbd75: pop rbx
0xbd76: pop rbp
0xbd77: pop r12
0xbd79: pop r13
0xbd7b: pop r14
0xbd7d: pop r15
0xbd7f: ret
0xbd80: mov rax,qword ptr [rdi+0x10]
0xbd84: ret
0xbd90: mov rax,qword ptr [rdi+0x18]
0xbd94: ret
0xbda0: mov rax,qword ptr [rdi+0x20]
0xbda4: ret
0xbdb0: mov rsi,qword ptr [rdi]
0xbdb3: mov rdi,qword ptr [rdi+0x8]
0xbdb7: xor eax,eax
0xbdb9: cmp rsi,rdi
0xbdbc: jnb 0xbdf7
0xbdbe: nop 
0xbdc0: cmp [rsi],0x0
0xbdc4: jz 0xbdec
0xbdc6: mov rdx,qword ptr [rsi+0x8]
0xbdca: mov ecx,0x1
0xbdcf: test rdx,rdx
0xbdd2: jz 0xbde5
0xbdd4: nop qword ptr [rax+0x0]
0xbdd8: mov rdx,qword ptr [rdx+0x8]
0xbddc: add rcx,0x1
0xbde0: test rdx,rdx
0xbde3: jnz 0xbdd8
0xbde5: cmp rax,rcx
0xbde8: cmovnae rax,rcx
0xbdec: add rsi,0x10
0xbdf0: cmp rsi,rdi
0xbdf3: jb 0xbdc0
0xbdf5: rep ret
0xbdf7: rep ret
0xbe00: mov rcx,qword ptr [rdi]
0xbe03: mov r8,qword ptr [rdi+0x8]
0xbe07: xor edx,edx
0xbe09: xor esi,esi
0xbe0b: cmp rcx,r8
0xbe0e: jnb 0xbe46
0xbe10: cmp [rcx],0x0
0xbe14: jz 0xbe3d
0xbe16: mov rax,qword ptr [rcx+0x8]
0xbe1a: add rsi,0x1
0xbe1e: add rdx,0x1
0xbe22: test rax,rax
0xbe25: jz 0xbe3d
0xbe27: nop qword ptr [rax+rax*1+0x0]
0xbe30: mov rax,qword ptr [rax+0x8]
0xbe34: add rdx,0x1
0xbe38: test rax,rax
0xbe3b: jnz 0xbe30
0xbe3d: add rcx,0x10
0xbe41: cmp rcx,r8
0xbe44: jb 0xbe10
0xbe46: xor eax,eax
0xbe48: cmp qword ptr [rdi+0x18],rsi
0xbe4c: jz 0xbe50
0xbe4e: rep ret
0xbe50: cmp qword ptr [rdi+0x20],rdx
0xbe54: setz al
0xbe57: ret
0xbe60: push r13
0xbe62: push r12
0xbe64: mov r12,rsi
0xbe67: push rbp
0xbe68: push rbx
0xbe69: xor ebx,ebx
0xbe6b: sub rsp,0x8
0xbe6f: mov rsi,qword ptr [rdi]
0xbe72: mov rcx,qword ptr [rdi+0x20]
0xbe76: mov rbp,qword ptr [rdi+0x10]
0xbe7a: mov r13,qword ptr [rdi+0x18]
0xbe7e: mov rdi,qword ptr [rdi+0x8]
0xbe82: cmp rsi,rdi
0xbe85: jnb 0xbec5
0xbe87: nop qword ptr [rax+rax*1+0x0]
0xbe90: cmp [rsi],0x0
0xbe94: jz 0xbebc
0xbe96: mov rax,qword ptr [rsi+0x8]
0xbe9a: mov edx,0x1
0xbe9f: test rax,rax
0xbea2: jz 0xbeb5
0xbea4: nop qword ptr [rax+0x0]
0xbea8: mov rax,qword ptr [rax+0x8]
0xbeac: add rdx,0x1
0xbeb0: test rax,rax
0xbeb3: jnz 0xbea8
0xbeb5: cmp rbx,rdx
0xbeb8: cmovnae rbx,rdx
0xbebc: add rsi,0x10
0xbec0: cmp rsi,rdi
0xbec3: jb 0xbe90
0xbec5: lea rdx,[rip+0xc29a]
0xbecc: mov esi,0x1
0xbed1: mov rdi,r12
0xbed4: xor eax,eax
0xbed6: call 0x3050
0xbedb: lea rdx,[rip+0xc29c]
0xbee2: xor eax,eax
0xbee4: mov rcx,rbp
0xbee7: mov esi,0x1
0xbeec: mov rdi,r12
0xbeef: call 0x3050
0xbef4: test r13,r13
0xbef7: js 0xbf60
0xbef9: pxor xmm0,xmm0
0xbefd: test rbp,rbp
0xbf00: cvtsi2sd xmm0,r13
0xbf05: mulsd xmm0,[rip+0xc30b]
0xbf0d: js 0xbf89
0xbf0f: pxor xmm1,xmm1
0xbf13: cvtsi2sd xmm1,rbp
0xbf18: divsd xmm0,xmm1
0xbf1c: lea rdx,[rip+0xc28d]
0xbf23: mov rcx,r13
0xbf26: mov rdi,r12
0xbf29: mov esi,0x1
0xbf2e: mov eax,0x1
0xbf33: call 0x3050
0xbf38: add rsp,0x8
0xbf3c: mov rcx,rbx
0xbf3f: mov rdi,r12
0xbf42: pop rbx
0xbf43: pop rbp
0xbf44: pop r12
0xbf46: pop r13
0xbf48: lea rdx,[rip+0xc247]
0xbf4f: mov esi,0x1
0xbf54: xor eax,eax
0xbf56: jmp 0x3050
0xbf5b: nop qword ptr [rax+rax*1+0x0]
0xbf60: mov rax,r13
0xbf63: mov rdx,r13
0xbf66: pxor xmm0,xmm0
0xbf6a: shr rax,0x1
0xbf6d: and edx,0x1
0xbf70: or rax,rdx
0xbf73: test rbp,rbp
0xbf76: cvtsi2sd xmm0,rax
0xbf7b: addsd xmm0,xmm0
0xbf7f: mulsd xmm0,[rip+0xc291]
0xbf87: jns 0xbf0f
0xbf89: mov rax,rbp
0xbf8c: pxor xmm1,xmm1
0xbf90: shr rax,0x1
0xbf93: and ebp,0x1
0xbf96: or rax,rbp
0xbf99: cvtsi2sd xmm1,rax
0xbf9e: addsd xmm1,xmm1
0xbfa2: jmp 0xbf18
0xbfb0: push r12
0xbfb2: push rbp
0xbfb3: mov r12,rdi
0xbfb6: push rbx
0xbfb7: mov rbp,rsi
0xbfba: call 0xba70
0xbfbf: mov rsi,qword ptr [rax]
0xbfc2: test rsi,rsi
0xbfc5: jz 0xbfed
0xbfc7: mov rbx,rax
0xbfca: jmp 0xbfd3
0xbfcc: nop qword ptr [rax+0x0]
0xbfd0: mov rsi,qword ptr [rbx]
0xbfd3: cmp rsi,rbp
0xbfd6: jz 0xbfef
0xbfd8: mov rdi,rbp
0xbfdb: call qword ptr [r12+0x38]
0xbfe0: test al,al
0xbfe2: jnz 0xc000
0xbfe4: mov rbx,qword ptr [rbx+0x8]
0xbfe8: test rbx,rbx
0xbfeb: jnz 0xbfd0
0xbfed: xor esi,esi
0xbfef: pop rbx
0xbff0: mov rax,rsi
0xbff3: pop rbp
0xbff4: pop r12
0xbff6: ret
0xbff7: nop qword ptr [rax+rax*1+0x0]
0xc000: mov rsi,qword ptr [rbx]
0xc003: pop rbx
0xc004: pop rbp
0xc005: mov rax,rsi
0xc008: pop r12
0xc00a: ret
0xc010: cmp [rdi+0x20],0x0
0xc015: jz 0xc043
0xc017: mov rdx,qword ptr [rdi]
0xc01a: mov rcx,qword ptr [rdi+0x8]
0xc01e: cmp rdx,rcx
0xc021: jnb 0xc048
0xc023: mov rax,qword ptr [rdx]
0xc026: test rax,rax
0xc029: jnz 0xc046
0xc02b: nop qword ptr [rax+rax*1+0x0]
0xc030: add rdx,0x10
0xc034: cmp rdx,rcx
0xc037: jnb 0xc048
0xc039: mov rax,qword ptr [rdx]
0xc03c: test rax,rax
0xc03f: jz 0xc030
0xc041: rep ret
0xc043: xor eax,eax
0xc045: ret
0xc046: rep ret
0xc048: sub rsp,0x8
0xc04c: call 0x2940
0xc060: push rbp
0xc061: push rbx
0xc062: mov rbp,rdi
0xc065: mov rbx,rsi
0xc068: sub rsp,0x8
0xc06c: call 0xba70
0xc071: mov rdx,rax
0xc074: mov rcx,rax
0xc077: mov rax,qword ptr [rdx]
0xc07a: mov rdx,qword ptr [rdx+0x8]
0xc07e: cmp rax,rbx
0xc081: jz 0xc099
0xc083: nop qword ptr [rax+rax*1+0x0]
0xc088: test rdx,rdx
0xc08b: jz 0xc09e
0xc08d: mov rax,qword ptr [rdx]
0xc090: mov rdx,qword ptr [rdx+0x8]
0xc094: cmp rax,rbx
0xc097: jnz 0xc088
0xc099: test rdx,rdx
0xc09c: jnz 0xc0c8
0xc09e: mov rdx,qword ptr [rbp+0x8]
0xc0a2: jmp 0xc0b0
0xc0a4: nop qword ptr [rax+0x0]
0xc0a8: mov rax,qword ptr [rcx]
0xc0ab: test rax,rax
0xc0ae: jnz 0xc0bb
0xc0b0: add rcx,0x10
0xc0b4: cmp rdx,rcx
0xc0b7: jnbe 0xc0a8
0xc0b9: xor eax,eax
0xc0bb: add rsp,0x8
0xc0bf: pop rbx
0xc0c0: pop rbp
0xc0c1: ret
0xc0c2: nop qword ptr [rax+rax*1+0x0]
0xc0c8: mov rax,qword ptr [rdx]
0xc0cb: add rsp,0x8
0xc0cf: pop rbx
0xc0d0: pop rbp
0xc0d1: ret
0xc0e0: mov r9,qword ptr [rdi]
0xc0e3: cmp qword ptr [rdi+0x8],r9
0xc0e7: jbe 0xc142
0xc0e9: xor r8d,r8d
0xc0ec: mov rcx,qword ptr [r9]
0xc0ef: test rcx,rcx
0xc0f2: jz 0xc12d
0xc0f4: cmp rdx,r8
0xc0f7: jbe 0xc137
0xc0f9: mov qword ptr [rsi+r8*8+0x0],rcx
0xc0fd: mov rcx,qword ptr [r9+0x8]
0xc101: lea rax,[r8+0x1]
0xc105: test rcx,rcx
0xc108: jz 0xc12a
0xc10a: nop qword ptr [rax+rax*1+0x0]
0xc110: cmp rdx,rax
0xc113: jz 0xc140
0xc115: mov r8,qword ptr [rcx]
0xc118: add rax,0x1
0xc11c: mov qword ptr [rsi+rax*8-0x8],r8
0xc121: mov rcx,qword ptr [rcx+0x8]
0xc125: test rcx,rcx
0xc128: jnz 0xc110
0xc12a: mov r8,rax
0xc12d: add r9,0x10
0xc131: cmp qword ptr [rdi+0x8],r9
0xc135: jnbe 0xc0ec
0xc137: mov rax,r8
0xc13a: ret
0xc13b: nop qword ptr [rax+rax*1+0x0]
0xc140: rep ret
0xc142: xor eax,eax
0xc144: ret
0xc150: push r15
0xc152: push r14
0xc154: push r13
0xc156: push r12
0xc158: push rbp
0xc159: push rbx
0xc15a: sub rsp,0x8
0xc15e: mov r14,qword ptr [rdi]
0xc161: cmp qword ptr [rdi+0x8],r14
0xc165: jbe 0xc1b6
0xc167: mov r13,rdx
0xc16a: mov r12,rsi
0xc16d: mov r15,rdi
0xc170: xor ebp,ebp
0xc172: mov rdi,qword ptr [r14]
0xc175: test rdi,rdi
0xc178: jz 0xc19a
0xc17a: mov rbx,r14
0xc17d: jmp 0xc183
0xc17f: nop 
0xc180: mov rdi,qword ptr [rbx]
0xc183: mov rsi,r13
0xc186: call r12
0xc189: test al,al
0xc18b: jz 0xc1a4
0xc18d: mov rbx,qword ptr [rbx+0x8]
0xc191: add rbp,0x1
0xc195: test rbx,rbx
0xc198: jnz 0xc180
0xc19a: add r14,0x10
0xc19e: cmp qword ptr [r15+0x8],r14
0xc1a2: jnbe 0xc172
0xc1a4: add rsp,0x8
0xc1a8: mov rax,rbp
0xc1ab: pop rbx
0xc1ac: pop rbp
0xc1ad: pop r12
0xc1af: pop r13
0xc1b1: pop r14
0xc1b3: pop r15
0xc1b5: ret
0xc1b6: xor ebp,ebp
0xc1b8: jmp 0xc1a4
0xc1c0: movzx ecx,byte ptr [rdi]
0xc1c3: xor edx,edx
0xc1c5: test cl,cl
0xc1c7: jz 0xc1ed
0xc1c9: nop qword ptr [rax+0x0]
0xc1d0: mov rax,rdx
0xc1d3: add rdi,0x1
0xc1d7: shl rax,0x5
0xc1db: sub rax,rdx
0xc1de: xor edx,edx
0xc1e0: add rax,rcx
0xc1e3: movzx ecx,byte ptr [rdi]
0xc1e6: div rsi
0xc1e9: test cl,cl
0xc1eb: jnz 0xc1d0
0xc1ed: mov rax,rdx
0xc1f0: ret
0xc200: mov rax,0x4575657221408423936
0xc20a: mov [rdi+0x10],0x0
0xc20e: mov qword ptr [rdi],rax
0xc211: mov rax,0x4590573145673223373
0xc21b: mov qword ptr [rdi+0x8],rax
0xc21f: ret
0xc220: push r15
0xc222: push r14
0xc224: lea rax,[rip-0x7db]
0xc22b: push r13
0xc22d: push r12
0xc22f: mov r12,rdx
0xc232: push rbp
0xc233: push rbx
0xc234: mov r13,rcx
0xc237: mov rbp,rdi
0xc23a: mov edi,0x50
0xc23f: mov r15,rsi
0xc242: sub rsp,0x8
0xc246: test rdx,rdx
0xc249: mov r14,r8
0xc24c: cmove r12,rax
0xc250: lea rax,[rip-0x7f7]
0xc257: test rcx,rcx
0xc25a: cmove r13,rax
0xc25e: call 0x2df0
0xc263: test rax,rax
0xc266: mov rbx,rax
0xc269: jz 0xc31a
0xc26f: test r15,r15
0xc272: lea rdi,[rax+0x28]
0xc276: jz 0xc330
0xc27c: mov qword ptr [rax+0x28],r15
0xc280: call 0xbbc0
0xc285: test al,al
0xc287: jz 0xc310
0xc28d: cmp [r15+0x10],0x0
0xc292: jz 0xc390
0xc298: mov rdi,rbp
0xc29b: call 0xb9b0
0xc2a0: mov edx,0x8
0xc2a5: mov rbp,rax
0xc2a8: xor ecx,ecx
0xc2aa: mov rax,rdx
0xc2ad: mul rbp
0xc2b0: jo 0xc3ca
0xc2b6: test rax,rax
0xc2b9: js 0xc310
0xc2bb: test rcx,rcx
0xc2be: jnz 0xc310
0xc2c0: test rbp,rbp
0xc2c3: mov qword ptr [rbx+0x10],rbp
0xc2c7: jz 0xc310
0xc2c9: mov esi,0x10
0xc2ce: mov rdi,rbp
0xc2d1: call 0x2cd0
0xc2d6: test rax,rax
0xc2d9: mov qword ptr [rbx],rax
0xc2dc: jz 0xc310
0xc2de: shl rbp,0x4
0xc2e2: mov [rbx+0x18],0x0
0xc2ea: mov [rbx+0x20],0x0
0xc2f2: add rbp,rax
0xc2f5: mov qword ptr [rbx+0x30],r12
0xc2f9: mov qword ptr [rbx+0x38],r13
0xc2fd: mov qword ptr [rbx+0x8],rbp
0xc301: mov qword ptr [rbx+0x40],r14
0xc305: mov [rbx+0x48],0x0
0xc30d: jmp 0xc31a
0xc30f: nop 
0xc310: mov rdi,rbx
0xc313: xor ebx,ebx
0xc315: call 0x30d0
0xc31a: add rsp,0x8
0xc31e: mov rax,rbx
0xc321: pop rbx
0xc322: pop rbp
0xc323: pop r12
0xc325: pop r13
0xc327: pop r14
0xc329: pop r15
0xc32b: ret
0xc32c: nop qword ptr [rax+0x0]
0xc330: lea rax,[rip+0xbea9]
0xc337: mov qword ptr [rbx+0x28],rax
0xc33b: call 0xbbc0
0xc340: test al,al
0xc342: movss xmm1,[rip+0xbebe]
0xc34a: jz 0xc310
0xc34c: test rbp,rbp
0xc34f: js 0xc39b
0xc351: pxor xmm0,xmm0
0xc355: cvtsi2ss xmm0,rbp
0xc35a: divss xmm0,xmm1
0xc35e: ucomiss xmm0,[rip+0xbea7]
0xc365: jnb 0xc310
0xc367: ucomiss xmm0,[rip+0xbea2]
0xc36e: jb 0xc3c0
0xc370: subss xmm0,[rip+0xbe98]
0xc378: mov rax,-0x9223372036854775808
0xc382: cvttss2si rbp,xmm0
0xc387: xor rbp,rax
0xc38a: jmp 0xc298
0xc38f: nop 
0xc390: test rbp,rbp
0xc393: movss xmm1,[r15+0x8]
0xc399: jns 0xc351
0xc39b: mov rax,rbp
0xc39e: pxor xmm0,xmm0
0xc3a2: shr rax,0x1
0xc3a5: and ebp,0x1
0xc3a8: or rax,rbp
0xc3ab: cvtsi2ss xmm0,rax
0xc3b0: addss xmm0,xmm0
0xc3b4: jmp 0xc35a
0xc3b6: nop qword ptr [rax+rax*1+0x0]
0xc3c0: cvttss2si rbp,xmm0
0xc3c5: jmp 0xc298
0xc3ca: mov ecx,0x1
0xc3cf: jmp 0xc2b6
0xc3e0: push r12
0xc3e2: push rbp
0xc3e3: mov rbp,rdi
0xc3e6: push rbx
0xc3e7: mov r12,qword ptr [rdi]
0xc3ea: cmp r12,qword ptr [rdi+0x8]
0xc3ee: jnb 0xc45b
0xc3f0: cmp [r12],0x0
0xc3f5: jz 0xc451
0xc3f7: mov rbx,qword ptr [r12+0x8]
0xc3fc: mov rax,qword ptr [rbp+0x40]
0xc400: test rbx,rbx
0xc403: jz 0xc435
0xc405: nop qword ptr [rax]
0xc408: test rax,rax
0xc40b: jz 0xc416
0xc40d: mov rdi,qword ptr [rbx]
0xc410: call rax
0xc412: mov rax,qword ptr [rbp+0x40]
0xc416: mov rdx,qword ptr [rbx+0x8]
0xc41a: mov rcx,qword ptr [rbp+0x48]
0xc41e: mov [rbx],0x0
0xc425: test rdx,rdx
0xc428: mov qword ptr [rbx+0x8],rcx
0xc42c: mov qword ptr [rbp+0x48],rbx
0xc430: mov rbx,rdx
0xc433: jnz 0xc408
0xc435: test rax,rax
0xc438: jz 0xc440
0xc43a: mov rdi,qword ptr [r12]
0xc43e: call rax
0xc440: mov [r12],0x0
0xc448: mov [r12+0x8],0x0
0xc451: add r12,0x10
0xc455: cmp qword ptr [rbp+0x8],r12
0xc459: jnbe 0xc3f0
0xc45b: mov [rbp+0x18],0x0
0xc463: mov [rbp+0x20],0x0
0xc46b: pop rbx
0xc46c: pop rbp
0xc46d: pop r12
0xc46f: ret
0xc470: push r12
0xc472: push rbp
0xc473: mov r12,rdi
0xc476: push rbx
0xc477: cmp [rdi+0x40],0x0
0xc47c: mov rbp,qword ptr [rdi]
0xc47f: mov rax,qword ptr [rdi+0x8]
0xc483: jz 0xc4d3
0xc485: cmp [rdi+0x20],0x0
0xc48a: jz 0xc4d3
0xc48c: cmp rbp,rax
0xc48f: jnb 0xc50c
0xc491: nop qword ptr [rax+0x0]
0xc498: mov rdi,qword ptr [rbp+0x0]
0xc49c: test rdi,rdi
0xc49f: jz 0xc4c6
0xc4a1: mov rbx,rbp
0xc4a4: jmp 0xc4b3
0xc4a6: nop qword ptr [rax+rax*1+0x0]
0xc4b0: mov rdi,qword ptr [rbx]
0xc4b3: call qword ptr [r12+0x40]
0xc4b8: mov rbx,qword ptr [rbx+0x8]
0xc4bc: test rbx,rbx
0xc4bf: jnz 0xc4b0
0xc4c1: mov rax,qword ptr [r12+0x8]
0xc4c6: add rbp,0x10
0xc4ca: cmp rax,rbp
0xc4cd: jnbe 0xc498
0xc4cf: mov rbp,qword ptr [r12]
0xc4d3: cmp rbp,rax
0xc4d6: jnb 0xc50c
0xc4d8: nop qword ptr [rax+rax*1+0x0]
0xc4e0: mov rdi,qword ptr [rbp+0x8]
0xc4e4: test rdi,rdi
0xc4e7: jz 0xc501
0xc4e9: nop qword ptr [rax+0x0]
0xc4f0: mov rbx,qword ptr [rdi+0x8]
0xc4f4: call 0x30d0
0xc4f9: test rbx,rbx
0xc4fc: mov rdi,rbx
0xc4ff: jnz 0xc4f0
0xc501: add rbp,0x10
0xc505: cmp qword ptr [r12+0x8],rbp
0xc50a: jnbe 0xc4e0
0xc50c: mov rdi,qword ptr [r12+0x48]
0xc511: test rdi,rdi
0xc514: jz 0xc531
0xc516: nop qword ptr [rax+rax*1+0x0]
0xc520: mov rbx,qword ptr [rdi+0x8]
0xc524: call 0x30d0
0xc529: test rbx,rbx
0xc52c: mov rdi,rbx
0xc52f: jnz 0xc520
0xc531: mov rdi,qword ptr [r12]
0xc535: call 0x30d0
0xc53a: pop rbx
0xc53b: mov rdi,r12
0xc53e: pop rbp
0xc53f: pop r12
0xc541: jmp 0x30d0
0xc550: push r12
0xc552: push rbp
0xc553: mov rbp,rdi
0xc556: push rbx
0xc557: sub rsp,0x60
0xc55b: mov r12,qword ptr [rdi+0x28]
0xc55f: mov rax,0x28
0xc568: mov qword ptr [rsp+0x58],rax
0xc56d: xor eax,eax
0xc56f: cmp [r12+0x10],0x0
0xc575: jnz 0xc5c8
0xc577: test rsi,rsi
0xc57a: js 0xc6f8
0xc580: pxor xmm0,xmm0
0xc584: cvtsi2ss xmm0,rsi
0xc589: divss xmm0,[r12+0x8]
0xc590: ucomiss xmm0,[rip+0xbc75]
0xc597: jnb 0xc6d0
0xc59d: ucomiss xmm0,[rip+0xbc6c]
0xc5a4: jb 0xc720
0xc5aa: subss xmm0,[rip+0xbc5e]
0xc5b2: mov rax,-0x9223372036854775808
0xc5bc: cvttss2si rsi,xmm0
0xc5c1: xor rsi,rax
0xc5c4: nop qword ptr [rax+0x0]
0xc5c8: mov rdi,rsi
0xc5cb: call 0xb9b0
0xc5d0: mov edx,0x8
0xc5d5: mov rbx,rax
0xc5d8: xor ecx,ecx
0xc5da: mov rax,rdx
0xc5dd: mul rbx
0xc5e0: jo 0xc77f
0xc5e6: test rax,rax
0xc5e9: mov eax,0x1
0xc5ee: cmovs rcx,rax
0xc5f2: test rbx,rbx
0xc5f5: jz 0xc6d0
0xc5fb: and ecx,0x1
0xc5fe: jnz 0xc6d0
0xc604: cmp qword ptr [rbp+0x10],rbx
0xc608: jz 0xc730
0xc60e: mov esi,0x10
0xc613: mov rdi,rbx
0xc616: call 0x2cd0
0xc61b: test rax,rax
0xc61e: mov qword ptr [rsp],rax
0xc622: jz 0xc6d0
0xc628: mov qword ptr [rsp+0x10],rbx
0xc62d: shl rbx,0x4
0xc631: mov qword ptr [rsp+0x28],r12
0xc636: add rbx,rax
0xc639: mov rax,qword ptr [rbp+0x30]
0xc63d: mov r12,rsp
0xc640: xor edx,edx
0xc642: mov rsi,rbp
0xc645: mov rdi,r12
0xc648: mov qword ptr [rsp+0x8],rbx
0xc64d: mov [rsp+0x18],0x0
0xc656: mov qword ptr [rsp+0x30],rax
0xc65b: mov rax,qword ptr [rbp+0x38]
0xc65f: mov [rsp+0x20],0x0
0xc668: mov qword ptr [rsp+0x38],rax
0xc66d: mov rax,qword ptr [rbp+0x40]
0xc671: mov qword ptr [rsp+0x40],rax
0xc676: mov rax,qword ptr [rbp+0x48]
0xc67a: mov qword ptr [rsp+0x48],rax
0xc67f: call 0xbc40
0xc684: test al,al
0xc686: mov ebx,eax
0xc688: jnz 0xc740
0xc68e: mov rax,qword ptr [rsp+0x48]
0xc693: mov edx,0x1
0xc698: mov rsi,r12
0xc69b: mov rdi,rbp
0xc69e: mov qword ptr [rbp+0x48],rax
0xc6a2: call 0xbc40
0xc6a7: test al,al
0xc6a9: jz 0xc789
0xc6af: xor edx,edx
0xc6b1: mov rsi,r12
0xc6b4: mov rdi,rbp
0xc6b7: call 0xbc40
0xc6bc: test al,al
0xc6be: jz 0xc789
0xc6c4: mov rdi,qword ptr [rsp]
0xc6c8: call 0x30d0
0xc6cd: jmp 0xc6d2
0xc6cf: nop 
0xc6d0: xor ebx,ebx
0xc6d2: mov rcx,qword ptr [rsp+0x58]
0xc6d7: xor rcx,0x28
0xc6e0: mov eax,ebx
0xc6e2: jnz 0xc77a
0xc6e8: add rsp,0x60
0xc6ec: pop rbx
0xc6ed: pop rbp
0xc6ee: pop r12
0xc6f0: ret
0xc6f1: nop qword ptr [rax+0x0]
0xc6f8: mov rax,rsi
0xc6fb: pxor xmm0,xmm0
0xc6ff: shr rax,0x1
0xc702: and esi,0x1
0xc705: or rax,rsi
0xc708: cvtsi2ss xmm0,rax
0xc70d: addss xmm0,xmm0
0xc711: jmp 0xc589
0xc716: nop qword ptr [rax+rax*1+0x0]
0xc720: cvttss2si rsi,xmm0
0xc725: jmp 0xc5c8
0xc72a: nop qword ptr [rax+rax*1+0x0]
0xc730: mov ebx,0x1
0xc735: jmp 0xc6d2
0xc737: nop qword ptr [rax+rax*1+0x0]
0xc740: mov rdi,qword ptr [rbp+0x0]
0xc744: call 0x30d0
0xc749: mov rax,qword ptr [rsp]
0xc74d: mov qword ptr [rbp+0x0],rax
0xc751: mov rax,qword ptr [rsp+0x8]
0xc756: mov qword ptr [rbp+0x8],rax
0xc75a: mov rax,qword ptr [rsp+0x10]
0xc75f: mov qword ptr [rbp+0x10],rax
0xc763: mov rax,qword ptr [rsp+0x18]
0xc768: mov qword ptr [rbp+0x18],rax
0xc76c: mov rax,qword ptr [rsp+0x48]
0xc771: mov qword ptr [rbp+0x48],rax
0xc775: jmp 0xc6d2
0xc77a: call 0x2b30
0xc77f: mov ecx,0x1
0xc784: jmp 0xc5e6
0xc789: call 0x2940
0xc790: push r13
0xc792: push r12
0xc794: push rbp
0xc795: push rbx
0xc796: sub rsp,0x18
0xc79a: mov rax,0x28
0xc7a3: mov qword ptr [rsp+0x8],rax
0xc7a8: xor eax,eax
0xc7aa: test rsi,rsi
0xc7ad: jz 0xc96d
0xc7b3: mov r12,rsp
0xc7b6: xor ecx,ecx
0xc7b8: mov r13,rdx
0xc7bb: mov rdx,r12
0xc7be: mov rbx,rdi
0xc7c1: mov rbp,rsi
0xc7c4: call 0xbaa0
0xc7c9: test rax,rax
0xc7cc: mov rdx,rax
0xc7cf: jz 0xc800
0xc7d1: xor eax,eax
0xc7d3: test r13,r13
0xc7d6: jz 0xc7dc
0xc7d8: mov qword ptr [r13+0x0],rdx
0xc7dc: mov rcx,qword ptr [rsp+0x8]
0xc7e1: xor rcx,0x28
0xc7ea: jnz 0xca0f
0xc7f0: add rsp,0x18
0xc7f4: pop rbx
0xc7f5: pop rbp
0xc7f6: pop r12
0xc7f8: pop r13
0xc7fa: ret
0xc7fb: nop qword ptr [rax+rax*1+0x0]
0xc800: mov rax,qword ptr [rbx+0x18]
0xc804: test rax,rax
0xc807: js 0xc880
0xc809: pxor xmm1,xmm1
0xc80d: mov rdx,qword ptr [rbx+0x28]
0xc811: cvtsi2ss xmm1,rax
0xc816: mov rax,qword ptr [rbx+0x10]
0xc81a: test rax,rax
0xc81d: js 0xc8aa
0xc823: pxor xmm0,xmm0
0xc827: cvtsi2ss xmm0,rax
0xc82c: mulss xmm0,[rdx+0x8]
0xc831: ucomiss xmm1,xmm0
0xc834: jnbe 0xc8d0
0xc83a: mov r12,qword ptr [rsp]
0xc83e: cmp [r12],0x0
0xc843: jz 0xc978
0xc849: mov rax,qword ptr [rbx+0x48]
0xc84d: test rax,rax
0xc850: jz 0xc990
0xc856: mov rdx,qword ptr [rax+0x8]
0xc85a: mov qword ptr [rbx+0x48],rdx
0xc85e: mov rdx,qword ptr [r12+0x8]
0xc863: mov qword ptr [rax],rbp
0xc866: mov qword ptr [rax+0x8],rdx
0xc86a: mov qword ptr [r12+0x8],rax
0xc86f: mov eax,0x1
0xc874: add [rbx+0x20],0x1
0xc879: jmp 0xc7dc
0xc87e: nop 
0xc880: mov rdx,rax
0xc883: pxor xmm1,xmm1
0xc887: and eax,0x1
0xc88a: shr rdx,0x1
0xc88d: or rdx,rax
0xc890: mov rax,qword ptr [rbx+0x10]
0xc894: cvtsi2ss xmm1,rdx
0xc899: mov rdx,qword ptr [rbx+0x28]
0xc89d: test rax,rax
0xc8a0: addss xmm1,xmm1
0xc8a4: jns 0xc823
0xc8aa: mov rcx,rax
0xc8ad: pxor xmm0,xmm0
0xc8b1: shr rcx,0x1
0xc8b4: and eax,0x1
0xc8b7: or rcx,rax
0xc8ba: cvtsi2ss xmm0,rcx
0xc8bf: addss xmm0,xmm0
0xc8c3: jmp 0xc82c
0xc8c8: nop qword ptr [rax+rax*1+0x0]
0xc8d0: lea rdi,[rbx+0x28]
0xc8d4: call 0xbbc0
0xc8d9: mov rax,qword ptr [rbx+0x10]
0xc8dd: mov rdx,qword ptr [rbx+0x28]
0xc8e1: test rax,rax
0xc8e4: movss xmm2,[rdx+0x8]
0xc8e9: js 0xc9b0
0xc8ef: pxor xmm0,xmm0
0xc8f3: cvtsi2ss xmm0,rax
0xc8f8: mov rax,qword ptr [rbx+0x18]
0xc8fc: test rax,rax
0xc8ff: js 0xc9d0
0xc905: pxor xmm1,xmm1
0xc909: cvtsi2ss xmm1,rax
0xc90e: movaps xmm3,xmm2
0xc911: mulss xmm3,xmm0
0xc915: ucomiss xmm1,xmm3
0xc918: jbe 0xc83a
0xc91e: cmp [rdx+0x10],0x0
0xc922: mulss xmm0,[rdx+0xc]
0xc927: jnz 0xc92d
0xc929: mulss xmm0,xmm2
0xc92d: ucomiss xmm0,[rip+0xb8d8]
0xc934: jnb 0xc9a3
0xc936: ucomiss xmm0,[rip+0xb8d3]
0xc93d: jnb 0xc9f0
0xc943: cvttss2si rsi,xmm0
0xc948: mov rdi,rbx
0xc94b: call 0xc550
0xc950: test al,al
0xc952: jz 0xc9a3
0xc954: xor ecx,ecx
0xc956: mov rdx,r12
0xc959: mov rsi,rbp
0xc95c: mov rdi,rbx
0xc95f: call 0xbaa0
0xc964: test rax,rax
0xc967: jz 0xc83a
0xc96d: call 0x2940
0xc972: nop qword ptr [rax+rax*1+0x0]
0xc978: mov qword ptr [r12],rbp
0xc97c: mov eax,0x1
0xc981: add [rbx+0x20],0x1
0xc986: add [rbx+0x18],0x1
0xc98b: jmp 0xc7dc
0xc990: mov edi,0x10
0xc995: call 0x2df0
0xc99a: test rax,rax
0xc99d: jnz 0xc85e
0xc9a3: mov eax,0xffffffff
0xc9a8: jmp 0xc7dc
0xc9ad: nop qword ptr [rax]
0xc9b0: mov rcx,rax
0xc9b3: pxor xmm0,xmm0
0xc9b7: shr rcx,0x1
0xc9ba: and eax,0x1
0xc9bd: or rcx,rax
0xc9c0: cvtsi2ss xmm0,rcx
0xc9c5: addss xmm0,xmm0
0xc9c9: jmp 0xc8f8
0xc9ce: nop 
0xc9d0: mov rcx,rax
0xc9d3: pxor xmm1,xmm1
0xc9d7: shr rcx,0x1
0xc9da: and eax,0x1
0xc9dd: or rcx,rax
0xc9e0: cvtsi2ss xmm1,rcx
0xc9e5: addss xmm1,xmm1
0xc9e9: jmp 0xc90e
0xc9ee: nop 
0xc9f0: subss xmm0,[rip+0xb818]
0xc9f8: mov rax,-0x9223372036854775808
0xca02: cvttss2si rsi,xmm0
0xca07: xor rsi,rax
0xca0a: jmp 0xc948
0xca0f: call 0x2b30
0xca20: push rbx
0xca21: mov rbx,rsi
0xca24: sub rsp,0x10
0xca28: mov rdx,rsp
0xca2b: mov rax,0x28
0xca34: mov qword ptr [rsp+0x8],rax
0xca39: xor eax,eax
0xca3b: call 0xc790
0xca40: cmp eax,0xff
0xca43: jz 0xca70
0xca45: test eax,eax
0xca47: jnz 0xca4d
0xca49: mov rbx,qword ptr [rsp]
0xca4d: mov rcx,qword ptr [rsp+0x8]
0xca52: xor rcx,0x28
0xca5b: mov rax,rbx
0xca5e: jnz 0xca74
0xca60: add rsp,0x10
0xca64: pop rbx
0xca65: ret
0xca66: nop qword ptr [rax+rax*1+0x0]
0xca70: xor ebx,ebx
0xca72: jmp 0xca4d
0xca74: call 0x2b30
0xca80: push r12
0xca82: push rbp
0xca83: mov ecx,0x1
0xca88: push rbx
0xca89: mov rbx,rdi
0xca8c: sub rsp,0x10
0xca90: mov rdx,rsp
0xca93: mov rax,0x28
0xca9c: mov qword ptr [rsp+0x8],rax
0xcaa1: xor eax,eax
0xcaa3: call 0xbaa0
0xcaa8: test rax,rax
0xcaab: mov rbp,rax
0xcaae: jz 0xcabf
0xcab0: mov rax,qword ptr [rsp]
0xcab4: sub [rbx+0x20],0x1
0xcab9: cmp [rax],0x0
0xcabd: jz 0xcae0
0xcabf: mov rcx,qword ptr [rsp+0x8]
0xcac4: xor rcx,0x28
0xcacd: mov rax,rbp
0xcad0: jnz 0xcc7e
0xcad6: add rsp,0x10
0xcada: pop rbx
0xcadb: pop rbp
0xcadc: pop r12
0xcade: ret
0xcadf: nop 
0xcae0: mov rax,qword ptr [rbx+0x18]
0xcae4: sub rax,0x1
0xcae8: test rax,rax
0xcaeb: mov qword ptr [rbx+0x18],rax
0xcaef: js 0xcbf0
0xcaf5: pxor xmm0,xmm0
0xcaf9: cvtsi2ss xmm0,rax
0xcafe: mov rax,qword ptr [rbx+0x10]
0xcb02: mov rdx,qword ptr [rbx+0x28]
0xcb06: test rax,rax
0xcb09: js 0xcbd0
0xcb0f: pxor xmm1,xmm1
0xcb13: cvtsi2ss xmm1,rax
0xcb18: mulss xmm1,[rdx]
0xcb1c: ucomiss xmm1,xmm0
0xcb1f: jbe 0xcabf
0xcb21: lea rdi,[rbx+0x28]
0xcb25: call 0xbbc0
0xcb2a: mov rax,qword ptr [rbx+0x10]
0xcb2e: mov rdx,qword ptr [rbx+0x28]
0xcb32: test rax,rax
0xcb35: js 0xcc60
0xcb3b: pxor xmm0,xmm0
0xcb3f: cvtsi2ss xmm0,rax
0xcb44: mov rax,qword ptr [rbx+0x18]
0xcb48: test rax,rax
0xcb4b: js 0xcc40
0xcb51: pxor xmm1,xmm1
0xcb55: cvtsi2ss xmm1,rax
0xcb5a: movss xmm2,[rdx]
0xcb5e: mulss xmm2,xmm0
0xcb62: ucomiss xmm2,xmm1
0xcb65: jbe 0xcabf
0xcb6b: cmp [rdx+0x10],0x0
0xcb6f: mulss xmm0,[rdx+0x4]
0xcb74: jz 0xcc30
0xcb7a: ucomiss xmm0,[rip+0xb68f]
0xcb81: jnb 0xcc10
0xcb87: cvttss2si rsi,xmm0
0xcb8c: mov rdi,rbx
0xcb8f: call 0xc550
0xcb94: test al,al
0xcb96: jnz 0xcabf
0xcb9c: mov rdi,qword ptr [rbx+0x48]
0xcba0: test rdi,rdi
0xcba3: jz 0xcbb9
0xcba5: nop qword ptr [rax]
0xcba8: mov r12,qword ptr [rdi+0x8]
0xcbac: call 0x30d0
0xcbb1: test r12,r12
0xcbb4: mov rdi,r12
0xcbb7: jnz 0xcba8
0xcbb9: mov [rbx+0x48],0x0
0xcbc1: jmp 0xcabf
0xcbc6: nop qword ptr [rax+rax*1+0x0]
0xcbd0: mov rcx,rax
0xcbd3: pxor xmm1,xmm1
0xcbd7: shr rcx,0x1
0xcbda: and eax,0x1
0xcbdd: or rcx,rax
0xcbe0: cvtsi2ss xmm1,rcx
0xcbe5: addss xmm1,xmm1
0xcbe9: jmp 0xcb18
0xcbee: nop 
0xcbf0: mov rdx,rax
0xcbf3: pxor xmm0,xmm0
0xcbf7: shr rdx,0x1
0xcbfa: and eax,0x1
0xcbfd: or rdx,rax
0xcc00: cvtsi2ss xmm0,rdx
0xcc05: addss xmm0,xmm0
0xcc09: jmp 0xcafe
0xcc0e: nop 
0xcc10: subss xmm0,[rip+0xb5f8]
0xcc18: mov rax,-0x9223372036854775808
0xcc22: cvttss2si rsi,xmm0
0xcc27: xor rsi,rax
0xcc2a: jmp 0xcb8c
0xcc2f: nop 
0xcc30: mulss xmm0,[rdx+0x8]
0xcc35: jmp 0xcb7a
0xcc3a: nop qword ptr [rax+rax*1+0x0]
0xcc40: mov rcx,rax
0xcc43: pxor xmm1,xmm1
0xcc47: shr rcx,0x1
0xcc4a: and eax,0x1
0xcc4d: or rcx,rax
0xcc50: cvtsi2ss xmm1,rcx
0xcc55: addss xmm1,xmm1
0xcc59: jmp 0xcb5a
0xcc5e: nop 
0xcc60: mov rcx,rax
0xcc63: pxor xmm0,xmm0
0xcc67: shr rcx,0x1
0xcc6a: and eax,0x1
0xcc6d: or rcx,rax
0xcc70: cvtsi2ss xmm0,rcx
0xcc75: addss xmm0,xmm0
0xcc79: jmp 0xcb44
0xcc7e: call 0x2b30
0xcc90: push rbp
0xcc91: push rbx
0xcc92: mov rbp,rdi
0xcc95: mov rbx,rsi
0xcc98: sub rsp,0x8
0xcc9c: mov rdi,qword ptr [rdi]
0xcc9f: call 0x12fa0
0xcca4: xor rax,qword ptr [rbp+0x8]
0xcca8: xor edx,edx
0xccaa: add rsp,0x8
0xccae: div rbx
0xccb1: pop rbx
0xccb2: pop rbp
0xccb3: mov rax,rdx
0xccb6: ret
0xccc0: mov rax,qword ptr [rdi+0x8]
0xccc4: xor edx,edx
0xccc6: div rsi
0xccc9: mov rax,rdx
0xcccc: ret
0xccd0: xor eax,eax
0xccd2: mov rdx,qword ptr [rsi+0x8]
0xccd6: cmp qword ptr [rdi+0x8],rdx
0xccda: jz 0xcce0
0xccdc: rep ret
0xccde: nop 
0xcce0: mov rcx,qword ptr [rsi+0x10]
0xcce4: cmp qword ptr [rdi+0x10],rcx
0xcce8: jnz 0xccdc
0xccea: sub rsp,0x8
0xccee: mov rsi,qword ptr [rsi]
0xccf1: mov rdi,qword ptr [rdi]
0xccf4: call 0xfbe0
0xccf9: add rsp,0x8
0xccfd: ret
0xcd00: xor eax,eax
0xcd02: mov rdx,qword ptr [rsi+0x8]
0xcd06: cmp qword ptr [rdi+0x8],rdx
0xcd0a: jz 0xcd10
0xcd0c: rep ret
0xcd0e: nop 
0xcd10: mov rcx,qword ptr [rsi+0x10]
0xcd14: cmp qword ptr [rdi+0x10],rcx
0xcd18: jnz 0xcd0c
0xcd1a: sub rsp,0x8
0xcd1e: mov rsi,qword ptr [rsi]
0xcd21: mov rdi,qword ptr [rdi]
0xcd24: call 0x2cf0
0xcd29: test eax,eax
0xcd2b: setz al
0xcd2e: add rsp,0x8
0xcd32: ret
0xcd40: push rbx
0xcd41: mov rbx,rdi
0xcd44: mov rdi,qword ptr [rdi]
0xcd47: call 0x30d0
0xcd4c: mov rdi,rbx
0xcd4f: pop rbx
0xcd50: jmp 0x30d0
0xcd60: push r15
0xcd62: push r14
0xcd64: mov r14,rdx
0xcd67: push r13
0xcd69: push r12
0xcd6b: mov r13,rdi
0xcd6e: push rbp
0xcd6f: push rbx
0xcd70: mov rbp,rdi
0xcd73: mov rbx,rdi
0xcd76: xor r12d,r12d
0xcd79: sub rsp,0x28
0xcd7d: mov qword ptr [rsp+0x8],rsi
0xcd82: mov qword ptr [rsp+0x18],rcx
0xcd87: mov [rsp+0x14],0x0
0xcd8c: nop qword ptr [rax+0x0]
0xcd90: add rbx,0x1
0xcd94: movzx edx,byte ptr [rbx-0x1]
0xcd98: test dl,dl
0xcd9a: jz 0xce38
0xcda0: movzx eax,byte ptr [rbx]
0xcda3: cmp al,0x2f
0xcda5: jz 0xce50
0xcdab: test al,al
0xcdad: setnz al
0xcdb0: cmp dl,0x2f
0xcdb3: setz r15b
0xcdb7: and r15b,al
0xcdba: jz 0xcd90
0xcdbc: test r12,r12
0xcdbf: jz 0xcd90
0xcdc1: mov rax,r12
0xcdc4: sub rax,rbp
0xcdc7: cmp rax,0x1
0xcdcb: jz 0xce60
0xcdd1: cmp rax,0x2
0xcdd5: mov [r12],0x0
0xcdda: jz 0xcea5
0xcde0: mov rdx,qword ptr [rsp+0x18]
0xcde5: mov rsi,rbp
0xcde8: mov rdi,r13
0xcdeb: call r14
0xcdee: test eax,eax
0xcdf0: js 0xce70
0xcdf2: mov byte ptr [rsp+0x14],r15b
0xcdf7: mov edx,0x1
0xcdfc: xor r15d,r15d
0xcdff: mov rdi,qword ptr [rsp+0x8]
0xce04: xor ecx,ecx
0xce06: mov rsi,rbp
0xce09: call 0x10040
0xce0e: cmp eax,0xff
0xce11: mov ebp,eax
0xce13: jz 0xce88
0xce15: test eax,eax
0xce17: mov [r12],0x2f
0xce1c: jnz 0xce88
0xce1e: mov rbp,rbx
0xce21: add rbx,0x1
0xce25: movzx edx,byte ptr [rbx-0x1]
0xce29: test dl,dl
0xce2b: jnz 0xcda0
0xce31: nop qword ptr [rax+0x0]
0xce38: mov rax,rbp
0xce3b: sub rax,r13
0xce3e: add rsp,0x28
0xce42: pop rbx
0xce43: pop rbp
0xce44: pop r12
0xce46: pop r13
0xce48: pop r14
0xce4a: pop r15
0xce4c: ret
0xce4d: nop qword ptr [rax]
0xce50: cmp dl,0x2f
0xce53: cmovne r12,rbx
0xce57: jmp 0xcd90
0xce5c: nop qword ptr [rax+0x0]
0xce60: cmp [rbp+0x0],0x2e
0xce64: jz 0xce1e
0xce66: mov [r12],0x0
0xce6b: jmp 0xcde0
0xce70: call 0x2950
0xce75: mov edx,dword ptr [rsp+0x14]
0xce79: mov r15d,dword ptr [rax]
0xce7c: and edx,0x1
0xce7f: jmp 0xcdff
0xce84: nop qword ptr [rax+0x0]
0xce88: test r15d,r15d
0xce8b: jz 0xcea0
0xce8d: call 0x2950
0xce92: cmp [rax],0x2
0xce95: jnz 0xcea0
0xce97: mov dword ptr [rax],r15d
0xce9a: nop qword ptr [rax+rax*1+0x0]
0xcea0: movsxd rax,ebp
0xcea3: jmp 0xce3e
0xcea5: cmp [rbp+0x0],0x2e
0xcea9: jnz 0xcde0
0xceaf: cmp [rbp+0x1],0x2e
0xceb3: jnz 0xcde0
0xceb9: xor r15d,r15d
0xcebc: mov [rsp+0x14],0x0
0xcec1: xor edx,edx
0xcec3: jmp 0xcdff
0xced0: push r15
0xced2: push r14
0xced4: mov r15,rcx
0xced7: push r13
0xced9: push r12
0xcedb: mov r14,rsi
0xcede: push rbp
0xcedf: push rbx
0xcee0: mov r13,rdx
0xcee3: mov rbx,rdi
0xcee6: mov r12d,r8d
0xcee9: sub rsp,0xc8
0xcef0: mov eax,dword ptr [rsp+0x118]
0xcef7: mov dword ptr [rsp+0x18],eax
0xcefb: mov rax,0x28
0xcf04: mov qword ptr [rsp+0xb8],rax
0xcf0c: xor eax,eax
0xcf0e: cmp [rdi],0x2f
0xcf11: jz 0xcf1c
0xcf13: cmp [rsi],0x4
0xcf16: jz 0xd060
0xcf1c: test r13,r13
0xcf1f: jz 0xd050
0xcf25: mov rcx,r15
0xcf28: mov rdx,r13
0xcf2b: mov rsi,r14
0xcf2e: mov rdi,rbx
0xcf31: mov qword ptr [rsp+0x8],r9
0xcf36: call 0xcd60
0xcf3b: test rax,rax
0xcf3e: js 0xd220
0xcf44: mov r9,qword ptr [rsp+0x8]
0xcf49: add rax,rbx
0xcf4c: mov qword ptr [rsp],rax
0xcf50: cmp [rsp+0x108],0xff
0xcf58: mov eax,dword ptr [rsp+0x100]
0xcf5f: mov esi,r12d
0xcf62: setz cl
0xcf65: cmp [rsp+0x110],0xff
0xcf6d: setz dl
0xcf70: and eax,0xc00
0xcf75: and esi,0x200
0xcf7b: or eax,esi
0xcf7d: and cl,dl
0xcf7f: mov byte ptr [rsp+0x1f],cl
0xcf83: jnz 0xd0d0
0xcf89: mov eax,r12d
0xcf8c: and eax,0xc0
0xcf8f: mov dword ptr [rsp+0x8],eax
0xcf93: mov esi,dword ptr [rsp+0x8]
0xcf97: mov rdi,qword ptr [rsp]
0xcf9b: mov qword ptr [rsp+0x10],r9
0xcfa0: call 0x29c0
0xcfa5: test eax,eax
0xcfa7: mov ebp,eax
0xcfa9: mov r9,qword ptr [rsp+0x10]
0xcfae: jz 0xd140
0xcfb4: call 0x2950
0xcfb9: cmp [rsp+0x18],0x0
0xcfbe: mov r15,rax
0xcfc1: mov ebp,dword ptr [rax]
0xcfc3: jz 0xd260
0xcfc9: test ebp,ebp
0xcfcb: jz 0xd11c
0xcfd1: cmp ebp,0x2
0xcfd4: setnz r12b
0xcfd8: test r13,r13
0xcfdb: setnz al
0xcfde: and r12b,al
0xcfe1: jz 0xd06b
0xcfe7: mov rsi,qword ptr [rsp]
0xcfeb: lea rdx,[rsp+0x20]
0xcff0: mov edi,0x1
0xcff5: call 0x2dd0
0xcffa: test eax,eax
0xcffc: jz 0xd240
0xd002: cmp ebp,0x11
0xd005: jnz 0xd06b
0xd007: mov eax,dword ptr [r15]
0xd00a: cmp eax,0x14
0xd00d: jz 0xd06b
0xd00f: cmp eax,0x2
0xd012: jz 0xd06b
0xd014: mov rdi,rbx
0xd017: xor r12d,r12d
0xd01a: call 0xf6c0
0xd01f: lea rsi,[rip+0x93cf]
0xd026: mov edx,0x5
0xd02b: xor edi,edi
0xd02d: mov rbx,rax
0xd030: call 0x2ad0
0xd035: mov esi,dword ptr [r15]
0xd038: mov rdx,rax
0xd03b: mov rcx,rbx
0xd03e: xor edi,edi
0xd040: xor eax,eax
0xd042: call 0x2f30
0xd047: jmp 0xd09d
0xd049: nop qword ptr [rax+0x0]
0xd050: mov qword ptr [rsp],rbx
0xd054: jmp 0xcf50
0xd059: nop qword ptr [rax+0x0]
0xd060: mov ebp,dword ptr [rsi+0x4]
0xd063: test ebp,ebp
0xd065: jz 0xcf1c
0xd06b: mov rdi,rbx
0xd06e: xor r12d,r12d
0xd071: call 0xf6c0
0xd076: lea rsi,[rip+0x9347]
0xd07d: mov rbx,rax
0xd080: mov edx,0x5
0xd085: xor edi,edi
0xd087: call 0x2ad0
0xd08c: mov rcx,rbx
0xd08f: mov rdx,rax
0xd092: mov esi,ebp
0xd094: xor edi,edi
0xd096: xor eax,eax
0xd098: call 0x2f30
0xd09d: mov rdi,qword ptr [rsp+0xb8]
0xd0a5: xor rdi,0x28
0xd0ae: mov eax,r12d
0xd0b1: jnz 0xd285
0xd0b7: add rsp,0xc8
0xd0be: pop rbx
0xd0bf: pop rbp
0xd0c0: pop r12
0xd0c2: pop r13
0xd0c4: pop r14
0xd0c6: pop r15
0xd0c8: ret
0xd0c9: nop qword ptr [rax+0x0]
0xd0d0: test eax,eax
0xd0d2: jnz 0xd130
0xd0d4: mov rdi,qword ptr [rsp]
0xd0d8: mov esi,r12d
0xd0db: mov qword ptr [rsp+0x10],r9
0xd0e0: call 0x29c0
0xd0e5: test eax,eax
0xd0e7: mov ebp,eax
0xd0e9: jnz 0xcfb4
0xd0ef: mov eax,r12d
0xd0f2: mov rsi,r15
0xd0f5: mov rdi,rbx
0xd0f8: and eax,0x1ff
0xd0fd: and eax,dword ptr [rsp+0x100]
0xd104: mov r9,qword ptr [rsp+0x10]
0xd109: mov dword ptr [rsp+0x8],eax
0xd10d: call r9
0xd110: mov esi,dword ptr [rsp+0x8]
0xd114: test esi,esi
0xd116: jnz 0xd28a
0xd11c: mov r12d,0x1
0xd122: jmp 0xd09d
0xd127: nop qword ptr [rax+rax*1+0x0]
0xd130: mov eax,r12d
0xd133: and eax,0xed
0xd136: mov dword ptr [rsp+0x8],eax
0xd13a: jmp 0xcf93
0xd13f: nop 
0xd140: mov rsi,r15
0xd143: mov rdi,rbx
0xd146: call r9
0xd149: mov edx,0x3
0xd14e: mov r15,qword ptr [rsp]
0xd152: lea rcx,[rsp+0x20]
0xd157: mov rdi,r14
0xd15a: mov rsi,r15
0xd15d: call 0x10040
0xd162: cmp eax,0xff
0xd165: jl 0xd11c
0xd167: test eax,eax
0xd169: lea rax,[rip+0xacf3]
0xd170: mov r9d,r12d
0xd173: cmovne rax,r15
0xd177: sub rsp,0x8
0xd17b: mov edx,dword ptr [rsp+0x108]
0xd182: mov rsi,rax
0xd185: push rdx
0xd186: mov r8d,dword ptr [rsp+0x120]
0xd18e: mov ecx,dword ptr [rsp+0x118]
0xd195: mov edx,dword ptr [rsp+0x18]
0xd199: mov edi,dword ptr [rsp+0x30]
0xd19d: call 0x13020
0xd1a2: test eax,eax
0xd1a4: pop rdx
0xd1a5: pop rcx
0xd1a6: jz 0xd11c
0xd1ac: test ebp,ebp
0xd1ae: jz 0xd278
0xd1b4: cmp ebp,0x2
0xd1b7: jz 0xd06b
0xd1bd: test r13,r13
0xd1c0: jz 0xd06b
0xd1c6: call 0x2950
0xd1cb: cmp [rax],0x14
0xd1ce: mov r12,rax
0xd1d1: jz 0xd06b
0xd1d7: mov rdi,rbx
0xd1da: call 0xf6c0
0xd1df: cmp [rsp+0x1f],0x0
0xd1e4: mov rbx,rax
0xd1e7: lea rsi,[rip+0xb032]
0xd1ee: lea rax,[rip+0x94bb]
0xd1f5: mov edx,0x5
0xd1fa: cmovne rsi,rax
0xd1fe: xor edi,edi
0xd200: call 0x2ad0
0xd205: mov esi,dword ptr [r12]
0xd209: mov rdx,rax
0xd20c: mov rcx,rbx
0xd20f: xor edi,edi
0xd211: xor eax,eax
0xd213: xor r12d,r12d
0xd216: call 0x2f30
0xd21b: jmp 0xd09d
0xd220: cmp rax,0xffffffff
0xd224: jnz 0xd11c
0xd22a: call 0x2950
0xd22f: mov ebp,dword ptr [rax]
0xd231: jmp 0xd06b
0xd236: nop qword ptr [rax+rax*1+0x0]
0xd240: mov eax,dword ptr [rsp+0x38]
0xd244: and eax,0xf000
0xd249: cmp eax,0x4000
0xd24e: jnz 0xd06b
0xd254: jmp 0xd09d
0xd259: nop qword ptr [rax+0x0]
0xd260: mov [rsp+0x8],0xffffffff
0xd268: mov edx,0x2
0xd26d: jmp 0xd14e
0xd272: nop qword ptr [rax+rax*1+0x0]
0xd278: call 0x2950
0xd27d: mov r12,rax
0xd280: jmp 0xd1d7
0xd285: call 0x2b30
0xd28a: mov dword ptr [rsp+0x8],r12d
0xd28f: mov edx,0x3
0xd294: jmp 0xd14e
0xd2a0: push rbp
0xd2a1: push rbx
0xd2a2: mov rbx,rdi
0xd2a5: sub rsp,0x8
0xd2a9: movsx eax,byte ptr [rdi]
0xd2ac: lea edx,[rax-0x30]
0xd2af: cmp dl,0x7
0xd2b2: jbe 0xd368
0xd2b8: test al,al
0xd2ba: mov rcx,rdi
0xd2bd: mov edi,0x1
0xd2c2: jz 0xd2eb
0xd2c4: nop qword ptr [rax+0x0]
0xd2c8: mov edx,eax
0xd2ca: and edx,0xef
0xd2cd: cmp dl,0x2d
0xd2d0: setz dl
0xd2d3: cmp al,0x2b
0xd2d5: setz al
0xd2d8: add rcx,0x1
0xd2dc: or eax,edx
0xd2de: movzx eax,al
0xd2e1: add rdi,rax
0xd2e4: movzx eax,byte ptr [rcx]
0xd2e7: test al,al
0xd2e9: jnz 0xd2c8
0xd2eb: mov edx,0x10
0xd2f0: xor ecx,ecx
0xd2f2: mov rax,rdx
0xd2f5: mul rdi
0xd2f8: jo 0xd60f
0xd2fe: test rax,rax
0xd301: js 0xd619
0xd307: test rcx,rcx
0xd30a: jnz 0xd619
0xd310: shl rdi,0x4
0xd314: lea rbp,[rip+0xaf31]
0xd31b: call 0x12010
0xd320: xor esi,esi
0xd322: xor r11d,r11d
0xd325: movzx r9d,byte ptr [rbx]
0xd329: cmp r9b,0x61
0xd32d: jz 0xd580
0xd333: jle 0xd3a0
0xd335: cmp r9b,0x6f
0xd339: jz 0xd5b0
0xd33f: cmp r9b,0x75
0xd343: jz 0xd5a0
0xd349: cmp r9b,0x67
0xd34d: jz 0xd590
0xd353: mov rdi,rax
0xd356: call 0x30d0
0xd35b: xor eax,eax
0xd35d: add rsp,0x8
0xd361: pop rbx
0xd362: pop rbp
0xd363: ret
0xd364: nop qword ptr [rax+0x0]
0xd368: mov rdx,rdi
0xd36b: xor ebp,ebp
0xd36d: jmp 0xd37f
0xd36f: nop 
0xd370: movsx eax,byte ptr [rdx]
0xd373: lea ecx,[rax-0x30]
0xd376: cmp cl,0x7
0xd379: jnbe 0xd5c0
0xd37f: lea ebp,[rax+rbp*8-0x30]
0xd383: add rdx,0x1
0xd387: cmp ebp,0xfff
0xd38d: jbe 0xd370
0xd38f: add rsp,0x8
0xd393: xor eax,eax
0xd395: pop rbx
0xd396: pop rbp
0xd397: ret
0xd398: nop qword ptr [rax+rax*1+0x0]
0xd3a0: cmp r9b,0x2d
0xd3a4: jz 0xd3b2
0xd3a6: cmp r9b,0x3d
0xd3aa: jz 0xd3b2
0xd3ac: cmp r9b,0x2b
0xd3b0: jnz 0xd353
0xd3b2: lea rdi,[rsi+0x1]
0xd3b6: shl rsi,0x4
0xd3ba: add rsi,rax
0xd3bd: jmp 0xd424
0xd3bf: nop 
0xd3c0: cmp dl,0x6f
0xd3c3: lea r8,[rbx+0x2]
0xd3c7: jz 0xd560
0xd3cd: cmp dl,0x75
0xd3d0: mov r10d,0x1c0
0xd3d6: jnz 0xd4b0
0xd3dc: mov byte ptr [rsi],r9b
0xd3df: mov [rsi+0x1],0x3
0xd3e3: movzx r9d,byte ptr [rbx+0x2]
0xd3e8: mov dword ptr [rsi+0x4],r11d
0xd3ec: mov rbx,r8
0xd3ef: mov dword ptr [rsi+0x8],r10d
0xd3f3: mov edx,r10d
0xd3f6: and edx,r11d
0xd3f9: test r11d,r11d
0xd3fc: cmovne r10d,edx
0xd400: mov edx,r9d
0xd403: mov dword ptr [rsi+0xc],r10d
0xd407: add rsi,0x10
0xd40b: and edx,0xef
0xd40e: lea rcx,[rdi+0x1]
0xd412: cmp dl,0x2d
0xd415: jz 0xd421
0xd417: cmp r9b,0x2b
0xd41b: jnz 0xd620
0xd421: mov rdi,rcx
0xd424: movsx edx,byte ptr [rbx+0x1]
0xd428: lea rcx,[rbx+0x1]
0xd42c: cmp dl,0x67
0xd42f: jz 0xd570
0xd435: jnle 0xd3c0
0xd437: lea r8d,[rdx-0x30]
0xd43b: cmp r8b,0x7
0xd43f: jnbe 0xd4b0
0xd441: xor r8d,r8d
0xd444: nop qword ptr [rax+0x0]
0xd448: lea r8d,[rdx+r8*8-0x30]
0xd44d: add rcx,0x1
0xd451: cmp r8d,0xfff
0xd458: jnbe 0xd353
0xd45e: movsx edx,byte ptr [rcx]
0xd461: lea r10d,[rdx-0x30]
0xd465: cmp r10b,0x7
0xd469: jbe 0xd448
0xd46b: test r11d,r11d
0xd46e: jnz 0xd353
0xd474: test dl,dl
0xd476: jz 0xd481
0xd478: cmp dl,0x2c
0xd47b: jnz 0xd353
0xd481: mov byte ptr [rsi],r9b
0xd484: mov [rsi+0x1],0x1
0xd488: mov r9d,edx
0xd48b: mov [rsi+0x4],0xfff
0xd492: mov dword ptr [rsi+0x8],r8d
0xd496: mov rbx,rcx
0xd499: mov r11d,0xfff
0xd49f: mov r10d,0xfff
0xd4a5: jmp 0xd400
0xd4aa: nop qword ptr [rax+rax*1+0x0]
0xd4b0: lea r8d,[rdx-0x58]
0xd4b4: xor r10d,r10d
0xd4b7: mov ebx,0x1
0xd4bc: cmp r8b,0x20
0xd4c0: jnbe 0xd4f9
0xd4c2: nop qword ptr [rax+rax*1+0x0]
0xd4c8: movzx r8d,r8b
0xd4cc: movsxd r8,dword ptr [rbp+r8*4+0x0]
0xd4d1: add r8,rbp
0xd4d4: jmp r8
0xd4d7: nop qword ptr [rax+rax*1+0x0]
0xd4e0: mov ebx,0x2
0xd4e5: nop qword ptr [rax]
0xd4e8: add rcx,0x1
0xd4ec: movzx edx,byte ptr [rcx]
0xd4ef: lea r8d,[rdx-0x58]
0xd4f3: cmp r8b,0x20
0xd4f7: jbe 0xd4c8
0xd4f9: mov byte ptr [rsi],r9b
0xd4fc: mov byte ptr [rsi+0x1],bl
0xd4ff: mov r9d,edx
0xd502: mov dword ptr [rsi+0x4],r11d
0xd506: mov dword ptr [rsi+0x8],r10d
0xd50a: mov rbx,rcx
0xd50d: jmp 0xd3f3
0xd512: nop qword ptr [rax+rax*1+0x0]
0xd518: or r10d,0x49
0xd51c: jmp 0xd4e8
0xd51e: nop 
0xd520: or r10b,0x92
0xd524: jmp 0xd4e8
0xd526: nop qword ptr [rax+rax*1+0x0]
0xd530: or r10d,0x200
0xd537: jmp 0xd4e8
0xd539: nop qword ptr [rax+0x0]
0xd540: or r10d,0xc00
0xd547: jmp 0xd4e8
0xd549: nop qword ptr [rax+0x0]
0xd550: or r10d,0x124
0xd557: jmp 0xd4e8
0xd559: nop qword ptr [rax+0x0]
0xd560: mov r10d,0x7
0xd566: jmp 0xd3dc
0xd56b: nop qword ptr [rax+rax*1+0x0]
0xd570: lea r8,[rbx+0x2]
0xd574: mov r10d,0x38
0xd57a: jmp 0xd3dc
0xd57f: nop 
0xd580: mov r11d,0xfff
0xd586: add rbx,0x1
0xd58a: jmp 0xd325
0xd58f: nop 
0xd590: or r11d,0x438
0xd597: jmp 0xd586
0xd599: nop qword ptr [rax+0x0]
0xd5a0: or r11d,0x9c0
0xd5a7: jmp 0xd586
0xd5a9: nop qword ptr [rax+0x0]
0xd5b0: or r11d,0x207
0xd5b7: jmp 0xd586
0xd5b9: nop qword ptr [rax+0x0]
0xd5c0: test al,al
0xd5c2: jnz 0xd38f
0xd5c8: sub rdx,rbx
0xd5cb: mov ebx,ebp
0xd5cd: mov eax,0xfff
0xd5d2: and ebx,0xc00
0xd5d8: mov edi,0x20
0xd5dd: or ebx,0x3ff
0xd5e3: cmp rdx,0x5
0xd5e7: cmovnl ebx,eax
0xd5ea: call 0x12010
0xd5ef: mov edx,0x13d
0xd5f4: mov [rax+0x4],0xfff
0xd5fb: mov dword ptr [rax+0x8],ebp
0xd5fe: mov word ptr [rax],dx
0xd601: mov dword ptr [rax+0xc],ebx
0xd604: mov [rax+0x11],0x0
0xd608: add rsp,0x8
0xd60c: pop rbx
0xd60d: pop rbp
0xd60e: ret
0xd60f: mov ecx,0x1
0xd614: jmp 0xd2fe
0xd619: call 0x12260
0xd61e: nop 
0xd620: cmp r9b,0x2c
0xd624: jnz 0xd632
0xd626: add rbx,0x1
0xd62a: mov rsi,rdi
0xd62d: jmp 0xd322
0xd632: test r9b,r9b
0xd635: jnz 0xd353
0xd63b: shl rdi,0x4
0xd63f: mov [rax+rdi*1+0x1],0x0
0xd644: jmp 0xd35d
0xd650: push rbx
0xd651: mov rsi,rdi
0xd654: mov edi,0x1
0xd659: sub rsp,0xa0
0xd660: mov rdx,rsp
0xd663: mov rax,0x28
0xd66c: mov qword ptr [rsp+0x98],rax
0xd674: xor eax,eax
0xd676: call 0x2dd0
0xd67b: test eax,eax
0xd67d: jnz 0xd6d0
0xd67f: mov ebx,dword ptr [rsp+0x18]
0xd683: mov edi,0x20
0xd688: call 0x12010
0xd68d: mov edx,0x13d
0xd692: mov [rax+0x4],0xfff
0xd699: mov [rax+0xc],0xfff
0xd6a0: mov word ptr [rax],dx
0xd6a3: mov dword ptr [rax+0x8],ebx
0xd6a6: mov [rax+0x11],0x0
0xd6aa: mov rcx,qword ptr [rsp+0x98]
0xd6b2: xor rcx,0x28
0xd6bb: jnz 0xd6d4
0xd6bd: add rsp,0xa0
0xd6c4: pop rbx
0xd6c5: ret
0xd6c6: nop qword ptr [rax+rax*1+0x0]
0xd6d0: xor eax,eax
0xd6d2: jmp 0xd6aa
0xd6d4: call 0x2b30
0xd6e0: movzx r10d,byte ptr [rcx+0x1]
0xd6e5: mov eax,edi
0xd6e7: and eax,0xfff
0xd6ec: test r10b,r10b
0xd6ef: jz 0xd840
0xd6f5: cmp sil,0x1
0xd6f9: push r12
0xd6fb: push rbp
0xd6fc: push rbx
0xd6fd: sbb ebx,ebx
0xd6ff: movzx ebp,sil
0xd703: not ebx
0xd705: xor r11d,r11d
0xd708: and ebx,0xc00
0xd70e: jmp 0xd74a
0xd710: mov edi,r9d
0xd713: or edi,edx
0xd715: not edi
0xd717: and esi,edi
0xd719: cmp r12b,0x2d
0xd71d: jz 0xd830
0xd723: cmp r12b,0x3d
0xd727: jz 0xd7db
0xd72d: cmp r12b,0x2b
0xd731: jnz 0xd738
0xd733: or r11d,esi
0xd736: or eax,esi
0xd738: add rcx,0x10
0xd73c: movzx r10d,byte ptr [rcx+0x1]
0xd741: test r10b,r10b
0xd744: jz 0xd7fc
0xd74a: mov r9d,dword ptr [rcx+0xc]
0xd74e: mov edi,dword ptr [rcx+0x4]
0xd751: mov esi,dword ptr [rcx+0x8]
0xd754: not r9d
0xd757: and r9d,ebx
0xd75a: cmp r10b,0x2
0xd75e: jz 0xd810
0xd764: cmp r10b,0x3
0xd768: jnz 0xd7a8
0xd76a: and esi,eax
0xd76c: mov r10d,esi
0xd76f: and r10d,0x124
0xd776: cmp r10d,0x1
0xd77a: sbb r10d,r10d
0xd77d: not r10d
0xd780: and r10d,0x124
0xd787: mov r12d,r10d
0xd78a: or r12b,0x92
0xd78e: test sil,0x92
0xd792: cmovne r10d,r12d
0xd796: mov r12d,r10d
0xd799: or r12d,0x49
0xd79d: test sil,0x49
0xd7a1: cmovne r10d,r12d
0xd7a5: or esi,r10d
0xd7a8: mov r10d,r9d
0xd7ab: test edi,edi
0xd7ad: movzx r12d,byte ptr [rcx]
0xd7b1: not r10d
0xd7b4: jz 0xd710
0xd7ba: and r10d,edi
0xd7bd: and esi,r10d
0xd7c0: cmp r12b,0x2d
0xd7c4: jz 0xd830
0xd7c6: cmp r12b,0x3d
0xd7ca: jnz 0xd72d
0xd7d0: not edi
0xd7d2: or r9d,edi
0xd7d5: mov r10d,r9d
0xd7d8: not r10d
0xd7db: and r10d,0xfff
0xd7e2: add rcx,0x10
0xd7e6: and eax,r9d
0xd7e9: or r11d,r10d
0xd7ec: movzx r10d,byte ptr [rcx+0x1]
0xd7f1: or eax,esi
0xd7f3: test r10b,r10b
0xd7f6: jnz 0xd74a
0xd7fc: test r8,r8
0xd7ff: jz 0xd804
0xd801: mov dword ptr [r8],r11d
0xd804: pop rbx
0xd805: pop rbp
0xd806: pop r12
0xd808: ret
0xd809: nop qword ptr [rax+0x0]
0xd810: mov r12d,eax
0xd813: mov r10d,esi
0xd816: and r12d,0x49
0xd81a: or r10d,0x49
0xd81e: or r12d,ebp
0xd821: cmovne esi,r10d
0xd825: jmp 0xd7a8
0xd827: nop qword ptr [rax+rax*1+0x0]
0xd830: or r11d,esi
0xd833: not esi
0xd835: and eax,esi
0xd837: jmp 0xd738
0xd83c: nop qword ptr [rax+0x0]
0xd840: xor r11d,r11d
0xd843: test r8,r8
0xd846: jz 0xd84b
0xd848: mov dword ptr [r8],r11d
0xd84b: rep ret
0xd850: push r13
0xd852: push r12
0xd854: or edx,0x90900
0xd85a: push rbp
0xd85b: push rbx
0xd85c: xor eax,eax
0xd85e: mov r12,rcx
0xd861: sub rsp,0x8
0xd865: call 0x13240
0xd86a: test eax,eax
0xd86c: js 0xd8c0
0xd86e: mov edi,eax
0xd870: mov ebx,eax
0xd872: call 0x2fb0
0xd877: test rax,rax
0xd87a: mov rbp,rax
0xd87d: jz 0xd898
0xd87f: mov dword ptr [r12],ebx
0xd883: add rsp,0x8
0xd887: mov rax,rbp
0xd88a: pop rbx
0xd88b: pop rbp
0xd88c: pop r12
0xd88e: pop r13
0xd890: ret
0xd891: nop qword ptr [rax+0x0]
0xd898: call 0x2950
0xd89d: mov r13d,dword ptr [rax]
0xd8a0: mov r12,rax
0xd8a3: mov edi,ebx
0xd8a5: call 0x2c30
0xd8aa: mov rax,rbp
0xd8ad: mov dword ptr [r12],r13d
0xd8b1: add rsp,0x8
0xd8b5: pop rbx
0xd8b6: pop rbp
0xd8b7: pop r12
0xd8b9: pop r13
0xd8bb: ret
0xd8bc: nop qword ptr [rax+0x0]
0xd8c0: add rsp,0x8
0xd8c4: xor ebp,ebp
0xd8c6: pop rbx
0xd8c7: mov rax,rbp
0xd8ca: pop rbp
0xd8cb: pop r12
0xd8cd: pop r13
0xd8cf: ret
0xd970: push r12
0xd972: push rbp
0xd973: mov r12d,ecx
0xd976: push rbx
0xd977: mov rbp,rdx
0xd97a: mov edx,r8d
0xd97d: sub rsp,0x10
0xd981: lea rbx,[rsp+0x4]
0xd986: mov rax,0x28
0xd98f: mov qword ptr [rsp+0x8],rax
0xd994: xor eax,eax
0xd996: mov rcx,rbx
0xd999: call 0x129d0
0xd99e: test eax,eax
0xd9a0: jnz 0xd9d8
0xd9a2: mov rsi,rbp
0xd9a5: mov rdi,rbx
0xd9a8: mov edx,r12d
0xd9ab: call 0x12a00
0xd9b0: mov rdi,rbx
0xd9b3: mov ebp,eax
0xd9b5: call 0x129c0
0xd9ba: mov rcx,qword ptr [rsp+0x8]
0xd9bf: xor rcx,0x28
0xd9c8: mov eax,ebp
0xd9ca: jnz 0xd9df
0xd9cc: add rsp,0x10
0xd9d0: pop rbx
0xd9d1: pop rbp
0xd9d2: pop r12
0xd9d4: ret
0xd9d5: nop qword ptr [rax]
0xd9d8: mov ebp,0xfffffffe
0xd9dd: jmp 0xd9ba
0xd9df: call 0x2b30
0xd9f0: push rbp
0xd9f1: push rbx
0xd9f2: sub rsp,0x18
0xd9f6: lea rbx,[rsp+0x4]
0xd9fb: mov dword ptr [rsp+0x4],edx
0xd9ff: mov edx,esi
0xda01: mov rsi,rdi
0xda04: mov rdi,rbx
0xda07: mov rax,0x28
0xda10: mov qword ptr [rsp+0x8],rax
0xda15: xor eax,eax
0xda17: call 0x12a00
0xda1c: mov rdi,rbx
0xda1f: mov ebp,eax
0xda21: call 0x129c0
0xda26: mov rcx,qword ptr [rsp+0x8]
0xda2b: xor rcx,0x28
0xda34: jnz 0xda3f
0xda36: add rsp,0x18
0xda3a: mov eax,ebp
0xda3c: pop rbx
0xda3d: pop rbp
0xda3e: ret
0xda3f: call 0x2b30
0xda8c: nop qword ptr [rax+0x0]
0xdadd: nop qword ptr [rax]
0xddf7: nop qword ptr [rax+rax*1+0x0]
0xde2e: nop 
0xde51: nop qword ptr [rax+0x0]
0xde92: nop qword ptr [rax+rax*1+0x0]
0xdea4: nop qword ptr [rax+0x0]
0xdf48: nop qword ptr [rax+rax*1+0x0]
0xdf71: nop qword ptr [rax+0x0]
0xdf87: nop qword ptr [rax+rax*1+0x0]
0xdf9f: nop 
0xdfce: nop 
0xdfdd: nop qword ptr [rax]
0xdfef: nop 
0xdfff: nop 
0xe00f: nop 
0xe01f: nop 
0xe02f: nop 
0xe09c: nop qword ptr [rax+0x0]
0xe0bc: nop qword ptr [rax+0x0]
0xe0df: nop 
0xe0f2: nop qword ptr [rax+rax*1+0x0]
0xe10a: nop qword ptr [rax+rax*1+0x0]
0xe11a: nop qword ptr [rax+rax*1+0x0]
0xe1bb: nop qword ptr [rax+rax*1+0x0]
0xe1d5: nop qword ptr [rax]
0xe1e8: nop qword ptr [rax+rax*1+0x0]
0xe203: nop qword ptr [rax+rax*1+0x0]
0xe232: nop qword ptr [rax+rax*1+0x0]
0xe242: nop qword ptr [rax+rax*1+0x0]
0xe25a: nop qword ptr [rax+rax*1+0x0]
0xe26a: nop qword ptr [rax+rax*1+0x0]
0xe278: nop qword ptr [rax+rax*1+0x0]
0xe29f: nop 
0xe339: nop qword ptr [rax+0x0]
0xe382: nop qword ptr [rax+rax*1+0x0]
0xe3c1: nop qword ptr [rax+0x0]
0xe3e2: nop qword ptr [rax+rax*1+0x0]
0xe548: nop qword ptr [rax+rax*1+0x0]
0xe65b: nop qword ptr [rax+rax*1+0x0]
0xe67e: nop 
0xe745: nop qword ptr [rax]
0xe7fd: nop qword ptr [rax]
0xea06: nop qword ptr [rax+rax*1+0x0]
0xea99: nop qword ptr [rax+0x0]
0xebed: nop qword ptr [rax]
0xeefb: nop qword ptr [rax+rax*1+0x0]
0xef30: push r12
0xef32: push rbp
0xef33: push rbx
0xef34: mov rbx,rdi
0xef37: call 0x2950
0xef3c: mov r12d,dword ptr [rax]
0xef3f: mov rbp,rax
0xef42: lea rax,[rip+0x210797]
0xef49: test rbx,rbx
0xef4c: mov esi,0x38
0xef51: cmove rbx,rax
0xef55: mov rdi,rbx
0xef58: call 0x12210
0xef5d: mov dword ptr [rbp+0x0],r12d
0xef61: pop rbx
0xef62: pop rbp
0xef63: pop r12
0xef65: ret
0xef70: lea rax,[rip+0x210769]
0xef77: test rdi,rdi
0xef7a: cmove rdi,rax
0xef7e: mov eax,dword ptr [rdi]
0xef80: ret
0xef90: lea rax,[rip+0x210749]
0xef97: test rdi,rdi
0xef9a: cmove rdi,rax
0xef9e: mov dword ptr [rdi],esi
0xefa0: ret
0xefb0: lea rax,[rip+0x210729]
0xefb7: test rdi,rdi
0xefba: mov ecx,esi
0xefbc: cmove rdi,rax
0xefc0: mov eax,esi
0xefc2: and ecx,0x1f
0xefc5: shr al,0x5
0xefc8: movzx eax,al
0xefcb: lea rdi,[rdi+rax*4+0x8]
0xefd0: mov esi,dword ptr [rdi]
0xefd2: mov eax,esi
0xefd4: shr eax,cl
0xefd6: xor edx,eax
0xefd8: and eax,0x1
0xefdb: and edx,0x1
0xefde: shl edx,cl
0xefe0: xor edx,esi
0xefe2: mov dword ptr [rdi],edx
0xefe4: ret
0xeff0: lea rax,[rip+0x2106e9]
0xeff7: test rdi,rdi
0xeffa: cmove rdi,rax
0xeffe: mov eax,dword ptr [rdi+0x4]
0xf001: mov dword ptr [rdi+0x4],esi
0xf004: ret
0xf010: lea rax,[rip+0x2106c9]
0xf017: test rdi,rdi
0xf01a: cmove rdi,rax
0xf01e: test rsi,rsi
0xf021: mov [rdi],0xa
0xf027: jz 0xf037
0xf029: test rdx,rdx
0xf02c: jz 0xf037
0xf02e: mov qword ptr [rdi+0x28],rsi
0xf032: mov qword ptr [rdi+0x30],rdx
0xf036: ret
0xf037: sub rsp,0x8
0xf03b: call 0x2940
0xf040: push r15
0xf042: push r14
0xf044: lea rax,[rip+0x210695]
0xf04b: push r13
0xf04d: push r12
0xf04f: mov r13,rdi
0xf052: push rbp
0xf053: push rbx
0xf054: mov rbx,r8
0xf057: mov r14,rsi
0xf05a: mov r15,rdx
0xf05d: sub rsp,0x18
0xf061: test r8,r8
0xf064: cmove rbx,rax
0xf068: mov qword ptr [rsp+0x8],rcx
0xf06d: call 0x2950
0xf072: mov r12d,dword ptr [rax]
0xf075: mov rbp,rax
0xf078: lea rax,[rbx+0x8]
0xf07c: sub rsp,0x8
0xf080: mov r9d,dword ptr [rbx+0x4]
0xf084: push qword ptr [rbx+0x30]
0xf087: mov r8d,dword ptr [rbx]
0xf08a: push qword ptr [rbx+0x28]
0xf08d: mov rdx,r15
0xf090: push rax
0xf091: mov rcx,qword ptr [rsp+0x28]
0xf096: mov rsi,r14
0xf099: mov rdi,r13
0xf09c: call 0xdb40
0xf0a1: mov dword ptr [rbp+0x0],r12d
0xf0a5: add rsp,0x38
0xf0a9: pop rbx
0xf0aa: pop rbp
0xf0ab: pop r12
0xf0ad: pop r13
0xf0af: pop r14
0xf0b1: pop r15
0xf0b3: ret
0xf0c0: push r15
0xf0c2: push r14
0xf0c4: lea rax,[rip+0x210615]
0xf0cb: push r13
0xf0cd: push r12
0xf0cf: mov r12,rdx
0xf0d2: push rbp
0xf0d3: push rbx
0xf0d4: mov rbx,rcx
0xf0d7: mov r14,rdi
0xf0da: mov r15,rsi
0xf0dd: sub rsp,0x38
0xf0e1: test rcx,rcx
0xf0e4: cmove rbx,rax
0xf0e8: xor ebp,ebp
0xf0ea: call 0x2950
0xf0ef: test r12,r12
0xf0f2: mov r13,rax
0xf0f5: mov eax,dword ptr [rax]
0xf0f7: setz bpl
0xf0fb: or ebp,dword ptr [rbx+0x4]
0xf0fe: lea r10,[rbx+0x8]
0xf102: sub rsp,0x8
0xf106: mov r8d,dword ptr [rbx]
0xf109: mov rcx,r15
0xf10c: mov dword ptr [rsp+0x14],eax
0xf110: push qword ptr [rbx+0x30]
0xf113: mov rdx,r14
0xf116: push qword ptr [rbx+0x28]
0xf119: push r10
0xf11b: xor esi,esi
0xf11d: mov r9d,ebp
0xf120: xor edi,edi
0xf122: mov qword ptr [rsp+0x40],r10
0xf127: call 0xdb40
0xf12c: lea rsi,[rax+0x1]
0xf130: mov qword ptr [rsp+0x48],rax
0xf135: add rsp,0x20
0xf139: mov rdi,rsi
0xf13c: mov qword ptr [rsp+0x18],rsi
0xf141: call 0x12010
0xf146: mov qword ptr [rsp+0x10],rax
0xf14b: sub rsp,0x8
0xf14f: push qword ptr [rbx+0x30]
0xf152: push qword ptr [rbx+0x28]
0xf155: mov r10,qword ptr [rsp+0x38]
0xf15a: mov r9d,ebp
0xf15d: mov r8d,dword ptr [rbx]
0xf160: mov rcx,r15
0xf163: mov rdx,r14
0xf166: mov rdi,rax
0xf169: push r10
0xf16b: mov rsi,qword ptr [rsp+0x38]
0xf170: call 0xdb40
0xf175: mov eax,dword ptr [rsp+0x2c]
0xf179: add rsp,0x20
0xf17d: test r12,r12
0xf180: mov dword ptr [r13+0x0],eax
0xf184: jz 0xf18f
0xf186: mov r11,qword ptr [rsp+0x28]
0xf18b: mov qword ptr [r12],r11
0xf18f: mov rax,qword ptr [rsp+0x10]
0xf194: add rsp,0x38
0xf198: pop rbx
0xf199: pop rbp
0xf19a: pop r12
0xf19c: pop r13
0xf19e: pop r14
0xf1a0: pop r15
0xf1a2: ret
0xf1b0: mov rcx,rdx
0xf1b3: xor edx,edx
0xf1b5: jmp 0xf0c0
0xf1c0: mov eax,dword ptr [rip+0x20ded2]
0xf1c6: push r12
0xf1c8: mov r12,qword ptr [rip+0x20ded1]
0xf1cf: push rbp
0xf1d0: push rbx
0xf1d1: cmp eax,0x1
0xf1d4: jle 0xf201
0xf1d6: sub eax,0x2
0xf1d9: lea rbx,[r12+0x18]
0xf1de: shl rax,0x4
0xf1e2: lea rbp,[r12+rax*1+0x28]
0xf1e7: nop qword ptr [rax+rax*1+0x0]
0xf1f0: mov rdi,qword ptr [rbx]
0xf1f3: add rbx,0x10
0xf1f7: call 0x30d0
0xf1fc: cmp rbx,rbp
0xf1ff: jnz 0xf1f0
0xf201: mov rdi,qword ptr [r12+0x8]
0xf206: lea rbx,[rip+0x2103d3]
0xf20d: cmp rdi,rbx
0xf210: jz 0xf229
0xf212: call 0x30d0
0xf217: mov [rip+0x20de8e],0x100
0xf222: mov qword ptr [rip+0x20de8f],rbx
0xf229: lea rbx,[rip+0x20de80]
0xf230: cmp r12,rbx
0xf233: jz 0xf244
0xf235: mov rdi,r12
0xf238: call 0x30d0
0xf23d: mov qword ptr [rip+0x20de5c],rbx
0xf244: pop rbx
0xf245: mov [rip+0x20de49],0x1
0xf24f: pop rbp
0xf250: pop r12
0xf252: ret
0xf260: lea rcx,[rip+0x210479]
0xf267: mov rdx,0xffffffff
0xf26e: jmp 0xed80
0xf280: lea rcx,[rip+0x210459]
0xf287: jmp 0xed80
0xf290: lea rcx,[rip+0x210449]
0xf297: mov rsi,rdi
0xf29a: mov rdx,0xffffffff
0xf2a1: xor edi,edi
0xf2a3: jmp 0xed80
0xf2b0: lea rcx,[rip+0x210429]
0xf2b7: mov rdx,rsi
0xf2ba: mov rsi,rdi
0xf2bd: xor edi,edi
0xf2bf: jmp 0xed80
0xf34f: add rsp,0x48
0xf353: ret
0xf360: sub rsp,0x48
0xf364: mov rax,rdx
0xf367: mov rdx,rcx
0xf36a: mov rcx,0x28
0xf373: mov qword ptr [rsp+0x38],rcx
0xf378: xor ecx,ecx
0xf37a: cmp esi,0xa
0xf37d: jz 0xf3e0
0xf37f: mov dword ptr [rsp],esi
0xf382: mov rcx,rsp
0xf385: mov rsi,rax
0xf388: mov [rsp+0x4],0x0
0xf391: mov [rsp+0xc],0x0
0xf39a: mov [rsp+0x14],0x0
0xf3a3: mov [rsp+0x1c],0x0
0xf3ac: mov [rsp+0x24],0x0
0xf3b5: mov [rsp+0x2c],0x0
0xf3be: mov [rsp+0x34],0x0
0xf3c6: call 0xed80
0xf3cb: mov rdx,qword ptr [rsp+0x38]
0xf3d0: xor rdx,0x28
0xf3d9: jnz 0xf3e5
0xf3db: add rsp,0x48
0xf3df: ret
0xf3e0: call 0x2940
0xf3e5: call 0x2b30
0xf400: mov rcx,rdx
0xf403: mov rdx,rsi
0xf406: mov esi,edi
0xf408: xor edi,edi
0xf40a: jmp 0xf360
0xf410: sub rsp,0x48
0xf414: mov ecx,edx
0xf416: mov rax,0x28
0xf41f: mov qword ptr [rsp+0x38],rax
0xf424: xor eax,eax
0xf426: mov rax,qword ptr [rip+0x2102e3]
0xf42d: mov r8,rsp
0xf430: and ecx,0x1f
0xf433: movdqa xmm0,[rip+0x2102a5]
0xf43b: mov qword ptr [rsp+0x30],rax
0xf440: mov eax,edx
0xf442: movaps [rsp],xmm0
0xf446: shr al,0x5
0xf449: movzx eax,al
0xf44c: lea r9,[r8+rax*4+0x8]
0xf451: movdqa xmm0,[rip+0x210297]
0xf459: movaps [rsp+0x10],xmm0
0xf45e: movdqa xmm0,[rip+0x21029a]
0xf466: movaps [rsp+0x20],xmm0
0xf46b: mov edx,dword ptr [r9]
0xf46e: mov eax,edx
0xf470: shr eax,cl
0xf472: not eax
0xf474: and eax,0x1
0xf477: shl eax,cl
0xf479: mov rcx,r8
0xf47c: xor eax,edx
0xf47e: mov rdx,rsi
0xf481: mov rsi,rdi
0xf484: mov dword ptr [r9],eax
0xf487: xor edi,edi
0xf489: call 0xed80
0xf48e: mov rsi,qword ptr [rsp+0x38]
0xf493: xor rsi,0x28
0xf49c: jnz 0xf4a3
0xf49e: add rsp,0x48
0xf4a2: ret
0xf4a3: call 0x2b30
0xf4b0: movsx edx,sil
0xf4b4: mov rsi,0xffffffff
0xf4bb: jmp 0xf410
0xf4c0: mov edx,0x3a
0xf4c5: mov rsi,0xffffffff
0xf4cc: jmp 0xf410
0xf4e0: mov edx,0x3a
0xf4e5: jmp 0xf410
0xf4f0: sub rsp,0x48
0xf4f4: mov rax,rdx
0xf4f7: mov rdx,0x28
0xf500: mov qword ptr [rsp+0x38],rdx
0xf505: xor edx,edx
0xf507: cmp esi,0xa
0xf50a: jz 0xf574
0xf50c: mov dword ptr [rsp],esi
0xf50f: mov rcx,rsp
0xf512: mov rdx,0xffffffff
0xf519: mov rsi,rax
0xf51c: mov [rsp+0x4],0x0
0xf525: mov [rsp+0xc],0x4000000
0xf52e: mov [rsp+0x14],0x0
0xf537: mov [rsp+0x1c],0x0
0xf540: mov [rsp+0x24],0x0
0xf549: mov [rsp+0x2c],0x0
0xf552: mov [rsp+0x34],0x0
0xf55a: call 0xed80
0xf55f: mov rcx,qword ptr [rsp+0x38]
0xf564: xor rcx,0x28
0xf56d: jnz 0xf579
0xf56f: add rsp,0x48
0xf573: ret
0xf574: call 0x2940
0xf579: call 0x2b30
0xf580: sub rsp,0x48
0xf584: mov r9,rcx
0xf587: mov rcx,qword ptr [rip+0x210182]
0xf58e: movdqa xmm0,[rip+0x21014a]
0xf596: mov rax,0x28
0xf59f: mov qword ptr [rsp+0x38],rax
0xf5a4: xor eax,eax
0xf5a6: movaps [rsp],xmm0
0xf5aa: test rsi,rsi
0xf5ad: mov qword ptr [rsp+0x30],rcx
0xf5b2: mov [rsp],0xa
0xf5b9: movdqa xmm0,[rip+0x21012f]
0xf5c1: movaps [rsp+0x10],xmm0
0xf5c6: movdqa xmm0,[rip+0x210132]
0xf5ce: movaps [rsp+0x20],xmm0
0xf5d3: jz 0xf607
0xf5d5: test rdx,rdx
0xf5d8: jz 0xf607
0xf5da: mov qword ptr [rsp+0x28],rsi
0xf5df: mov qword ptr [rsp+0x30],rdx
0xf5e4: mov rcx,rsp
0xf5e7: mov rdx,r8
0xf5ea: mov rsi,r9
0xf5ed: call 0xed80
0xf5f2: mov rdi,qword ptr [rsp+0x38]
0xf5f7: xor rdi,0x28
0xf600: jnz 0xf60c
0xf602: add rsp,0x48
0xf606: ret
0xf607: call 0x2940
0xf60c: call 0x2b30
0xf620: mov r8,0xffffffff
0xf627: jmp 0xf580
0xf630: mov rcx,rdx
0xf633: mov r8,0xffffffff
0xf63a: mov rdx,rsi
0xf63d: mov rsi,rdi
0xf640: xor edi,edi
0xf642: jmp 0xf580
0xf650: mov r8,rcx
0xf653: mov rcx,rdx
0xf656: mov rdx,rsi
0xf659: mov rsi,rdi
0xf65c: xor edi,edi
0xf65e: jmp 0xf580
0xf670: lea rcx,[rip+0x20d9e9]
0xf677: jmp 0xed80
0xf680: lea rcx,[rip+0x20d9d9]
0xf687: mov rdx,rsi
0xf68a: mov rsi,rdi
0xf68d: xor edi,edi
0xf68f: jmp 0xed80
0xf6c0: lea rcx,[rip+0x20d999]
0xf6c7: mov rsi,rdi
0xf6ca: mov rdx,0xffffffff
0xf6d1: xor edi,edi
0xf6d3: jmp 0xed80
0xf6e0: push r15
0xf6e2: push r14
0xf6e4: mov r9d,r8d
0xf6e7: push r13
0xf6e9: push r12
0xf6eb: mov r14d,edx
0xf6ee: push rbp
0xf6ef: push rbx
0xf6f0: mov r12,rsi
0xf6f3: mov r13,rcx
0xf6f6: mov ebp,r8d
0xf6f9: mov r8,rcx
0xf6fc: sub rsp,0x148
0xf703: mov ecx,edx
0xf705: mov rdx,rsi
0xf708: mov rax,0x28
0xf711: mov qword ptr [rsp+0x138],rax
0xf719: xor eax,eax
0xf71b: mov esi,edi
0xf71d: mov dword ptr [rsp+0x4],edi
0xf721: mov edi,0x13c
0xf726: call 0x2d50
0xf72b: mov rbx,rax
0xf72e: mov r15d,eax
0xf731: call 0x2950
0xf736: test ebx,ebx
0xf738: js 0xf770
0xf73a: mov rdx,qword ptr [rsp+0x138]
0xf742: xor rdx,0x28
0xf74b: mov eax,r15d
0xf74e: jnz 0xf945
0xf754: add rsp,0x148
0xf75b: pop rbx
0xf75c: pop rbp
0xf75d: pop r12
0xf75f: pop r13
0xf761: pop r14
0xf763: pop r15
0xf765: ret
0xf766: nop qword ptr [rax+rax*1+0x0]
0xf770: mov r9,rax
0xf773: mov eax,dword ptr [rax]
0xf775: lea ecx,[rax-0x16]
0xf778: and ecx,0xef
0xf77b: setnz bl
0xf77e: cmp eax,0x5f
0xf781: setnz al
0xf784: and bl,al
0xf786: jnz 0xf73a
0xf788: test ebp,ebp
0xf78a: jnz 0xf7e0
0xf78c: mov rdi,r12
0xf78f: mov qword ptr [rsp+0x8],r9
0xf794: call 0x2af0
0xf799: mov rdi,r13
0xf79c: mov rbp,rax
0xf79f: call 0x2af0
0xf7a4: test rbp,rbp
0xf7a7: jz 0xf7c3
0xf7a9: test rax,rax
0xf7ac: mov r9,qword ptr [rsp+0x8]
0xf7b1: jz 0xf7c3
0xf7b3: cmp [r12+rbp*1-0x1],0x2f
0xf7b9: jz 0xf800
0xf7bb: cmp [r13+rax*1-0x1],0x2f
0xf7c1: jz 0xf800
0xf7c3: mov edi,dword ptr [rsp+0x4]
0xf7c7: mov rcx,r13
0xf7ca: mov edx,r14d
0xf7cd: mov rsi,r12
0xf7d0: call 0x3000
0xf7d5: mov r15d,eax
0xf7d8: jmp 0xf73a
0xf7dd: nop qword ptr [rax]
0xf7e0: and ebp,0xfe
0xf7e3: jz 0xf850
0xf7e5: mov [r9],0x5f
0xf7ec: mov r15d,0xffffffff
0xf7f2: jmp 0xf73a
0xf7f7: nop qword ptr [rax+rax*1+0x0]
0xf800: mov esi,dword ptr [rsp+0x4]
0xf804: lea rcx,[rsp+0x10]
0xf809: mov r8d,0x100
0xf80f: mov rdx,r12
0xf812: mov edi,0x1
0xf817: mov qword ptr [rsp+0x8],r9
0xf81c: call 0x2b80
0xf821: test eax,eax
0xf823: jnz 0xf889
0xf825: test bl,bl
0xf827: mov r9,qword ptr [rsp+0x8]
0xf82c: jz 0xf8aa
0xf82e: mov eax,dword ptr [rsp+0x28]
0xf832: and eax,0xf000
0xf837: cmp eax,0x4000
0xf83c: jz 0xf7c3
0xf83e: mov [r9],0x2
0xf845: mov r15d,0xffffffff
0xf84b: jmp 0xf73a
0xf850: lea rcx,[rsp+0xa0]
0xf858: mov r8d,0x100
0xf85e: mov rdx,r13
0xf861: mov esi,r14d
0xf864: mov edi,0x1
0xf869: mov qword ptr [rsp+0x8],r9
0xf86e: call 0x2b80
0xf873: test eax,eax
0xf875: mov r9,qword ptr [rsp+0x8]
0xf87a: jz 0xf898
0xf87c: mov eax,dword ptr [r9]
0xf87f: cmp eax,0x4b
0xf882: jz 0xf898
0xf884: cmp eax,0x2
0xf887: jz 0xf8f8
0xf889: mov r15d,0xffffffff
0xf88f: jmp 0xf73a
0xf894: nop qword ptr [rax+0x0]
0xf898: mov [r9],0x11
0xf89f: mov r15d,0xffffffff
0xf8a5: jmp 0xf73a
0xf8aa: lea rcx,[rsp+0xa0]
0xf8b2: mov r8d,0x100
0xf8b8: mov rdx,r13
0xf8bb: mov esi,r14d
0xf8be: mov edi,0x1
0xf8c3: mov qword ptr [rsp+0x8],r9
0xf8c8: call 0x2b80
0xf8cd: test eax,eax
0xf8cf: mov r9,qword ptr [rsp+0x8]
0xf8d4: jz 0xf902
0xf8d6: cmp [r9],0x2
0xf8da: jnz 0xf889
0xf8dc: mov eax,dword ptr [rsp+0x28]
0xf8e0: and eax,0xf000
0xf8e5: cmp eax,0x4000
0xf8ea: jnz 0xf889
0xf8ec: jmp 0xf7c3
0xf8f1: nop qword ptr [rax+0x0]
0xf8f8: mov ebx,0x1
0xf8fd: jmp 0xf78c
0xf902: mov eax,dword ptr [rsp+0xb8]
0xf909: and eax,0xf000
0xf90e: cmp eax,0x4000
0xf913: jz 0xf921
0xf915: mov [r9],0x14
0xf91c: jmp 0xf889
0xf921: mov eax,dword ptr [rsp+0x28]
0xf925: and eax,0xf000
0xf92a: cmp eax,0x4000
0xf92f: jz 0xf7c3
0xf935: mov [r9],0x15
0xf93c: or r15d,0xff
0xf940: jmp 0xf73a
0xf945: call 0x2b30
0xf950: push r13
0xf952: push r12
0xf954: mov r13d,edi
0xf957: push rbp
0xf958: push rbx
0xf959: mov r12,rsi
0xf95c: mov rbx,rdx
0xf95f: sub rsp,0x8
0xf963: nop qword ptr [rax+rax*1+0x0]
0xf968: mov rdx,rbx
0xf96b: mov rsi,r12
0xf96e: mov edi,r13d
0xf971: call 0x2c80
0xf976: test rax,rax
0xf979: mov rbp,rax
0xf97c: jns 0xf9a0
0xf97e: call 0x2950
0xf983: mov eax,dword ptr [rax]
0xf985: cmp eax,0x4
0xf988: jz 0xf968
0xf98a: cmp rbx,0x7ff00000
0xf991: jbe 0xf9a0
0xf993: cmp eax,0x16
0xf996: jnz 0xf9a0
0xf998: mov ebx,0x7ff00000
0xf99d: jmp 0xf968
0xf99f: nop 
0xf9a0: add rsp,0x8
0xf9a4: mov rax,rbp
0xf9a7: pop rbx
0xf9a8: pop rbp
0xf9a9: pop r12
0xf9ab: pop r13
0xf9ad: ret
0xf9b0: push r13
0xf9b2: push r12
0xf9b4: mov r13d,edi
0xf9b7: push rbp
0xf9b8: push rbx
0xf9b9: mov r12,rsi
0xf9bc: mov rbx,rdx
0xf9bf: sub rsp,0x8
0xf9c3: nop qword ptr [rax+rax*1+0x0]
0xf9c8: mov rdx,rbx
0xf9cb: mov rsi,r12
0xf9ce: mov edi,r13d
0xf9d1: call 0x2a20
0xf9d6: test rax,rax
0xf9d9: mov rbp,rax
0xf9dc: jns 0xfa00
0xf9de: call 0x2950
0xf9e3: mov eax,dword ptr [rax]
0xf9e5: cmp eax,0x4
0xf9e8: jz 0xf9c8
0xf9ea: cmp eax,0x16
0xf9ed: jnz 0xfa00
0xf9ef: cmp rbx,0x7ff00000
0xf9f6: jbe 0xfa00
0xf9f8: mov ebx,0x7ff00000
0xf9fd: jmp 0xf9c8
0xf9ff: nop 
0xfa00: add rsp,0x8
0xfa04: mov rax,rbp
0xfa07: pop rbx
0xfa08: pop rbp
0xfa09: pop r12
0xfa0b: pop r13
0xfa0d: ret
0xfa10: push r13
0xfa12: push r12
0xfa14: mov r13d,edi
0xfa17: push rbp
0xfa18: push rbx
0xfa19: mov rdi,rsi
0xfa1c: mov ebp,edx
0xfa1e: mov r12,rcx
0xfa21: sub rsp,0x138
0xfa28: mov rax,0x28
0xfa31: mov qword ptr [rsp+0x128],rax
0xfa39: xor eax,eax
0xfa3b: call 0xb2c0
0xfa40: mov rcx,rsp
0xfa43: mov r8d,0x100
0xfa49: mov rdx,rax
0xfa4c: mov esi,r13d
0xfa4f: mov edi,0x1
0xfa54: mov rbx,rax
0xfa57: call 0x2b80
0xfa5c: test eax,eax
0xfa5e: jnz 0xfb10
0xfa64: mov rdi,rbx
0xfa67: call 0x30d0
0xfa6c: mov rdi,r12
0xfa6f: call 0xb2c0
0xfa74: lea rcx,[rsp+0x90]
0xfa7c: mov r8d,0x100
0xfa82: mov rdx,rax
0xfa85: mov esi,ebp
0xfa87: mov edi,0x1
0xfa8c: mov rbx,rax
0xfa8f: call 0x2b80
0xfa94: test eax,eax
0xfa96: jnz 0xfae8
0xfa98: xor ebp,ebp
0xfa9a: mov rax,qword ptr [rsp+0x98]
0xfaa2: cmp qword ptr [rsp+0x8],rax
0xfaa7: jnz 0xfab9
0xfaa9: mov rax,qword ptr [rsp+0x90]
0xfab1: cmp qword ptr [rsp],rax
0xfab5: setz bpl
0xfab9: mov rdi,rbx
0xfabc: call 0x30d0
0xfac1: mov rdx,qword ptr [rsp+0x128]
0xfac9: xor rdx,0x28
0xfad2: mov eax,ebp
0xfad4: jnz 0xfb32
0xfad6: add rsp,0x138
0xfadd: pop rbx
0xfade: pop rbp
0xfadf: pop r12
0xfae1: pop r13
0xfae3: ret
0xfae4: nop qword ptr [rax+0x0]
0xfae8: call 0x2950
0xfaed: mov esi,dword ptr [rax]
0xfaef: lea rdx,[rip+0x936a]
0xfaf6: mov rcx,rbx
0xfaf9: mov edi,0x1
0xfafe: xor eax,eax
0xfb00: call 0x2f30
0xfb05: jmp 0xfa98
0xfb07: nop qword ptr [rax+rax*1+0x0]
0xfb10: call 0x2950
0xfb15: mov esi,dword ptr [rax]
0xfb17: lea rdx,[rip+0x9342]
0xfb1e: mov rcx,rbx
0xfb21: mov edi,0x1
0xfb26: xor eax,eax
0xfb28: call 0x2f30
0xfb2d: jmp 0xfa64
0xfb32: call 0x2b30
0xfb40: push r15
0xfb42: push r14
0xfb44: mov r15d,edx
0xfb47: push r13
0xfb49: push r12
0xfb4b: push rbp
0xfb4c: push rbx
0xfb4d: mov rbp,rcx
0xfb50: mov rbx,rsi
0xfb53: sub rsp,0x18
0xfb57: mov dword ptr [rsp+0xc],edi
0xfb5b: mov rdi,rsi
0xfb5e: call 0xb3a0
0xfb63: mov rdi,rbp
0xfb66: mov r12,rax
0xfb69: call 0xb3a0
0xfb6e: mov rdi,r12
0xfb71: mov r13,rax
0xfb74: call 0xb400
0xfb79: mov rdi,r13
0xfb7c: mov r14,rax
0xfb7f: call 0xb400
0xfb84: cmp r14,rax
0xfb87: jz 0xfba0
0xfb89: add rsp,0x18
0xfb8d: xor eax,eax
0xfb8f: pop rbx
0xfb90: pop rbp
0xfb91: pop r12
0xfb93: pop r13
0xfb95: pop r14
0xfb97: pop r15
0xfb99: ret
0xfb9a: nop qword ptr [rax+rax*1+0x0]
0xfba0: mov rdx,r14
0xfba3: mov rsi,r13
0xfba6: mov rdi,r12
0xfba9: call 0x2c90
0xfbae: test eax,eax
0xfbb0: jnz 0xfb89
0xfbb2: mov edi,dword ptr [rsp+0xc]
0xfbb6: add rsp,0x18
0xfbba: mov rcx,rbp
0xfbbd: mov edx,r15d
0xfbc0: mov rsi,rbx
0xfbc3: pop rbx
0xfbc4: pop rbp
0xfbc5: pop r12
0xfbc7: pop r13
0xfbc9: pop r14
0xfbcb: pop r15
0xfbcd: jmp 0xfa10
0xfbe0: mov edx,0xffffff9c
0xfbe5: mov rcx,rsi
0xfbe8: mov rsi,rdi
0xfbeb: mov edi,edx
0xfbed: jmp 0xfb40
0xfc00: mov rax,qword ptr [rsi+0x8]
0xfc04: cmp qword ptr [rdi+0x8],rax
0xfc08: jb 0xfc18
0xfc0a: setnbe al
0xfc0d: movzx eax,al
0xfc10: ret
0xfc11: nop qword ptr [rax+0x0]
0xfc18: mov eax,0xffffffff
0xfc1d: ret
0xfc20: mov rsi,qword ptr [rsi]
0xfc23: mov rdi,qword ptr [rdi]
0xfc26: jmp 0x2cf0
0xfc30: push r15
0xfc32: lea rax,[rip+0x20cd87]
0xfc39: push r14
0xfc3b: push r13
0xfc3d: push r12
0xfc3f: mov esi,esi
0xfc41: push rbp
0xfc42: push rbx
0xfc43: sub rsp,0x48
0xfc47: mov rax,qword ptr [rax+rsi*8+0x0]
0xfc4b: test rdi,rdi
0xfc4e: mov qword ptr [rsp+0x8],rax
0xfc53: jz 0xff5d
0xfc59: mov rbx,rdi
0xfc5c: xor r14d,r14d
0xfc5f: xor r12d,r12d
0xfc62: call 0x2950
0xfc67: xor r13d,r13d
0xfc6a: mov rbp,rax
0xfc6d: mov [rsp+0x28],0x0
0xfc76: mov [rsp+0x10],0x0
0xfc7f: mov [rsp+0x20],0x0
0xfc88: jmp 0xfc94
0xfc8a: nop qword ptr [rax+rax*1+0x0]
0xfc90: test al,al
0xfc92: jnz 0xfcc9
0xfc94: mov [rbp+0x0],0x0
0xfc9b: mov rdi,rbx
0xfc9e: call 0x2de0
0xfca3: test rax,rax
0xfca6: mov rcx,rax
0xfca9: jz 0xfd50
0xfcaf: lea r15,[rax+0x13]
0xfcb3: movzx eax,byte ptr [rax+0x13]
0xfcb7: cmp al,0x2e
0xfcb9: jnz 0xfc90
0xfcbb: cmp [rcx+0x14],0x2e
0xfcbf: jz 0xfd40
0xfcc1: movzx eax,byte ptr [rcx+0x14]
0xfcc5: test al,al
0xfcc7: jz 0xfc94
0xfcc9: mov rdi,r15
0xfccc: mov qword ptr [rsp+0x30],rcx
0xfcd1: call 0x2af0
0xfcd6: add rax,0x1
0xfcda: cmp [rsp+0x8],0x0
0xfce0: mov qword ptr [rsp+0x18],rax
0xfce5: jz 0xfe28
0xfceb: cmp r12,qword ptr [rsp+0x28]
0xfcf0: lea rax,[r12+0x1]
0xfcf5: mov rcx,qword ptr [rsp+0x30]
0xfcfa: mov qword ptr [rsp+0x38],rax
0xfcff: jz 0xfeb1
0xfd05: shl r12,0x4
0xfd09: mov rdi,r15
0xfd0c: add r12,qword ptr [rsp+0x10]
0xfd11: mov qword ptr [rsp+0x30],rcx
0xfd16: call 0x12240
0xfd1b: mov rcx,qword ptr [rsp+0x30]
0xfd20: add r14,qword ptr [rsp+0x18]
0xfd25: mov qword ptr [r12],rax
0xfd29: mov rax,qword ptr [rcx]
0xfd2c: mov qword ptr [r12+0x8],rax
0xfd31: mov r12,qword ptr [rsp+0x38]
0xfd36: jmp 0xfc94
0xfd3b: nop qword ptr [rax+rax*1+0x0]
0xfd40: movzx eax,byte ptr [rcx+0x15]
0xfd44: jmp 0xfc90
0xfd49: nop qword ptr [rax+0x0]
0xfd50: mov ebx,dword ptr [rbp+0x0]
0xfd53: test ebx,ebx
0xfd55: jnz 0xff40
0xfd5b: cmp [rsp+0x8],0x0
0xfd61: jz 0xfe10
0xfd67: test r12,r12
0xfd6a: lea rbx,[r14+0x1]
0xfd6e: jnz 0xfda0
0xfd70: mov rdi,rbx
0xfd73: call 0x12010
0xfd78: mov r13,rax
0xfd7b: mov rbx,rax
0xfd7e: mov rdi,qword ptr [rsp+0x10]
0xfd83: call 0x30d0
0xfd88: mov [rbx],0x0
0xfd8b: add rsp,0x48
0xfd8f: mov rax,r13
0xfd92: pop rbx
0xfd93: pop rbp
0xfd94: pop r12
0xfd96: pop r13
0xfd98: pop r14
0xfd9a: pop r15
0xfd9c: ret
0xfd9d: nop qword ptr [rax]
0xfda0: mov r15,qword ptr [rsp+0x10]
0xfda5: mov rcx,qword ptr [rsp+0x8]
0xfdaa: mov rsi,r12
0xfdad: mov edx,0x10
0xfdb2: shl r12,0x4
0xfdb6: mov rdi,r15
0xfdb9: mov rbp,r15
0xfdbc: add r12,r15
0xfdbf: call 0x29e0
0xfdc4: mov rdi,rbx
0xfdc7: xor ebx,ebx
0xfdc9: call 0x12010
0xfdce: mov r13,rax
0xfdd1: nop qword ptr [rax+0x0]
0xfdd8: mov rsi,qword ptr [rbp+0x0]
0xfddc: lea r14,[r13+rbx*1+0x0]
0xfde1: add rbp,0x10
0xfde5: mov rdi,r14
0xfde8: call 0x2ab0
0xfded: mov rdi,qword ptr [rbp-0x10]
0xfdf1: sub rax,r14
0xfdf4: lea rbx,[rbx+rax*1+0x1]
0xfdf9: call 0x30d0
0xfdfe: cmp r12,rbp
0xfe01: jnz 0xfdd8
0xfe03: add rbx,r13
0xfe06: jmp 0xfd7e
0xfe0b: nop qword ptr [rax+rax*1+0x0]
0xfe10: cmp qword ptr [rsp+0x20],r14
0xfe15: jz 0xff03
0xfe1b: lea rbx,[r13+r14*1+0x0]
0xfe20: jmp 0xfd88
0xfe25: nop qword ptr [rax]
0xfe28: mov rsi,qword ptr [rsp+0x18]
0xfe2d: mov rax,qword ptr [rsp+0x20]
0xfe32: mov rdx,rsi
0xfe35: sub rax,r14
0xfe38: add rdx,r14
0xfe3b: mov qword ptr [rsp+0x30],rdx
0xfe40: setb dl
0xfe43: cmp rax,rsi
0xfe46: movzx edx,dl
0xfe49: jnbe 0xfe95
0xfe4b: test rdx,rdx
0xfe4e: jnz 0xff39
0xfe54: test r13,r13
0xfe57: mov rdx,qword ptr [rsp+0x30]
0xfe5c: jz 0xff1f
0xfe62: mov rax,0x6148914691236517203
0xfe6c: cmp rdx,rax
0xfe6f: jnbe 0xff39
0xfe75: mov rax,rdx
0xfe78: shr rax,0x1
0xfe7b: lea rax,[rdx+rax*1+0x1]
0xfe80: mov qword ptr [rsp+0x20],rax
0xfe85: mov rsi,qword ptr [rsp+0x20]
0xfe8a: mov rdi,r13
0xfe8d: call 0x12070
0xfe92: mov r13,rax
0xfe95: mov rdx,qword ptr [rsp+0x18]
0xfe9a: lea rdi,[r13+r14*1+0x0]
0xfe9f: mov rsi,r15
0xfea2: call 0x2d80
0xfea7: mov r14,qword ptr [rsp+0x30]
0xfeac: jmp 0xfc94
0xfeb1: cmp [rsp+0x10],0x0
0xfeb7: jz 0xff65
0xfebd: mov rax,0x384307168202282324
0xfec7: cmp r12,rax
0xfeca: jnbe 0xff39
0xfecc: mov rax,r12
0xfecf: shr rax,0x1
0xfed2: add rax,qword ptr [rsp+0x38]
0xfed7: mov qword ptr [rsp+0x28],rax
0xfedc: mov rsi,qword ptr [rsp+0x28]
0xfee1: mov rdi,qword ptr [rsp+0x10]
0xfee6: mov qword ptr [rsp+0x30],rcx
0xfeeb: shl rsi,0x4
0xfeef: call 0x12070
0xfef4: mov rcx,qword ptr [rsp+0x30]
0xfef9: mov qword ptr [rsp+0x10],rax
0xfefe: jmp 0xfd05
0xff03: mov rbx,qword ptr [rsp+0x20]
0xff08: mov rdi,r13
0xff0b: lea rsi,[rbx+0x1]
0xff0f: call 0x12070
0xff14: mov r13,rax
0xff17: add rbx,rax
0xff1a: jmp 0xfd88
0xff1f: test rdx,rdx
0xff22: mov eax,0x80
0xff27: cmovne rax,rdx
0xff2b: test rax,rax
0xff2e: mov qword ptr [rsp+0x20],rax
0xff33: jns 0xfe85
0xff39: call 0x12260
0xff3e: nop 
0xff40: mov rdi,qword ptr [rsp+0x10]
0xff45: call 0x30d0
0xff4a: mov rdi,r13
0xff4d: xor r13d,r13d
0xff50: call 0x30d0
0xff55: mov dword ptr [rbp+0x0],ebx
0xff58: jmp 0xfd8b
0xff5d: xor r13d,r13d
0xff60: jmp 0xfd8b
0xff65: test r12,r12
0xff68: mov eax,0x8
0xff6d: mov edx,0x10
0xff72: cmovne rax,r12
0xff76: xor esi,esi
0xff78: mov rdi,rax
0xff7b: mov qword ptr [rsp+0x28],rax
0xff80: mov rax,rdx
0xff83: mul rdi
0xff86: jo 0xffa1
0xff88: test rax,rax
0xff8b: js 0xff39
0xff8d: test rsi,rsi
0xff90: jnz 0xff39
0xff92: lea rax,[r12+0x1]
0xff97: mov qword ptr [rsp+0x38],rax
0xff9c: jmp 0xfedc
0xffa1: mov esi,0x1
0xffa6: jmp 0xff88
0xffb0: push r12
0xffb2: push rbp
0xffb3: mov ebp,esi
0xffb5: push rbx
0xffb6: call 0x12e40
0xffbb: test rax,rax
0xffbe: jz 0xffe8
0xffc0: mov esi,ebp
0xffc2: mov rbx,rax
0xffc5: mov rdi,rax
0xffc8: call 0xfc30
0xffcd: mov rdi,rbx
0xffd0: mov rbp,rax
0xffd3: call 0x2c60
0xffd8: test eax,eax
0xffda: jnz 0xfff0
0xffdc: mov rax,rbp
0xffdf: pop rbx
0xffe0: pop rbp
0xffe1: pop r12
0xffe3: ret
0xffe4: nop qword ptr [rax+0x0]
0xffe8: xor ebp,ebp
0xffea: jmp 0xffdc
0xffec: nop qword ptr [rax+0x0]
0xfff0: call 0x2950
0xfff5: mov r12d,dword ptr [rax]
0xfff8: mov rbx,rax
0xfffb: mov rdi,rbp
0xfffe: call 0x30d0
0x10003: xor ebp,ebp
0x10005: mov dword ptr [rbx],r12d
0x10008: jmp 0xffdc
0x10010: mov [rdi],0x0
0x10016: ret
0x10020: xor eax,eax
0x10022: cmp [rdi],0x4
0x10025: jz 0x10030
0x10027: rep ret
0x10029: nop qword ptr [rax+0x0]
0x10030: mov eax,dword ptr [rdi+0x4]
0x10033: ret
0x10040: test rcx,rcx
0x10043: push r14
0x10045: mov r14d,edx
0x10048: push r13
0x1004a: mov r13,rsi
0x1004d: push r12
0x1004f: mov r12,rdi
0x10052: push rbp
0x10053: mov rbp,rcx
0x10056: push rbx
0x10057: jz 0x10178
0x1005d: mov esi,edx
0x1005f: mov rdi,r13
0x10062: shl esi,0x11
0x10065: and esi,0x20000
0x1006b: or esi,0x10900
0x10071: call 0x2a70
0x10076: mov dword ptr [rbp+0x0],eax
0x10079: mov ebx,eax
0x1007b: call 0x2950
0x10080: mov eax,dword ptr [rax]
0x10082: mov dword ptr [rbp+0x4],eax
0x10085: test ebx,ebx
0x10087: js 0x100c8
0x10089: and r14d,0x2
0x1008d: jz 0x100d6
0x1008f: test rbp,rbp
0x10092: setz al
0x10095: xor r14d,r14d
0x10098: test ebx,ebx
0x1009a: js 0x100b6
0x1009c: test al,al
0x1009e: jz 0x100b6
0x100a0: call 0x2950
0x100a5: mov r12d,dword ptr [rax]
0x100a8: mov rbp,rax
0x100ab: mov edi,ebx
0x100ad: call 0x2c30
0x100b2: mov dword ptr [rbp+0x0],r12d
0x100b6: pop rbx
0x100b7: mov eax,r14d
0x100ba: pop rbp
0x100bb: pop r12
0x100bd: pop r13
0x100bf: pop r14
0x100c1: ret
0x100c2: nop qword ptr [rax+rax*1+0x0]
0x100c8: call 0x2950
0x100cd: cmp [rax],0xd
0x100d0: jnz 0x102a0
0x100d6: mov ecx,dword ptr [r12]
0x100da: cmp ecx,0x5
0x100dd: jnbe 0x102ca
0x100e3: mov eax,0x1
0x100e8: shl rax,cl
0x100eb: test al,0x36
0x100ed: jnz 0x10124
0x100ef: test al,0x8
0x100f1: jnz 0x101c0
0x100f7: test ecx,ecx
0x100f9: jnz 0x102ca
0x100ff: lea rdi,[rip+0x7d5d]
0x10106: xor esi,esi
0x10108: xor eax,eax
0x1010a: call 0xb490
0x1010f: test eax,eax
0x10111: js 0x10220
0x10117: mov [r12],0x1
0x1011f: mov dword ptr [r12+0x4],eax
0x10124: test ebx,ebx
0x10126: js 0x10158
0x10128: mov edi,ebx
0x1012a: call 0x2e60
0x1012f: test eax,eax
0x10131: mov r14d,eax
0x10134: jnz 0x101b0
0x10136: cmp [r12],0x5
0x1013b: jnbe 0x102ab
0x10141: mov eax,dword ptr [r12]
0x10145: lea rdx,[rip+0x8704]
0x1014c: movsxd rax,dword ptr [rdx+rax*4+0x0]
0x10150: add rax,rdx
0x10153: jmp rax
0x10155: nop qword ptr [rax]
0x10158: mov rdi,r13
0x1015b: call 0x2b20
0x10160: test eax,eax
0x10162: mov r14d,eax
0x10165: jz 0x10136
0x10167: pop rbx
0x10168: mov eax,r14d
0x1016b: pop rbp
0x1016c: pop r12
0x1016e: pop r13
0x10170: pop r14
0x10172: ret
0x10173: nop qword ptr [rax+rax*1+0x0]
0x10178: test dl,0x1
0x1017b: mov ebx,0xffffffff
0x10180: jz 0x100d6
0x10186: mov esi,edx
0x10188: mov rdi,r13
0x1018b: shl esi,0x11
0x1018e: and esi,0x20000
0x10194: or esi,0x10900
0x1019a: call 0x2a70
0x1019f: mov ebx,eax
0x101a1: jmp 0x10085
0x101a6: nop qword ptr [rax+rax*1+0x0]
0x101b0: test rbp,rbp
0x101b3: setz al
0x101b6: jmp 0x10098
0x101bb: nop qword ptr [rax+rax*1+0x0]
0x101c0: mov edx,dword ptr [r12+0x4]
0x101c5: test edx,edx
0x101c7: js 0x10259
0x101cd: test ebx,ebx
0x101cf: jns 0x10128
0x101d5: jmp 0x10158
0x101d7: nop qword ptr [rax+rax*1+0x0]
0x101e0: mov [r12],0x2
0x101e8: jmp 0x1008f
0x101ed: nop qword ptr [rax]
0x101f0: mov eax,dword ptr [r12+0x4]
0x101f5: test eax,eax
0x101f7: jz 0x1008f
0x101fd: lea rcx,[rip+0x86bc]
0x10204: lea rsi,[rip+0x8625]
0x1020b: lea rdi,[rip+0x85d6]
0x10212: mov edx,0x9b
0x10217: call 0x2be0
0x1021c: nop qword ptr [rax+0x0]
0x10220: call 0x2950
0x10225: mov eax,dword ptr [rax]
0x10227: cmp eax,0xd
0x1022a: jz 0x10248
0x1022c: cmp eax,0x74
0x1022f: jz 0x10248
0x10231: mov [r12],0x4
0x10239: mov dword ptr [r12+0x4],eax
0x1023e: jmp 0x10124
0x10243: nop qword ptr [rax+rax*1+0x0]
0x10248: mov [r12],0x3
0x10250: mov [r12+0x4],0xffffffff
0x10259: call 0x30a0
0x1025e: cmp eax,0x0
0x10261: mov dword ptr [r12+0x4],eax
0x10266: jz 0x10124
0x1026c: mov eax,0x1
0x10271: mov r14d,0xfffffffe
0x10277: jnle 0x10098
0x1027d: mov [r12],0x4
0x10285: call 0x2950
0x1028a: mov eax,dword ptr [rax]
0x1028c: mov dword ptr [r12+0x4],eax
0x10291: jmp 0x10124
0x10296: nop qword ptr [rax+rax*1+0x0]
0x102a0: mov r14d,0xffffffff
0x102a6: jmp 0x100b6
0x102ab: lea rcx,[rip+0x860e]
0x102b2: lea rsi,[rip+0x8577]
0x102b9: lea rdi,[rip+0x8567]
0x102c0: mov edx,0x9f
0x102c5: call 0x2be0
0x102ca: lea rcx,[rip+0x85df]
0x102d1: lea rsi,[rip+0x8558]
0x102d8: lea rdi,[rip+0x8548]
0x102df: mov edx,0x63
0x102e4: call 0x2be0
0x102f0: push r12
0x102f2: push rbp
0x102f3: push rbx
0x102f4: sub rsp,0x10
0x102f8: mov rax,0x28
0x10301: mov qword ptr [rsp+0x8],rax
0x10306: xor eax,eax
0x10308: cmp [rdi],0x4
0x1030b: jnbe 0x1041d
0x10311: mov eax,dword ptr [rdi]
0x10313: lea rdx,[rip+0x854e]
0x1031a: mov rbx,rdi
0x1031d: movsxd rax,dword ptr [rdx+rax*4+0x0]
0x10321: add rax,rdx
0x10324: jmp rax
0x10326: nop qword ptr [rax+rax*1+0x0]
0x10330: mov ebp,dword ptr [rdi+0x4]
0x10333: cmp ebp,0x0
0x10336: jz 0x1043c
0x1033c: lea r12,[rsp+0x4]
0x10341: jnle 0x1038a
0x10343: xor eax,eax
0x10345: mov rcx,qword ptr [rsp+0x8]
0x1034a: xor rcx,0x28
0x10353: jnz 0x10418
0x10359: add rsp,0x10
0x1035d: pop rbx
0x1035e: pop rbp
0x1035f: pop r12
0x10361: ret
0x10362: nop qword ptr [rax+rax*1+0x0]
0x10368: mov r12d,dword ptr [rdi+0x4]
0x1036c: call 0x2950
0x10371: mov rbp,rax
0x10374: mov dword ptr [rbp+0x0],r12d
0x10378: mov eax,0xffffffff
0x1037d: jmp 0x10345
0x1037f: nop 
0x10380: call 0x2950
0x10385: cmp [rax],0x4
0x10388: jnz 0x103f9
0x1038a: xor edx,edx
0x1038c: mov rsi,r12
0x1038f: mov edi,ebp
0x10391: call 0x2f40
0x10396: test eax,eax
0x10398: js 0x10380
0x1039a: mov eax,dword ptr [rsp+0x4]
0x1039e: mov [rbx+0x4],0xffffffff
0x103a5: mov edi,eax
0x103a7: and edi,0x7f
0x103aa: jz 0x103b5
0x103ac: call 0x2920
0x103b1: mov eax,dword ptr [rsp+0x4]
0x103b5: movzx eax,ah
0x103b8: jmp 0x10345
0x103ba: nop qword ptr [rax+rax*1+0x0]
0x103c0: mov edi,dword ptr [rdi+0x4]
0x103c3: call 0x2e60
0x103c8: test eax,eax
0x103ca: jnz 0x103d7
0x103cc: mov [rbx],0x1
0x103d2: jmp 0x10345
0x103d7: call 0x2950
0x103dc: mov edi,dword ptr [rbx+0x4]
0x103df: mov r12d,dword ptr [rax]
0x103e2: mov rbp,rax
0x103e5: call 0x2c30
0x103ea: mov [rbx],0x4
0x103f0: mov dword ptr [rbx+0x4],r12d
0x103f4: jmp 0x10374
0x103f9: lea rcx,[rip+0x84a0]
0x10400: lea rsi,[rip+0x8429]
0x10407: lea rdi,[rip+0x83ed]
0x1040e: mov edx,0xd8
0x10413: call 0x2be0
0x10418: call 0x2b30
0x1041d: lea rcx,[rip+0x847c]
0x10424: lea rsi,[rip+0x8405]
0x1042b: lea rdi,[rip+0x83f5]
0x10432: mov edx,0xe2
0x10437: call 0x2be0
0x1043c: mov edi,esi
0x1043e: call 0x2980
0x10443: nop qword ptr [rax]
0x10446: nop qword ptr [rax+rax*1+0x0]
0x10450: push rbx
0x10451: cmp [rdi],0x4
0x10454: jnbe 0x104a6
0x10456: mov eax,dword ptr [rdi]
0x10458: lea rdx,[rip+0x841d]
0x1045f: mov rbx,rdi
0x10462: movsxd rax,dword ptr [rdx+rax*4+0x0]
0x10466: add rax,rdx
0x10469: jmp rax
0x1046b: nop qword ptr [rax+rax*1+0x0]
0x10470: mov edi,dword ptr [rdi+0x4]
0x10473: call 0x2c30
0x10478: mov [rbx],0x5
0x1047e: pop rbx
0x1047f: ret
0x10480: mov eax,dword ptr [rdi+0x4]
0x10483: test eax,eax
0x10485: js 0x10478
0x10487: lea rcx,[rip+0x8402]
0x1048e: lea rsi,[rip+0x839b]
0x10495: lea rdi,[rip+0x837b]
0x1049c: mov edx,0xf7
0x104a1: call 0x2be0
0x104a6: lea rcx,[rip+0x83e3]
0x104ad: lea rsi,[rip+0x837c]
0x104b4: lea rdi,[rip+0x836c]
0x104bb: mov edx,0xfb
0x104c0: call 0x2be0
0x104d0: push r15
0x104d2: push r14
0x104d4: mov eax,edi
0x104d6: push r13
0x104d8: push r12
0x104da: sub eax,0x1
0x104dd: push rbp
0x104de: push rbx
0x104df: mov r12,rcx
0x104e2: mov rbp,rdx
0x104e5: sub rsp,0x38
0x104e9: mov rcx,0x28
0x104f2: mov qword ptr [rsp+0x28],rcx
0x104f7: xor ecx,ecx
0x104f9: test eax,eax
0x104fb: mov dword ptr [rsp+0x18],edi
0x104ff: mov qword ptr [rsp+0x10],rsi
0x10504: mov [rsp+0x20],0x0
0x1050c: mov dword ptr [rsp+0x1c],eax
0x10510: js 0x10552
0x10512: mov r13d,eax
0x10515: cwde 
0x10517: lea rdx,[rax*8+0x0]
0x1051f: mov rax,qword ptr [rsi+rax*8+0x0]
0x10523: cmp [rax],0x2f
0x10526: jnz 0x105d8
0x1052c: lea rax,[rsi+rdx*1-0x8]
0x10531: jmp 0x10548
0x10533: nop qword ptr [rax+rax*1+0x0]
0x10538: mov rdx,qword ptr [rax]
0x1053b: sub rax,0x8
0x1053f: cmp [rdx],0x2f
0x10542: jnz 0x105d8
0x10548: sub r13d,0x1
0x1054c: cmp r13d,0xff
0x10550: jnz 0x10538
0x10552: lea rbx,[rsp+0x20]
0x10557: xor r15d,r15d
0x1055a: xor r13d,r13d
0x1055d: mov rdi,rbx
0x10560: call 0x10450
0x10565: cmp dword ptr [rsp+0x18],r13d
0x1056a: jle 0x105ab
0x1056c: mov ecx,dword ptr [rsp+0x1c]
0x10570: mov rdi,qword ptr [rsp+0x10]
0x10575: movsxd rax,r13d
0x10578: sub ecx,r13d
0x1057b: lea r14,[rdi+rax*8+0x0]
0x1057f: mov r13,rcx
0x10582: add r13,rax
0x10585: lea r13,[rdi+r13*8+0x8]
0x1058a: nop qword ptr [rax+rax*1+0x0]
0x10590: mov rdi,qword ptr [r14]
0x10593: mov rdx,r12
0x10596: mov rsi,rbx
0x10599: call rbp
0x1059b: cmp r15d,eax
0x1059e: cmovnge r15d,eax
0x105a2: add r14,0x8
0x105a6: cmp r14,r13
0x105a9: jnz 0x10590
0x105ab: mov rcx,qword ptr [rsp+0x28]
0x105b0: xor rcx,0x28
0x105b9: mov eax,r15d
0x105bc: jnz 0x10657
0x105c2: add rsp,0x38
0x105c6: pop rbx
0x105c7: pop rbp
0x105c8: pop r12
0x105ca: pop r13
0x105cc: pop r14
0x105ce: pop r15
0x105d0: ret
0x105d1: nop qword ptr [rax+0x0]
0x105d8: test r13d,r13d
0x105db: jle 0x10552
0x105e1: mov rcx,qword ptr [rsp+0x10]
0x105e6: lea eax,[r13-0x1]
0x105ea: xor r15d,r15d
0x105ed: lea rbx,[rsp+0x20]
0x105f2: lea rax,[rcx+rax*8+0x8]
0x105f7: mov r14,rcx
0x105fa: mov qword ptr [rsp+0x8],rax
0x105ff: xor eax,eax
0x10601: jmp 0x10648
0x10603: nop qword ptr [rax+rax*1+0x0]
0x10608: mov rdx,r12
0x1060b: mov rsi,rbx
0x1060e: mov rdi,qword ptr [r14]
0x10611: call rbp
0x10613: cmp r15d,eax
0x10616: cmovnge r15d,eax
0x1061a: mov rax,qword ptr [r14+0x8]
0x1061e: cmp [rax],0x2f
0x10621: jz 0x10635
0x10623: mov esi,r15d
0x10626: mov rdi,rbx
0x10629: call 0x102f0
0x1062e: cmp r15d,eax
0x10631: cmovnge r15d,eax
0x10635: add r14,0x8
0x10639: cmp r14,qword ptr [rsp+0x8]
0x1063e: jz 0x1055d
0x10644: mov eax,dword ptr [rsp+0x20]
0x10648: cmp eax,0x3
0x1064b: jnz 0x10608
0x1064d: mov eax,dword ptr [rsp+0x24]
0x10651: test eax,eax
0x10653: jnle 0x1061a
0x10655: jmp 0x10608
0x10657: call 0x2b30
0x10660: push rbx
0x10661: mov rsi,rdi
0x10664: mov edi,0x1
0x10669: sub rsp,0xa0
0x10670: mov rdx,rsp
0x10673: mov rax,0x28
0x1067c: mov qword ptr [rsp+0x98],rax
0x10684: xor eax,eax
0x10686: call 0x2b00
0x1068b: mov ebx,eax
0x1068d: call 0x2950
0x10692: test ebx,ebx
0x10694: jz 0x106b0
0x10696: mov edx,dword ptr [rax]
0x10698: cmp edx,0x4b
0x1069b: jz 0x106b0
0x1069d: xor eax,eax
0x1069f: cmp edx,0x2
0x106a2: setnz al
0x106a5: neg eax
0x106a7: jmp 0x106bb
0x106a9: nop qword ptr [rax+0x0]
0x106b0: mov [rax],0x11
0x106b6: mov eax,0xffffffff
0x106bb: mov rcx,qword ptr [rsp+0x98]
0x106c3: xor rcx,0x28
0x106cc: jnz 0x106d7
0x106ce: add rsp,0xa0
0x106d5: pop rbx
0x106d6: ret
0x106d7: call 0x2b30
0x106e0: mov esi,0x1c0
0x106e5: jmp 0x29c0
0x106f0: mov esi,dword ptr [rsi]
0x106f2: mov edx,0x180
0x106f7: xor eax,eax
0x106f9: and sil,0x3c
0x106fd: or sil,0xc2
0x10701: jmp 0x2f60
0x10710: push r15
0x10712: push r14
0x10714: mov r15,rdi
0x10717: push r13
0x10719: push r12
0x1071b: mov r14,r8
0x1071e: push rbp
0x1071f: push rbx
0x10720: mov ebp,esi
0x10722: sub rsp,0x38
0x10726: mov qword ptr [rsp+0x18],rdx
0x1072b: mov qword ptr [rsp],rdi
0x1072f: mov qword ptr [rsp+0x20],rcx
0x10734: call 0x2950
0x10739: mov qword ptr [rsp+0x8],rax
0x1073e: mov eax,dword ptr [rax]
0x10740: mov rdi,r15
0x10743: mov dword ptr [rsp+0x2c],eax
0x10747: call 0x2af0
0x1074c: movsxd rsi,ebp
0x1074f: lea rdx,[rsi+r14*1+0x0]
0x10753: cmp rdx,rax
0x10756: jnbe 0x1086b
0x1075c: sub rax,r14
0x1075f: mov rbx,rax
0x10762: sub rbx,rsi
0x10765: lea rsi,[rip+0x796f]
0x1076c: lea rax,[r15+rbx*1+0x0]
0x10770: mov rdi,rax
0x10773: mov qword ptr [rsp+0x10],rax
0x10778: call 0x2c50
0x1077d: cmp r14,rax
0x10780: jnbe 0x1086b
0x10786: xor edi,edi
0x10788: mov rsi,r14
0x1078b: call 0x132e0
0x10790: test rax,rax
0x10793: mov rbp,rax
0x10796: jz 0x1087d
0x1079c: mov rax,qword ptr [rsp]
0x107a0: lea r12,[rip+0x8199]
0x107a7: mov r13d,0x3a2f8
0x107ad: add rax,r14
0x107b0: add rbx,rax
0x107b3: nop qword ptr [rax+rax*1+0x0]
0x107b8: test r14,r14
0x107bb: mov r15,qword ptr [rsp+0x10]
0x107c0: jz 0x107e7
0x107c2: nop qword ptr [rax+rax*1+0x0]
0x107c8: mov esi,0x3d
0x107cd: mov rdi,rbp
0x107d0: add r15,0x1
0x107d4: call 0x13330
0x107d9: movzx eax,byte ptr [r12+rax*1+0x0]
0x107de: mov byte ptr [r15-0x1],al
0x107e2: cmp r15,rbx
0x107e5: jnz 0x107c8
0x107e7: mov rsi,qword ptr [rsp+0x18]
0x107ec: mov rdi,qword ptr [rsp]
0x107f0: mov rax,qword ptr [rsp+0x20]
0x107f5: call rax
0x107f7: test eax,eax
0x107f9: mov edx,eax
0x107fb: jns 0x10829
0x107fd: mov rax,qword ptr [rsp+0x8]
0x10802: mov ecx,dword ptr [rax]
0x10804: cmp ecx,0x11
0x10807: jnz 0x10864
0x10809: sub r13d,0x1
0x1080d: jnz 0x107b8
0x1080f: mov rdi,rbp
0x10812: call 0x13470
0x10817: mov rax,qword ptr [rsp+0x8]
0x1081c: mov edx,0xffffffff
0x10821: mov [rax],0x11
0x10827: jmp 0x10853
0x10829: mov rcx,qword ptr [rsp+0x8]
0x1082e: mov eax,dword ptr [rsp+0x2c]
0x10832: mov dword ptr [rcx],eax
0x10834: mov ecx,eax
0x10836: mov rdi,rbp
0x10839: mov dword ptr [rsp+0x10],edx
0x1083d: mov dword ptr [rsp],ecx
0x10840: call 0x13470
0x10845: mov rax,qword ptr [rsp+0x8]
0x1084a: mov ecx,dword ptr [rsp]
0x1084d: mov edx,dword ptr [rsp+0x10]
0x10851: mov dword ptr [rax],ecx
0x10853: add rsp,0x38
0x10857: mov eax,edx
0x10859: pop rbx
0x1085a: pop rbp
0x1085b: pop r12
0x1085d: pop r13
0x1085f: pop r14
0x10861: pop r15
0x10863: ret
0x10864: mov edx,0xffffffff
0x10869: jmp 0x10836
0x1086b: mov rax,qword ptr [rsp+0x8]
0x10870: mov edx,0xffffffff
0x10875: mov [rax],0x16
0x1087b: jmp 0x10853
0x1087d: mov edx,0xffffffff
0x10882: jmp 0x10853
0x10890: sub rsp,0x18
0x10894: cmp ecx,0x1
0x10897: mov dword ptr [rsp+0xc],edx
0x1089b: jz 0x10900
0x1089d: cmp ecx,0x2
0x108a0: jz 0x108c8
0x108a2: test ecx,ecx
0x108a4: jz 0x108e0
0x108a6: lea rcx,[rip+0x8073]
0x108ad: lea rsi,[rip+0x801c]
0x108b4: lea rdi,[rip+0x803d]
0x108bb: mov edx,0x147
0x108c0: call 0x2be0
0x108c5: nop qword ptr [rax]
0x108c8: lea rdx,[rsp+0xc]
0x108cd: lea rcx,[rip-0x274]
0x108d4: call 0x10710
0x108d9: add rsp,0x18
0x108dd: ret
0x108de: nop 
0x108e0: lea rdx,[rsp+0xc]
0x108e5: lea rcx,[rip-0x1fc]
0x108ec: call 0x10710
0x108f1: add rsp,0x18
0x108f5: ret
0x108f6: nop qword ptr [rax+rax*1+0x0]
0x10900: lea rdx,[rsp+0xc]
0x10905: lea rcx,[rip-0x22c]
0x1090c: call 0x10710
0x10911: add rsp,0x18
0x10915: ret
0x10920: mov r8d,0x6
0x10926: jmp 0x10890
0x10930: mov r8d,0x6
0x10936: jmp 0x10710
0x10940: push r13
0x10942: push r12
0x10944: push rbp
0x10945: push rbx
0x10946: mov ebx,edi
0x10948: sub rsp,0x8
0x1094c: cmp edi,0x2
0x1094f: jnbe 0x10972
0x10951: call 0x13f40
0x10956: mov r12d,eax
0x10959: call 0x2950
0x1095e: mov r13d,dword ptr [rax]
0x10961: mov rbp,rax
0x10964: mov edi,ebx
0x10966: call 0x2c30
0x1096b: mov ebx,r12d
0x1096e: mov dword ptr [rbp+0x0],r13d
0x10972: add rsp,0x8
0x10976: mov eax,ebx
0x10978: pop rbx
0x10979: pop rbp
0x1097a: pop r12
0x1097c: pop r13
0x1097e: ret
0x10980: mov rax,qword ptr [rdi]
0x10983: xor edx,edx
0x10985: div rsi
0x10988: mov rax,rdx
0x1098b: ret
0x10990: mov rax,qword ptr [rsi]
0x10993: cmp qword ptr [rdi],rax
0x10996: setz al
0x10999: ret
0x109a0: push r15
0x109a2: push r14
0x109a4: push r13
0x109a6: push r12
0x109a8: push rbp
0x109a9: push rbx
0x109aa: mov ebx,r8d
0x109ad: and ebx,0x1
0x109b0: sub rsp,0x128
0x109b7: mov r13,qword ptr [rcx+0x60]
0x109bb: mov r14,qword ptr [rdx+0x58]
0x109bf: mov rax,0x28
0x109c8: mov qword ptr [rsp+0x118],rax
0x109d0: xor eax,eax
0x109d2: test ebx,ebx
0x109d4: mov r12,qword ptr [rcx+0x58]
0x109d8: mov r15,qword ptr [rdx+0x60]
0x109dc: mov r9d,r13d
0x109df: jz 0x10ac8
0x109e5: cmp r14,r12
0x109e8: mov r10d,edi
0x109eb: setz qword ptr [rsp+0x38]
0x109f0: movzx edi,byte ptr [rsp+0x38]
0x109f5: cmp r15d,r13d
0x109f8: setz al
0x109fb: and al,dil
0x109fe: mov byte ptr [rsp+0x8],al
0x10a02: jnz 0x10b10
0x10a08: lea rax,[r12-0x1]
0x10a0d: cmp rax,r14
0x10a10: jnle 0x10b18
0x10a16: lea rax,[r14-0x1]
0x10a1a: cmp rax,r12
0x10a1d: jnle 0x10adf
0x10a23: mov rbp,rdx
0x10a26: mov rdx,qword ptr [rip+0x20ecf3]
0x10a2d: mov r11,rsi
0x10a30: test rdx,rdx
0x10a33: jz 0x10fd0
0x10a39: mov rsi,qword ptr [rip+0x20ecd8]
0x10a40: test rsi,rsi
0x10a43: jz 0x10b20
0x10a49: mov rax,qword ptr [rbp+0x0]
0x10a4d: mov rdi,rdx
0x10a50: mov qword ptr [rsp+0x28],r11
0x10a55: mov dword ptr [rsp+0x20],r10d
0x10a5a: mov dword ptr [rsp+0x18],r9d
0x10a5f: mov qword ptr [rsi],rax
0x10a62: call 0xca20
0x10a67: test rax,rax
0x10a6a: mov qword ptr [rsp+0x10],rax
0x10a6f: mov r9d,dword ptr [rsp+0x18]
0x10a74: mov r10d,dword ptr [rsp+0x20]
0x10a79: mov r11,qword ptr [rsp+0x28]
0x10a7e: jz 0x10b78
0x10a84: cmp qword ptr [rip+0x20ec8d],rax
0x10a8b: jz 0x11030
0x10a91: mov rax,qword ptr [rsp+0x10]
0x10a96: cmp [rax+0xc],0x0
0x10a9a: mov esi,dword ptr [rax+0x8]
0x10a9d: mov dword ptr [rsp+0x18],esi
0x10aa1: jz 0x10bfa
0x10aa7: xor eax,eax
0x10aa9: cmp esi,0x77359400
0x10aaf: setz al
0x10ab2: not eax
0x10ab4: cwde 
0x10ab6: and r12,rax
0x10ab9: mov eax,r9d
0x10abc: mov r9d,r13d
0x10abf: cdq
0x10ac0: idiv esi
0x10ac2: sub r9d,edx
0x10ac5: nop qword ptr [rax]
0x10ac8: cmp r12,r14
0x10acb: jnle 0x10b18
0x10acd: mov ebx,0x1
0x10ad2: jl 0x10adf
0x10ad4: cmp r9d,r15d
0x10ad7: jnle 0x10b18
0x10ad9: setl bl
0x10adc: movzx ebx,bl
0x10adf: mov rsi,qword ptr [rsp+0x118]
0x10ae7: xor rsi,0x28
0x10af0: mov eax,ebx
0x10af2: jnz 0x110c8
0x10af8: add rsp,0x128
0x10aff: pop rbx
0x10b00: pop rbp
0x10b01: pop r12
0x10b03: pop r13
0x10b05: pop r14
0x10b07: pop r15
0x10b09: ret
0x10b0a: nop qword ptr [rax+rax*1+0x0]
0x10b10: xor ebx,ebx
0x10b12: jmp 0x10adf
0x10b14: nop qword ptr [rax+0x0]
0x10b18: mov ebx,0xffffffff
0x10b1d: jmp 0x10adf
0x10b1f: nop 
0x10b20: mov edi,0x10
0x10b25: mov qword ptr [rsp+0x28],r11
0x10b2a: mov dword ptr [rsp+0x20],r10d
0x10b2f: mov dword ptr [rsp+0x18],r9d
0x10b34: mov qword ptr [rsp+0x10],rdx
0x10b39: call 0x2df0
0x10b3e: test rax,rax
0x10b41: mov rsi,rax
0x10b44: mov qword ptr [rip+0x20ebcd],rax
0x10b4b: mov rdx,qword ptr [rsp+0x10]
0x10b50: mov r9d,dword ptr [rsp+0x18]
0x10b55: mov r10d,dword ptr [rsp+0x20]
0x10b5a: mov r11,qword ptr [rsp+0x28]
0x10b5f: jz 0x10b88
0x10b61: mov [rax+0x8],0x77359400
0x10b68: mov [rax+0xc],0x0
0x10b6c: jmp 0x10a49
0x10b71: nop qword ptr [rax+0x0]
0x10b78: mov rdx,qword ptr [rip+0x20eba1]
0x10b7f: test rdx,rdx
0x10b82: jz 0x11022
0x10b88: lea rcx,[rsp+0x50]
0x10b8d: mov rax,qword ptr [rbp+0x0]
0x10b91: mov rdi,rdx
0x10b94: mov qword ptr [rsp+0x30],r11
0x10b99: mov dword ptr [rsp+0x28],r10d
0x10b9e: mov rsi,rcx
0x10ba1: mov dword ptr [rsp+0x20],r9d
0x10ba6: mov qword ptr [rsp+0x18],rcx
0x10bab: mov qword ptr [rsp+0x50],rax
0x10bb0: call 0xbfb0
0x10bb5: test rax,rax
0x10bb8: mov qword ptr [rsp+0x10],rax
0x10bbd: mov rcx,qword ptr [rsp+0x18]
0x10bc2: mov r9d,dword ptr [rsp+0x20]
0x10bc7: mov r10d,dword ptr [rsp+0x28]
0x10bcc: mov r11,qword ptr [rsp+0x30]
0x10bd1: jnz 0x10a91
0x10bd7: nop qword ptr [rax+rax*1+0x0]
0x10be0: mov [rsp+0x58],0x77359400
0x10be8: mov [rsp+0x5c],0x0
0x10bed: mov [rsp+0x18],0x77359400
0x10bf5: mov qword ptr [rsp+0x10],rcx
0x10bfa: mov rcx,qword ptr [rbp+0x50]
0x10bfe: mov eax,0x66666667
0x10c03: mov rsi,qword ptr [rbp+0x70]
0x10c07: imul edx,eax,ecx
0x10c09: mov eax,ecx
0x10c0b: mov qword ptr [rsp+0x28],rcx
0x10c10: sar eax,0x1f
0x10c13: sar edx,0x2
0x10c16: sub edx,eax
0x10c18: lea eax,[rdx+rdx*4+0x0]
0x10c1b: mov dword ptr [rsp+0x20],edx
0x10c1f: add eax,eax
0x10c21: sub ecx,eax
0x10c23: mov eax,0x66666667
0x10c28: imul edx,eax,esi
0x10c2a: mov eax,esi
0x10c2c: sar eax,0x1f
0x10c2f: sar edx,0x2
0x10c32: mov edi,edx
0x10c34: sub edi,eax
0x10c36: lea eax,[rdi+rdi*4+0x0]
0x10c39: add eax,eax
0x10c3b: sub esi,eax
0x10c3d: mov eax,0x66666667
0x10c42: imul edx,eax,r15d
0x10c45: mov eax,r15d
0x10c48: or ecx,esi
0x10c4a: sar eax,0x1f
0x10c4d: mov esi,r15d
0x10c50: sar edx,0x2
0x10c53: mov r8d,edx
0x10c56: sub r8d,eax
0x10c59: lea eax,[r8+r8*4+0x0]
0x10c5d: add eax,eax
0x10c5f: sub esi,eax
0x10c61: or ecx,esi
0x10c63: jnz 0x10fb8
0x10c69: cmp [rsp+0x18],0xa
0x10c6e: mov rax,qword ptr [rbp+0x48]
0x10c72: mov ecx,edi
0x10c74: mov edx,dword ptr [rsp+0x20]
0x10c78: mov esi,r8d
0x10c7b: mov qword ptr [rsp+0x48],rax
0x10c80: mov dword ptr [rsp+0x30],edx
0x10c84: jle 0x11098
0x10c8a: mov eax,0x66666667
0x10c8f: imul edx,eax,edi
0x10c91: mov eax,edi
0x10c93: sar eax,0x1f
0x10c96: sar edx,0x2
0x10c99: sub edx,eax
0x10c9b: lea eax,[rdx+rdx*4+0x0]
0x10c9e: add eax,eax
0x10ca0: sub edi,eax
0x10ca2: mov eax,0x66666667
0x10ca7: imul edx,eax,dword ptr [rsp+0x20]
0x10cab: mov eax,dword ptr [rsp+0x20]
0x10caf: sar eax,0x1f
0x10cb2: sar edx,0x2
0x10cb5: sub edx,eax
0x10cb7: lea eax,[rdx+rdx*4+0x0]
0x10cba: mov edx,dword ptr [rsp+0x20]
0x10cbe: mov [rsp+0x20],0xa
0x10cc6: add eax,eax
0x10cc8: sub edx,eax
0x10cca: mov eax,0x66666667
0x10ccf: or edi,edx
0x10cd1: imul edx,eax,r8d
0x10cd4: mov eax,r8d
0x10cd7: mov dword ptr [rsp+0x3c],edi
0x10cdb: sar eax,0x1f
0x10cde: mov edi,0x66666667
0x10ce3: sar edx,0x2
0x10ce6: sub edx,eax
0x10ce8: lea eax,[rdx+rdx*4+0x0]
0x10ceb: mov edx,0x8
0x10cf0: add eax,eax
0x10cf2: sub r8d,eax
0x10cf5: mov eax,dword ptr [rsp+0x3c]
0x10cf9: or eax,r8d
0x10cfc: jnz 0x110b4
0x10d02: mov dword ptr [rsp+0x3c],r9d
0x10d07: mov qword ptr [rsp+0x40],r14
0x10d0c: mov r9d,0xa
0x10d12: mov r8d,dword ptr [rsp+0x30]
0x10d17: mov qword ptr [rsp+0x20],r12
0x10d1c: mov r14d,edx
0x10d1f: mov qword ptr [rsp+0x30],rbp
0x10d24: mov eax,r8d
0x10d27: sar r8d,0x1f
0x10d2b: lea ebp,[r9+r9*4+0x0]
0x10d2f: imul edx,eax,edi
0x10d31: mov eax,ecx
0x10d33: sar ecx,0x1f
0x10d36: add ebp,ebp
0x10d38: mov r9d,ebp
0x10d3b: sar edx,0x2
0x10d3e: sub edx,r8d
0x10d41: mov r8d,edx
0x10d44: imul edx,eax,edi
0x10d46: mov eax,esi
0x10d48: sar esi,0x1f
0x10d4b: sar edx,0x2
0x10d4e: sub edx,ecx
0x10d50: mov ecx,edx
0x10d52: imul edx,eax,edi
0x10d54: sar edx,0x2
0x10d57: sub edx,esi
0x10d59: cmp ebp,dword ptr [rsp+0x18]
0x10d5d: mov esi,edx
0x10d5f: jnl 0x11040
0x10d65: mov eax,r8d
0x10d68: mov r12d,r8d
0x10d6b: imul edx,eax,edi
0x10d6d: mov eax,r8d
0x10d70: sar eax,0x1f
0x10d73: sar edx,0x2
0x10d76: sub edx,eax
0x10d78: lea eax,[rdx+rdx*4+0x0]
0x10d7b: add eax,eax
0x10d7d: sub r12d,eax
0x10d80: mov eax,ecx
0x10d82: imul edx,eax,edi
0x10d84: mov eax,ecx
0x10d86: sar eax,0x1f
0x10d89: sar edx,0x2
0x10d8c: sub edx,eax
0x10d8e: lea eax,[rdx+rdx*4+0x0]
0x10d91: mov edx,ecx
0x10d93: add eax,eax
0x10d95: sub edx,eax
0x10d97: mov eax,esi
0x10d99: or r12d,edx
0x10d9c: imul edx,eax,edi
0x10d9e: mov eax,esi
0x10da0: sar eax,0x1f
0x10da3: sar edx,0x2
0x10da6: sub edx,eax
0x10da8: lea eax,[rdx+rdx*4+0x0]
0x10dab: mov edx,esi
0x10dad: add eax,eax
0x10daf: sub edx,eax
0x10db1: or r12d,edx
0x10db4: jnz 0x11040
0x10dba: sub r14d,0x1
0x10dbe: jnz 0x10d24
0x10dc4: mov r14,qword ptr [rsp+0x40]
0x10dc9: mov rbp,qword ptr [rsp+0x30]
0x10dce: mov rax,qword ptr [rsp+0x48]
0x10dd3: mov r12,qword ptr [rsp+0x20]
0x10dd8: mov r9d,dword ptr [rsp+0x3c]
0x10ddd: or rax,r14
0x10de0: or rax,qword ptr [rbp+0x68]
0x10de4: test al,0x1
0x10de6: mov rax,qword ptr [rsp+0x10]
0x10deb: jz 0x11078
0x10df1: mov [rax+0x8],0x3b9aca00
0x10df8: mov [rsp+0x20],0x3b9aca00
0x10e00: mov rax,r12
0x10e03: cmp r14,r12
0x10e06: jnle 0x10adf
0x10e0c: cmp r15d,r13d
0x10e0f: jl 0x10e1c
0x10e11: cmp [rsp+0x38],0x0
0x10e16: jnz 0x10adf
0x10e1c: cmp r14,rax
0x10e1f: jl 0x10b18
0x10e25: jnz 0x10e3d
0x10e27: mov eax,r9d
0x10e2a: cdq
0x10e2b: idiv dword ptr [rsp+0x20]
0x10e2f: mov eax,r13d
0x10e32: sub eax,edx
0x10e34: cmp eax,r15d
0x10e37: jnle 0x10b18
0x10e3d: mov rax,qword ptr [rsp+0x48]
0x10e42: mov edx,0x38e38e39
0x10e47: lea rbp,[rsp+0x60]
0x10e4c: mov rsi,r11
0x10e4f: mov edi,r10d
0x10e52: mov ecx,0x100
0x10e57: mov dword ptr [rsp+0x18],r9d
0x10e5c: mov dword ptr [rsp+0x38],r10d
0x10e61: mov qword ptr [rsp+0x60],rax
0x10e66: movsxd rax,dword ptr [rsp+0x28]
0x10e6b: mov qword ptr [rsp+0x68],rax
0x10e70: movzx eax,byte ptr [rsp+0x8]
0x10e75: mov qword ptr [rsp+0x8],r11
0x10e7a: or rax,r14
0x10e7d: mov qword ptr [rsp+0x70],rax
0x10e82: mov eax,dword ptr [rsp+0x20]
0x10e86: mul edx
0x10e88: mov eax,edx
0x10e8a: mov rdx,rbp
0x10e8d: shr eax,0x1
0x10e8f: add eax,r15d
0x10e92: cwde 
0x10e94: mov qword ptr [rsp+0x78],rax
0x10e99: call 0x2930
0x10e9e: test eax,eax
0x10ea0: mov r10d,dword ptr [rsp+0x38]
0x10ea5: mov r11,qword ptr [rsp+0x8]
0x10eaa: mov r9d,dword ptr [rsp+0x18]
0x10eaf: jz 0x10ebb
0x10eb1: mov ebx,0xfffffffe
0x10eb6: jmp 0x10adf
0x10ebb: lea rcx,[rsp+0x80]
0x10ec3: mov rdx,r11
0x10ec6: mov r8d,0x100
0x10ecc: mov esi,r10d
0x10ecf: mov edi,0x1
0x10ed4: mov dword ptr [rsp+0x18],r9d
0x10ed9: mov qword ptr [rsp+0x8],r11
0x10ede: mov dword ptr [rsp+0x38],r10d
0x10ee3: call 0x2b80
0x10ee8: mov rcx,qword ptr [rsp+0xe0]
0x10ef0: mov r8d,eax
0x10ef3: mov rax,qword ptr [rsp+0xd8]
0x10efb: movsxd rdx,r15d
0x10efe: mov r10d,dword ptr [rsp+0x38]
0x10f03: mov r11,qword ptr [rsp+0x8]
0x10f08: mov r9d,dword ptr [rsp+0x18]
0x10f0d: xor rcx,rdx
0x10f10: xor rax,r14
0x10f13: or rax,rcx
0x10f16: movsxd rcx,r8d
0x10f19: or rax,rcx
0x10f1c: jnz 0x110cd
0x10f22: mov ecx,dword ptr [rsp+0xd8]
0x10f29: mov esi,0xa
0x10f2e: and ecx,0x1
0x10f31: imul ecx,ecx,0x3b9aca00
0x10f37: add ecx,dword ptr [rsp+0xe0]
0x10f3e: mov eax,ecx
0x10f40: cdq
0x10f41: idiv esi
0x10f43: test edx,edx
0x10f45: jnz 0x11115
0x10f4b: cmp [rsp+0x20],0xa
0x10f50: jz 0x10f8d
0x10f52: mov r8d,0x9
0x10f58: mov esi,0xa
0x10f5d: mov edi,0xa
0x10f62: jmp 0x10f6d
0x10f64: imul esi,esi,0xa
0x10f67: cmp esi,dword ptr [rsp+0x20]
0x10f6b: jz 0x10f8d
0x10f6d: mov eax,ecx
0x10f6f: cdq
0x10f70: idiv edi
0x10f72: cdq
0x10f73: mov ecx,eax
0x10f75: idiv edi
0x10f77: test edx,edx
0x10f79: jnz 0x1110c
0x10f7f: sub r8d,0x1
0x10f83: jnz 0x10f64
0x10f85: mov [rsp+0x20],0x77359400
0x10f8d: mov esi,dword ptr [rsp+0x20]
0x10f91: xor eax,eax
0x10f93: cmp esi,0x77359400
0x10f99: mov ebx,esi
0x10f9b: setz al
0x10f9e: not eax
0x10fa0: cwde 
0x10fa2: and r12,rax
0x10fa5: mov eax,r9d
0x10fa8: mov r9d,r13d
0x10fab: cdq
0x10fac: idiv esi
0x10fae: sub r9d,edx
0x10fb1: nop qword ptr [rax+0x0]
0x10fb8: mov rax,qword ptr [rsp+0x10]
0x10fbd: mov dword ptr [rax+0x8],ebx
0x10fc0: mov [rax+0xc],0x1
0x10fc4: jmp 0x10ac8
0x10fc9: nop qword ptr [rax+0x0]
0x10fd0: mov r8,qword ptr [rip+0x20bff9]
0x10fd7: lea rdx,[rip-0x65e]
0x10fde: lea rcx,[rip-0x655]
0x10fe5: mov qword ptr [rsp+0x20],rsi
0x10fea: mov edi,0x10
0x10fef: xor esi,esi
0x10ff1: mov dword ptr [rsp+0x18],r10d
0x10ff6: mov dword ptr [rsp+0x10],r13d
0x10ffb: call 0xc220
0x11000: test rax,rax
0x11003: mov rdx,rax
0x11006: mov qword ptr [rip+0x20e713],rax
0x1100d: mov r9d,dword ptr [rsp+0x10]
0x11012: mov r10d,dword ptr [rsp+0x18]
0x11017: mov r11,qword ptr [rsp+0x20]
0x1101c: jnz 0x10a39
0x11022: lea rcx,[rsp+0x50]
0x11027: jmp 0x10be0
0x1102c: nop qword ptr [rax+0x0]
0x11030: mov [rip+0x20e6dd],0x0
0x1103b: jmp 0x10a91
0x11040: cmp ebp,0x77359400
0x11046: mov r12,qword ptr [rsp+0x20]
0x1104b: mov rsi,qword ptr [rsp+0x10]
0x11050: setz qword ptr [rsp+0x8]
0x11055: movzx eax,byte ptr [rsp+0x8]
0x1105a: mov dword ptr [rsp+0x20],r9d
0x1105f: mov r14,qword ptr [rsp+0x40]
0x11064: mov r9d,dword ptr [rsp+0x3c]
0x11069: mov dword ptr [rsi+0x8],ebp
0x1106c: not eax
0x1106e: cwde 
0x11070: and rax,r12
0x11073: jmp 0x10e03
0x11078: mov [rax+0x8],0x77359400
0x1107f: mov rax,r12
0x11082: mov [rsp+0x8],0x1
0x11087: and rax,0xfffffffe
0x1108b: mov [rsp+0x20],0x77359400
0x11093: jmp 0x10e03
0x11098: mov rax,qword ptr [rsp+0x10]
0x1109d: mov [rsp+0x20],0xa
0x110a5: mov [rax+0x8],0xa
0x110ac: mov rax,r12
0x110af: jmp 0x10e03
0x110b4: mov rax,qword ptr [rsp+0x10]
0x110b9: mov [rax+0x8],0xa
0x110c0: mov rax,r12
0x110c3: jmp 0x10e03
0x110c8: call 0x2b30
0x110cd: mov qword ptr [rsp+0x78],rdx
0x110d2: mov ecx,0x100
0x110d7: mov rdx,rbp
0x110da: mov rsi,r11
0x110dd: mov edi,r10d
0x110e0: mov dword ptr [rsp+0x8],r8d
0x110e5: mov dword ptr [rsp+0x38],r9d
0x110ea: mov qword ptr [rsp+0x70],r14
0x110ef: call 0x2930
0x110f4: mov r8d,dword ptr [rsp+0x8]
0x110f9: mov r9d,dword ptr [rsp+0x38]
0x110fe: test r8d,r8d
0x11101: jnz 0x10eb1
0x11107: jmp 0x10f22
0x1110c: mov dword ptr [rsp+0x20],esi
0x11110: jmp 0x10f8d
0x11115: mov dword ptr [rsp+0x20],ebx
0x11119: jmp 0x10f8d
0x11120: mov r8d,ecx
0x11123: mov rcx,rdx
0x11126: mov rdx,rsi
0x11129: mov rsi,rdi
0x1112c: mov edi,0xffffff9c
0x11131: jmp 0x109a0
0x11140: push rbp
0x11141: push rbx
0x11142: mov rbp,rdi
0x11145: sub rsp,0x18
0x11149: mov rbx,qword ptr [rsi]
0x1114c: mov rax,qword ptr [rbx+0x8]
0x11150: mov rdx,qword ptr [rbx+0x18]
0x11154: cmp rax,0x3ffffffe
0x1115a: jz 0x111c0
0x1115c: cmp rax,0x3fffffff
0x11162: jz 0x11180
0x11164: cmp rdx,0x3ffffffe
0x1116b: jz 0x1119e
0x1116d: xor eax,eax
0x1116f: cmp rdx,0x3fffffff
0x11176: jz 0x111e8
0x11178: add rsp,0x18
0x1117c: pop rbx
0x1117d: pop rbp
0x1117e: ret
0x1117f: nop 
0x11180: cmp rdx,0x3fffffff
0x11187: jz 0x11208
0x11189: mov rdi,rbx
0x1118c: call 0x12ee0
0x11191: mov rdx,qword ptr [rbx+0x18]
0x11195: cmp rdx,0x3ffffffe
0x1119c: jnz 0x1116d
0x1119e: mov rax,qword ptr [rbp+0x60]
0x111a2: mov rdx,qword ptr [rbp+0x58]
0x111a6: mov qword ptr [rbx+0x18],rax
0x111aa: mov qword ptr [rbx+0x10],rdx
0x111ae: add rsp,0x18
0x111b2: xor eax,eax
0x111b4: pop rbx
0x111b5: pop rbp
0x111b6: ret
0x111b7: nop qword ptr [rax+rax*1+0x0]
0x111c0: cmp rdx,0x3ffffffe
0x111c7: mov eax,0x1
0x111cc: jz 0x11178
0x111ce: mov rax,qword ptr [rdi+0x50]
0x111d2: mov rcx,qword ptr [rdi+0x48]
0x111d6: mov qword ptr [rbx+0x8],rax
0x111da: xor eax,eax
0x111dc: cmp rdx,0x3fffffff
0x111e3: mov qword ptr [rbx],rcx
0x111e6: jnz 0x11178
0x111e8: lea rdi,[rbx+0x10]
0x111ec: mov byte ptr [rsp+0xf],al
0x111f0: call 0x12ee0
0x111f5: movzx eax,byte ptr [rsp+0xf]
0x111fa: add rsp,0x18
0x111fe: pop rbx
0x111ff: pop rbp
0x11200: ret
0x11201: nop qword ptr [rax+0x0]
0x11208: mov [rsi],0x0
0x1120f: xor eax,eax
0x11211: jmp 0x11178
0x11220: mov r9,qword ptr [rdi+0x8]
0x11224: lea rcx,[r9-0x3ffffffe]
0x1122b: cmp rcx,0x1
0x1122f: jbe 0x1123a
0x11231: cmp r9,0x3b9ac9ff
0x11238: jnbe 0x112b0
0x1123a: mov rdx,qword ptr [rdi+0x18]
0x1123e: lea r8,[rdx-0x3ffffffe]
0x11245: cmp r8,0x1
0x11249: jbe 0x11254
0x1124b: cmp rdx,0x3b9ac9ff
0x11252: jnbe 0x112b0
0x11254: xor esi,esi
0x11256: xor r10d,r10d
0x11259: cmp rcx,0x1
0x1125d: jnbe 0x11279
0x1125f: xor esi,esi
0x11261: cmp r9,0x3ffffffe
0x11268: mov [rdi],0x0
0x1126f: setz sil
0x11273: mov r10d,0x1
0x11279: cmp r8,0x1
0x1127d: jnbe 0x1129b
0x1127f: xor eax,eax
0x11281: cmp rdx,0x3ffffffe
0x11288: mov [rdi+0x10],0x0
0x11290: setz al
0x11293: mov r10d,0x1
0x11299: add esi,eax
0x1129b: xor eax,eax
0x1129d: cmp esi,0x1
0x112a0: setz al
0x112a3: add eax,r10d
0x112a6: ret
0x112a7: nop qword ptr [rax+rax*1+0x0]
0x112b0: sub rsp,0x8
0x112b4: call 0x2950
0x112b9: mov [rax],0x16
0x112bf: mov eax,0xffffffff
0x112c4: add rsp,0x8
0x112c8: ret
0x112d0: mov ecx,0x100
0x112d5: jmp 0x2930
0x112e0: push r14
0x112e2: push r13
0x112e4: push r12
0x112e6: push rbp
0x112e7: mov r12,rsi
0x112ea: push rbx
0x112eb: mov ebx,edi
0x112ed: sub rsp,0x110
0x112f4: mov rax,0x28
0x112fd: mov qword ptr [rsp+0x108],rax
0x11305: xor eax,eax
0x11307: test rdx,rdx
0x1130a: jz 0x115d0
0x11310: movdqu xmm0,[rdx]
0x11314: lea rdi,[rsp+0x10]
0x11319: movaps [rsp+0x10],xmm0
0x1131e: mov qword ptr [rsp+0x8],rdi
0x11323: movdqu xmm0,[rdx+0x10]
0x11328: movaps [rsp+0x20],xmm0
0x1132d: call 0x11220
0x11332: test eax,eax
0x11334: mov r13d,eax
0x11337: js 0x116f3
0x1133d: test ebx,ebx
0x1133f: jns 0x1134a
0x11341: test r12,r12
0x11344: jz 0x116e8
0x1134a: mov eax,dword ptr [rip+0x20e3dc]
0x11350: test eax,eax
0x11352: js 0x11388
0x11354: cmp r13d,0x2
0x11358: jz 0x11560
0x1135e: mov rsi,qword ptr [rsp+0x8]
0x11363: test ebx,ebx
0x11365: js 0x11690
0x1136b: mov edi,ebx
0x1136d: call 0x2fc0
0x11372: cmp eax,0x0
0x11375: mov ebp,eax
0x11377: jle 0x116ad
0x1137d: call 0x2950
0x11382: mov [rax],0x26
0x11388: test r13d,r13d
0x1138b: mov [rip+0x20e397],0xffffffff
0x11395: mov [rip+0x20e389],0xffffffff
0x1139f: jnz 0x11500
0x113a5: mov rsi,qword ptr [rsp+0x8]
0x113aa: test rsi,rsi
0x113ad: jz 0x11640
0x113b3: mov rax,qword ptr [rsi]
0x113b6: mov rdi,qword ptr [rsi+0x8]
0x113ba: mov rcx,0x2361183241434822607
0x113c4: lea r13,[rsp+0x30]
0x113c9: mov qword ptr [rsp+0x30],rax
0x113ce: mov rax,rdi
0x113d1: sar rdi,0x3f
0x113d5: imul rdx,rax,rcx
0x113d8: mov rax,qword ptr [rsi+0x10]
0x113dc: mov rsi,qword ptr [rsi+0x18]
0x113e0: mov qword ptr [rsp+0x40],rax
0x113e5: mov rax,rsi
0x113e8: sar rsi,0x3f
0x113ec: sar rdx,0x7
0x113f0: sub rdx,rdi
0x113f3: mov qword ptr [rsp+0x38],rdx
0x113f8: imul rdx,rax,rcx
0x113fb: mov rcx,rdx
0x113fe: sar rcx,0x7
0x11402: sub rcx,rsi
0x11405: mov qword ptr [rsp+0x48],rcx
0x1140a: test ebx,ebx
0x1140c: mov rdx,r13
0x1140f: js 0x115e8
0x11415: xor esi,esi
0x11417: mov edi,ebx
0x11419: call 0x30b0
0x1141e: test eax,eax
0x11420: mov ebp,eax
0x11422: jnz 0x11620
0x11428: test r13,r13
0x1142b: jz 0x115f7
0x11431: cmp [r13+0x8],0x7a11f
0x11439: setnle r12b
0x1143d: cmp [r13+0x18],0x7a11f
0x11445: setnle r14b
0x11449: test r12b,r12b
0x1144c: jnz 0x11457
0x1144e: test r14b,r14b
0x11451: jz 0x115f7
0x11457: lea rdx,[rsp+0x70]
0x1145c: mov esi,ebx
0x1145e: mov edi,0x1
0x11463: call 0x2e20
0x11468: test eax,eax
0x1146a: jnz 0x115f7
0x11470: mov rdx,qword ptr [rsp+0xc8]
0x11478: sub rdx,qword ptr [r13+0x10]
0x1147c: mov rax,qword ptr [rsp+0xb8]
0x11484: sub rax,qword ptr [r13+0x0]
0x11488: movdqa xmm0,[r13+0x0]
0x1148e: cmp rdx,0x1
0x11492: setz dl
0x11495: movaps [rsp+0x50],xmm0
0x1149a: and r14d,edx
0x1149d: cmp rax,0x1
0x114a1: movdqa xmm0,[r13+0x10]
0x114a7: movaps [rsp+0x60],xmm0
0x114ac: jnz 0x11700
0x114b2: test r12b,r12b
0x114b5: jz 0x11700
0x114bb: cmp [rsp+0xc0],0x0
0x114c4: jnz 0x11700
0x114ca: test r14b,r14b
0x114cd: mov [rsp+0x58],0x0
0x114d6: jz 0x114e7
0x114d8: cmp [rsp+0xd0],0x0
0x114e1: jz 0x11718
0x114e7: lea rdx,[rsp+0x50]
0x114ec: xor esi,esi
0x114ee: mov edi,ebx
0x114f0: call 0x30b0
0x114f5: xor ebp,ebp
0x114f7: jmp 0x115f7
0x114fc: nop qword ptr [rax+0x0]
0x11500: cmp r13d,0x3
0x11504: jz 0x1152c
0x11506: test ebx,ebx
0x11508: lea rdx,[rsp+0x70]
0x1150d: js 0x11650
0x11513: mov esi,ebx
0x11515: mov edi,0x1
0x1151a: call 0x2e20
0x1151f: test eax,eax
0x11521: setnz al
0x11524: test al,al
0x11526: jnz 0x116f3
0x1152c: cmp [rsp+0x8],0x0
0x11532: jz 0x11640
0x11538: lea rsi,[rsp+0x8]
0x1153d: lea rdi,[rsp+0x70]
0x11542: xor ebp,ebp
0x11544: call 0x11140
0x11549: test al,al
0x1154b: jz 0x113a5
0x11551: jmp 0x115f7
0x11556: nop qword ptr [rax+rax*1+0x0]
0x11560: test ebx,ebx
0x11562: lea rdx,[rsp+0x70]
0x11567: js 0x11670
0x1156d: mov esi,ebx
0x1156f: mov edi,0x1
0x11574: call 0x2e20
0x11579: test eax,eax
0x1157b: setnz al
0x1157e: test al,al
0x11580: jnz 0x116f3
0x11586: mov rsi,qword ptr [rsp+0x8]
0x1158b: cmp [rsi+0x8],0x3ffffffe
0x11593: jz 0x116c0
0x11599: cmp [rsi+0x18],0x3ffffffe
0x115a1: mov r13d,0x3
0x115a7: jnz 0x11363
0x115ad: mov rax,qword ptr [rsp+0xd0]
0x115b5: mov rdx,qword ptr [rsp+0xc8]
0x115bd: mov qword ptr [rsi+0x18],rax
0x115c1: mov qword ptr [rsi+0x10],rdx
0x115c5: jmp 0x11363
0x115ca: nop qword ptr [rax+rax*1+0x0]
0x115d0: mov [rsp+0x8],0x0
0x115d9: xor r13d,r13d
0x115dc: jmp 0x1133d
0x115e1: nop qword ptr [rax+0x0]
0x115e8: mov rsi,r12
0x115eb: mov edi,0xffffff9c
0x115f0: call 0x30b0
0x115f5: mov ebp,eax
0x115f7: mov rcx,qword ptr [rsp+0x108]
0x115ff: xor rcx,0x28
0x11608: mov eax,ebp
0x1160a: jnz 0x11726
0x11610: add rsp,0x110
0x11617: pop rbx
0x11618: pop rbp
0x11619: pop r12
0x1161b: pop r13
0x1161d: pop r14
0x1161f: ret
0x11620: test r12,r12
0x11623: mov ebp,0xffffffff
0x11628: jz 0x115f7
0x1162a: mov rsi,r13
0x1162d: mov rdi,r12
0x11630: call 0x2cc0
0x11635: mov ebp,eax
0x11637: jmp 0x115f7
0x11639: nop qword ptr [rax+0x0]
0x11640: xor r13d,r13d
0x11643: jmp 0x1140a
0x11648: nop qword ptr [rax+rax*1+0x0]
0x11650: mov rsi,r12
0x11653: mov edi,0x1
0x11658: call 0x2dd0
0x1165d: test eax,eax
0x1165f: setnz al
0x11662: jmp 0x11524
0x11667: nop qword ptr [rax+rax*1+0x0]
0x11670: mov rsi,r12
0x11673: mov edi,0x1
0x11678: call 0x2dd0
0x1167d: test eax,eax
0x1167f: setnz al
0x11682: jmp 0x1157e
0x11687: nop qword ptr [rax+rax*1+0x0]
0x11690: xor ecx,ecx
0x11692: mov rdx,rsi
0x11695: mov edi,0xffffff9c
0x1169a: mov rsi,r12
0x1169d: call 0x2930
0x116a2: cmp eax,0x0
0x116a5: mov ebp,eax
0x116a7: jnle 0x1137d
0x116ad: jnz 0x1172b
0x116af: mov [rip+0x20e073],0x1
0x116b9: jmp 0x115f7
0x116be: nop 
0x116c0: mov rax,qword ptr [rsp+0xc0]
0x116c8: mov rdx,qword ptr [rsp+0xb8]
0x116d0: mov r13d,0x3
0x116d6: mov qword ptr [rsi],rdx
0x116d9: mov qword ptr [rsi+0x8],rax
0x116dd: jmp 0x11363
0x116e2: nop qword ptr [rax+rax*1+0x0]
0x116e8: call 0x2950
0x116ed: mov [rax],0x9
0x116f3: mov ebp,0xffffffff
0x116f8: jmp 0x115f7
0x116fd: nop qword ptr [rax]
0x11700: test r14b,r14b
0x11703: jz 0x114f5
0x11709: cmp [rsp+0xd0],0x0
0x11712: jnz 0x114f5
0x11718: mov [rsp+0x68],0x0
0x11721: jmp 0x114e7
0x11726: call 0x2b30
0x1172b: call 0x2950
0x11730: cmp [rax],0x26
0x11733: jnz 0x116af
0x11739: jmp 0x11388
0x11740: mov rdx,rsi
0x11743: mov rsi,rdi
0x11746: mov edi,0xffffffff
0x1174b: jmp 0x112e0
0x11750: push r12
0x11752: push rbp
0x11753: mov r12,rdi
0x11756: push rbx
0x11757: sub rsp,0xd0
0x1175e: mov rax,0x28
0x11767: mov qword ptr [rsp+0xc8],rax
0x1176f: xor eax,eax
0x11771: test rsi,rsi
0x11774: jz 0x11870
0x1177a: movdqu xmm0,[rsi]
0x1177e: lea rdi,[rsp+0x10]
0x11783: movaps [rsp+0x10],xmm0
0x11788: mov qword ptr [rsp+0x8],rdi
0x1178d: movdqu xmm0,[rsi+0x10]
0x11792: movaps [rsp+0x20],xmm0
0x11797: call 0x11220
0x1179c: test eax,eax
0x1179e: mov ebx,eax
0x117a0: js 0x118b0
0x117a6: mov eax,dword ptr [rip+0x20df7c]
0x117ac: test eax,eax
0x117ae: js 0x117e6
0x117b0: cmp ebx,0x2
0x117b3: jz 0x118e0
0x117b9: mov rdx,qword ptr [rsp+0x8]
0x117be: mov ecx,0x100
0x117c3: mov rsi,r12
0x117c6: mov edi,0xffffff9c
0x117cb: call 0x2930
0x117d0: cmp eax,0x0
0x117d3: mov ebp,eax
0x117d5: jle 0x118c0
0x117db: call 0x2950
0x117e0: mov [rax],0x26
0x117e6: test ebx,ebx
0x117e8: mov [rip+0x20df36],0xffffffff
0x117f2: jz 0x11895
0x117f8: cmp ebx,0x3
0x117fb: jnz 0x11938
0x11801: cmp [rsp+0x8],0x0
0x11807: jz 0x11820
0x11809: lea rsi,[rsp+0x8]
0x1180e: lea rdi,[rsp+0x30]
0x11813: xor ebp,ebp
0x11815: call 0x11140
0x1181a: test al,al
0x1181c: jnz 0x11848
0x1181e: nop 
0x11820: mov eax,dword ptr [rsp+0x48]
0x11824: and eax,0xf000
0x11829: cmp eax,0xa000
0x1182e: jz 0x11986
0x11834: mov rdx,qword ptr [rsp+0x8]
0x11839: mov rsi,r12
0x1183c: mov edi,0xffffffff
0x11841: call 0x112e0
0x11846: mov ebp,eax
0x11848: mov rcx,qword ptr [rsp+0xc8]
0x11850: xor rcx,0x28
0x11859: mov eax,ebp
0x1185b: jnz 0x11996
0x11861: add rsp,0xd0
0x11868: pop rbx
0x11869: pop rbp
0x1186a: pop r12
0x1186c: ret
0x1186d: nop qword ptr [rax]
0x11870: mov ecx,dword ptr [rip+0x20deb2]
0x11876: xor edx,edx
0x11878: xor ebx,ebx
0x1187a: mov [rsp+0x8],0x0
0x11883: test ecx,ecx
0x11885: jns 0x117be
0x1188b: mov [rip+0x20de93],0xffffffff
0x11895: lea rdx,[rsp+0x30]
0x1189a: mov rsi,r12
0x1189d: mov edi,0x1
0x118a2: call 0x2b00
0x118a7: test eax,eax
0x118a9: jz 0x11820
0x118af: nop 
0x118b0: mov ebp,0xffffffff
0x118b5: jmp 0x11848
0x118b7: nop qword ptr [rax+rax*1+0x0]
0x118c0: jnz 0x1199b
0x118c6: mov [rip+0x20de5c],0x1
0x118d0: mov [rip+0x20de4e],0x1
0x118da: jmp 0x11848
0x118df: nop 
0x118e0: lea rdx,[rsp+0x30]
0x118e5: mov rsi,r12
0x118e8: mov edi,0x1
0x118ed: call 0x2b00
0x118f2: test eax,eax
0x118f4: jnz 0x118b0
0x118f6: mov rdx,qword ptr [rsp+0x8]
0x118fb: cmp [rdx+0x8],0x3ffffffe
0x11903: jz 0x11968
0x11905: cmp [rdx+0x18],0x3ffffffe
0x1190d: mov ebx,0x3
0x11912: jnz 0x117be
0x11918: mov rax,qword ptr [rsp+0x90]
0x11920: mov rcx,qword ptr [rsp+0x88]
0x11928: mov qword ptr [rdx+0x18],rax
0x1192c: mov qword ptr [rdx+0x10],rcx
0x11930: jmp 0x117be
0x11935: nop qword ptr [rax]
0x11938: lea rdx,[rsp+0x30]
0x1193d: mov rsi,r12
0x11940: mov edi,0x1
0x11945: call 0x2b00
0x1194a: test eax,eax
0x1194c: jnz 0x118b0
0x11952: cmp [rsp+0x8],0x0
0x11958: jnz 0x11809
0x1195e: jmp 0x11820
0x11963: nop qword ptr [rax+rax*1+0x0]
0x11968: mov rax,qword ptr [rsp+0x80]
0x11970: mov rcx,qword ptr [rsp+0x78]
0x11975: mov ebx,0x3
0x1197a: mov qword ptr [rdx],rcx
0x1197d: mov qword ptr [rdx+0x8],rax
0x11981: jmp 0x117be
0x11986: call 0x2950
0x1198b: mov [rax],0x26
0x11991: jmp 0x118b0
0x11996: call 0x2b30
0x1199b: call 0x2950
0x119a0: cmp [rax],0x26
0x119a3: jnz 0x118c6
0x119a9: jmp 0x117e6
0x11a56: nop qword ptr [rax+rax*1+0x0]
0x11ae5: nop qword ptr [rax]
0x11ae8: mov r8,rcx
0x11aeb: mov rcx,rdx
0x11aee: lea rdx,[rip+0x6e96]
0x11af5: mov esi,0x1
0x11afa: xor eax,eax
0x11afc: call 0x3050
0x11b01: jmp 0x119ec
0x11b06: nop qword ptr [rax+rax*1+0x0]
0x11b65: nop qword ptr [rax]
0x11ba1: nop qword ptr [rax+0x0]
0x11be8: nop qword ptr [rax+rax*1+0x0]
0x11c37: nop qword ptr [rax+rax*1+0x0]
0x11c94: nop qword ptr [rax+0x0]
0x11cc2: nop qword ptr [rax+rax*1+0x0]
0x11d76: nop qword ptr [rax+rax*1+0x0]
0x11dd0: xor r9d,r9d
0x11dd3: cmp [r8],0x0
0x11dd7: jz 0x11deb
0x11dd9: nop qword ptr [rax+0x0]
0x11de0: add r9,0x1
0x11de4: cmp [r8+r9*8+0x0],0x0
0x11de9: jnz 0x11de0
0x11deb: jmp 0x119b0
0x11df0: sub rsp,0x68
0x11df4: mov r10,r8
0x11df7: xor r9d,r9d
0x11dfa: mov rax,0x28
0x11e03: mov qword ptr [rsp+0x58],rax
0x11e08: xor eax,eax
0x11e0a: mov r8,rsp
0x11e0d: nop qword ptr [rax]
0x11e10: mov eax,dword ptr [r10]
0x11e13: cmp eax,0x2f
0x11e16: jnbe 0x11e5a
0x11e18: mov r11d,eax
0x11e1b: add r11,qword ptr [r10+0x10]
0x11e1f: add eax,0x8
0x11e22: mov dword ptr [r10],eax
0x11e25: mov rax,qword ptr [r11]
0x11e28: test rax,rax
0x11e2b: mov qword ptr [r8+r9*8+0x0],rax
0x11e2f: jz 0x11e3b
0x11e31: add r9,0x1
0x11e35: cmp r9,0xa
0x11e39: jnz 0x11e10
0x11e3b: call 0x119b0
0x11e40: mov rax,qword ptr [rsp+0x58]
0x11e45: xor rax,0x28
0x11e4e: jnz 0x11e55
0x11e50: add rsp,0x68
0x11e54: ret
0x11e55: call 0x2b30
0x11e5a: mov r11,qword ptr [r10+0x8]
0x11e5e: lea rax,[r11+0x8]
0x11e62: mov qword ptr [r10+0x8],rax
0x11e66: jmp 0x11e25
0x11f30: call 0x2b30
0x11f3c: mov rax,rbx
0x11f3f: add rbx,0x8
0x11f43: jmp 0x11ef6
0x11f50: push rbx
0x11f51: lea rsi,[rip+0x6a81]
0x11f58: mov edx,0x5
0x11f5d: xor edi,edi
0x11f5f: call 0x2ad0
0x11f64: lea rdx,[rip+0x6a83]
0x11f6b: mov rsi,rax
0x11f6e: mov edi,0x1
0x11f73: xor eax,eax
0x11f75: call 0x2ee0
0x11f7a: lea rsi,[rip+0x6a83]
0x11f81: mov edx,0x5
0x11f86: xor edi,edi
0x11f88: call 0x2ad0
0x11f8d: lea rcx,[rip+0x5324]
0x11f94: lea rdx,[rip+0x456b]
0x11f9b: mov rsi,rax
0x11f9e: mov edi,0x1
0x11fa3: xor eax,eax
0x11fa5: call 0x2ee0
0x11faa: mov rbx,qword ptr [rip+0x20b137]
0x11fb1: lea rsi,[rip+0x6c78]
0x11fb8: xor edi,edi
0x11fba: mov edx,0x5
0x11fbf: call 0x2ad0
0x11fc4: mov rsi,rbx
0x11fc7: mov rdi,rax
0x11fca: pop rbx
0x11fcb: jmp 0x2cb0
0x11fd0: cmp [rip+0x20d75a],0x0
0x11fd7: jz 0x11fe8
0x11fd9: movzx eax,byte ptr [rip+0x20d750]
0x11fe0: ret
0x11fe1: nop qword ptr [rax+0x0]
0x11fe8: sub rsp,0x8
0x11fec: call 0x2c00
0x11ff1: test eax,eax
0x11ff3: mov [rip+0x20d737],0x1
0x11ffa: setz al
0x11ffd: mov byte ptr [rip+0x20d72d],al
0x12003: add rsp,0x8
0x12007: ret
0x12030: mov rax,rdi
0x12033: mul rsi
0x12036: mov rdi,rax
0x12039: seto al
0x1203c: test rdi,rdi
0x1203f: js 0x1204b
0x12041: movzx eax,al
0x12044: test rax,rax
0x12047: jnz 0x1204b
0x12049: jmp 0x12010
0x1204b: sub rsp,0x8
0x1204f: call 0x12260
0x12092: nop qword ptr [rax+rax*1+0x0]
0x120b0: mov rax,rsi
0x120b3: mul rdx
0x120b6: mov rsi,rax
0x120b9: seto al
0x120bc: test rsi,rsi
0x120bf: js 0x120cb
0x120c1: movzx eax,al
0x120c4: test rax,rax
0x120c7: jnz 0x120cb
0x120c9: jmp 0x12070
0x120cb: sub rsp,0x8
0x120cf: call 0x12260
0x120e0: test rdi,rdi
0x120e3: mov r9,rdx
0x120e6: mov rcx,qword ptr [rsi]
0x120e9: jz 0x12120
0x120eb: xor edx,edx
0x120ed: mov rax,0x6148914691236517204
0x120f7: div r9
0x120fa: cmp rax,rcx
0x120fd: jbe 0x1213b
0x120ff: mov rax,rcx
0x12102: shr rax,0x1
0x12105: lea rcx,[rax+rcx*1+0x1]
0x1210a: mov qword ptr [rsi],rcx
0x1210d: imul rcx,r9
0x12111: mov rsi,rcx
0x12114: jmp 0x12070
0x12119: nop qword ptr [rax+0x0]
0x12120: test rcx,rcx
0x12123: jz 0x12148
0x12125: mov rax,rcx
0x12128: mul r9
0x1212b: seto dl
0x1212e: test rax,rax
0x12131: movzx edx,dl
0x12134: js 0x1213b
0x12136: test rdx,rdx
0x12139: jz 0x1210a
0x1213b: sub rsp,0x8
0x1213f: call 0x12260
0x12144: nop qword ptr [rax+0x0]
0x12148: xor edx,edx
0x1214a: mov eax,0x80
0x1214f: xor r8d,r8d
0x12152: div r9
0x12155: test rax,rax
0x12158: setz r8b
0x1215c: lea rcx,[r8+rax*1+0x0]
0x12160: jmp 0x12125
0x12170: test rdi,rdi
0x12173: mov rax,qword ptr [rsi]
0x12176: jz 0x121a0
0x12178: mov rdx,0x6148914691236517203
0x12182: cmp rax,rdx
0x12185: jnbe 0x121b1
0x12187: mov rdx,rax
0x1218a: shr rdx,0x1
0x1218d: lea rax,[rdx+rax*1+0x1]
0x12192: mov qword ptr [rsi],rax
0x12195: mov rsi,rax
0x12198: jmp 0x12070
0x1219d: nop qword ptr [rax]
0x121a0: test rax,rax
0x121a3: mov edx,0x80
0x121a8: cmove rax,rdx
0x121ac: test rax,rax
0x121af: jns 0x12192
0x121b1: sub rsp,0x8
0x121b5: call 0x12260
0x121c0: push rbx
0x121c1: mov rbx,rdi
0x121c4: call 0x12010
0x121c9: mov rdx,rbx
0x121cc: xor esi,esi
0x121ce: mov rdi,rax
0x121d1: pop rbx
0x121d2: jmp 0x2bf0
0x121e0: mov rax,rdi
0x121e3: sub rsp,0x8
0x121e7: mul rsi
0x121ea: seto dl
0x121ed: test rax,rax
0x121f0: js 0x12209
0x121f2: movzx edx,dl
0x121f5: test rdx,rdx
0x121f8: jnz 0x12209
0x121fa: call 0x2cd0
0x121ff: test rax,rax
0x12202: jz 0x12209
0x12204: add rsp,0x8
0x12208: ret
0x12209: call 0x12260
0x12290: call 0x2940
0x122a0: push r15
0x122a2: push r14
0x122a4: push r13
0x122a6: push r12
0x122a8: push rbp
0x122a9: push rbx
0x122aa: sub rsp,0x28
0x122ae: mov rax,0x28
0x122b7: mov qword ptr [rsp+0x18],rax
0x122bc: xor eax,eax
0x122be: cmp edx,0x24
0x122c1: jnbe 0x12625
0x122c7: lea rax,[rsp+0x10]
0x122cc: mov r15,rsi
0x122cf: test rsi,rsi
0x122d2: mov rbp,rdi
0x122d5: mov dword ptr [rsp+0x8],edx
0x122d9: mov r14,rcx
0x122dc: mov r13,r8
0x122df: cmove r15,rax
0x122e3: call 0x2950
0x122e8: mov [rax],0x0
0x122ee: mov r12,rax
0x122f1: movzx ebx,byte ptr [rbp+0x0]
0x122f5: call 0x30c0
0x122fa: mov edx,dword ptr [rsp+0x8]
0x122fe: mov rsi,qword ptr [rax]
0x12301: mov rax,rbp
0x12304: jmp 0x12317
0x12306: nop qword ptr [rax+rax*1+0x0]
0x12310: add rax,0x1
0x12314: movzx ebx,byte ptr [rax]
0x12317: movzx ecx,bl
0x1231a: test [rsi+rcx*2+0x1],0x20
0x1231f: jnz 0x12310
0x12321: cmp bl,0x2d
0x12324: jz 0x12378
0x12326: mov rsi,r15
0x12329: mov rdi,rbp
0x1232c: call 0x2fe0
0x12331: mov rcx,qword ptr [r15]
0x12334: mov rbx,rax
0x12337: cmp rcx,rbp
0x1233a: jz 0x12368
0x1233c: mov eax,dword ptr [r12]
0x12340: test eax,eax
0x12342: jz 0x123a8
0x12344: cmp eax,0x22
0x12347: mov ebp,0x1
0x1234c: jnz 0x12378
0x1234e: test r13,r13
0x12351: jz 0x1235c
0x12353: movzx r12d,byte ptr [rcx]
0x12357: test r12b,r12b
0x1235a: jnz 0x123d7
0x1235c: mov qword ptr [r14],rbx
0x1235f: jmp 0x1237d
0x12361: nop qword ptr [rax+0x0]
0x12368: test r13,r13
0x1236b: mov qword ptr [rsp+0x8],rcx
0x12370: jnz 0x123b0
0x12372: nop qword ptr [rax+rax*1+0x0]
0x12378: mov ebp,0x4
0x1237d: mov rdi,qword ptr [rsp+0x18]
0x12382: xor rdi,0x28
0x1238b: mov eax,ebp
0x1238d: jnz 0x12620
0x12393: add rsp,0x28
0x12397: pop rbx
0x12398: pop rbp
0x12399: pop r12
0x1239b: pop r13
0x1239d: pop r14
0x1239f: pop r15
0x123a1: ret
0x123a2: nop qword ptr [rax+rax*1+0x0]
0x123a8: xor ebp,ebp
0x123aa: jmp 0x1234e
0x123ac: nop qword ptr [rax+0x0]
0x123b0: movzx r12d,byte ptr [rbp+0x0]
0x123b5: test r12b,r12b
0x123b8: jz 0x12378
0x123ba: movsx esi,r12b
0x123be: mov rdi,r13
0x123c1: xor ebp,ebp
0x123c3: call 0x2b70
0x123c8: test rax,rax
0x123cb: mov ebx,0x1
0x123d0: mov rcx,qword ptr [rsp+0x8]
0x123d5: jz 0x12378
0x123d7: movsx esi,r12b
0x123db: mov rdi,r13
0x123de: mov qword ptr [rsp+0x8],rcx
0x123e3: call 0x2b70
0x123e8: test rax,rax
0x123eb: mov rcx,qword ptr [rsp+0x8]
0x123f0: jz 0x124bc
0x123f6: lea eax,[r12-0x45]
0x123fb: cmp al,0x2f
0x123fd: jnbe 0x12450
0x123ff: mov rdx,0x142129060940101
0x12409: bt rdx,rax
0x1240d: jnb 0x12450
0x1240f: mov esi,0x30
0x12414: mov rdi,r13
0x12417: mov qword ptr [rsp+0x8],rcx
0x1241c: call 0x2b70
0x12421: test rax,rax
0x12424: mov rcx,qword ptr [rsp+0x8]
0x12429: jz 0x12450
0x1242b: movzx eax,byte ptr [rcx+0x1]
0x1242f: cmp al,0x44
0x12431: jz 0x1243f
0x12433: cmp al,0x69
0x12435: jz 0x12608
0x1243b: cmp al,0x42
0x1243d: jnz 0x12450
0x1243f: mov edi,0x2
0x12444: mov esi,0x3e8
0x12449: jmp 0x1245a
0x1244b: nop qword ptr [rax+rax*1+0x0]
0x12450: mov edi,0x1
0x12455: mov esi,0x400
0x1245a: sub r12d,0x42
0x1245e: cmp r12b,0x35
0x12462: jnbe 0x124bc
0x12464: lea rdx,[rip+0x68bd]
0x1246b: movzx r12d,r12b
0x1246f: movsxd rax,dword ptr [rdx+r12*4+0x0]
0x12473: add rax,rdx
0x12476: jmp rax
0x12478: mov rax,rbx
0x1247b: mul rsi
0x1247e: jo 0x12671
0x12484: xor r8d,r8d
0x12487: mul rsi
0x1248a: jo 0x12662
0x12490: mov rbx,rax
0x12493: or ebp,r8d
0x12496: nop qword ptr [rax+rax*1+0x0]
0x124a0: movsxd rdi,edi
0x124a3: mov eax,ebp
0x124a5: add rcx,rdi
0x124a8: or eax,0x2
0x124ab: mov qword ptr [r15],rcx
0x124ae: cmp [rcx],0x0
0x124b1: mov qword ptr [r14],rbx
0x124b4: cmovne ebp,eax
0x124b7: jmp 0x1237d
0x124bc: mov qword ptr [r14],rbx
0x124bf: or ebp,0x2
0x124c2: jmp 0x1237d
0x124c7: mov edx,0x2
0x124cc: mov rax,rdx
0x124cf: mul rbx
0x124d2: jo 0x1256e
0x124d8: add rbx,rbx
0x124db: jmp 0x124a0
0x124dd: mov edx,0x200
0x124e2: mov rax,rdx
0x124e5: mul rbx
0x124e8: jo 0x1256e
0x124ee: shl rbx,0x9
0x124f2: jmp 0x124a0
0x124f4: mov r8d,0x7
0x124fa: xor r9d,r9d
0x124fd: nop qword ptr [rax]
0x12500: mov rax,rbx
0x12503: mul rsi
0x12506: mov rbx,rax
0x12509: jo 0x1269e
0x1250f: sub r8d,0x1
0x12513: jnz 0x12500
0x12515: or ebp,r9d
0x12518: jmp 0x124a0
0x1251a: mov r8d,0x8
0x12520: xor r9d,r9d
0x12523: nop qword ptr [rax+rax*1+0x0]
0x12528: mov rax,rbx
0x1252b: mul rsi
0x1252e: mov rbx,rax
0x12531: jo 0x12680
0x12537: sub r8d,0x1
0x1253b: jnz 0x12528
0x1253d: jmp 0x12515
0x1253f: mov r8d,0x4
0x12545: xor r9d,r9d
0x12548: mov rax,rbx
0x1254b: mul rsi
0x1254e: mov rbx,rax
0x12551: jo 0x12653
0x12557: sub r8d,0x1
0x1255b: jnz 0x12548
0x1255d: jmp 0x12515
0x1255f: mov rax,rbx
0x12562: mul rsi
0x12565: mov rbx,rax
0x12568: jno 0x124a0
0x1256e: mov ebp,0x1
0x12573: or rbx,0xffffffff
0x12577: jmp 0x124a0
0x1257c: nop qword ptr [rax+0x0]
0x12580: mov r8d,0x5
0x12586: xor r9d,r9d
0x12589: mov rax,rbx
0x1258c: mul rsi
0x1258f: mov rbx,rax
0x12592: jo 0x1268f
0x12598: sub r8d,0x1
0x1259c: jnz 0x12589
0x1259e: jmp 0x12515
0x125a3: mov r8d,0x6
0x125a9: xor r9d,r9d
0x125ac: mov rax,rbx
0x125af: mul rsi
0x125b2: mov rbx,rax
0x125b5: jo 0x12644
0x125bb: sub r8d,0x1
0x125bf: jnz 0x125ac
0x125c1: jmp 0x12515
0x125c6: mov edx,0x400
0x125cb: mov rax,rdx
0x125ce: mul rbx
0x125d1: jo 0x1256e
0x125d3: shl rbx,0xa
0x125d7: jmp 0x124a0
0x125dc: mov rax,rbx
0x125df: mul rsi
0x125e2: jo 0x126ad
0x125e8: xor r8d,r8d
0x125eb: mul rsi
0x125ee: jno 0x12487
0x125f4: mov r8d,0x1
0x125fa: or rax,0xffffffff
0x125fe: jmp 0x12487
0x12603: nop qword ptr [rax+rax*1+0x0]
0x12608: xor edi,edi
0x1260a: cmp [rcx+0x2],0x42
0x1260e: mov esi,0x400
0x12613: setz dil
0x12617: lea edi,[rdi+rdi*1+0x1]
0x1261b: jmp 0x1245a
0x12620: call 0x2b30
0x12625: lea rcx,[rip+0x67d4]
0x1262c: lea rsi,[rip+0x66ad]
0x12633: lea rdi,[rip+0x66c6]
0x1263a: mov edx,0x54
0x1263f: call 0x2be0
0x12644: mov r9d,0x1
0x1264a: or rbx,0xffffffff
0x1264e: jmp 0x125bb
0x12653: mov r9d,0x1
0x12659: or rbx,0xffffffff
0x1265d: jmp 0x12557
0x12662: mov r8d,0x1
0x12668: or rbx,0xffffffff
0x1266c: jmp 0x12493
0x12671: or rax,0xffffffff
0x12675: mov r8d,0x1
0x1267b: jmp 0x12487
0x12680: mov r9d,0x1
0x12686: or rbx,0xffffffff
0x1268a: jmp 0x12537
0x1268f: mov r9d,0x1
0x12695: or rbx,0xffffffff
0x12699: jmp 0x12598
0x1269e: mov r9d,0x1
0x126a4: or rbx,0xffffffff
0x126a8: jmp 0x1250f
0x126ad: mov r8d,0x1
0x126b3: or rax,0xffffffff
0x126b7: jmp 0x125eb
0x126c0: push rbx
0x126c1: mov edx,0xa
0x126c6: xor ebx,ebx
0x126c8: sub rsp,0x20
0x126cc: mov rcx,qword ptr [rip+0x20aa1d]
0x126d3: lea rsi,[rsp+0x10]
0x126d8: lea rdi,[rsp+0x8]
0x126dd: mov [rsp+0x8],0x0
0x126e6: mov rax,0x28
0x126ef: mov qword ptr [rsp+0x18],rax
0x126f4: xor eax,eax
0x126f6: mov [rsp+0x10],0x0
0x126ff: call 0x2ce0
0x12704: test rax,rax
0x12707: jle 0x12722
0x12709: mov rdi,qword ptr [rsp+0x8]
0x1270e: lea rax,[rdi+rax*1-0x1]
0x12713: cmp [rax],0xa
0x12716: jz 0x12748
0x12718: call 0x2d40
0x1271d: test eax,eax
0x1271f: setnle bl
0x12722: mov rdi,qword ptr [rsp+0x8]
0x12727: call 0x30d0
0x1272c: mov rdx,qword ptr [rsp+0x18]
0x12731: xor rdx,0x28
0x1273a: mov eax,ebx
0x1273c: jnz 0x12752
0x1273e: add rsp,0x20
0x12742: pop rbx
0x12743: ret
0x12744: nop qword ptr [rax+0x0]
0x12748: mov [rax],0x0
0x1274b: mov rdi,qword ptr [rsp+0x8]
0x12750: jmp 0x12718
0x12752: call 0x2b30
0x12760: test rdi,rdi
0x12763: push rbx
0x12764: mov rbx,rdi
0x12767: jz 0x1277a
0x12769: call 0x2e50
0x1276e: test eax,eax
0x12770: jz 0x1277a
0x12772: test [rbx],0x100
0x12778: jnz 0x12788
0x1277a: mov rdi,rbx
0x1277d: pop rbx
0x1277e: jmp 0x2e00
0x12783: nop qword ptr [rax+rax*1+0x0]
0x12788: mov rdi,rbx
0x1278b: mov edx,0x1
0x12790: xor esi,esi
0x12792: call 0x127d0
0x12797: mov rdi,rbx
0x1279a: pop rbx
0x1279b: jmp 0x2e00
0x127a0: xor eax,eax
0x127a2: mov rcx,qword ptr [rdi+0x20]
0x127a6: cmp qword ptr [rdi+0x28],rcx
0x127aa: jnbe 0x127c7
0x127ac: mov rax,qword ptr [rdi+0x10]
0x127b0: sub rax,qword ptr [rdi+0x8]
0x127b4: test [rdi],0x100
0x127ba: jz 0x127c7
0x127bc: mov rdx,qword ptr [rdi+0x58]
0x127c0: sub rdx,qword ptr [rdi+0x48]
0x127c4: add rax,rdx
0x127c7: rep ret
0x127d0: mov rax,qword ptr [rdi+0x8]
0x127d4: cmp qword ptr [rdi+0x10],rax
0x127d8: jz 0x127e0
0x127da: jmp 0x2f70
0x127df: nop 
0x127e0: mov rax,qword ptr [rdi+0x20]
0x127e4: cmp qword ptr [rdi+0x28],rax
0x127e8: jnz 0x127da
0x127ea: cmp [rdi+0x48],0x0
0x127ef: jnz 0x127da
0x127f1: push r12
0x127f3: push rbp
0x127f4: mov r12d,edx
0x127f7: push rbx
0x127f8: mov rbp,rsi
0x127fb: mov rbx,rdi
0x127fe: call 0x2db0
0x12803: mov edx,r12d
0x12806: mov rsi,rbp
0x12809: mov edi,eax
0x1280b: call 0x2bc0
0x12810: cmp rax,0xffffffff
0x12814: jz 0x12822
0x12816: and [rbx],0xef
0x12819: mov qword ptr [rbx+0x90],rax
0x12820: xor eax,eax
0x12822: pop rbx
0x12823: pop rbp
0x12824: pop r12
0x12826: ret
0x128ae: call 0x2b30
0x128c0: push r13
0x128c2: push r12
0x128c4: mov rax,rsi
0x128c7: push rbp
0x128c8: push rbx
0x128c9: mov r13,rdi
0x128cc: sub rsp,0x7f8
0x128d3: lea r12,[rsp+0x10]
0x128d8: lea rsi,[rsp+0x8]
0x128dd: mov [rsp+0x8],0x7d0
0x128e6: mov rcx,0x28
0x128ef: mov qword ptr [rsp+0x7e8],rcx
0x128f7: xor ecx,ecx
0x128f9: mov rdi,r12
0x128fc: mov rcx,rdx
0x128ff: mov rdx,rax
0x12902: call 0x14260
0x12907: test rax,rax
0x1290a: mov rbx,qword ptr [rsp+0x8]
0x1290f: jz 0x1299e
0x12915: mov rcx,r13
0x12918: mov rdx,rbx
0x1291b: mov esi,0x1
0x12920: mov rdi,rax
0x12923: mov rbp,rax
0x12926: call 0x3040
0x1292b: cmp rax,rbx
0x1292e: jb 0x12970
0x12930: cmp rbp,r12
0x12933: jz 0x1293d
0x12935: mov rdi,rbp
0x12938: call 0x30d0
0x1293d: cmp rbx,0x7fffffff
0x12944: jnbe 0x12993
0x12946: mov rcx,qword ptr [rsp+0x7e8]
0x1294e: xor rcx,0x28
0x12957: mov eax,ebx
0x12959: jnz 0x129ad
0x1295b: add rsp,0x7f8
0x12962: pop rbx
0x12963: pop rbp
0x12964: pop r12
0x12966: pop r13
0x12968: ret
0x12969: nop qword ptr [rax+0x0]
0x12970: cmp rbp,r12
0x12973: mov ebx,0xffffffff
0x12978: jz 0x12946
0x1297a: call 0x2950
0x1297f: mov r13d,dword ptr [rax]
0x12982: mov r12,rax
0x12985: mov rdi,rbp
0x12988: call 0x30d0
0x1298d: mov dword ptr [r12],r13d
0x12991: jmp 0x12946
0x12993: call 0x2950
0x12998: mov [rax],0x4b
0x1299e: mov rdi,r13
0x129a1: mov ebx,0xffffffff
0x129a6: call 0x14250
0x129ab: jmp 0x12946
0x129ad: call 0x2b30
0x129d0: mov dword ptr [rcx],edx
0x129d2: xor eax,eax
0x129d4: ret
0x129e0: mov eax,esi
0x129e2: mov esi,edx
0x129e4: cmp eax,0xff
0x129e7: jz 0x129f0
0x129e9: mov edi,eax
0x129eb: jmp 0x2ef0
0x129f0: jmp 0x2f10
0x12a00: sub rsp,0x8
0x12a04: mov rax,rsi
0x12a07: mov esi,edx
0x12a09: mov edx,dword ptr [rdi]
0x12a0b: mov rdi,rax
0x12a0e: call 0x129e0
0x12a13: test eax,eax
0x12a15: setnz al
0x12a18: add rsp,0x8
0x12a1c: movzx eax,al
0x12a1f: neg eax
0x12a21: ret
0x12a30: mov edi,0x1
0x12a35: jmp 0x4920
0x12a86: nop qword ptr [rax+rax*1+0x0]
0x12b47: nop qword ptr [rax+rax*1+0x0]
0x12ba5: mov r8,rbp
0x12ba8: mov rdx,rbx
0x12bab: mov rcx,rax
0x12bae: pop rbx
0x12baf: pop rbp
0x12bb0: pop r12
0x12bb2: xor esi,esi
0x12bb4: xor edi,edi
0x12bb6: xor eax,eax
0x12bb8: jmp 0x2f30
0x12bbd: nop qword ptr [rax]
0x12be0: push r15
0x12be2: push r14
0x12be4: mov r14,rdi
0x12be7: push r13
0x12be9: push r12
0x12beb: xor edi,edi
0x12bed: push rbp
0x12bee: push rbx
0x12bef: mov rbp,rsi
0x12bf2: lea rsi,[rip+0x6248]
0x12bf9: mov r12,rdx
0x12bfc: mov edx,0x5
0x12c01: sub rsp,0x8
0x12c05: mov rbx,qword ptr [rip+0x20a514]
0x12c0c: call 0x2ad0
0x12c11: mov rdi,rax
0x12c14: mov rsi,rbx
0x12c17: call 0x2cb0
0x12c1c: mov r15,qword ptr [r14]
0x12c1f: test r15,r15
0x12c22: jz 0x12cb8
0x12c28: xor r13d,r13d
0x12c2b: xor ebx,ebx
0x12c2d: jmp 0x12c68
0x12c2f: nop 
0x12c30: mov rdi,r15
0x12c33: add rbx,0x1
0x12c37: mov r13,rbp
0x12c3a: call 0xf6c0
0x12c3f: mov rdi,qword ptr [rip+0x20a4da]
0x12c46: lea rdx,[rip+0x6209]
0x12c4d: mov rcx,rax
0x12c50: mov esi,0x1
0x12c55: xor eax,eax
0x12c57: add rbp,r12
0x12c5a: call 0x3050
0x12c5f: mov r15,qword ptr [r14+rbx*8+0x0]
0x12c63: test r15,r15
0x12c66: jz 0x12cb8
0x12c68: test rbx,rbx
0x12c6b: jz 0x12c30
0x12c6d: mov rdx,r12
0x12c70: mov rsi,rbp
0x12c73: mov rdi,r13
0x12c76: call 0x2c90
0x12c7b: test eax,eax
0x12c7d: jnz 0x12c30
0x12c7f: mov rdi,r15
0x12c82: add rbx,0x1
0x12c86: add rbp,r12
0x12c89: call 0xf6c0
0x12c8e: mov rdi,qword ptr [rip+0x20a48b]
0x12c95: lea rdx,[rip+0x61c2]
0x12c9c: mov rcx,rax
0x12c9f: mov esi,0x1
0x12ca4: xor eax,eax
0x12ca6: call 0x3050
0x12cab: mov r15,qword ptr [r14+rbx*8+0x0]
0x12caf: test r15,r15
0x12cb2: jnz 0x12c68
0x12cb4: nop qword ptr [rax+0x0]
0x12cb8: mov rdi,qword ptr [rip+0x20a461]
0x12cbf: mov rax,qword ptr [rdi+0x28]
0x12cc3: cmp rax,qword ptr [rdi+0x30]
0x12cc7: jnb 0x12ce8
0x12cc9: lea rdx,[rax+0x1]
0x12ccd: mov qword ptr [rdi+0x28],rdx
0x12cd1: mov [rax],0xa
0x12cd4: add rsp,0x8
0x12cd8: pop rbx
0x12cd9: pop rbp
0x12cda: pop r12
0x12cdc: pop r13
0x12cde: pop r14
0x12ce0: pop r15
0x12ce2: ret
0x12ce3: nop qword ptr [rax+rax*1+0x0]
0x12ce8: add rsp,0x8
0x12cec: mov esi,0xa
0x12cf1: pop rbx
0x12cf2: pop rbp
0x12cf3: pop r12
0x12cf5: pop r13
0x12cf7: pop r14
0x12cf9: pop r15
0x12cfb: jmp 0x2b90
0x12d53: mov rdx,r15
0x12d56: mov rsi,rbp
0x12d59: mov rdi,rbx
0x12d5c: call 0x12be0
0x12d61: call r13
0x12d64: mov rax,0xffffffff
0x12d6b: jmp 0x12d36
0x12d70: push r14
0x12d72: push r13
0x12d74: push r12
0x12d76: push rbp
0x12d77: push rbx
0x12d78: mov r14,qword ptr [rsi]
0x12d7b: test r14,r14
0x12d7e: jz 0x12db1
0x12d80: mov r12,rcx
0x12d83: mov r13,rdi
0x12d86: mov rbp,rdx
0x12d89: lea rbx,[rsi+0x8]
0x12d8d: jmp 0x12d9f
0x12d8f: nop 
0x12d90: mov r14,qword ptr [rbx]
0x12d93: add rbp,r12
0x12d96: add rbx,0x8
0x12d9a: test r14,r14
0x12d9d: jz 0x12db1
0x12d9f: mov rdx,r12
0x12da2: mov rsi,rbp
0x12da5: mov rdi,r13
0x12da8: call 0x2c90
0x12dad: test eax,eax
0x12daf: jnz 0x12d90
0x12db1: pop rbx
0x12db2: mov rax,r14
0x12db5: pop rbp
0x12db6: pop r12
0x12db8: pop r13
0x12dba: pop r14
0x12dbc: ret
0x12dc0: push r12
0x12dc2: push rbp
0x12dc3: mov rbp,rdi
0x12dc6: push rbx
0x12dc7: call 0x29a0
0x12dcc: mov ebx,dword ptr [rbp+0x0]
0x12dcf: mov rdi,rbp
0x12dd2: mov r12,rax
0x12dd5: call 0x13f50
0x12dda: and ebx,0x20
0x12ddd: test ebx,ebx
0x12ddf: jnz 0x12df8
0x12de1: test eax,eax
0x12de3: jz 0x12def
0x12de5: test r12,r12
0x12de8: mov eax,0xffffffff
0x12ded: jz 0x12e28
0x12def: pop rbx
0x12df0: pop rbp
0x12df1: pop r12
0x12df3: ret
0x12df4: nop qword ptr [rax+0x0]
0x12df8: test eax,eax
0x12dfa: jnz 0x12e18
0x12dfc: call 0x2950
0x12e01: mov [rax],0x0
0x12e07: mov eax,0xffffffff
0x12e0c: pop rbx
0x12e0d: pop rbp
0x12e0e: pop r12
0x12e10: ret
0x12e11: nop qword ptr [rax+0x0]
0x12e18: pop rbx
0x12e19: mov eax,0xffffffff
0x12e1e: pop rbp
0x12e1f: pop r12
0x12e21: ret
0x12e22: nop qword ptr [rax+rax*1+0x0]
0x12e28: call 0x2950
0x12e2d: cmp [rax],0x9
0x12e30: pop rbx
0x12e31: pop rbp
0x12e32: pop r12
0x12e34: setnz al
0x12e37: movzx eax,al
0x12e3a: neg eax
0x12e3c: ret
0x12e40: push r14
0x12e42: push r13
0x12e44: push r12
0x12e46: push rbp
0x12e47: push rbx
0x12e48: call 0x2a90
0x12e4d: test rax,rax
0x12e50: mov rbx,rax
0x12e53: jz 0x12e62
0x12e55: mov rdi,rax
0x12e58: call 0x2d10
0x12e5d: cmp eax,0x2
0x12e60: jbe 0x12e70
0x12e62: mov rax,rbx
0x12e65: pop rbx
0x12e66: pop rbp
0x12e67: pop r12
0x12e69: pop r13
0x12e6b: pop r14
0x12e6d: ret
0x12e6e: nop 
0x12e70: mov edi,eax
0x12e72: mov edx,0x3
0x12e77: mov esi,0x406
0x12e7c: xor eax,eax
0x12e7e: call 0x13fd0
0x12e83: mov r12d,eax
0x12e86: call 0x2950
0x12e8b: test r12d,r12d
0x12e8e: mov rbp,rax
0x12e91: jns 0x12eb8
0x12e93: mov r14d,dword ptr [rax]
0x12e96: xor r13d,r13d
0x12e99: mov rdi,rbx
0x12e9c: mov rbx,r13
0x12e9f: call 0x2c60
0x12ea4: mov dword ptr [rbp+0x0],r14d
0x12ea8: mov rax,rbx
0x12eab: pop rbx
0x12eac: pop rbp
0x12ead: pop r12
0x12eaf: pop r13
0x12eb1: pop r14
0x12eb3: ret
0x12eb4: nop qword ptr [rax+0x0]
0x12eb8: mov edi,r12d
0x12ebb: call 0x2fb0
0x12ec0: test rax,rax
0x12ec3: mov r13,rax
0x12ec6: mov r14d,dword ptr [rbp+0x0]
0x12eca: jnz 0x12e99
0x12ecc: mov edi,r12d
0x12ecf: call 0x2c30
0x12ed4: jmp 0x12e99
0x12ee0: mov rsi,rdi
0x12ee3: xor edi,edi
0x12ee5: jmp 0x2a10
0x12ef0: sub rsp,0x28
0x12ef4: xor edi,edi
0x12ef6: mov rsi,rsp
0x12ef9: mov rax,0x28
0x12f02: mov qword ptr [rsp+0x18],rax
0x12f07: xor eax,eax
0x12f09: call 0x2a10
0x12f0e: mov rcx,qword ptr [rsp+0x18]
0x12f13: xor rcx,0x28
0x12f1c: mov rax,qword ptr [rsp]
0x12f20: mov rdx,qword ptr [rsp+0x8]
0x12f25: jnz 0x12f2c
0x12f27: add rsp,0x28
0x12f2b: ret
0x12f2c: call 0x2b30
0x12f7a: nop qword ptr [rax+rax*1+0x0]
0x12fa0: movsx rcx,byte ptr [rdi]
0x12fa4: test cl,cl
0x12fa6: jz 0x12fd0
0x12fa8: xor eax,eax
0x12faa: nop qword ptr [rax+rax*1+0x0]
0x12fb0: rol rax,0x9
0x12fb4: add rdi,0x1
0x12fb8: add rax,rcx
0x12fbb: movsx rcx,byte ptr [rdi]
0x12fbf: test cl,cl
0x12fc1: jnz 0x12fb0
0x12fc3: xor edx,edx
0x12fc5: div rsi
0x12fc8: mov rax,rdx
0x12fcb: ret
0x12fcc: nop qword ptr [rax+0x0]
0x12fd0: xor edx,edx
0x12fd2: mov rax,rdx
0x12fd5: ret
0x13006: nop qword ptr [rax+rax*1+0x0]
0x13020: push r15
0x13022: push r14
0x13024: mov r15d,edx
0x13027: push r13
0x13029: push r12
0x1302b: mov r13d,ecx
0x1302e: push rbp
0x1302f: push rbx
0x13030: mov ebp,edi
0x13032: mov r12,rsi
0x13035: mov r14d,r9d
0x13038: sub rsp,0xb8
0x1303f: mov rax,0x28
0x13048: mov qword ptr [rsp+0xa8],rax
0x13050: xor eax,eax
0x13052: test edi,edi
0x13054: mov dword ptr [rsp+0xc],r8d
0x13059: lea rdx,[rsp+0x10]
0x1305e: js 0x13130
0x13064: mov esi,edi
0x13066: mov edi,0x1
0x1306b: call 0x2e20
0x13070: test eax,eax
0x13072: mov ebx,eax
0x13074: mov r8d,dword ptr [rsp+0xc]
0x13079: jnz 0x13220
0x1307f: mov ecx,dword ptr [rsp+0x28]
0x13083: mov eax,ecx
0x13085: and eax,0xf000
0x1308a: cmp eax,0x4000
0x1308f: jnz 0x130e0
0x13091: cmp r13d,0xff
0x13095: jz 0x13170
0x1309b: cmp dword ptr [rsp+0x2c],r13d
0x130a0: jz 0x13170
0x130a6: test ebp,ebp
0x130a8: mov dword ptr [rsp+0xc],ecx
0x130ac: mov edx,r8d
0x130af: mov esi,r13d
0x130b2: jns 0x131c0
0x130b8: cmp r15d,0xff
0x130bc: mov rdi,r12
0x130bf: jz 0x13200
0x130c5: call 0x2e40
0x130ca: mov ecx,dword ptr [rsp+0xc]
0x130ce: mov ebx,eax
0x130d0: test ebx,ebx
0x130d2: jnz 0x13104
0x130d4: jmp 0x131d1
0x130d9: nop qword ptr [rax+0x0]
0x130e0: call 0x2950
0x130e5: mov r13d,0x14
0x130eb: mov r12,rax
0x130ee: mov [rax],0x14
0x130f4: mov ebx,0xffffffff
0x130f9: mov edi,ebp
0x130fb: call 0x2c30
0x13100: mov dword ptr [r12],r13d
0x13104: mov rcx,qword ptr [rsp+0xa8]
0x1310c: xor rcx,0x28
0x13115: mov eax,ebx
0x13117: jnz 0x13230
0x1311d: add rsp,0xb8
0x13124: pop rbx
0x13125: pop rbp
0x13126: pop r12
0x13128: pop r13
0x1312a: pop r14
0x1312c: pop r15
0x1312e: ret
0x1312f: nop 
0x13130: mov edi,0x1
0x13135: call 0x2dd0
0x1313a: test eax,eax
0x1313c: mov ebx,eax
0x1313e: mov r8d,dword ptr [rsp+0xc]
0x13143: jnz 0x13104
0x13145: mov ecx,dword ptr [rsp+0x28]
0x13149: mov eax,ecx
0x1314b: and eax,0xf000
0x13150: cmp eax,0x4000
0x13155: jz 0x13091
0x1315b: call 0x2950
0x13160: or ebx,0xff
0x13163: mov [rax],0x14
0x13169: jmp 0x13104
0x1316b: nop qword ptr [rax+rax*1+0x0]
0x13170: cmp r8d,0xff
0x13174: jz 0x13181
0x13176: cmp dword ptr [rsp+0x30],r8d
0x1317b: jnz 0x130a6
0x13181: xor edx,edx
0x13183: mov eax,ecx
0x13185: xor eax,r14d
0x13188: or eax,edx
0x1318a: test dword ptr [rsp+0xf0],eax
0x13191: jz 0x131e0
0x13193: mov esi,dword ptr [rsp+0xf0]
0x1319a: and ecx,0xfff
0x131a0: not esi
0x131a2: and esi,ecx
0x131a4: or esi,r14d
0x131a7: test ebp,ebp
0x131a9: jns 0x13210
0x131ab: mov rdi,r12
0x131ae: call 0x2f10
0x131b3: mov ebx,eax
0x131b5: jmp 0x13104
0x131ba: nop qword ptr [rax+rax*1+0x0]
0x131c0: mov edi,ebp
0x131c2: call 0x2f80
0x131c7: test eax,eax
0x131c9: mov ebx,eax
0x131cb: mov ecx,dword ptr [rsp+0xc]
0x131cf: jnz 0x13220
0x131d1: test cl,0x49
0x131d4: jz 0x13181
0x131d6: mov edx,ecx
0x131d8: and edx,0xc00
0x131de: jmp 0x13183
0x131e0: xor ebx,ebx
0x131e2: test ebp,ebp
0x131e4: js 0x13104
0x131ea: nop qword ptr [rax+rax*1+0x0]
0x131f0: mov edi,ebp
0x131f2: call 0x2c30
0x131f7: mov ebx,eax
0x131f9: jmp 0x13104
0x131fe: nop 
0x13200: call 0x2e80
0x13205: mov ecx,dword ptr [rsp+0xc]
0x13209: mov ebx,eax
0x1320b: jmp 0x130d0
0x13210: mov edi,ebp
0x13212: call 0x2ef0
0x13217: test eax,eax
0x13219: mov ebx,eax
0x1321b: jz 0x131f0
0x1321d: nop qword ptr [rax]
0x13220: call 0x2950
0x13225: mov r12,rax
0x13228: mov r13d,dword ptr [rax]
0x1322b: jmp 0x130f9
0x13230: call 0x2b30
0x13240: sub rsp,0x58
0x13244: mov qword ptr [rsp+0x38],rcx
0x13249: xor ecx,ecx
0x1324b: mov rax,0x28
0x13254: mov qword ptr [rsp+0x18],rax
0x13259: xor eax,eax
0x1325b: test dl,0x40
0x1325e: jnz 0x13288
0x13260: xor eax,eax
0x13262: call 0x2b10
0x13267: mov edi,eax
0x13269: call 0x10940
0x1326e: mov rsi,qword ptr [rsp+0x18]
0x13273: xor rsi,0x28
0x1327c: jnz 0x132a9
0x1327e: add rsp,0x58
0x13282: ret
0x13283: nop qword ptr [rax+rax*1+0x0]
0x13288: lea rax,[rsp+0x60]
0x1328d: mov [rsp],0x18
0x13294: mov ecx,dword ptr [rsp+0x38]
0x13298: mov qword ptr [rsp+0x8],rax
0x1329d: lea rax,[rsp+0x20]
0x132a2: mov qword ptr [rsp+0x10],rax
0x132a7: jmp 0x13260
0x132a9: call 0x2b30
0x132b0: push rbx
0x132b1: mov rbx,rdi
0x132b4: mov edi,0x18
0x132b9: call 0x12010
0x132be: mov qword ptr [rax],rbx
0x132c1: mov [rax+0x10],0x0
0x132c9: mov [rax+0x8],0x0
0x132d1: pop rbx
0x132d2: ret
0x132e0: push rbx
0x132e1: call 0x13530
0x132e6: test rax,rax
0x132e9: jz 0x13310
0x132eb: mov rbx,rax
0x132ee: mov edi,0x18
0x132f3: call 0x12010
0x132f8: mov qword ptr [rax],rbx
0x132fb: mov [rax+0x10],0x0
0x13303: mov [rax+0x8],0x0
0x1330b: pop rbx
0x1330c: ret
0x1330d: nop qword ptr [rax]
0x13310: xor eax,eax
0x13312: pop rbx
0x13313: ret
0x13320: mov rax,qword ptr [rdi]
0x13323: ret
0x13330: push r15
0x13332: push r14
0x13334: lea r15,[rsi+0x1]
0x13338: push r13
0x1333a: push r12
0x1333c: mov r13,rdi
0x1333f: push rbp
0x13340: push rbx
0x13341: mov r14,rsi
0x13344: sub rsp,0x28
0x13348: mov rbp,qword ptr [rdi+0x8]
0x1334c: mov rbx,qword ptr [rdi+0x10]
0x13350: mov rax,0x28
0x13359: mov qword ptr [rsp+0x18],rax
0x1335e: xor eax,eax
0x13360: mov rax,qword ptr [rdi]
0x13363: lea r12,[rsp+0x10]
0x13368: mov qword ptr [rsp+0x8],rax
0x1336d: jmp 0x133a5
0x1336f: nop 
0x13370: cmp rbx,r14
0x13373: jz 0x133ff
0x13379: mov rax,rbx
0x1337c: xor edx,edx
0x1337e: sub rax,r14
0x13381: div r15
0x13384: sub rbx,rdx
0x13387: mov rdi,rdx
0x1338a: mov rsi,rax
0x1338d: xor edx,edx
0x1338f: mov rax,rbp
0x13392: div r15
0x13395: cmp rbp,rbx
0x13398: jbe 0x13438
0x1339e: lea rbx,[rdi-0x1]
0x133a2: mov rbp,rdx
0x133a5: cmp rbx,r14
0x133a8: jnb 0x13370
0x133aa: mov rax,rbx
0x133ad: xor edx,edx
0x133af: nop 
0x133b0: shl rax,0x8
0x133b4: add rdx,0x1
0x133b8: add rax,0xff
0x133be: cmp r14,rax
0x133c1: jnbe 0x133b0
0x133c3: mov rdi,qword ptr [rsp+0x8]
0x133c8: mov rsi,r12
0x133cb: call 0x13880
0x133d0: mov rax,r12
0x133d3: nop qword ptr [rax+rax*1+0x0]
0x133d8: movzx edx,byte ptr [rax]
0x133db: shl rbx,0x8
0x133df: shl rbp,0x8
0x133e3: add rbx,0xff
0x133ea: add rax,0x1
0x133ee: add rbp,rdx
0x133f1: cmp r14,rbx
0x133f4: jnbe 0x133d8
0x133f6: cmp rbx,r14
0x133f9: jnz 0x13379
0x133ff: mov [r13+0x10],0x0
0x13407: mov [r13+0x8],0x0
0x1340f: mov rcx,qword ptr [rsp+0x18]
0x13414: xor rcx,0x28
0x1341d: mov rax,rbp
0x13420: jnz 0x13445
0x13422: add rsp,0x28
0x13426: pop rbx
0x13427: pop rbp
0x13428: pop r12
0x1342a: pop r13
0x1342c: pop r14
0x1342e: pop r15
0x13430: ret
0x13431: nop qword ptr [rax+0x0]
0x13438: mov qword ptr [r13+0x8],rax
0x1343c: mov qword ptr [r13+0x10],rsi
0x13440: mov rbp,rdx
0x13443: jmp 0x1340f
0x13445: call 0x2b30
0x13450: push rbx
0x13451: mov rdx,0xffffffff
0x13458: mov rbx,rdi
0x1345b: mov esi,0x18
0x13460: call 0x2f50
0x13465: mov rdi,rbx
0x13468: pop rbx
0x13469: jmp 0x30d0
0x13470: push r13
0x13472: push r12
0x13474: push rbp
0x13475: push rbx
0x13476: mov rbx,rdi
0x13479: sub rsp,0x8
0x1347d: mov rdi,qword ptr [rdi]
0x13480: call 0x13a20
0x13485: mov r12d,eax
0x13488: call 0x2950
0x1348d: mov r13d,dword ptr [rax]
0x13490: mov rdi,rbx
0x13493: mov rdx,0xffffffff
0x1349a: mov esi,0x18
0x1349f: mov rbp,rax
0x134a2: call 0x2f50
0x134a7: mov rdi,rbx
0x134aa: call 0x30d0
0x134af: mov dword ptr [rbp+0x0],r13d
0x134b3: add rsp,0x8
0x134b7: mov eax,r12d
0x134ba: pop rbx
0x134bb: pop rbp
0x134bc: pop r12
0x134be: pop r13
0x134c0: ret
0x134d0: push rbp
0x134d1: push rbx
0x134d2: sub rsp,0x8
0x134d6: test rdi,rdi
0x134d9: jz 0x13518
0x134db: call 0xf6c0
0x134e0: mov rbp,rax
0x134e3: call 0x2950
0x134e8: cmp [rax],0x0
0x134eb: mov rbx,rax
0x134ee: mov edx,0x5
0x134f3: jz 0x1351d
0x134f5: lea rsi,[rip+0x5985]
0x134fc: xor edi,edi
0x134fe: call 0x2ad0
0x13503: mov edi,dword ptr [rip+0x209b3f]
0x13509: mov esi,dword ptr [rbx]
0x1350b: mov rdx,rax
0x1350e: mov rcx,rbp
0x13511: xor eax,eax
0x13513: call 0x2f30
0x13518: call 0x2940
0x1351d: lea rsi,[rip+0x594d]
0x13524: xor edi,edi
0x13526: call 0x2ad0
0x1352b: jmp 0x13503
0x13530: push r15
0x13532: push r14
0x13534: push r13
0x13536: push r12
0x13538: push rbp
0x13539: push rbx
0x1353a: sub rsp,0x38
0x1353e: mov rax,0x28
0x13547: mov qword ptr [rsp+0x28],rax
0x1354c: xor eax,eax
0x1354e: test rsi,rsi
0x13551: jz 0x13678
0x13557: test rdi,rdi
0x1355a: mov r12,rdi
0x1355d: mov rbp,rsi
0x13560: jz 0x135e0
0x13562: lea rsi,[rip+0x5934]
0x13569: call 0x15380
0x1356e: test rax,rax
0x13571: mov r13,rax
0x13574: jz 0x13778
0x1357a: mov edi,0x1038
0x1357f: call 0x12010
0x13584: mov rbx,rax
0x13587: mov qword ptr [rax],r13
0x1358a: lea rax,[rip-0xc1]
0x13591: cmp rbp,0x1000
0x13598: mov ecx,0x1000
0x1359d: lea rsi,[rbx+0x18]
0x135a1: cmovbe rcx,rbp
0x135a5: mov qword ptr [rbx+0x8],rax
0x135a9: mov qword ptr [rbx+0x10],r12
0x135ad: xor edx,edx
0x135af: mov rdi,r13
0x135b2: call 0x2f00
0x135b7: mov rdx,qword ptr [rsp+0x28]
0x135bc: xor rdx,0x28
0x135c5: mov rax,rbx
0x135c8: jnz 0x1377f
0x135ce: add rsp,0x38
0x135d2: pop rbx
0x135d3: pop rbp
0x135d4: pop r12
0x135d6: pop r13
0x135d8: pop r14
0x135da: pop r15
0x135dc: ret
0x135dd: nop qword ptr [rax]
0x135e0: mov edi,0x1038
0x135e5: call 0x12010
0x135ea: mov rbx,rax
0x135ed: mov [rax],0x0
0x135f4: lea rax,[rip-0x12b]
0x135fb: lea rdi,[rip+0x588e]
0x13602: xor esi,esi
0x13604: mov [rbx+0x10],0x0
0x1360c: mov qword ptr [rbx+0x8],rax
0x13610: mov [rbx+0x18],0x0
0x13618: xor eax,eax
0x1361a: call 0x2f60
0x1361f: test eax,eax
0x13621: lea r13,[rbx+0x20]
0x13625: mov r15d,eax
0x13628: js 0x136a8
0x1362a: cmp rbp,0x800
0x13631: mov rdx,rbp
0x13634: mov r14d,0x800
0x1363a: cmovnbe rdx,r14
0x1363e: mov ecx,0x1018
0x13643: mov rsi,r13
0x13646: mov edi,eax
0x13648: call 0x29b0
0x1364d: mov edi,r15d
0x13650: mov rbp,rax
0x13653: call 0x2c30
0x13658: cmp rbp,0x7ff
0x1365f: jle 0x13784
0x13665: mov rdi,r13
0x13668: call 0x13d00
0x1366d: jmp 0x135b7
0x13672: nop qword ptr [rax+rax*1+0x0]
0x13678: mov edi,0x1038
0x1367d: call 0x12010
0x13682: mov rbx,rax
0x13685: mov [rax],0x0
0x1368c: lea rax,[rip-0x1c3]
0x13693: mov [rbx+0x10],0x0
0x1369b: mov qword ptr [rbx+0x8],rax
0x1369f: jmp 0x135b7
0x136a4: nop qword ptr [rax+0x0]
0x136a8: lea r12,[rsp+0x10]
0x136ad: xor esi,esi
0x136af: mov r14d,0x18
0x136b5: mov rdi,r12
0x136b8: call 0x2bd0
0x136bd: movdqa xmm0,[rsp+0x10]
0x136c3: movups [rbx+0x20],xmm0
0x136c7: call 0x2a30
0x136cc: mov dword ptr [rbx+0x30],eax
0x136cf: mov dword ptr [rsp+0x10],eax
0x136d3: call 0x3020
0x136d8: mov dword ptr [rsp+0x10],eax
0x136dc: mov dword ptr [rbx+0x34],eax
0x136df: mov ebp,0x800
0x136e4: mov eax,0x4
0x136e9: sub rbp,r14
0x136ec: cmp rbp,0x4
0x136f0: cmovnbe rbp,rax
0x136f4: call 0x2b40
0x136f9: test ebp,ebp
0x136fb: mov dword ptr [rsp+0x10],eax
0x136ff: lea rcx,[r13+r14*1+0x0]
0x13704: mov esi,ebp
0x13706: jz 0x1371c
0x13708: xor eax,eax
0x1370a: mov edx,eax
0x1370c: add eax,0x1
0x1370f: movzx edi,byte ptr [r12+rdx*1+0x0]
0x13714: cmp eax,esi
0x13716: mov byte ptr [rcx+rdx*1+0x0],dil
0x1371a: jb 0x1370a
0x1371c: add rbp,r14
0x1371f: cmp rbp,0x7ff
0x13726: jnbe 0x13665
0x1372c: call 0x2dc0
0x13731: mov dword ptr [rsp+0x10],eax
0x13735: mov eax,0x800
0x1373a: mov edx,0x4
0x1373f: sub rax,rbp
0x13742: lea rcx,[r13+rbp*1+0x0]
0x13747: cmp rax,0x4
0x1374b: cmovnbe rax,rdx
0x1374f: test eax,eax
0x13751: mov esi,eax
0x13753: jz 0x13665
0x13759: xor eax,eax
0x1375b: mov edx,eax
0x1375d: add eax,0x1
0x13760: movzx edi,byte ptr [r12+rdx*1+0x0]
0x13765: cmp eax,esi
0x13767: mov byte ptr [rcx+rdx*1+0x0],dil
0x1376b: jb 0x1375b
0x1376d: jmp 0x13665
0x13772: nop qword ptr [rax+rax*1+0x0]
0x13778: xor ebx,ebx
0x1377a: jmp 0x135b7
0x1377f: call 0x2b30
0x13784: test rbp,rbp
0x13787: mov r15,r14
0x1378a: mov eax,0x10
0x1378f: cmovs rbp,r12
0x13793: lea r12,[rsp+0x10]
0x13798: sub r15,rbp
0x1379b: cmp r15,0x10
0x1379f: mov rdi,r12
0x137a2: cmovnbe r15,rax
0x137a6: xor esi,esi
0x137a8: call 0x2bd0
0x137ad: lea rax,[r13+rbp*1+0x0]
0x137b2: add rbp,r15
0x137b5: mov ecx,r15d
0x137b8: cmp rbp,0x7ff
0x137bf: mov rsi,r12
0x137c2: mov rdi,rax
0x137c5: rep movsb byte ptr es:[rdi],byte ptr ds:[rsi]
0x137c7: jnbe 0x13665
0x137cd: mov r15,r14
0x137d0: mov r8d,0x4
0x137d6: sub r15,rbp
0x137d9: mov qword ptr [rsp+0x8],r8
0x137de: cmp r15,0x4
0x137e2: cmovnbe r15,r8
0x137e6: lea rdx,[rbp+r15*1+0x0]
0x137eb: add rbp,r13
0x137ee: mov qword ptr [rsp],rdx
0x137f2: call 0x2a30
0x137f7: mov rdx,qword ptr [rsp]
0x137fb: mov dword ptr [rsp+0x10],eax
0x137ff: mov ecx,r15d
0x13802: mov rdi,rbp
0x13805: mov rsi,r12
0x13808: mov r8,qword ptr [rsp+0x8]
0x1380d: rep movsb byte ptr es:[rdi],byte ptr ds:[rsi]
0x1380f: cmp rdx,0x7ff
0x13816: jnle 0x13665
0x1381c: sub r14,rdx
0x1381f: cmp r14,0x4
0x13823: cmovnbe r14,r8
0x13827: call 0x3020
0x1382c: mov rdx,qword ptr [rsp]
0x13830: mov dword ptr [rsp+0x10],eax
0x13834: mov ecx,r14d
0x13837: mov rsi,r12
0x1383a: lea rax,[r13+rdx*1+0x0]
0x1383f: add r14,rdx
0x13842: cmp r14,0x7ff
0x13849: mov rdi,rax
0x1384c: rep movsb byte ptr es:[rdi],byte ptr ds:[rsi]
0x1384e: jnbe 0x13665
0x13854: jmp 0x136df
0x13860: mov qword ptr [rdi+0x8],rsi
0x13864: ret
0x13870: mov qword ptr [rdi+0x10],rsi
0x13874: ret
0x13880: push r15
0x13882: push r14
0x13884: push r13
0x13886: push r12
0x13888: mov r12,rdi
0x1388b: push rbp
0x1388c: push rbx
0x1388d: mov rbp,rdx
0x13890: mov rbx,rsi
0x13893: sub rsp,0x18
0x13897: mov rcx,qword ptr [rdi]
0x1389a: test rcx,rcx
0x1389d: mov qword ptr [rsp+0x8],rcx
0x138a2: jz 0x13908
0x138a4: call 0x2950
0x138a9: mov rcx,qword ptr [rsp+0x8]
0x138ae: mov r13,rax
0x138b1: jmp 0x138d6
0x138b3: nop qword ptr [rax+rax*1+0x0]
0x138b8: mov rax,qword ptr [r12]
0x138bc: mov rdi,qword ptr [r12+0x10]
0x138c1: mov eax,dword ptr [rax]
0x138c3: and eax,0x20
0x138c6: cmovne eax,edx
0x138c9: mov dword ptr [r13+0x0],eax
0x138cd: call qword ptr [r12+0x8]
0x138d2: mov rcx,qword ptr [r12]
0x138d6: mov rdx,rbp
0x138d9: mov rdi,rbx
0x138dc: mov esi,0x1
0x138e1: call 0x2a40
0x138e6: add rbx,rax
0x138e9: sub rbp,rax
0x138ec: mov edx,dword ptr [r13+0x0]
0x138f0: jnz 0x138b8
0x138f2: add rsp,0x18
0x138f6: pop rbx
0x138f7: pop rbp
0x138f8: pop r12
0x138fa: pop r13
0x138fc: pop r14
0x138fe: pop r15
0x13900: ret
0x13901: nop qword ptr [rax+0x0]
0x13908: mov r14,qword ptr [rdi+0x18]
0x1390c: lea rax,[rdi+0x838]
0x13913: lea r13,[rdi+0x20]
0x13917: mov qword ptr [rsp+0x8],rax
0x1391c: cmp rdx,r14
0x1391f: jbe 0x13a02
0x13925: mov esi,0x800
0x1392a: mov rdi,rbx
0x1392d: mov rdx,r14
0x13930: sub rsi,r14
0x13933: add rsi,qword ptr [rsp+0x8]
0x13938: add rbx,r14
0x1393b: sub rbp,r14
0x1393e: call 0x2d80
0x13943: test bl,0x7
0x13946: jnz 0x139b0
0x13948: cmp rbp,0x7ff
0x1394f: jbe 0x139f3
0x13955: lea r15,[rbp-0x800]
0x1395c: mov r14,r15
0x1395f: and r14d,0x7ff
0x13966: jmp 0x1397c
0x13968: nop qword ptr [rax+rax*1+0x0]
0x13970: cmp r15,r14
0x13973: jz 0x139b0
0x13975: sub r15,0x800
0x1397c: mov rsi,rbx
0x1397f: mov rdi,r13
0x13982: add rbx,0x800
0x13989: call 0x13a70
0x1398e: test r15,r15
0x13991: mov rbp,r15
0x13994: jnz 0x13970
0x13996: mov [r12+0x18],0x0
0x1399f: add rsp,0x18
0x139a3: pop rbx
0x139a4: pop rbp
0x139a5: pop r12
0x139a7: pop r13
0x139a9: pop r14
0x139ab: pop r15
0x139ad: ret
0x139ae: nop 
0x139b0: mov rsi,qword ptr [rsp+0x8]
0x139b5: mov rdi,r13
0x139b8: mov r14d,0x800
0x139be: call 0x13a70
0x139c3: cmp rbp,0x800
0x139ca: jnbe 0x13925
0x139d0: mov r14d,0x800
0x139d6: mov rsi,qword ptr [rsp+0x8]
0x139db: mov rdx,rbp
0x139de: mov rdi,rbx
0x139e1: sub r14,rbp
0x139e4: call 0x2d80
0x139e9: mov qword ptr [r12+0x18],r14
0x139ee: jmp 0x138f2
0x139f3: mov rsi,qword ptr [rsp+0x8]
0x139f8: mov rdi,r13
0x139fb: call 0x13a70
0x13a00: jmp 0x139d0
0x13a02: mov r15,rax
0x13a05: sub r15,r14
0x13a08: lea rax,[r15+0x800]
0x13a0f: mov qword ptr [rsp+0x8],rax
0x13a14: jmp 0x139d6
0x13a20: push rbp
0x13a21: push rbx
0x13a22: mov rdx,0xffffffff
0x13a29: mov rbx,rdi
0x13a2c: mov esi,0x1038
0x13a31: sub rsp,0x8
0x13a35: mov rbp,qword ptr [rdi]
0x13a38: call 0x2f50
0x13a3d: mov rdi,rbx
0x13a40: call 0x30d0
0x13a45: test rbp,rbp
0x13a48: jz 0x13a60
0x13a4a: add rsp,0x8
0x13a4e: mov rdi,rbp
0x13a51: pop rbx
0x13a52: pop rbp
0x13a53: jmp 0x13f50
0x13a58: nop qword ptr [rax+rax*1+0x0]
0x13a60: add rsp,0x8
0x13a64: xor eax,eax
0x13a66: pop rbx
0x13a67: pop rbp
0x13a68: ret
0x13a70: mov rax,qword ptr [rdi+0x810]
0x13a77: mov rdx,qword ptr [rdi+0x800]
0x13a7e: lea r9,[rdi+0x400]
0x13a85: lea rcx,[rax+0x1]
0x13a89: mov rax,rdi
0x13a8c: mov qword ptr [rdi+0x810],rcx
0x13a93: add rcx,qword ptr [rdi+0x808]
0x13a9a: nop qword ptr [rax+rax*1+0x0]
0x13aa0: mov r8,rdx
0x13aa3: shl r8,0x15
0x13aa7: xor rdx,r8
0x13aaa: mov r8,qword ptr [rax]
0x13aad: not rdx
0x13ab0: add rdx,qword ptr [rax+0x400]
0x13ab7: mov r10,r8
0x13aba: and r10d,0x7f8
0x13ac1: mov r11,qword ptr [rdi+r10*1+0x0]
0x13ac5: mov r10,rdx
0x13ac8: shr r10,0x5
0x13acc: add r11,rdx
0x13acf: xor rdx,r10
0x13ad2: add rcx,r11
0x13ad5: mov qword ptr [rax],rcx
0x13ad8: shr rcx,0x8
0x13adc: and ecx,0x7f8
0x13ae2: mov r11,qword ptr [rdi+rcx*1+0x0]
0x13ae6: add r11,r8
0x13ae9: mov qword ptr [rsi],r11
0x13aec: add rdx,qword ptr [rax+0x408]
0x13af3: mov rcx,qword ptr [rax+0x8]
0x13af7: mov r10,rdx
0x13afa: mov rdx,rcx
0x13afd: and edx,0x7f8
0x13b03: mov r8,qword ptr [rdi+rdx*1+0x0]
0x13b07: mov rdx,r10
0x13b0a: shl rdx,0xc
0x13b0e: xor rdx,r10
0x13b11: add r8,r10
0x13b14: add r8,r11
0x13b17: mov qword ptr [rax+0x8],r8
0x13b1b: shr r8,0x8
0x13b1f: and r8d,0x7f8
0x13b26: add rcx,qword ptr [rdi+r8*1+0x0]
0x13b2a: mov qword ptr [rsi+0x8],rcx
0x13b2e: mov r8,qword ptr [rax+0x10]
0x13b32: mov r11,rcx
0x13b35: add rdx,qword ptr [rax+0x410]
0x13b3c: mov rcx,r8
0x13b3f: and ecx,0x7f8
0x13b45: mov r10,qword ptr [rdi+rcx*1+0x0]
0x13b49: add r10,rdx
0x13b4c: mov rcx,r10
0x13b4f: add rcx,r11
0x13b52: mov qword ptr [rax+0x10],rcx
0x13b56: shr rcx,0x8
0x13b5a: and ecx,0x7f8
0x13b60: mov r10,qword ptr [rdi+rcx*1+0x0]
0x13b64: mov rcx,rdx
0x13b67: shr rcx,0x21
0x13b6b: xor rdx,rcx
0x13b6e: add r10,r8
0x13b71: mov qword ptr [rsi+0x10],r10
0x13b75: mov rcx,qword ptr [rax+0x18]
0x13b79: add rdx,qword ptr [rax+0x418]
0x13b80: mov r8,rcx
0x13b83: and r8d,0x7f8
0x13b8a: mov r11,qword ptr [rdi+r8*1+0x0]
0x13b8e: add r11,rdx
0x13b91: mov r8,r11
0x13b94: add r8,r10
0x13b97: add rax,0x20
0x13b9b: add rsi,0x20
0x13b9f: mov qword ptr [rax-0x8],r8
0x13ba3: shr r8,0x8
0x13ba7: and r8d,0x7f8
0x13bae: add rcx,qword ptr [rdi+r8*1+0x0]
0x13bb2: mov qword ptr [rsi-0x8],rcx
0x13bb6: cmp rax,r9
0x13bb9: jb 0x13aa0
0x13bbf: lea r9,[rdi+0x800]
0x13bc6: nop qword ptr [rax+rax*1+0x0]
0x13bd0: mov r8,rdx
0x13bd3: shl r8,0x15
0x13bd7: xor rdx,r8
0x13bda: mov r8,qword ptr [rax]
0x13bdd: not rdx
0x13be0: add rdx,qword ptr [rax-0x400]
0x13be7: mov r10,r8
0x13bea: and r10d,0x7f8
0x13bf1: mov r11,qword ptr [rdi+r10*1+0x0]
0x13bf5: mov r10,rdx
0x13bf8: shr r10,0x5
0x13bfc: add r11,rdx
0x13bff: xor rdx,r10
0x13c02: add rcx,r11
0x13c05: mov qword ptr [rax],rcx
0x13c08: shr rcx,0x8
0x13c0c: and ecx,0x7f8
0x13c12: mov r11,qword ptr [rdi+rcx*1+0x0]
0x13c16: add r11,r8
0x13c19: mov qword ptr [rsi],r11
0x13c1c: add rdx,qword ptr [rax-0x3f8]
0x13c23: mov rcx,qword ptr [rax+0x8]
0x13c27: mov r10,rdx
0x13c2a: mov rdx,rcx
0x13c2d: and edx,0x7f8
0x13c33: mov r8,qword ptr [rdi+rdx*1+0x0]
0x13c37: mov rdx,r10
0x13c3a: shl rdx,0xc
0x13c3e: xor rdx,r10
0x13c41: add r8,r10
0x13c44: add r8,r11
0x13c47: mov qword ptr [rax+0x8],r8
0x13c4b: shr r8,0x8
0x13c4f: and r8d,0x7f8
0x13c56: add rcx,qword ptr [rdi+r8*1+0x0]
0x13c5a: mov qword ptr [rsi+0x8],rcx
0x13c5e: mov r8,qword ptr [rax+0x10]
0x13c62: mov r11,rcx
0x13c65: add rdx,qword ptr [rax-0x3f0]
0x13c6c: mov rcx,r8
0x13c6f: and ecx,0x7f8
0x13c75: mov r10,qword ptr [rdi+rcx*1+0x0]
0x13c79: add r10,rdx
0x13c7c: mov rcx,r10
0x13c7f: add rcx,r11
0x13c82: mov qword ptr [rax+0x10],rcx
0x13c86: shr rcx,0x8
0x13c8a: and ecx,0x7f8
0x13c90: mov r10,qword ptr [rdi+rcx*1+0x0]
0x13c94: mov rcx,rdx
0x13c97: shr rcx,0x21
0x13c9b: xor rdx,rcx
0x13c9e: add r10,r8
0x13ca1: mov qword ptr [rsi+0x10],r10
0x13ca5: mov rcx,qword ptr [rax+0x18]
0x13ca9: add rdx,qword ptr [rax-0x3e8]
0x13cb0: mov r8,rcx
0x13cb3: and r8d,0x7f8
0x13cba: mov r11,qword ptr [rdi+r8*1+0x0]
0x13cbe: add r11,rdx
0x13cc1: mov r8,r11
0x13cc4: add r8,r10
0x13cc7: add rax,0x20
0x13ccb: add rsi,0x20
0x13ccf: mov qword ptr [rax-0x8],r8
0x13cd3: shr r8,0x8
0x13cd7: and r8d,0x7f8
0x13cde: add rcx,qword ptr [rdi+r8*1+0x0]
0x13ce2: mov qword ptr [rsi-0x8],rcx
0x13ce6: cmp rax,r9
0x13ce9: jb 0x13bd0
0x13cef: mov qword ptr [rdi+0x800],rdx
0x13cf6: mov qword ptr [rdi+0x808],rcx
0x13cfd: ret
0x13d00: push r13
0x13d02: push r12
0x13d04: lea r12,[rdi+0x800]
0x13d0b: push rbp
0x13d0c: mov rdx,rdi
0x13d0f: push rbx
0x13d10: mov rax,rdi
0x13d13: mov rcx,-0x7424904924229222229
0x13d1d: mov r10,-0x5865837416287532563
0x13d27: mov rbp,0x5259722845879046933
0x13d31: mov rsi,-0x9011610652101975858
0x13d3b: mov r8,-0x5576812576440232668
0x13d45: mov rbx,-0x8354558816804203872
0x13d4f: mov r11,-0x5046086420515862430
0x13d59: mov r9,0x7240739780546808700
0x13d63: nop qword ptr [rax+rax*1+0x0]
0x13d68: add rsi,qword ptr [rax+0x20]
0x13d6c: add rcx,qword ptr [rax+0x38]
0x13d70: mov r13,qword ptr [rax]
0x13d73: add rbp,qword ptr [rax+0x28]
0x13d77: add r10,qword ptr [rax+0x30]
0x13d7b: sub r13,rsi
0x13d7e: add r9,r13
0x13d81: mov r13,rcx
0x13d84: shr r13,0x9
0x13d88: add rcx,r9
0x13d8b: xor rbp,r13
0x13d8e: mov r13,qword ptr [rax+0x8]
0x13d92: sub r13,rbp
0x13d95: add r11,r13
0x13d98: mov r13,r9
0x13d9b: shl r13,0x9
0x13d9f: add r9,r11
0x13da2: xor r10,r13
0x13da5: mov r13,qword ptr [rax+0x10]
0x13da9: sub r13,r10
0x13dac: add rbx,r13
0x13daf: mov r13,r11
0x13db2: shr r13,0x17
0x13db6: add r11,rbx
0x13db9: xor rcx,r13
0x13dbc: mov r13,qword ptr [rax+0x18]
0x13dc0: sub r13,rcx
0x13dc3: add r8,r13
0x13dc6: mov r13,rbx
0x13dc9: shl r13,0xf
0x13dcd: add rbx,r8
0x13dd0: xor r9,r13
0x13dd3: mov r13,r8
0x13dd6: sub rsi,r9
0x13dd9: shr r13,0xe
0x13ddd: mov qword ptr [rax],r9
0x13de0: xor r11,r13
0x13de3: mov r13,rsi
0x13de6: add r8,rsi
0x13de9: sub rbp,r11
0x13dec: shl r13,0x14
0x13df0: mov qword ptr [rax+0x8],r11
0x13df4: xor rbx,r13
0x13df7: lea r13,[rsi+rbp*1+0x0]
0x13dfb: mov rsi,rbp
0x13dfe: sub r10,rbx
0x13e01: shr rsi,0x11
0x13e05: mov qword ptr [rax+0x10],rbx
0x13e09: xor r8,rsi
0x13e0c: mov rsi,r10
0x13e0f: add rbp,r10
0x13e12: sub rcx,r8
0x13e15: shl rsi,0xe
0x13e19: mov qword ptr [rax+0x18],r8
0x13e1d: xor rsi,r13
0x13e20: add r10,rcx
0x13e23: mov qword ptr [rax+0x28],rbp
0x13e27: mov qword ptr [rax+0x20],rsi
0x13e2b: mov qword ptr [rax+0x30],r10
0x13e2f: add rax,0x40
0x13e33: mov qword ptr [rax-0x8],rcx
0x13e37: cmp r12,rax
0x13e3a: jnz 0x13d68
0x13e40: add rsi,qword ptr [rdx+0x20]
0x13e44: add rcx,qword ptr [rdx+0x38]
0x13e48: mov r12,qword ptr [rdx]
0x13e4b: add rbp,qword ptr [rdx+0x28]
0x13e4f: add r10,qword ptr [rdx+0x30]
0x13e53: sub r12,rsi
0x13e56: add r9,r12
0x13e59: mov r12,rcx
0x13e5c: shr r12,0x9
0x13e60: add rcx,r9
0x13e63: xor rbp,r12
0x13e66: mov r12,qword ptr [rdx+0x8]
0x13e6a: sub r12,rbp
0x13e6d: add r11,r12
0x13e70: mov r12,r9
0x13e73: shl r12,0x9
0x13e77: add r9,r11
0x13e7a: xor r10,r12
0x13e7d: mov r12,qword ptr [rdx+0x10]
0x13e81: sub r12,r10
0x13e84: add rbx,r12
0x13e87: mov r12,r11
0x13e8a: shr r12,0x17
0x13e8e: add r11,rbx
0x13e91: xor rcx,r12
0x13e94: mov r12,qword ptr [rdx+0x18]
0x13e98: sub r12,rcx
0x13e9b: add r8,r12
0x13e9e: mov r12,rbx
0x13ea1: shl r12,0xf
0x13ea5: add rbx,r8
0x13ea8: xor r9,r12
0x13eab: mov r12,r8
0x13eae: sub rsi,r9
0x13eb1: shr r12,0xe
0x13eb5: mov qword ptr [rdx],r9
0x13eb8: xor r11,r12
0x13ebb: mov r12,rsi
0x13ebe: add r8,rsi
0x13ec1: sub rbp,r11
0x13ec4: shl r12,0x14
0x13ec8: mov qword ptr [rdx+0x8],r11
0x13ecc: xor rbx,r12
0x13ecf: lea r12,[rsi+rbp*1+0x0]
0x13ed3: mov rsi,rbp
0x13ed6: sub r10,rbx
0x13ed9: shr rsi,0x11
0x13edd: mov qword ptr [rdx+0x10],rbx
0x13ee1: xor r8,rsi
0x13ee4: mov rsi,r10
0x13ee7: add rbp,r10
0x13eea: sub rcx,r8
0x13eed: shl rsi,0xe
0x13ef1: mov qword ptr [rdx+0x18],r8
0x13ef5: xor rsi,r12
0x13ef8: add r10,rcx
0x13efb: mov qword ptr [rdx+0x28],rbp
0x13eff: mov qword ptr [rdx+0x20],rsi
0x13f03: mov qword ptr [rdx+0x30],r10
0x13f07: add rdx,0x40
0x13f0b: mov qword ptr [rdx-0x8],rcx
0x13f0f: cmp rax,rdx
0x13f12: jnz 0x13e40
0x13f18: pop rbx
0x13f19: mov [rdi+0x810],0x0
0x13f24: mov [rdi+0x808],0x0
0x13f2f: pop rbp
0x13f30: mov [rdi+0x800],0x0
0x13f3b: pop r12
0x13f3d: pop r13
0x13f3f: ret
0x13f40: mov edx,0x3
0x13f45: xor esi,esi
0x13f47: xor eax,eax
0x13f49: jmp 0x13fd0
0x13f50: push r12
0x13f52: push rbp
0x13f53: push rbx
0x13f54: mov rbx,rdi
0x13f57: call 0x2db0
0x13f5c: test eax,eax
0x13f5e: mov rdi,rbx
0x13f61: js 0x13fb7
0x13f63: call 0x2e50
0x13f68: test eax,eax
0x13f6a: jnz 0x13f98
0x13f6c: mov rdi,rbx
0x13f6f: call 0x12760
0x13f74: test eax,eax
0x13f76: jz 0x13fb4
0x13f78: call 0x2950
0x13f7d: mov r12d,dword ptr [rax]
0x13f80: mov rdi,rbx
0x13f83: mov rbp,rax
0x13f86: call 0x2a80
0x13f8b: test r12d,r12d
0x13f8e: jnz 0x13fc0
0x13f90: pop rbx
0x13f91: pop rbp
0x13f92: pop r12
0x13f94: ret
0x13f95: nop qword ptr [rax]
0x13f98: mov rdi,rbx
0x13f9b: call 0x2db0
0x13fa0: xor esi,esi
0x13fa2: mov edx,0x1
0x13fa7: mov edi,eax
0x13fa9: call 0x2bc0
0x13fae: cmp rax,0xffffffff
0x13fb2: jnz 0x13f6c
0x13fb4: mov rdi,rbx
0x13fb7: pop rbx
0x13fb8: pop rbp
0x13fb9: pop r12
0x13fbb: jmp 0x2a80
0x13fc0: mov dword ptr [rbp+0x0],r12d
0x13fc4: mov eax,0xffffffff
0x13fc9: jmp 0x13f90
0x13fd0: push r12
0x13fd2: push rbp
0x13fd3: mov ebp,edi
0x13fd5: push rbx
0x13fd6: sub rsp,0x50
0x13fda: mov rax,0x28
0x13fe3: mov qword ptr [rsp+0x18],rax
0x13fe8: xor eax,eax
0x13fea: lea rax,[rsp+0x70]
0x13fef: test esi,esi
0x13ff1: mov qword ptr [rsp+0x30],rdx
0x13ff6: mov qword ptr [rsp+0x38],rcx
0x13ffb: mov qword ptr [rsp+0x40],r8
0x14000: mov qword ptr [rsp+0x8],rax
0x14005: lea rax,[rsp+0x20]
0x1400a: mov qword ptr [rsp+0x48],r9
0x1400f: mov [rsp],0x10
0x14016: mov qword ptr [rsp+0x10],rax
0x1401b: jz 0x14222
0x14021: cmp esi,0x406
0x14027: jnz 0x14070
0x14029: mov rax,qword ptr [rsp+0x10]
0x1402e: cmp [rip+0x20b6ff],0x0
0x14035: mov [rsp],0x18
0x1403c: mov r12d,dword ptr [rax+0x10]
0x14040: mov edx,r12d
0x14043: js 0x14173
0x14049: xor eax,eax
0x1404b: mov esi,0x406
0x14050: call 0x2a00
0x14055: test eax,eax
0x14057: mov ebx,eax
0x14059: js 0x141e8
0x1405f: mov [rip+0x20b6cb],0x1
0x14069: jmp 0x140b0
0x1406b: nop qword ptr [rax+rax*1+0x0]
0x14070: cmp esi,0xb
0x14073: jz 0x140a0
0x14075: jnle 0x140d0
0x14077: cmp esi,0x4
0x1407a: jz 0x14150
0x14080: jnle 0x14140
0x14086: cmp esi,0x2
0x14089: jz 0x14150
0x1408f: jnle 0x140a0
0x14091: cmp esi,0x1
0x14094: jnz 0x140f8
0x14096: nop qword ptr [rax+rax*1+0x0]
0x140a0: mov edi,ebp
0x140a2: xor eax,eax
0x140a4: call 0x2a00
0x140a9: mov ebx,eax
0x140ab: nop qword ptr [rax+rax*1+0x0]
0x140b0: mov rcx,qword ptr [rsp+0x18]
0x140b5: xor rcx,0x28
0x140be: mov eax,ebx
0x140c0: jnz 0x1421d
0x140c6: add rsp,0x50
0x140ca: pop rbx
0x140cb: pop rbp
0x140cc: pop r12
0x140ce: ret
0x140cf: nop 
0x140d0: cmp esi,0x407
0x140d6: jnle 0x14120
0x140d8: cmp esi,0x406
0x140de: jnl 0x14150
0x140e0: cmp esi,0x401
0x140e6: jz 0x140a0
0x140e8: cmp esi,0x402
0x140ee: jz 0x14150
0x140f0: cmp esi,0x400
0x140f6: jz 0x14150
0x140f8: mov eax,dword ptr [rsp]
0x140fb: cmp eax,0x2f
0x140fe: jnbe 0x1423a
0x14104: add rax,qword ptr [rsp+0x10]
0x14109: mov rdx,qword ptr [rax]
0x1410c: mov edi,ebp
0x1410e: xor eax,eax
0x14110: call 0x2a00
0x14115: mov ebx,eax
0x14117: jmp 0x140b0
0x14119: nop qword ptr [rax+0x0]
0x14120: cmp esi,0x409
0x14126: jz 0x14150
0x14128: jl 0x140a0
0x1412e: cmp esi,0x40a
0x14134: jnz 0x140f8
0x14136: jmp 0x140a0
0x1413b: nop qword ptr [rax+rax*1+0x0]
0x14140: cmp esi,0x9
0x14143: jz 0x140a0
0x14149: jnle 0x14150
0x1414b: cmp esi,0x8
0x1414e: jnz 0x140f8
0x14150: mov eax,dword ptr [rsp]
0x14153: cmp eax,0x2f
0x14156: jnbe 0x14244
0x1415c: add rax,qword ptr [rsp+0x10]
0x14161: mov edx,dword ptr [rax]
0x14163: mov edi,ebp
0x14165: xor eax,eax
0x14167: call 0x2a00
0x1416c: mov ebx,eax
0x1416e: jmp 0x140b0
0x14173: xor esi,esi
0x14175: xor eax,eax
0x14177: call 0x2a00
0x1417c: test eax,eax
0x1417e: mov ebx,eax
0x14180: js 0x140b0
0x14186: cmp [rip+0x20b5a7],0xff
0x1418d: jnz 0x140b0
0x14193: xor eax,eax
0x14195: mov esi,0x1
0x1419a: mov edi,ebx
0x1419c: call 0x2a00
0x141a1: test eax,eax
0x141a3: js 0x141c1
0x141a5: or eax,0x1
0x141a8: mov esi,0x2
0x141ad: mov edi,ebx
0x141af: mov edx,eax
0x141b1: xor eax,eax
0x141b3: call 0x2a00
0x141b8: cmp eax,0xff
0x141bb: jnz 0x140b0
0x141c1: call 0x2950
0x141c6: mov r12d,dword ptr [rax]
0x141c9: mov rbp,rax
0x141cc: mov edi,ebx
0x141ce: call 0x2c30
0x141d3: mov ebx,0xffffffff
0x141d8: mov dword ptr [rbp+0x0],r12d
0x141dc: jmp 0x140b0
0x141e1: nop qword ptr [rax+0x0]
0x141e8: call 0x2950
0x141ed: cmp [rax],0x16
0x141f0: jnz 0x1405f
0x141f6: xor esi,esi
0x141f8: xor eax,eax
0x141fa: mov edx,r12d
0x141fd: mov edi,ebp
0x141ff: call 0x2a00
0x14204: test eax,eax
0x14206: mov ebx,eax
0x14208: js 0x140b0
0x1420e: mov [rip+0x20b51c],0xffffffff
0x14218: jmp 0x14193
0x1421d: call 0x2b30
0x14222: mov rax,qword ptr [rsp+0x10]
0x14227: xor esi,esi
0x14229: mov edx,dword ptr [rax+0x10]
0x1422c: xor eax,eax
0x1422e: call 0x2a00
0x14233: mov ebx,eax
0x14235: jmp 0x140b0
0x1423a: mov rax,qword ptr [rsp+0x8]
0x1423f: jmp 0x14109
0x14244: mov rax,qword ptr [rsp+0x8]
0x14249: jmp 0x14161
0x14250: or [rdi],0x20
0x14253: ret
0x14260: push rbp
0x14261: mov rbp,rsp
0x14264: push r15
0x14266: push r14
0x14268: push r13
0x1426a: push r12
0x1426c: lea r14,[rbp-0x3b0]
0x14273: push rbx
0x14274: mov rbx,rdx
0x14277: mov r12,rcx
0x1427a: mov rdx,r14
0x1427d: sub rsp,0x408
0x14284: mov qword ptr [rbp-0x418],rsi
0x1428b: lea rsi,[rbp-0x2c0]
0x14292: mov qword ptr [rbp-0x3e8],rdi
0x14299: mov rdi,rbx
0x1429c: mov qword ptr [rbp-0x410],r14
0x142a3: mov rax,0x28
0x142ac: mov qword ptr [rbp-0x38],rax
0x142b0: xor eax,eax
0x142b2: mov qword ptr [rbp-0x408],rsi
0x142b9: call 0x15620
0x142be: test eax,eax
0x142c0: js 0x15128
0x142c6: mov rsi,r14
0x142c9: mov rdi,r12
0x142cc: call 0x15420
0x142d1: test eax,eax
0x142d3: js 0x15190
0x142d9: mov rax,qword ptr [rbp-0x2b0]
0x142e0: mov rdx,0xffffffff
0x142e7: add rax,0x7
0x142eb: cmp rax,0x6
0x142ef: cmovbe rax,rdx
0x142f3: add rax,qword ptr [rbp-0x2a8]
0x142fa: jb 0x14d28
0x14300: mov rdi,rax
0x14303: xor r8d,r8d
0x14306: add rdi,0x6
0x1430a: setb r8b
0x1430e: jb 0x14d28
0x14314: cmp rdi,0xf9f
0x1431b: jbe 0x14468
0x14321: cmp rdi,0xffffffff
0x14325: mov qword ptr [rbp-0x3c8],r8
0x1432c: jz 0x14d28
0x14332: call 0x2df0
0x14337: test rax,rax
0x1433a: mov qword ptr [rbp-0x3d8],rax
0x14341: jz 0x14d28
0x14347: mov r8,qword ptr [rbp-0x3c8]
0x1434e: mov qword ptr [rbp-0x420],rax
0x14355: xor r12d,r12d
0x14358: cmp [rbp-0x3e8],0x0
0x14360: jz 0x1436c
0x14362: mov rax,qword ptr [rbp-0x418]
0x14369: mov r12,qword ptr [rax]
0x1436c: mov r13,qword ptr [rbp-0x2b8]
0x14373: lea rax,[rbp-0x3bc]
0x1437a: mov r15,qword ptr [rbp-0x3e8]
0x14381: mov [rbp-0x400],0x0
0x1438c: mov qword ptr [rbp-0x3f0],rax
0x14393: mov rax,rbx
0x14396: mov rbx,r8
0x14399: mov rcx,qword ptr [r13+0x0]
0x1439d: mov r8,rax
0x143a0: cmp rcx,r8
0x143a3: jz 0x14d11
0x143a9: sub rcx,r8
0x143ac: mov rax,rbx
0x143af: add rax,rcx
0x143b2: mov r14,rax
0x143b5: jnb 0x14498
0x143bb: cmp r12,0xffffffff
0x143bf: jz 0x14e90
0x143c5: call 0x2950
0x143ca: mov qword ptr [rbp-0x3c8],rax
0x143d1: cmp r15,qword ptr [rbp-0x3e8]
0x143d8: jz 0x143e3
0x143da: test r15,r15
0x143dd: jnz 0x14ec0
0x143e3: mov rax,qword ptr [rbp-0x420]
0x143ea: test rax,rax
0x143ed: jz 0x143f7
0x143ef: mov rdi,rax
0x143f2: call 0x30d0
0x143f7: mov rax,qword ptr [rbp-0x408]
0x143fe: mov rdi,qword ptr [rbp-0x2b8]
0x14405: add rax,0x20
0x14409: cmp rdi,rax
0x1440c: jz 0x14413
0x1440e: call 0x30d0
0x14413: mov rax,qword ptr [rbp-0x410]
0x1441a: mov rdi,qword ptr [rbp-0x3a8]
0x14421: add rax,0x10
0x14425: cmp rdi,rax
0x14428: jz 0x1442f
0x1442a: call 0x30d0
0x1442f: mov rax,qword ptr [rbp-0x3c8]
0x14436: xor r15d,r15d
0x14439: mov [rax],0xc
0x1443f: mov rdi,qword ptr [rbp-0x38]
0x14443: xor rdi,0x28
0x1444c: mov rax,r15
0x1444f: jnz 0x15357
0x14455: lea rsp,[rbp-0x28]
0x14459: pop rbx
0x1445a: pop r12
0x1445c: pop r13
0x1445e: pop r14
0x14460: pop r15
0x14462: pop rbp
0x14463: ret
0x14464: nop qword ptr [rax+0x0]
0x14468: add rax,0x24
0x1446c: mov [rbp-0x420],0x0
0x14477: and rax,0xfffffff0
0x1447b: sub rsp,rax
0x1447e: lea rax,[rsp+0xf]
0x14483: and rax,0xfffffff0
0x14487: mov qword ptr [rbp-0x3d8],rax
0x1448e: jmp 0x14355
0x14493: nop qword ptr [rax+rax*1+0x0]
0x14498: cmp r12,rax
0x1449b: jnb 0x14504
0x1449d: test r12,r12
0x144a0: jnz 0x14dd0
0x144a6: cmp rax,0xc
0x144aa: jnbe 0x14de2
0x144b0: mov r12d,0xc
0x144b6: cmp r15,qword ptr [rbp-0x3e8]
0x144bd: setz dl
0x144c0: test r15,r15
0x144c3: jz 0x14e08
0x144c9: test dl,dl
0x144cb: jnz 0x14e08
0x144d1: mov rsi,r12
0x144d4: mov rdi,r15
0x144d7: mov qword ptr [rbp-0x3d0],r8
0x144de: mov qword ptr [rbp-0x3c8],rcx
0x144e5: call 0x2e90
0x144ea: test rax,rax
0x144ed: mov rcx,qword ptr [rbp-0x3c8]
0x144f4: mov r8,qword ptr [rbp-0x3d0]
0x144fb: jz 0x14eab
0x14501: mov r15,rax
0x14504: lea rdi,[r15+rbx*1+0x0]
0x14508: mov rdx,rcx
0x1450b: mov rsi,r8
0x1450e: call 0x2d80
0x14513: mov rax,qword ptr [rbp-0x400]
0x1451a: cmp qword ptr [rbp-0x2c0],rax
0x14521: jz 0x151db
0x14527: movzx edx,byte ptr [r13+0x48]
0x1452c: mov rax,qword ptr [r13+0x50]
0x14530: cmp dl,0x25
0x14533: jz 0x14cc8
0x14539: cmp rax,0xffffffff
0x1453d: jz 0x15186
0x14543: mov r8,qword ptr [rbp-0x3a8]
0x1454a: shl rax,0x5
0x1454e: add rax,r8
0x14551: cmp dl,0x6e
0x14554: mov edi,dword ptr [rax]
0x14556: mov dword ptr [rbp-0x3d0],edi
0x1455c: jz 0x14d40
0x14562: mov eax,dword ptr [r13+0x10]
0x14566: mov rdi,qword ptr [rbp-0x3d8]
0x1456d: test al,0x1
0x1456f: mov [rdi],0x25
0x14572: lea rbx,[rdi+0x1]
0x14576: jz 0x14587
0x14578: mov rdi,qword ptr [rbp-0x3d8]
0x1457f: lea rbx,[rdi+0x2]
0x14583: mov [rdi+0x1],0x27
0x14587: test al,0x2
0x14589: jz 0x14592
0x1458b: mov [rbx],0x2d
0x1458e: add rbx,0x1
0x14592: test al,0x4
0x14594: jz 0x1459d
0x14596: mov [rbx],0x2b
0x14599: add rbx,0x1
0x1459d: test al,0x8
0x1459f: jz 0x145a8
0x145a1: mov [rbx],0x20
0x145a4: add rbx,0x1
0x145a8: test al,0x10
0x145aa: jz 0x145b3
0x145ac: mov [rbx],0x23
0x145af: add rbx,0x1
0x145b3: test al,0x40
0x145b5: jz 0x145be
0x145b7: mov [rbx],0x49
0x145ba: add rbx,0x1
0x145be: test al,0x20
0x145c0: jz 0x145c9
0x145c2: mov [rbx],0x30
0x145c5: add rbx,0x1
0x145c9: mov rsi,qword ptr [r13+0x18]
0x145cd: mov rdx,qword ptr [r13+0x20]
0x145d1: cmp rsi,rdx
0x145d4: jz 0x14606
0x145d6: mov rcx,rdx
0x145d9: mov rdi,rbx
0x145dc: mov qword ptr [rbp-0x3e0],r8
0x145e3: sub rcx,rsi
0x145e6: mov rdx,rcx
0x145e9: mov qword ptr [rbp-0x3c8],rcx
0x145f0: call 0x2d80
0x145f5: mov rcx,qword ptr [rbp-0x3c8]
0x145fc: mov r8,qword ptr [rbp-0x3e0]
0x14603: add rbx,rcx
0x14606: mov rsi,qword ptr [r13+0x30]
0x1460a: mov rdx,qword ptr [r13+0x38]
0x1460e: cmp rsi,rdx
0x14611: jz 0x14643
0x14613: mov rcx,rdx
0x14616: mov rdi,rbx
0x14619: mov qword ptr [rbp-0x3e0],r8
0x14620: sub rcx,rsi
0x14623: mov rdx,rcx
0x14626: mov qword ptr [rbp-0x3c8],rcx
0x1462d: call 0x2d80
0x14632: mov rcx,qword ptr [rbp-0x3c8]
0x14639: mov r8,qword ptr [rbp-0x3e0]
0x14640: add rbx,rcx
0x14643: mov edi,dword ptr [rbp-0x3d0]
0x14649: cmp edi,0x10
0x1464c: jnbe 0x1467b
0x1464e: mov eax,0x1
0x14653: mov ecx,edi
0x14655: shl rax,cl
0x14658: test eax,0x14180
0x1465d: jnz 0x14674
0x1465f: test ah,0x10
0x14662: jnz 0x14fc0
0x14668: test ah,0x6
0x1466b: jz 0x1467b
0x1466d: mov [rbx],0x6c
0x14670: add rbx,0x1
0x14674: mov [rbx],0x6c
0x14677: add rbx,0x1
0x1467b: movzx eax,byte ptr [r13+0x48]
0x14680: mov [rbx+0x1],0x0
0x14684: mov byte ptr [rbx],al
0x14686: mov rax,qword ptr [r13+0x28]
0x1468a: cmp rax,0xffffffff
0x1468e: jz 0x14dc0
0x14694: shl rax,0x5
0x14698: add rax,r8
0x1469b: cmp [rax],0x5
0x1469e: jnz 0x15186
0x146a4: mov eax,dword ptr [rax+0x10]
0x146a7: mov [rbp-0x3e0],0x1
0x146b1: mov dword ptr [rbp-0x3b8],eax
0x146b7: mov rax,qword ptr [r13+0x40]
0x146bb: cmp rax,0xffffffff
0x146bf: jz 0x146ec
0x146c1: shl rax,0x5
0x146c5: add r8,rax
0x146c8: cmp [r8],0x5
0x146cc: jnz 0x15186
0x146d2: mov eax,dword ptr [rbp-0x3e0]
0x146d8: mov edx,dword ptr [r8+0x10]
0x146dc: mov dword ptr [rbp+rax*4-0x3b8],edx
0x146e3: lea eax,[rax+0x1]
0x146e6: mov dword ptr [rbp-0x3e0],eax
0x146ec: mov rax,r14
0x146ef: xor edx,edx
0x146f1: add rax,0x2
0x146f5: jb 0x1535c
0x146fb: cmp r12,rax
0x146fe: jnb 0x1474b
0x14700: test r12,r12
0x14703: jnz 0x14f28
0x14709: cmp rax,0xc
0x1470d: jnbe 0x14f40
0x14713: mov r12d,0xc
0x14719: cmp r15,qword ptr [rbp-0x3e8]
0x14720: setz dl
0x14723: test r15,r15
0x14726: jz 0x14f70
0x1472c: test dl,dl
0x1472e: jnz 0x14f70
0x14734: mov rsi,r12
0x14737: mov rdi,r15
0x1473a: call 0x2e90
0x1473f: test rax,rax
0x14742: jz 0x143c5
0x14748: mov r15,rax
0x1474b: mov [r15+r14*1+0x0],0x0
0x14750: call 0x2950
0x14755: mov qword ptr [rbp-0x3c8],rax
0x1475c: mov eax,dword ptr [rax]
0x1475e: mov qword ptr [rbp-0x3f8],rbx
0x14765: mov dword ptr [rbp-0x424],eax
0x1476b: nop qword ptr [rax+rax*1+0x0]
0x14770: mov rax,qword ptr [rbp-0x3c8]
0x14777: mov rbx,r12
0x1477a: mov r10d,0x7fffffff
0x14780: sub rbx,r14
0x14783: mov [rbp-0x3bc],0xffffffff
0x1478d: cmp rbx,0x7fffffff
0x14794: mov [rax],0x0
0x1479a: mov eax,dword ptr [rbp-0x3d0]
0x147a0: cmovbe r10,rbx
0x147a4: cmp eax,0x11
0x147a7: jnbe 0x15186
0x147ad: lea rsi,[rip+0x46ec]
0x147b4: movsxd rax,dword ptr [rsi+rax*4+0x0]
0x147b8: add rax,rsi
0x147bb: jmp rax
0x147bd: nop qword ptr [rax]
0x147c0: mov rax,qword ptr [r13+0x50]
0x147c4: lea rdi,[r15+r14*1+0x0]
0x147c8: shl rax,0x5
0x147cc: add rax,qword ptr [rbp-0x3a8]
0x147d3: mov r9,qword ptr [rax+0x10]
0x147d7: mov eax,dword ptr [rbp-0x3e0]
0x147dd: cmp eax,0x1
0x147e0: jz 0x14ca8
0x147e6: cmp eax,0x2
0x147e9: jz 0x14c90
0x147ef: sub rsp,0x8
0x147f3: push qword ptr [rbp-0x3f0]
0x147f9: mov r8,qword ptr [rbp-0x3d8]
0x14800: mov rsi,r10
0x14803: mov rcx,0xffffffff
0x1480a: mov edx,0x1
0x1480f: xor eax,eax
0x14811: mov qword ptr [rbp-0x430],r10
0x14818: call 0x2910
0x1481d: pop rsi
0x1481e: pop rdi
0x1481f: mov r10,qword ptr [rbp-0x430]
0x14826: mov ecx,dword ptr [rbp-0x3bc]
0x1482c: test ecx,ecx
0x1482e: js 0x1496c
0x14834: movsxd rdx,ecx
0x14837: cmp rdx,r10
0x1483a: jnb 0x1484a
0x1483c: add rdx,r15
0x1483f: cmp [rdx+r14*1+0x0],0x0
0x14844: jnz 0x15186
0x1484a: cmp ecx,eax
0x1484c: jnl 0x14856
0x1484e: mov dword ptr [rbp-0x3bc],eax
0x14854: mov ecx,eax
0x14856: lea eax,[rcx+0x1]
0x14859: cmp rax,r10
0x1485c: jb 0x15090
0x14862: cmp rbx,0x7ffffffe
0x14869: jnbe 0x150b0
0x1486f: lea rsi,[r12+r12*1+0x0]
0x14873: lea edx,[rcx+0x2]
0x14876: test r12,r12
0x14879: mov rax,0xffffffff
0x14880: cmovns rax,rsi
0x14884: add rdx,r14
0x14887: jb 0x15348
0x1488d: cmp rax,rdx
0x14890: cmovnae rax,rdx
0x14894: cmp r12,rax
0x14897: jnb 0x14770
0x1489d: test r12,r12
0x148a0: js 0x143d1
0x148a6: cmp rsi,rax
0x148a9: mov r12,rsi
0x148ac: jnb 0x148bb
0x148ae: cmp rax,0xffffffff
0x148b2: jz 0x143d1
0x148b8: mov r12,rax
0x148bb: cmp r15,qword ptr [rbp-0x3e8]
0x148c2: setz bl
0x148c5: test r15,r15
0x148c8: jz 0x14c50
0x148ce: test bl,bl
0x148d0: jnz 0x14c50
0x148d6: mov rsi,r12
0x148d9: mov rdi,r15
0x148dc: call 0x2e90
0x148e1: test rax,rax
0x148e4: jz 0x143d1
0x148ea: mov r15,rax
0x148ed: jmp 0x14770
0x148f2: nop qword ptr [rax+rax*1+0x0]
0x148f8: mov rax,qword ptr [r13+0x50]
0x148fc: lea rdi,[r15+r14*1+0x0]
0x14900: shl rax,0x5
0x14904: add rax,qword ptr [rbp-0x3a8]
0x1490b: mov r9d,dword ptr [rax+0x10]
0x1490f: mov eax,dword ptr [rbp-0x3e0]
0x14915: cmp eax,0x1
0x14918: jz 0x14b50
0x1491e: cmp eax,0x2
0x14921: jz 0x14b98
0x14927: sub rsp,0x8
0x1492b: push qword ptr [rbp-0x3f0]
0x14931: mov r8,qword ptr [rbp-0x3d8]
0x14938: mov rcx,0xffffffff
0x1493f: mov edx,0x1
0x14944: mov rsi,r10
0x14947: xor eax,eax
0x14949: mov qword ptr [rbp-0x430],r10
0x14950: call 0x2910
0x14955: pop rdx
0x14956: pop rcx
0x14957: mov ecx,dword ptr [rbp-0x3bc]
0x1495d: mov r10,qword ptr [rbp-0x430]
0x14964: test ecx,ecx
0x14966: jns 0x14834
0x1496c: mov rdi,qword ptr [rbp-0x3f8]
0x14973: cmp [rdi+0x1],0x0
0x14977: jnz 0x14cb8
0x1497d: test eax,eax
0x1497f: jns 0x1484e
0x14985: mov rax,qword ptr [rbp-0x3c8]
0x1498c: mov ebx,dword ptr [rax]
0x1498e: test ebx,ebx
0x14990: jnz 0x149b0
0x14992: movzx eax,byte ptr [r13+0x48]
0x14997: mov ebx,0x16
0x1499c: and eax,0xef
0x1499f: cmp al,0x63
0x149a1: mov eax,0x54
0x149a6: cmove ebx,eax
0x149a9: nop qword ptr [rax+0x0]
0x149b0: cmp r15,qword ptr [rbp-0x3e8]
0x149b7: jz 0x149c2
0x149b9: test r15,r15
0x149bc: jnz 0x1516c
0x149c2: mov rax,qword ptr [rbp-0x420]
0x149c9: test rax,rax
0x149cc: jz 0x149d6
0x149ce: mov rdi,rax
0x149d1: call 0x30d0
0x149d6: mov rax,qword ptr [rbp-0x408]
0x149dd: mov rdi,qword ptr [rbp-0x2b8]
0x149e4: add rax,0x20
0x149e8: cmp rdi,rax
0x149eb: jz 0x149f2
0x149ed: call 0x30d0
0x149f2: mov rax,qword ptr [rbp-0x410]
0x149f9: mov rdi,qword ptr [rbp-0x3a8]
0x14a00: add rax,0x10
0x14a04: cmp rdi,rax
0x14a07: jz 0x14a0e
0x14a09: call 0x30d0
0x14a0e: mov rax,qword ptr [rbp-0x3c8]
0x14a15: xor r15d,r15d
0x14a18: mov dword ptr [rax],ebx
0x14a1a: jmp 0x1443f
0x14a1f: nop 
0x14a20: mov rax,qword ptr [r13+0x50]
0x14a24: lea rdi,[r15+r14*1+0x0]
0x14a28: shl rax,0x5
0x14a2c: add rax,qword ptr [rbp-0x3a8]
0x14a33: fld st0,[rax+0x10]
0x14a36: mov eax,dword ptr [rbp-0x3e0]
0x14a3c: cmp eax,0x1
0x14a3f: jz 0x15070
0x14a45: cmp eax,0x2
0x14a48: jnz 0x14f10
0x14a4e: mov eax,dword ptr [rbp-0x3b4]
0x14a54: sub rsp,0x8
0x14a58: push qword ptr [rbp-0x3f0]
0x14a5e: mov r9d,dword ptr [rbp-0x3b8]
0x14a65: mov r8,qword ptr [rbp-0x3d8]
0x14a6c: mov rsi,r10
0x14a6f: sub rsp,0x18
0x14a73: mov rcx,0xffffffff
0x14a7a: mov edx,0x1
0x14a7f: fstp [rsp+0x8],st0
0x14a83: push rax
0x14a84: xor eax,eax
0x14a86: mov qword ptr [rbp-0x430],r10
0x14a8d: call 0x2910
0x14a92: add rsp,0x30
0x14a96: mov r10,qword ptr [rbp-0x430]
0x14a9d: jmp 0x14826
0x14aa2: nop qword ptr [rax+rax*1+0x0]
0x14aa8: mov rax,qword ptr [r13+0x50]
0x14aac: lea rdi,[r15+r14*1+0x0]
0x14ab0: shl rax,0x5
0x14ab4: add rax,qword ptr [rbp-0x3a8]
0x14abb: movsd xmm0,dword ptr [rax+0x10]
0x14ac0: mov eax,dword ptr [rbp-0x3e0]
0x14ac6: cmp eax,0x1
0x14ac9: jz 0x15060
0x14acf: cmp eax,0x2
0x14ad2: jnz 0x14ed0
0x14ad8: mov eax,dword ptr [rbp-0x3b4]
0x14ade: push qword ptr [rbp-0x3f0]
0x14ae4: push rax
0x14ae5: mov r9d,dword ptr [rbp-0x3b8]
0x14aec: mov r8,qword ptr [rbp-0x3d8]
0x14af3: mov rsi,r10
0x14af6: mov rcx,0xffffffff
0x14afd: mov edx,0x1
0x14b02: mov eax,0x1
0x14b07: mov qword ptr [rbp-0x430],r10
0x14b0e: call 0x2910
0x14b13: pop r8
0x14b15: mov r10,qword ptr [rbp-0x430]
0x14b1c: pop r9
0x14b1e: jmp 0x14826
0x14b23: nop qword ptr [rax+rax*1+0x0]
0x14b28: mov rax,qword ptr [r13+0x50]
0x14b2c: lea rdi,[r15+r14*1+0x0]
0x14b30: shl rax,0x5
0x14b34: add rax,qword ptr [rbp-0x3a8]
0x14b3b: movzx r9d,byte ptr [rax+0x10]
0x14b40: mov eax,dword ptr [rbp-0x3e0]
0x14b46: cmp eax,0x1
0x14b49: jnz 0x1491e
0x14b4f: nop 
0x14b50: push qword ptr [rbp-0x3f0]
0x14b56: push r9
0x14b58: mov r9d,dword ptr [rbp-0x3b8]
0x14b5f: jmp 0x14931
0x14b64: nop qword ptr [rax+0x0]
0x14b68: mov rax,qword ptr [r13+0x50]
0x14b6c: lea rdi,[r15+r14*1+0x0]
0x14b70: shl rax,0x5
0x14b74: add rax,qword ptr [rbp-0x3a8]
0x14b7b: movsx r9d,byte ptr [rax+0x10]
0x14b80: mov eax,dword ptr [rbp-0x3e0]
0x14b86: cmp eax,0x1
0x14b89: jz 0x14b50
0x14b8b: cmp eax,0x2
0x14b8e: jnz 0x14927
0x14b94: nop qword ptr [rax+0x0]
0x14b98: sub rsp,0x8
0x14b9c: push qword ptr [rbp-0x3f0]
0x14ba2: push r9
0x14ba4: mov eax,dword ptr [rbp-0x3b4]
0x14baa: push rax
0x14bab: mov r9d,dword ptr [rbp-0x3b8]
0x14bb2: mov r8,qword ptr [rbp-0x3d8]
0x14bb9: mov rsi,r10
0x14bbc: mov rcx,0xffffffff
0x14bc3: mov edx,0x1
0x14bc8: xor eax,eax
0x14bca: mov qword ptr [rbp-0x430],r10
0x14bd1: call 0x2910
0x14bd6: add rsp,0x20
0x14bda: mov r10,qword ptr [rbp-0x430]
0x14be1: jmp 0x14826
0x14be6: nop qword ptr [rax+rax*1+0x0]
0x14bf0: mov rax,qword ptr [r13+0x50]
0x14bf4: lea rdi,[r15+r14*1+0x0]
0x14bf8: shl rax,0x5
0x14bfc: add rax,qword ptr [rbp-0x3a8]
0x14c03: movzx r9d,byte ptr [rax+0x10]
0x14c08: mov eax,dword ptr [rbp-0x3e0]
0x14c0e: cmp eax,0x1
0x14c11: jnz 0x1491e
0x14c17: jmp 0x14b50
0x14c1c: nop qword ptr [rax+0x0]
0x14c20: mov rax,qword ptr [r13+0x50]
0x14c24: lea rdi,[r15+r14*1+0x0]
0x14c28: shl rax,0x5
0x14c2c: add rax,qword ptr [rbp-0x3a8]
0x14c33: movsx r9d,byte ptr [rax+0x10]
0x14c38: mov eax,dword ptr [rbp-0x3e0]
0x14c3e: cmp eax,0x1
0x14c41: jnz 0x1491e
0x14c47: jmp 0x14b50
0x14c4c: nop qword ptr [rax+0x0]
0x14c50: mov rdi,r12
0x14c53: call 0x2df0
0x14c58: test rax,rax
0x14c5b: mov rcx,rax
0x14c5e: jz 0x143d1
0x14c64: test r14,r14
0x14c67: jz 0x14d20
0x14c6d: test bl,bl
0x14c6f: jz 0x14d20
0x14c75: mov rsi,r15
0x14c78: mov rdx,r14
0x14c7b: mov rdi,rax
0x14c7e: call 0x2d80
0x14c83: mov r15,rax
0x14c86: jmp 0x14770
0x14c8b: nop qword ptr [rax+rax*1+0x0]
0x14c90: sub rsp,0x8
0x14c94: push qword ptr [rbp-0x3f0]
0x14c9a: push r9
0x14c9c: jmp 0x14ba4
0x14ca1: nop qword ptr [rax+0x0]
0x14ca8: push qword ptr [rbp-0x3f0]
0x14cae: push r9
0x14cb0: jmp 0x14b58
0x14cb5: nop qword ptr [rax]
0x14cb8: mov [rdi+0x1],0x0
0x14cbc: jmp 0x14770
0x14cc1: nop qword ptr [rax+0x0]
0x14cc8: cmp rax,0xffffffff
0x14ccc: jnz 0x15186
0x14cd2: mov rax,r14
0x14cd5: add rax,0x1
0x14cd9: mov rbx,rax
0x14cdc: jnb 0x14d68
0x14ce2: cmp r12,0xffffffff
0x14ce6: jnz 0x143c5
0x14cec: mov rbx,r12
0x14cef: mov [r15+r14*1+0x0],0x25
0x14cf4: mov r8,qword ptr [r13+0x8]
0x14cf8: add r13,0x58
0x14cfc: mov rcx,qword ptr [r13+0x0]
0x14d00: add [rbp-0x400],0x1
0x14d08: cmp rcx,r8
0x14d0b: jnz 0x143a9
0x14d11: mov r14,rbx
0x14d14: jmp 0x14513
0x14d19: nop qword ptr [rax+0x0]
0x14d20: mov r15,rcx
0x14d23: jmp 0x14770
0x14d28: call 0x2950
0x14d2d: mov qword ptr [rbp-0x3c8],rax
0x14d34: jmp 0x143f7
0x14d39: nop qword ptr [rax+0x0]
0x14d40: mov edx,edi
0x14d42: sub edx,0x12
0x14d45: cmp edx,0x4
0x14d48: jnbe 0x15186
0x14d4e: lea rdi,[rip+0x4193]
0x14d55: mov rax,qword ptr [rax+0x10]
0x14d59: movsxd rdx,dword ptr [rdi+rdx*4+0x0]
0x14d5d: add rdx,rdi
0x14d60: jmp rdx
0x14d62: nop qword ptr [rax+rax*1+0x0]
0x14d68: cmp r12,rax
0x14d6b: jnb 0x14cef
0x14d6d: test r12,r12
0x14d70: jnz 0x15140
0x14d76: cmp rax,0xc
0x14d7a: jnbe 0x15152
0x14d80: mov r12d,0xc
0x14d86: cmp r15,qword ptr [rbp-0x3e8]
0x14d8d: setz dl
0x14d90: test r15,r15
0x14d93: jz 0x15000
0x14d99: test dl,dl
0x14d9b: jnz 0x15000
0x14da1: mov rsi,r12
0x14da4: mov rdi,r15
0x14da7: call 0x2e90
0x14dac: test rax,rax
0x14daf: jz 0x14eab
0x14db5: mov r15,rax
0x14db8: jmp 0x14cef
0x14dbd: nop qword ptr [rax]
0x14dc0: mov [rbp-0x3e0],0x0
0x14dca: jmp 0x146b7
0x14dcf: nop 
0x14dd0: js 0x143c5
0x14dd6: add r12,r12
0x14dd9: cmp r12,rax
0x14ddc: jnb 0x144b6
0x14de2: cmp rax,0xffffffff
0x14de6: jz 0x143c5
0x14dec: cmp r15,qword ptr [rbp-0x3e8]
0x14df3: mov r12,rax
0x14df6: setz dl
0x14df9: test r15,r15
0x14dfc: jnz 0x144c9
0x14e02: nop qword ptr [rax+rax*1+0x0]
0x14e08: mov rdi,r12
0x14e0b: mov qword ptr [rbp-0x3e0],r8
0x14e12: mov byte ptr [rbp-0x3d0],dl
0x14e18: mov qword ptr [rbp-0x3c8],rcx
0x14e1f: call 0x2df0
0x14e24: test rax,rax
0x14e27: mov r9,rax
0x14e2a: mov rcx,qword ptr [rbp-0x3c8]
0x14e31: movzx edx,byte ptr [rbp-0x3d0]
0x14e38: mov r8,qword ptr [rbp-0x3e0]
0x14e3f: jz 0x143c5
0x14e45: test rbx,rbx
0x14e48: jz 0x15050
0x14e4e: test dl,dl
0x14e50: jz 0x15050
0x14e56: mov rsi,r15
0x14e59: mov rdx,rbx
0x14e5c: mov rdi,rax
0x14e5f: mov qword ptr [rbp-0x3d0],r8
0x14e66: mov qword ptr [rbp-0x3c8],rcx
0x14e6d: call 0x2d80
0x14e72: mov rcx,qword ptr [rbp-0x3c8]
0x14e79: mov r15,rax
0x14e7c: mov r8,qword ptr [rbp-0x3d0]
0x14e83: jmp 0x14504
0x14e88: nop qword ptr [rax+rax*1+0x0]
0x14e90: mov r14,r12
0x14e93: jmp 0x14504
0x14e98: nop qword ptr [rax+rax*1+0x0]
0x14ea0: mov qword ptr [rax],r14
0x14ea3: mov rbx,r14
0x14ea6: jmp 0x14cf4
0x14eab: call 0x2950
0x14eb0: mov qword ptr [rbp-0x3c8],rax
0x14eb7: nop qword ptr [rax+rax*1+0x0]
0x14ec0: mov rdi,r15
0x14ec3: call 0x30d0
0x14ec8: jmp 0x143e3
0x14ecd: nop qword ptr [rax]
0x14ed0: mov r9,qword ptr [rbp-0x3f0]
0x14ed7: mov r8,qword ptr [rbp-0x3d8]
0x14ede: mov rsi,r10
0x14ee1: mov rcx,0xffffffff
0x14ee8: mov edx,0x1
0x14eed: mov eax,0x1
0x14ef2: mov qword ptr [rbp-0x430],r10
0x14ef9: call 0x2910
0x14efe: mov r10,qword ptr [rbp-0x430]
0x14f05: jmp 0x14826
0x14f0a: nop qword ptr [rax+rax*1+0x0]
0x14f10: sub rsp,0x10
0x14f14: mov r9,qword ptr [rbp-0x3f0]
0x14f1b: fstp [rsp],st0
0x14f1e: jmp 0x147f9
0x14f23: nop qword ptr [rax+rax*1+0x0]
0x14f28: js 0x143c5
0x14f2e: add r12,r12
0x14f31: cmp r12,rax
0x14f34: jnb 0x14719
0x14f3a: nop qword ptr [rax+rax*1+0x0]
0x14f40: test rdx,rdx
0x14f43: jnz 0x143c5
0x14f49: cmp rax,0xffffffff
0x14f4d: jz 0x143c5
0x14f53: cmp r15,qword ptr [rbp-0x3e8]
0x14f5a: mov r12,rax
0x14f5d: setz dl
0x14f60: test r15,r15
0x14f63: jnz 0x1472c
0x14f69: nop qword ptr [rax+0x0]
0x14f70: mov rdi,r12
0x14f73: mov byte ptr [rbp-0x3c8],dl
0x14f79: call 0x2df0
0x14f7e: test rax,rax
0x14f81: mov rcx,rax
0x14f84: movzx edx,byte ptr [rbp-0x3c8]
0x14f8b: jz 0x143c5
0x14f91: test r14,r14
0x14f94: jz 0x15130
0x14f9a: test dl,dl
0x14f9c: jz 0x15130
0x14fa2: mov rsi,r15
0x14fa5: mov rdx,r14
0x14fa8: mov rdi,rax
0x14fab: call 0x2d80
0x14fb0: mov r15,rax
0x14fb3: jmp 0x1474b
0x14fb8: nop qword ptr [rax+rax*1+0x0]
0x14fc0: mov [rbx],0x4c
0x14fc3: add rbx,0x1
0x14fc7: jmp 0x1467b
0x14fcc: nop qword ptr [rax+0x0]
0x14fd0: mov byte ptr [rax],r14b
0x14fd3: mov rbx,r14
0x14fd6: jmp 0x14cf4
0x14fdb: nop qword ptr [rax+rax*1+0x0]
0x14fe0: mov dword ptr [rax],r14d
0x14fe3: mov rbx,r14
0x14fe6: jmp 0x14cf4
0x14feb: nop qword ptr [rax+rax*1+0x0]
0x14ff0: mov word ptr [rax],r14w
0x14ff4: mov rbx,r14
0x14ff7: jmp 0x14cf4
0x14ffc: nop qword ptr [rax+0x0]
0x15000: mov rdi,r12
0x15003: mov byte ptr [rbp-0x3c8],dl
0x15009: call 0x2df0
0x1500e: test rax,rax
0x15011: mov rcx,rax
0x15014: movzx edx,byte ptr [rbp-0x3c8]
0x1501b: jz 0x143c5
0x15021: test r14,r14
0x15024: jz 0x15164
0x1502a: test dl,dl
0x1502c: jz 0x15164
0x15032: mov rsi,r15
0x15035: mov rdx,r14
0x15038: mov rdi,rax
0x1503b: call 0x2d80
0x15040: mov r15,rax
0x15043: jmp 0x14cef
0x15048: nop qword ptr [rax+rax*1+0x0]
0x15050: mov r15,r9
0x15053: jmp 0x14504
0x15058: nop qword ptr [rax+rax*1+0x0]
0x15060: sub rsp,0x8
0x15064: push qword ptr [rbp-0x3f0]
0x1506a: jmp 0x14ae5
0x1506f: nop 
0x15070: sub rsp,0x8
0x15074: push qword ptr [rbp-0x3f0]
0x1507a: sub rsp,0x10
0x1507e: fstp [rsp],st0
0x15081: jmp 0x14bab
0x15086: nop qword ptr [rax+rax*1+0x0]
0x15090: mov rax,qword ptr [rbp-0x3c8]
0x15097: mov edi,dword ptr [rbp-0x424]
0x1509d: movsxd rbx,ecx
0x150a0: add rbx,r14
0x150a3: mov dword ptr [rax],edi
0x150a5: jmp 0x14cf4
0x150aa: nop qword ptr [rax+rax*1+0x0]
0x150b0: cmp r15,qword ptr [rbp-0x3e8]
0x150b7: jz 0x150c2
0x150b9: test r15,r15
0x150bc: jnz 0x15179
0x150c2: mov rax,qword ptr [rbp-0x420]
0x150c9: test rax,rax
0x150cc: jz 0x150d6
0x150ce: mov rdi,rax
0x150d1: call 0x30d0
0x150d6: mov rax,qword ptr [rbp-0x408]
0x150dd: mov rdi,qword ptr [rbp-0x2b8]
0x150e4: add rax,0x20
0x150e8: cmp rdi,rax
0x150eb: jz 0x150f2
0x150ed: call 0x30d0
0x150f2: mov rax,qword ptr [rbp-0x410]
0x150f9: mov rdi,qword ptr [rbp-0x3a8]
0x15100: add rax,0x10
0x15104: cmp rdi,rax
0x15107: jz 0x1510e
0x15109: call 0x30d0
0x1510e: mov rax,qword ptr [rbp-0x3c8]
0x15115: xor r15d,r15d
0x15118: mov [rax],0x4b
0x1511e: jmp 0x1443f
0x15123: nop qword ptr [rax+rax*1+0x0]
0x15128: xor r15d,r15d
0x1512b: jmp 0x1443f
0x15130: mov r15,rcx
0x15133: jmp 0x1474b
0x15138: nop qword ptr [rax+rax*1+0x0]
0x15140: js 0x143c5
0x15146: add r12,r12
0x15149: cmp r12,rax
0x1514c: jnb 0x14d86
0x15152: cmp rax,0xffffffff
0x15156: jz 0x143c5
0x1515c: mov r12,rax
0x1515f: jmp 0x14d86
0x15164: mov r15,rcx
0x15167: jmp 0x14cef
0x1516c: mov rdi,r15
0x1516f: call 0x30d0
0x15174: jmp 0x149c2
0x15179: mov rdi,r15
0x1517c: call 0x30d0
0x15181: jmp 0x150c2
0x15186: call 0x2940
0x1518b: nop qword ptr [rax+rax*1+0x0]
0x15190: mov rax,qword ptr [rbp-0x408]
0x15197: mov rdi,qword ptr [rbp-0x2b8]
0x1519e: add rax,0x20
0x151a2: cmp rdi,rax
0x151a5: jz 0x151ac
0x151a7: call 0x30d0
0x151ac: mov rax,qword ptr [rbp-0x410]
0x151b3: mov rdi,qword ptr [rbp-0x3a8]
0x151ba: add rax,0x10
0x151be: cmp rdi,rax
0x151c1: jz 0x151c8
0x151c3: call 0x30d0
0x151c8: call 0x2950
0x151cd: xor r15d,r15d
0x151d0: mov [rax],0x16
0x151d6: jmp 0x1443f
0x151db: mov rbx,r14
0x151de: xor eax,eax
0x151e0: add rbx,0x1
0x151e4: jb 0x152f0
0x151ea: cmp r12,rbx
0x151ed: jnb 0x1523c
0x151ef: test r12,r12
0x151f2: jnz 0x15329
0x151f8: cmp rbx,0xc
0x151fc: jnbe 0x1530e
0x15202: mov r12d,0xc
0x15208: cmp r15,qword ptr [rbp-0x3e8]
0x1520f: setz r13b
0x15213: test r15,r15
0x15216: jz 0x152bc
0x1521c: test r13b,r13b
0x1521f: jnz 0x152bc
0x15225: mov rsi,r12
0x15228: mov rdi,r15
0x1522b: call 0x2e90
0x15230: test rax,rax
0x15233: jz 0x14eab
0x15239: mov r15,rax
0x1523c: cmp r15,qword ptr [rbp-0x3e8]
0x15243: mov [r15+r14*1+0x0],0x0
0x15248: jz 0x15261
0x1524a: cmp r12,rbx
0x1524d: jbe 0x15261
0x1524f: mov rdi,r15
0x15252: mov rsi,rbx
0x15255: call 0x2e90
0x1525a: test rax,rax
0x1525d: cmovne r15,rax
0x15261: mov rax,qword ptr [rbp-0x420]
0x15268: test rax,rax
0x1526b: jz 0x15275
0x1526d: mov rdi,rax
0x15270: call 0x30d0
0x15275: mov rax,qword ptr [rbp-0x408]
0x1527c: mov rdi,qword ptr [rbp-0x2b8]
0x15283: add rax,0x20
0x15287: cmp rdi,rax
0x1528a: jz 0x15291
0x1528c: call 0x30d0
0x15291: mov rax,qword ptr [rbp-0x410]
0x15298: mov rdi,qword ptr [rbp-0x3a8]
0x1529f: add rax,0x10
0x152a3: cmp rdi,rax
0x152a6: jz 0x152ad
0x152a8: call 0x30d0
0x152ad: mov rax,qword ptr [rbp-0x418]
0x152b4: mov qword ptr [rax],r14
0x152b7: jmp 0x1443f
0x152bc: mov rdi,r12
0x152bf: call 0x2df0
0x152c4: test rax,rax
0x152c7: mov rcx,rax
0x152ca: jz 0x143c5
0x152d0: test r14,r14
0x152d3: jz 0x15340
0x152d5: test r13b,r13b
0x152d8: jz 0x15340
0x152da: mov rsi,r15
0x152dd: mov rdx,r14
0x152e0: mov rdi,rax
0x152e3: call 0x2d80
0x152e8: mov r15,rax
0x152eb: jmp 0x1523c
0x152f0: cmp r12,0xffffffff
0x152f4: mov eax,0x1
0x152f9: jz 0x1523c
0x152ff: test r12,r12
0x15302: jz 0x143c5
0x15308: js 0x143c5
0x1530e: test rax,rax
0x15311: jnz 0x143c5
0x15317: cmp rbx,0xffffffff
0x1531b: jz 0x143c5
0x15321: mov r12,rbx
0x15324: jmp 0x15208
0x15329: js 0x143c5
0x1532f: add r12,r12
0x15332: cmp r12,rbx
0x15335: jnb 0x15208
0x1533b: jmp 0x1530e
0x1533d: nop qword ptr [rax]
0x15340: mov r15,rcx
0x15343: jmp 0x1523c
0x15348: cmp r12,0xffffffff
0x1534c: jz 0x14770
0x15352: jmp 0x143d1
0x15357: call 0x2b30
0x1535c: cmp r12,0xffffffff
0x15360: mov edx,0x1
0x15365: jz 0x1474b
0x1536b: test r12,r12
0x1536e: jz 0x143c5
0x15374: jns 0x14f40
0x1537a: jmp 0x143c5
0x15380: push r12
0x15382: push rbp
0x15383: mov rbp,rsi
0x15386: push rbx
0x15387: call 0x2f90
0x1538c: test rax,rax
0x1538f: mov rbx,rax
0x15392: jz 0x153a1
0x15394: mov rdi,rax
0x15397: call 0x2db0
0x1539c: cmp eax,0x2
0x1539f: jbe 0x153b0
0x153a1: mov rax,rbx
0x153a4: pop rbx
0x153a5: pop rbp
0x153a6: pop r12
0x153a8: ret
0x153a9: nop qword ptr [rax+0x0]
0x153b0: mov edi,eax
0x153b2: call 0x13f40
0x153b7: test eax,eax
0x153b9: mov r12d,eax
0x153bc: js 0x153f8
0x153be: mov rdi,rbx
0x153c1: call 0x13f50
0x153c6: test eax,eax
0x153c8: jnz 0x153dd
0x153ca: mov rsi,rbp
0x153cd: mov edi,r12d
0x153d0: call 0x2eb0
0x153d5: test rax,rax
0x153d8: mov rbx,rax
0x153db: jnz 0x153a1
0x153dd: call 0x2950
0x153e2: mov ebp,dword ptr [rax]
0x153e4: mov rbx,rax
0x153e7: mov edi,r12d
0x153ea: call 0x2c30
0x153ef: mov dword ptr [rbx],ebp
0x153f1: xor ebx,ebx
0x153f3: jmp 0x153a1
0x153f5: nop qword ptr [rax]
0x153f8: call 0x2950
0x153fd: mov r12d,dword ptr [rax]
0x15400: mov rbp,rax
0x15403: mov rdi,rbx
0x15406: call 0x13f50
0x1540b: xor ebx,ebx
0x1540d: mov dword ptr [rbp+0x0],r12d
0x15411: jmp 0x153a1
0x15420: cmp [rsi],0x0
0x15424: mov rax,qword ptr [rsi+0x8]
0x15428: jz 0x1548d
0x1542a: lea r8,[rip+0x3adf]
0x15431: lea r10,[rip+0x3b38]
0x15438: lea r9,[rip+0x3abd]
0x1543f: xor ecx,ecx
0x15441: nop qword ptr [rax+0x0]
0x15448: cmp [rax],0x16
0x1544b: jnbe 0x15490
0x1544d: mov edx,dword ptr [rax]
0x1544f: movsxd rdx,dword ptr [r8+rdx*4+0x0]
0x15453: add rdx,r8
0x15456: jmp rdx
0x15458: nop qword ptr [rax+rax*1+0x0]
0x15460: mov rdx,qword ptr [rdi+0x8]
0x15464: add rdx,0xf
0x15468: and rdx,0xfffffff0
0x1546c: lea r11,[rdx+0x10]
0x15470: mov qword ptr [rdi+0x8],r11
0x15474: fld st0,[rdx]
0x15476: fstp [rax+0x10],st0
0x15479: nop qword ptr [rax+0x0]
0x15480: add rcx,0x1
0x15484: add rax,0x20
0x15488: cmp qword ptr [rsi],rcx
0x1548b: jnbe 0x15448
0x1548d: xor eax,eax
0x1548f: ret
0x15490: mov eax,0xffffffff
0x15495: ret
0x15496: mov r11d,dword ptr [rdi]
0x15499: cmp r11d,0x2f
0x1549d: jnbe 0x155da
0x154a3: mov edx,r11d
0x154a6: add rdx,qword ptr [rdi+0x10]
0x154aa: add r11d,0x8
0x154ae: mov dword ptr [rdi],r11d
0x154b1: mov rdx,qword ptr [rdx]
0x154b4: mov qword ptr [rax+0x10],rdx
0x154b8: jmp 0x15480
0x154ba: mov r11d,dword ptr [rdi]
0x154bd: cmp r11d,0x2f
0x154c1: jnbe 0x155fc
0x154c7: mov edx,r11d
0x154ca: add rdx,qword ptr [rdi+0x10]
0x154ce: add r11d,0x8
0x154d2: mov dword ptr [rdi],r11d
0x154d5: mov edx,dword ptr [rdx]
0x154d7: mov dword ptr [rax+0x10],edx
0x154da: jmp 0x15480
0x154dc: mov r11d,dword ptr [rdi]
0x154df: cmp r11d,0x2f
0x154e3: jnbe 0x155eb
0x154e9: mov edx,r11d
0x154ec: add rdx,qword ptr [rdi+0x10]
0x154f0: add r11d,0x8
0x154f4: mov dword ptr [rdi],r11d
0x154f7: mov edx,dword ptr [rdx]
0x154f9: mov byte ptr [rax+0x10],dl
0x154fc: jmp 0x15480
0x154fe: mov r11d,dword ptr [rdi]
0x15501: cmp r11d,0x2f
0x15505: jnbe 0x155aa
0x1550b: mov edx,r11d
0x1550e: add rdx,qword ptr [rdi+0x10]
0x15512: add r11d,0x8
0x15516: mov dword ptr [rdi],r11d
0x15519: mov edx,dword ptr [rdx]
0x1551b: mov word ptr [rax+0x10],dx
0x1551f: jmp 0x15480
0x15524: mov r11d,dword ptr [rdi]
0x15527: cmp r11d,0x2f
0x1552b: jnbe 0x155bb
0x15531: mov edx,r11d
0x15534: add rdx,qword ptr [rdi+0x10]
0x15538: add r11d,0x8
0x1553c: mov dword ptr [rdi],r11d
0x1553f: mov rdx,qword ptr [rdx]
0x15542: test rdx,rdx
0x15545: cmove rdx,r9
0x15549: mov qword ptr [rax+0x10],rdx
0x1554d: jmp 0x15480
0x15552: mov r11d,dword ptr [rdi+0x4]
0x15556: cmp r11d,0xaf
0x1555d: jnbe 0x1560d
0x15563: mov edx,r11d
0x15566: add rdx,qword ptr [rdi+0x10]
0x1556a: add r11d,0x10
0x1556e: mov dword ptr [rdi+0x4],r11d
0x15572: movsd xmm0,dword ptr [rdx]
0x15576: movsd dword ptr [rax+0x10],xmm0
0x1557b: jmp 0x15480
0x15580: mov r11d,dword ptr [rdi]
0x15583: cmp r11d,0x2f
0x15587: jnbe 0x155cc
0x15589: mov edx,r11d
0x1558c: add rdx,qword ptr [rdi+0x10]
0x15590: add r11d,0x8
0x15594: mov dword ptr [rdi],r11d
0x15597: mov rdx,qword ptr [rdx]
0x1559a: test rdx,rdx
0x1559d: cmove rdx,r10
0x155a1: mov qword ptr [rax+0x10],rdx
0x155a5: jmp 0x15480
0x155aa: mov rdx,qword ptr [rdi+0x8]
0x155ae: lea r11,[rdx+0x8]
0x155b2: mov qword ptr [rdi+0x8],r11
0x155b6: jmp 0x15519
0x155bb: mov rdx,qword ptr [rdi+0x8]
0x155bf: lea r11,[rdx+0x8]
0x155c3: mov qword ptr [rdi+0x8],r11
0x155c7: jmp 0x1553f
0x155cc: mov rdx,qword ptr [rdi+0x8]
0x155d0: lea r11,[rdx+0x8]
0x155d4: mov qword ptr [rdi+0x8],r11
0x155d8: jmp 0x15597
0x155da: mov rdx,qword ptr [rdi+0x8]
0x155de: lea r11,[rdx+0x8]
0x155e2: mov qword ptr [rdi+0x8],r11
0x155e6: jmp 0x154b1
0x155eb: mov rdx,qword ptr [rdi+0x8]
0x155ef: lea r11,[rdx+0x8]
0x155f3: mov qword ptr [rdi+0x8],r11
0x155f7: jmp 0x154f7
0x155fc: mov rdx,qword ptr [rdi+0x8]
0x15600: lea r11,[rdx+0x8]
0x15604: mov qword ptr [rdi+0x8],r11
0x15608: jmp 0x154d5
0x1560d: mov rdx,qword ptr [rdi+0x8]
0x15611: lea r11,[rdx+0x8]
0x15615: mov qword ptr [rdi+0x8],r11
0x15619: jmp 0x15572
0x15620: push r15
0x15622: push r14
0x15624: lea rcx,[rsi+0x20]
0x15628: push r13
0x1562a: push r12
0x1562c: lea rax,[rdx+0x10]
0x15630: push rbp
0x15631: push rbx
0x15632: mov r14,rsi
0x15635: mov r15,rdx
0x15638: xor ebx,ebx
0x1563a: mov r9d,0x7
0x15640: sub rsp,0x58
0x15644: mov r10d,0x7
0x1564a: mov [rsi],0x0
0x15651: mov qword ptr [rsi+0x8],rcx
0x15655: mov qword ptr [rsp+0x28],rcx
0x1565a: mov r8,0xffffffff
0x15661: mov [rdx],0x0
0x15668: mov qword ptr [rsp+0x8],rax
0x1566d: mov qword ptr [rdx+0x8],rax
0x15671: mov [rsp+0x18],0x0
0x1567a: mov [rsp+0x10],0x0
0x15683: mov [rsp+0x20],0x0
0x1568c: jmp 0x1569b
0x1568e: nop 
0x15690: cmp al,0x25
0x15692: lea rbp,[rdi+0x1]
0x15696: jz 0x156d8
0x15698: mov rdi,rbp
0x1569b: movzx eax,byte ptr [rdi]
0x1569e: test al,al
0x156a0: jnz 0x15690
0x156a2: lea rax,[rbx+rbx*4+0x0]
0x156a6: lea rax,[rbx+rax*2+0x0]
0x156aa: mov qword ptr [rcx+rax*8+0x0],rdi
0x156ae: mov rax,qword ptr [rsp+0x10]
0x156b3: mov qword ptr [r14+0x10],rax
0x156b7: mov rax,qword ptr [rsp+0x18]
0x156bc: mov qword ptr [r14+0x18],rax
0x156c0: xor eax,eax
0x156c2: add rsp,0x58
0x156c6: pop rbx
0x156c7: pop rbp
0x156c8: pop r12
0x156ca: pop r13
0x156cc: pop r14
0x156ce: pop r15
0x156d0: ret
0x156d1: nop qword ptr [rax+0x0]
0x156d8: lea rax,[rbx+rbx*4+0x0]
0x156dc: mov r13,r8
0x156df: lea rax,[rbx+rax*2+0x0]
0x156e3: lea r12,[rcx+rax*8+0x0]
0x156e7: mov qword ptr [r12],rdi
0x156eb: mov [r12+0x10],0x0
0x156f4: mov [r12+0x18],0x0
0x156fd: mov [r12+0x20],0x0
0x15706: mov qword ptr [r12+0x28],r8
0x1570b: mov [r12+0x30],0x0
0x15714: mov [r12+0x38],0x0
0x1571d: mov qword ptr [r12+0x40],r8
0x15722: mov qword ptr [r12+0x50],r8
0x15727: movzx ebx,byte ptr [rdi+0x1]
0x1572b: lea eax,[rbx-0x30]
0x1572e: cmp al,0x9
0x15730: jnbe 0x1576e
0x15732: jmp 0x15b6a
0x15737: nop qword ptr [rax+rax*1+0x0]
0x15740: cmp bl,0x2d
0x15743: jz 0x15788
0x15745: cmp bl,0x2b
0x15748: jz 0x15790
0x1574a: cmp bl,0x20
0x1574d: jz 0x157a0
0x1574f: cmp bl,0x23
0x15752: jz 0x157b0
0x15754: cmp bl,0x30
0x15757: jz 0x157c0
0x15759: cmp bl,0x49
0x1575c: jnz 0x157d0
0x1575e: or [r12+0x10],0x40
0x15764: nop qword ptr [rax+0x0]
0x15768: movzx ebx,byte ptr [rax]
0x1576b: mov rbp,rax
0x1576e: lea rax,[rbp+0x1]
0x15772: cmp bl,0x27
0x15775: mov rdx,rax
0x15778: jnz 0x15740
0x1577a: or [r12+0x10],0x1
0x15780: jmp 0x15768
0x15782: nop qword ptr [rax+rax*1+0x0]
0x15788: or [r12+0x10],0x2
0x1578e: jmp 0x15768
0x15790: or [r12+0x10],0x4
0x15796: jmp 0x15768
0x15798: nop qword ptr [rax+rax*1+0x0]
0x157a0: or [r12+0x10],0x8
0x157a6: jmp 0x15768
0x157a8: nop qword ptr [rax+rax*1+0x0]
0x157b0: or [r12+0x10],0x10
0x157b6: jmp 0x15768
0x157b8: nop qword ptr [rax+rax*1+0x0]
0x157c0: or [r12+0x10],0x20
0x157c6: jmp 0x15768
0x157c8: nop qword ptr [rax+rax*1+0x0]
0x157d0: cmp bl,0x2a
0x157d3: jz 0x15989
0x157d9: lea ecx,[rbx-0x30]
0x157dc: cmp cl,0x9
0x157df: jbe 0x15bf7
0x157e5: cmp bl,0x2e
0x157e8: jz 0x15abf
0x157ee: xor eax,eax
0x157f0: mov esi,0x1
0x157f5: jmp 0x15827
0x157f7: nop qword ptr [rax+rax*1+0x0]
0x15800: cmp bl,0x4c
0x15803: jz 0x15840
0x15805: cmp bl,0x6c
0x15808: jz 0x15820
0x1580a: cmp bl,0x6a
0x1580d: jz 0x15820
0x1580f: mov edx,ebx
0x15811: and edx,0xdf
0x15814: cmp dl,0x5a
0x15817: jz 0x15820
0x15819: cmp bl,0x74
0x1581c: jnz 0x15848
0x1581e: nop 
0x15820: add eax,0x8
0x15823: movzx ebx,byte ptr [rbp+0x0]
0x15827: add rbp,0x1
0x1582b: cmp bl,0x68
0x1582e: jnz 0x15800
0x15830: mov ecx,eax
0x15832: mov edx,esi
0x15834: and ecx,0x1
0x15837: shl edx,cl
0x15839: or eax,edx
0x1583b: jmp 0x15823
0x1583d: nop qword ptr [rax]
0x15840: or eax,0x4
0x15843: jmp 0x15823
0x15845: nop qword ptr [rax]
0x15848: lea edx,[rbx-0x25]
0x1584b: cmp dl,0x53
0x1584e: jnbe 0x15e6b
0x15854: lea rcx,[rip+0x3731]
0x1585b: movzx edx,dl
0x1585e: movsxd rdx,dword ptr [rcx+rdx*4+0x0]
0x15862: add rdx,rcx
0x15865: jmp rdx
0x15867: mov r11d,0x10
0x1586d: mov ebx,0x73
0x15872: nop qword ptr [rax+rax*1+0x0]
0x15878: cmp r13,0xffffffff
0x1587c: jz 0x15f37
0x15882: mov qword ptr [r12+0x50],r13
0x15887: cmp r9,r13
0x1588a: mov rcx,qword ptr [r15+0x8]
0x1588e: jbe 0x15eb0
0x15894: mov rax,qword ptr [r15]
0x15897: mov rdx,rax
0x1589a: shl rdx,0x5
0x1589e: add rdx,rcx
0x158a1: cmp rax,r13
0x158a4: jnbe 0x158c6
0x158a6: nop qword ptr [rax+rax*1+0x0]
0x158b0: add rax,0x1
0x158b4: mov [rdx],0x0
0x158ba: add rdx,0x20
0x158be: cmp rax,r13
0x158c1: jbe 0x158b0
0x158c3: mov qword ptr [r15],rax
0x158c6: shl r13,0x5
0x158ca: lea rax,[rcx+r13*1+0x0]
0x158ce: mov edx,dword ptr [rax]
0x158d0: test edx,edx
0x158d2: jnz 0x15ea3
0x158d8: mov dword ptr [rax],r11d
0x158db: mov byte ptr [r12+0x48],bl
0x158e0: mov rax,qword ptr [r14]
0x158e3: mov qword ptr [r12+0x8],rbp
0x158e8: lea rbx,[rax+0x1]
0x158ec: cmp r10,rbx
0x158ef: mov qword ptr [r14],rbx
0x158f2: jnbe 0x15980
0x158f8: test r10,r10
0x158fb: js 0x162a7
0x15901: add r10,r10
0x15904: mov rax,0x209622091746699450
0x1590e: cmp r10,rax
0x15911: jnbe 0x162a7
0x15917: lea rax,[r10+r10*4+0x0]
0x1591b: mov rdi,qword ptr [r14+0x8]
0x1591f: cmp qword ptr [rsp+0x28],rdi
0x15924: mov qword ptr [rsp+0x40],r9
0x15929: mov qword ptr [rsp+0x38],r10
0x1592e: lea rax,[r10+rax*2+0x0]
0x15932: mov qword ptr [rsp+0x30],r8
0x15937: lea rsi,[rax*8+0x0]
0x1593f: jz 0x15ffd
0x15945: call 0x2e90
0x1594a: test rax,rax
0x1594d: mov rcx,rax
0x15950: mov r8,qword ptr [rsp+0x30]
0x15955: mov r10,qword ptr [rsp+0x38]
0x1595a: mov r9,qword ptr [rsp+0x40]
0x1595f: jz 0x162a7
0x15965: mov rax,qword ptr [rsp+0x28]
0x1596a: cmp rax,qword ptr [r14+0x8]
0x1596e: mov rbx,qword ptr [r14]
0x15971: jz 0x16020
0x15977: mov qword ptr [r14+0x8],rcx
0x1597b: jmp 0x15698
0x15980: mov rcx,qword ptr [r14+0x8]
0x15984: jmp 0x15698
0x15989: mov rsi,qword ptr [rsp+0x10]
0x1598e: mov ecx,0x1
0x15993: mov qword ptr [r12+0x18],rbp
0x15998: mov qword ptr [r12+0x20],rax
0x1599d: test rsi,rsi
0x159a0: cmovne rcx,rsi
0x159a4: mov qword ptr [rsp+0x10],rcx
0x159a9: movzx ecx,byte ptr [rbp+0x1]
0x159ad: lea esi,[rcx-0x30]
0x159b0: cmp sil,0x9
0x159b4: jbe 0x15c95
0x159ba: mov rsi,qword ptr [rsp+0x20]
0x159bf: cmp rsi,0xffffffff
0x159c3: lea rdx,[rsi+0x1]
0x159c7: mov qword ptr [r12+0x28],rsi
0x159cc: jz 0x15e6b
0x159d2: mov rbx,qword ptr [rsp+0x20]
0x159d7: mov rbp,rax
0x159da: mov qword ptr [rsp+0x20],rdx
0x159df: cmp r9,rbx
0x159e2: mov rcx,qword ptr [r15+0x8]
0x159e6: jnbe 0x16062
0x159ec: add r9,r9
0x159ef: lea rax,[rbx+0x1]
0x159f3: cmp r9,rbx
0x159f6: cmovbe r9,rax
0x159fa: mov rax,0x576460752303423487
0x15a04: cmp r9,rax
0x15a07: jnbe 0x162ab
0x15a0d: mov rsi,r9
0x15a10: mov qword ptr [rsp+0x40],r9
0x15a15: mov qword ptr [rsp+0x38],r10
0x15a1a: shl rsi,0x5
0x15a1e: cmp qword ptr [rsp+0x8],rcx
0x15a23: mov qword ptr [rsp+0x30],r8
0x15a28: jz 0x16141
0x15a2e: mov rdi,rcx
0x15a31: call 0x2e90
0x15a36: mov rdx,qword ptr [r15+0x8]
0x15a3a: mov r8,qword ptr [rsp+0x30]
0x15a3f: mov rcx,rax
0x15a42: mov r10,qword ptr [rsp+0x38]
0x15a47: mov r9,qword ptr [rsp+0x40]
0x15a4c: test rcx,rcx
0x15a4f: jz 0x16307
0x15a55: cmp qword ptr [rsp+0x8],rdx
0x15a5a: mov rax,qword ptr [r15]
0x15a5d: jz 0x1621b
0x15a63: mov qword ptr [r15+0x8],rcx
0x15a67: mov rdx,rax
0x15a6a: shl rdx,0x5
0x15a6e: add rdx,rcx
0x15a71: cmp rax,rbx
0x15a74: jnbe 0x15a96
0x15a76: nop qword ptr [rax+rax*1+0x0]
0x15a80: add rax,0x1
0x15a84: mov [rdx],0x0
0x15a8a: add rdx,0x20
0x15a8e: cmp rax,rbx
0x15a91: jbe 0x15a80
0x15a93: mov qword ptr [r15],rax
0x15a96: shl rbx,0x5
0x15a9a: lea rax,[rcx+rbx*1+0x0]
0x15a9e: mov edx,dword ptr [rax]
0x15aa0: test edx,edx
0x15aa2: jnz 0x15f7b
0x15aa8: mov [rax],0x5
0x15aae: movzx ebx,byte ptr [rbp+0x0]
0x15ab2: lea rdx,[rbp+0x1]
0x15ab6: cmp bl,0x2e
0x15ab9: jnz 0x157ee
0x15abf: cmp [rbp+0x1],0x2a
0x15ac3: mov qword ptr [r12+0x30],rbp
0x15ac8: jnz 0x15c4e
0x15ace: mov rsi,qword ptr [rsp+0x18]
0x15ad3: lea r11,[rbp+0x2]
0x15ad7: mov eax,0x2
0x15adc: mov qword ptr [r12+0x38],r11
0x15ae1: cmp rsi,0x2
0x15ae5: cmovnb rax,rsi
0x15ae9: mov qword ptr [rsp+0x18],rax
0x15aee: movsx eax,byte ptr [rbp+0x2]
0x15af2: lea edx,[rax-0x30]
0x15af5: cmp dl,0x9
0x15af8: jbe 0x1618c
0x15afe: mov rbx,qword ptr [r12+0x40]
0x15b03: cmp rbx,0xffffffff
0x15b07: jz 0x16165
0x15b0d: cmp r9,rbx
0x15b10: mov rcx,qword ptr [r15+0x8]
0x15b14: jbe 0x1607f
0x15b1a: mov rax,qword ptr [r15]
0x15b1d: mov rdx,rax
0x15b20: shl rdx,0x5
0x15b24: add rdx,rcx
0x15b27: cmp rax,rbx
0x15b2a: jnbe 0x15b46
0x15b2c: nop qword ptr [rax+0x0]
0x15b30: add rax,0x1
0x15b34: mov [rdx],0x0
0x15b3a: add rdx,0x20
0x15b3e: cmp rax,rbx
0x15b41: jbe 0x15b30
0x15b43: mov qword ptr [r15],rax
0x15b46: shl rbx,0x5
0x15b4a: lea rax,[rcx+rbx*1+0x0]
0x15b4e: mov edx,dword ptr [rax]
0x15b50: test edx,edx
0x15b52: jnz 0x1606a
0x15b58: mov [rax],0x5
0x15b5e: mov rbp,r11
0x15b61: movzx ebx,byte ptr [r11]
0x15b65: jmp 0x157ee
0x15b6a: mov rax,rbp
0x15b6d: nop qword ptr [rax]
0x15b70: add rax,0x1
0x15b74: movzx edx,byte ptr [rax]
0x15b77: lea ecx,[rdx-0x30]
0x15b7a: cmp cl,0x9
0x15b7d: jbe 0x15b70
0x15b7f: cmp dl,0x24
0x15b82: mov r13,r8
0x15b85: jnz 0x1576e
0x15b8b: xor edx,edx
0x15b8d: movsx eax,bl
0x15b90: mov rdi,0x1844674407370955161
0x15b9a: mov rsi,r8
0x15b9d: sub eax,0x30
0x15ba0: cmp rdx,rdi
0x15ba3: cwde 
0x15ba5: jnbe 0x15bae
0x15ba7: lea rsi,[rdx+rdx*4+0x0]
0x15bab: add rsi,rsi
0x15bae: mov rcx,rbp
0x15bb1: add rax,rsi
0x15bb4: movzx ebx,byte ptr [rbp+0x1]
0x15bb8: setb sil
0x15bbc: add rbp,0x1
0x15bc0: mov rdx,rax
0x15bc3: movzx esi,sil
0x15bc7: test rsi,rsi
0x15bca: lea edi,[rbx-0x30]
0x15bcd: jnz 0x15f5e
0x15bd3: cmp dil,0x9
0x15bd7: jbe 0x15b8d
0x15bd9: mov r13,rax
0x15bdc: sub r13,0x1
0x15be0: cmp r13,0xfffffffd
0x15be4: jnbe 0x15e6b
0x15bea: lea rbp,[rcx+0x2]
0x15bee: movzx ebx,byte ptr [rcx+0x2]
0x15bf2: jmp 0x1576e
0x15bf7: mov qword ptr [r12+0x18],rbp
0x15bfc: movzx edi,byte ptr [rbp+0x0]
0x15c00: mov rsi,rbp
0x15c03: lea ecx,[rdi-0x30]
0x15c06: cmp cl,0x9
0x15c09: jbe 0x15c17
0x15c0b: jmp 0x15c40
0x15c0d: nop qword ptr [rax]
0x15c10: mov rbp,rax
0x15c13: add rax,0x1
0x15c17: movzx edi,byte ptr [rax]
0x15c1a: lea edx,[rdi-0x30]
0x15c1d: cmp dl,0x9
0x15c20: jbe 0x15c10
0x15c22: mov rcx,rax
0x15c25: lea rdx,[rbp+0x2]
0x15c29: mov rbp,rax
0x15c2c: sub rcx,rsi
0x15c2f: mov rsi,qword ptr [rsp+0x10]
0x15c34: cmp rsi,rcx
0x15c37: cmovnb rcx,rsi
0x15c3b: mov qword ptr [rsp+0x10],rcx
0x15c40: mov qword ptr [r12+0x20],rbp
0x15c45: movzx ebx,byte ptr [rbp+0x0]
0x15c49: jmp 0x157e5
0x15c4e: movzx eax,byte ptr [rbp+0x1]
0x15c52: sub eax,0x30
0x15c55: cmp al,0x9
0x15c57: jnbe 0x15c6e
0x15c59: nop qword ptr [rax+0x0]
0x15c60: add rdx,0x1
0x15c64: movzx eax,byte ptr [rdx]
0x15c67: sub eax,0x30
0x15c6a: cmp al,0x9
0x15c6c: jbe 0x15c60
0x15c6e: mov rsi,qword ptr [rsp+0x18]
0x15c73: mov rax,rdx
0x15c76: mov qword ptr [r12+0x38],rdx
0x15c7b: sub rax,rbp
0x15c7e: movzx ebx,byte ptr [rdx]
0x15c81: mov rbp,rdx
0x15c84: cmp rsi,rax
0x15c87: cmovnb rax,rsi
0x15c8b: mov qword ptr [rsp+0x18],rax
0x15c90: jmp 0x157ee
0x15c95: mov rsi,rax
0x15c98: add rsi,0x1
0x15c9c: movzx edi,byte ptr [rsi]
0x15c9f: lea r11d,[rdi-0x30]
0x15ca3: cmp r11b,0x9
0x15ca7: jbe 0x15c98
0x15ca9: cmp dil,0x24
0x15cad: jnz 0x159ba
0x15cb3: xor esi,esi
0x15cb5: movsx eax,cl
0x15cb8: mov rdi,0x1844674407370955161
0x15cc2: mov rcx,r8
0x15cc5: sub eax,0x30
0x15cc8: cmp rsi,rdi
0x15ccb: cwde 
0x15ccd: jnbe 0x15cd6
0x15ccf: lea rcx,[rsi+rsi*4+0x0]
0x15cd3: add rcx,rcx
0x15cd6: mov rbp,rdx
0x15cd9: xor r11d,r11d
0x15cdc: add rax,rcx
0x15cdf: movzx ecx,byte ptr [rdx+0x1]
0x15ce3: setb r11b
0x15ce7: add rdx,0x1
0x15ceb: mov rsi,rax
0x15cee: test r11,r11
0x15cf1: lea edi,[rcx-0x30]
0x15cf4: jnz 0x161fe
0x15cfa: cmp dil,0x9
0x15cfe: jbe 0x15cb5
0x15d00: lea rbx,[rax-0x1]
0x15d04: cmp rbx,0xfffffffd
0x15d08: jnbe 0x15e6b
0x15d0e: mov qword ptr [r12+0x28],rbx
0x15d13: add rbp,0x2
0x15d17: jmp 0x159df
0x15d1c: cmp eax,0xf
0x15d1f: mov r11d,0x16
0x15d25: jnle 0x15878
0x15d2b: test al,0x4
0x15d2d: jnz 0x15878
0x15d33: cmp eax,0x7
0x15d36: mov r11d,0x15
0x15d3c: jnle 0x15878
0x15d42: test al,0x2
0x15d44: mov r11d,0x12
0x15d4a: jnz 0x15878
0x15d50: xor r11d,r11d
0x15d53: test al,0x1
0x15d55: setz r11b
0x15d59: add r11d,0x13
0x15d5d: jmp 0x15878
0x15d62: nop qword ptr [rax+rax*1+0x0]
0x15d68: xor r11d,r11d
0x15d6b: cmp eax,0x7
0x15d6e: setnle r11b
0x15d72: add r11d,0xd
0x15d76: jmp 0x15878
0x15d7b: cmp eax,0xf
0x15d7e: mov r11d,0x9
0x15d84: jnle 0x15878
0x15d8a: test al,0x4
0x15d8c: jnz 0x15878
0x15d92: cmp eax,0x7
0x15d95: mov r11d,0x7
0x15d9b: jnle 0x15878
0x15da1: test al,0x2
0x15da3: mov r11d,0x1
0x15da9: jnz 0x15878
0x15daf: and eax,0x1
0x15db2: cmp eax,0x1
0x15db5: sbb r11d,r11d
0x15db8: and r11d,0x2
0x15dbc: add r11d,0x3
0x15dc0: jmp 0x15878
0x15dc5: nop qword ptr [rax]
0x15dc8: xor r11d,r11d
0x15dcb: cmp eax,0x7
0x15dce: setnle r11b
0x15dd2: add r11d,0xf
0x15dd6: jmp 0x15878
0x15ddb: cmp eax,0xf
0x15dde: mov r11d,0xc
0x15de4: jnle 0x15878
0x15dea: xor r11d,r11d
0x15ded: test al,0x4
0x15def: setnz r11b
0x15df3: add r11d,0xb
0x15df7: jmp 0x15878
0x15dfc: mov r11d,0xe
0x15e02: mov ebx,0x63
0x15e07: jmp 0x15878
0x15e0c: cmp eax,0xf
0x15e0f: mov r11d,0xa
0x15e15: jnle 0x15878
0x15e1b: test al,0x4
0x15e1d: jnz 0x15878
0x15e23: cmp eax,0x7
0x15e26: mov r11d,0x8
0x15e2c: jnle 0x15878
0x15e32: test al,0x2
0x15e34: mov r11d,0x2
0x15e3a: jnz 0x15878
0x15e40: and eax,0x1
0x15e43: cmp eax,0x1
0x15e46: sbb r11d,r11d
0x15e49: and r11d,0x2
0x15e4d: add r11d,0x4
0x15e51: jmp 0x15878
0x15e56: nop qword ptr [rax+rax*1+0x0]
0x15e60: mov r11d,0x11
0x15e66: jmp 0x15878
0x15e6b: mov rcx,qword ptr [r15+0x8]
0x15e6f: cmp qword ptr [rsp+0x8],rcx
0x15e74: jz 0x15e7e
0x15e76: mov rdi,rcx
0x15e79: call 0x30d0
0x15e7e: mov rdi,qword ptr [r14+0x8]
0x15e82: cmp qword ptr [rsp+0x28],rdi
0x15e87: jz 0x15e8e
0x15e89: call 0x30d0
0x15e8e: call 0x2950
0x15e93: mov [rax],0x16
0x15e99: mov eax,0xffffffff
0x15e9e: jmp 0x156c2
0x15ea3: cmp edx,r11d
0x15ea6: jz 0x158db
0x15eac: jmp 0x15e6f
0x15eae: nop 
0x15eb0: add r9,r9
0x15eb3: lea rax,[r13+0x1]
0x15eb7: cmp r9,r13
0x15eba: cmovbe r9,rax
0x15ebe: mov rax,0x576460752303423487
0x15ec8: cmp r9,rax
0x15ecb: jnbe 0x162ab
0x15ed1: mov rsi,r9
0x15ed4: mov qword ptr [rsp+0x48],r9
0x15ed9: mov qword ptr [rsp+0x40],r10
0x15ede: shl rsi,0x5
0x15ee2: cmp qword ptr [rsp+0x8],rcx
0x15ee7: mov qword ptr [rsp+0x38],r8
0x15eec: mov dword ptr [rsp+0x30],r11d
0x15ef1: jz 0x15f91
0x15ef7: mov rdi,rcx
0x15efa: call 0x2e90
0x15eff: test rax,rax
0x15f02: mov rcx,rax
0x15f05: mov r11d,dword ptr [rsp+0x30]
0x15f0a: mov r8,qword ptr [rsp+0x38]
0x15f0f: mov r10,qword ptr [rsp+0x40]
0x15f14: mov r9,qword ptr [rsp+0x48]
0x15f19: jz 0x162a7
0x15f1f: mov rax,qword ptr [rsp+0x8]
0x15f24: cmp rax,qword ptr [r15+0x8]
0x15f28: jz 0x15fb9
0x15f2e: mov qword ptr [r15+0x8],rcx
0x15f32: jmp 0x15894
0x15f37: mov rsi,qword ptr [rsp+0x20]
0x15f3c: cmp rsi,0xffffffff
0x15f40: lea rax,[rsi+0x1]
0x15f44: mov qword ptr [r12+0x50],rsi
0x15f49: jz 0x15e6b
0x15f4f: mov r13,qword ptr [rsp+0x20]
0x15f54: mov qword ptr [rsp+0x20],rax
0x15f59: jmp 0x15887
0x15f5e: cmp dil,0x9
0x15f62: jnbe 0x15e6b
0x15f68: movsx eax,bl
0x15f6b: mov rsi,r8
0x15f6e: mov rcx,rbp
0x15f71: sub eax,0x30
0x15f74: cwde 
0x15f76: jmp 0x15bb1
0x15f7b: cmp edx,0x5
0x15f7e: jnz 0x15e6f
0x15f84: movzx ebx,byte ptr [rbp+0x0]
0x15f88: lea rdx,[rbp+0x1]
0x15f8c: jmp 0x157e5
0x15f91: mov rdi,rsi
0x15f94: call 0x2df0
0x15f99: test rax,rax
0x15f9c: mov rcx,rax
0x15f9f: mov r11d,dword ptr [rsp+0x30]
0x15fa4: mov r8,qword ptr [rsp+0x38]
0x15fa9: mov r10,qword ptr [rsp+0x40]
0x15fae: mov r9,qword ptr [rsp+0x48]
0x15fb3: jz 0x1611c
0x15fb9: mov rdx,qword ptr [r15]
0x15fbc: mov rsi,qword ptr [rsp+0x8]
0x15fc1: mov rdi,rcx
0x15fc4: mov qword ptr [rsp+0x48],r9
0x15fc9: mov qword ptr [rsp+0x40],r10
0x15fce: mov qword ptr [rsp+0x38],r8
0x15fd3: mov dword ptr [rsp+0x30],r11d
0x15fd8: shl rdx,0x5
0x15fdc: call 0x2d80
0x15fe1: mov r9,qword ptr [rsp+0x48]
0x15fe6: mov r10,qword ptr [rsp+0x40]
0x15feb: mov rcx,rax
0x15fee: mov r8,qword ptr [rsp+0x38]
0x15ff3: mov r11d,dword ptr [rsp+0x30]
0x15ff8: jmp 0x15f2e
0x15ffd: mov rdi,rsi
0x16000: call 0x2df0
0x16005: test rax,rax
0x16008: mov rcx,rax
0x1600b: mov r8,qword ptr [rsp+0x30]
0x16010: mov r10,qword ptr [rsp+0x38]
0x16015: mov r9,qword ptr [rsp+0x40]
0x1601a: jz 0x16109
0x16020: lea rax,[rbx+rbx*4+0x0]
0x16024: mov rsi,qword ptr [rsp+0x28]
0x16029: mov rdi,rcx
0x1602c: mov qword ptr [rsp+0x40],r9
0x16031: mov qword ptr [rsp+0x38],r10
0x16036: lea rdx,[rbx+rax*2+0x0]
0x1603a: mov qword ptr [rsp+0x30],r8
0x1603f: shl rdx,0x3
0x16043: call 0x2d80
0x16048: mov rbx,qword ptr [r14]
0x1604b: mov rcx,rax
0x1604e: mov r9,qword ptr [rsp+0x40]
0x16053: mov r10,qword ptr [rsp+0x38]
0x16058: mov r8,qword ptr [rsp+0x30]
0x1605d: jmp 0x15977
0x16062: mov rax,qword ptr [r15]
0x16065: jmp 0x15a67
0x1606a: cmp edx,0x5
0x1606d: jnz 0x15e6f
0x16073: movzx ebx,byte ptr [r11]
0x16077: mov rbp,r11
0x1607a: jmp 0x157ee
0x1607f: add r9,r9
0x16082: lea rax,[rbx+0x1]
0x16086: cmp r9,rbx
0x16089: cmovbe r9,rax
0x1608d: mov rax,0x576460752303423487
0x16097: cmp r9,rax
0x1609a: jnbe 0x162ab
0x160a0: mov rsi,r9
0x160a3: mov qword ptr [rsp+0x48],r9
0x160a8: mov qword ptr [rsp+0x40],r10
0x160ad: shl rsi,0x5
0x160b1: cmp qword ptr [rsp+0x8],rcx
0x160b6: mov qword ptr [rsp+0x38],r8
0x160bb: mov qword ptr [rsp+0x30],r11
0x160c0: jz 0x1627e
0x160c6: mov rdi,rcx
0x160c9: call 0x2e90
0x160ce: mov rdx,qword ptr [r15+0x8]
0x160d2: mov r11,qword ptr [rsp+0x30]
0x160d7: mov rcx,rax
0x160da: mov r8,qword ptr [rsp+0x38]
0x160df: mov r10,qword ptr [rsp+0x40]
0x160e4: mov r9,qword ptr [rsp+0x48]
0x160e9: test rcx,rcx
0x160ec: jz 0x16307
0x160f2: cmp qword ptr [rsp+0x8],rdx
0x160f7: mov rax,qword ptr [r15]
0x160fa: jz 0x162c0
0x16100: mov qword ptr [r15+0x8],rcx
0x16104: jmp 0x15b1d
0x16109: mov rcx,qword ptr [r15+0x8]
0x1610d: cmp qword ptr [rsp+0x8],rcx
0x16112: jz 0x1612c
0x16114: mov rdi,rcx
0x16117: call 0x30d0
0x1611c: mov rdi,qword ptr [r14+0x8]
0x16120: cmp qword ptr [rsp+0x28],rdi
0x16125: jz 0x1612c
0x16127: call 0x30d0
0x1612c: call 0x2950
0x16131: mov [rax],0xc
0x16137: mov eax,0xffffffff
0x1613c: jmp 0x156c2
0x16141: mov rdi,rsi
0x16144: call 0x2df0
0x16149: mov rdx,qword ptr [rsp+0x8]
0x1614e: mov rcx,rax
0x16151: mov r9,qword ptr [rsp+0x40]
0x16156: mov r10,qword ptr [rsp+0x38]
0x1615b: mov r8,qword ptr [rsp+0x30]
0x16160: jmp 0x15a4c
0x16165: mov rsi,qword ptr [rsp+0x20]
0x1616a: cmp rsi,0xffffffff
0x1616e: lea rax,[rsi+0x1]
0x16172: mov qword ptr [r12+0x40],rsi
0x16177: jz 0x15e6b
0x1617d: mov rbx,qword ptr [rsp+0x20]
0x16182: mov qword ptr [rsp+0x20],rax
0x16187: jmp 0x15b0d
0x1618c: mov rdx,r11
0x1618f: add rdx,0x1
0x16193: movzx ecx,byte ptr [rdx]
0x16196: lea esi,[rcx-0x30]
0x16199: cmp sil,0x9
0x1619d: jbe 0x1618f
0x1619f: cmp cl,0x24
0x161a2: jnz 0x15afe
0x161a8: xor ecx,ecx
0x161aa: mov rsi,0x1844674407370955161
0x161b4: sub eax,0x30
0x161b7: mov rdx,r8
0x161ba: cmp rcx,rsi
0x161bd: cwde 
0x161bf: jnbe 0x161c8
0x161c1: lea rdx,[rcx+rcx*4+0x0]
0x161c5: add rdx,rdx
0x161c8: mov rsi,r11
0x161cb: xor ebx,ebx
0x161cd: add rdx,rax
0x161d0: movsx eax,byte ptr [r11+0x1]
0x161d5: setb bl
0x161d8: add r11,0x1
0x161dc: mov rcx,rdx
0x161df: test rbx,rbx
0x161e2: lea edi,[rax-0x30]
0x161e5: jz 0x16258
0x161e7: cmp dil,0x9
0x161eb: jnbe 0x15e6b
0x161f1: sub eax,0x30
0x161f4: mov rdx,r8
0x161f7: mov rsi,r11
0x161fa: cwde 
0x161fc: jmp 0x161cb
0x161fe: cmp dil,0x9
0x16202: jnbe 0x15e6b
0x16208: movsx eax,cl
0x1620b: mov rbp,rdx
0x1620e: mov rcx,r8
0x16211: sub eax,0x30
0x16214: cwde 
0x16216: jmp 0x15cd9
0x1621b: mov rsi,qword ptr [rsp+0x8]
0x16220: shl rax,0x5
0x16224: mov rdi,rcx
0x16227: mov rdx,rax
0x1622a: mov qword ptr [rsp+0x40],r9
0x1622f: mov qword ptr [rsp+0x38],r10
0x16234: mov qword ptr [rsp+0x30],r8
0x16239: call 0x2d80
0x1623e: mov r9,qword ptr [rsp+0x40]
0x16243: mov rcx,rax
0x16246: mov r10,qword ptr [rsp+0x38]
0x1624b: mov rax,qword ptr [r15]
0x1624e: mov r8,qword ptr [rsp+0x30]
0x16253: jmp 0x15a63
0x16258: cmp dil,0x9
0x1625c: jbe 0x161aa
0x16262: lea rbx,[rdx-0x1]
0x16266: cmp rbx,0xfffffffd
0x1626a: jnbe 0x15e6b
0x16270: mov qword ptr [r12+0x40],rbx
0x16275: lea r11,[rsi+0x2]
0x16279: jmp 0x15b0d
0x1627e: mov rdi,rsi
0x16281: call 0x2df0
0x16286: mov rdx,qword ptr [rsp+0x8]
0x1628b: mov rcx,rax
0x1628e: mov r9,qword ptr [rsp+0x48]
0x16293: mov r10,qword ptr [rsp+0x40]
0x16298: mov r8,qword ptr [rsp+0x38]
0x1629d: mov r11,qword ptr [rsp+0x30]
0x162a2: jmp 0x160e9
0x162a7: mov rcx,qword ptr [r15+0x8]
0x162ab: cmp qword ptr [rsp+0x8],rcx
0x162b0: jnz 0x16114
0x162b6: jmp 0x1611c
0x162bb: nop qword ptr [rax+rax*1+0x0]
0x162c0: mov rsi,qword ptr [rsp+0x8]
0x162c5: shl rax,0x5
0x162c9: mov rdi,rcx
0x162cc: mov rdx,rax
0x162cf: mov qword ptr [rsp+0x48],r9
0x162d4: mov qword ptr [rsp+0x40],r10
0x162d9: mov qword ptr [rsp+0x38],r8
0x162de: mov qword ptr [rsp+0x30],r11
0x162e3: call 0x2d80
0x162e8: mov r9,qword ptr [rsp+0x48]
0x162ed: mov rcx,rax
0x162f0: mov r10,qword ptr [rsp+0x40]
0x162f5: mov rax,qword ptr [r15]
0x162f8: mov r8,qword ptr [rsp+0x38]
0x162fd: mov r11,qword ptr [rsp+0x30]
0x16302: jmp 0x16100
0x16307: mov rcx,rdx
0x1630a: jmp 0x162ab
0x16310: push r15
0x16312: push r14
0x16314: mov r15,rdx
0x16317: push r13
0x16319: push r12
0x1631b: lea r12,[rip+0x20638e]
0x16322: push rbp
0x16323: lea rbp,[rip+0x20638e]
0x1632a: push rbx
0x1632b: mov r13d,edi
0x1632e: mov r14,rsi
0x16331: sub rbp,r12
0x16334: sub rsp,0x8
0x16338: sar rbp,0x3
0x1633c: call 0x28c0
0x16341: test rbp,rbp
0x16344: jz 0x16366
0x16346: xor ebx,ebx
0x16348: nop qword ptr [rax+rax*1+0x0]
0x16350: mov rdx,r15
0x16353: mov rsi,r14
0x16356: mov edi,r13d
0x16359: call qword ptr [r12+rbx*8+0x0]
0x1635d: add rbx,0x1
0x16361: cmp rbp,rbx
0x16364: jnz 0x16350
0x16366: add rsp,0x8
0x1636a: pop rbx
0x1636b: pop rbp
0x1636c: pop r12
0x1636e: pop r13
0x16370: pop r14
0x16372: pop r15
0x16374: ret
0x163a0: sub rsp,0x8
0x163a4: add rsp,0x8
0x163a8: ret
