
"free@plt" :
15b0(6): jmp 0x20c86a(%rip)
15b6(5): push $0x0

"abort@plt" :
15c0(6): jmp 0x20c862(%rip)
15c6(5): push $0x1

"__errno_location@plt" :
15d0(6): jmp 0x20c85a(%rip)
15d6(5): push $0x2

"strncmp@plt" :
15e0(6): jmp 0x20c852(%rip)
15e6(5): push $0x3

"_exit@plt" :
15f0(6): jmp 0x20c84a(%rip)
15f6(5): push $0x4

"__fpending@plt" :
1600(6): jmp 0x20c842(%rip)
1606(5): push $0x5

"fcntl@plt" :
1610(6): jmp 0x20c83a(%rip)
1616(5): push $0x6

"fread_unlocked@plt" :
1620(6): jmp 0x20c832(%rip)
1626(5): push $0x7

"textdomain@plt" :
1630(6): jmp 0x20c82a(%rip)
1636(5): push $0x8

"fclose@plt" :
1640(6): jmp 0x20c822(%rip)
1646(5): push $0x9

"bindtextdomain@plt" :
1650(6): jmp 0x20c81a(%rip)
1656(5): push $0xa

"dcgettext@plt" :
1660(6): jmp 0x20c812(%rip)
1666(5): push $0xb

"__ctype_get_mb_cur_max@plt" :
1670(6): jmp 0x20c80a(%rip)
1676(5): push $0xc

"strlen@plt" :
1680(6): jmp 0x20c802(%rip)
1686(5): push $0xd

"__stack_chk_fail@plt" :
1690(6): jmp 0x20c7fa(%rip)
1696(5): push $0xe

"getopt_long@plt" :
16a0(6): jmp 0x20c7f2(%rip)
16a6(5): push $0xf

"mbrtowc@plt" :
16b0(6): jmp 0x20c7ea(%rip)
16b6(5): push $0x10

"strchr@plt" :
16c0(6): jmp 0x20c7e2(%rip)
16c6(5): push $0x11

"__overflow@plt" :
16d0(6): jmp 0x20c7da(%rip)
16d6(5): push $0x12

"strrchr@plt" :
16e0(6): jmp 0x20c7d2(%rip)
16e6(5): push $0x13

"lseek@plt" :
16f0(6): jmp 0x20c7ca(%rip)
16f6(5): push $0x14

"memset@plt" :
1700(6): jmp 0x20c7c2(%rip)
1706(5): push $0x15

"close@plt" :
1710(6): jmp 0x20c7ba(%rip)
1716(5): push $0x16

"posix_fadvise@plt" :
1720(6): jmp 0x20c7b2(%rip)
1726(5): push $0x17

"memcmp@plt" :
1730(6): jmp 0x20c7aa(%rip)
1736(5): push $0x18

"fputs_unlocked@plt" :
1740(6): jmp 0x20c7a2(%rip)
1746(5): push $0x19

"calloc@plt" :
1750(6): jmp 0x20c79a(%rip)
1756(5): push $0x1a

"__getdelim@plt" :
1760(6): jmp 0x20c792(%rip)
1766(5): push $0x1b

"memcpy@plt" :
1770(6): jmp 0x20c78a(%rip)
1776(5): push $0x1c

"fileno@plt" :
1780(6): jmp 0x20c782(%rip)
1786(5): push $0x1d

"malloc@plt" :
1790(6): jmp 0x20c77a(%rip)
1796(5): push $0x1e

"fflush@plt" :
17a0(6): jmp 0x20c772(%rip)
17a6(5): push $0x1f

"nl_langinfo@plt" :
17b0(6): jmp 0x20c76a(%rip)
17b6(5): push $0x20

"__freading@plt" :
17c0(6): jmp 0x20c762(%rip)
17c6(5): push $0x21

"fwrite_unlocked@plt" :
17d0(6): jmp 0x20c75a(%rip)
17d6(5): push $0x22

"realloc@plt" :
17e0(6): jmp 0x20c752(%rip)
17e6(5): push $0x23

"fdopen@plt" :
17f0(6): jmp 0x20c74a(%rip)
17f6(5): push $0x24

"setlocale@plt" :
1800(6): jmp 0x20c742(%rip)
1806(5): push $0x25

"__printf_chk@plt" :
1810(6): jmp 0x20c73a(%rip)
1816(5): push $0x26

"setvbuf@plt" :
1820(6): jmp 0x20c732(%rip)
1826(5): push $0x27

"error@plt" :
1830(6): jmp 0x20c72a(%rip)
1836(5): push $0x28

"fseeko@plt" :
1840(6): jmp 0x20c722(%rip)
1846(5): push $0x29

"fopen@plt" :
1850(6): jmp 0x20c71a(%rip)
1856(5): push $0x2a

"dcngettext@plt" :
1860(6): jmp 0x20c712(%rip)
1866(5): push $0x2b

"__cxa_atexit@plt" :
1870(6): jmp 0x20c70a(%rip)
1876(5): push $0x2c

"exit@plt" :
1880(6): jmp 0x20c702(%rip)
1886(5): push $0x2d

"fwrite@plt" :
1890(6): jmp 0x20c6fa(%rip)
1896(5): push $0x2e

"__fprintf_chk@plt" :
18a0(6): jmp 0x20c6f2(%rip)
18a6(5): push $0x2f

"mbsinit@plt" :
18b0(6): jmp 0x20c6ea(%rip)
18b6(5): push $0x30

"iswprint@plt" :
18c0(6): jmp 0x20c6e2(%rip)
18c6(5): push $0x31

"__ctype_tolower_loc@plt" :
18d0(6): jmp 0x20c6da(%rip)
18d6(5): push $0x32

"__ctype_b_loc@plt" :
18e0(6): jmp 0x20c6d2(%rip)
18e6(5): push $0x33

".plt.got" :
18f0(6): jmp 0x20c6ea(%rip)
18f6(2): nop 

"_init" :
1580(4): sub $0x8,%rsp
1584(7): mov 0x20ca45(%rip),%rax
158b(3): test %rax,%rax
158e(2): jz 0x4(%rip)
1590(2): call %rax
1592(4): add $0x8,%rsp
1596(1): ret near (%rsp)

"main" :
1900(2): push %r15
1902(2): push %r14
1904(2): push %r13
1906(2): push %r12
1908(3): mov %edi,%r12d
190b(1): push %rbp
190c(1): push %rbx
190d(3): mov %rsi,%rbx
1910(5): mov $0xffffffff,%ebp
1915(7): sub $0x128,%rsp
191c(3): mov (%rsi),%rdi
191f(9): mov $0x28,%rax
1928(8): mov %rax,0x118(%rsp)
1930(2): xor %eax,%eax
1932(5): call 0x615e(%rip)
1937(7): lea 0x9f23(%rip),%rsi
193e(5): mov $0x6,%edi
1943(5): call 0xfffffebd(%rip)
1948(7): lea 0x8df0(%rip),%rsi
194f(7): lea 0x8dc0(%rip),%rdi
1956(5): call 0xfffffcfa(%rip)
195b(7): lea 0x8db4(%rip),%rdi
1962(5): call 0xfffffcce(%rip)
1967(7): lea 0x19b2(%rip),%rdi
196e(5): call 0x8ce2(%rip)
1973(7): mov 0x20c72e(%rip),%rdi
197a(2): xor %ecx,%ecx
197c(5): mov $0x1,%edx
1981(2): xor %esi,%esi
1983(5): call 0xfffffe9d(%rip)
1988(5): mov $0x0,0x78(%rsp)
198d(5): mov $0x0,0x2b(%rsp)
1992(6): nop 0x0(%rax,%rax,1)
1998(7): lea 0x20c081(%rip),%rcx
199f(7): lea 0x8dda(%rip),%rdx
19a6(3): xor %r8d,%r8d
19a9(3): mov %rbx,%rsi
19ac(3): mov %r12d,%edi
19af(5): call 0xfffffcf1(%rip)
19b4(3): cmp $0xff,%eax
19b7(6): jz 0x185(%rip)
19bd(3): cmp $0x77,%eax
19c0(6): jz 0xe0(%rip)
19c6(2): jle 0x3a(%rip)
19c8(5): cmp $0x81,%eax
19cd(6): jz 0x123(%rip)
19d3(2): jle 0x55(%rip)
19d5(5): cmp $0x83,%eax
19da(6): jz 0x106(%rip)
19e0(6): jl 0xe0(%rip)
19e6(5): cmp $0x84,%eax
19eb(6): jnz 0x1e5(%rip)
19f1(5): mov $0x1,0x78(%rsp)
19f6(5): mov $0x1,%ebp
19fb(2): jmp 0xffffff9d(%rip)
19fd(3): nop (%rax)
1a00(3): cmp $0x62,%eax
1a03(6): jz 0x11d(%rip)
1a09(2): jle 0x47(%rip)
1a0b(3): cmp $0x63,%eax
1a0e(6): jz 0x102(%rip)
1a14(3): cmp $0x74,%eax
1a17(6): jnz 0x1b9(%rip)
1a1d(2): xor %ebp,%ebp
1a1f(5): jmp 0xffffff79(%rip)
1a24(4): nop 0x0(%rax)
1a28(3): cmp $0x7a,%eax
1a2b(6): jz 0x105(%rip)
1a31(3): add $0x80,%eax
1a34(6): jnz 0x19c(%rip)
1a3a(7): mov $0x1,0x20c6b1(%rip)
1a41(5): jmp 0xffffff57(%rip)
1a46(a): nop 0x0(%rax,%rax,1)
1a50(5): cmp $0xffffff7d,%eax
1a55(6): jnz 0xf7c(%rip)
1a5b(7): lea 0x8d11(%rip),%rax
1a62(7): mov 0x20c63f(%rip),%rdi
1a69(7): mov 0x20c5a8(%rip),%rcx
1a70(2): push $0x0
1a72(7): lea 0x8cde(%rip),%r9
1a79(7): lea 0x8ce4(%rip),%r8
1a80(1): push %rax
1a81(7): lea 0x8c8a(%rip),%rdx
1a88(7): lea 0x8bfb(%rip),%rsi
1a8f(2): xor %eax,%eax
1a91(5): call 0x81ff(%rip)
1a96(2): xor %edi,%edi
1a98(5): call 0xfffffde8(%rip)
1a9d(3): nop (%rax)
1aa0(7): mov $0x0,0x20c64d(%rip)
1aa7(7): mov $0x1,0x20c645(%rip)
1aae(7): mov $0x0,0x20c63c(%rip)
1ab5(5): jmp 0xfffffee3(%rip)
1aba(6): nop 0x0(%rax,%rax,1)
1ac0(7): mov $0x0,0x20c62d(%rip)
1ac7(7): mov $0x0,0x20c625(%rip)
1ace(7): mov $0x1,0x20c61c(%rip)
1ad5(5): jmp 0xfffffec3(%rip)
1ada(6): nop 0x0(%rax,%rax,1)
1ae0(7): mov $0x1,0x20c609(%rip)
1ae7(5): jmp 0xfffffeb1(%rip)
1aec(4): nop 0x0(%rax)
1af0(7): mov $0x1,0x20c5fd(%rip)
1af7(7): mov $0x0,0x20c5f5(%rip)
1afe(7): mov $0x0,0x20c5ec(%rip)
1b05(5): jmp 0xfffffe93(%rip)
1b0a(6): nop 0x0(%rax,%rax,1)
1b10(5): mov $0x1,0x2b(%rsp)
1b15(5): jmp 0xfffffe83(%rip)
1b1a(6): nop 0x0(%rax,%rax,1)
1b20(5): mov $0x1,%ebp
1b25(5): jmp 0xfffffe73(%rip)
1b2a(6): nop 0x0(%rax,%rax,1)
1b30(7): mov $0x0,0x20c4d9(%rip)
1b37(5): jmp 0xfffffe61(%rip)
1b3c(2): test %ebp,%ebp
1b3e(b): mov $0x62,0x20c5b7(%rip)
1b49(b): mov $0x60,0x20c5a4(%rip)
1b54(3): setz %al
1b57(4): test %al,0x78(%rsp)
1b5b(6): jnz 0xec0(%rip)
1b61(7): cmp $0xa,0x20c4a8(%rip)
1b68(2): jz 0x72(%rip)
1b6a(5): cmp $0x0,0x2b(%rsp)
1b6f(5): mov $0x5,%edx
1b74(7): lea 0x930d(%rip),%rsi
1b7b(2): jnz 0x40(%rip)
1b7d(7): cmp $0x0,0x20c56e(%rip)
1b84(6): jnz 0xea8(%rip)
1b8a(7): cmp $0x0,0x20c563(%rip)
1b91(6): jnz 0xe6f(%rip)
1b97(7): cmp $0x0,0x20c555(%rip)
1b9e(6): jz 0x307(%rip)
1ba4(5): cmp $0x0,0x2b(%rsp)
1ba9(5): mov $0x5,%edx
1bae(7): lea 0x942b(%rip),%rsi
1bb5(6): jnz 0x88(%rip)
1bbb(2): xor %edi,%edi
1bbd(5): call 0xfffffaa3(%rip)
1bc2(2): xor %esi,%esi
1bc4(3): mov %rax,%rdx
1bc7(2): xor %edi,%edi
1bc9(2): xor %eax,%eax
1bcb(5): call 0xfffffc65(%rip)
1bd0(5): mov $0x1,%edi
1bd5(5): call 0x12cb(%rip)
1bda(5): cmp $0x0,0x2b(%rsp)
1bdf(2): jz 0x15(%rip)
1be1(5): cmp $0x0,0x78(%rsp)
1be6(5): mov $0x5,%edx
1beb(7): lea 0x92d6(%rip),%rsi
1bf2(2): jnz 0xffffffc9(%rip)
1bf4(2): test %ebp,%ebp
1bf6(2): js 0x15(%rip)
1bf8(5): cmp $0x0,0x2b(%rsp)
1bfd(5): mov $0x5,%edx
1c02(7): lea 0x92ff(%rip),%rsi
1c09(2): jnz 0xffffffb2(%rip)
1c0b(7): cmp $0x0,0x20c4e0(%rip)
1c12(6): jz 0xdd6(%rip)
1c18(5): cmp $0x0,0x2b(%rsp)
1c1d(6): jz 0xe0f(%rip)
1c23(7): cmp $0x0,0x20c4ca(%rip)
1c2a(6): jz 0x983(%rip)
1c30(7): cmp $0x0,0x20c4bc(%rip)
1c37(6): jz 0x26e(%rip)
1c3d(3): cmp $0xff,%ebp
1c40(2): jnz 0x4(%rip)
1c42(2): xor %ebp,%ebp
1c44(3): movsxd %r12d,%rax
1c47(4): lea 0x0(%rbx,%rax,8),%rax
1c4b(5): mov %rax,0x48(%rsp)
1c50(7): movsxd 0x20c461(%rip),%rax
1c57(3): cmp %r12d,%eax
1c5a(2): jnz 0x1b(%rip)
1c5c(5): mov 0x48(%rsp),%rdi
1c61(7): lea 0x96ba(%rip),%rsi
1c68(4): add $0x8,%rdi
1c6c(4): mov %rsi,0xfffffff8(%rdi)
1c70(5): mov %rdi,0x48(%rsp)
1c75(4): lea 0x0(%rbx,%rax,8),%rax
1c79(5): cmp %rax,0x48(%rsp)
1c7e(5): mov %rax,0x18(%rsp)
1c83(6): jbe 0xcb1(%rip)
1c89(3): cmp $0x1,%ebp
1c8c(7): lea 0x959d(%rip),%r14
1c93(5): mov $0x1,0x79(%rsp)
1c98(2): sbb %eax,%eax
1c9a(3): and $0xf6,%eax
1c9d(3): add $0x2a,%eax
1ca0(4): mov %eax,0x7c(%rsp)
1ca4(4): mov %al,0x7b(%rsp)
1ca8(8): nop 0x0(%rax,%rax,1)
1cb0(5): mov 0x18(%rsp),%rax
1cb5(5): cmp $0x0,0x2b(%rsp)
1cba(3): mov (%rax),%rsi
1cbd(5): mov %rsi,0x20(%rsp)
1cc2(6): jz 0x67e(%rip)
1cc8(7): lea 0x9653(%rip),%rdi
1ccf(5): mov $0x2,%ecx
1cd4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1cd6(3): setnbe %al
1cd9(2): sbb $0x0,%al
1cdb(3): movsx %al,%eax
1cde(2): test %eax,%eax
1ce0(4): mov %eax,0x2c(%rsp)
1ce4(6): jnz 0x731(%rip)
1cea(7): lea 0x8a95(%rip),%rsi
1cf1(5): mov $0x5,%edx
1cf6(2): xor %edi,%edi
1cf8(7): mov $0x1,0x20c409(%rip)
1cff(5): call 0xfffff961(%rip)
1d04(7): mov 0x20c3a5(%rip),%r12
1d0b(5): mov %rax,0x20(%rsp)
1d10(8): lea 0x98(%rsp),%rax
1d18(c): mov $0x0,0x90(%rsp)
1d24(c): mov $0x0,0x98(%rsp)
1d30(5): mov $0x0,0x7a(%rsp)
1d35(5): mov $0x0,0x30(%rsp)
1d3a(3): xor %r13d,%r13d
1d3d(5): mov %rax,0x10(%rsp)
1d42(8): lea 0x90(%rsp),%rax
1d4a(9): mov $0x0,0x58(%rsp)
1d53(9): mov $0x0,0x50(%rsp)
1d5c(5): mov $0x1,%ebp
1d61(5): mov %rax,0x8(%rsp)
1d66(8): lea 0x8f(%rsp),%rax
1d6e(5): mov %rax,0x40(%rsp)
1d73(8): lea 0xe0(%rsp),%rax
1d7b(5): mov %rax,0x38(%rsp)
1d80(5): mov 0x10(%rsp),%rsi
1d85(5): mov 0x8(%rsp),%rdi
1d8a(3): mov %r12,%rcx
1d8d(5): mov $0xa,%edx
1d92(5): call 0xfffff9ce(%rip)
1d97(3): test %rax,%rax
1d9a(6): jle 0x302(%rip)
1da0(8): mov 0x90(%rsp),%rbx
1da8(3): movzx (%rbx),%ecx
1dab(3): cmp $0x23,%cl
1dae(6): jz 0xa7(%rip)
1db4(5): cmp $0xa,0xffffffff(%rbx,%rax,1)
1db9(3): mov %rax,%r15
1dbc(2): jnz 0x16(%rip)
1dbe(4): sub $0x1,%r15
1dc2(5): mov $0x0,0x0(%rbx,%r15,1)
1dc7(8): mov 0x90(%rsp),%rbx
1dcf(3): movzx (%rbx),%ecx
1dd2(3): cmp $0x9,%cl
1dd5(2): jz 0x9(%rip)
1dd7(2): xor %edx,%edx
1dd9(3): cmp $0x20,%cl
1ddc(2): jnz 0x16(%rip)
1dde(2): xor %edx,%edx
1de0(4): add $0x1,%rdx
1de4(4): movzx 0x0(%rbx,%rdx,1),%ecx
1de8(3): cmp $0x20,%cl
1deb(2): jz 0xfffffff5(%rip)
1ded(3): cmp $0x9,%cl
1df0(2): jz 0xfffffff0(%rip)
1df2(3): xor %r9d,%r9d
1df5(3): cmp $0x5c,%cl
1df8(2): jnz 0xc(%rip)
1dfa(6): movzx 0x2b(%rsp),%r9d
1e00(4): add $0x1,%rdx
1e04(4): lea 0x0(%rbx,%rdx,1),%r8
1e08(7): lea 0x8885(%rip),%rdi
1e0f(5): mov $0x6,%ecx
1e14(3): mov %r8,%rsi
1e17(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1e19(3): setnbe %al
1e1c(2): sbb $0x0,%al
1e1e(2): test %al,%al
1e20(6): jnz 0xd0(%rip)
1e26(5): movzx 0x6(%rbx,%rdx,1),%eax
1e2b(4): lea 0x6(%rdx),%rcx
1e2f(2): cmp $0x20,%al
1e31(2): jnz 0xb(%rip)
1e33(5): movzx 0x7(%rbx,%rdx,1),%eax
1e38(4): lea 0x7(%rdx),%rcx
1e3c(2): cmp $0x28,%al
1e3e(6): jz 0x586(%rip)
1e44(4): add $0x1,%r13
1e48(7): cmp $0x0,0x20c2a4(%rip)
1e4f(6): jnz 0x381(%rip)
1e55(5): test $0x30,(%r12)
1e5a(6): jnz 0x242(%rip)
1e60(4): add $0x1,%rbp
1e64(6): jnz 0xffffff1c(%rip)
1e6a(5): mov 0x20(%rsp),%rdx
1e6f(5): mov $0x3,%esi
1e74(2): xor %edi,%edi
1e76(5): call 0x775a(%rip)
1e7b(7): lea 0x8913(%rip),%rsi
1e82(3): mov %rax,%rbx
1e85(5): mov $0x5,%edx
1e8a(2): xor %edi,%edi
1e8c(5): call 0xfffff7d4(%rip)
1e91(3): mov %rbx,%rcx
1e94(3): mov %rax,%rdx
1e97(2): xor %esi,%esi
1e99(5): mov $0x1,%edi
1e9e(2): xor %eax,%eax
1ea0(5): call 0xfffff990(%rip)
1ea5(7): cmp $0x1,0x20c245(%rip)
1eac(2): jnz 0x19(%rip)
1eae(5): cmp $0x0,0x2b(%rsp)
1eb3(5): mov $0x5,%edx
1eb8(7): lea 0x9161(%rip),%rsi
1ebf(6): jz 0xfffffcfc(%rip)
1ec5(7): cmp $0x0,0x20c224(%rip)
1ecc(6): jz 0xfffffd71(%rip)
1ed2(5): cmp $0x0,0x2b(%rsp)
1ed7(5): mov $0x5,%edx
1edc(7): lea 0x917d(%rip),%rsi
1ee3(6): jnz 0xfffffd5a(%rip)
1ee9(5): jmp 0xfffffcd2(%rip)
1eee(2): nop 
1ef0(3): mov %r15,%rcx
1ef3(2): xor %eax,%eax
1ef5(3): sub %rdx,%rcx
1ef8(4): cmp $0x5c,(%r8)
1efc(3): setz %al
1eff(7): add 0x20c1fa(%rip),%rax
1f06(3): cmp %rax,%rcx
1f09(6): jb 0xffffff3b(%rip)
1f0f(7): add 0x20c1e2(%rip),%rdx
1f16(4): lea 0x0(%rbx,%rdx,1),%rcx
1f1a(3): movzx (%rcx),%eax
1f1d(2): cmp $0x20,%al
1f1f(2): jz 0xa(%rip)
1f21(2): cmp $0x9,%al
1f23(6): jnz 0xffffff21(%rip)
1f29(3): mov $0x0,(%rcx)
1f2c(3): mov %r8,%rdi
1f2f(5): mov %rdx,0x70(%rsp)
1f34(5): mov %r9b,0x68(%rsp)
1f39(5): mov %r8,0x60(%rsp)
1f3e(5): call 0xc92(%rip)
1f43(2): test %al,%al
1f45(6): jz 0xfffffeff(%rip)
1f4b(5): mov 0x70(%rsp),%rdx
1f50(3): mov %r15,%rcx
1f53(6): mov 0x20c0bb(%rip),%esi
1f59(5): mov 0x60(%rsp),%r8
1f5e(6): movzx 0x68(%rsp),%r9d
1f64(4): lea 0x1(%rdx),%rax
1f68(3): sub %rax,%rcx
1f6b(4): sub $0x1,%rcx
1f6f(2): jz 0x19(%rip)
1f71(5): movzx 0x1(%rbx,%rdx,1),%ecx
1f76(3): cmp $0x20,%cl
1f79(6): jz 0x76b(%rip)
1f7f(3): cmp $0x2a,%cl
1f82(6): jz 0x762(%rip)
1f88(2): test %esi,%esi
1f8a(6): jz 0xfffffeba(%rip)
1f90(a): mov $0x1,0x20c07a(%rip)
1f9a(3): add %rax,%rbx
1f9d(3): test %r9b,%r9b
1fa0(6): jnz 0x7a1(%rip)
1fa6(4): mov 0x2c(%rsp),%eax
1faa(2): test %eax,%eax
1fac(2): jnz 0x20(%rip)
1fae(7): lea 0x936d(%rip),%rdi
1fb5(5): mov $0x2,%ecx
1fba(3): mov %rbx,%rsi
1fbd(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1fbf(3): setnbe %al
1fc2(2): sbb $0x0,%al
1fc4(2): test %al,%al
1fc6(6): jz 0xfffffe7e(%rip)
1fcc(3): xor %r15d,%r15d
1fcf(7): cmp $0x0,0x20c11e(%rip)
1fd6(2): jnz 0x23(%rip)
1fd8(5): mov $0xa,%esi
1fdd(3): mov %rbx,%rdi
1fe0(5): mov %r8,0x30(%rsp)
1fe5(5): call 0xfffff6db(%rip)
1fea(5): mov 0x30(%rsp),%r8
1fef(3): xor %r15d,%r15d
1ff2(3): test %rax,%rax
1ff5(4): setnz %r15b
1ff9(5): mov 0x40(%rsp),%rdx
1ffe(5): mov 0x38(%rsp),%rsi
2003(3): mov %rbx,%rdi
2006(5): mov %r8,0x30(%rsp)
200b(5): call 0xcf5(%rip)
2010(2): test %al,%al
2012(3): mov %eax,%r9d
2015(5): mov 0x30(%rsp),%r8
201a(6): jnz 0x206(%rip)
2020(6): add $0x1,0x50(%rsp)
2026(7): cmp $0x0,0x20c0c7(%rip)
202d(2): jnz 0x5b(%rip)
202f(3): test %r15d,%r15d
2032(2): jz 0x22(%rip)
2034(7): mov 0x20c06d(%rip),%rdi
203b(4): mov 0x28(%rdi),%rax
203f(4): cmp 0x30(%rdi),%rax
2043(6): jnb 0x921(%rip)
2049(4): lea 0x1(%rax),%rdx
204d(4): mov %rdx,0x28(%rdi)
2051(3): mov $0x5c,(%rax)
2054(3): mov %r15d,%esi
2057(3): mov %rbx,%rdi
205a(5): call 0xbd6(%rip)
205f(7): lea 0x874b(%rip),%rsi
2066(5): mov $0x5,%edx
206b(2): xor %edi,%edi
206d(5): call 0xfffff5f3(%rip)
2072(7): lea 0x97f8(%rip),%rsi
2079(3): mov %rax,%rdx
207c(5): mov $0x1,%edi
2081(2): xor %eax,%eax
2083(5): call 0xfffff78d(%rip)
2088(5): movzx 0x2b(%rsp),%eax
208d(5): test $0x30,(%r12)
2092(4): mov %al,0x30(%rsp)
2096(6): jz 0xfffffdca(%rip)
209c(8): mov 0x90(%rsp),%rdi
20a4(5): call 0xfffff50c(%rip)
20a9(4): mov (%r12),%ebx
20ad(3): and $0x20,%ebx
20b0(6): jnz 0x4be(%rip)
20b6(5): cmp $0x0,0x2c(%rsp)
20bb(6): jnz 0x56d(%rip)
20c1(5): cmp $0x0,0x30(%rsp)
20c6(6): jz 0x57f(%rip)
20cc(7): cmp $0x0,0x20c021(%rip)
20d3(6): jnz 0x48b(%rip)
20d9(3): test %r13,%r13
20dc(2): jz 0x31(%rip)
20de(7): lea 0x9023(%rip),%rdx
20e5(7): lea 0x904c(%rip),%rsi
20ec(3): mov %r13,%rcx
20ef(2): xor %edi,%edi
20f1(6): mov $0x5,%r8d
20f7(5): call 0xfffff769(%rip)
20fc(3): mov %r13,%rcx
20ff(3): mov %rax,%rdx
2102(2): xor %esi,%esi
2104(2): xor %edi,%edi
2106(2): xor %eax,%eax
2108(5): call 0xfffff728(%rip)
210d(6): cmp $0x0,0x50(%rsp)
2113(2): jz 0x36(%rip)
2115(5): mov 0x50(%rsp),%r15
211a(7): lea 0x9047(%rip),%rdx
2121(7): lea 0x9070(%rip),%rsi
2128(2): xor %edi,%edi
212a(6): mov $0x5,%r8d
2130(3): mov %r15,%rcx
2133(5): call 0xfffff72d(%rip)
2138(3): mov %r15,%rcx
213b(3): mov %rax,%rdx
213e(2): xor %esi,%esi
2140(2): xor %edi,%edi
2142(2): xor %eax,%eax
2144(5): call 0xfffff6ec(%rip)
2149(6): cmp $0x0,0x58(%rsp)
214f(2): jz 0x36(%rip)
2151(5): mov 0x58(%rsp),%r15
2156(7): lea 0x906b(%rip),%rdx
215d(7): lea 0x9094(%rip),%rsi
2164(2): xor %edi,%edi
2166(6): mov $0x5,%r8d
216c(3): mov %r15,%rcx
216f(5): call 0xfffff6f1(%rip)
2174(3): mov %r15,%rcx
2177(3): mov %rax,%rdx
217a(2): xor %esi,%esi
217c(2): xor %edi,%edi
217e(2): xor %eax,%eax
2180(5): call 0xfffff6b0(%rip)
2185(7): cmp $0x0,0x20bf66(%rip)
218c(6): jz 0x3d2(%rip)
2192(5): cmp $0x0,0x7a(%rsp)
2197(6): jz 0x760(%rip)
219d(5): mov 0x50(%rsp),%rax
21a2(5): or 0x58(%rsp),%rax
21a7(2): jnz 0x17(%rip)
21a9(7): movzx 0x20bf40(%rip),%eax
21b0(3): xor $0x1,%eax
21b3(3): test %r13,%r13
21b6(3): setz %bl
21b9(2): or %ebx,%eax
21bb(3): movzx %al,%ebx
21be(2): mov %ebx,%eax
21c0(3): and $0x1,%eax
21c3(4): and %al,0x79(%rsp)
21c7(5): jmp 0x1a6(%rip)
21cc(4): nop 0x0(%rax)
21d0(5): mov 0x20(%rsp),%rdx
21d5(2): xor %edi,%edi
21d7(5): mov $0x3,%esi
21dc(5): call 0x73f4(%rip)
21e1(7): lea 0x8eb8(%rip),%rsi
21e8(2): xor %edi,%edi
21ea(5): mov $0x5,%edx
21ef(3): mov %rax,%rbx
21f2(5): call 0xfffff46e(%rip)
21f7(7): lea 0x8496(%rip),%r9
21fe(3): mov %rax,%rdx
2201(3): mov %rbp,%r8
2204(3): mov %rbx,%rcx
2207(2): xor %esi,%esi
2209(2): xor %edi,%edi
220b(2): xor %eax,%eax
220d(5): call 0xfffff623(%rip)
2212(5): jmp 0xfffffc43(%rip)
2217(9): nop 0x0(%rax,%rax,1)
2220(7): cmp $0x0,0x20becb(%rip)
2227(2): jz 0x10(%rip)
2229(8): cmp $0x0,0x8f(%rsp)
2231(6): jnz 0xfffffe57(%rip)
2237(7): mov 0x20beba(%rip),%rcx
223e(5): mov %r8,0x68(%rsp)
2243(3): shr $0x1,%rcx
2246(6): jz 0x379(%rip)
224c(5): mov %rcx,0x60(%rsp)
2251(5): mov %r9b,0x30(%rsp)
2256(5): call 0xfffff67a(%rip)
225b(2): xor %edx,%edx
225d(3): mov (%rax),%rdi
2260(6): movzx 0x30(%rsp),%r9d
2266(5): mov 0x60(%rsp),%rcx
226b(5): mov 0x68(%rsp),%r8
2270(5): mov 0x38(%rsp),%r10
2275(2): jmp 0x2b(%rip)
2277(9): nop 0x0(%rax,%rax,1)
2280(6): movzx 0x1(%r8,%rdx,2),%esi
2286(3): and $0xf,%eax
2289(5): movsx 0x0(%r14,%rax,1),%eax
228e(3): cmp %eax,0x0(%rdi,%rsi,4)
2291(2): jnz 0x2d(%rip)
2293(4): add $0x1,%rdx
2297(3): cmp %rdx,%rcx
229a(6): jz 0x3a3(%rip)
22a0(5): movzx 0x0(%r10,%rdx,1),%eax
22a5(5): movzx 0x0(%r8,%rdx,2),%r11d
22aa(2): mov %eax,%esi
22ac(4): shr $0x4,%sil
22b0(3): and $0xf,%esi
22b3(5): movsx 0x0(%r14,%rsi,1),%esi
22b8(4): cmp %esi,0x0(%rdi,%r11,4)
22bc(2): jz 0xffffffc4(%rip)
22be(3): cmp %rdx,%rcx
22c1(6): jz 0x300(%rip)
22c7(6): add $0x1,0x58(%rsp)
22cd(7): cmp $0x0,0x20be20(%rip)
22d4(6): jnz 0xfffffdb4(%rip)
22da(3): test %r15d,%r15d
22dd(6): jz 0x60b(%rip)
22e3(7): mov 0x20bdbe(%rip),%rdi
22ea(4): mov 0x28(%rdi),%rax
22ee(4): cmp 0x30(%rdi),%rax
22f2(6): jnb 0x6ad(%rip)
22f8(4): lea 0x1(%rax),%rsi
22fc(4): mov %rsi,0x28(%rdi)
2300(3): mov $0x5c,(%rax)
2303(5): mov $0x1,%esi
2308(3): mov %rbx,%rdi
230b(5): mov %rcx,0x60(%rsp)
2310(5): mov %rdx,0x30(%rsp)
2315(5): call 0x91b(%rip)
231a(5): mov 0x30(%rsp),%rdx
231f(5): mov 0x60(%rsp),%rcx
2324(3): cmp %rcx,%rdx
2327(6): jz 0x2e3(%rip)
232d(5): mov $0x5,%edx
2332(7): lea 0x848c(%rip),%rsi
2339(5): jmp 0xfffffd32(%rip)
233e(2): nop 
2340(8): lea 0x98(%rsp),%rax
2348(8): lea 0xa0(%rsp),%rbx
2350(5): mov 0x20(%rsp),%rdi
2355(3): mov %rax,%rdx
2358(3): mov %rbx,%rsi
235b(5): call 0x9a5(%rip)
2360(2): test %al,%al
2362(6): jnz 0x105(%rip)
2368(5): mov $0x0,0x79(%rsp)
236d(6): add $0x8,0x18(%rsp)
2373(5): mov 0x18(%rsp),%rax
2378(5): cmp %rax,0x48(%rsp)
237d(6): jnbe 0xfffff933(%rip)
2383(7): cmp $0x0,0x20bd7e(%rip)
238a(6): jnz 0x376(%rip)
2390(5): movzx 0x79(%rsp),%eax
2395(3): xor $0x1,%eax
2398(8): mov 0x118(%rsp),%rdi
23a0(9): xor $0x28,%rdi
23a9(3): movzx %al,%eax
23ac(6): jnz 0x637(%rip)
23b2(7): add $0x128,%rsp
23b9(1): pop %rbx
23ba(1): pop %rbp
23bb(2): pop %r12
23bd(2): pop %r13
23bf(2): pop %r14
23c1(2): pop %r15
23c3(1): ret near (%rsp)
23c4(4): add $0x1,%rcx
23c8(3): sub %rcx,%r15
23cb(6): jz 0xfffffa79(%rip)
23d1(3): mov %r15,%r10
23d4(3): add %rcx,%rbx
23d7(4): sub $0x1,%r10
23db(2): jz 0x26(%rip)
23dd(6): cmp $0x29,0xffffffff(%rbx,%r15,1)
23e3(2): jnz 0x18(%rip)
23e5(5): jmp 0x2a4(%rip)
23ea(6): nop 0x0(%rax,%rax,1)
23f0(5): cmp $0x29,0x0(%rbx,%r10,1)
23f5(6): jz 0x294(%rip)
23fb(4): sub $0x1,%r10
23ff(2): jnz 0xfffffff1(%rip)
2401(3): cmp $0x29,(%rbx)
2404(6): jnz 0xfffffa40(%rip)
240a(3): mov %rbx,%r11
240d(3): xor %r10d,%r10d
2410(5): jmp 0x27d(%rip)
2415(5): mov 0x20(%rsp),%rdi
241a(7): lea 0x8341(%rip),%rsi
2421(5): call 0x55cf(%rip)
2426(3): test %rax,%rax
2429(3): mov %rax,%r12
242c(6): jnz 0xfffff8e4(%rip)
2432(5): mov 0x20(%rsp),%rdx
2437(5): mov $0x3,%esi
243c(2): xor %edi,%edi
243e(5): call 0x7192(%rip)
2443(3): mov %rax,%rbx
2446(5): call 0xfffff18a(%rip)
244b(2): mov (%rax),%esi
244d(7): lea 0x8e01(%rip),%rdx
2454(2): xor %eax,%eax
2456(3): mov %rbx,%rcx
2459(2): xor %edi,%edi
245b(5): call 0xfffff3d5(%rip)
2460(2): xor %eax,%eax
2462(5): jmp 0xfffffd61(%rip)
2467(5): mov 0x20(%rsp),%rdi
246c(5): mov $0x5c,%esi
2471(5): call 0xfffff24f(%rip)
2476(3): test %rax,%rax
2479(6): jz 0x3d8(%rip)
247f(7): cmp $0xa,0x20bb8a(%rip)
2486(6): jz 0x2e6(%rip)
248c(5): cmp $0x0,0x78(%rsp)
2491(6): jnz 0x3dd(%rip)
2497(7): mov 0x20bc5a(%rip),%rax
249e(2): xor %ebp,%ebp
24a0(3): shr $0x1,%rax
24a3(2): jz 0x3f(%rip)
24a5(3): xor %r12d,%r12d
24a8(8): nop 0x0(%rax,%rax,1)
24b0(5): movzx 0x0(%rbx,%r12,1),%edx
24b5(7): lea 0x833b(%rip),%rsi
24bc(2): xor %eax,%eax
24be(5): mov $0x1,%edi
24c3(4): add $0x1,%r12
24c7(5): call 0xfffff349(%rip)
24cc(7): mov 0x20bc25(%rip),%rax
24d3(3): shr $0x1,%rax
24d6(3): cmp %r12,%rax
24d9(2): jnbe 0xffffffd7(%rip)
24db(5): cmp $0x0,0x78(%rsp)
24e0(2): jnz 0x53(%rip)
24e2(7): mov 0x20bbbf(%rip),%rdi
24e9(4): mov 0x28(%rdi),%rax
24ed(4): cmp %rax,0x30(%rdi)
24f1(6): jbe 0x49f(%rip)
24f7(4): lea 0x1(%rax),%rdx
24fb(4): mov %rdx,0x28(%rdi)
24ff(3): mov $0x20,(%rax)
2502(7): mov 0x20bb9f(%rip),%rdi
2509(4): mov 0x28(%rdi),%rax
250d(4): cmp 0x30(%rdi),%rax
2511(6): jnb 0x471(%rip)
2517(4): lea 0x1(%rax),%rdx
251b(4): mov %rdx,0x28(%rdi)
251f(5): movzx 0x7b(%rsp),%edi
2524(3): mov %dil,(%rax)
2527(5): mov 0x20(%rsp),%rdi
252c(2): mov %ebp,%esi
252e(5): call 0x702(%rip)
2533(7): mov 0x20bb6e(%rip),%rdi
253a(7): movzx 0x20bacf(%rip),%edx
2541(4): mov 0x28(%rdi),%rax
2545(4): cmp 0x30(%rdi),%rax
2549(6): jnb 0x40e(%rip)
254f(4): lea 0x1(%rax),%rcx
2553(4): mov %rcx,0x28(%rdi)
2557(2): mov %dl,(%rax)
2559(5): jmp 0xfffffe14(%rip)
255e(5): cmp $0x0,0x7a(%rsp)
2563(6): jnz 0xfffffc3a(%rip)
2569(5): jmp 0xfffffc55(%rip)
256e(5): mov 0x20(%rsp),%rdx
2573(5): mov $0x3,%esi
2578(2): xor %edi,%edi
257a(5): call 0x7056(%rip)
257f(7): lea 0x8249(%rip),%rsi
2586(3): mov %rax,%rbx
2589(5): mov $0x5,%edx
258e(2): xor %edi,%edi
2590(5): call 0xfffff0d0(%rip)
2595(3): mov %rbx,%rcx
2598(3): mov %rax,%rdx
259b(2): xor %esi,%esi
259d(2): xor %eax,%eax
259f(2): xor %edi,%edi
25a1(5): call 0xfffff28f(%rip)
25a6(2): xor %eax,%eax
25a8(5): jmp 0xfffffc1b(%rip)
25ad(7): cmp $0x0,0x20bb3f(%rip)
25b4(6): jnz 0xfffff689(%rip)
25ba(5): jmp 0xfffff90b(%rip)
25bf(2): xor %edx,%edx
25c1(7): movzx 0x20bb2c(%rip),%eax
25c8(2): test %al,%al
25ca(4): mov %al,0x7a(%rsp)
25ce(6): jnz 0xfffffaba(%rip)
25d4(7): movzx 0x20bb16(%rip),%eax
25db(2): test %al,%al
25dd(4): mov %al,0x7a(%rsp)
25e1(6): jnz 0xfffffaa7(%rip)
25e7(3): test %r15d,%r15d
25ea(6): jnz 0x427(%rip)
25f0(2): xor %esi,%esi
25f2(3): mov %rbx,%rdi
25f5(5): mov %r9b,0x30(%rsp)
25fa(5): call 0x636(%rip)
25ff(6): movzx 0x30(%rsp),%r9d
2605(5): mov %r9b,0x7a(%rsp)
260a(7): cmp $0x0,0x20bae0(%rip)
2611(6): jnz 0xfffffa77(%rip)
2617(5): mov $0x5,%edx
261c(7): lea 0x81a9(%rip),%rsi
2623(5): jmp 0xfffffa48(%rip)
2628(3): mov %r12,%rdi
262b(5): call 0x7a55(%rip)
2630(2): test %eax,%eax
2632(6): jz 0xfffffa8f(%rip)
2638(5): jmp 0xfffffdfa(%rip)
263d(3): mov %rcx,%rdx
2640(5): jmp 0xffffff81(%rip)
2645(5): mov 0x20(%rsp),%rdx
264a(2): xor %edi,%edi
264c(5): mov $0x3,%esi
2651(5): call 0x6f7f(%rip)
2656(7): lea 0x8a73(%rip),%rsi
265d(2): xor %edi,%edi
265f(5): mov $0x5,%edx
2664(3): mov %rax,%rbp
2667(5): call 0xffffeff9(%rip)
266c(7): lea 0x8021(%rip),%r8
2673(3): mov %rax,%rdx
2676(3): mov %rbp,%rcx
2679(2): xor %esi,%esi
267b(2): xor %edi,%edi
267d(2): xor %eax,%eax
267f(5): call 0xfffff1b1(%rip)
2684(5): jmp 0xfffffb3a(%rip)
2689(4): lea 0x0(%rbx,%r10,1),%r11
268d(3): test %r9b,%r9b
2690(6): jnz 0x2ae(%rip)
2696(4): add $0x1,%r10
269a(4): mov $0x0,(%r11)
269e(2): jmp 0x6(%rip)
26a0(4): add $0x1,%r10
26a4(5): movzx 0x0(%rbx,%r10,1),%eax
26a9(2): cmp $0x20,%al
26ab(2): jz 0xfffffff5(%rip)
26ad(2): cmp $0x9,%al
26af(2): jz 0xfffffff1(%rip)
26b1(2): cmp $0x3d,%al
26b3(6): jnz 0xfffff791(%rip)
26b9(5): lea 0x1(%rbx,%r10,1),%rdx
26be(3): movzx (%rdx),%eax
26c1(3): mov %rdx,%r8
26c4(4): lea 0x1(%rdx),%rdx
26c8(2): cmp $0x20,%al
26ca(2): jz 0xfffffff4(%rip)
26cc(2): cmp $0x9,%al
26ce(2): jz 0xfffffff0(%rip)
26d0(3): mov %r8,%rdi
26d3(5): mov %r8,0x60(%rsp)
26d8(5): call 0x4f8(%rip)
26dd(5): mov 0x60(%rsp),%r8
26e2(2): jmp 0x7d(%rip)
26e4(3): sub $0x1,%esi
26e7(6): jz 0xfffff8b3(%rip)
26ed(a): mov $0x0,0x20b91d(%rip)
26f7(4): lea 0x2(%rdx),%rax
26fb(5): jmp 0xfffff89f(%rip)
2700(7): mov 0x20b9a9(%rip),%rdi
2707(5): call 0x7979(%rip)
270c(3): add $0x1,%eax
270f(6): jnz 0xfffffc81(%rip)
2715(7): lea 0x806a(%rip),%rsi
271c(5): mov $0x5,%edx
2721(2): xor %edi,%edi
2723(5): call 0xffffef3d(%rip)
2728(3): mov %rax,%rbx
272b(5): call 0xffffeea5(%rip)
2730(2): mov (%rax),%esi
2732(3): mov %rbx,%rdx
2735(5): mov $0x1,%edi
273a(2): xor %eax,%eax
273c(5): call 0xfffff0f4(%rip)
2741(3): mov %r15,%rsi
2744(3): mov %rbx,%rdi
2747(5): mov %r8,0x60(%rsp)
274c(3): sub %rax,%rsi
274f(5): call 0x401(%rip)
2754(5): mov 0x60(%rsp),%r8
2759(3): test %rax,%rax
275c(3): setnz %al
275f(2): test %al,%al
2761(6): jnz 0xfffff845(%rip)
2767(5): jmp 0xfffff6dd(%rip)
276c(5): cmp $0x0,0x78(%rsp)
2771(6): jz 0xa6(%rip)
2777(7): mov 0x20b92a(%rip),%rdi
277e(4): mov 0x28(%rdi),%rax
2782(4): cmp 0x30(%rdi),%rax
2786(6): jnb 0x23c(%rip)
278c(4): lea 0x1(%rax),%rdx
2790(4): mov %rdx,0x28(%rdi)
2794(3): mov $0x5c,(%rax)
2797(7): mov 0x20b90a(%rip),%rcx
279e(7): lea 0x7eef(%rip),%rdi
27a5(5): mov $0x6,%edx
27aa(5): mov $0x1,%esi
27af(5): call 0xfffff021(%rip)
27b4(7): mov 0x20b8ed(%rip),%rcx
27bb(7): lea 0x803a(%rip),%rdi
27c2(5): mov $0x2,%edx
27c7(5): mov $0x1,%esi
27cc(5): call 0xfffff004(%rip)
27d1(5): mov 0x20(%rsp),%rdi
27d6(5): mov $0x1,%esi
27db(5): call 0x455(%rip)
27e0(7): mov 0x20b8c1(%rip),%rcx
27e7(7): lea 0x8011(%rip),%rdi
27ee(5): mov $0x4,%edx
27f3(5): mov $0x1,%esi
27f8(5): call 0xffffefd8(%rip)
27fd(7): mov 0x20b8f4(%rip),%rax
2804(5): mov $0x1,%ebp
2809(3): shr $0x1,%rax
280c(6): jnz 0xfffffc99(%rip)
2812(5): jmp 0xfffffcc9(%rip)
2817(7): mov 0x20b88a(%rip),%rdi
281e(4): mov 0x28(%rdi),%rax
2822(4): cmp 0x30(%rdi),%rax
2826(6): jnb 0x14d(%rip)
282c(4): lea 0x1(%rax),%rdx
2830(5): mov $0x1,%ebp
2835(4): mov %rdx,0x28(%rdi)
2839(3): mov $0x5c,(%rax)
283c(7): mov 0x20b8b5(%rip),%rax
2843(3): shr $0x1,%rax
2846(6): jnz 0xfffffc5f(%rip)
284c(5): jmp 0xfffffc96(%rip)
2851(5): mov 0x20(%rsp),%rdi
2856(5): mov $0xa,%esi
285b(5): call 0xffffee65(%rip)
2860(3): test %rax,%rax
2863(6): jnz 0xfffffc1c(%rip)
2869(5): jmp 0xfffffc23(%rip)
286e(7): mov 0x20b833(%rip),%rcx
2875(7): lea 0x7e18(%rip),%rdi
287c(5): mov $0x6,%edx
2881(5): mov $0x1,%esi
2886(2): xor %ebp,%ebp
2888(5): call 0xffffef48(%rip)
288d(7): mov 0x20b814(%rip),%rcx
2894(7): lea 0x7f61(%rip),%rdi
289b(5): mov $0x2,%edx
28a0(5): mov $0x1,%esi
28a5(5): call 0xffffef2b(%rip)
28aa(5): mov 0x20(%rsp),%rdi
28af(2): xor %esi,%esi
28b1(5): call 0x37f(%rip)
28b6(7): mov 0x20b7eb(%rip),%rcx
28bd(7): lea 0x7f3b(%rip),%rdi
28c4(5): mov $0x4,%edx
28c9(5): mov $0x1,%esi
28ce(5): call 0xffffef02(%rip)
28d3(7): mov 0x20b81e(%rip),%rax
28da(3): shr $0x1,%rax
28dd(6): jnz 0xfffffbc8(%rip)
28e3(5): jmp 0xfffffc50(%rip)
28e8(2): xor %esi,%esi
28ea(3): mov %rbx,%rdi
28ed(5): call 0x343(%rip)
28f2(5): jmp 0xfffffa3b(%rip)
28f7(5): mov 0x20(%rsp),%rdx
28fc(2): xor %edi,%edi
28fe(5): mov $0x3,%esi
2903(5): call 0x6ccd(%rip)
2908(7): lea 0x7ecf(%rip),%rsi
290f(3): mov %rax,%rbp
2912(2): xor %edi,%edi
2914(5): mov $0x5,%edx
2919(5): call 0xffffed47(%rip)
291e(3): mov %rbp,%rcx
2921(3): mov %rax,%rdx
2924(2): xor %esi,%esi
2926(2): xor %edi,%edi
2928(2): xor %eax,%eax
292a(5): call 0xffffef06(%rip)
292f(5): jmp 0xfffff88f(%rip)
2934(5): mov $0x1,0x79(%rsp)
2939(5): jmp 0xfffffa4a(%rip)
293e(3): mov %r10,%rsi
2941(3): mov %rbx,%rdi
2944(5): call 0x20c(%rip)
2949(3): test %rax,%rax
294c(6): jnz 0xfffffd4a(%rip)
2952(5): jmp 0xfffff4f2(%rip)
2957(3): movzx %dl,%esi
295a(5): call 0xffffed76(%rip)
295f(5): jmp 0xfffffa0e(%rip)
2964(5): mov $0x5c,%esi
2969(5): call 0xffffed67(%rip)
296e(5): jmp 0xfffff6e6(%rip)
2973(5): mov $0x5c,%esi
2978(5): call 0xffffed58(%rip)
297d(5): jmp 0xfffffe80(%rip)
2982(4): mov 0x7c(%rsp),%esi
2986(5): call 0xffffed4a(%rip)
298b(5): jmp 0xfffffb9c(%rip)
2990(5): mov $0x20,%esi
2995(5): call 0xffffed3b(%rip)
299a(5): jmp 0xfffffb68(%rip)
299f(5): mov $0x5c,%esi
29a4(5): mov %rcx,0x60(%rsp)
29a9(5): mov %rdx,0x30(%rsp)
29ae(5): call 0xffffed22(%rip)
29b3(5): mov 0x30(%rsp),%rdx
29b8(5): mov 0x60(%rsp),%rcx
29bd(5): jmp 0xfffff946(%rip)
29c2(5): mov $0x5c,%esi
29c7(5): call 0xffffed09(%rip)
29cc(5): jmp 0xfffffdcb(%rip)
29d1(5): cmp $0xffffff7e,%eax
29d6(6): jnz 0xfffff1fa(%rip)
29dc(2): xor %edi,%edi
29de(5): call 0x4c2(%rip)
29e3(5): call 0xffffecad(%rip)
29e8(7): cmp $0x0,0x20b705(%rip)
29ef(6): jz 0xfffff1a8(%rip)
29f5(5): cmp $0x0,0x2b(%rsp)
29fa(6): jnz 0xfffffbb3(%rip)
2a00(5): mov $0x5,%edx
2a05(7): lea 0x8594(%rip),%rsi
2a0c(5): jmp 0xfffff1af(%rip)
2a11(5): mov %r9b,0x7a(%rsp)
2a16(5): jmp 0xfffff8cd(%rip)
2a1b(5): mov $0x5,%edx
2a20(7): lea 0x8439(%rip),%rsi
2a27(5): jmp 0xfffff194(%rip)
2a2c(5): mov $0x5,%edx
2a31(7): lea 0x8520(%rip),%rsi
2a38(5): jmp 0xfffff183(%rip)

"_start" :
2a40(2): xor %ebp,%ebp
2a42(3): mov %rdx,%r9
2a45(1): pop %rsi
2a46(3): mov %rsp,%rdx
2a49(4): and $0xfffffff0,%rsp
2a4d(1): push %rax
2a4e(1): push %rsp
2a4f(7): lea 0x7bea(%rip),%r8
2a56(7): lea 0x7b73(%rip),%rcx
2a5d(7): lea 0xffffee9c(%rip),%rdi
2a64(6): call 0x20b55e(%rip)
2a6a(1): hlt 

"deregister_tm_clones" :
2a70(7): lea 0x20b629(%rip),%rdi
2a77(1): push %rbp
2a78(7): lea 0x20b621(%rip),%rax
2a7f(3): cmp %rdi,%rax
2a82(3): mov %rsp,%rbp
2a85(2): jz 0x1b(%rip)
2a87(7): mov 0x20b532(%rip),%rax
2a8e(3): test %rax,%rax
2a91(2): jz 0xf(%rip)
2a93(1): pop %rbp
2a94(2): jmp %rax
2a96(a): nop 0x0(%rax,%rax,1)
2aa0(1): pop %rbp
2aa1(1): ret near (%rsp)

"register_tm_clones" :
2ab0(7): lea 0x20b5e9(%rip),%rdi
2ab7(7): lea 0x20b5e2(%rip),%rsi
2abe(1): push %rbp
2abf(3): sub %rdi,%rsi
2ac2(3): mov %rsp,%rbp
2ac5(4): sar $0x3,%rsi
2ac9(3): mov %rsi,%rax
2acc(4): shr $0x3f,%rax
2ad0(3): add %rax,%rsi
2ad3(3): sar $0x1,%rsi
2ad6(2): jz 0x1a(%rip)
2ad8(7): mov 0x20b4f9(%rip),%rax
2adf(3): test %rax,%rax
2ae2(2): jz 0xe(%rip)
2ae4(1): pop %rbp
2ae5(2): jmp %rax
2ae7(9): nop 0x0(%rax,%rax,1)
2af0(1): pop %rbp
2af1(1): ret near (%rsp)

"__do_global_dtors_aux" :
2b00(7): cmp $0x0,0x20b5e1(%rip)
2b07(2): jnz 0x31(%rip)
2b09(8): cmp $0x0,0x20b4cf(%rip)
2b11(1): push %rbp
2b12(3): mov %rsp,%rbp
2b15(2): jz 0xe(%rip)
2b17(7): mov 0x20b4ea(%rip),%rdi
2b1e(5): call 0xffffedd2(%rip)
2b23(5): call 0xffffff4d(%rip)
2b28(7): mov $0x1,0x20b5b9(%rip)
2b2f(1): pop %rbp
2b30(1): ret near (%rsp)
2b31(7): nop 0x0(%rax)
2b38(2): REP ret near (%rsp)

"frame_dummy" :
2b40(1): push %rbp
2b41(3): mov %rsp,%rbp
2b44(1): pop %rbp
2b45(5): jmp 0xffffff6b(%rip)

"filename_unescape" :
2b50(2): xor %edx,%edx
2b52(3): test %rsi,%rsi
2b55(4): lea 0x1(%rdi),%rcx
2b59(4): lea 0xffffffff(%rsi),%r8
2b5d(2): jz 0x5a(%rip)
2b5f(4): movzx 0x0(%rdi,%rdx,1),%eax
2b63(2): test %al,%al
2b65(2): jz 0x2b(%rip)
2b67(2): cmp $0x5c,%al
2b69(2): jnz 0x2f(%rip)
2b6b(3): cmp %rdx,%r8
2b6e(2): jz 0x22(%rip)
2b70(4): add $0x1,%rdx
2b74(4): movzx 0x0(%rdi,%rdx,1),%eax
2b78(2): cmp $0x5c,%al
2b7a(2): jz 0x46(%rip)
2b7c(2): cmp $0x6e,%al
2b7e(2): jnz 0x12(%rip)
2b80(3): mov %rcx,%r9
2b83(4): mov $0xa,0xffffffff(%rcx)
2b87(2): jmp 0x17(%rip)
2b89(7): nop 0x0(%rax)
2b90(2): xor %eax,%eax
2b92(1): ret near (%rsp)
2b93(5): nop 0x0(%rax,%rax,1)
2b98(3): mov %rcx,%r9
2b9b(3): mov %al,0xffffffff(%rcx)
2b9e(4): add $0x1,%rdx
2ba2(4): add $0x1,%rcx
2ba6(3): cmp %rdx,%rsi
2ba9(2): jnbe 0xffffffb6(%rip)
2bab(3): add %rdi,%rsi
2bae(3): cmp %rsi,%r9
2bb1(2): jnb 0x6(%rip)
2bb3(4): mov $0x0,(%r9)
2bb7(3): mov %rdi,%rax
2bba(1): ret near (%rsp)
2bbb(5): nop 0x0(%rax,%rax,1)
2bc0(3): mov %rcx,%r9
2bc3(4): mov $0x5c,0xffffffff(%rcx)
2bc7(2): jmp 0xffffffd7(%rip)

"hex_digits" :
2bd0(1): push %rbp
2bd1(1): push %rbx
2bd2(4): sub $0x8,%rsp
2bd6(7): mov 0x20b51b(%rip),%rbp
2bdd(3): test %rbp,%rbp
2be0(2): jz 0x40(%rip)
2be2(3): mov %rdi,%rbx
2be5(5): call 0xffffecfb(%rip)
2bea(3): mov (%rax),%rcx
2bed(3): mov %rbx,%rax
2bf0(2): jmp 0x15(%rip)
2bf2(6): nop 0x0(%rax,%rax,1)
2bf8(4): add $0x1,%rax
2bfc(2): mov %eax,%edx
2bfe(2): sub %ebx,%edx
2c00(3): cmp %rbp,%rdx
2c03(2): jnb 0x20(%rip)
2c05(3): movzx (%rax),%edx
2c08(5): test $0x10,0x1(%rcx,%rdx,2)
2c0d(2): jnz 0xffffffeb(%rip)
2c0f(4): add $0x8,%rsp
2c13(2): xor %eax,%eax
2c15(1): pop %rbx
2c16(1): pop %rbp
2c17(1): ret near (%rsp)
2c18(8): nop 0x0(%rax,%rax,1)
2c20(3): mov %rdi,%rax
2c23(3): cmp $0x0,(%rax)
2c26(3): setz %al
2c29(4): add $0x8,%rsp
2c2d(1): pop %rbx
2c2e(1): pop %rbp
2c2f(1): ret near (%rsp)

"print_filename" :
2c30(1): push %rbp
2c31(1): push %rbx
2c32(3): mov %rdi,%rbx
2c35(4): sub $0x8,%rsp
2c39(3): test %sil,%sil
2c3c(6): jz 0x94(%rip)
2c42(3): movzx (%rdi),%esi
2c45(7): lea 0x7a38(%rip),%rbp
2c4c(3): test %sil,%sil
2c4f(2): jnz 0x2b(%rip)
2c51(2): jmp 0x5d(%rip)
2c53(5): nop 0x0(%rax,%rax,1)
2c58(7): lea 0x7a28(%rip),%rdi
2c5f(5): mov $0x2,%edx
2c64(5): mov $0x1,%esi
2c69(5): call 0xffffeb67(%rip)
2c6e(4): add $0x1,%rbx
2c72(3): movzx (%rbx),%esi
2c75(3): test %sil,%sil
2c78(2): jz 0x36(%rip)
2c7a(4): cmp $0xa,%sil
2c7e(7): mov 0x20b423(%rip),%rcx
2c85(2): jz 0x33(%rip)
2c87(4): cmp $0x5c,%sil
2c8b(2): jz 0xffffffcd(%rip)
2c8d(4): mov 0x28(%rcx),%rax
2c91(4): cmp 0x30(%rcx),%rax
2c95(2): jnb 0x53(%rip)
2c97(4): lea 0x1(%rax),%rdx
2c9b(4): add $0x1,%rbx
2c9f(4): mov %rdx,0x28(%rcx)
2ca3(3): mov %sil,(%rax)
2ca6(3): movzx (%rbx),%esi
2ca9(3): test %sil,%sil
2cac(2): jnz 0xffffffce(%rip)
2cae(4): add $0x8,%rsp
2cb2(1): pop %rbx
2cb3(1): pop %rbp
2cb4(1): ret near (%rsp)
2cb5(3): nop (%rax)
2cb8(5): mov $0x2,%edx
2cbd(5): mov $0x1,%esi
2cc2(3): mov %rbp,%rdi
2cc5(5): call 0xffffeb0b(%rip)
2cca(2): jmp 0xffffffa4(%rip)
2ccc(4): nop 0x0(%rax)
2cd0(7): mov 0x20b3d1(%rip),%rsi
2cd7(4): add $0x8,%rsp
2cdb(1): pop %rbx
2cdc(1): pop %rbp
2cdd(5): jmp 0xffffea63(%rip)
2ce2(6): nop 0x0(%rax,%rax,1)
2ce8(3): mov %rcx,%rdi
2ceb(5): call 0xffffe9e5(%rip)
2cf0(5): jmp 0xffffff7e(%rip)

"digest_file.isra.1" :
2d00(2): push %r13
2d02(2): push %r12
2d04(5): mov $0x2,%ecx
2d09(1): push %rbp
2d0a(1): push %rbx
2d0b(3): mov %rdi,%rbp
2d0e(7): lea 0x860d(%rip),%rdi
2d15(3): mov %rsi,%r12
2d18(3): mov %rbp,%rsi
2d1b(4): sub $0x8,%rsp
2d1f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2d21(3): mov $0x0,(%rdx)
2d24(3): setnbe %al
2d27(2): sbb $0x0,%al
2d29(2): test %al,%al
2d2b(6): jnz 0x95(%rip)
2d31(7): mov 0x20b378(%rip),%rbx
2d38(5): mov $0x2,%esi
2d3d(7): mov $0x1,0x20b3c4(%rip)
2d44(3): mov %rbx,%rdi
2d47(5): call 0x4c79(%rip)
2d4c(3): mov %r12,%rsi
2d4f(3): mov %rbx,%rdi
2d52(5): call 0x4c3e(%rip)
2d57(2): test %eax,%eax
2d59(2): jnz 0x17(%rip)
2d5b(6): mov $0x1,%r12d
2d61(4): add $0x8,%rsp
2d65(3): mov %r12d,%eax
2d68(1): pop %rbx
2d69(1): pop %rbp
2d6a(2): pop %r12
2d6c(2): pop %r13
2d6e(1): ret near (%rsp)
2d6f(1): nop 
2d70(3): mov %rbp,%rdx
2d73(2): xor %edi,%edi
2d75(5): mov $0x3,%esi
2d7a(5): call 0x6856(%rip)
2d7f(3): mov %rax,%rbp
2d82(3): xor %r12d,%r12d
2d85(5): call 0xffffe84b(%rip)
2d8a(2): mov (%rax),%esi
2d8c(7): lea 0x84c2(%rip),%rdx
2d93(2): xor %edi,%edi
2d95(2): xor %eax,%eax
2d97(3): mov %rbp,%rcx
2d9a(5): call 0xffffea96(%rip)
2d9f(7): cmp %rbx,0x20b30a(%rip)
2da6(2): jz 0xffffffbb(%rip)
2da8(3): mov %rbx,%rdi
2dab(5): call 0x72d5(%rip)
2db0(4): add $0x8,%rsp
2db4(3): mov %r12d,%eax
2db7(1): pop %rbx
2db8(1): pop %rbp
2db9(2): pop %r12
2dbb(2): pop %r13
2dbd(1): ret near (%rsp)
2dbe(2): nop 
2dc0(7): lea 0x799b(%rip),%rsi
2dc7(3): mov %rbp,%rdi
2dca(3): mov %rdx,%r13
2dcd(5): call 0x4c23(%rip)
2dd2(3): test %rax,%rax
2dd5(3): mov %rax,%rbx
2dd8(2): jz 0x68(%rip)
2dda(3): mov %rax,%rdi
2ddd(5): mov $0x2,%esi
2de2(5): call 0x4bde(%rip)
2de7(3): mov %r12,%rsi
2dea(3): mov %rbx,%rdi
2ded(5): call 0x4ba3(%rip)
2df2(2): test %eax,%eax
2df4(6): jnz 0xffffff7c(%rip)
2dfa(3): mov %rbx,%rdi
2dfd(5): call 0x7283(%rip)
2e02(2): test %eax,%eax
2e04(6): jz 0xffffff57(%rip)
2e0a(3): mov %rbp,%rdx
2e0d(5): mov $0x3,%esi
2e12(2): xor %edi,%edi
2e14(5): call 0x67bc(%rip)
2e19(3): mov %rax,%rbx
2e1c(3): xor %r12d,%r12d
2e1f(5): call 0xffffe7b1(%rip)
2e24(2): mov (%rax),%esi
2e26(7): lea 0x8428(%rip),%rdx
2e2d(3): mov %rbx,%rcx
2e30(2): xor %edi,%edi
2e32(2): xor %eax,%eax
2e34(5): call 0xffffe9fc(%rip)
2e39(5): jmp 0xffffff28(%rip)
2e3e(2): nop 
2e40(8): movzx 0x20b2aa(%rip),%r12d
2e48(5): call 0xffffe788(%rip)
2e4d(3): mov %rax,%rbx
2e50(3): test %r12b,%r12b
2e53(2): jz 0x7(%rip)
2e55(3): cmp $0x2,(%rax)
2e58(2): jz 0x38(%rip)
2e5a(3): mov %rbp,%rdx
2e5d(5): mov $0x3,%esi
2e62(2): xor %edi,%edi
2e64(5): call 0x676c(%rip)
2e69(2): mov (%rbx),%esi
2e6b(7): lea 0x83e3(%rip),%rdx
2e72(3): mov %rax,%rcx
2e75(2): xor %edi,%edi
2e77(2): xor %eax,%eax
2e79(3): xor %r12d,%r12d
2e7c(5): call 0xffffe9b4(%rip)
2e81(5): jmp 0xfffffee0(%rip)
2e86(a): nop 0x0(%rax,%rax,1)
2e90(5): mov $0x1,0x0(%r13)
2e95(5): jmp 0xfffffecc(%rip)

"usage" :
2ea0(2): push %r13
2ea2(2): push %r12
2ea4(5): mov $0x5,%edx
2ea9(1): push %rbp
2eaa(1): push %rbx
2eab(2): mov %edi,%ebp
2ead(7): sub $0x88,%rsp
2eb4(7): mov 0x20b265(%rip),%rbx
2ebb(9): mov $0x28,%rax
2ec4(5): mov %rax,0x78(%rsp)
2ec9(2): xor %eax,%eax
2ecb(2): test %edi,%edi
2ecd(2): jz 0x30(%rip)
2ecf(7): lea 0x7982(%rip),%rsi
2ed6(2): xor %edi,%edi
2ed8(5): call 0xffffe788(%rip)
2edd(7): mov 0x20b1fc(%rip),%rdi
2ee4(3): mov %rax,%rdx
2ee7(3): mov %rbx,%rcx
2eea(5): mov $0x1,%esi
2eef(2): xor %eax,%eax
2ef1(5): call 0xffffe9af(%rip)
2ef6(2): mov %ebp,%edi
2ef8(5): call 0xffffe988(%rip)
2efd(7): lea 0x797c(%rip),%rsi
2f04(2): xor %edi,%edi
2f06(5): call 0xffffe75a(%rip)
2f0b(7): lea 0x7782(%rip),%rcx
2f12(6): mov $0x180,%r8d
2f18(3): mov %rbx,%rdx
2f1b(3): mov %rax,%rsi
2f1e(5): mov $0x1,%edi
2f23(2): xor %eax,%eax
2f25(5): call 0xffffe8eb(%rip)
2f2a(7): mov 0x20b177(%rip),%rbx
2f31(7): lea 0x7990(%rip),%rsi
2f38(5): mov $0x5,%edx
2f3d(2): xor %edi,%edi
2f3f(5): call 0xffffe721(%rip)
2f44(3): mov %rbx,%rsi
2f47(3): mov %rax,%rdi
2f4a(5): call 0xffffe7f6(%rip)
2f4f(7): mov 0x20b152(%rip),%rbx
2f56(7): lea 0x79a3(%rip),%rsi
2f5d(5): mov $0x5,%edx
2f62(2): xor %edi,%edi
2f64(5): call 0xffffe6fc(%rip)
2f69(3): mov %rbx,%rsi
2f6c(3): mov %rax,%rdi
2f6f(5): call 0xffffe7d1(%rip)
2f74(7): lea 0x79b5(%rip),%rsi
2f7b(2): xor %edi,%edi
2f7d(5): mov $0x5,%edx
2f82(5): call 0xffffe6de(%rip)
2f87(7): lea 0x7706(%rip),%rdx
2f8e(3): mov %rax,%rsi
2f91(5): mov $0x1,%edi
2f96(2): xor %eax,%eax
2f98(5): call 0xffffe878(%rip)
2f9d(7): mov 0x20b104(%rip),%rbx
2fa4(7): lea 0x79cd(%rip),%rsi
2fab(5): mov $0x5,%edx
2fb0(2): xor %edi,%edi
2fb2(5): call 0xffffe6ae(%rip)
2fb7(3): mov %rbx,%rsi
2fba(3): mov %rax,%rdi
2fbd(5): call 0xffffe783(%rip)
2fc2(7): mov 0x20b0df(%rip),%rbx
2fc9(7): lea 0x79e0(%rip),%rsi
2fd0(5): mov $0x5,%edx
2fd5(2): xor %edi,%edi
2fd7(5): call 0xffffe689(%rip)
2fdc(3): mov %rbx,%rsi
2fdf(3): mov %rax,%rdi
2fe2(5): call 0xffffe75e(%rip)
2fe7(7): mov 0x20b0ba(%rip),%rbx
2fee(7): lea 0x79f3(%rip),%rsi
2ff5(5): mov $0x5,%edx
2ffa(2): xor %edi,%edi
2ffc(5): call 0xffffe664(%rip)
3001(3): mov %rbx,%rsi
3004(3): mov %rax,%rdi
3007(5): call 0xffffe739(%rip)
300c(7): mov 0x20b095(%rip),%rbx
3013(7): lea 0x7a4e(%rip),%rsi
301a(5): mov $0x5,%edx
301f(2): xor %edi,%edi
3021(5): call 0xffffe63f(%rip)
3026(3): mov %rbx,%rsi
3029(3): mov %rax,%rdi
302c(5): call 0xffffe714(%rip)
3031(7): mov 0x20b070(%rip),%rbx
3038(7): lea 0x7be1(%rip),%rsi
303f(5): mov $0x5,%edx
3044(2): xor %edi,%edi
3046(5): call 0xffffe61a(%rip)
304b(3): mov %rbx,%rsi
304e(3): mov %rax,%rdi
3051(5): call 0xffffe6ef(%rip)
3056(7): mov 0x20b04b(%rip),%rbx
305d(7): lea 0x7bec(%rip),%rsi
3064(5): mov $0x5,%edx
3069(2): xor %edi,%edi
306b(5): call 0xffffe5f5(%rip)
3070(3): mov %rbx,%rsi
3073(3): mov %rax,%rdi
3076(7): lea 0x760d(%rip),%rbx
307d(5): call 0xffffe6c3(%rip)
3082(7): lea 0x7bff(%rip),%rsi
3089(2): xor %edi,%edi
308b(5): mov $0x5,%edx
3090(5): call 0xffffe5d0(%rip)
3095(7): lea 0x75ff(%rip),%rdx
309c(3): mov %rax,%rsi
309f(5): mov $0x1,%edi
30a4(2): xor %eax,%eax
30a6(5): call 0xffffe76a(%rip)
30ab(7): lea 0x75f4(%rip),%rax
30b2(7): lea 0x762e(%rip),%rcx
30b9(5): mov %rbx,0x40(%rsp)
30be(9): mov $0x0,0x60(%rsp)
30c7(9): mov $0x0,0x68(%rsp)
30d0(3): mov %rsp,%rdx
30d3(4): mov %rax,(%rsp)
30d7(7): lea 0x75ca(%rip),%rax
30de(5): mov %rcx,0x30(%rsp)
30e3(7): lea 0x7607(%rip),%rcx
30ea(5): mov %rax,0x8(%rsp)
30ef(7): lea 0x7620(%rip),%rax
30f6(5): mov %rcx,0x50(%rsp)
30fb(5): mov %rax,0x10(%rsp)
3100(7): lea 0x75b1(%rip),%rax
3107(5): mov %rax,0x18(%rsp)
310c(7): lea 0x75bb(%rip),%rax
3113(5): mov %rax,0x20(%rsp)
3118(7): lea 0x75b9(%rip),%rax
311f(5): mov %rax,0x28(%rsp)
3124(5): mov %rax,0x38(%rsp)
3129(5): mov %rax,0x48(%rsp)
312e(5): mov %rax,0x58(%rsp)
3133(5): nop 0x0(%rax,%rax,1)
3138(4): add $0x10,%rdx
313c(3): mov (%rdx),%rdi
313f(3): test %rdi,%rdi
3142(2): jz 0x15(%rip)
3144(5): mov $0xa,%ecx
3149(3): mov %rbx,%rsi
314c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
314e(3): setnbe %al
3151(2): sbb $0x0,%al
3153(2): test %al,%al
3155(2): jnz 0xffffffe3(%rip)
3157(4): mov 0x8(%rdx),%r12
315b(2): xor %edi,%edi
315d(5): mov $0x5,%edx
3162(7): lea 0x7592(%rip),%rsi
3169(3): test %r12,%r12
316c(6): jz 0xc7(%rip)
3172(5): call 0xffffe4ee(%rip)
3177(7): lea 0x7c3a(%rip),%rcx
317e(7): lea 0x758d(%rip),%rdx
3185(3): mov %rax,%rsi
3188(5): mov $0x1,%edi
318d(2): xor %eax,%eax
318f(5): call 0xffffe681(%rip)
3194(2): xor %esi,%esi
3196(5): mov $0x5,%edi
319b(5): call 0xffffe665(%rip)
31a0(3): test %rax,%rax
31a3(2): jz 0x1e(%rip)
31a5(7): lea 0x7574(%rip),%rsi
31ac(5): mov $0x3,%edx
31b1(3): mov %rax,%rdi
31b4(5): call 0xffffe42c(%rip)
31b9(2): test %eax,%eax
31bb(6): jnz 0x10d(%rip)
31c1(7): lea 0x755c(%rip),%rsi
31c8(2): xor %edi,%edi
31ca(5): mov $0x5,%edx
31cf(5): call 0xffffe491(%rip)
31d4(7): lea 0x74af(%rip),%rcx
31db(7): lea 0x7bd6(%rip),%rdx
31e2(3): mov %rax,%rsi
31e5(5): mov $0x1,%edi
31ea(2): xor %eax,%eax
31ec(5): call 0xffffe624(%rip)
31f1(3): cmp %rbx,%r12
31f4(7): lea 0x74c7(%rip),%rcx
31fb(7): lea 0x865f(%rip),%rbx
3202(4): cmove %rcx,%rbx
3206(7): lea 0x7c1b(%rip),%rsi
320d(2): xor %edi,%edi
320f(5): mov $0x5,%edx
3214(5): call 0xffffe44c(%rip)
3219(3): mov %rbx,%rcx
321c(3): mov %rax,%rsi
321f(3): mov %r12,%rdx
3222(5): mov $0x1,%edi
3227(2): xor %eax,%eax
3229(5): call 0xffffe5e7(%rip)
322e(5): jmp 0xfffffcc8(%rip)
3233(5): call 0xffffe42d(%rip)
3238(7): lea 0x7b79(%rip),%rcx
323f(7): lea 0x74cc(%rip),%rdx
3246(3): mov %rax,%rsi
3249(5): mov $0x1,%edi
324e(2): xor %eax,%eax
3250(5): call 0xffffe5c0(%rip)
3255(2): xor %esi,%esi
3257(5): mov $0x5,%edi
325c(5): call 0xffffe5a4(%rip)
3261(3): test %rax,%rax
3264(2): jz 0x1a(%rip)
3266(7): lea 0x74b3(%rip),%rsi
326d(5): mov $0x3,%edx
3272(3): mov %rax,%rdi
3275(5): call 0xffffe36b(%rip)
327a(2): test %eax,%eax
327c(2): jnz 0x45(%rip)
327e(7): lea 0x749f(%rip),%rsi
3285(5): mov $0x5,%edx
328a(2): xor %edi,%edi
328c(7): lea 0x73f7(%rip),%r12
3293(7): lea 0x7428(%rip),%rbx
329a(5): call 0xffffe3c6(%rip)
329f(7): lea 0x73e4(%rip),%rcx
32a6(7): lea 0x7b0b(%rip),%rdx
32ad(3): mov %rax,%rsi
32b0(5): mov $0x1,%edi
32b5(2): xor %eax,%eax
32b7(5): call 0xffffe559(%rip)
32bc(5): jmp 0xffffff4a(%rip)
32c1(7): lea 0x73c2(%rip),%r12
32c8(7): mov 0x20add9(%rip),%r13
32cf(7): lea 0x7b0a(%rip),%rsi
32d6(2): xor %edi,%edi
32d8(5): mov $0x5,%edx
32dd(5): call 0xffffe383(%rip)
32e2(3): mov %r13,%rsi
32e5(3): mov %rax,%rdi
32e8(5): call 0xffffe458(%rip)
32ed(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
3300(7): mov %rdi,0x20ae11(%rip)
3307(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
3310(7): mov %dil,0x20adf9(%rip)
3317(1): ret near (%rsp)

"close_stdout" :
3320(1): push %rbp
3321(1): push %rbx
3322(4): sub $0x8,%rsp
3326(7): mov 0x20ad7b(%rip),%rdi
332d(5): call 0x7183(%rip)
3332(2): test %eax,%eax
3334(2): jz 0x18(%rip)
3336(5): call 0xffffe29a(%rip)
333b(7): cmp $0x0,0x20adce(%rip)
3342(3): mov %rax,%rbx
3345(2): jz 0x1e(%rip)
3347(3): cmp $0x20,(%rax)
334a(2): jnz 0x19(%rip)
334c(7): mov 0x20ad8d(%rip),%rdi
3353(5): call 0x715d(%rip)
3358(2): test %eax,%eax
335a(2): jnz 0x48(%rip)
335c(4): add $0x8,%rsp
3360(1): pop %rbx
3361(1): pop %rbp
3362(1): ret near (%rsp)
3363(7): lea 0x7edb(%rip),%rsi
336a(2): xor %edi,%edi
336c(5): mov $0x5,%edx
3371(5): call 0xffffe2ef(%rip)
3376(7): mov 0x20ad9b(%rip),%rdi
337d(3): mov %rax,%rbp
3380(3): test %rdi,%rdi
3383(2): jz 0x2a(%rip)
3385(5): call 0x621b(%rip)
338a(2): mov (%rbx),%esi
338c(7): lea 0x7ebe(%rip),%rdx
3393(3): mov %rax,%rcx
3396(3): mov %rbp,%r8
3399(2): xor %edi,%edi
339b(2): xor %eax,%eax
339d(5): call 0xffffe493(%rip)
33a2(6): mov 0x20ac78(%rip),%edi
33a8(5): call 0xffffe248(%rip)
33ad(2): mov (%rbx),%esi
33af(7): lea 0x7e9f(%rip),%rdx
33b6(3): mov %rax,%rcx
33b9(2): xor %edi,%edi
33bb(2): xor %eax,%eax
33bd(5): call 0xffffe473(%rip)
33c2(2): jmp 0xffffffe0(%rip)

"sha512_init_ctx" :
33d0(a): mov $0x7640891576956012808,%rax
33da(8): mov $0x0,0x48(%rdi)
33e2(8): mov $0x0,0x40(%rdi)
33ea(3): mov %rax,(%rdi)
33ed(a): mov $0x-4942790177534073029,%rax
33f7(8): mov $0x0,0x50(%rdi)
33ff(4): mov %rax,0x8(%rdi)
3403(a): mov $0x4354685564936845355,%rax
340d(4): mov %rax,0x10(%rdi)
3411(a): mov $0x-6534734903238641935,%rax
341b(4): mov %rax,0x18(%rdi)
341f(a): mov $0x5840696475078001361,%rax
3429(4): mov %rax,0x20(%rdi)
342d(a): mov $0x-7276294671716946913,%rax
3437(4): mov %rax,0x28(%rdi)
343b(a): mov $0x2270897969802886507,%rax
3445(4): mov %rax,0x30(%rdi)
3449(a): mov $0x6620516959819538809,%rax
3453(4): mov %rax,0x38(%rdi)
3457(1): ret near (%rsp)

"sha384_init_ctx" :
3460(a): mov $0x-3766243637369397544,%rax
346a(8): mov $0x0,0x48(%rdi)
3472(8): mov $0x0,0x40(%rdi)
347a(3): mov %rax,(%rdi)
347d(a): mov $0x7105036623409894663,%rax
3487(8): mov $0x0,0x50(%rdi)
348f(4): mov %rax,0x8(%rdi)
3493(a): mov $0x-7973340178411365097,%rax
349d(4): mov %rax,0x10(%rdi)
34a1(a): mov $0x1526699215303891257,%rax
34ab(4): mov %rax,0x18(%rdi)
34af(a): mov $0x7436329637833083697,%rax
34b9(4): mov %rax,0x20(%rdi)
34bd(a): mov $0x-8163818279084223215,%rax
34c7(4): mov %rax,0x28(%rdi)
34cb(a): mov $0x-2662702644619276377,%rax
34d5(4): mov %rax,0x30(%rdi)
34d9(a): mov $0x5167115440072839076,%rax
34e3(4): mov %rax,0x38(%rdi)
34e7(1): ret near (%rsp)

"sha512_read_ctx" :
34f0(3): mov %rsi,%rax
34f3(2): xor %edx,%edx
34f5(3): nop (%rax)
34f8(4): mov 0x0(%rdi,%rdx,1),%rcx
34fc(3): bswap %rcx
34ff(4): mov %rcx,0x0(%rax,%rdx,1)
3503(4): add $0x8,%rdx
3507(4): cmp $0x40,%rdx
350b(2): jnz 0xffffffed(%rip)
350d(2): REP ret near (%rsp)

"sha384_read_ctx" :
3510(3): mov %rsi,%rax
3513(2): xor %edx,%edx
3515(3): nop (%rax)
3518(4): mov 0x0(%rdi,%rdx,1),%rcx
351c(3): bswap %rcx
351f(4): mov %rcx,0x0(%rax,%rdx,1)
3523(4): add $0x8,%rdx
3527(4): cmp $0x30,%rdx
352b(2): jnz 0xffffffed(%rip)
352d(2): REP ret near (%rsp)

"sha512_process_block" :
3530(2): push %r15
3532(2): push %r14
3534(3): mov %rdi,%r15
3537(2): push %r13
3539(2): push %r12
353b(1): push %rbp
353c(1): push %rbx
353d(3): mov %rdx,%rbx
3540(7): sub $0x188,%rsp
3547(4): mov 0x8(%rdx),%rbp
354b(4): mov 0x10(%rdx),%r13
354f(9): mov $0x28,%rax
3558(8): mov %rax,0x178(%rsp)
3560(2): xor %eax,%eax
3562(3): mov %rsi,%rax
3565(4): mov 0x18(%rdx),%r8
3569(4): mov 0x20(%rdx),%r9
356d(4): and $0xfffffff8,%rax
3571(4): mov 0x28(%rdx),%r12
3575(4): mov 0x38(%rdx),%r10
3579(3): add %rdi,%rax
357c(4): add 0x40(%rdx),%rsi
3580(8): mov %rdi,0x88(%rsp)
3588(3): mov %rax,%rcx
358b(4): mov 0x30(%rdx),%rdi
358f(8): mov %rdx,0xe0(%rsp)
3597(8): mov %rax,0xd8(%rsp)
359f(3): mov (%rdx),%rax
35a2(3): setb %dl
35a5(4): mov %rsi,0x40(%rbx)
35a9(3): movzx %dl,%edx
35ac(4): add %rdx,0x48(%rbx)
35b0(3): cmp %rcx,%r15
35b3(6): jnb 0x3c66(%rip)
35b9(8): lea 0xf0(%rsp),%rbx
35c1(8): mov %r10,0xc0(%rsp)
35c9(8): mov %rdi,0xb8(%rsp)
35d1(8): mov %r12,0xb0(%rsp)
35d9(8): mov %r9,0xa8(%rsp)
35e1(8): mov %r8,0xa0(%rsp)
35e9(8): mov %r13,0x98(%rsp)
35f1(8): mov %rbp,0x90(%rsp)
35f9(8): mov %rax,0xd0(%rsp)
3601(8): mov %rbx,0xe8(%rsp)
3609(7): nop 0x0(%rax)
3610(8): mov 0x88(%rsp),%rsi
3618(8): mov 0xe8(%rsp),%r11
3620(2): xor %edx,%edx
3622(6): nop 0x0(%rax,%rax,1)
3628(4): mov 0x0(%rsi,%rdx,1),%rcx
362c(3): bswap %rcx
362f(4): mov %rcx,0x0(%r11,%rdx,1)
3633(4): add $0x8,%rdx
3637(7): cmp $0x80,%rdx
363e(2): jnz 0xffffffea(%rip)
3640(3): mov %r9,%rdx
3643(3): mov %r9,%rcx
3646(3): mov %rax,%rsi
3649(4): ror $0x12,%rcx
364d(4): ror $0xe,%rdx
3651(4): rol $0x1e,%rsi
3655(3): xor %rcx,%rdx
3658(3): mov %r9,%rcx
365b(8): mov 0xf8(%rsp),%r15
3663(4): rol $0x17,%rcx
3667(9): sub $0xffffff80,0x88(%rsp)
3670(3): xor %rdx,%rcx
3673(a): mov $0x4794697086780616226,%rdx
367d(8): add 0xf0(%rsp),%rdx
3685(3): add %rdx,%r10
3688(3): mov %r12,%rdx
368b(3): xor %rdi,%rdx
368e(3): add %rcx,%r10
3691(3): and %r9,%rdx
3694(3): xor %rdi,%rdx
3697(4): lea 0x0(%r10,%rdx,1),%rcx
369b(3): mov %rax,%rdx
369e(3): mov %rax,%r10
36a1(4): ror $0x1c,%rdx
36a5(3): and %rbp,%r10
36a8(3): xor %rdx,%rsi
36ab(3): mov %rax,%rdx
36ae(3): add %rcx,%r8
36b1(4): rol $0x19,%rdx
36b5(3): mov %r8,%r11
36b8(3): xor %rdx,%rsi
36bb(3): mov %rax,%rdx
36be(4): ror $0x12,%r11
36c2(3): or %rbp,%rdx
36c5(3): and %r13,%rdx
36c8(3): or %r10,%rdx
36cb(3): add %rsi,%rdx
36ce(a): mov $0x8158064640168781261,%rsi
36d8(3): add %rcx,%rdx
36db(3): mov %r9,%rcx
36de(3): add %r15,%rsi
36e1(3): xor %r12,%rcx
36e4(3): add %rdi,%rsi
36e7(3): mov %rdx,%r10
36ea(3): and %r8,%rcx
36ed(3): xor %r12,%rcx
36f0(3): add %rcx,%rsi
36f3(3): mov %r8,%rcx
36f6(4): ror $0xe,%rcx
36fa(3): xor %rcx,%r11
36fd(3): mov %r8,%rcx
3700(3): and %rax,%r10
3703(4): rol $0x17,%rcx
3707(3): xor %r11,%rcx
370a(3): mov %rdx,%r11
370d(3): add %rsi,%rcx
3710(3): mov %rdx,%rsi
3713(4): ror $0x1c,%r11
3717(4): rol $0x1e,%rsi
371b(4): lea 0x0(%rcx,%r13,1),%rdi
371f(3): xor %r11,%rsi
3722(3): mov %rdx,%r11
3725(4): rol $0x19,%r11
3729(3): xor %r11,%rsi
372c(3): mov %rdx,%r11
372f(3): or %rax,%r11
3732(3): and %rbp,%r11
3735(3): or %r10,%r11
3738(3): mov %r8,%r10
373b(3): add %rsi,%r11
373e(3): xor %r9,%r10
3741(3): mov %rdi,%rsi
3744(3): add %rcx,%r11
3747(a): mov $0x-5349999486874862801,%rcx
3751(8): add 0x100(%rsp),%rcx
3759(3): and %rdi,%r10
375c(4): ror $0x12,%rsi
3760(3): mov %r11,%r14
3763(3): xor %r9,%r10
3766(3): mov %rsi,%rbx
3769(4): rol $0x19,%r14
376d(3): add %r12,%rcx
3770(3): add %r10,%rcx
3773(3): mov %rdi,%r10
3776(4): ror $0xe,%r10
377a(3): xor %r10,%rbx
377d(3): mov %rdi,%r10
3780(4): rol $0x17,%r10
3784(3): xor %rbx,%r10
3787(3): add %rcx,%r10
378a(3): mov %r11,%rcx
378d(4): ror $0x1c,%rcx
3791(4): lea 0x0(%r10,%rbp,1),%rsi
3795(3): mov %rdx,%rbp
3798(3): mov %rcx,%rbx
379b(3): mov %r11,%rcx
379e(4): rol $0x1e,%rcx
37a2(3): xor %rbx,%rcx
37a5(3): xor %r14,%rcx
37a8(3): mov %rdx,%r14
37ab(3): or %r11,%r14
37ae(3): and %r11,%rbp
37b1(3): mov %r14,%rbx
37b4(3): and %rax,%rbx
37b7(3): or %rbp,%rbx
37ba(3): mov %r11,%rbp
37bd(3): add %rcx,%rbx
37c0(3): mov %r8,%rcx
37c3(3): add %r10,%rbx
37c6(a): mov $0x-1606136188198331460,%r10
37d0(8): add 0x108(%rsp),%r10
37d8(3): xor %rdi,%rcx
37db(3): and %rbx,%rbp
37de(3): and %rsi,%rcx
37e1(3): xor %r8,%rcx
37e4(3): add %r10,%r9
37e7(3): mov %rsi,%r10
37ea(3): add %r9,%rcx
37ed(3): mov %rsi,%r9
37f0(4): ror $0x12,%r10
37f4(4): ror $0xe,%r9
37f8(3): xor %r9,%r10
37fb(3): mov %rsi,%r9
37fe(4): rol $0x17,%r9
3802(3): xor %r10,%r9
3805(3): mov %rbx,%r10
3808(3): add %rcx,%r9
380b(4): ror $0x1c,%r10
380f(4): lea 0x0(%r9,%rax,1),%rcx
3813(3): mov %rbx,%rax
3816(4): rol $0x1e,%rax
381a(3): xor %r10,%rax
381d(3): mov %rbx,%r10
3820(4): rol $0x19,%r10
3824(3): xor %r10,%rax
3827(3): mov %r11,%r10
382a(3): or %rbx,%r10
382d(3): and %rdx,%r10
3830(3): or %rbp,%r10
3833(3): mov %rbx,%rbp
3836(3): add %rax,%r10
3839(3): mov %rdi,%rax
383c(3): xor %rsi,%rax
383f(3): add %r9,%r10
3842(a): mov $0x4131703408338449720,%r9
384c(3): and %rcx,%rax
384f(3): xor %rdi,%rax
3852(8): add 0x110(%rsp),%r9
385a(3): and %r10,%rbp
385d(3): add %r9,%r8
3860(3): mov %rcx,%r9
3863(3): add %rax,%r8
3866(3): mov %rcx,%rax
3869(4): ror $0x12,%r9
386d(4): ror $0xe,%rax
3871(3): xor %rax,%r9
3874(3): mov %rcx,%rax
3877(4): rol $0x17,%rax
387b(3): xor %r9,%rax
387e(3): mov %r10,%r9
3881(3): add %r8,%rax
3884(3): mov %r10,%r8
3887(4): ror $0x1c,%r9
388b(4): rol $0x1e,%r8
388f(3): add %rax,%rdx
3892(3): xor %r9,%r8
3895(3): mov %r10,%r9
3898(4): rol $0x19,%r9
389c(3): xor %r9,%r8
389f(3): mov %rbx,%r9
38a2(3): or %r10,%r9
38a5(3): and %r11,%r9
38a8(3): or %rbp,%r9
38ab(3): mov %r10,%rbp
38ae(3): add %r8,%r9
38b1(3): mov %rsi,%r8
38b4(3): add %rax,%r9
38b7(a): mov $0x6480981068601479193,%rax
38c1(8): add 0x118(%rsp),%rax
38c9(3): xor %rcx,%r8
38cc(3): and %rdx,%r8
38cf(3): xor %rsi,%r8
38d2(3): add %rax,%rdi
38d5(3): mov %rdx,%rax
38d8(3): add %rdi,%r8
38db(3): mov %rdx,%rdi
38de(4): ror $0x12,%rax
38e2(4): ror $0xe,%rdi
38e6(3): xor %rdi,%rax
38e9(3): mov %rdx,%rdi
38ec(4): rol $0x17,%rdi
38f0(3): xor %rax,%rdi
38f3(3): mov %r9,%rax
38f6(3): add %r8,%rdi
38f9(3): mov %r9,%r8
38fc(4): ror $0x1c,%rax
3900(4): rol $0x1e,%r8
3904(3): and %r9,%rbp
3907(3): add %rdi,%r11
390a(3): xor %rax,%r8
390d(3): mov %r9,%rax
3910(4): rol $0x19,%rax
3914(3): xor %rax,%r8
3917(3): mov %r10,%rax
391a(3): or %r9,%rax
391d(3): and %rbx,%rax
3920(3): or %rbp,%rax
3923(3): mov %r9,%rbp
3926(3): add %r8,%rax
3929(a): mov $0x-7908458776815382629,%r8
3933(8): add 0x120(%rsp),%r8
393b(3): add %rdi,%rax
393e(3): mov %rcx,%rdi
3941(3): xor %rdx,%rdi
3944(3): and %r11,%rdi
3947(3): add %r8,%rsi
394a(3): xor %rcx,%rdi
394d(3): mov %r11,%r8
3950(3): add %rsi,%rdi
3953(3): mov %r11,%rsi
3956(4): ror $0x12,%r8
395a(4): ror $0xe,%rsi
395e(3): xor %rsi,%r8
3961(3): mov %r11,%rsi
3964(4): rol $0x17,%rsi
3968(3): xor %r8,%rsi
396b(3): mov %rax,%r8
396e(3): add %rdi,%rsi
3971(3): mov %rax,%rdi
3974(4): ror $0x1c,%r8
3978(4): rol $0x1e,%rdi
397c(3): add %rsi,%rbx
397f(3): xor %r8,%rdi
3982(3): mov %rax,%r8
3985(4): rol $0x19,%r8
3989(3): xor %r8,%rdi
398c(3): mov %r9,%r8
398f(3): or %rax,%r8
3992(3): and %r10,%r8
3995(3): and %rax,%rbp
3998(3): or %rbp,%r8
399b(3): mov %rax,%rbp
399e(3): add %rdi,%r8
39a1(a): mov $0x-6116909921290321640,%rdi
39ab(8): add 0x128(%rsp),%rdi
39b3(3): add %rsi,%r8
39b6(3): mov %rdx,%rsi
39b9(3): xor %r11,%rsi
39bc(3): and %r8,%rbp
39bf(3): and %rbx,%rsi
39c2(3): add %rdi,%rcx
39c5(3): xor %rdx,%rsi
39c8(3): mov %rbx,%rdi
39cb(3): add %rcx,%rsi
39ce(3): mov %rbx,%rcx
39d1(4): ror $0x12,%rdi
39d5(4): ror $0xe,%rcx
39d9(3): xor %rcx,%rdi
39dc(3): mov %rbx,%rcx
39df(4): rol $0x17,%rcx
39e3(3): xor %rdi,%rcx
39e6(3): mov %r8,%rdi
39e9(3): add %rsi,%rcx
39ec(3): mov %r8,%rsi
39ef(4): ror $0x1c,%rdi
39f3(4): rol $0x1e,%rsi
39f7(3): add %rcx,%r10
39fa(3): xor %rdi,%rsi
39fd(3): mov %r8,%rdi
3a00(4): rol $0x19,%rdi
3a04(3): xor %rdi,%rsi
3a07(3): mov %rax,%rdi
3a0a(3): or %r8,%rdi
3a0d(3): and %r9,%rdi
3a10(3): or %rbp,%rdi
3a13(3): mov %r8,%rbp
3a16(3): add %rsi,%rdi
3a19(a): mov $0x-2880145864133508542,%rsi
3a23(3): add %rcx,%rdi
3a26(3): mov %r11,%rcx
3a29(3): xor %rbx,%rcx
3a2c(3): and %r10,%rcx
3a2f(3): xor %r11,%rcx
3a32(8): add 0x130(%rsp),%rsi
3a3a(3): and %rdi,%rbp
3a3d(3): add %rsi,%rdx
3a40(3): mov %r10,%rsi
3a43(3): add %rdx,%rcx
3a46(3): mov %r10,%rdx
3a49(4): ror $0x12,%rsi
3a4d(4): ror $0xe,%rdx
3a51(3): xor %rdx,%rsi
3a54(3): mov %r10,%rdx
3a57(4): rol $0x17,%rdx
3a5b(3): xor %rsi,%rdx
3a5e(3): mov %rdi,%rsi
3a61(3): add %rcx,%rdx
3a64(3): mov %rdi,%rcx
3a67(4): ror $0x1c,%rsi
3a6b(4): rol $0x1e,%rcx
3a6f(3): add %rdx,%r9
3a72(3): xor %rsi,%rcx
3a75(3): mov %rdi,%rsi
3a78(4): rol $0x19,%rsi
3a7c(3): xor %rsi,%rcx
3a7f(3): mov %r8,%rsi
3a82(3): or %rdi,%rsi
3a85(3): and %rax,%rsi
3a88(3): or %rbp,%rsi
3a8b(3): mov %rdi,%rbp
3a8e(3): add %rcx,%rsi
3a91(a): mov $0x1334009975649890238,%rcx
3a9b(8): add 0x138(%rsp),%rcx
3aa3(3): add %rdx,%rsi
3aa6(3): mov %rbx,%rdx
3aa9(3): xor %r10,%rdx
3aac(3): and %r9,%rdx
3aaf(3): xor %rbx,%rdx
3ab2(3): add %rcx,%r11
3ab5(3): mov %r9,%rcx
3ab8(3): add %rdx,%r11
3abb(3): mov %r9,%rdx
3abe(4): ror $0x12,%rcx
3ac2(4): ror $0xe,%rdx
3ac6(3): xor %rdx,%rcx
3ac9(3): mov %r9,%rdx
3acc(4): rol $0x17,%rdx
3ad0(3): xor %rcx,%rdx
3ad3(3): mov %rsi,%rcx
3ad6(3): add %r11,%rdx
3ad9(3): mov %rsi,%r11
3adc(4): ror $0x1c,%rcx
3ae0(4): rol $0x1e,%r11
3ae4(3): and %rsi,%rbp
3ae7(3): add %rdx,%rax
3aea(3): xor %rcx,%r11
3aed(3): mov %rsi,%rcx
3af0(4): rol $0x19,%rcx
3af4(3): xor %rcx,%r11
3af7(3): mov %rdi,%rcx
3afa(3): or %rsi,%rcx
3afd(3): and %r8,%rcx
3b00(3): or %rbp,%rcx
3b03(3): mov %rsi,%rbp
3b06(3): add %r11,%rcx
3b09(3): mov %r10,%r11
3b0c(3): add %rdx,%rcx
3b0f(a): mov $0x2608012711638119052,%rdx
3b19(8): add 0x140(%rsp),%rdx
3b21(3): xor %r9,%r11
3b24(3): mov %rcx,%r14
3b27(3): and %rax,%r11
3b2a(4): rol $0x1e,%r14
3b2e(3): xor %r10,%r11
3b31(3): add %rdx,%rbx
3b34(3): mov %rax,%rdx
3b37(3): add %r11,%rbx
3b3a(3): mov %rax,%r11
3b3d(4): ror $0x12,%rdx
3b41(4): ror $0xe,%r11
3b45(3): xor %r11,%rdx
3b48(3): mov %rax,%r11
3b4b(4): rol $0x17,%r11
3b4f(3): xor %rdx,%r11
3b52(3): mov %rcx,%rdx
3b55(3): add %rbx,%r11
3b58(4): ror $0x1c,%rdx
3b5c(3): mov %r14,%rbx
3b5f(3): xor %rdx,%rbx
3b62(3): mov %rcx,%rdx
3b65(3): add %r11,%r8
3b68(4): rol $0x19,%rdx
3b6c(3): mov %r8,%r13
3b6f(3): mov %rcx,%r14
3b72(3): xor %rdx,%rbx
3b75(3): mov %rsi,%rdx
3b78(3): or %rcx,%rdx
3b7b(3): and %rdi,%rdx
3b7e(3): and %rcx,%rbp
3b81(4): ror $0x12,%r13
3b85(3): or %rbp,%rdx
3b88(3): add %rbx,%rdx
3b8b(a): mov $0x6128411473006802146,%rbx
3b95(8): add 0x148(%rsp),%rbx
3b9d(3): add %r11,%rdx
3ba0(3): mov %r9,%r11
3ba3(3): xor %rax,%r11
3ba6(3): and %rdx,%r14
3ba9(3): and %r8,%r11
3bac(3): add %rbx,%r10
3baf(3): xor %r9,%r11
3bb2(4): lea 0x0(%r11,%r10,1),%r11
3bb6(3): mov %r8,%r10
3bb9(4): ror $0xe,%r10
3bbd(3): xor %r10,%r13
3bc0(3): mov %r8,%r10
3bc3(4): rol $0x17,%r10
3bc7(3): xor %r13,%r10
3bca(3): mov %rdx,%r13
3bcd(3): add %r11,%r10
3bd0(3): mov %rdx,%r11
3bd3(4): ror $0x1c,%r13
3bd7(4): rol $0x1e,%r11
3bdb(3): add %r10,%rdi
3bde(3): xor %r13,%r11
3be1(3): mov %rdx,%r13
3be4(4): rol $0x19,%r13
3be8(3): xor %r13,%r11
3beb(3): mov %rcx,%r13
3bee(3): or %rdx,%r13
3bf1(3): and %rsi,%r13
3bf4(3): or %r14,%r13
3bf7(3): mov %rdi,%r14
3bfa(3): add %r11,%r13
3bfd(a): mov $0x8268148722764581231,%r11
3c07(8): add 0x150(%rsp),%r11
3c0f(3): add %r10,%r13
3c12(3): mov %rax,%r10
3c15(3): xor %r8,%r10
3c18(3): and %rdi,%r10
3c1b(3): xor %rax,%r10
3c1e(3): add %r11,%r9
3c21(4): ror $0x12,%r14
3c25(4): lea 0x0(%r10,%r9,1),%r10
3c29(3): mov %rdi,%r9
3c2c(3): mov %rdx,%r11
3c2f(4): ror $0xe,%r9
3c33(3): and %r13,%r11
3c36(3): xor %r9,%r14
3c39(3): mov %rdi,%r9
3c3c(4): rol $0x17,%r9
3c40(3): xor %r14,%r9
3c43(3): mov %r13,%r14
3c46(3): add %r10,%r9
3c49(3): mov %r13,%r10
3c4c(4): ror $0x1c,%r14
3c50(4): rol $0x1e,%r10
3c54(3): add %r9,%rsi
3c57(3): xor %r14,%r10
3c5a(3): mov %r13,%r14
3c5d(3): mov %rsi,%r12
3c60(4): rol $0x19,%r14
3c64(4): ror $0x12,%r12
3c68(3): xor %r14,%r10
3c6b(3): mov %rdx,%r14
3c6e(3): or %r13,%r14
3c71(3): and %rcx,%r14
3c74(3): or %r11,%r14
3c77(8): mov 0x168(%rsp),%r11
3c7f(3): add %r10,%r14
3c82(a): mov $0x-9160688886553864527,%r10
3c8c(8): add 0x158(%rsp),%r10
3c94(3): add %r9,%r14
3c97(3): mov %r8,%r9
3c9a(3): xor %rdi,%r9
3c9d(3): and %rsi,%r9
3ca0(3): add %r10,%rax
3ca3(3): xor %r8,%r9
3ca6(3): mov %r13,%r10
3ca9(4): lea 0x0(%r9,%rax,1),%r9
3cad(3): mov %rsi,%rax
3cb0(4): ror $0xe,%rax
3cb4(3): xor %rax,%r12
3cb7(3): mov %rsi,%rax
3cba(4): rol $0x17,%rax
3cbe(3): xor %r12,%rax
3cc1(3): mov %r14,%r12
3cc4(3): add %r9,%rax
3cc7(3): mov %r14,%r9
3cca(4): ror $0x1c,%r12
3cce(3): add %rax,%rcx
3cd1(4): rol $0x1e,%r9
3cd5(3): and %r14,%r10
3cd8(3): xor %r12,%r9
3cdb(3): mov %r14,%r12
3cde(3): mov %rcx,%rbp
3ce1(4): rol $0x19,%r12
3ce5(4): ror $0x12,%rbp
3ce9(3): xor %r12,%r9
3cec(3): mov %r13,%r12
3cef(3): or %r14,%r12
3cf2(3): and %rdx,%r12
3cf5(3): or %r10,%r12
3cf8(3): mov %r15,%r10
3cfb(3): add %r9,%r12
3cfe(a): mov $0x-7215885187991268811,%r9
3d08(8): add 0x160(%rsp),%r9
3d10(3): add %rax,%r12
3d13(3): mov %rdi,%rax
3d16(3): xor %rsi,%rax
3d19(3): and %rcx,%rax
3d1c(3): xor %rdi,%rax
3d1f(3): add %r9,%r8
3d22(3): mov %r14,%r9
3d25(3): add %rax,%r8
3d28(3): mov %rcx,%rax
3d2b(3): and %r12,%r9
3d2e(4): ror $0xe,%rax
3d32(3): xor %rax,%rbp
3d35(3): mov %rcx,%rax
3d38(4): rol $0x17,%rax
3d3c(3): xor %rbp,%rax
3d3f(3): mov %r12,%rbp
3d42(3): add %r8,%rax
3d45(3): mov %r12,%r8
3d48(4): ror $0x1c,%rbp
3d4c(4): rol $0x1e,%r8
3d50(3): add %rax,%rdx
3d53(3): xor %rbp,%r8
3d56(3): mov %r12,%rbp
3d59(4): rol $0x19,%rbp
3d5d(3): xor %rbp,%r8
3d60(3): mov %r14,%rbp
3d63(3): or %r12,%rbp
3d66(3): and %r13,%rbp
3d69(3): or %r9,%rbp
3d6c(3): mov %r12,%r9
3d6f(3): add %r8,%rbp
3d72(a): mov $0x-4495734319001033068,%r8
3d7c(8): add 0x168(%rsp),%r8
3d84(3): add %rax,%rbp
3d87(3): mov %rsi,%rax
3d8a(3): xor %rcx,%rax
3d8d(3): and %rbp,%r9
3d90(3): and %rdx,%rax
3d93(3): xor %rsi,%rax
3d96(3): add %r8,%rdi
3d99(3): mov %rdx,%r8
3d9c(3): add %rax,%rdi
3d9f(3): mov %rdx,%rax
3da2(4): ror $0x12,%r8
3da6(4): ror $0xe,%rax
3daa(3): xor %rax,%r8
3dad(3): mov %rdx,%rax
3db0(4): rol $0x17,%rax
3db4(3): xor %r8,%rax
3db7(3): mov %rbp,%r8
3dba(3): add %rdi,%rax
3dbd(3): mov %rbp,%rdi
3dc0(4): ror $0x1c,%r8
3dc4(4): rol $0x1e,%rdi
3dc8(3): add %rax,%r13
3dcb(3): xor %r8,%rdi
3dce(3): mov %rbp,%r8
3dd1(4): rol $0x19,%r8
3dd5(3): xor %r8,%rdi
3dd8(3): mov %r12,%r8
3ddb(3): or %rbp,%r8
3dde(3): and %r14,%r8
3de1(3): or %r9,%r8
3de4(3): mov %rbp,%r9
3de7(3): add %rdi,%r8
3dea(8): mov 0x160(%rsp),%rdi
3df2(3): add %rax,%r8
3df5(8): mov 0x160(%rsp),%rax
3dfd(4): shr $0x6,%rdi
3e01(4): ror $0x13,%rax
3e05(3): mov %rax,%rbx
3e08(8): mov 0x160(%rsp),%rax
3e10(4): rol $0x3,%rax
3e14(3): xor %rbx,%rax
3e17(3): mov %rdi,%rbx
3e1a(8): mov 0xf0(%rsp),%rdi
3e22(8): add 0x138(%rsp),%rdi
3e2a(3): xor %rax,%rbx
3e2d(4): lea 0x0(%rbx,%rdi,1),%rax
3e31(3): mov %r15,%rdi
3e34(3): ror $0x1,%rdi
3e37(4): ror $0x8,%r10
3e3b(3): and %r8,%r9
3e3e(3): mov %r10,%rbx
3e41(4): ror $0x13,%r11
3e45(8): mov 0x108(%rsp),%r10
3e4d(3): xor %rdi,%rbx
3e50(3): mov %r15,%rdi
3e53(4): shr $0x7,%rdi
3e57(3): xor %rdi,%rbx
3e5a(a): mov $0x-1973867731355612462,%rdi
3e64(3): add %rax,%rbx
3e67(3): mov %rcx,%rax
3e6a(3): xor %rdx,%rax
3e6d(3): add %rbx,%rdi
3e70(3): and %r13,%rax
3e73(3): add %rdi,%rsi
3e76(3): mov %r13,%rdi
3e79(3): xor %rcx,%rax
3e7c(4): ror $0x12,%rdi
3e80(3): add %rax,%rsi
3e83(3): mov %r13,%rax
3e86(4): ror $0xe,%rax
3e8a(3): xor %rax,%rdi
3e8d(3): mov %r13,%rax
3e90(4): rol $0x17,%rax
3e94(3): xor %rdi,%rax
3e97(3): mov %r8,%rdi
3e9a(3): add %rsi,%rax
3e9d(3): mov %r8,%rsi
3ea0(4): ror $0x1c,%rdi
3ea4(4): rol $0x1e,%rsi
3ea8(3): add %rax,%r14
3eab(3): xor %rdi,%rsi
3eae(3): mov %r8,%rdi
3eb1(4): rol $0x19,%rdi
3eb5(3): xor %rdi,%rsi
3eb8(3): mov %rbp,%rdi
3ebb(3): or %r8,%rdi
3ebe(3): and %r12,%rdi
3ec1(3): or %r9,%rdi
3ec4(3): mov %r8,%r9
3ec7(3): add %rsi,%rdi
3eca(8): mov 0x140(%rsp),%rsi
3ed2(3): add %rax,%rdi
3ed5(8): mov 0x168(%rsp),%rax
3edd(4): rol $0x3,%rax
3ee1(3): xor %r11,%rax
3ee4(8): mov 0x168(%rsp),%r11
3eec(3): add %r15,%rsi
3eef(3): and %rdi,%r9
3ef2(4): shr $0x6,%r11
3ef6(3): xor %rax,%r11
3ef9(4): lea 0x0(%r11,%rsi,1),%rax
3efd(8): mov 0x100(%rsp),%rsi
3f05(8): mov 0x100(%rsp),%r11
3f0d(3): ror $0x1,%rsi
3f10(4): ror $0x8,%r11
3f14(3): xor %rsi,%r11
3f17(8): mov 0x100(%rsp),%rsi
3f1f(4): shr $0x7,%rsi
3f23(3): xor %rsi,%r11
3f26(a): mov $0x-1171420211273849373,%rsi
3f30(3): add %rax,%r11
3f33(3): mov %rdx,%rax
3f36(3): xor %r13,%rax
3f39(3): add %r11,%rsi
3f3c(3): and %r14,%rax
3f3f(3): add %rsi,%rcx
3f42(3): mov %r14,%rsi
3f45(3): xor %rdx,%rax
3f48(4): ror $0x12,%rsi
3f4c(3): add %rax,%rcx
3f4f(3): mov %r14,%rax
3f52(4): ror $0xe,%rax
3f56(3): xor %rax,%rsi
3f59(3): mov %r14,%rax
3f5c(4): rol $0x17,%rax
3f60(3): xor %rsi,%rax
3f63(3): mov %rdi,%rsi
3f66(3): add %rcx,%rax
3f69(3): mov %rdi,%rcx
3f6c(4): ror $0x1c,%rsi
3f70(4): rol $0x1e,%rcx
3f74(3): add %rax,%r12
3f77(3): xor %rsi,%rcx
3f7a(3): mov %rdi,%rsi
3f7d(4): rol $0x19,%rsi
3f81(3): xor %rsi,%rcx
3f84(3): mov %r8,%rsi
3f87(3): or %rdi,%rsi
3f8a(3): and %rbp,%rsi
3f8d(3): or %r9,%rsi
3f90(3): mov %rdi,%r9
3f93(3): add %rcx,%rsi
3f96(3): ror $0x1,%r10
3f99(3): add %rax,%rsi
3f9c(8): mov 0x108(%rsp),%rax
3fa4(3): mov %rsi,%r15
3fa7(4): ror $0x8,%rax
3fab(3): xor %r10,%rax
3fae(8): mov 0x108(%rsp),%r10
3fb6(8): mov 0x100(%rsp),%rcx
3fbe(8): add 0x148(%rsp),%rcx
3fc6(4): shr $0x7,%r10
3fca(3): xor %rax,%r10
3fcd(4): lea 0x0(%r10,%rcx,1),%rax
3fd1(3): mov %rbx,%rcx
3fd4(3): mov %rbx,%r10
3fd7(4): ror $0x13,%rcx
3fdb(4): rol $0x3,%r10
3fdf(3): xor %rcx,%r10
3fe2(3): mov %rbx,%rcx
3fe5(4): shr $0x6,%rcx
3fe9(3): xor %rcx,%r10
3fec(a): mov $0x1135362057144423861,%rcx
3ff6(3): add %rax,%r10
3ff9(3): mov %r13,%rax
3ffc(3): xor %r14,%rax
3fff(3): add %r10,%rcx
4002(3): and %r12,%rax
4005(3): add %rcx,%rdx
4008(3): mov %r12,%rcx
400b(3): xor %r13,%rax
400e(4): ror $0x12,%rcx
4012(3): add %rax,%rdx
4015(3): mov %r12,%rax
4018(4): ror $0xe,%rax
401c(3): xor %rax,%rcx
401f(3): mov %r12,%rax
4022(4): rol $0x17,%rax
4026(3): xor %rcx,%rax
4029(3): mov %rsi,%rcx
402c(3): add %rdx,%rax
402f(3): mov %rsi,%rdx
4032(4): ror $0x1c,%rcx
4036(4): rol $0x1e,%rdx
403a(3): add %rax,%rbp
403d(3): xor %rcx,%rdx
4040(3): mov %rsi,%rcx
4043(4): rol $0x19,%rcx
4047(3): xor %rcx,%rdx
404a(3): mov %rdi,%rcx
404d(3): or %rsi,%rcx
4050(3): and %rsi,%r9
4053(3): and %r8,%rcx
4056(3): or %r9,%rcx
4059(8): mov 0x110(%rsp),%r9
4061(3): add %rdx,%rcx
4064(8): mov 0x108(%rsp),%rdx
406c(8): add 0x150(%rsp),%rdx
4074(3): add %rax,%rcx
4077(8): mov 0x110(%rsp),%rax
407f(3): ror $0x1,%r9
4082(4): ror $0x8,%rax
4086(3): xor %r9,%rax
4089(8): mov 0x110(%rsp),%r9
4091(4): shr $0x7,%r9
4095(3): xor %rax,%r9
4098(4): lea 0x0(%r9,%rdx,1),%rax
409c(3): mov %r11,%rdx
409f(3): mov %r11,%r9
40a2(4): ror $0x13,%rdx
40a6(4): rol $0x3,%r9
40aa(3): xor %rdx,%r9
40ad(3): mov %r11,%rdx
40b0(4): shr $0x6,%rdx
40b4(3): xor %rdx,%r9
40b7(3): mov %r14,%rdx
40ba(3): add %rax,%r9
40bd(3): xor %r12,%rdx
40c0(a): mov $0x2597628984639134821,%rax
40ca(3): add %r9,%rax
40cd(3): and %rbp,%rdx
40d0(3): xor %r14,%rdx
40d3(3): add %rax,%r13
40d6(3): mov %rbp,%rax
40d9(3): add %rdx,%r13
40dc(3): mov %rbp,%rdx
40df(4): ror $0x12,%rax
40e3(4): ror $0xe,%rdx
40e7(3): xor %rdx,%rax
40ea(3): mov %rbp,%rdx
40ed(4): rol $0x17,%rdx
40f1(3): xor %rax,%rdx
40f4(3): mov %rcx,%rax
40f7(3): add %r13,%rdx
40fa(3): mov %rcx,%r13
40fd(4): ror $0x1c,%rax
4101(3): add %rdx,%r8
4104(4): rol $0x1e,%r13
4108(3): and %rcx,%r15
410b(3): xor %rax,%r13
410e(3): mov %rcx,%rax
4111(4): rol $0x19,%rax
4115(3): xor %rax,%r13
4118(3): mov %rsi,%rax
411b(3): or %rcx,%rax
411e(3): and %rdi,%rax
4121(3): or %r15,%rax
4124(3): mov %r10,%r15
4127(3): add %r13,%rax
412a(8): mov 0x118(%rsp),%r13
4132(4): ror $0x13,%r15
4136(3): add %rdx,%rax
4139(8): mov 0x118(%rsp),%rdx
4141(4): ror $0x8,%r13
4145(3): ror $0x1,%rdx
4148(3): xor %r13,%rdx
414b(8): mov 0x118(%rsp),%r13
4153(4): shr $0x7,%r13
4157(3): xor %rdx,%r13
415a(8): mov 0x110(%rsp),%rdx
4162(8): add 0x158(%rsp),%rdx
416a(3): add %rdx,%r13
416d(3): mov %r10,%rdx
4170(4): rol $0x3,%rdx
4174(3): xor %r15,%rdx
4177(3): mov %r10,%r15
417a(4): shr $0x6,%r15
417e(3): xor %r15,%rdx
4181(5): lea 0x0(%r13,%rdx,1),%r15
4186(3): mov %r12,%r13
4189(a): mov $0x3308224258029322869,%rdx
4193(3): xor %rbp,%r13
4196(3): add %r15,%rdx
4199(3): and %r8,%r13
419c(5): mov %r15,0x40(%rsp)
41a1(3): xor %r12,%r13
41a4(3): add %rdx,%r14
41a7(3): mov %r8,%rdx
41aa(3): add %r13,%r14
41ad(3): mov %r8,%r13
41b0(4): ror $0x12,%rdx
41b4(4): ror $0xe,%r13
41b8(3): mov %rcx,%r15
41bb(3): xor %r13,%rdx
41be(3): mov %r8,%r13
41c1(4): rol $0x17,%r13
41c5(3): xor %rdx,%r13
41c8(3): mov %rax,%rdx
41cb(3): and %rax,%r15
41ce(3): add %r14,%r13
41d1(3): mov %rax,%r14
41d4(4): ror $0x1c,%rdx
41d8(4): rol $0x1e,%r14
41dc(3): add %r13,%rdi
41df(3): xor %rdx,%r14
41e2(3): mov %rax,%rdx
41e5(4): rol $0x19,%rdx
41e9(3): xor %rdx,%r14
41ec(3): mov %rcx,%rdx
41ef(3): or %rax,%rdx
41f2(3): and %rsi,%rdx
41f5(3): or %r15,%rdx
41f8(3): add %r14,%rdx
41fb(8): mov 0x120(%rsp),%r14
4203(3): add %r13,%rdx
4206(8): mov 0x120(%rsp),%r13
420e(4): ror $0x8,%r14
4212(3): ror $0x1,%r13
4215(3): xor %r14,%r13
4218(8): mov 0x120(%rsp),%r14
4220(4): shr $0x7,%r14
4224(3): xor %r13,%r14
4227(8): mov 0x118(%rsp),%r13
422f(8): add 0x160(%rsp),%r13
4237(3): add %r13,%r14
423a(3): mov %r9,%r13
423d(4): ror $0x13,%r13
4241(3): mov %r13,%r15
4244(3): mov %r9,%r13
4247(4): rol $0x3,%r13
424b(3): xor %r15,%r13
424e(3): mov %r9,%r15
4251(4): shr $0x6,%r15
4255(3): xor %r15,%r13
4258(3): mov %rax,%r15
425b(3): add %r13,%r14
425e(3): mov %rbp,%r13
4261(5): mov %r14,0x28(%rsp)
4266(a): mov $0x5365058923640841347,%r14
4270(5): add 0x28(%rsp),%r14
4275(3): xor %r8,%r13
4278(3): and %rdi,%r13
427b(3): xor %rbp,%r13
427e(3): add %r14,%r12
4281(3): mov %rdi,%r14
4284(4): ror $0xe,%r14
4288(5): lea 0x0(%r13,%r12,1),%r13
428d(3): and %rdx,%r15
4290(3): mov %r14,%r12
4293(3): mov %rdi,%r14
4296(4): ror $0x12,%r14
429a(3): xor %r12,%r14
429d(3): mov %rdi,%r12
42a0(4): rol $0x17,%r12
42a4(3): xor %r14,%r12
42a7(3): mov %rdx,%r14
42aa(3): add %r13,%r12
42ad(3): mov %rdx,%r13
42b0(4): ror $0x1c,%r14
42b4(4): rol $0x1e,%r13
42b8(3): add %r12,%rsi
42bb(3): xor %r14,%r13
42be(3): mov %rdx,%r14
42c1(4): rol $0x19,%r14
42c5(3): xor %r14,%r13
42c8(3): mov %rax,%r14
42cb(3): or %rdx,%r14
42ce(3): and %rcx,%r14
42d1(3): or %r15,%r14
42d4(3): add %r13,%r14
42d7(8): mov 0x128(%rsp),%r13
42df(3): add %r12,%r14
42e2(3): ror $0x1,%r13
42e5(3): mov %r13,%r12
42e8(8): mov 0x128(%rsp),%r13
42f0(4): ror $0x8,%r13
42f4(3): xor %r13,%r12
42f7(8): mov 0x128(%rsp),%r13
42ff(4): shr $0x7,%r13
4303(3): xor %r12,%r13
4306(8): mov 0x120(%rsp),%r12
430e(8): add 0x168(%rsp),%r12
4316(3): add %r12,%r13
4319(5): mov 0x40(%rsp),%r12
431e(3): mov %r12,%r15
4321(4): rol $0x3,%r12
4325(4): ror $0x13,%r15
4329(3): xor %r15,%r12
432c(5): mov 0x40(%rsp),%r15
4331(4): shr $0x6,%r15
4335(3): xor %r15,%r12
4338(5): lea 0x0(%r13,%r12,1),%r15
433d(3): mov %r8,%r13
4340(3): xor %rdi,%r13
4343(3): mov %r13,%r12
4346(5): mov %r15,0x30(%rsp)
434b(a): mov $0x6679025012923562964,%r13
4355(3): and %rsi,%r12
4358(3): mov %r12,%r15
435b(3): xor %r8,%r15
435e(5): add 0x30(%rsp),%r13
4363(3): add %r13,%rbp
4366(3): mov %rsi,%r13
4369(4): lea 0x0(%r15,%rbp,1),%r12
436d(3): mov %rsi,%rbp
4370(4): ror $0x12,%r13
4374(4): ror $0xe,%rbp
4378(3): mov %r14,%r15
437b(3): xor %rbp,%r13
437e(3): mov %rsi,%rbp
4381(4): rol $0x1e,%r15
4385(4): rol $0x17,%rbp
4389(3): xor %r13,%rbp
438c(3): mov %r14,%r13
438f(3): add %r12,%rbp
4392(4): ror $0x1c,%r13
4396(3): mov %r15,%r12
4399(3): xor %r13,%r12
439c(3): mov %r14,%r13
439f(3): mov %rdx,%r15
43a2(4): rol $0x19,%r13
43a6(3): and %r14,%r15
43a9(3): add %rbp,%rcx
43ac(3): xor %r13,%r12
43af(3): mov %rdx,%r13
43b2(3): or %r14,%r13
43b5(3): and %rax,%r13
43b8(3): or %r15,%r13
43bb(8): mov 0x130(%rsp),%r15
43c3(3): add %r12,%r13
43c6(3): add %rbp,%r13
43c9(8): mov 0x130(%rsp),%rbp
43d1(3): ror $0x1,%r15
43d4(4): ror $0x8,%rbp
43d8(3): xor %r15,%rbp
43db(8): mov 0x130(%rsp),%r15
43e3(5): mov 0x28(%rsp),%r12
43e8(4): shr $0x7,%r15
43ec(3): xor %r15,%rbp
43ef(3): mov %r12,%r15
43f2(4): rol $0x3,%r12
43f6(4): ror $0x13,%r15
43fa(8): add 0x128(%rsp),%rbp
4402(3): xor %r15,%r12
4405(5): mov 0x28(%rsp),%r15
440a(4): shr $0x6,%r15
440e(3): add %rbx,%rbp
4411(3): xor %r15,%r12
4414(3): add %r12,%rbp
4417(a): mov $0x8573033837759648693,%r12
4421(4): mov %rbp,(%rsp)
4425(3): mov %rdi,%rbp
4428(4): add (%rsp),%r12
442c(3): xor %rsi,%rbp
442f(3): and %rcx,%rbp
4432(3): mov %rbp,%r15
4435(3): xor %rdi,%r15
4438(3): add %r12,%r8
443b(4): lea 0x0(%r15,%r8,1),%rbp
443f(3): mov %rcx,%r15
4442(3): mov %rcx,%r8
4445(4): ror $0x12,%r15
4449(4): ror $0xe,%r8
444d(3): mov %r15,%r12
4450(3): mov %r13,%r15
4453(3): xor %r8,%r12
4456(3): mov %rcx,%r8
4459(4): ror $0x1c,%r15
445d(4): rol $0x17,%r8
4461(3): xor %r12,%r8
4464(3): add %rbp,%r8
4467(3): mov %r13,%rbp
446a(4): rol $0x1e,%rbp
446e(3): add %r8,%rax
4471(3): xor %r15,%rbp
4474(3): mov %r13,%r15
4477(4): rol $0x19,%r15
447b(3): xor %r15,%rbp
447e(3): mov %r14,%r15
4481(3): or %r13,%r15
4484(3): mov %r15,%r12
4487(3): mov %r14,%r15
448a(3): and %r13,%r15
448d(3): and %rdx,%r12
4490(3): or %r15,%r12
4493(3): add %rbp,%r12
4496(3): add %r8,%r12
4499(8): mov 0x138(%rsp),%r8
44a1(3): ror $0x1,%r8
44a4(3): mov %r8,%rbp
44a7(8): mov 0x138(%rsp),%r8
44af(4): ror $0x8,%r8
44b3(3): xor %rbp,%r8
44b6(8): mov 0x138(%rsp),%rbp
44be(4): shr $0x7,%rbp
44c2(3): xor %rbp,%r8
44c5(5): mov 0x30(%rsp),%rbp
44ca(8): add 0x130(%rsp),%r8
44d2(3): mov %rbp,%r15
44d5(3): add %r11,%r8
44d8(4): ror $0x13,%r15
44dc(4): rol $0x3,%rbp
44e0(3): xor %r15,%rbp
44e3(5): mov 0x30(%rsp),%r15
44e8(4): shr $0x6,%r15
44ec(3): xor %r15,%rbp
44ef(3): mov %r13,%r15
44f2(3): add %rbp,%r8
44f5(a): mov $0x-7476448914759557205,%rbp
44ff(3): and %r12,%r15
4502(5): mov %r8,0x38(%rsp)
4507(5): add 0x38(%rsp),%rbp
450c(3): mov %rsi,%r8
450f(3): xor %rcx,%r8
4512(3): and %rax,%r8
4515(3): xor %rsi,%r8
4518(3): add %rbp,%rdi
451b(3): mov %rax,%rbp
451e(4): lea 0x0(%r8,%rdi,1),%r8
4522(3): mov %rax,%rdi
4525(4): ror $0x12,%rbp
4529(4): ror $0xe,%rdi
452d(3): xor %rdi,%rbp
4530(3): mov %rax,%rdi
4533(4): rol $0x17,%rdi
4537(3): xor %rbp,%rdi
453a(3): mov %r12,%rbp
453d(3): add %r8,%rdi
4540(3): mov %r12,%r8
4543(4): ror $0x1c,%rbp
4547(4): rol $0x1e,%r8
454b(3): add %rdi,%rdx
454e(3): xor %rbp,%r8
4551(3): mov %r12,%rbp
4554(4): rol $0x19,%rbp
4558(3): xor %rbp,%r8
455b(3): mov %r13,%rbp
455e(3): or %r12,%rbp
4561(3): and %r14,%rbp
4564(3): or %r15,%rbp
4567(3): add %r8,%rbp
456a(3): add %rdi,%rbp
456d(8): mov 0x140(%rsp),%rdi
4575(3): ror $0x1,%rdi
4578(3): mov %rdi,%r8
457b(8): mov 0x140(%rsp),%rdi
4583(4): ror $0x8,%rdi
4587(3): xor %r8,%rdi
458a(8): mov 0x140(%rsp),%r8
4592(4): shr $0x7,%r8
4596(3): xor %r8,%rdi
4599(4): mov (%rsp),%r8
459d(8): add 0x138(%rsp),%rdi
45a5(3): mov %r8,%r15
45a8(4): rol $0x3,%r8
45ac(4): ror $0x13,%r15
45b0(3): add %r10,%rdi
45b3(3): xor %r15,%r8
45b6(4): mov (%rsp),%r15
45ba(4): shr $0x6,%r15
45be(3): xor %r15,%r8
45c1(3): mov %r12,%r15
45c4(3): add %r8,%rdi
45c7(a): mov $0x-6327057829258317296,%r8
45d1(3): and %rbp,%r15
45d4(5): mov %rdi,0x8(%rsp)
45d9(5): add 0x8(%rsp),%r8
45de(3): mov %rcx,%rdi
45e1(3): xor %rax,%rdi
45e4(3): and %rdx,%rdi
45e7(3): xor %rcx,%rdi
45ea(3): add %r8,%rsi
45ed(3): mov %rdx,%r8
45f0(4): lea 0x0(%rdi,%rsi,1),%rdi
45f4(3): mov %rdx,%rsi
45f7(4): ror $0x12,%r8
45fb(4): ror $0xe,%rsi
45ff(3): xor %rsi,%r8
4602(3): mov %rdx,%rsi
4605(4): rol $0x17,%rsi
4609(3): xor %r8,%rsi
460c(3): mov %rbp,%r8
460f(3): add %rdi,%rsi
4612(3): mov %rbp,%rdi
4615(4): ror $0x1c,%r8
4619(4): rol $0x1e,%rdi
461d(3): add %rsi,%r14
4620(3): xor %r8,%rdi
4623(3): mov %rbp,%r8
4626(4): rol $0x19,%r8
462a(3): xor %r8,%rdi
462d(3): mov %r12,%r8
4630(3): or %rbp,%r8
4633(3): and %r13,%r8
4636(3): or %r15,%r8
4639(3): add %rdi,%r8
463c(3): add %rsi,%r8
463f(8): mov 0x148(%rsp),%rsi
4647(3): ror $0x1,%rsi
464a(3): mov %rsi,%rdi
464d(8): mov 0x148(%rsp),%rsi
4655(4): ror $0x8,%rsi
4659(3): xor %rdi,%rsi
465c(8): mov 0x148(%rsp),%rdi
4664(4): shr $0x7,%rdi
4668(3): xor %rdi,%rsi
466b(5): mov 0x38(%rsp),%rdi
4670(8): add 0x140(%rsp),%rsi
4678(3): mov %rdi,%r15
467b(4): rol $0x3,%rdi
467f(4): ror $0x13,%r15
4683(3): add %r9,%rsi
4686(3): xor %r15,%rdi
4689(5): mov 0x38(%rsp),%r15
468e(4): shr $0x6,%r15
4692(3): xor %r15,%rdi
4695(3): mov %rbp,%r15
4698(3): add %rdi,%rsi
469b(a): mov $0x-5763719355590565569,%rdi
46a5(5): mov %rsi,0x10(%rsp)
46aa(5): add 0x10(%rsp),%rdi
46af(3): mov %rax,%rsi
46b2(3): xor %rdx,%rsi
46b5(3): and %r14,%rsi
46b8(3): xor %rax,%rsi
46bb(3): add %rdi,%rcx
46be(3): mov %r14,%rdi
46c1(4): lea 0x0(%rsi,%rcx,1),%rsi
46c5(3): mov %r14,%rcx
46c8(4): ror $0x12,%rdi
46cc(4): ror $0xe,%rcx
46d0(3): xor %rcx,%rdi
46d3(3): mov %r14,%rcx
46d6(4): rol $0x17,%rcx
46da(3): xor %rdi,%rcx
46dd(3): mov %r8,%rdi
46e0(3): add %rsi,%rcx
46e3(3): mov %r8,%rsi
46e6(4): ror $0x1c,%rdi
46ea(4): rol $0x1e,%rsi
46ee(3): add %rcx,%r13
46f1(3): xor %rdi,%rsi
46f4(3): mov %r8,%rdi
46f7(4): rol $0x19,%rdi
46fb(3): xor %rdi,%rsi
46fe(3): mov %rbp,%rdi
4701(3): or %r8,%rdi
4704(3): and %r12,%rdi
4707(3): and %r8,%r15
470a(3): or %r15,%rdi
470d(3): add %rsi,%rdi
4710(3): add %rcx,%rdi
4713(8): mov 0x150(%rsp),%rcx
471b(3): ror $0x1,%rcx
471e(3): mov %rcx,%rsi
4721(8): mov 0x150(%rsp),%rcx
4729(4): ror $0x8,%rcx
472d(3): xor %rsi,%rcx
4730(8): mov 0x150(%rsp),%rsi
4738(4): shr $0x7,%rsi
473c(3): xor %rsi,%rcx
473f(5): mov 0x8(%rsp),%rsi
4744(8): add 0x148(%rsp),%rcx
474c(5): add 0x40(%rsp),%rcx
4751(3): mov %rsi,%r15
4754(4): rol $0x3,%rsi
4758(4): ror $0x13,%r15
475c(3): xor %r15,%rsi
475f(5): mov 0x8(%rsp),%r15
4764(4): shr $0x6,%r15
4768(3): xor %r15,%rsi
476b(a): mov $0x-4658551843659510044,%r15
4775(3): add %rsi,%rcx
4778(3): mov %rcx,%rsi
477b(3): mov %rdx,%rcx
477e(3): xor %r14,%rcx
4781(3): add %rsi,%r15
4784(5): mov %rsi,0x48(%rsp)
4789(3): and %r13,%rcx
478c(3): add %r15,%rax
478f(3): mov %rdi,%r15
4792(3): xor %rdx,%rcx
4795(4): rol $0x1e,%r15
4799(4): lea 0x0(%rcx,%rax,1),%rsi
479d(3): mov %r13,%rax
47a0(4): ror $0xe,%rax
47a4(3): mov %rax,%rcx
47a7(3): mov %r13,%rax
47aa(4): ror $0x12,%rax
47ae(3): xor %rcx,%rax
47b1(3): mov %r13,%rcx
47b4(4): rol $0x17,%rcx
47b8(3): xor %rax,%rcx
47bb(3): mov %rdi,%rax
47be(3): add %rsi,%rcx
47c1(4): ror $0x1c,%rax
47c5(3): mov %r15,%rsi
47c8(3): add %rcx,%r12
47cb(3): xor %rax,%rsi
47ce(3): mov %rdi,%rax
47d1(4): rol $0x19,%rax
47d5(3): mov %r8,%r15
47d8(3): xor %rax,%rsi
47db(3): mov %r8,%rax
47de(3): and %rdi,%r15
47e1(3): or %rdi,%rax
47e4(3): and %rbp,%rax
47e7(3): or %r15,%rax
47ea(8): mov 0x158(%rsp),%r15
47f2(3): add %rsi,%rax
47f5(3): add %rcx,%rax
47f8(8): mov 0x158(%rsp),%rcx
4800(4): shr $0x7,%r15
4804(3): ror $0x1,%rcx
4807(3): mov %rcx,%rsi
480a(8): mov 0x158(%rsp),%rcx
4812(4): ror $0x8,%rcx
4816(3): xor %rsi,%rcx
4819(5): mov 0x10(%rsp),%rsi
481e(3): xor %r15,%rcx
4821(8): add 0x150(%rsp),%rcx
4829(5): add 0x28(%rsp),%rcx
482e(3): mov %rsi,%r15
4831(4): rol $0x3,%rsi
4835(4): ror $0x13,%r15
4839(3): xor %r15,%rsi
483c(5): mov 0x10(%rsp),%r15
4841(4): shr $0x6,%r15
4845(3): xor %r15,%rsi
4848(3): mov %rdi,%r15
484b(3): add %rsi,%rcx
484e(a): mov $0x-4116276920077217854,%rsi
4858(5): mov %rcx,0x18(%rsp)
485d(5): add 0x18(%rsp),%rsi
4862(3): mov %r14,%rcx
4865(3): xor %r13,%rcx
4868(3): and %r12,%rcx
486b(3): xor %r14,%rcx
486e(3): add %rsi,%rdx
4871(3): mov %r12,%rsi
4874(4): lea 0x0(%rcx,%rdx,1),%rcx
4878(3): mov %r12,%rdx
487b(4): ror $0x12,%rsi
487f(4): ror $0xe,%rdx
4883(3): xor %rdx,%rsi
4886(3): mov %r12,%rdx
4889(4): rol $0x17,%rdx
488d(3): xor %rsi,%rdx
4890(3): add %rcx,%rdx
4893(3): mov %rax,%rcx
4896(3): and %rax,%r15
4899(4): ror $0x1c,%rcx
489d(3): add %rdx,%rbp
48a0(3): mov %rcx,%rsi
48a3(3): mov %rax,%rcx
48a6(4): rol $0x1e,%rcx
48aa(3): xor %rsi,%rcx
48ad(3): mov %rax,%rsi
48b0(4): rol $0x19,%rsi
48b4(3): xor %rsi,%rcx
48b7(3): mov %rdi,%rsi
48ba(3): or %rax,%rsi
48bd(3): and %r8,%rsi
48c0(3): or %r15,%rsi
48c3(3): add %rcx,%rsi
48c6(3): add %rdx,%rsi
48c9(8): mov 0x160(%rsp),%rdx
48d1(3): ror $0x1,%rdx
48d4(3): mov %rdx,%rcx
48d7(8): mov 0x160(%rsp),%rdx
48df(4): ror $0x8,%rdx
48e3(3): xor %rcx,%rdx
48e6(8): mov 0x160(%rsp),%rcx
48ee(4): shr $0x7,%rcx
48f2(3): xor %rcx,%rdx
48f5(5): mov 0x48(%rsp),%rcx
48fa(8): add 0x158(%rsp),%rdx
4902(5): add 0x30(%rsp),%rdx
4907(3): mov %rcx,%r15
490a(4): rol $0x3,%rcx
490e(4): ror $0x13,%r15
4912(3): xor %r15,%rcx
4915(5): mov 0x48(%rsp),%r15
491a(4): shr $0x6,%r15
491e(3): xor %r15,%rcx
4921(3): add %rcx,%rdx
4924(a): mov $0x-3051310485924567259,%rcx
492e(3): mov %rdx,%r15
4931(3): mov %r13,%rdx
4934(3): xor %r12,%rdx
4937(3): add %r15,%rcx
493a(5): mov %r15,0x20(%rsp)
493f(3): and %rbp,%rdx
4942(3): add %rcx,%r14
4945(3): mov %rbp,%rcx
4948(3): xor %r13,%rdx
494b(3): mov %rax,%r15
494e(3): add %rdx,%r14
4951(3): mov %rbp,%rdx
4954(4): ror $0xe,%rdx
4958(4): ror $0x12,%rcx
495c(3): and %rsi,%r15
495f(3): xor %rdx,%rcx
4962(3): mov %rbp,%rdx
4965(4): rol $0x17,%rdx
4969(3): xor %rcx,%rdx
496c(3): add %r14,%rdx
496f(3): mov %rsi,%r14
4972(4): ror $0x1c,%r14
4976(3): add %rdx,%r8
4979(3): mov %r14,%rcx
497c(3): mov %rsi,%r14
497f(4): rol $0x1e,%r14
4983(3): xor %rcx,%r14
4986(3): mov %rsi,%rcx
4989(4): rol $0x19,%rcx
498d(3): xor %rcx,%r14
4990(3): mov %rax,%rcx
4993(3): or %rsi,%rcx
4996(3): and %rdi,%rcx
4999(3): or %r15,%rcx
499c(3): add %r14,%rcx
499f(3): add %rdx,%rcx
49a2(8): mov 0x168(%rsp),%rdx
49aa(3): ror $0x1,%rdx
49ad(3): mov %rdx,%r14
49b0(8): mov 0x168(%rsp),%rdx
49b8(4): ror $0x8,%rdx
49bc(3): xor %r14,%rdx
49bf(8): mov 0x168(%rsp),%r14
49c7(4): shr $0x7,%r14
49cb(3): xor %r14,%rdx
49ce(5): mov 0x18(%rsp),%r14
49d3(8): add 0x160(%rsp),%rdx
49db(4): add (%rsp),%rdx
49df(3): mov %r14,%r15
49e2(4): rol $0x3,%r14
49e6(4): ror $0x13,%r15
49ea(3): xor %r15,%r14
49ed(5): mov 0x18(%rsp),%r15
49f2(4): shr $0x6,%r15
49f6(3): xor %r15,%r14
49f9(3): add %r14,%rdx
49fc(3): mov %rdx,%r15
49ff(3): mov %r12,%rdx
4a02(3): xor %rbp,%rdx
4a05(5): mov %r15,0x58(%rsp)
4a0a(3): mov %rdx,%r14
4a0d(a): mov $0x489312712824947311,%rdx
4a17(3): and %r8,%r14
4a1a(3): add %r15,%rdx
4a1d(3): mov %rsi,%r15
4a20(3): add %rdx,%r13
4a23(3): mov %r8,%rdx
4a26(3): xor %r12,%r14
4a29(4): ror $0xe,%rdx
4a2d(3): add %r14,%r13
4a30(3): and %rcx,%r15
4a33(3): mov %rdx,%r14
4a36(3): mov %r8,%rdx
4a39(4): ror $0x12,%rdx
4a3d(3): xor %r14,%rdx
4a40(3): mov %r8,%r14
4a43(4): rol $0x17,%r14
4a47(3): xor %rdx,%r14
4a4a(3): mov %rcx,%rdx
4a4d(3): add %r13,%r14
4a50(4): ror $0x1c,%rdx
4a54(4): lea 0x0(%rdi,%r14,1),%r13
4a58(3): mov %rcx,%rdi
4a5b(4): rol $0x1e,%rdi
4a5f(3): xor %rdx,%rdi
4a62(3): mov %rcx,%rdx
4a65(4): rol $0x19,%rdx
4a69(3): xor %rdx,%rdi
4a6c(3): mov %rsi,%rdx
4a6f(3): or %rcx,%rdx
4a72(3): and %rax,%rdx
4a75(3): or %r15,%rdx
4a78(3): add %rdi,%rdx
4a7b(3): mov %rbx,%rdi
4a7e(3): ror $0x1,%rdi
4a81(3): add %r14,%rdx
4a84(3): mov %rdi,%r14
4a87(3): mov %rbx,%rdi
4a8a(4): ror $0x8,%rdi
4a8e(3): xor %r14,%rdi
4a91(3): mov %rbx,%r14
4a94(4): shr $0x7,%r14
4a98(3): xor %r14,%rdi
4a9b(8): add 0x168(%rsp),%rdi
4aa3(5): add 0x38(%rsp),%rdi
4aa8(5): mov 0x20(%rsp),%r14
4aad(3): mov %r14,%r15
4ab0(4): rol $0x3,%r14
4ab4(4): ror $0x13,%r15
4ab8(3): xor %r15,%r14
4abb(5): mov 0x20(%rsp),%r15
4ac0(4): shr $0x6,%r15
4ac4(3): xor %r15,%r14
4ac7(3): mov %rcx,%r15
4aca(3): add %r14,%rdi
4acd(a): mov $0x1452737877330783856,%r14
4ad7(3): and %rdx,%r15
4ada(5): mov %rdi,0x50(%rsp)
4adf(5): add 0x50(%rsp),%r14
4ae4(3): mov %rbp,%rdi
4ae7(3): xor %r8,%rdi
4aea(3): and %r13,%rdi
4aed(3): xor %rbp,%rdi
4af0(3): add %r14,%r12
4af3(4): lea 0x0(%rdi,%r12,1),%rdi
4af7(3): mov %r13,%r12
4afa(4): ror $0xe,%r12
4afe(3): mov %r12,%r14
4b01(3): mov %r13,%r12
4b04(4): ror $0x12,%r12
4b08(3): xor %r14,%r12
4b0b(3): mov %r13,%r14
4b0e(4): rol $0x17,%r14
4b12(3): xor %r14,%r12
4b15(3): add %rdi,%r12
4b18(4): lea 0x0(%rax,%r12,1),%rdi
4b1c(3): mov %rdx,%rax
4b1f(4): ror $0x1c,%rax
4b23(3): mov %rax,%r14
4b26(3): mov %rdx,%rax
4b29(4): rol $0x1e,%rax
4b2d(3): xor %r14,%rax
4b30(3): mov %rdx,%r14
4b33(4): rol $0x19,%r14
4b37(3): xor %r14,%rax
4b3a(3): mov %rcx,%r14
4b3d(3): or %rdx,%r14
4b40(3): and %rsi,%r14
4b43(3): or %r15,%r14
4b46(5): mov 0x58(%rsp),%r15
4b4b(3): add %rax,%r14
4b4e(3): mov %r11,%rax
4b51(3): ror $0x1,%rax
4b54(3): add %r14,%r12
4b57(3): mov %rax,%r14
4b5a(3): mov %r11,%rax
4b5d(4): ror $0x8,%rax
4b61(3): xor %r14,%rax
4b64(3): mov %r11,%r14
4b67(4): shr $0x7,%r14
4b6b(3): xor %r14,%rax
4b6e(3): mov %r15,%r14
4b71(3): add %rax,%rbx
4b74(3): mov %r15,%rax
4b77(5): add 0x8(%rsp),%rbx
4b7c(4): ror $0x13,%r14
4b80(4): rol $0x3,%rax
4b84(3): xor %r14,%rax
4b87(3): mov %r15,%r14
4b8a(4): shr $0x6,%r14
4b8e(3): xor %r14,%rax
4b91(3): mov %rdx,%r14
4b94(4): lea 0x0(%rbx,%rax,1),%r15
4b98(3): mov %r8,%rax
4b9b(a): mov $0x2861767655752347644,%rbx
4ba5(3): xor %r13,%rax
4ba8(3): and %r12,%r14
4bab(3): add %r15,%rbx
4bae(3): and %rdi,%rax
4bb1(3): xor %r8,%rax
4bb4(3): add %rbx,%rbp
4bb7(3): mov %rdi,%rbx
4bba(3): add %rax,%rbp
4bbd(3): mov %rdi,%rax
4bc0(4): ror $0xe,%rbx
4bc4(4): ror $0x12,%rax
4bc8(3): xor %rbx,%rax
4bcb(3): mov %rdi,%rbx
4bce(4): rol $0x17,%rbx
4bd2(3): xor %rbx,%rax
4bd5(3): mov %r12,%rbx
4bd8(3): add %rbp,%rax
4bdb(3): mov %r12,%rbp
4bde(4): rol $0x1e,%rbx
4be2(4): ror $0x1c,%rbp
4be6(3): add %rax,%rsi
4be9(3): xor %rbp,%rbx
4bec(3): mov %r12,%rbp
4bef(4): rol $0x19,%rbp
4bf3(3): xor %rbp,%rbx
4bf6(3): mov %rdx,%rbp
4bf9(3): or %r12,%rbp
4bfc(3): and %rcx,%rbp
4bff(3): or %r14,%rbp
4c02(5): mov 0x50(%rsp),%r14
4c07(3): add %rbp,%rbx
4c0a(3): mov %r10,%rbp
4c0d(3): add %rax,%rbx
4c10(3): mov %r10,%rax
4c13(3): ror $0x1,%rbp
4c16(4): ror $0x8,%rax
4c1a(3): xor %rbp,%rax
4c1d(3): mov %r10,%rbp
4c20(4): shr $0x7,%rbp
4c24(3): xor %rbp,%rax
4c27(3): mov %r14,%rbp
4c2a(3): add %rax,%r11
4c2d(3): mov %r14,%rax
4c30(5): add 0x10(%rsp),%r11
4c35(4): ror $0x13,%rbp
4c39(4): rol $0x3,%rax
4c3d(3): xor %rbp,%rax
4c40(3): mov %r14,%rbp
4c43(4): shr $0x6,%rbp
4c47(3): xor %rbp,%rax
4c4a(3): mov %r12,%rbp
4c4d(4): lea 0x0(%r11,%rax,1),%r14
4c51(3): mov %r13,%rax
4c54(a): mov $0x3322285676063803686,%r11
4c5e(3): xor %rdi,%rax
4c61(3): and %rbx,%rbp
4c64(3): add %r14,%r11
4c67(3): and %rsi,%rax
4c6a(3): xor %r13,%rax
4c6d(3): add %r11,%r8
4c70(3): mov %rsi,%r11
4c73(3): add %rax,%r8
4c76(3): mov %rsi,%rax
4c79(4): ror $0xe,%r11
4c7d(4): ror $0x12,%rax
4c81(3): xor %r11,%rax
4c84(3): mov %rsi,%r11
4c87(4): rol $0x17,%r11
4c8b(3): xor %r11,%rax
4c8e(3): mov %rbx,%r11
4c91(3): add %r8,%rax
4c94(3): mov %rbx,%r8
4c97(4): ror $0x1c,%r11
4c9b(4): rol $0x1e,%r8
4c9f(3): add %rax,%rcx
4ca2(3): xor %r11,%r8
4ca5(3): mov %rbx,%r11
4ca8(4): rol $0x19,%r11
4cac(3): xor %r11,%r8
4caf(3): mov %r12,%r11
4cb2(3): or %rbx,%r11
4cb5(3): and %rdx,%r11
4cb8(3): or %rbp,%r11
4cbb(3): add %r11,%r8
4cbe(3): mov %r9,%r11
4cc1(3): add %rax,%r8
4cc4(3): mov %r9,%rax
4cc7(3): ror $0x1,%r11
4cca(4): ror $0x8,%rax
4cce(3): mov %r8,%rbp
4cd1(3): xor %r11,%rax
4cd4(3): mov %r9,%r11
4cd7(4): rol $0x19,%rbp
4cdb(4): shr $0x7,%r11
4cdf(3): xor %r11,%rax
4ce2(3): mov %r15,%r11
4ce5(3): add %rax,%r10
4ce8(3): mov %r15,%rax
4ceb(5): add 0x48(%rsp),%r10
4cf0(4): ror $0x13,%r11
4cf4(4): rol $0x3,%rax
4cf8(3): xor %r11,%rax
4cfb(3): mov %r15,%r11
4cfe(4): shr $0x6,%r11
4d02(3): xor %r11,%rax
4d05(3): add %rax,%r10
4d08(3): mov %rdi,%rax
4d0b(3): mov %r10,%r11
4d0e(3): xor %rsi,%rax
4d11(a): mov $0x5560940570517711597,%r10
4d1b(3): add %r11,%r10
4d1e(3): and %rcx,%rax
4d21(5): mov %r11,0x60(%rsp)
4d26(3): xor %rdi,%rax
4d29(3): add %r10,%r13
4d2c(3): mov %rcx,%r10
4d2f(3): add %rax,%r13
4d32(3): mov %rcx,%rax
4d35(4): ror $0xe,%r10
4d39(4): ror $0x12,%rax
4d3d(3): xor %r10,%rax
4d40(3): mov %rcx,%r10
4d43(4): rol $0x17,%r10
4d47(3): xor %r10,%rax
4d4a(3): mov %r8,%r10
4d4d(4): ror $0x1c,%r10
4d51(3): add %r13,%rax
4d54(5): mov 0x40(%rsp),%r13
4d59(3): mov %r10,%r11
4d5c(3): mov %r8,%r10
4d5f(3): add %rax,%rdx
4d62(4): rol $0x1e,%r10
4d66(3): xor %r11,%r10
4d69(3): xor %rbp,%r10
4d6c(3): mov %rbx,%rbp
4d6f(3): or %r8,%rbp
4d72(3): mov %rbp,%r11
4d75(3): mov %rbx,%rbp
4d78(3): and %r8,%rbp
4d7b(3): and %r12,%r11
4d7e(3): or %rbp,%r11
4d81(3): mov %r14,%rbp
4d84(3): add %r11,%r10
4d87(3): mov %r13,%r11
4d8a(4): shr $0x6,%rbp
4d8e(3): add %rax,%r10
4d91(3): mov %r13,%rax
4d94(3): ror $0x1,%r11
4d97(4): ror $0x8,%rax
4d9b(3): xor %r11,%rax
4d9e(3): mov %r13,%r11
4da1(4): shr $0x7,%r11
4da5(3): xor %r11,%rax
4da8(3): add %rax,%r9
4dab(3): mov %r14,%rax
4dae(5): add 0x18(%rsp),%r9
4db3(4): ror $0x13,%rax
4db7(3): mov %rax,%r11
4dba(3): mov %r14,%rax
4dbd(4): rol $0x3,%rax
4dc1(3): xor %r11,%rax
4dc4(3): xor %rbp,%rax
4dc7(3): add %rax,%r9
4dca(3): mov %r9,%rbp
4dcd(3): mov %rsi,%r9
4dd0(3): xor %rcx,%r9
4dd3(5): mov %rbp,0x40(%rsp)
4dd8(3): mov %r9,%rax
4ddb(a): mov $0x5996557281743188959,%r9
4de5(3): add %rbp,%r9
4de8(3): and %rdx,%rax
4deb(3): mov %r8,%rbp
4dee(3): xor %rsi,%rax
4df1(3): add %r9,%rdi
4df4(3): mov %rdx,%r9
4df7(3): add %rax,%rdi
4dfa(3): mov %rdx,%rax
4dfd(4): ror $0xe,%r9
4e01(4): ror $0x12,%rax
4e05(3): xor %r9,%rax
4e08(3): mov %rdx,%r9
4e0b(4): rol $0x17,%r9
4e0f(3): xor %r9,%rax
4e12(3): add %rdi,%rax
4e15(3): mov %r10,%rdi
4e18(4): ror $0x1c,%rdi
4e1c(4): lea 0x0(%r12,%rax,1),%r9
4e20(5): mov 0x28(%rsp),%r12
4e25(3): mov %rdi,%r11
4e28(3): mov %r10,%rdi
4e2b(4): rol $0x1e,%rdi
4e2f(3): and %r10,%rbp
4e32(3): xor %r11,%rdi
4e35(3): mov %r10,%r11
4e38(4): rol $0x19,%r11
4e3c(3): xor %r11,%rdi
4e3f(3): mov %r8,%r11
4e42(3): or %r10,%r11
4e45(3): and %rbx,%r11
4e48(3): or %rbp,%r11
4e4b(3): add %r11,%rdi
4e4e(3): mov %r12,%r11
4e51(3): add %rax,%rdi
4e54(3): mov %r12,%rax
4e57(3): ror $0x1,%r11
4e5a(4): ror $0x8,%rax
4e5e(3): xor %r11,%rax
4e61(3): mov %r12,%r11
4e64(4): shr $0x7,%r11
4e68(3): xor %r11,%rax
4e6b(3): add %r13,%rax
4e6e(5): mov 0x60(%rsp),%r13
4e73(5): add 0x20(%rsp),%rax
4e78(3): mov %r13,%rbp
4e7b(3): mov %r13,%r11
4e7e(4): ror $0x13,%rbp
4e82(4): rol $0x3,%r11
4e86(3): xor %rbp,%r11
4e89(3): mov %r13,%rbp
4e8c(4): shr $0x6,%rbp
4e90(3): xor %rbp,%r11
4e93(3): mov %r10,%rbp
4e96(3): add %r11,%rax
4e99(a): mov $0x7280758554555802590,%r11
4ea3(3): mov %rax,%r13
4ea6(3): mov %rcx,%rax
4ea9(3): xor %rdx,%rax
4eac(3): add %r13,%r11
4eaf(5): mov %r13,0x28(%rsp)
4eb4(3): and %r9,%rax
4eb7(3): add %r11,%rsi
4eba(3): mov %r9,%r11
4ebd(3): xor %rcx,%rax
4ec0(4): ror $0xe,%r11
4ec4(5): mov 0x30(%rsp),%r13
4ec9(3): add %rax,%rsi
4ecc(3): mov %r9,%rax
4ecf(4): ror $0x12,%rax
4ed3(3): xor %r11,%rax
4ed6(3): mov %r9,%r11
4ed9(4): rol $0x17,%r11
4edd(3): and %rdi,%rbp
4ee0(3): xor %r11,%rax
4ee3(3): mov %rdi,%r11
4ee6(3): add %rsi,%rax
4ee9(3): mov %rdi,%rsi
4eec(4): ror $0x1c,%r11
4ef0(4): rol $0x1e,%rsi
4ef4(3): add %rax,%rbx
4ef7(3): xor %r11,%rsi
4efa(3): mov %rdi,%r11
4efd(4): rol $0x19,%r11
4f01(3): xor %r11,%rsi
4f04(3): mov %r10,%r11
4f07(3): or %rdi,%r11
4f0a(3): and %r8,%r11
4f0d(3): or %rbp,%r11
4f10(3): add %r11,%rsi
4f13(3): mov %r13,%r11
4f16(3): add %rax,%rsi
4f19(3): mov %r13,%rax
4f1c(3): ror $0x1,%r11
4f1f(4): ror $0x8,%rax
4f23(3): xor %r11,%rax
4f26(3): mov %r13,%r11
4f29(4): shr $0x7,%r11
4f2d(3): xor %r11,%rax
4f30(3): add %r12,%rax
4f33(5): mov 0x40(%rsp),%r12
4f38(5): add 0x58(%rsp),%rax
4f3d(3): mov %r12,%r11
4f40(4): ror $0x13,%r11
4f44(3): mov %r11,%rbp
4f47(3): mov %r12,%r11
4f4a(4): shr $0x6,%r12
4f4e(4): rol $0x3,%r11
4f52(3): xor %rbp,%r11
4f55(3): mov %rdi,%rbp
4f58(3): xor %r12,%r11
4f5b(3): add %r11,%rax
4f5e(a): mov $0x8532644243296465576,%r11
4f68(3): mov %rax,%r12
4f6b(3): mov %rdx,%rax
4f6e(3): xor %r9,%rax
4f71(3): add %r12,%r11
4f74(5): mov %r12,0x30(%rsp)
4f79(3): and %rbx,%rax
4f7c(3): xor %rdx,%rax
4f7f(3): add %r11,%rcx
4f82(3): mov %rbx,%r11
4f85(3): add %rax,%rcx
4f88(3): mov %rbx,%rax
4f8b(4): ror $0xe,%r11
4f8f(4): ror $0x12,%rax
4f93(3): and %rsi,%rbp
4f96(3): xor %r11,%rax
4f99(3): mov %rbx,%r11
4f9c(4): rol $0x17,%r11
4fa0(3): xor %r11,%rax
4fa3(3): add %rcx,%rax
4fa6(3): mov %rsi,%rcx
4fa9(4): ror $0x1c,%rcx
4fad(4): lea 0x0(%r8,%rax,1),%r11
4fb1(3): mov %rcx,%r8
4fb4(3): mov %rsi,%rcx
4fb7(4): rol $0x1e,%rcx
4fbb(3): xor %r8,%rcx
4fbe(3): mov %rsi,%r8
4fc1(4): rol $0x19,%r8
4fc5(3): xor %r8,%rcx
4fc8(3): mov %rdi,%r8
4fcb(3): or %rsi,%r8
4fce(3): and %r10,%r8
4fd1(3): or %rbp,%r8
4fd4(5): mov 0x28(%rsp),%rbp
4fd9(3): add %r8,%rcx
4fdc(4): mov (%rsp),%r8
4fe0(3): add %rax,%rcx
4fe3(3): mov %r8,%r12
4fe6(3): mov %r8,%rax
4fe9(3): ror $0x1,%rax
4fec(4): ror $0x8,%r12
4ff0(3): xor %rax,%r12
4ff3(3): mov %r8,%rax
4ff6(3): mov %rbp,%r8
4ff9(4): shr $0x7,%rax
4ffd(4): ror $0x13,%r8
5001(3): xor %rax,%r12
5004(3): mov %rbp,%rax
5007(3): add %r13,%r12
500a(4): rol $0x3,%rax
500e(5): add 0x50(%rsp),%r12
5013(3): xor %r8,%rax
5016(3): mov %rbp,%r8
5019(3): mov %rsi,%rbp
501c(4): shr $0x6,%r8
5020(3): xor %r8,%rax
5023(a): mov $0x-9096487096722542874,%r8
502d(4): lea 0x0(%r12,%rax,1),%r13
5031(3): mov %r9,%rax
5034(3): xor %rbx,%rax
5037(3): and %r11,%rax
503a(3): add %r13,%r8
503d(5): mov %r13,0x68(%rsp)
5042(3): xor %r9,%rax
5045(3): add %r8,%rdx
5048(3): mov %r11,%r8
504b(3): add %rax,%rdx
504e(3): mov %r11,%rax
5051(4): ror $0xe,%r8
5055(4): ror $0x12,%rax
5059(5): mov 0x38(%rsp),%r13
505e(3): and %rcx,%rbp
5061(3): xor %r8,%rax
5064(3): mov %r11,%r8
5067(4): rol $0x17,%r8
506b(3): xor %r8,%rax
506e(3): mov %r13,%r12
5071(3): add %rdx,%rax
5074(3): mov %rcx,%rdx
5077(4): ror $0x8,%r12
507b(4): ror $0x1c,%rdx
507f(3): add %rax,%r10
5082(3): mov %rdx,%r8
5085(3): mov %rcx,%rdx
5088(4): rol $0x1e,%rdx
508c(3): xor %r8,%rdx
508f(3): mov %rcx,%r8
5092(4): rol $0x19,%r8
5096(3): xor %r8,%rdx
5099(3): mov %rsi,%r8
509c(3): or %rcx,%r8
509f(3): and %rdi,%r8
50a2(3): or %rbp,%r8
50a5(3): mov %r13,%rbp
50a8(3): ror $0x1,%rbp
50ab(3): add %r8,%rdx
50ae(3): xor %rbp,%r12
50b1(3): mov %r13,%rbp
50b4(3): add %rax,%rdx
50b7(4): shr $0x7,%rbp
50bb(3): xor %rbp,%r12
50be(5): mov 0x30(%rsp),%rbp
50c3(4): add (%rsp),%r12
50c7(3): mov %rbp,%r8
50ca(3): mov %rbp,%rax
50cd(4): ror $0x13,%r8
50d1(4): rol $0x3,%rax
50d5(3): add %r15,%r12
50d8(3): xor %r8,%rax
50db(3): mov %rbp,%r8
50de(4): shr $0x6,%r8
50e2(3): xor %r8,%rax
50e5(3): add %r12,%rax
50e8(a): mov $0x-7894198246740708037,%r12
50f2(3): mov %rax,%r8
50f5(3): mov %rbx,%rax
50f8(3): xor %r11,%rax
50fb(3): add %r8,%r12
50fe(5): mov %r8,0x38(%rsp)
5103(3): and %r10,%rax
5106(3): add %r12,%r9
5109(3): mov %r10,%r12
510c(3): xor %rbx,%rax
510f(4): rol $0x17,%r12
5113(3): add %rax,%r9
5116(3): mov %r10,%rax
5119(4): ror $0xe,%rax
511d(3): mov %rax,%r8
5120(3): mov %r10,%rax
5123(4): ror $0x12,%rax
5127(3): xor %r8,%rax
512a(3): xor %r12,%rax
512d(3): mov %rdx,%r12
5130(3): add %r9,%rax
5133(4): rol $0x1e,%r12
5137(4): lea 0x0(%rdi,%rax,1),%r9
513b(3): mov %rdx,%rdi
513e(3): mov %r12,%r8
5141(4): ror $0x1c,%rdi
5145(3): mov %rcx,%r12
5148(3): xor %rdi,%r8
514b(3): mov %rdx,%rdi
514e(3): and %rdx,%r12
5151(4): rol $0x19,%rdi
5155(3): xor %rdi,%r8
5158(3): mov %rcx,%rdi
515b(3): or %rdx,%rdi
515e(3): and %rsi,%rdi
5161(3): or %r12,%rdi
5164(3): add %r8,%rdi
5167(4): lea 0x0(%rdi,%rax,1),%r12
516b(5): mov 0x8(%rsp),%rdi
5170(3): mov %rdi,%rax
5173(3): mov %rdi,%rbp
5176(3): ror $0x1,%rax
5179(4): ror $0x8,%rbp
517d(3): xor %rax,%rbp
5180(3): mov %rdi,%rax
5183(4): shr $0x7,%rax
5187(3): xor %rax,%rbp
518a(3): add %r13,%rbp
518d(5): mov 0x68(%rsp),%r13
5192(3): add %r14,%rbp
5195(3): mov %r13,%rdi
5198(3): mov %r13,%rax
519b(4): ror $0x13,%rdi
519f(4): rol $0x3,%rax
51a3(3): xor %rdi,%rax
51a6(3): mov %r13,%rdi
51a9(4): shr $0x6,%rdi
51ad(3): xor %rdi,%rax
51b0(a): mov $0x-6719396339535248540,%rdi
51ba(5): lea 0x0(%rbp,%rax,1),%r13
51bf(3): mov %r11,%rax
51c2(3): xor %r10,%rax
51c5(3): add %r13,%rdi
51c8(3): and %r9,%rax
51cb(4): mov %r13,(%rsp)
51cf(3): xor %r11,%rax
51d2(3): add %rdi,%rbx
51d5(3): mov %r9,%rdi
51d8(3): add %rax,%rbx
51db(3): mov %r9,%rax
51de(4): ror $0xe,%rdi
51e2(4): ror $0x12,%rax
51e6(3): mov %rdx,%r13
51e9(3): xor %rdi,%rax
51ec(3): mov %r9,%rdi
51ef(3): and %r12,%r13
51f2(4): rol $0x17,%rdi
51f6(3): xor %rdi,%rax
51f9(3): mov %r12,%rdi
51fc(3): add %rbx,%rax
51ff(4): rol $0x1e,%rdi
5203(4): lea 0x0(%rsi,%rax,1),%rbx
5207(3): mov %r12,%rsi
520a(4): ror $0x1c,%rsi
520e(3): xor %rsi,%rdi
5211(3): mov %r12,%rsi
5214(4): rol $0x19,%rsi
5218(3): xor %rsi,%rdi
521b(3): mov %rdx,%rsi
521e(3): or %r12,%rsi
5221(3): and %rcx,%rsi
5224(3): or %r13,%rsi
5227(3): add %rdi,%rsi
522a(5): mov 0x38(%rsp),%rdi
522f(4): lea 0x0(%rsi,%rax,1),%rbp
5233(5): mov 0x10(%rsp),%rsi
5238(3): mov %rsi,%r8
523b(3): mov %rsi,%r13
523e(3): ror $0x1,%r8
5241(4): shr $0x7,%r13
5245(3): mov %r8,%rax
5248(3): mov %rsi,%r8
524b(3): mov %rdi,%rsi
524e(4): ror $0x8,%r8
5252(3): xor %rax,%r8
5255(3): mov %rdi,%rax
5258(3): xor %r13,%r8
525b(5): add 0x8(%rsp),%r8
5260(4): ror $0x13,%rsi
5264(5): add 0x60(%rsp),%r8
5269(4): rol $0x3,%rax
526d(3): xor %rsi,%rax
5270(3): mov %rdi,%rsi
5273(4): shr $0x6,%rsi
5277(3): xor %rsi,%rax
527a(a): mov $0x-6333637450476146687,%rsi
5284(3): add %r8,%rax
5287(3): mov %rax,%rdi
528a(3): mov %r10,%rax
528d(3): add %rdi,%rsi
5290(3): xor %r9,%rax
5293(5): mov %rdi,0x70(%rsp)
5298(3): and %rbx,%rax
529b(4): lea 0x0(%rsi,%r11,1),%r8
529f(3): mov %r12,%rdi
52a2(3): xor %r10,%rax
52a5(3): and %rbp,%rdi
52a8(3): add %rax,%r8
52ab(3): mov %rbx,%rax
52ae(4): ror $0xe,%rax
52b2(3): mov %rax,%rsi
52b5(3): mov %rbx,%rax
52b8(4): ror $0x12,%rax
52bc(3): xor %rsi,%rax
52bf(3): mov %rbx,%rsi
52c2(4): rol $0x17,%rsi
52c6(3): xor %rsi,%rax
52c9(3): mov %rbp,%rsi
52cc(3): add %r8,%rax
52cf(4): rol $0x1e,%rsi
52d3(5): mov 0x48(%rsp),%r8
52d8(4): lea 0x0(%rcx,%rax,1),%r11
52dc(3): mov %rbp,%rcx
52df(4): ror $0x1c,%rcx
52e3(3): xor %rcx,%rsi
52e6(3): mov %rbp,%rcx
52e9(4): rol $0x19,%rcx
52ed(3): xor %rcx,%rsi
52f0(3): mov %r12,%rcx
52f3(3): or %rbp,%rcx
52f6(3): and %rdx,%rcx
52f9(3): or %rdi,%rcx
52fc(3): mov %r8,%rdi
52ff(3): add %rsi,%rcx
5302(4): ror $0x8,%rdi
5306(4): mov (%rsp),%rsi
530a(4): lea 0x0(%rcx,%rax,1),%r13
530e(3): mov %r8,%rax
5311(3): ror $0x1,%rax
5314(3): xor %rax,%rdi
5317(3): mov %r8,%rax
531a(3): mov %rsi,%rcx
531d(4): shr $0x7,%rax
5321(4): ror $0x13,%rcx
5325(3): xor %rax,%rdi
5328(3): mov %rsi,%rax
532b(5): add 0x10(%rsp),%rdi
5330(5): add 0x40(%rsp),%rdi
5335(4): rol $0x3,%rax
5339(3): xor %rcx,%rax
533c(3): mov %rsi,%rcx
533f(4): shr $0x6,%rcx
5343(3): xor %rcx,%rax
5346(a): mov $0x-4446306890439682159,%rcx
5350(3): add %rdi,%rax
5353(5): mov 0x18(%rsp),%rdi
5358(3): mov %rax,%rsi
535b(3): mov %r9,%rax
535e(3): xor %rbx,%rax
5361(3): add %rsi,%rcx
5364(5): mov %rsi,0x10(%rsp)
5369(3): and %r11,%rax
536c(3): add %rcx,%r10
536f(3): xor %r9,%rax
5372(3): add %rax,%r10
5375(3): mov %r11,%rax
5378(4): ror $0xe,%rax
537c(3): mov %rax,%rcx
537f(3): mov %r11,%rax
5382(4): ror $0x12,%rax
5386(3): xor %rcx,%rax
5389(3): mov %r11,%rcx
538c(4): rol $0x17,%rcx
5390(3): xor %rcx,%rax
5393(3): add %r10,%rax
5396(3): mov %r13,%r10
5399(4): ror $0x1c,%r10
539d(3): add %rax,%rdx
53a0(3): mov %r10,%rsi
53a3(3): mov %r13,%r10
53a6(4): rol $0x1e,%r10
53aa(3): mov %r10,%rcx
53ad(3): mov %r13,%r10
53b0(3): xor %rsi,%rcx
53b3(4): rol $0x19,%r10
53b7(3): xor %r10,%rcx
53ba(3): mov %rbp,%r10
53bd(3): or %r13,%r10
53c0(3): mov %r10,%rsi
53c3(3): mov %rbp,%r10
53c6(3): and %r13,%r10
53c9(3): and %r12,%rsi
53cc(3): or %r10,%rsi
53cf(3): add %rcx,%rsi
53d2(4): lea 0x0(%rsi,%rax,1),%r10
53d6(3): mov %rdi,%rax
53d9(3): mov %rdi,%rsi
53dc(3): ror $0x1,%rax
53df(4): ror $0x8,%rsi
53e3(3): xor %rax,%rsi
53e6(3): mov %rdi,%rax
53e9(4): shr $0x7,%rax
53ed(3): xor %rax,%rsi
53f0(3): add %r8,%rsi
53f3(5): mov 0x70(%rsp),%r8
53f8(5): add 0x28(%rsp),%rsi
53fd(3): mov %r8,%rcx
5400(3): mov %r8,%rax
5403(4): ror $0x13,%rcx
5407(4): rol $0x3,%rax
540b(3): xor %rcx,%rax
540e(3): mov %r8,%rcx
5411(4): shr $0x6,%rcx
5415(3): xor %rcx,%rax
5418(a): mov $0x-4076793802049405392,%rcx
5422(3): add %rsi,%rax
5425(3): mov %rax,%r8
5428(3): mov %rbx,%rax
542b(3): add %r8,%rcx
542e(3): xor %r11,%rax
5431(5): mov %r8,0x48(%rsp)
5436(4): lea 0x0(%rcx,%r9,1),%rdi
543a(3): mov %rdx,%r9
543d(3): and %rdx,%rax
5440(4): ror $0xe,%r9
5444(3): xor %rbx,%rax
5447(3): mov %r9,%rcx
544a(3): mov %rdx,%r9
544d(3): add %rax,%rdi
5450(4): ror $0x12,%r9
5454(3): mov %r9,%rax
5457(3): mov %rdx,%r9
545a(3): xor %rcx,%rax
545d(4): rol $0x17,%r9
5461(3): xor %r9,%rax
5464(3): mov %r10,%r9
5467(4): ror $0x1c,%r9
546b(3): add %rdi,%rax
546e(3): mov %r9,%rcx
5471(3): mov %r10,%r9
5474(3): add %rax,%r12
5477(4): rol $0x1e,%r9
547b(3): mov %r9,%rsi
547e(3): mov %r10,%r9
5481(3): xor %rcx,%rsi
5484(4): rol $0x19,%r9
5488(3): xor %r9,%rsi
548b(3): mov %r13,%r9
548e(3): or %r10,%r9
5491(3): mov %r9,%rcx
5494(3): mov %r13,%r9
5497(3): and %r10,%r9
549a(3): and %rbp,%rcx
549d(3): or %r9,%rcx
54a0(3): add %rsi,%rcx
54a3(4): lea 0x0(%rcx,%rax,1),%r8
54a7(5): mov 0x20(%rsp),%rcx
54ac(3): mov %rcx,%rsi
54af(3): mov %rcx,%r9
54b2(3): ror $0x1,%rsi
54b5(4): shr $0x7,%r9
54b9(3): mov %rsi,%rax
54bc(3): mov %rcx,%rsi
54bf(4): ror $0x8,%rsi
54c3(3): xor %rax,%rsi
54c6(3): xor %r9,%rsi
54c9(5): mov 0x10(%rsp),%r9
54ce(5): add 0x18(%rsp),%rsi
54d3(5): add 0x30(%rsp),%rsi
54d8(3): mov %r9,%rax
54db(4): ror $0x13,%rax
54df(3): mov %rax,%rcx
54e2(3): mov %r9,%rax
54e5(4): shr $0x6,%r9
54e9(4): rol $0x3,%rax
54ed(3): xor %rcx,%rax
54f0(a): mov $0x-3345356375505022440,%rcx
54fa(3): xor %r9,%rax
54fd(3): mov %r10,%r9
5500(4): lea 0x0(%rsi,%rax,1),%rdi
5504(3): mov %r11,%rax
5507(3): xor %rdx,%rax
550a(3): add %rdi,%rcx
550d(3): and %r12,%rax
5510(5): mov %rdi,0x78(%rsp)
5515(4): lea 0x0(%rcx,%rbx,1),%rsi
5519(3): xor %r11,%rax
551c(5): mov 0x58(%rsp),%rbx
5521(3): add %rax,%rsi
5524(3): mov %r12,%rax
5527(4): ror $0xe,%rax
552b(3): mov %rbx,%rdi
552e(3): mov %rax,%rcx
5531(3): mov %r12,%rax
5534(4): ror $0x12,%rax
5538(3): xor %rcx,%rax
553b(3): mov %r12,%rcx
553e(4): rol $0x17,%rcx
5542(3): xor %rcx,%rax
5545(3): mov %r8,%rcx
5548(3): add %rsi,%rax
554b(3): mov %r8,%rsi
554e(4): rol $0x1e,%rcx
5552(4): ror $0x1c,%rsi
5556(3): add %rax,%rbp
5559(3): xor %rsi,%rcx
555c(3): mov %r8,%rsi
555f(4): rol $0x19,%rsi
5563(3): and %r8,%r9
5566(4): ror $0x8,%rdi
556a(3): xor %rsi,%rcx
556d(3): mov %r10,%rsi
5570(3): or %r8,%rsi
5573(3): and %r13,%rsi
5576(3): or %r9,%rsi
5579(3): add %rcx,%rsi
557c(3): mov %rdi,%rcx
557f(5): mov 0x48(%rsp),%rdi
5584(4): lea 0x0(%rsi,%rax,1),%r9
5588(3): mov %rbx,%rax
558b(3): ror $0x1,%rax
558e(3): xor %rax,%rcx
5591(3): mov %rbx,%rax
5594(3): mov %rdi,%rsi
5597(4): shr $0x7,%rax
559b(4): ror $0x13,%rsi
559f(3): xor %rax,%rcx
55a2(3): mov %rdi,%rax
55a5(5): add 0x20(%rsp),%rcx
55aa(5): add 0x68(%rsp),%rcx
55af(4): rol $0x3,%rax
55b3(3): xor %rsi,%rax
55b6(3): mov %rdi,%rsi
55b9(4): shr $0x6,%rsi
55bd(3): xor %rsi,%rax
55c0(3): add %rcx,%rax
55c3(a): mov $0x-2983346525034927856,%rcx
55cd(3): mov %rax,%rsi
55d0(3): mov %rdx,%rax
55d3(3): xor %r12,%rax
55d6(3): add %rsi,%rcx
55d9(5): mov %rsi,0x58(%rsp)
55de(3): and %rbp,%rax
55e1(3): add %r11,%rcx
55e4(3): mov %rbp,%r11
55e7(3): xor %rdx,%rax
55ea(4): rol $0x17,%r11
55ee(3): add %rax,%rcx
55f1(3): mov %rbp,%rax
55f4(4): ror $0xe,%rax
55f8(3): mov %rax,%rsi
55fb(3): mov %rbp,%rax
55fe(4): ror $0x12,%rax
5602(3): xor %rsi,%rax
5605(3): xor %r11,%rax
5608(3): mov %r9,%r11
560b(3): add %rcx,%rax
560e(3): mov %r9,%rcx
5611(3): add %rax,%r13
5614(4): rol $0x1e,%r11
5618(4): ror $0x1c,%rcx
561c(3): mov %r11,%rdi
561f(3): mov %r8,%r11
5622(3): xor %rcx,%rdi
5625(3): mov %r9,%rcx
5628(3): and %r9,%r11
562b(4): rol $0x19,%rcx
562f(3): xor %rcx,%rdi
5632(3): mov %r8,%rcx
5635(3): or %r9,%rcx
5638(3): and %r10,%rcx
563b(3): or %r11,%rcx
563e(5): mov 0x50(%rsp),%r11
5643(3): add %rcx,%rdi
5646(3): add %rax,%rdi
5649(3): mov %r11,%rcx
564c(3): mov %r11,%rax
564f(3): ror $0x1,%rcx
5652(4): ror $0x8,%rax
5656(3): xor %rcx,%rax
5659(3): mov %r11,%rcx
565c(4): shr $0x7,%rcx
5660(3): xor %rcx,%rax
5663(3): add %rbx,%rax
5666(5): mov 0x78(%rsp),%rbx
566b(5): add 0x38(%rsp),%rax
5670(3): mov %rbx,%rsi
5673(3): mov %rbx,%rcx
5676(4): shr $0x6,%rbx
567a(4): ror $0x13,%rsi
567e(4): rol $0x3,%rcx
5682(3): xor %rsi,%rcx
5685(3): mov %r9,%rsi
5688(3): xor %rbx,%rcx
568b(3): add %rcx,%rax
568e(a): mov $0x-860691631967231958,%rcx
5698(3): mov %rax,%rbx
569b(3): mov %r12,%rax
569e(3): xor %rbp,%rax
56a1(3): add %rbx,%rcx
56a4(8): mov %rbx,0xc8(%rsp)
56ac(3): and %r13,%rax
56af(3): add %rcx,%rdx
56b2(3): xor %r12,%rax
56b5(3): add %rax,%rdx
56b8(3): mov %r13,%rax
56bb(4): ror $0xe,%rax
56bf(3): mov %rax,%rcx
56c2(3): mov %r13,%rax
56c5(4): ror $0x12,%rax
56c9(3): and %rdi,%rsi
56cc(3): xor %rcx,%rax
56cf(3): mov %r13,%rcx
56d2(4): rol $0x17,%rcx
56d6(3): xor %rcx,%rax
56d9(3): add %rdx,%rax
56dc(3): mov %rdi,%rdx
56df(4): ror $0x1c,%rdx
56e3(3): add %rax,%r10
56e6(3): mov %rdx,%rcx
56e9(3): mov %rdi,%rdx
56ec(4): rol $0x1e,%rdx
56f0(3): xor %rcx,%rdx
56f3(3): mov %rdi,%rcx
56f6(4): rol $0x19,%rcx
56fa(3): xor %rcx,%rdx
56fd(3): mov %r9,%rcx
5700(3): or %rdi,%rcx
5703(3): and %r8,%rcx
5706(3): or %rsi,%rcx
5709(3): add %rcx,%rdx
570c(3): add %rax,%rdx
570f(3): mov %r15,%rax
5712(3): ror $0x1,%rax
5715(3): mov %rax,%rcx
5718(3): mov %r15,%rax
571b(4): ror $0x8,%rax
571f(3): xor %rcx,%rax
5722(3): mov %r15,%rcx
5725(4): shr $0x7,%rcx
5729(3): xor %rcx,%rax
572c(3): add %r11,%rax
572f(5): mov 0x58(%rsp),%r11
5734(4): add (%rsp),%rax
5738(3): mov %r11,%rcx
573b(4): ror $0x13,%rcx
573f(3): mov %rcx,%rsi
5742(3): mov %r11,%rcx
5745(4): shr $0x6,%r11
5749(4): rol $0x3,%rcx
574d(3): xor %rsi,%rcx
5750(3): xor %r11,%rcx
5753(3): add %rcx,%rax
5756(a): mov $0x1182934255886127544,%rcx
5760(3): mov %rax,%r11
5763(3): mov %rbp,%rax
5766(3): xor %r13,%rax
5769(5): mov %r11,0x50(%rsp)
576e(3): and %r10,%rax
5771(3): xor %rbp,%rax
5774(3): add %r11,%rcx
5777(3): mov %rdi,%r11
577a(3): add %rcx,%r12
577d(3): mov %r10,%rcx
5780(3): and %rdx,%r11
5783(3): add %rax,%r12
5786(3): mov %r10,%rax
5789(4): ror $0xe,%rcx
578d(4): ror $0x12,%rax
5791(3): xor %rcx,%rax
5794(3): mov %r10,%rcx
5797(4): rol $0x17,%rcx
579b(3): xor %rcx,%rax
579e(3): mov %rdx,%rcx
57a1(4): ror $0x1c,%rcx
57a5(3): add %r12,%rax
57a8(3): mov %rcx,%rsi
57ab(3): mov %rdx,%rcx
57ae(3): add %rax,%r8
57b1(4): rol $0x1e,%rcx
57b5(3): xor %rsi,%rcx
57b8(3): mov %rdx,%rsi
57bb(4): rol $0x19,%rsi
57bf(3): xor %rsi,%rcx
57c2(3): mov %rdi,%rsi
57c5(3): or %rdx,%rsi
57c8(3): and %r9,%rsi
57cb(3): or %r11,%rsi
57ce(3): mov %rbx,%r11
57d1(3): add %rsi,%rcx
57d4(4): ror $0x13,%r11
57d8(3): add %rax,%rcx
57db(3): mov %r14,%rax
57de(3): ror $0x1,%rax
57e1(3): mov %rax,%rsi
57e4(3): mov %r14,%rax
57e7(4): ror $0x8,%rax
57eb(3): xor %rsi,%rax
57ee(3): mov %r14,%rsi
57f1(4): shr $0x7,%rsi
57f5(3): xor %rsi,%rax
57f8(3): mov %rbx,%rsi
57fb(3): add %r15,%rax
57fe(4): rol $0x3,%rsi
5802(5): add 0x70(%rsp),%rax
5807(3): xor %r11,%rsi
580a(3): mov %rbx,%r11
580d(5): mov 0x60(%rsp),%r12
5812(4): shr $0x6,%r11
5816(3): xor %r11,%rsi
5819(4): lea 0x0(%rax,%rsi,1),%r15
581d(3): mov %r13,%rax
5820(a): mov $0x1847814050463011016,%rsi
582a(3): xor %r10,%rax
582d(3): add %r15,%rsi
5830(3): and %r8,%rax
5833(3): xor %r13,%rax
5836(3): add %rsi,%rbp
5839(3): add %rax,%rbp
583c(3): mov %r8,%rax
583f(4): ror $0xe,%rax
5843(3): mov %rax,%rsi
5846(3): mov %r8,%rax
5849(4): ror $0x12,%rax
584d(3): xor %rsi,%rax
5850(3): mov %r8,%rsi
5853(4): rol $0x17,%rsi
5857(3): xor %rsi,%rax
585a(3): mov %rcx,%rsi
585d(4): ror $0x1c,%rsi
5861(3): add %rbp,%rax
5864(3): mov %rcx,%rbp
5867(3): mov %rsi,%r11
586a(3): mov %rcx,%rsi
586d(4): rol $0x19,%rbp
5871(4): rol $0x1e,%rsi
5875(3): add %rax,%r9
5878(3): xor %r11,%rsi
587b(3): xor %rbp,%rsi
587e(3): mov %rdx,%rbp
5881(3): or %rcx,%rbp
5884(3): mov %rbp,%r11
5887(3): mov %rdx,%rbp
588a(3): and %rcx,%rbp
588d(3): and %rdi,%r11
5890(3): or %rbp,%r11
5893(5): mov 0x50(%rsp),%rbp
5898(3): add %r11,%rsi
589b(3): mov %r12,%r11
589e(3): add %rax,%rsi
58a1(3): mov %r12,%rax
58a4(3): ror $0x1,%r11
58a7(4): ror $0x8,%rax
58ab(3): mov %rbp,%rbx
58ae(3): xor %r11,%rax
58b1(3): mov %r12,%r11
58b4(4): shr $0x7,%r11
58b8(3): xor %r11,%rax
58bb(3): mov %rbp,%r11
58be(3): add %r14,%rax
58c1(5): add 0x10(%rsp),%rax
58c6(4): ror $0x13,%rbx
58ca(4): rol $0x3,%r11
58ce(5): mov 0x40(%rsp),%r14
58d3(3): xor %rbx,%r11
58d6(3): mov %rbp,%rbx
58d9(4): shr $0x6,%rbx
58dd(3): xor %rbx,%r11
58e0(3): add %r11,%rax
58e3(a): mov $0x2177327727835720531,%r11
58ed(3): mov %rax,%rbx
58f0(3): mov %r10,%rax
58f3(3): xor %r8,%rax
58f6(3): add %rbx,%r11
58f9(5): mov %rbx,0x60(%rsp)
58fe(3): and %r9,%rax
5901(3): add %r11,%r13
5904(3): xor %r10,%rax
5907(3): add %rax,%r13
590a(3): mov %r9,%rax
590d(4): ror $0xe,%rax
5911(3): mov %rax,%r11
5914(3): mov %r9,%rax
5917(4): ror $0x12,%rax
591b(3): xor %r11,%rax
591e(3): mov %r9,%r11
5921(4): rol $0x17,%r11
5925(3): xor %r11,%rax
5928(3): mov %rsi,%r11
592b(3): add %r13,%rax
592e(3): mov %rsi,%r13
5931(4): rol $0x1e,%r11
5935(4): ror $0x1c,%r13
5939(3): add %rax,%rdi
593c(3): xor %r13,%r11
593f(3): mov %rsi,%r13
5942(4): rol $0x19,%r13
5946(3): xor %r13,%r11
5949(3): mov %rcx,%r13
594c(3): or %rsi,%r13
594f(3): mov %r13,%rbx
5952(3): mov %rcx,%r13
5955(3): and %rsi,%r13
5958(3): and %rdx,%rbx
595b(3): or %r13,%rbx
595e(3): mov %r15,%r13
5961(3): add %r11,%rbx
5964(3): mov %r14,%r11
5967(3): add %rax,%rbx
596a(3): mov %r14,%rax
596d(3): ror $0x1,%r11
5970(4): ror $0x8,%rax
5974(4): ror $0x13,%r13
5978(3): xor %r11,%rax
597b(3): mov %r14,%r11
597e(3): mov %r13,%rbp
5981(4): shr $0x7,%r11
5985(3): mov %r15,%r13
5988(3): xor %r11,%rax
598b(4): rol $0x3,%r13
598f(3): add %r12,%rax
5992(5): add 0x48(%rsp),%rax
5997(3): mov %r13,%r11
599a(3): mov %r15,%r13
599d(3): xor %rbp,%r11
59a0(3): mov %rsi,%rbp
59a3(4): shr $0x6,%r13
59a7(5): mov 0x28(%rsp),%r12
59ac(3): xor %r13,%r11
59af(3): add %r11,%rax
59b2(a): mov $0x2830643537854262169,%r11
59bc(3): mov %rax,%r13
59bf(3): mov %r8,%rax
59c2(3): xor %r9,%rax
59c5(3): add %r13,%r11
59c8(5): mov %r13,0x40(%rsp)
59cd(3): and %rdi,%rax
59d0(3): add %r11,%r10
59d3(5): mov 0x60(%rsp),%r13
59d8(3): xor %r8,%rax
59db(3): add %rax,%r10
59de(3): mov %rdi,%rax
59e1(4): ror $0xe,%rax
59e5(3): mov %rax,%r11
59e8(3): mov %rdi,%rax
59eb(4): ror $0x12,%rax
59ef(3): xor %r11,%rax
59f2(3): mov %rdi,%r11
59f5(4): rol $0x17,%r11
59f9(3): xor %r11,%rax
59fc(3): add %r10,%rax
59ff(3): mov %rbx,%r10
5a02(4): ror $0x1c,%r10
5a06(3): add %rax,%rdx
5a09(3): mov %r10,%r11
5a0c(3): mov %rbx,%r10
5a0f(4): rol $0x1e,%r10
5a13(3): xor %r11,%r10
5a16(3): mov %rbx,%r11
5a19(4): rol $0x19,%r11
5a1d(3): xor %r11,%r10
5a20(3): mov %rsi,%r11
5a23(3): or %rbx,%r11
5a26(3): and %rcx,%r11
5a29(3): and %rbx,%rbp
5a2c(3): or %rbp,%r11
5a2f(3): mov %r13,%rbp
5a32(3): add %r11,%r10
5a35(3): mov %r12,%r11
5a38(4): ror $0x13,%rbp
5a3c(3): add %rax,%r10
5a3f(3): mov %r12,%rax
5a42(3): ror $0x1,%r11
5a45(4): ror $0x8,%rax
5a49(3): xor %r11,%rax
5a4c(3): mov %r12,%r11
5a4f(4): shr $0x7,%r11
5a53(3): xor %r11,%rax
5a56(3): mov %r13,%r11
5a59(3): add %r14,%rax
5a5c(4): rol $0x3,%r11
5a60(5): add 0x78(%rsp),%rax
5a65(3): xor %rbp,%r11
5a68(3): mov %r13,%rbp
5a6b(5): mov 0x30(%rsp),%r14
5a70(4): shr $0x6,%rbp
5a74(3): xor %rbp,%r11
5a77(3): mov %rbx,%rbp
5a7a(3): add %r11,%rax
5a7d(a): mov $0x3796741975233480872,%r11
5a87(3): mov %rax,%r13
5a8a(3): mov %r9,%rax
5a8d(3): xor %rdi,%rax
5a90(3): add %r13,%r11
5a93(3): and %rdx,%rax
5a96(3): add %r11,%r8
5a99(3): xor %r9,%rax
5a9c(3): add %rax,%r8
5a9f(3): mov %rdx,%rax
5aa2(4): ror $0xe,%rax
5aa6(3): mov %rax,%r11
5aa9(3): mov %rdx,%rax
5aac(4): ror $0x12,%rax
5ab0(3): xor %r11,%rax
5ab3(3): mov %rdx,%r11
5ab6(4): rol $0x17,%r11
5aba(3): xor %r11,%rax
5abd(3): add %r8,%rax
5ac0(3): mov %r10,%r8
5ac3(4): ror $0x1c,%r8
5ac7(3): add %rax,%rcx
5aca(3): mov %r8,%r11
5acd(3): mov %r10,%r8
5ad0(4): rol $0x1e,%r8
5ad4(3): xor %r11,%r8
5ad7(3): mov %r10,%r11
5ada(3): and %r10,%rbp
5add(4): rol $0x19,%r11
5ae1(3): xor %r11,%r8
5ae4(3): mov %rbx,%r11
5ae7(3): or %r10,%r11
5aea(3): and %rsi,%r11
5aed(3): or %rbp,%r11
5af0(3): add %r11,%r8
5af3(3): mov %r14,%r11
5af6(3): add %rax,%r8
5af9(3): mov %r14,%rax
5afc(4): ror $0x8,%r11
5b00(3): ror $0x1,%rax
5b03(3): xor %rax,%r11
5b06(3): mov %r14,%rax
5b09(4): shr $0x7,%rax
5b0d(3): xor %rax,%r11
5b10(5): mov 0x40(%rsp),%rax
5b15(3): add %r12,%r11
5b18(5): add 0x58(%rsp),%r11
5b1d(3): mov %rax,%r12
5b20(4): ror $0x13,%r12
5b24(3): mov %r12,%rbp
5b27(3): mov %rax,%r12
5b2a(4): rol $0x3,%rax
5b2e(3): xor %rbp,%rax
5b31(4): shr $0x6,%r12
5b35(3): mov %r10,%rbp
5b38(3): xor %r12,%rax
5b3b(3): add %r11,%rax
5b3e(a): mov $0x4115178125766777443,%r11
5b48(3): mov %rax,%r12
5b4b(3): mov %rdi,%rax
5b4e(3): xor %rdx,%rax
5b51(3): add %r12,%r11
5b54(8): mov %r12,0x80(%rsp)
5b5c(3): and %rcx,%rax
5b5f(3): add %r11,%r9
5b62(5): mov 0x68(%rsp),%r12
5b67(3): xor %rdi,%rax
5b6a(3): add %rax,%r9
5b6d(3): mov %rcx,%rax
5b70(4): ror $0xe,%rax
5b74(3): mov %rax,%r11
5b77(3): mov %rcx,%rax
5b7a(4): ror $0x12,%rax
5b7e(3): xor %r11,%rax
5b81(3): mov %rcx,%r11
5b84(4): rol $0x17,%r11
5b88(3): xor %r11,%rax
5b8b(3): and %r8,%rbp
5b8e(3): add %r9,%rax
5b91(3): mov %r8,%r9
5b94(4): ror $0x1c,%r9
5b98(3): add %rax,%rsi
5b9b(3): mov %r9,%r11
5b9e(3): mov %r8,%r9
5ba1(4): rol $0x1e,%r9
5ba5(3): xor %r11,%r9
5ba8(3): mov %r8,%r11
5bab(4): rol $0x19,%r11
5baf(3): xor %r11,%r9
5bb2(3): mov %r10,%r11
5bb5(3): or %r8,%r11
5bb8(3): and %rbx,%r11
5bbb(3): or %rbp,%r11
5bbe(3): add %r11,%r9
5bc1(3): mov %r12,%r11
5bc4(3): add %rax,%r9
5bc7(3): mov %r12,%rax
5bca(4): ror $0x8,%r11
5bce(3): ror $0x1,%rax
5bd1(3): xor %rax,%r11
5bd4(3): mov %r12,%rax
5bd7(4): shr $0x7,%rax
5bdb(3): xor %rax,%r11
5bde(3): mov %r13,%rax
5be1(4): ror $0x13,%r13
5be5(3): add %r14,%r11
5be8(8): add 0xc8(%rsp),%r11
5bf0(3): mov %r13,%rbp
5bf3(3): mov %rax,%r13
5bf6(4): rol $0x3,%rax
5bfa(5): mov 0x38(%rsp),%r14
5bff(3): xor %rbp,%rax
5c02(5): mov %r13,0x68(%rsp)
5c07(4): shr $0x6,%r13
5c0b(3): xor %r13,%rax
5c0e(3): mov %r8,%rbp
5c11(3): add %r11,%rax
5c14(a): mov $0x5681478168544905931,%r11
5c1e(3): mov %rax,%r13
5c21(3): mov %rdx,%rax
5c24(3): xor %rcx,%rax
5c27(3): add %r13,%r11
5c2a(3): and %rsi,%rax
5c2d(3): add %r11,%rdi
5c30(3): xor %rdx,%rax
5c33(3): add %rax,%rdi
5c36(3): mov %rsi,%rax
5c39(3): and %r9,%rbp
5c3c(4): ror $0xe,%rax
5c40(3): mov %rax,%r11
5c43(3): mov %rsi,%rax
5c46(4): ror $0x12,%rax
5c4a(3): xor %r11,%rax
5c4d(3): mov %rsi,%r11
5c50(4): rol $0x17,%r11
5c54(3): xor %r11,%rax
5c57(3): add %rdi,%rax
5c5a(3): mov %r9,%rdi
5c5d(4): ror $0x1c,%rdi
5c61(3): add %rax,%rbx
5c64(3): mov %rdi,%r11
5c67(3): mov %r9,%rdi
5c6a(4): rol $0x1e,%rdi
5c6e(3): xor %r11,%rdi
5c71(3): mov %r9,%r11
5c74(4): rol $0x19,%r11
5c78(3): xor %r11,%rdi
5c7b(3): mov %r8,%r11
5c7e(3): or %r9,%r11
5c81(3): and %r10,%r11
5c84(3): or %rbp,%r11
5c87(3): add %r11,%rdi
5c8a(3): mov %r14,%r11
5c8d(3): add %rax,%rdi
5c90(3): mov %r14,%rax
5c93(3): ror $0x1,%r11
5c96(4): ror $0x8,%rax
5c9a(3): xor %r11,%rax
5c9d(3): mov %r14,%r11
5ca0(4): shr $0x7,%r11
5ca4(3): xor %r11,%rax
5ca7(8): mov 0x80(%rsp),%r11
5caf(3): add %r12,%rax
5cb2(5): add 0x50(%rsp),%rax
5cb7(3): mov %r11,%r12
5cba(4): ror $0x13,%r12
5cbe(3): mov %r12,%rbp
5cc1(3): mov %r11,%r12
5cc4(4): rol $0x3,%r11
5cc8(3): xor %rbp,%r11
5ccb(4): shr $0x6,%r12
5ccf(3): xor %r12,%r11
5cd2(3): mov %r9,%r12
5cd5(3): add %r11,%rax
5cd8(a): mov $0x6601373596472566643,%r11
5ce2(3): mov %rax,%rbp
5ce5(3): mov %rcx,%rax
5ce8(3): xor %rsi,%rax
5ceb(3): add %rbp,%r11
5cee(3): and %rdi,%r12
5cf1(3): and %rbx,%rax
5cf4(3): add %r11,%rdx
5cf7(3): mov %rbx,%r11
5cfa(3): xor %rcx,%rax
5cfd(4): ror $0xe,%r11
5d01(5): mov %rbp,0x8(%rsp)
5d06(3): add %rax,%rdx
5d09(3): mov %rbx,%rax
5d0c(4): mov (%rsp),%rbp
5d10(4): ror $0x12,%rax
5d14(3): xor %r11,%rax
5d17(3): mov %rbx,%r11
5d1a(4): rol $0x17,%r11
5d1e(3): xor %r11,%rax
5d21(3): add %rdx,%rax
5d24(3): mov %rdi,%rdx
5d27(4): ror $0x1c,%rdx
5d2b(3): add %rax,%r10
5d2e(3): mov %rdx,%r11
5d31(3): mov %rdi,%rdx
5d34(4): rol $0x1e,%rdx
5d38(3): xor %r11,%rdx
5d3b(3): mov %rdi,%r11
5d3e(4): rol $0x19,%r11
5d42(3): xor %r11,%rdx
5d45(3): mov %r9,%r11
5d48(3): or %rdi,%r11
5d4b(3): and %r8,%r11
5d4e(3): or %r12,%r11
5d51(3): add %r11,%rdx
5d54(3): mov %rbp,%r11
5d57(3): add %rax,%rdx
5d5a(3): mov %rbp,%rax
5d5d(3): ror $0x1,%r11
5d60(4): ror $0x8,%rax
5d64(3): xor %r11,%rax
5d67(3): mov %rbp,%r11
5d6a(5): mov 0x8(%rsp),%rbp
5d6f(4): shr $0x7,%r11
5d73(3): xor %r11,%rax
5d76(3): mov %r13,%r11
5d79(3): add %r14,%rax
5d7c(4): ror $0x13,%r11
5d80(3): mov %r13,%r14
5d83(3): add %r15,%rax
5d86(4): rol $0x3,%r13
5d8a(5): mov %r14,0x38(%rsp)
5d8f(3): xor %r11,%r13
5d92(3): mov %r14,%r11
5d95(3): mov %rdi,%r14
5d98(4): shr $0x6,%r11
5d9c(3): and %rdx,%r14
5d9f(3): xor %r11,%r13
5da2(a): mov $0x7507060721942968483,%r11
5dac(3): add %r13,%rax
5daf(3): mov %rax,%r13
5db2(3): mov %rsi,%rax
5db5(3): xor %rbx,%rax
5db8(3): add %r13,%r11
5dbb(3): and %r10,%rax
5dbe(3): add %r11,%rcx
5dc1(3): xor %rsi,%rax
5dc4(3): add %rax,%rcx
5dc7(3): mov %r10,%rax
5dca(4): ror $0xe,%rax
5dce(3): mov %rax,%r11
5dd1(3): mov %r10,%rax
5dd4(4): ror $0x12,%rax
5dd8(3): xor %r11,%rax
5ddb(3): mov %r10,%r11
5dde(4): rol $0x17,%r11
5de2(3): xor %r11,%rax
5de5(3): add %rcx,%rax
5de8(3): mov %rdx,%rcx
5deb(4): ror $0x1c,%rcx
5def(3): add %rax,%r8
5df2(3): mov %rcx,%r11
5df5(3): mov %rdx,%rcx
5df8(4): rol $0x1e,%rcx
5dfc(3): xor %r11,%rcx
5dff(3): mov %rdx,%r11
5e02(4): rol $0x19,%r11
5e06(3): xor %r11,%rcx
5e09(3): mov %rdi,%r11
5e0c(3): or %rdx,%r11
5e0f(3): and %r9,%r11
5e12(3): or %r14,%r11
5e15(5): mov 0x70(%rsp),%r14
5e1a(5): mov %r13,0x70(%rsp)
5e1f(3): add %rcx,%r11
5e22(4): lea 0x0(%r11,%rax,1),%r12
5e26(3): mov %rbp,%r11
5e29(3): mov %r14,%rcx
5e2c(3): mov %r14,%rax
5e2f(3): ror $0x1,%rcx
5e32(4): ror $0x8,%rax
5e36(3): xor %rcx,%rax
5e39(3): mov %r14,%rcx
5e3c(4): shr $0x7,%rcx
5e40(3): xor %rcx,%rax
5e43(4): add (%rsp),%rax
5e47(5): mov 0x60(%rsp),%rcx
5e4c(4): ror $0x13,%r11
5e50(3): add %rax,%rcx
5e53(3): mov %rbp,%rax
5e56(4): rol $0x3,%rax
5e5a(3): xor %r11,%rax
5e5d(3): mov %rbp,%r11
5e60(5): mov 0x10(%rsp),%rbp
5e65(4): shr $0x6,%r11
5e69(3): xor %r11,%rax
5e6c(3): add %rcx,%rax
5e6f(a): mov $0x8399075790359081724,%rcx
5e79(3): mov %rax,%r11
5e7c(3): mov %rbx,%rax
5e7f(3): xor %r10,%rax
5e82(3): add %r11,%rcx
5e85(4): mov %r11,(%rsp)
5e89(3): and %r8,%rax
5e8c(3): add %rcx,%rsi
5e8f(3): mov %r8,%rcx
5e92(3): xor %rbx,%rax
5e95(4): ror $0x12,%rcx
5e99(3): mov %rdx,%r11
5e9c(3): add %rax,%rsi
5e9f(3): mov %r8,%rax
5ea2(3): and %r12,%r11
5ea5(4): ror $0xe,%rax
5ea9(3): xor %rax,%rcx
5eac(3): mov %r8,%rax
5eaf(4): rol $0x17,%rax
5eb3(3): xor %rcx,%rax
5eb6(3): add %rsi,%rax
5eb9(3): mov %r12,%rsi
5ebc(4): ror $0x1c,%rsi
5ec0(3): add %rax,%r9
5ec3(3): mov %rsi,%rcx
5ec6(3): mov %r12,%rsi
5ec9(4): rol $0x1e,%rsi
5ecd(3): xor %rcx,%rsi
5ed0(3): mov %r12,%rcx
5ed3(4): rol $0x19,%rcx
5ed7(3): xor %rcx,%rsi
5eda(3): mov %rdx,%rcx
5edd(3): or %r12,%rcx
5ee0(3): and %rdi,%rcx
5ee3(3): or %r11,%rcx
5ee6(3): mov %r13,%r11
5ee9(3): add %rsi,%rcx
5eec(3): mov %rbp,%rsi
5eef(3): add %rax,%rcx
5ef2(3): mov %rbp,%rax
5ef5(3): ror $0x1,%rsi
5ef8(4): ror $0x8,%rax
5efc(4): ror $0x13,%r11
5f00(3): xor %rsi,%rax
5f03(3): mov %rbp,%rsi
5f06(4): shr $0x7,%rsi
5f0a(3): xor %rsi,%rax
5f0d(5): mov 0x40(%rsp),%rsi
5f12(3): add %r14,%rax
5f15(3): mov %rcx,%r14
5f18(4): rol $0x19,%r14
5f1c(3): add %rax,%rsi
5f1f(3): mov %r13,%rax
5f22(4): rol $0x3,%rax
5f26(3): xor %r11,%rax
5f29(3): mov %r13,%r11
5f2c(4): shr $0x6,%r11
5f30(3): xor %r11,%rax
5f33(3): add %rax,%rsi
5f36(3): mov %rsi,%r13
5f39(3): mov %r10,%rsi
5f3c(3): xor %r8,%rsi
5f3f(5): mov %r13,0x10(%rsp)
5f44(3): mov %rsi,%rax
5f47(a): mov $0x8693463985226723168,%rsi
5f51(3): add %r13,%rsi
5f54(3): and %r9,%rax
5f57(3): add %rsi,%rbx
5f5a(3): mov %r9,%rsi
5f5d(3): xor %r10,%rax
5f60(4): ror $0xe,%rsi
5f64(3): add %rax,%rbx
5f67(3): mov %rsi,%rax
5f6a(3): mov %r9,%rsi
5f6d(4): ror $0x12,%rsi
5f71(3): mov %rsi,%r11
5f74(3): mov %r9,%rsi
5f77(4): rol $0x17,%rsi
5f7b(3): xor %rax,%r11
5f7e(3): mov %rsi,%rax
5f81(3): mov %rcx,%rsi
5f84(4): ror $0x1c,%rsi
5f88(3): xor %r11,%rax
5f8b(3): mov %rsi,%r11
5f8e(3): mov %rcx,%rsi
5f91(3): add %rbx,%rax
5f94(4): rol $0x1e,%rsi
5f98(3): add %rax,%rdi
5f9b(3): mov %r12,%rbx
5f9e(3): xor %r11,%rsi
5fa1(3): xor %r14,%rsi
5fa4(3): mov %r12,%r14
5fa7(3): or %rcx,%r14
5faa(3): and %rcx,%rbx
5fad(3): mov %r14,%r11
5fb0(5): mov 0x48(%rsp),%r14
5fb5(5): mov 0x78(%rsp),%r13
5fba(3): and %rdx,%r11
5fbd(3): or %rbx,%r11
5fc0(3): add %rsi,%r11
5fc3(3): mov %r14,%rsi
5fc6(3): add %rax,%r11
5fc9(3): mov %r14,%rax
5fcc(3): ror $0x1,%rsi
5fcf(4): ror $0x8,%rax
5fd3(3): xor %rsi,%rax
5fd6(3): mov %r14,%rsi
5fd9(4): shr $0x7,%rsi
5fdd(3): xor %rsi,%rax
5fe0(5): mov 0x68(%rsp),%rsi
5fe5(3): add %rbp,%rax
5fe8(4): mov (%rsp),%rbp
5fec(3): add %rax,%rsi
5fef(3): mov %rbp,%rbx
5ff2(3): mov %rbp,%rax
5ff5(4): ror $0x13,%rbx
5ff9(4): rol $0x3,%rax
5ffd(3): xor %rbx,%rax
6000(3): mov %rbp,%rbx
6003(3): mov %rcx,%rbp
6006(4): shr $0x6,%rbx
600a(3): xor %rbx,%rax
600d(a): mov $0x-8878714635349349518,%rbx
6017(3): add %rax,%rsi
601a(3): mov %r8,%rax
601d(3): xor %r9,%rax
6020(3): add %rsi,%rbx
6023(5): mov %rsi,0x18(%rsp)
6028(3): and %rdi,%rax
602b(3): add %rbx,%r10
602e(3): xor %r8,%rax
6031(4): lea 0x0(%rax,%r10,1),%rsi
6035(3): mov %rdi,%r10
6038(4): ror $0xe,%r10
603c(3): mov %r10,%rax
603f(3): mov %rdi,%r10
6042(4): ror $0x12,%r10
6046(3): xor %rax,%r10
6049(3): mov %rdi,%rax
604c(4): rol $0x17,%rax
6050(3): xor %r10,%rax
6053(3): mov %r11,%r10
6056(3): add %rsi,%rax
6059(3): mov %r11,%rsi
605c(4): ror $0x1c,%r10
6060(3): add %rax,%rdx
6063(4): rol $0x1e,%rsi
6067(3): and %r11,%rbp
606a(3): xor %r10,%rsi
606d(3): mov %r11,%r10
6070(4): rol $0x19,%r10
6074(3): xor %r10,%rsi
6077(3): mov %rcx,%r10
607a(3): or %r11,%r10
607d(3): and %r12,%r10
6080(3): or %rbp,%r10
6083(3): add %rsi,%r10
6086(3): mov %r13,%rsi
6089(3): add %rax,%r10
608c(3): mov %r13,%rax
608f(3): ror $0x1,%rsi
6092(4): ror $0x8,%rax
6096(3): xor %rsi,%rax
6099(3): mov %r13,%rsi
609c(4): shr $0x7,%rsi
60a0(3): xor %rsi,%rax
60a3(8): mov 0x80(%rsp),%rsi
60ab(3): add %r14,%rax
60ae(5): mov 0x10(%rsp),%r14
60b3(3): add %rax,%rsi
60b6(3): mov %r14,%rbx
60b9(3): mov %r14,%rax
60bc(4): ror $0x13,%rbx
60c0(4): rol $0x3,%rax
60c4(3): xor %rbx,%rax
60c7(3): mov %r14,%rbx
60ca(5): mov 0x58(%rsp),%r14
60cf(4): shr $0x6,%rbx
60d3(3): xor %rbx,%rax
60d6(3): add %rsi,%rax
60d9(3): mov %rax,%rbp
60dc(3): mov %r9,%rax
60df(3): xor %rdi,%rax
60e2(5): mov %rbp,0x20(%rsp)
60e7(3): mov %rax,%rsi
60ea(a): mov $0x-8302665154208450068,%rax
60f4(3): add %rbp,%rax
60f7(3): and %rdx,%rsi
60fa(3): add %rax,%r8
60fd(3): mov %rdx,%rax
6100(3): xor %r9,%rsi
6103(4): ror $0xe,%rax
6107(3): add %rsi,%r8
610a(3): mov %rax,%rsi
610d(3): mov %rdx,%rax
6110(4): ror $0x12,%rax
6114(3): mov %rax,%rbx
6117(3): mov %rdx,%rax
611a(3): xor %rsi,%rbx
611d(4): rol $0x17,%rax
6121(3): mov %rax,%rsi
6124(3): mov %r10,%rax
6127(4): ror $0x1c,%rax
612b(3): xor %rbx,%rsi
612e(3): mov %rax,%rbx
6131(3): mov %r10,%rax
6134(3): add %r8,%rsi
6137(4): rol $0x1e,%rax
613b(4): lea 0x0(%r12,%rsi,1),%r8
613f(3): mov %r11,%r12
6142(3): mov %rax,%rbp
6145(3): mov %r10,%rax
6148(3): and %r10,%r12
614b(3): xor %rbx,%rbp
614e(4): rol $0x19,%rax
6152(3): xor %rax,%rbp
6155(3): mov %r11,%rax
6158(3): or %r10,%rax
615b(3): and %rcx,%rax
615e(3): or %r12,%rax
6161(5): mov 0x50(%rsp),%r12
6166(3): add %rbp,%rax
6169(4): lea 0x0(%rax,%rsi,1),%rbx
616d(3): mov %r14,%rsi
6170(3): mov %r14,%rax
6173(3): ror $0x1,%rsi
6176(4): ror $0x8,%rax
617a(3): xor %rsi,%rax
617d(3): mov %r14,%rsi
6180(4): shr $0x7,%rsi
6184(3): xor %rsi,%rax
6187(3): add %r13,%rax
618a(5): mov 0x18(%rsp),%r13
618f(5): add 0x38(%rsp),%rax
6194(3): mov %r13,%rsi
6197(4): ror $0x13,%rsi
619b(3): mov %rsi,%rbp
619e(3): mov %r13,%rsi
61a1(4): shr $0x6,%r13
61a5(4): rol $0x3,%rsi
61a9(3): xor %rbp,%rsi
61ac(8): mov 0xc8(%rsp),%rbp
61b4(3): xor %r13,%rsi
61b7(3): add %rsi,%rax
61ba(a): mov $0x-8016688836872298968,%rsi
61c4(3): mov %rax,%r13
61c7(3): mov %rdi,%rax
61ca(3): xor %rdx,%rax
61cd(3): add %r13,%rsi
61d0(5): mov %r13,0x48(%rsp)
61d5(3): and %r8,%rax
61d8(3): add %rsi,%r9
61db(3): mov %r8,%rsi
61de(3): xor %rdi,%rax
61e1(3): add %rax,%r9
61e4(3): mov %r8,%rax
61e7(4): ror $0xe,%rax
61eb(4): ror $0x12,%rsi
61ef(3): mov %rsi,%r13
61f2(3): xor %rax,%r13
61f5(3): mov %r8,%rax
61f8(4): rol $0x17,%rax
61fc(3): xor %r13,%rax
61ff(3): add %r9,%rax
6202(3): mov %rbx,%r9
6205(4): ror $0x1c,%r9
6209(3): add %rax,%rcx
620c(3): mov %r9,%r13
620f(3): mov %rbx,%r9
6212(4): rol $0x1e,%r9
6216(3): mov %r9,%rsi
6219(3): mov %rbx,%r9
621c(3): xor %r13,%rsi
621f(4): rol $0x19,%r9
6223(3): xor %r9,%rsi
6226(3): mov %r10,%r9
6229(3): or %rbx,%r9
622c(3): mov %r9,%r13
622f(3): mov %r10,%r9
6232(3): and %rbx,%r9
6235(3): and %r11,%r13
6238(3): or %r9,%r13
623b(3): add %rsi,%r13
623e(3): mov %rbp,%rsi
6241(3): add %rax,%r13
6244(3): mov %rbp,%rax
6247(3): ror $0x1,%rsi
624a(4): ror $0x8,%rax
624e(3): xor %rsi,%rax
6251(3): mov %rbp,%rsi
6254(4): shr $0x7,%rsi
6258(3): xor %rsi,%rax
625b(3): add %r14,%rax
625e(5): mov 0x20(%rsp),%r14
6263(5): add 0x8(%rsp),%rax
6268(3): mov %r14,%r9
626b(3): mov %r14,%rsi
626e(4): ror $0x13,%r9
6272(4): rol $0x3,%rsi
6276(3): xor %r9,%rsi
6279(3): mov %r14,%r9
627c(4): shr $0x6,%r9
6280(3): xor %r9,%rsi
6283(3): add %rsi,%rax
6286(a): mov $0x-6606660893046293015,%rsi
6290(3): mov %rax,%r9
6293(3): mov %rdx,%rax
6296(3): xor %r8,%rax
6299(5): mov %r9,0x28(%rsp)
629e(3): and %rcx,%rax
62a1(3): add %r9,%rsi
62a4(3): xor %rdx,%rax
62a7(3): add %rsi,%rdi
62aa(3): mov %rcx,%rsi
62ad(3): add %rax,%rdi
62b0(4): ror $0x12,%rsi
62b4(3): mov %rcx,%rax
62b7(4): ror $0xe,%rax
62bb(3): mov %rsi,%r14
62be(3): xor %rax,%r14
62c1(3): mov %rcx,%rax
62c4(4): rol $0x17,%rax
62c8(3): xor %r14,%rax
62cb(3): add %rdi,%rax
62ce(3): mov %r13,%rdi
62d1(4): ror $0x1c,%rdi
62d5(3): add %rax,%r11
62d8(3): mov %rdi,%r14
62db(3): mov %r13,%rdi
62de(4): rol $0x1e,%rdi
62e2(3): mov %rdi,%rsi
62e5(3): mov %r13,%rdi
62e8(3): xor %r14,%rsi
62eb(4): rol $0x19,%rdi
62ef(3): xor %rdi,%rsi
62f2(3): mov %rbx,%rdi
62f5(3): or %r13,%rdi
62f8(3): mov %rdi,%r14
62fb(3): mov %rbx,%rdi
62fe(3): and %r13,%rdi
6301(3): and %r10,%r14
6304(3): or %rdi,%r14
6307(3): add %rsi,%r14
630a(3): mov %r12,%rsi
630d(3): add %rax,%r14
6310(3): mov %r12,%rax
6313(3): ror $0x1,%rsi
6316(4): ror $0x8,%rax
631a(3): xor %rsi,%rax
631d(3): mov %r12,%rsi
6320(4): shr $0x7,%rsi
6324(3): xor %rsi,%rax
6327(3): add %rbp,%rax
632a(5): mov 0x48(%rsp),%rbp
632f(5): add 0x70(%rsp),%rax
6334(3): mov %rbp,%rdi
6337(3): mov %rbp,%rsi
633a(4): ror $0x13,%rdi
633e(4): rol $0x3,%rsi
6342(3): xor %rdi,%rsi
6345(3): mov %rbp,%rdi
6348(4): shr $0x6,%rdi
634c(3): xor %rdi,%rsi
634f(a): mov $0x-4685533653050689259,%rdi
6359(3): add %rsi,%rax
635c(3): mov %rax,%rbp
635f(3): mov %r8,%rax
6362(3): xor %rcx,%rax
6365(3): add %rbp,%rdi
6368(5): mov %rbp,0x50(%rsp)
636d(3): and %r11,%rax
6370(3): add %rdi,%rdx
6373(3): mov %r14,%rdi
6376(3): xor %r8,%rax
6379(4): rol $0x1e,%rdi
637d(4): lea 0x0(%rax,%rdx,1),%rsi
6381(3): mov %r11,%rax
6384(3): mov %r11,%rdx
6387(4): ror $0xe,%rax
638b(4): ror $0x12,%rdx
638f(3): xor %rax,%rdx
6392(3): mov %r11,%rax
6395(4): rol $0x17,%rax
6399(3): xor %rdx,%rax
639c(3): mov %r14,%rdx
639f(4): ror $0x1c,%rdx
63a3(3): add %rsi,%rax
63a6(3): xor %rdx,%rdi
63a9(3): mov %r14,%rdx
63ac(4): lea 0x0(%r10,%rax,1),%rsi
63b0(4): rol $0x19,%rdx
63b4(3): mov %r13,%r10
63b7(3): xor %rdx,%rdi
63ba(3): mov %r13,%rdx
63bd(3): and %r14,%r10
63c0(3): or %r14,%rdx
63c3(3): and %rbx,%rdx
63c6(3): or %r10,%rdx
63c9(5): mov 0x28(%rsp),%r10
63ce(3): add %rdi,%rdx
63d1(3): add %rax,%rdx
63d4(3): mov %r15,%rax
63d7(3): ror $0x1,%rax
63da(3): mov %r10,%r9
63dd(3): mov %rax,%rdi
63e0(3): mov %r15,%rax
63e3(4): ror $0x8,%rax
63e7(3): xor %rdi,%rax
63ea(3): mov %r15,%rdi
63ed(4): shr $0x7,%rdi
63f1(3): xor %rdi,%rax
63f4(3): mov %r10,%rdi
63f7(3): add %r12,%rax
63fa(4): add (%rsp),%rax
63fe(4): ror $0x13,%r9
6402(4): rol $0x3,%rdi
6406(3): xor %r9,%rdi
6409(3): mov %r10,%r9
640c(4): shr $0x6,%r9
6410(3): xor %r9,%rdi
6413(3): add %rdi,%rax
6416(a): mov $0x-4147400797238176981,%rdi
6420(3): mov %rax,%r10
6423(3): mov %rcx,%rax
6426(3): xor %r11,%rax
6429(3): add %r10,%rdi
642c(5): mov %r10,0x30(%rsp)
6431(3): and %rsi,%rax
6434(3): add %rdi,%r8
6437(3): mov %rsi,%rdi
643a(3): xor %rcx,%rax
643d(4): ror $0x12,%rdi
6441(3): mov %r14,%r10
6444(3): mov %rax,%r9
6447(3): and %rdx,%r10
644a(4): lea 0x0(%r9,%r8,1),%rax
644e(3): mov %rsi,%r8
6451(3): mov %rdx,%r9
6454(4): ror $0xe,%r8
6458(4): rol $0x1e,%r9
645c(3): xor %r8,%rdi
645f(3): mov %rsi,%r8
6462(4): rol $0x17,%r8
6466(3): xor %rdi,%r8
6469(3): mov %rdx,%rdi
646c(4): ror $0x1c,%rdi
6470(3): add %rax,%r8
6473(3): xor %rdi,%r9
6476(3): mov %rdx,%rdi
6479(4): lea 0x0(%rbx,%r8,1),%rax
647d(4): rol $0x19,%rdi
6481(5): mov 0x60(%rsp),%rbx
6486(3): xor %rdi,%r9
6489(3): mov %r14,%rdi
648c(3): or %rdx,%rdi
648f(3): and %r13,%rdi
6492(3): or %r10,%rdi
6495(3): add %r9,%rdi
6498(3): mov %rbx,%r9
649b(3): add %r8,%rdi
649e(3): mov %rbx,%r8
64a1(3): ror $0x1,%r9
64a4(4): ror $0x8,%r8
64a8(3): xor %r9,%r8
64ab(3): mov %rbx,%r9
64ae(4): shr $0x7,%r9
64b2(3): xor %r9,%r8
64b5(3): add %r8,%r15
64b8(3): mov %rbp,%r8
64bb(5): add 0x10(%rsp),%r15
64c0(4): ror $0x13,%r8
64c4(3): mov %r8,%r9
64c7(3): mov %rbp,%r8
64ca(4): shr $0x6,%rbp
64ce(4): rol $0x3,%r8
64d2(3): xor %r9,%r8
64d5(a): mov $0x-3880063495543823972,%r9
64df(3): xor %rbp,%r8
64e2(3): add %r15,%r8
64e5(5): mov 0x40(%rsp),%r15
64ea(3): mov %r8,%r12
64ed(8): mov %r8,0xf0(%rsp)
64f5(3): mov %r11,%r8
64f8(3): xor %rsi,%r8
64fb(3): add %r12,%r9
64fe(5): mov %r12,0x58(%rsp)
6503(3): and %rax,%r8
6506(3): add %r9,%rcx
6509(3): mov %rdx,%r9
650c(3): xor %r11,%r8
650f(3): and %rdi,%r9
6512(3): mov %r15,%r12
6515(3): mov %r8,%r10
6518(4): lea 0x0(%r10,%rcx,1),%r8
651c(3): mov %rax,%rcx
651f(3): mov %rax,%r10
6522(4): ror $0xe,%rcx
6526(4): ror $0x12,%r10
652a(3): xor %rcx,%r10
652d(3): mov %rax,%rcx
6530(4): rol $0x17,%rcx
6534(3): xor %r10,%rcx
6537(3): mov %rdi,%r10
653a(3): add %r8,%rcx
653d(3): mov %rdi,%r8
6540(4): ror $0x1c,%r10
6544(4): rol $0x1e,%r8
6548(3): add %rcx,%r13
654b(3): xor %r10,%r8
654e(3): mov %rdi,%r10
6551(4): rol $0x19,%r10
6555(3): xor %r10,%r8
6558(3): mov %rdx,%r10
655b(3): or %rdi,%r10
655e(3): and %r14,%r10
6561(3): or %r9,%r10
6564(3): mov %r13,%r9
6567(3): add %r8,%r10
656a(3): add %rcx,%r10
656d(3): mov %r15,%rcx
6570(3): ror $0x1,%r12
6573(4): ror $0x8,%rcx
6577(4): ror $0x12,%r9
657b(3): xor %r12,%rcx
657e(3): mov %r15,%r12
6581(4): shr $0x7,%r12
6585(3): xor %r12,%rcx
6588(3): add %rbx,%rcx
658b(5): mov 0x30(%rsp),%rbx
6590(5): add 0x18(%rsp),%rcx
6595(3): mov %rbx,%r8
6598(3): mov %rbx,%r12
659b(4): ror $0x13,%r8
659f(4): rol $0x3,%r12
65a3(3): xor %r8,%r12
65a6(3): mov %rbx,%r8
65a9(5): mov 0x68(%rsp),%rbx
65ae(4): shr $0x6,%r8
65b2(3): xor %r8,%r12
65b5(a): mov $0x-3348786107499101689,%r8
65bf(3): add %rcx,%r12
65c2(3): mov %rsi,%rcx
65c5(3): mov %rbx,%rbp
65c8(3): xor %rax,%rcx
65cb(3): add %r12,%r8
65ce(8): mov %r12,0xf8(%rsp)
65d6(3): and %r13,%rcx
65d9(3): add %r8,%r11
65dc(3): xor %rsi,%rcx
65df(3): add %rcx,%r11
65e2(3): mov %r13,%rcx
65e5(4): ror $0xe,%rcx
65e9(3): xor %rcx,%r9
65ec(3): mov %r13,%rcx
65ef(4): rol $0x17,%rcx
65f3(3): xor %r9,%rcx
65f6(3): add %r11,%rcx
65f9(3): mov %r10,%r11
65fc(4): ror $0x1c,%r11
6600(3): add %rcx,%r14
6603(3): mov %r11,%r9
6606(3): mov %r10,%r11
6609(4): rol $0x1e,%r11
660d(3): mov %r11,%r8
6610(3): mov %r10,%r11
6613(3): xor %r9,%r8
6616(4): rol $0x19,%r11
661a(3): xor %r11,%r8
661d(3): mov %rdi,%r11
6620(3): or %r10,%r11
6623(3): ror $0x1,%rbp
6626(3): mov %r11,%r9
6629(3): mov %rdi,%r11
662c(3): and %r10,%r11
662f(3): and %rdx,%r9
6632(3): or %r11,%r9
6635(3): mov %rbx,%r11
6638(4): ror $0x8,%r11
663c(3): add %r8,%r9
663f(3): xor %rbp,%r11
6642(3): mov %rbx,%rbp
6645(3): add %rcx,%r9
6648(4): shr $0x7,%rbp
664c(3): xor %rbp,%r11
664f(3): add %r15,%r11
6652(5): add 0x20(%rsp),%r11
6657(5): mov 0x58(%rsp),%r8
665c(8): mov 0x80(%rsp),%r15
6664(3): mov %r8,%rbx
6667(3): mov %r8,%rcx
666a(4): rol $0x3,%rbx
666e(4): ror $0x13,%rcx
6672(3): mov %rbx,%rbp
6675(3): xor %rcx,%rbp
6678(3): mov %r8,%rcx
667b(a): mov $0x-1523767162380948706,%r8
6685(4): shr $0x6,%rcx
6689(3): xor %rcx,%rbp
668c(3): mov %rax,%rcx
668f(3): add %r11,%rbp
6692(3): xor %r13,%rcx
6695(3): mov %r14,%r11
6698(3): add %rbp,%r8
669b(3): and %r14,%rcx
669e(4): ror $0x12,%r11
66a2(3): xor %rax,%rcx
66a5(3): add %r8,%rsi
66a8(3): mov %r11,%r8
66ab(3): add %rcx,%rsi
66ae(3): mov %r14,%rcx
66b1(3): mov %r9,%r11
66b4(4): ror $0xe,%rcx
66b8(8): mov %rbp,0x100(%rsp)
66c0(3): xor %rcx,%r8
66c3(3): mov %r14,%rcx
66c6(4): rol $0x17,%rcx
66ca(3): xor %r8,%rcx
66cd(3): add %rsi,%rcx
66d0(3): add %rcx,%rdx
66d3(4): ror $0x1c,%r11
66d7(3): mov %r11,%r8
66da(3): mov %r9,%r11
66dd(4): rol $0x1e,%r11
66e1(3): mov %r11,%rsi
66e4(3): mov %r9,%r11
66e7(3): xor %r8,%rsi
66ea(4): rol $0x19,%r11
66ee(3): xor %r11,%rsi
66f1(3): mov %r10,%r11
66f4(3): or %r9,%r11
66f7(3): mov %r11,%r8
66fa(3): mov %r10,%r11
66fd(3): and %r9,%r11
6700(3): and %rdi,%r8
6703(3): or %r11,%r8
6706(3): mov %r15,%r11
6709(3): add %rsi,%r8
670c(3): mov %r15,%rsi
670f(4): ror $0x8,%r11
6713(3): ror $0x1,%rsi
6716(3): add %rcx,%r8
6719(3): mov %r12,%rcx
671c(3): xor %rsi,%r11
671f(3): mov %r15,%rsi
6722(4): ror $0x13,%rcx
6726(4): shr $0x7,%rsi
672a(3): xor %rsi,%r11
672d(3): mov %r12,%rsi
6730(5): add 0x68(%rsp),%r11
6735(4): rol $0x3,%rsi
6739(5): add 0x48(%rsp),%r11
673e(3): mov %rsi,%rbx
6741(3): xor %rcx,%rbx
6744(3): mov %r12,%rcx
6747(4): shr $0x6,%rcx
674b(3): xor %rcx,%rbx
674e(3): mov %r13,%rcx
6751(3): add %r11,%rbx
6754(3): xor %r14,%rcx
6757(a): mov $0x-757361751448694408,%r11
6761(3): add %rbx,%r11
6764(3): and %rdx,%rcx
6767(8): mov %rbx,0x108(%rsp)
676f(3): xor %r13,%rcx
6772(3): add %r11,%rax
6775(3): mov %rdx,%r11
6778(4): lea 0x0(%rcx,%rax,1),%rsi
677c(4): ror $0x12,%r11
6780(3): mov %rdx,%rcx
6783(4): ror $0xe,%rcx
6787(3): mov %r11,%rax
678a(3): mov %r8,%r11
678d(3): xor %rcx,%rax
6790(3): mov %rdx,%rcx
6793(4): rol $0x17,%rcx
6797(4): ror $0x1c,%r11
679b(3): xor %rax,%rcx
679e(3): mov %r11,%rax
67a1(3): mov %r8,%r11
67a4(4): rol $0x1e,%r11
67a8(3): add %rsi,%rcx
67ab(3): mov %r11,%rsi
67ae(3): mov %r8,%r11
67b1(3): add %rcx,%rdi
67b4(3): xor %rax,%rsi
67b7(4): rol $0x19,%r11
67bb(3): xor %r11,%rsi
67be(3): mov %r9,%r11
67c1(3): or %r8,%r11
67c4(3): mov %r11,%rax
67c7(3): mov %r9,%r11
67ca(3): and %r8,%r11
67cd(3): and %r10,%rax
67d0(3): or %r11,%rax
67d3(3): add %rsi,%rax
67d6(5): mov 0x38(%rsp),%rsi
67db(3): add %rcx,%rax
67de(3): mov %rsi,%r11
67e1(3): mov %rsi,%rcx
67e4(3): ror $0x1,%r11
67e7(4): ror $0x8,%rcx
67eb(3): xor %r11,%rcx
67ee(3): mov %rsi,%r11
67f1(3): mov %rbp,%rsi
67f4(4): shr $0x7,%r11
67f8(4): ror $0x13,%rsi
67fc(3): xor %r11,%rcx
67ff(4): lea 0x0(%rcx,%r15,1),%r11
6803(5): mov 0x28(%rsp),%rcx
6808(3): mov %r8,%r15
680b(3): add %r11,%rcx
680e(3): mov %rbp,%r11
6811(4): rol $0x3,%r11
6815(3): xor %rsi,%r11
6818(3): mov %rbp,%rsi
681b(4): shr $0x6,%rsi
681f(3): xor %rsi,%r11
6822(3): mov %r14,%rsi
6825(3): xor %rdx,%rsi
6828(3): add %rcx,%r11
682b(3): mov %rsi,%rcx
682e(a): mov $0x500013540394364858,%rsi
6838(8): mov %r11,0x110(%rsp)
6840(3): add %r11,%rsi
6843(3): and %rdi,%rcx
6846(3): xor %r14,%rcx
6849(3): add %rsi,%r13
684c(3): mov %rdi,%rsi
684f(3): add %rcx,%r13
6852(4): ror $0xe,%rsi
6856(3): and %rax,%r15
6859(3): mov %rsi,%rcx
685c(3): mov %rdi,%rsi
685f(4): ror $0x12,%rsi
6863(3): xor %rcx,%rsi
6866(3): mov %rdi,%rcx
6869(4): rol $0x17,%rcx
686d(3): xor %rsi,%rcx
6870(3): mov %rax,%rsi
6873(3): add %r13,%rcx
6876(3): mov %rax,%r13
6879(4): ror $0x1c,%rsi
687d(4): rol $0x1e,%r13
6881(3): add %rcx,%r10
6884(3): xor %rsi,%r13
6887(3): mov %rax,%rsi
688a(4): rol $0x19,%rsi
688e(3): xor %rsi,%r13
6891(3): mov %r8,%rsi
6894(3): or %rax,%rsi
6897(3): and %r9,%rsi
689a(3): or %r15,%rsi
689d(5): mov 0x8(%rsp),%r15
68a2(3): add %r13,%rsi
68a5(3): add %rcx,%rsi
68a8(3): mov %r15,%r13
68ab(3): mov %r15,%rcx
68ae(3): ror $0x1,%r13
68b1(4): ror $0x8,%rcx
68b5(3): xor %r13,%rcx
68b8(3): mov %r15,%r13
68bb(3): mov %rbx,%r15
68be(4): shr $0x7,%r13
68c2(4): ror $0x13,%r15
68c6(3): xor %r13,%rcx
68c9(3): mov %rbx,%r13
68cc(5): add 0x38(%rsp),%rcx
68d1(5): add 0x50(%rsp),%rcx
68d6(4): rol $0x3,%r13
68da(3): xor %r15,%r13
68dd(3): mov %rbx,%r15
68e0(4): shr $0x6,%r15
68e4(3): xor %r15,%r13
68e7(4): lea 0x0(%rcx,%r13,1),%r15
68eb(3): mov %rdx,%rcx
68ee(3): xor %rdi,%rcx
68f1(3): mov %rcx,%r13
68f4(a): mov $0x748580250866718886,%rcx
68fe(5): mov %r15,0x38(%rsp)
6903(3): and %r10,%r13
6906(3): add %r15,%rcx
6909(8): mov %r15,0x118(%rsp)
6911(3): add %rcx,%r14
6914(3): mov %r10,%rcx
6917(3): xor %rdx,%r13
691a(4): ror $0xe,%rcx
691e(3): add %r13,%r14
6921(3): mov %rax,%r15
6924(3): mov %rcx,%r13
6927(3): mov %r10,%rcx
692a(3): and %rsi,%r15
692d(4): ror $0x12,%rcx
6931(3): xor %r13,%rcx
6934(3): mov %r10,%r13
6937(4): rol $0x17,%r13
693b(3): xor %rcx,%r13
693e(3): mov %rsi,%rcx
6941(3): add %r14,%r13
6944(3): mov %rsi,%r14
6947(4): ror $0x1c,%rcx
694b(4): rol $0x1e,%r14
694f(3): add %r13,%r9
6952(3): xor %rcx,%r14
6955(3): mov %rsi,%rcx
6958(4): rol $0x19,%rcx
695c(3): xor %rcx,%r14
695f(3): mov %rax,%rcx
6962(3): or %rsi,%rcx
6965(3): and %r8,%rcx
6968(3): or %r15,%rcx
696b(5): mov 0x70(%rsp),%r15
6970(3): add %r14,%rcx
6973(3): add %r13,%rcx
6976(3): mov %r15,%r14
6979(3): mov %r15,%r13
697c(3): ror $0x1,%r14
697f(4): ror $0x8,%r13
6983(3): xor %r14,%r13
6986(3): mov %r15,%r14
6989(3): mov %r11,%r15
698c(4): shr $0x7,%r14
6990(4): ror $0x13,%r15
6994(3): xor %r14,%r13
6997(3): mov %r11,%r14
699a(5): add 0x8(%rsp),%r13
699f(5): add 0x30(%rsp),%r13
69a4(4): rol $0x3,%r14
69a8(3): xor %r15,%r14
69ab(3): mov %r11,%r15
69ae(4): shr $0x6,%r15
69b2(3): xor %r15,%r14
69b5(a): mov $0x1242879168328830382,%r15
69bf(3): add %r14,%r13
69c2(3): mov %r13,%r14
69c5(8): mov %r13,0x120(%rsp)
69cd(3): mov %rdi,%r13
69d0(3): xor %r10,%r13
69d3(3): add %r14,%r15
69d6(5): mov %r14,0x8(%rsp)
69db(3): and %r9,%r13
69de(3): add %r15,%rdx
69e1(3): mov %rcx,%r15
69e4(3): xor %rdi,%r13
69e7(4): rol $0x1e,%r15
69eb(5): lea 0x0(%r13,%rdx,1),%r14
69f0(3): mov %r9,%rdx
69f3(4): ror $0xe,%rdx
69f7(3): mov %rdx,%r13
69fa(3): mov %r9,%rdx
69fd(4): ror $0x12,%rdx
6a01(3): xor %r13,%rdx
6a04(3): mov %r9,%r13
6a07(4): rol $0x17,%r13
6a0b(3): xor %rdx,%r13
6a0e(3): mov %rcx,%rdx
6a11(3): add %r14,%r13
6a14(4): ror $0x1c,%rdx
6a18(3): mov %r15,%r14
6a1b(3): xor %rdx,%r14
6a1e(3): mov %rcx,%rdx
6a21(3): mov %rsi,%r15
6a24(4): rol $0x19,%rdx
6a28(3): and %rcx,%r15
6a2b(3): add %r13,%r8
6a2e(3): xor %rdx,%r14
6a31(3): mov %rsi,%rdx
6a34(3): or %rcx,%rdx
6a37(3): and %rax,%rdx
6a3a(3): or %r15,%rdx
6a3d(4): mov (%rsp),%r15
6a41(3): add %r14,%rdx
6a44(3): add %r13,%rdx
6a47(3): mov %r15,%r14
6a4a(3): mov %r15,%r13
6a4d(3): ror $0x1,%r14
6a50(4): ror $0x8,%r13
6a54(3): xor %r14,%r13
6a57(3): mov %r15,%r14
6a5a(4): shr $0x7,%r14
6a5e(3): xor %r14,%r13
6a61(5): mov 0x38(%rsp),%r14
6a66(5): add 0x70(%rsp),%r13
6a6b(5): add 0x58(%rsp),%r13
6a70(3): mov %r14,%r15
6a73(4): rol $0x3,%r14
6a77(4): ror $0x13,%r15
6a7b(3): xor %r15,%r14
6a7e(5): mov 0x38(%rsp),%r15
6a83(4): shr $0x6,%r15
6a87(3): xor %r15,%r14
6a8a(3): add %r14,%r13
6a8d(a): mov $0x1977374033974150939,%r14
6a97(3): mov %r13,%r15
6a9a(8): mov %r13,0x128(%rsp)
6aa2(3): mov %r10,%r13
6aa5(3): xor %r9,%r13
6aa8(3): add %r15,%r14
6aab(5): mov %r15,0x40(%rsp)
6ab0(3): and %r8,%r13
6ab3(3): add %r14,%rdi
6ab6(3): mov %r8,%r15
6ab9(3): xor %r10,%r13
6abc(4): rol $0x17,%r15
6ac0(3): add %r13,%rdi
6ac3(3): mov %r8,%r13
6ac6(4): ror $0xe,%r13
6aca(3): mov %r13,%r14
6acd(3): mov %r8,%r13
6ad0(4): ror $0x12,%r13
6ad4(3): xor %r14,%r13
6ad7(3): xor %r15,%r13
6ada(3): mov %rdx,%r15
6add(3): add %rdi,%r13
6ae0(4): rol $0x19,%r15
6ae4(4): lea 0x0(%rax,%r13,1),%rdi
6ae8(3): mov %rdx,%rax
6aeb(4): ror $0x1c,%rax
6aef(3): mov %rax,%r14
6af2(3): mov %rdx,%rax
6af5(4): rol $0x1e,%rax
6af9(3): xor %r14,%rax
6afc(3): xor %r15,%rax
6aff(3): mov %rcx,%r15
6b02(3): or %rdx,%r15
6b05(3): mov %r15,%r14
6b08(3): mov %rcx,%r15
6b0b(3): and %rdx,%r15
6b0e(3): and %rsi,%r14
6b11(3): or %r15,%r14
6b14(5): mov 0x10(%rsp),%r15
6b19(3): add %rax,%r14
6b1c(3): add %r14,%r13
6b1f(3): mov %r15,%rax
6b22(3): mov %r15,%r14
6b25(3): ror $0x1,%r14
6b28(4): ror $0x8,%rax
6b2c(3): xor %r14,%rax
6b2f(3): mov %r15,%r14
6b32(4): shr $0x7,%r14
6b36(3): xor %r14,%rax
6b39(4): add (%rsp),%rax
6b3d(3): add %rax,%r12
6b40(5): mov 0x8(%rsp),%rax
6b45(3): mov %rax,%r15
6b48(4): ror $0x13,%r15
6b4c(3): mov %r15,%r14
6b4f(3): mov %rax,%r15
6b52(4): rol $0x3,%rax
6b56(3): xor %r14,%rax
6b59(4): shr $0x6,%r15
6b5d(a): mov $0x2944078676154940804,%r14
6b67(3): xor %r15,%rax
6b6a(4): lea 0x0(%r12,%rax,1),%r15
6b6e(3): mov %r9,%r12
6b71(3): xor %r8,%r12
6b74(3): mov %r12,%rax
6b77(3): add %r15,%r14
6b7a(8): mov %r15,0x130(%rsp)
6b82(3): and %rdi,%rax
6b85(3): add %r14,%r10
6b88(3): mov %rdx,%r14
6b8b(3): xor %r9,%rax
6b8e(3): and %r13,%r14
6b91(4): lea 0x0(%rax,%r10,1),%r12
6b95(3): mov %rdi,%r10
6b98(4): ror $0xe,%r10
6b9c(3): mov %r10,%rax
6b9f(3): mov %rdi,%r10
6ba2(4): ror $0x12,%r10
6ba6(3): xor %rax,%r10
6ba9(3): mov %rdi,%rax
6bac(4): rol $0x17,%rax
6bb0(3): xor %r10,%rax
6bb3(3): mov %r13,%r10
6bb6(3): add %r12,%rax
6bb9(3): mov %r13,%r12
6bbc(4): ror $0x1c,%r10
6bc0(4): rol $0x1e,%r12
6bc4(3): add %rax,%rsi
6bc7(3): xor %r10,%r12
6bca(3): mov %r13,%r10
6bcd(4): rol $0x19,%r10
6bd1(3): xor %r10,%r12
6bd4(3): mov %rdx,%r10
6bd7(3): or %r13,%r10
6bda(3): and %rcx,%r10
6bdd(3): or %r14,%r10
6be0(5): mov 0x18(%rsp),%r14
6be5(3): add %r12,%r10
6be8(3): add %rax,%r10
6beb(3): mov %r14,%r12
6bee(3): mov %r14,%rax
6bf1(3): ror $0x1,%r12
6bf4(4): ror $0x8,%rax
6bf8(3): xor %r12,%rax
6bfb(3): mov %r14,%r12
6bfe(4): shr $0x7,%r12
6c02(3): xor %r12,%rax
6c05(5): add 0x10(%rsp),%rax
6c0a(5): mov 0x40(%rsp),%r14
6c0f(3): mov %r14,%r12
6c12(3): add %rbp,%rax
6c15(3): mov %r14,%rbp
6c18(4): ror $0x13,%r12
6c1c(4): rol $0x3,%rbp
6c20(3): xor %r12,%rbp
6c23(3): mov %r14,%r12
6c26(a): mov $0x3659926193048069267,%r14
6c30(4): shr $0x6,%r12
6c34(3): xor %r12,%rbp
6c37(3): add %rax,%rbp
6c3a(3): mov %r8,%rax
6c3d(3): xor %rdi,%rax
6c40(3): add %rbp,%r14
6c43(8): mov %rbp,0x138(%rsp)
6c4b(3): and %rsi,%rax
6c4e(3): add %r14,%r9
6c51(3): mov %r13,%r14
6c54(3): xor %r8,%rax
6c57(4): lea 0x0(%rax,%r9,1),%r12
6c5b(3): mov %rsi,%r9
6c5e(4): ror $0xe,%r9
6c62(3): mov %r9,%rax
6c65(3): mov %rsi,%r9
6c68(4): ror $0x12,%r9
6c6c(3): xor %rax,%r9
6c6f(3): mov %rsi,%rax
6c72(4): rol $0x17,%rax
6c76(3): xor %r9,%rax
6c79(3): mov %r10,%r9
6c7c(3): add %r12,%rax
6c7f(3): mov %r10,%r12
6c82(4): ror $0x1c,%r9
6c86(4): rol $0x1e,%r12
6c8a(3): add %rax,%rcx
6c8d(3): xor %r9,%r12
6c90(3): mov %r10,%r9
6c93(4): rol $0x19,%r9
6c97(3): xor %r9,%r12
6c9a(3): mov %r13,%r9
6c9d(3): or %r10,%r9
6ca0(3): and %r10,%r14
6ca3(3): and %rdx,%r9
6ca6(3): or %r14,%r9
6ca9(5): mov 0x20(%rsp),%r14
6cae(3): add %r12,%r9
6cb1(3): add %rax,%r9
6cb4(3): mov %r14,%r12
6cb7(3): mov %r14,%rax
6cba(3): ror $0x1,%r12
6cbd(4): ror $0x8,%rax
6cc1(3): xor %r12,%rax
6cc4(3): mov %r14,%r12
6cc7(3): mov %r10,%r14
6cca(4): shr $0x7,%r12
6cce(3): xor %r12,%rax
6cd1(5): add 0x18(%rsp),%rax
6cd6(3): mov %r15,%r12
6cd9(4): ror $0x13,%r12
6cdd(3): add %rbx,%rax
6ce0(3): mov %r15,%rbx
6ce3(4): rol $0x3,%rbx
6ce7(3): xor %r12,%rbx
6cea(3): mov %r15,%r12
6ced(4): shr $0x6,%r12
6cf1(3): xor %r12,%rbx
6cf4(a): mov $0x4368137639120453308,%r12
6cfe(3): add %rax,%rbx
6d01(3): mov %rdi,%rax
6d04(3): xor %rsi,%rax
6d07(3): add %rbx,%r12
6d0a(8): mov %rbx,0x140(%rsp)
6d12(3): and %rcx,%rax
6d15(3): add %r12,%r8
6d18(3): xor %rdi,%rax
6d1b(4): lea 0x0(%rax,%r8,1),%rax
6d1f(3): mov %rcx,%r8
6d22(4): ror $0xe,%r8
6d26(3): mov %r8,%r12
6d29(3): mov %rcx,%r8
6d2c(4): ror $0x12,%r8
6d30(3): xor %r12,%r8
6d33(3): mov %rcx,%r12
6d36(4): rol $0x17,%r12
6d3a(3): xor %r12,%r8
6d3d(3): add %rax,%r8
6d40(3): mov %r9,%rax
6d43(4): ror $0x1c,%rax
6d47(3): add %r8,%rdx
6d4a(3): mov %rax,%r12
6d4d(3): mov %r9,%rax
6d50(4): rol $0x1e,%rax
6d54(3): and %r9,%r14
6d57(3): xor %r12,%rax
6d5a(3): mov %r9,%r12
6d5d(4): rol $0x19,%r12
6d61(3): xor %r12,%rax
6d64(3): mov %r10,%r12
6d67(3): or %r9,%r12
6d6a(3): and %r13,%r12
6d6d(3): or %r14,%r12
6d70(5): mov 0x48(%rsp),%r14
6d75(3): add %rax,%r12
6d78(3): add %r12,%r8
6d7b(3): mov %r14,%rax
6d7e(3): mov %r14,%r12
6d81(3): ror $0x1,%r12
6d84(4): ror $0x8,%rax
6d88(3): xor %r12,%rax
6d8b(3): mov %r14,%r12
6d8e(4): shr $0x7,%r12
6d92(3): xor %r12,%rax
6d95(5): add 0x20(%rsp),%rax
6d9a(3): add %r11,%rax
6d9d(3): mov %rbp,%r11
6da0(4): ror $0x13,%r11
6da4(3): mov %r11,%r12
6da7(3): mov %rbp,%r11
6daa(4): shr $0x6,%rbp
6dae(4): rol $0x3,%r11
6db2(3): xor %r12,%r11
6db5(3): mov %r9,%r12
6db8(3): xor %rbp,%r11
6dbb(a): mov $0x4836135668995329356,%rbp
6dc5(3): add %rax,%r11
6dc8(3): mov %rsi,%rax
6dcb(3): xor %rcx,%rax
6dce(3): add %r11,%rbp
6dd1(8): mov %r11,0x148(%rsp)
6dd9(3): and %rdx,%rax
6ddc(3): add %rbp,%rdi
6ddf(3): xor %rsi,%rax
6de2(3): add %rax,%rdi
6de5(3): mov %rdx,%rax
6de8(4): ror $0xe,%rax
6dec(3): mov %rax,%rbp
6def(3): mov %rdx,%rax
6df2(4): ror $0x12,%rax
6df6(3): xor %rbp,%rax
6df9(3): mov %rdx,%rbp
6dfc(4): rol $0x17,%rbp
6e00(3): and %r8,%r12
6e03(3): xor %rbp,%rax
6e06(3): add %rdi,%rax
6e09(3): mov %r8,%rdi
6e0c(4): ror $0x1c,%rdi
6e10(3): add %rax,%r13
6e13(3): mov %rdi,%rbp
6e16(3): mov %r8,%rdi
6e19(4): rol $0x1e,%rdi
6e1d(3): xor %rbp,%rdi
6e20(3): mov %r8,%rbp
6e23(4): rol $0x19,%rbp
6e27(3): xor %rbp,%rdi
6e2a(3): mov %r9,%rbp
6e2d(3): or %r8,%rbp
6e30(3): and %r10,%rbp
6e33(3): or %r12,%rbp
6e36(5): mov 0x28(%rsp),%r12
6e3b(3): add %rdi,%rbp
6e3e(3): add %rbp,%rax
6e41(3): mov %r12,%rdi
6e44(3): mov %r12,%rbp
6e47(3): ror $0x1,%rbp
6e4a(4): ror $0x8,%rdi
6e4e(3): xor %rbp,%rdi
6e51(3): mov %r12,%rbp
6e54(4): shr $0x7,%rbp
6e58(3): xor %rbp,%rdi
6e5b(3): add %r14,%rdi
6e5e(5): mov 0x38(%rsp),%r14
6e63(4): lea 0x0(%rdi,%r14,1),%rbp
6e67(3): mov %rbx,%rdi
6e6a(4): ror $0x13,%rdi
6e6e(3): mov %rdi,%r12
6e71(3): mov %rbx,%rdi
6e74(4): shr $0x6,%rbx
6e78(4): rol $0x3,%rdi
6e7c(3): xor %r12,%rdi
6e7f(3): mov %r8,%r12
6e82(3): xor %rbx,%rdi
6e85(3): mov %rcx,%rbx
6e88(3): add %rbp,%rdi
6e8b(3): xor %rdx,%rbx
6e8e(a): mov $0x5532061633213252278,%rbp
6e98(3): add %rdi,%rbp
6e9b(3): and %r13,%rbx
6e9e(8): mov %rdi,0x150(%rsp)
6ea6(3): xor %rcx,%rbx
6ea9(3): add %rbp,%rsi
6eac(3): add %rbx,%rsi
6eaf(3): mov %r13,%rbx
6eb2(3): and %rax,%r12
6eb5(4): ror $0xe,%rbx
6eb9(3): mov %rbx,%rbp
6ebc(3): mov %r13,%rbx
6ebf(4): ror $0x12,%rbx
6ec3(3): xor %rbp,%rbx
6ec6(3): mov %r13,%rbp
6ec9(4): rol $0x17,%rbp
6ecd(3): xor %rbp,%rbx
6ed0(3): add %rsi,%rbx
6ed3(3): mov %rax,%rsi
6ed6(4): ror $0x1c,%rsi
6eda(3): add %rbx,%r10
6edd(3): mov %rsi,%rbp
6ee0(3): mov %rax,%rsi
6ee3(4): rol $0x1e,%rsi
6ee7(3): xor %rbp,%rsi
6eea(3): mov %rax,%rbp
6eed(4): rol $0x19,%rbp
6ef1(3): xor %rbp,%rsi
6ef4(3): mov %r8,%rbp
6ef7(3): or %rax,%rbp
6efa(3): and %r9,%rbp
6efd(3): or %r12,%rbp
6f00(5): mov 0x50(%rsp),%r12
6f05(3): add %rsi,%rbp
6f08(3): add %rbp,%rbx
6f0b(3): mov %r11,%rbp
6f0e(3): mov %r12,%rsi
6f11(3): mov %r12,%r14
6f14(4): ror $0x13,%rbp
6f18(3): ror $0x1,%rsi
6f1b(4): ror $0x8,%r14
6f1f(3): xor %rsi,%r14
6f22(3): mov %r12,%rsi
6f25(5): mov 0x58(%rsp),%r12
6f2a(4): shr $0x7,%rsi
6f2e(3): xor %rsi,%r14
6f31(5): add 0x28(%rsp),%r14
6f36(3): mov %r11,%rsi
6f39(5): add 0x8(%rsp),%r14
6f3e(4): rol $0x3,%rsi
6f42(4): shr $0x6,%r11
6f46(3): xor %rbp,%rsi
6f49(a): mov $0x6448918945643986474,%rbp
6f53(3): xor %rsi,%r11
6f56(3): mov %rdx,%rsi
6f59(3): add %r14,%r11
6f5c(3): xor %r13,%rsi
6f5f(3): mov %rax,%r14
6f62(3): add %r11,%rbp
6f65(3): and %r10,%rsi
6f68(3): and %rbx,%r14
6f6b(3): xor %rdx,%rsi
6f6e(3): add %rbp,%rcx
6f71(3): mov %r10,%rbp
6f74(3): add %rsi,%rcx
6f77(3): mov %r10,%rsi
6f7a(4): ror $0xe,%rbp
6f7e(4): ror $0x12,%rsi
6f82(8): mov %r11,0x158(%rsp)
6f8a(3): xor %rbp,%rsi
6f8d(3): mov %r10,%rbp
6f90(4): rol $0x17,%rbp
6f94(3): xor %rbp,%rsi
6f97(3): mov %rbx,%rbp
6f9a(3): add %rcx,%rsi
6f9d(3): mov %rbx,%rcx
6fa0(4): ror $0x1c,%rbp
6fa4(4): rol $0x1e,%rcx
6fa8(3): add %rsi,%r9
6fab(3): xor %rbp,%rcx
6fae(3): mov %rbx,%rbp
6fb1(4): rol $0x19,%rbp
6fb5(3): xor %rbp,%rcx
6fb8(3): mov %rax,%rbp
6fbb(3): or %rbx,%rbp
6fbe(3): and %r8,%rbp
6fc1(3): or %r14,%rbp
6fc4(5): mov 0x30(%rsp),%r14
6fc9(3): add %rcx,%rbp
6fcc(3): add %rbp,%rsi
6fcf(3): mov %r14,%rcx
6fd2(3): mov %r14,%rbp
6fd5(3): ror $0x1,%rbp
6fd8(4): ror $0x8,%rcx
6fdc(3): xor %rbp,%rcx
6fdf(3): mov %r14,%rbp
6fe2(4): shr $0x7,%rbp
6fe6(3): xor %rbp,%rcx
6fe9(5): add 0x50(%rsp),%rcx
6fee(5): mov 0x40(%rsp),%rbp
6ff3(4): lea 0x0(%rcx,%rbp,1),%r14
6ff7(3): mov %rdi,%rcx
6ffa(4): ror $0x13,%rcx
6ffe(3): mov %rcx,%rbp
7001(3): mov %rdi,%rcx
7004(4): rol $0x3,%rcx
7008(3): xor %rbp,%rcx
700b(4): shr $0x6,%rdi
700f(3): mov %rbx,%rbp
7012(3): xor %rdi,%rcx
7015(a): mov $0x6902733635092675308,%rdi
701f(3): and %rsi,%rbp
7022(3): add %rcx,%r14
7025(3): mov %r13,%rcx
7028(3): xor %r10,%rcx
702b(8): mov %r14,0x160(%rsp)
7033(3): add %rdi,%r14
7036(3): and %r9,%rcx
7039(3): add %r14,%rdx
703c(3): mov %r9,%rdi
703f(3): xor %r13,%rcx
7042(4): ror $0xe,%rdi
7046(3): add %rdx,%rcx
7049(3): mov %r9,%rdx
704c(4): ror $0x12,%rdx
7050(3): xor %rdi,%rdx
7053(3): mov %r9,%rdi
7056(4): rol $0x17,%rdi
705a(3): xor %rdi,%rdx
705d(3): mov %rsi,%rdi
7060(3): add %rcx,%rdx
7063(3): mov %rsi,%rcx
7066(4): ror $0x1c,%rdi
706a(4): rol $0x1e,%rcx
706e(3): add %rdx,%r8
7071(3): xor %rdi,%rcx
7074(3): mov %rsi,%rdi
7077(4): rol $0x19,%rdi
707b(3): xor %rdi,%rcx
707e(3): mov %rbx,%rdi
7081(3): or %rsi,%rdi
7084(3): and %rax,%rdi
7087(3): or %rbp,%rdi
708a(3): mov %rsi,%rbp
708d(3): add %rcx,%rdi
7090(3): mov %r12,%rcx
7093(3): add %rdi,%rdx
7096(3): mov %r12,%rdi
7099(3): ror $0x1,%rcx
709c(4): ror $0x8,%rdi
70a0(3): xor %rcx,%rdi
70a3(3): mov %r12,%rcx
70a6(4): shr $0x7,%rcx
70aa(3): xor %rcx,%rdi
70ad(5): add 0x30(%rsp),%rdi
70b2(3): mov %r11,%rcx
70b5(4): rol $0x3,%rcx
70b9(3): and %rdx,%rbp
70bc(8): add %rdx,0x90(%rsp)
70c4(4): lea 0x0(%rdi,%r15,1),%r12
70c8(3): mov %r11,%r15
70cb(4): shr $0x6,%r11
70cf(4): ror $0x13,%r15
70d3(a): mov $0x7801388544844847127,%rdi
70dd(3): xor %r15,%rcx
70e0(3): xor %r11,%rcx
70e3(3): mov %rdx,%r11
70e6(3): add %rcx,%r12
70e9(3): mov %r10,%rcx
70ec(4): ror $0x1c,%r11
70f0(3): xor %r9,%rcx
70f3(8): mov %r12,0x168(%rsp)
70fb(3): add %rdi,%r12
70fe(3): and %r8,%rcx
7101(3): add %r12,%r13
7104(3): mov %r8,%rdi
7107(3): xor %r10,%rcx
710a(4): ror $0xe,%rdi
710e(3): add %rcx,%r13
7111(3): mov %r8,%rcx
7114(4): ror $0x12,%rcx
7118(3): xor %rdi,%rcx
711b(3): mov %r8,%rdi
711e(4): rol $0x17,%rdi
7122(3): xor %rdi,%rcx
7125(3): mov %rdx,%rdi
7128(4): rol $0x1e,%rdi
712c(3): add %r13,%rcx
712f(3): xor %r11,%rdi
7132(3): mov %rdx,%r11
7135(4): rol $0x19,%r11
7139(3): xor %r11,%rdi
713c(3): mov %rsi,%r11
713f(3): or %rdx,%r11
7142(3): and %rbx,%r11
7145(3): or %rbp,%r11
7148(8): mov 0x90(%rsp),%rbp
7150(3): add %r11,%rdi
7153(8): add 0xd0(%rsp),%rdi
715b(4): lea 0x0(%rdi,%rcx,1),%r15
715f(8): mov 0xe0(%rsp),%rdi
7167(8): mov %r15,0xd0(%rsp)
716f(3): mov %r15,(%rdi)
7172(4): mov %rbp,0x8(%rdi)
7176(3): mov %rdi,%rdx
7179(8): add %rsi,0x98(%rsp)
7181(8): mov 0x98(%rsp),%r13
7189(3): add %rcx,%rax
718c(8): add %rbx,0xa0(%rsp)
7194(3): mov %rdx,%rbx
7197(8): add %rax,0xa8(%rsp)
719f(3): mov %r15,%rax
71a2(4): mov %r13,0x10(%rdi)
71a6(8): mov 0xa0(%rsp),%rdi
71ae(8): add %r8,0xb0(%rsp)
71b6(8): add %r9,0xb8(%rsp)
71be(8): mov 0xa8(%rsp),%rsi
71c6(8): mov 0xb0(%rsp),%r12
71ce(8): add %r10,0xc0(%rsp)
71d6(3): mov %rdi,%rdx
71d9(4): mov %rdi,0x18(%rbx)
71dd(3): mov %rdx,%r8
71e0(3): mov %rsi,%r9
71e3(8): mov 0xb8(%rsp),%rdi
71eb(8): mov 0xc0(%rsp),%r10
71f3(4): mov %rsi,0x20(%rbx)
71f7(4): mov %r12,0x28(%rbx)
71fb(4): mov %rdi,0x30(%rbx)
71ff(4): mov %r10,0x38(%rbx)
7203(8): mov 0x88(%rsp),%rbx
720b(8): cmp %rbx,0xd8(%rsp)
7213(6): jnbe 0xffffc3fd(%rip)
7219(8): mov 0x178(%rsp),%rax
7221(9): xor $0x28,%rax
722a(2): jnz 0x14(%rip)
722c(7): add $0x188,%rsp
7233(1): pop %rbx
7234(1): pop %rbp
7235(2): pop %r12
7237(2): pop %r13
7239(2): pop %r14
723b(2): pop %r15
723d(1): ret near (%rsp)
723e(5): call 0xffffa452(%rip)

"sha512_conclude_ctx" :
7250(2): push %r12
7252(1): push %rbp
7253(1): push %rbx
7254(4): mov 0x50(%rdi),%rdx
7258(3): mov %rdi,%rbx
725b(4): mov 0x48(%rbx),%rax
725f(4): cmp $0x70,%rdx
7263(3): mov %rdx,%rcx
7266(3): sbb %rbp,%rbp
7269(4): and $0xffffff80,%rbp
726d(7): add $0x100,%rbp
7274(4): cmp $0x70,%rdx
7278(3): sbb %rsi,%rsi
727b(4): and $0xfffffff0,%rsi
727f(4): add $0x1f,%rsi
7283(4): cmp $0x70,%rdx
7287(3): sbb %rdi,%rdi
728a(3): xor %r8d,%r8d
728d(4): and $0xfffffff0,%rdi
7291(4): add $0x1e,%rdi
7295(4): add 0x40(%rbx),%rcx
7299(4): setb %r8b
729d(4): mov %rcx,0x40(%rbx)
72a1(3): test %r8,%r8
72a4(2): jz 0xa(%rip)
72a6(4): add $0x1,%rax
72aa(4): mov %rax,0x48(%rbx)
72ae(3): mov %rcx,%r8
72b1(4): shl/sal $0x3,%rax
72b5(4): lea 0x58(%rbx),%r12
72b9(4): shr $0x3d,%r8
72bd(4): shl/sal $0x3,%rcx
72c1(3): or %r8,%rax
72c4(3): bswap %rcx
72c7(3): bswap %rax
72ca(5): mov %rax,0x58(%rbx,%rdi,8)
72cf(3): mov %rbp,%rax
72d2(4): lea 0x0(%r12,%rdx,1),%rdi
72d6(3): sub %rdx,%rax
72d9(5): mov %rcx,0x58(%rbx,%rsi,8)
72de(7): lea 0x3f7b(%rip),%rsi
72e5(4): lea 0xfffffff0(%rax),%rdx
72e9(5): call 0xffffa487(%rip)
72ee(3): mov %rbx,%rdx
72f1(3): mov %rbp,%rsi
72f4(3): mov %r12,%rdi
72f7(1): pop %rbx
72f8(1): pop %rbp
72f9(2): pop %r12
72fb(5): jmp 0xffffc235(%rip)

"sha512_finish_ctx" :
7300(1): push %rbp
7301(1): push %rbx
7302(3): mov %rsi,%rbp
7305(3): mov %rdi,%rbx
7308(4): sub $0x8,%rsp
730c(5): call 0xffffff44(%rip)
7311(4): add $0x8,%rsp
7315(3): mov %rbp,%rsi
7318(3): mov %rbx,%rdi
731b(1): pop %rbx
731c(1): pop %rbp
731d(5): jmp 0xffffc1d3(%rip)

"sha384_finish_ctx" :
7330(1): push %rbp
7331(1): push %rbx
7332(3): mov %rsi,%rbp
7335(3): mov %rdi,%rbx
7338(4): sub $0x8,%rsp
733c(5): call 0xffffff14(%rip)
7341(4): add $0x8,%rsp
7345(3): mov %rbp,%rsi
7348(3): mov %rbx,%rdi
734b(1): pop %rbx
734c(1): pop %rbp
734d(5): jmp 0xffffc1c3(%rip)

"sha512_process_bytes" :
7360(2): push %r15
7362(2): push %r14
7364(2): push %r13
7366(2): push %r12
7368(3): mov %rdx,%r13
736b(1): push %rbp
736c(1): push %rbx
736d(3): mov %rsi,%r12
7370(3): mov %rdi,%rbx
7373(4): sub $0x8,%rsp
7377(4): mov 0x50(%rdx),%rbp
737b(3): test %rbp,%rbp
737e(6): jnz 0x13a(%rip)
7384(4): cmp $0x7f,%r12
7388(6): jbe 0x114(%rip)
738e(3): test $0x7,%bl
7391(6): jz 0xef(%rip)
7397(7): cmp $0x80,%r12
739e(4): lea 0x58(%r13),%rbp
73a2(6): jz 0x8a(%rip)
73a8(8): lea 0xffffff7f(%r12),%r15
73b0(4): shr $0x7,%r15
73b4(4): lea 0x1(%r15),%r14
73b8(4): shl/sal $0x7,%r14
73bc(3): add %rbx,%r14
73bf(1): nop 
73c0(4): movdqu (%rbx),%xmm0
73c4(3): mov %r13,%rdx
73c7(5): mov $0x80,%esi
73cc(3): mov %rbp,%rdi
73cf(4): sub $0xffffff80,%rbx
73d3(4): movups %xmm0,0x0(%rbp)
73d7(5): movdqu 0xffffff90(%rbx),%xmm0
73dc(4): movups %xmm0,0x10(%rbp)
73e0(5): movdqu 0xffffffa0(%rbx),%xmm0
73e5(4): movups %xmm0,0x20(%rbp)
73e9(5): movdqu 0xffffffb0(%rbx),%xmm0
73ee(4): movups %xmm0,0x30(%rbp)
73f2(5): movdqu 0xffffffc0(%rbx),%xmm0
73f7(4): movups %xmm0,0x40(%rbp)
73fb(5): movdqu 0xffffffd0(%rbx),%xmm0
7400(4): movups %xmm0,0x50(%rbp)
7404(5): movdqu 0xffffffe0(%rbx),%xmm0
7409(4): movups %xmm0,0x60(%rbp)
740d(5): movdqu 0xfffffff0(%rbx),%xmm0
7412(4): movups %xmm0,0x70(%rbp)
7416(5): call 0xffffc11a(%rip)
741b(3): cmp %r14,%rbx
741e(2): jnz 0xffffffa2(%rip)
7420(3): neg %r15
7423(4): shl/sal $0x7,%r15
7427(5): lea 0xffffff80(%r12,%r15,1),%r12
742c(4): mov 0x50(%r13),%rdx
7430(4): cmp $0x8,%r12d
7434(5): lea 0x0(%rbp,%rdx,1),%rsi
7439(6): jnb 0xc7(%rip)
743f(4): test $0x4,%r12b
7443(6): jnz 0x1e6(%rip)
7449(3): test %r12d,%r12d
744c(2): jz 0x11(%rip)
744e(3): movzx (%rbx),%eax
7451(4): test $0x2,%r12b
7455(2): mov %al,(%rsi)
7457(6): jnz 0x1e6(%rip)
745d(3): add %rdx,%r12
7460(4): cmp $0x7f,%r12
7464(6): jnbe 0xd9(%rip)
746a(4): mov %r12,0x50(%r13)
746e(4): add $0x8,%rsp
7472(1): pop %rbx
7473(1): pop %rbp
7474(2): pop %r12
7476(2): pop %r13
7478(2): pop %r14
747a(2): pop %r15
747c(1): ret near (%rsp)
747d(3): nop (%rax)
7480(3): mov %r12,%rbp
7483(3): mov %rbx,%rdi
7486(3): mov %r13,%rdx
7489(4): and $0xffffff80,%rbp
748d(4): and $0x7f,%r12d
7491(3): mov %rbp,%rsi
7494(3): add %rbp,%rbx
7497(5): call 0xffffc099(%rip)
749c(3): test %r12,%r12
749f(6): jnz 0x181(%rip)
74a5(4): add $0x8,%rsp
74a9(1): pop %rbx
74aa(1): pop %rbp
74ab(2): pop %r12
74ad(2): pop %r13
74af(2): pop %r14
74b1(2): pop %r15
74b3(1): ret near (%rsp)
74b4(4): nop 0x0(%rax)
74b8(6): mov $0x100,%r14d
74be(4): lea 0x58(%rdx),%r15
74c2(3): sub %rbp,%r14
74c5(3): cmp %rsi,%r14
74c8(4): lea 0x0(%r15,%rbp,1),%rdi
74cc(4): cmovnbe %rsi,%r14
74d0(3): mov %rbx,%rsi
74d3(3): mov %r14,%rdx
74d6(5): call 0xffffa29a(%rip)
74db(4): mov 0x50(%r13),%rsi
74df(3): add %r14,%rsi
74e2(7): cmp $0x80,%rsi
74e9(4): mov %rsi,0x50(%r13)
74ed(6): jnbe 0x83(%rip)
74f3(3): add %r14,%rbx
74f6(3): sub %r14,%r12
74f9(5): jmp 0xfffffe8b(%rip)
74fe(2): nop 
7500(3): mov (%rbx),%rax
7503(4): lea 0x8(%rsi),%rdi
7507(4): and $0xfffffff8,%rdi
750b(3): mov %rax,(%rsi)
750e(3): mov %r12d,%eax
7511(5): mov 0xfffffff8(%rbx,%rax,1),%rcx
7516(5): mov %rcx,0xfffffff8(%rsi,%rax,1)
751b(3): mov %rsi,%rcx
751e(3): mov %rbx,%rsi
7521(3): sub %rdi,%rcx
7524(3): sub %rcx,%rsi
7527(3): add %r12d,%ecx
752a(3): add %rdx,%r12
752d(3): shr $0x3,%ecx
7530(4): cmp $0x7f,%r12
7534(3): REP movsd rsi(%ds,10),rdi(%es,10)
7537(6): jbe 0xffffff33(%rip)
753d(3): mov %r13,%rdx
7540(3): mov %rbp,%rdi
7543(5): mov $0x80,%esi
7548(5): call 0xffffbfe8(%rip)
754d(4): add $0xffffff80,%r12
7551(7): lea 0xd8(%r13),%rsi
7558(3): mov %rbp,%rdi
755b(3): mov %r12,%rdx
755e(5): call 0xffffa212(%rip)
7563(5): jmp 0xffffff07(%rip)
7568(8): nop 0x0(%rax,%rax,1)
7570(4): and $0xffffff80,%rsi
7574(3): mov %r13,%rdx
7577(3): mov %r15,%rdi
757a(5): call 0xffffbfb6(%rip)
757f(4): mov 0x50(%r13),%rcx
7583(3): add %r14,%rbp
7586(4): and $0xffffff80,%rbp
758a(4): lea 0x0(%r15,%rbp,1),%rsi
758e(3): and $0x7f,%ecx
7591(3): cmp $0x8,%ecx
7594(4): mov %rcx,0x50(%r13)
7598(2): jnb 0x38(%rip)
759a(3): test $0x4,%cl
759d(2): jnz 0x68(%rip)
759f(2): test %ecx,%ecx
75a1(6): jz 0xffffff52(%rip)
75a7(3): movzx (%rsi),%eax
75aa(3): test $0x2,%cl
75ad(4): mov %al,0x58(%r13)
75b1(6): jz 0xffffff42(%rip)
75b7(2): mov %ecx,%ecx
75b9(5): movzx 0xfffffffe(%rsi,%rcx,1),%eax
75be(6): mov %ax,0xfffffffe(%r15,%rcx,1)
75c4(5): jmp 0xffffff2f(%rip)
75c9(7): nop 0x0(%rax)
75d0(3): mov (%rsi),%rax
75d3(4): lea 0x60(%r13),%rdi
75d7(4): and $0xfffffff8,%rdi
75db(4): mov %rax,0x58(%r13)
75df(2): mov %ecx,%eax
75e1(5): mov 0xfffffff8(%rsi,%rax,1),%rdx
75e6(5): mov %rdx,0xfffffff8(%r15,%rax,1)
75eb(3): mov %r15,%rax
75ee(3): sub %rdi,%rax
75f1(2): add %eax,%ecx
75f3(3): sub %rax,%rsi
75f6(2): mov %ecx,%eax
75f8(3): shr $0x3,%eax
75fb(2): mov %eax,%ecx
75fd(3): REP movsd rsi(%ds,10),rdi(%es,10)
7600(5): jmp 0xfffffef3(%rip)
7605(2): mov (%rsi),%eax
7607(2): mov %ecx,%ecx
7609(4): mov %eax,0x58(%r13)
760d(4): mov 0xfffffffc(%rsi,%rcx,1),%eax
7611(5): mov %eax,0xfffffffc(%r15,%rcx,1)
7616(5): jmp 0xfffffedd(%rip)
761b(5): nop 0x0(%rax,%rax,1)
7620(4): lea 0x58(%r13),%rbp
7624(5): jmp 0xfffffe08(%rip)
7629(2): mov (%rbx),%eax
762b(2): mov %eax,(%rsi)
762d(3): mov %r12d,%eax
7630(4): mov 0xfffffffc(%rbx,%rax,1),%ecx
7634(4): mov %ecx,0xfffffffc(%rsi,%rax,1)
7638(5): jmp 0xfffffe25(%rip)
763d(3): mov %r12d,%eax
7640(5): movzx 0xfffffffe(%rbx,%rax,1),%ecx
7645(5): mov %cx,0xfffffffe(%rsi,%rax,1)
764a(5): jmp 0xfffffe13(%rip)

"sha512_buffer" :
7650(1): push %rbp
7651(1): push %rbx
7652(3): mov %rdx,%rbp
7655(7): sub $0x168,%rsp
765c(9): mov $0x28,%rax
7665(8): mov %rax,0x158(%rsp)
766d(2): xor %eax,%eax
766f(a): mov $0x7640891576956012808,%rax
7679(3): mov %rsp,%rbx
767c(9): mov $0x0,0x48(%rsp)
7685(4): mov %rax,(%rsp)
7689(a): mov $0x-4942790177534073029,%rax
7693(3): mov %rbx,%rdx
7696(5): mov %rax,0x8(%rsp)
769b(a): mov $0x4354685564936845355,%rax
76a5(9): mov $0x0,0x40(%rsp)
76ae(5): mov %rax,0x10(%rsp)
76b3(a): mov $0x-6534734903238641935,%rax
76bd(9): mov $0x0,0x50(%rsp)
76c6(5): mov %rax,0x18(%rsp)
76cb(a): mov $0x5840696475078001361,%rax
76d5(5): mov %rax,0x20(%rsp)
76da(a): mov $0x-7276294671716946913,%rax
76e4(5): mov %rax,0x28(%rsp)
76e9(a): mov $0x2270897969802886507,%rax
76f3(5): mov %rax,0x30(%rsp)
76f8(a): mov $0x6620516959819538809,%rax
7702(5): mov %rax,0x38(%rsp)
7707(5): call 0xfffffc59(%rip)
770c(3): mov %rbx,%rdi
770f(5): call 0xfffffb41(%rip)
7714(3): mov %rbp,%rsi
7717(3): mov %rbx,%rdi
771a(5): call 0xffffbdd6(%rip)
771f(8): mov 0x158(%rsp),%rcx
7727(9): xor $0x28,%rcx
7730(2): jnz 0xc(%rip)
7732(7): add $0x168,%rsp
7739(1): pop %rbx
773a(1): pop %rbp
773b(1): ret near (%rsp)
773c(5): call 0xffff9f54(%rip)

"sha384_buffer" :
7750(1): push %rbp
7751(1): push %rbx
7752(3): mov %rdx,%rbp
7755(7): sub $0x168,%rsp
775c(9): mov $0x28,%rax
7765(8): mov %rax,0x158(%rsp)
776d(2): xor %eax,%eax
776f(a): mov $0x-3766243637369397544,%rax
7779(3): mov %rsp,%rbx
777c(9): mov $0x0,0x48(%rsp)
7785(4): mov %rax,(%rsp)
7789(a): mov $0x7105036623409894663,%rax
7793(3): mov %rbx,%rdx
7796(5): mov %rax,0x8(%rsp)
779b(a): mov $0x-7973340178411365097,%rax
77a5(9): mov $0x0,0x40(%rsp)
77ae(5): mov %rax,0x10(%rsp)
77b3(a): mov $0x1526699215303891257,%rax
77bd(9): mov $0x0,0x50(%rsp)
77c6(5): mov %rax,0x18(%rsp)
77cb(a): mov $0x7436329637833083697,%rax
77d5(5): mov %rax,0x20(%rsp)
77da(a): mov $0x-8163818279084223215,%rax
77e4(5): mov %rax,0x28(%rsp)
77e9(a): mov $0x-2662702644619276377,%rax
77f3(5): mov %rax,0x30(%rsp)
77f8(a): mov $0x5167115440072839076,%rax
7802(5): mov %rax,0x38(%rsp)
7807(5): call 0xfffffb59(%rip)
780c(3): mov %rbx,%rdi
780f(5): call 0xfffffa41(%rip)
7814(3): mov %rbp,%rsi
7817(3): mov %rbx,%rdi
781a(5): call 0xffffbcf6(%rip)
781f(8): mov 0x158(%rsp),%rcx
7827(9): xor $0x28,%rcx
7830(2): jnz 0xc(%rip)
7832(7): add $0x168,%rsp
7839(1): pop %rbx
783a(1): pop %rbp
783b(1): ret near (%rsp)
783c(5): call 0xffff9e54(%rip)

"shaxxx_stream.isra.1" :
7850(2): push %r15
7852(2): push %r14
7854(3): mov %rcx,%r14
7857(2): push %r13
7859(2): push %r12
785b(3): mov %rdx,%r12
785e(1): push %rbp
785f(1): push %rbx
7860(3): mov %rdi,%rbx
7863(5): mov $0x8048,%edi
7868(7): sub $0x178,%rsp
786f(9): mov $0x28,%rax
7878(8): mov %rax,0x168(%rsp)
7880(2): xor %eax,%eax
7882(5): mov %rsi,0x8(%rsp)
7887(5): call 0xffff9f09(%rip)
788c(3): test %rax,%rax
788f(6): jz 0xd1(%rip)
7895(5): lea 0x10(%rsp),%r13
789a(3): mov %rax,%rbp
789d(3): mov %r13,%rdi
78a0(3): call %r12
78a3(6): mov $0x8000,%r12d
78a9(3): xor %r15d,%r15d
78ac(2): jmp 0x2d(%rip)
78ae(2): nop 
78b0(5): lea 0x0(%rbp,%r15,1),%rdi
78b5(3): mov %r12,%rdx
78b8(3): mov %rbx,%rcx
78bb(3): sub %r15,%rdx
78be(5): mov $0x1,%esi
78c3(5): call 0xffff9d5d(%rip)
78c8(3): add %rax,%r15
78cb(7): cmp $0x8000,%r15
78d2(2): jz 0x4e(%rip)
78d4(3): test %rax,%rax
78d7(2): jz 0x61(%rip)
78d9(3): test $0x10,(%rbx)
78dc(2): jz 0xffffffd4(%rip)
78de(3): test %r15,%r15
78e1(2): jnz 0x6f(%rip)
78e3(5): mov 0x8(%rsp),%rsi
78e8(3): mov %r13,%rdi
78eb(3): call %r14
78ee(3): mov %rbp,%rdi
78f1(5): call 0xffff9cbf(%rip)
78f6(2): xor %eax,%eax
78f8(8): mov 0x168(%rsp),%rcx
7900(9): xor $0x28,%rcx
7909(2): jnz 0x5e(%rip)
790b(7): add $0x178,%rsp
7912(1): pop %rbx
7913(1): pop %rbp
7914(2): pop %r12
7916(2): pop %r13
7918(2): pop %r14
791a(2): pop %r15
791c(1): ret near (%rsp)
791d(3): nop (%rax)
7920(3): mov %r13,%rdx
7923(5): mov $0x8000,%esi
7928(3): mov %rbp,%rdi
792b(5): call 0xffffbc05(%rip)
7930(5): jmp 0xffffff79(%rip)
7935(3): nop (%rax)
7938(3): test $0x20,(%rbx)
793b(2): jz 0xffffffa3(%rip)
793d(3): mov %rbp,%rdi
7940(5): call 0xffff9c70(%rip)
7945(5): mov $0x1,%eax
794a(2): jmp 0xffffffae(%rip)
794c(4): nop 0x0(%rax)
7950(3): mov %r13,%rdx
7953(3): mov %r15,%rsi
7956(3): mov %rbp,%rdi
7959(5): call 0xfffffa07(%rip)
795e(2): jmp 0xffffff85(%rip)
7960(5): mov $0x1,%eax
7965(2): jmp 0xffffff93(%rip)
7967(5): call 0xffff9d29(%rip)

"sha512_stream" :
7970(7): lea 0xfffff989(%rip),%rcx
7977(7): lea 0xffffba52(%rip),%rdx
797e(5): jmp 0xfffffed2(%rip)

"sha384_stream" :
7990(7): lea 0xfffff999(%rip),%rcx
7997(7): lea 0xffffbac2(%rip),%rdx
799e(5): jmp 0xfffffeb2(%rip)

"fadvise" :
79c0(3): test %rdi,%rdi
79c3(2): jz 0x1d(%rip)
79c5(1): push %rbx
79c6(2): mov %esi,%ebx
79c8(5): call 0xffff9db8(%rip)
79cd(2): mov %ebx,%ecx
79cf(2): xor %edx,%edx
79d1(2): xor %esi,%esi
79d3(1): pop %rbx
79d4(2): mov %eax,%edi
79d6(5): jmp 0xffff9d4a(%rip)
79db(5): nop 0x0(%rax,%rax,1)
79e0(2): REP ret near (%rsp)

"fopen_safer" :
79f0(2): push %r12
79f2(1): push %rbp
79f3(3): mov %rsi,%rbp
79f6(1): push %rbx
79f7(5): call 0xffff9e59(%rip)
79fc(3): test %rax,%rax
79ff(3): mov %rax,%rbx
7a02(2): jz 0xf(%rip)
7a04(3): mov %rax,%rdi
7a07(5): call 0xffff9d79(%rip)
7a0c(3): cmp $0x2,%eax
7a0f(2): jbe 0x11(%rip)
7a11(3): mov %rbx,%rax
7a14(1): pop %rbx
7a15(1): pop %rbp
7a16(2): pop %r12
7a18(1): ret near (%rsp)
7a19(7): nop 0x0(%rax)
7a20(2): mov %eax,%edi
7a22(5): call 0x1d9e(%rip)
7a27(2): test %eax,%eax
7a29(3): mov %eax,%r12d
7a2c(2): js 0x3c(%rip)
7a2e(3): mov %rbx,%rdi
7a31(5): call 0x264f(%rip)
7a36(2): test %eax,%eax
7a38(2): jnz 0x15(%rip)
7a3a(3): mov %rbp,%rsi
7a3d(3): mov %r12d,%edi
7a40(5): call 0xffff9db0(%rip)
7a45(3): test %rax,%rax
7a48(3): mov %rax,%rbx
7a4b(2): jnz 0xffffffc6(%rip)
7a4d(5): call 0xffff9b83(%rip)
7a52(2): mov (%rax),%ebp
7a54(3): mov %rax,%rbx
7a57(3): mov %r12d,%edi
7a5a(5): call 0xffff9cb6(%rip)
7a5f(2): mov %ebp,(%rbx)
7a61(2): xor %ebx,%ebx
7a63(2): jmp 0xffffffae(%rip)
7a65(3): nop (%rax)
7a68(5): call 0xffff9b68(%rip)
7a6d(3): mov (%rax),%r12d
7a70(3): mov %rax,%rbp
7a73(3): mov %rbx,%rdi
7a76(5): call 0x260a(%rip)
7a7b(2): xor %ebx,%ebx
7a7d(4): mov %r12d,0x0(%rbp)
7a81(2): jmp 0xffffff90(%rip)

"set_program_name" :
7a90(3): test %rdi,%rdi
7a93(1): push %rbx
7a94(2): jz 0x79(%rip)
7a96(5): mov $0x2f,%esi
7a9b(3): mov %rdi,%rbx
7a9e(5): call 0xffff9c42(%rip)
7aa3(3): test %rax,%rax
7aa6(2): jz 0x57(%rip)
7aa8(4): lea 0x1(%rax),%r8
7aac(3): mov %r8,%rdx
7aaf(3): sub %rbx,%rdx
7ab2(4): cmp $0x6,%rdx
7ab6(2): jle 0x47(%rip)
7ab8(4): lea 0xfffffffa(%rax),%rsi
7abc(7): lea 0x3855(%rip),%rdi
7ac3(5): mov $0x7,%ecx
7ac8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
7aca(3): setnbe %dl
7acd(3): sbb $0x0,%dl
7ad0(2): test %dl,%dl
7ad2(2): jnz 0x2b(%rip)
7ad4(7): lea 0x3845(%rip),%rdi
7adb(5): mov $0x3,%ecx
7ae0(3): mov %r8,%rsi
7ae3(3): mov %r8,%rbx
7ae6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
7ae8(3): setnbe %dl
7aeb(3): sbb $0x0,%dl
7aee(2): test %dl,%dl
7af0(2): jnz 0xd(%rip)
7af2(4): lea 0x4(%rax),%rbx
7af6(7): mov %rbx,0x2065a3(%rip)
7afd(7): mov %rbx,0x20661c(%rip)
7b04(7): mov %rbx,0x2065b5(%rip)
7b0b(1): pop %rbx
7b0c(1): ret near (%rsp)
7b0d(7): mov 0x2065cc(%rip),%rcx
7b14(7): lea 0x37c5(%rip),%rdi
7b1b(5): mov $0x37,%edx
7b20(5): mov $0x1,%esi
7b25(5): call 0xffff9d6b(%rip)
7b2a(5): call 0xffff9a96(%rip)

"gettext_quote.part.1" :
7b30(1): push %rbp
7b31(1): push %rbx
7b32(3): mov %rdi,%rbp
7b35(2): mov %esi,%ebx
7b37(4): sub $0x8,%rsp
7b3b(5): call 0x2a55(%rip)
7b40(3): movzx (%rax),%edx
7b43(3): and $0xdf,%edx
7b46(3): cmp $0x55,%dl
7b49(2): jz 0x77(%rip)
7b4b(3): cmp $0x47,%dl
7b4e(2): jz 0x22(%rip)
7b50(7): lea 0x37dc(%rip),%rax
7b57(7): lea 0x37d7(%rip),%rdx
7b5e(3): cmp $0x9,%ebx
7b61(4): cmovne %rdx,%rax
7b65(4): add $0x8,%rsp
7b69(1): pop %rbx
7b6a(1): pop %rbp
7b6b(1): ret near (%rsp)
7b6c(4): nop 0x0(%rax)
7b70(4): movzx 0x1(%rax),%edx
7b74(3): and $0xdf,%edx
7b77(3): cmp $0x42,%dl
7b7a(2): jnz 0xffffffd6(%rip)
7b7c(4): cmp $0x31,0x2(%rax)
7b80(2): jnz 0xffffffd0(%rip)
7b82(4): cmp $0x38,0x3(%rax)
7b86(2): jnz 0xffffffca(%rip)
7b88(4): cmp $0x30,0x4(%rax)
7b8c(2): jnz 0xffffffc4(%rip)
7b8e(4): cmp $0x33,0x5(%rax)
7b92(2): jnz 0xffffffbe(%rip)
7b94(4): cmp $0x30,0x6(%rax)
7b98(2): jnz 0xffffffb8(%rip)
7b9a(4): cmp $0x0,0x7(%rax)
7b9e(2): jnz 0xffffffb2(%rip)
7ba0(4): cmp $0x60,0x0(%rbp)
7ba4(7): lea 0x3781(%rip),%rax
7bab(7): lea 0x377e(%rip),%rdx
7bb2(4): cmovne %rdx,%rax
7bb6(4): add $0x8,%rsp
7bba(1): pop %rbx
7bbb(1): pop %rbp
7bbc(1): ret near (%rsp)
7bbd(3): nop (%rax)
7bc0(4): movzx 0x1(%rax),%edx
7bc4(3): and $0xdf,%edx
7bc7(3): cmp $0x54,%dl
7bca(2): jnz 0xffffff86(%rip)
7bcc(4): movzx 0x2(%rax),%edx
7bd0(3): and $0xdf,%edx
7bd3(3): cmp $0x46,%dl
7bd6(6): jnz 0xffffff7a(%rip)
7bdc(4): cmp $0x2d,0x3(%rax)
7be0(6): jnz 0xffffff70(%rip)
7be6(4): cmp $0x38,0x4(%rax)
7bea(6): jnz 0xffffff66(%rip)
7bf0(4): cmp $0x0,0x5(%rax)
7bf4(6): jnz 0xffffff5c(%rip)
7bfa(4): cmp $0x60,0x0(%rbp)
7bfe(7): lea 0x371f(%rip),%rax
7c05(7): lea 0x371c(%rip),%rdx
7c0c(4): cmovne %rdx,%rax
7c10(4): add $0x8,%rsp
7c14(1): pop %rbx
7c15(1): pop %rbp
7c16(1): ret near (%rsp)

"quotearg_buffer_restyled" :
7c20(2): push %r15
7c22(2): push %r14
7c24(3): mov %r8d,%r15d
7c27(2): push %r13
7c29(2): push %r12
7c2b(3): mov %rdi,%r14
7c2e(1): push %rbp
7c2f(1): push %rbx
7c30(3): mov %r9d,%ebx
7c33(3): mov %rsi,%r13
7c36(3): mov %rcx,%rbp
7c39(3): and $0x2,%ebx
7c3c(7): sub $0xb8,%rsp
7c43(8): mov 0xf0(%rsp),%rax
7c4b(5): mov %rdx,0x10(%rsp)
7c50(5): mov %r8d,0x8(%rsp)
7c55(5): mov %r9d,0x78(%rsp)
7c5a(5): mov %rax,0x20(%rsp)
7c5f(8): mov 0xf8(%rsp),%rax
7c67(5): mov %rax,0x68(%rsp)
7c6c(8): mov 0x100(%rsp),%rax
7c74(5): mov %rax,0x60(%rsp)
7c79(9): mov $0x28,%rax
7c82(8): mov %rax,0xa8(%rsp)
7c8a(2): xor %eax,%eax
7c8c(5): call 0xffff99e4(%rip)
7c91(4): cmp $0xa,%r15d
7c95(5): mov %rax,0x58(%rsp)
7c9a(6): jnbe 0x11b5(%rip)
7ca0(7): lea 0x36f9(%rip),%rcx
7ca7(3): mov %r15d,%edx
7caa(4): movsxd 0x0(%rcx,%rdx,4),%rax
7cae(3): add %rcx,%rax
7cb1(2): jmp %rax
7cb3(5): mov $0x1,0xe(%rsp)
7cb8(5): mov $0x0,0x7c(%rsp)
7cbd(3): xor %r12d,%r12d
7cc0(9): mov $0x0,0x50(%rsp)
7cc9(5): mov $0x1,0xf(%rsp)
7cce(5): mov $0x0,0xd(%rsp)
7cd3(7): lea 0x365b(%rip),%rax
7cda(9): mov $0x1,0x18(%rsp)
7ce3(3): xor %r15d,%r15d
7ce6(8): mov $0x2,0x8(%rsp)
7cee(5): mov %rax,0x48(%rsp)
7cf3(3): xor %r11d,%r11d
7cf6(3): mov %rbp,%rax
7cf9(3): mov %r12d,%r8d
7cfc(3): mov %r11,%rbp
7cff(3): mov %rax,%r11
7d02(6): nop 0x0(%rax,%rax,1)
7d08(3): cmp %rbp,%r11
7d0b(4): setnz %r12b
7d0f(4): cmp $0xffffffff,%r11
7d13(2): jnz 0xf(%rip)
7d15(5): mov 0x10(%rsp),%rax
7d1a(4): cmp $0x0,0x0(%rax,%rbp,1)
7d1e(4): setnz %r12b
7d22(3): test %r12b,%r12b
7d25(6): jz 0x65b(%rip)
7d2b(5): cmp $0x2,0x8(%rsp)
7d30(5): mov 0x10(%rsp),%rdi
7d35(4): lea 0x0(%rdi,%rbp,1),%r9
7d39(3): setnz %al
7d3c(4): and 0xd(%rsp),%al
7d40(3): mov %eax,%r10d
7d43(6): jz 0xad(%rip)
7d49(5): mov 0x18(%rsp),%rax
7d4e(3): test %rax,%rax
7d51(6): jz 0x42f(%rip)
7d57(4): cmp $0xffffffff,%r11
7d5b(5): lea 0x0(%rbp,%rax,1),%rbx
7d60(2): jnz 0x30(%rip)
7d62(4): cmp $0x1,%rax
7d66(2): jbe 0x2a(%rip)
7d68(5): mov %r8b,0x38(%rsp)
7d6d(5): mov %r10b,0x30(%rsp)
7d72(5): mov %r9,0x28(%rsp)
7d77(5): call 0xffff9909(%rip)
7d7c(6): movzx 0x38(%rsp),%r8d
7d82(6): movzx 0x30(%rsp),%r10d
7d88(3): mov %rax,%r11
7d8b(5): mov 0x28(%rsp),%r9
7d90(3): cmp %r11,%rbx
7d93(5): mov %r10b,0x28(%rsp)
7d98(6): jnbe 0x5b8(%rip)
7d9e(5): mov 0x18(%rsp),%rdx
7da3(5): mov 0x48(%rsp),%rsi
7da8(3): mov %r9,%rdi
7dab(5): mov %r11,0x40(%rsp)
7db0(5): mov %r8b,0x38(%rsp)
7db5(5): mov %r9,0x30(%rsp)
7dba(5): call 0xffff9976(%rip)
7dbf(2): test %eax,%eax
7dc1(5): mov 0x30(%rsp),%r9
7dc6(6): movzx 0x38(%rsp),%r8d
7dcc(5): mov 0x40(%rsp),%r11
7dd1(6): jnz 0x57f(%rip)
7dd7(5): cmp $0x0,0xf(%rsp)
7ddc(6): movzx 0x28(%rsp),%r10d
7de2(6): jnz 0xf83(%rip)
7de8(8): nop 0x0(%rax,%rax,1)
7df0(4): movzx (%r9),%ebx
7df4(3): cmp $0x7e,%bl
7df7(6): jnbe 0x321(%rip)
7dfd(7): lea 0x35c8(%rip),%rcx
7e04(3): movzx %bl,%edx
7e07(4): movsxd 0x0(%rcx,%rdx,4),%rax
7e0b(3): add %rcx,%rax
7e0e(2): jmp %rax
7e10(3): xor %r10d,%r10d
7e13(4): cmp $0x1,%r11
7e17(3): setnz %al
7e1a(4): cmp $0xffffffff,%r11
7e1e(2): jnz 0xe(%rip)
7e20(5): mov 0x10(%rsp),%rax
7e25(4): cmp $0x0,0x1(%rax)
7e29(3): setnz %al
7e2c(5): cmp $0x2,0x8(%rsp)
7e31(3): setz %dl
7e34(2): test %al,%al
7e36(6): jz 0x252(%rip)
7e3c(3): xor %r12d,%r12d
7e3f(2): xor %eax,%eax
7e41(7): nop 0x0(%rax)
7e48(5): cmp $0x1,0xd(%rsp)
7e4d(6): jnz 0x115(%rip)
7e53(2): test %dl,%dl
7e55(6): jnz 0x10d(%rip)
7e5b(5): mov 0x20(%rsp),%rsi
7e60(3): test %rsi,%rsi
7e63(2): jz 0x16(%rip)
7e65(2): mov %ebx,%edx
7e67(3): shr $0x5,%dl
7e6a(3): movzx %dl,%edx
7e6d(3): mov 0x0(%rsi,%rdx,4),%edx
7e70(3): bt %ebx,%edx
7e73(6): jb 0x150(%rip)
7e79(3): test %r10b,%r10b
7e7c(6): jnz 0x147(%rip)
7e82(3): xor $0x1,%eax
7e85(4): add $0x1,%rbp
7e89(3): and %r8d,%eax
7e8c(2): test %al,%al
7e8e(2): jz 0x22(%rip)
7e90(3): cmp %r15,%r13
7e93(2): jbe 0x7(%rip)
7e95(5): mov $0x27,0x0(%r14,%r15,1)
7e9a(4): lea 0x1(%r15),%rax
7e9e(3): cmp %rax,%r13
7ea1(2): jbe 0x8(%rip)
7ea3(6): mov $0x27,0x1(%r14,%r15,1)
7ea9(4): add $0x2,%r15
7ead(3): xor %r8d,%r8d
7eb0(3): cmp %r13,%r15
7eb3(2): jnb 0x6(%rip)
7eb5(4): mov %bl,0x0(%r14,%r15,1)
7eb9(5): movzx 0xe(%rsp),%edi
7ebe(4): add $0x1,%r15
7ec2(5): mov $0x0,%eax
7ec7(3): test %r12b,%r12b
7eca(3): cmove %eax,%edi
7ecd(5): mov %dil,0xe(%rsp)
7ed2(5): jmp 0xfffffe36(%rip)
7ed7(9): nop 0x0(%rax,%rax,1)
7ee0(3): xor %r10d,%r10d
7ee3(4): mov 0x8(%rsp),%eax
7ee7(3): cmp $0x2,%eax
7eea(6): jz 0x5be(%rip)
7ef0(3): cmp $0x5,%eax
7ef3(6): jz 0x575(%rip)
7ef9(3): cmp $0x2,%eax
7efc(5): mov $0x3f,%ebx
7f01(3): setz %dl
7f04(3): xor %r12d,%r12d
7f07(2): xor %eax,%eax
7f09(5): jmp 0xffffff3f(%rip)
7f0e(2): nop 
7f10(3): xor %r10d,%r10d
7f13(5): cmp $0x2,0x8(%rsp)
7f18(6): jz 0x508(%rip)
7f1e(5): mov %r12b,0x7c(%rsp)
7f23(2): xor %edx,%edx
7f25(2): xor %eax,%eax
7f27(5): mov $0x27,%ebx
7f2c(5): jmp 0xffffff1c(%rip)
7f31(7): nop 0x0(%rax)
7f38(5): mov $0x9,%edx
7f3d(5): mov $0x74,%ebx
7f42(5): cmp $0x2,0x8(%rsp)
7f47(3): setz %al
7f4a(4): and 0xf(%rsp),%al
7f4e(6): jnz 0x150(%rip)
7f54(5): cmp $0x0,0xd(%rsp)
7f59(2): jnz 0x67(%rip)
7f5b(2): mov %edx,%ebx
7f5d(3): xor %r12d,%r12d
7f60(2): xor %eax,%eax
7f62(5): cmp $0x0,0xf(%rsp)
7f67(6): jnz 0xfffffef4(%rip)
7f6d(5): jmp 0xffffff0c(%rip)
7f72(6): nop 0x0(%rax,%rax,1)
7f78(5): mov $0x8,%edx
7f7d(5): mov $0x62,%ebx
7f82(2): jmp 0xffffffd2(%rip)
7f84(4): nop 0x0(%rax)
7f88(5): cmp $0x2,0x8(%rsp)
7f8d(6): jz 0x3d3(%rip)
7f93(5): cmp $0x0,0xd(%rsp)
7f98(6): jz 0x218(%rip)
7f9e(5): cmp $0x0,0xf(%rsp)
7fa3(6): jz 0x20d(%rip)
7fa9(6): cmp $0x0,0x18(%rsp)
7faf(6): jnz 0x3bc(%rip)
7fb5(5): mov $0x5c,%ebx
7fba(6): nop 0x0(%rax,%rax,1)
7fc0(3): xor %r12d,%r12d
7fc3(5): cmp $0x2,0x8(%rsp)
7fc8(3): setz %dl
7fcb(5): cmp $0x0,0xf(%rsp)
7fd0(2): mov %edx,%eax
7fd2(6): jnz 0x856(%rip)
7fd8(3): mov %r8d,%eax
7fdb(3): xor $0x1,%eax
7fde(2): and %dl,%al
7fe0(2): jz 0x31(%rip)
7fe2(3): cmp %r15,%r13
7fe5(2): jbe 0x7(%rip)
7fe7(5): mov $0x27,0x0(%r14,%r15,1)
7fec(4): lea 0x1(%r15),%rdx
7ff0(3): cmp %rdx,%r13
7ff3(2): jbe 0x8(%rip)
7ff5(6): mov $0x24,0x1(%r14,%r15,1)
7ffb(4): lea 0x2(%r15),%rdx
7fff(3): cmp %rdx,%r13
8002(2): jbe 0x8(%rip)
8004(6): mov $0x27,0x2(%r14,%r15,1)
800a(4): add $0x3,%r15
800e(3): mov %eax,%r8d
8011(3): cmp %r15,%r13
8014(2): jbe 0x7(%rip)
8016(5): mov $0x5c,0x0(%r14,%r15,1)
801b(4): add $0x1,%r15
801f(4): add $0x1,%rbp
8023(5): jmp 0xfffffe8d(%rip)
8028(8): nop 0x0(%rax,%rax,1)
8030(5): cmp $0x0,0xd(%rsp)
8035(6): jnz 0x1ce(%rip)
803b(2): xor %edx,%edx
803d(5): test $0x1,0x78(%rsp)
8042(6): jz 0xffffff19(%rip)
8048(4): add $0x1,%rbp
804c(5): jmp 0xfffffcbc(%rip)
8051(7): nop 0x0(%rax)
8058(5): cmp $0x2,0x8(%rsp)
805d(3): setz %dl
8060(2): xor %eax,%eax
8062(5): jmp 0xfffffde6(%rip)
8067(9): nop 0x0(%rax,%rax,1)
8070(5): mov $0x7,%edx
8075(5): mov $0x61,%ebx
807a(5): jmp 0xfffffeda(%rip)
807f(1): nop 
8080(5): cmp $0x2,0x8(%rsp)
8085(3): setz %dl
8088(3): test %rbp,%rbp
808b(6): jnz 0xfffffdb1(%rip)
8091(5): movzx 0xf(%rsp),%eax
8096(2): and %dl,%al
8098(6): jz 0xfffffdb0(%rip)
809e(3): mov %r11,%rbp
80a1(8): mov $0x2,0x8(%rsp)
80a9(5): jmp 0x700(%rip)
80ae(2): nop 
80b0(5): cmp $0x2,0x8(%rsp)
80b5(3): setz %dl
80b8(3): xor %r12d,%r12d
80bb(2): jmp 0xffffffd6(%rip)
80bd(3): nop (%rax)
80c0(5): cmp $0x2,0x8(%rsp)
80c5(5): mov $0x20,%ebx
80ca(3): setz %dl
80cd(2): jmp 0xffffffc4(%rip)
80cf(1): nop 
80d0(5): mov $0xd,%edx
80d5(5): mov $0x72,%ebx
80da(5): jmp 0xfffffe68(%rip)
80df(1): nop 
80e0(5): mov $0xc,%edx
80e5(5): mov $0x66,%ebx
80ea(5): jmp 0xfffffe6a(%rip)
80ef(1): nop 
80f0(5): mov $0xb,%edx
80f5(5): mov $0x76,%ebx
80fa(5): jmp 0xfffffe5a(%rip)
80ff(1): nop 
8100(5): mov $0xa,%edx
8105(5): mov $0x6e,%ebx
810a(5): jmp 0xfffffe38(%rip)
810f(1): nop 
8110(3): xor %r10d,%r10d
8113(5): nop 0x0(%rax,%rax,1)
8118(6): cmp $0x1,0x58(%rsp)
811e(6): jnz 0x3aa(%rip)
8124(5): mov %r11,0x38(%rsp)
8129(5): mov %r8b,0x30(%rsp)
812e(5): mov %r10b,0x28(%rsp)
8133(5): call 0xffff97ad(%rip)
8138(3): mov (%rax),%rcx
813b(3): movzx %bl,%edx
813e(6): movzx 0x28(%rsp),%r10d
8144(6): movzx 0x30(%rsp),%r8d
814a(5): mov 0x38(%rsp),%r11
814f(5): mov $0x1,%edi
8154(4): movzx 0x0(%rcx,%rdx,2),%eax
8158(4): and $0x4000,%ax
815c(4): setnz %r12b
8160(3): setz %al
8163(4): and 0xd(%rsp),%al
8167(2): test %al,%al
8169(6): jnz 0x998(%rip)
816f(5): cmp $0x2,0x8(%rsp)
8174(3): setz %dl
8177(5): jmp 0xfffffcd1(%rip)
817c(4): nop 0x0(%rax)
8180(4): movzx (%r9),%ebx
8184(3): cmp $0x7e,%bl
8187(2): jnbe 0xffffff89(%rip)
8189(7): lea 0x3438(%rip),%rcx
8190(3): movzx %bl,%edx
8193(4): movsxd 0x0(%rcx,%rdx,4),%rax
8197(3): add %rcx,%rax
819a(2): jmp %rax
819c(4): nop 0x0(%rax)
81a0(3): xor %r10d,%r10d
81a3(5): cmp $0x0,0xd(%rsp)
81a8(6): jnz 0xfffffdf6(%rip)
81ae(2): nop 
81b0(5): mov $0x5c,%edx
81b5(5): mov $0x5c,%ebx
81ba(5): jmp 0xfffffd9a(%rip)
81bf(1): nop 
81c0(5): mov $0xc,%edx
81c5(3): xor %r10d,%r10d
81c8(5): mov $0x66,%ebx
81cd(5): jmp 0xfffffd87(%rip)
81d2(6): nop 0x0(%rax,%rax,1)
81d8(5): mov $0xa,%edx
81dd(3): xor %r10d,%r10d
81e0(5): mov $0x6e,%ebx
81e5(5): jmp 0xfffffd5d(%rip)
81ea(6): nop 0x0(%rax,%rax,1)
81f0(5): mov $0x61,%ebx
81f5(5): jmp 0xfffffdcb(%rip)
81fa(6): nop 0x0(%rax,%rax,1)
8200(3): xor %r10d,%r10d
8203(5): cmp $0x2,0x8(%rsp)
8208(3): setz %dl
820b(5): cmp $0x0,0xf(%rsp)
8210(6): jnz 0xb9a(%rip)
8216(3): mov %r8d,%eax
8219(3): mov %r15,%rcx
821c(3): xor $0x1,%eax
821f(2): and %dl,%al
8221(2): jz 0x2f(%rip)
8223(3): cmp %r15,%r13
8226(2): jbe 0x7(%rip)
8228(5): mov $0x27,0x0(%r14,%r15,1)
822d(4): lea 0x1(%r15),%rcx
8231(3): cmp %rcx,%r13
8234(2): jbe 0x8(%rip)
8236(6): mov $0x24,0x1(%r14,%r15,1)
823c(4): lea 0x2(%r15),%rcx
8240(3): cmp %rcx,%r13
8243(6): jnbe 0x636(%rip)
8249(4): lea 0x3(%r15),%rcx
824d(3): mov %eax,%r8d
8250(3): cmp %rcx,%r13
8253(2): jbe 0x7(%rip)
8255(5): mov $0x5c,0x0(%r14,%rcx,1)
825a(5): cmp $0x2,0x8(%rsp)
825f(4): lea 0x1(%rcx),%r15
8263(6): jz 0x606(%rip)
8269(4): lea 0x1(%rbp),%rax
826d(3): cmp %r11,%rax
8270(2): jnb 0x1b(%rip)
8272(5): mov 0x10(%rsp),%rax
8277(5): movzx 0x1(%rax,%rbp,1),%eax
827c(4): mov %al,0x28(%rsp)
8280(3): sub $0x30,%eax
8283(2): cmp $0x9,%al
8285(6): jbe 0x834(%rip)
828b(3): mov %r12d,%eax
828e(5): mov $0x30,%ebx
8293(3): xor %r12d,%r12d
8296(5): jmp 0xfffffbb2(%rip)
829b(5): nop 0x0(%rax,%rax,1)
82a0(5): cmp $0x2,0x8(%rsp)
82a5(3): mov %r10d,%r12d
82a8(3): setz %dl
82ab(3): xor %r10d,%r10d
82ae(2): xor %eax,%eax
82b0(5): jmp 0xfffffb98(%rip)
82b5(3): nop (%rax)
82b8(5): cmp $0x2,0x8(%rsp)
82bd(3): setz %dl
82c0(3): xor %r10d,%r10d
82c3(5): jmp 0xfffffdc5(%rip)
82c8(8): nop 0x0(%rax,%rax,1)
82d0(5): cmp $0x2,0x8(%rsp)
82d5(3): setz %dl
82d8(3): xor %r10d,%r10d
82db(3): xor %r12d,%r12d
82de(5): jmp 0xfffffdb3(%rip)
82e3(5): nop 0x0(%rax,%rax,1)
82e8(5): cmp $0x2,0x8(%rsp)
82ed(3): mov %r10d,%r12d
82f0(5): mov $0x20,%ebx
82f5(3): setz %dl
82f8(3): xor %r10d,%r10d
82fb(5): jmp 0xfffffd96(%rip)
8300(5): mov $0xd,%edx
8305(3): xor %r10d,%r10d
8308(5): mov $0x72,%ebx
830d(5): jmp 0xfffffc35(%rip)
8312(6): nop 0x0(%rax,%rax,1)
8318(5): mov $0x76,%ebx
831d(5): jmp 0xfffffca3(%rip)
8322(6): nop 0x0(%rax,%rax,1)
8328(5): mov $0x9,%edx
832d(3): xor %r10d,%r10d
8330(5): mov $0x74,%ebx
8335(5): jmp 0xfffffc0d(%rip)
833a(6): nop 0x0(%rax,%rax,1)
8340(5): mov $0x62,%ebx
8345(5): jmp 0xfffffc7b(%rip)
834a(6): nop 0x0(%rax,%rax,1)
8350(3): xor %r10d,%r10d
8353(5): jmp 0xfffffa9d(%rip)
8358(8): nop 0x0(%rax,%rax,1)
8360(5): cmp $0x0,0xf(%rsp)
8365(6): jnz 0x96b(%rip)
836b(4): add $0x1,%rbp
836f(3): mov %r8d,%eax
8372(3): xor %r12d,%r12d
8375(5): mov $0x5c,%ebx
837a(5): jmp 0xfffffb12(%rip)
837f(1): nop 
8380(5): cmp $0x2,0x8(%rsp)
8385(5): movzx 0xf(%rsp),%ebx
838a(3): mov %r8d,%r12d
838d(3): mov %r11,%rbp
8390(3): setz %dl
8393(2): mov %ebx,%eax
8395(3): test %r15,%r15
8398(3): setz %cl
839b(2): and %edx,%eax
839d(2): and %cl,%al
839f(6): jnz 0xa67(%rip)
83a5(2): mov %ebx,%eax
83a7(3): xor $0x1,%eax
83aa(2): and %al,%dl
83ac(6): jz 0x970(%rip)
83b2(5): cmp $0x0,0x7c(%rsp)
83b7(6): jz 0x963(%rip)
83bd(5): cmp $0x0,0xe(%rsp)
83c2(6): jnz 0x9fb(%rip)
83c8(3): test %r13,%r13
83cb(3): setz %al
83ce(6): cmp $0x0,0x50(%rsp)
83d4(3): setnz %dl
83d7(2): and %dl,%al
83d9(6): jz 0xa23(%rip)
83df(5): mov 0x50(%rsp),%r13
83e4(7): lea 0x2f4a(%rip),%rbx
83eb(4): mov $0x27,(%r14)
83ef(8): mov $0x2,0x8(%rsp)
83f7(6): mov $0x1,%r15d
83fd(9): mov $0x1,0x18(%rsp)
8406(5): mov $0x0,0xf(%rsp)
840b(5): mov %rbx,0x48(%rsp)
8410(4): mov %al,0x7c(%rsp)
8414(5): jmp 0xfffff8df(%rip)
8419(7): nop 0x0(%rax)
8420(5): cmp $0x0,0xf(%rsp)
8425(6): jnz 0x8ab(%rip)
842b(3): test %r13,%r13
842e(6): jz 0x402(%rip)
8434(2): xor %edx,%edx
8436(6): cmp $0x0,0x50(%rsp)
843c(6): jnz 0x3f4(%rip)
8442(5): mov %r13,0x50(%rsp)
8447(4): add $0x3,%r15
844b(2): xor %eax,%eax
844d(5): mov %r12b,0x7c(%rsp)
8452(3): xor %r8d,%r8d
8455(3): mov %rdx,%r13
8458(5): mov $0x27,%ebx
845d(5): jmp 0xfffffa1c(%rip)
8462(6): nop 0x0(%rax,%rax,1)
8468(5): test $0x4,0x78(%rsp)
846d(2): jz 0x23(%rip)
846f(4): lea 0x2(%rbp),%rcx
8473(3): cmp %r11,%rcx
8476(2): jnb 0x1a(%rip)
8478(5): mov 0x10(%rsp),%rax
847d(5): cmp $0x3f,0x1(%rax,%rbp,1)
8482(6): jz 0x790(%rip)
8488(8): nop 0x0(%rax,%rax,1)
8490(2): xor %edx,%edx
8492(3): xor %r12d,%r12d
8495(2): xor %eax,%eax
8497(5): mov $0x3f,%ebx
849c(5): jmp 0xfffff9ac(%rip)
84a1(7): nop 0x0(%rax)
84a8(5): cmp $0x0,0xf(%rsp)
84ad(6): jnz 0x823(%rip)
84b3(3): xor %r12d,%r12d
84b6(2): xor %eax,%eax
84b8(5): mov $0x3f,%ebx
84bd(5): jmp 0xfffff9bc(%rip)
84c2(6): nop 0x0(%rax,%rax,1)
84c8(8): lea 0xa0(%rsp),%rax
84d0(4): cmp $0xffffffff,%r11
84d4(c): mov $0x0,0xa0(%rsp)
84e0(5): mov %rax,0x28(%rsp)
84e5(2): jnz 0x2f(%rip)
84e7(5): mov 0x10(%rsp),%rdi
84ec(5): mov %r8b,0x40(%rsp)
84f1(5): mov %r10b,0x38(%rsp)
84f6(5): mov %r9,0x30(%rsp)
84fb(5): call 0xffff9185(%rip)
8500(6): movzx 0x40(%rsp),%r8d
8506(6): movzx 0x38(%rsp),%r10d
850c(3): mov %rax,%r11
850f(5): mov 0x30(%rsp),%r9
8514(8): lea 0x9c(%rsp),%rax
851c(2): xor %ecx,%ecx
851e(4): mov %bl,0x7e(%rsp)
8522(5): mov %r8b,0x7d(%rsp)
8527(3): mov %rcx,%rbx
852a(8): mov %r9,0x88(%rsp)
8532(5): mov %rax,0x38(%rsp)
8537(5): mov %r10b,0x7f(%rsp)
853c(8): mov %r15,0x80(%rsp)
8544(5): mov %r14,0x40(%rsp)
8549(5): mov %r13,0x70(%rsp)
854e(5): mov %r11,0x30(%rsp)
8553(5): mov 0x10(%rsp),%rax
8558(5): lea 0x0(%rbp,%rbx,1),%r14
855d(5): mov 0x30(%rsp),%rdx
8562(5): mov 0x28(%rsp),%rcx
8567(5): mov 0x38(%rsp),%rdi
856c(4): lea 0x0(%rax,%r14,1),%r13
8570(3): sub %r14,%rdx
8573(3): mov %r13,%rsi
8576(5): call 0x1eaa(%rip)
857b(3): test %rax,%rax
857e(3): mov %rax,%r15
8581(2): jz 0x50(%rip)
8583(4): cmp $0xffffffff,%rax
8587(6): jz 0x61e(%rip)
858d(4): cmp $0xfffffffe,%rax
8591(6): jz 0x5a0(%rip)
8597(5): cmp $0x2,0x8(%rsp)
859c(3): setz %al
859f(4): and 0xf(%rsp),%al
85a3(6): jnz 0x19d(%rip)
85a9(7): mov 0x9c(%rsp),%edi
85b0(5): call 0xffff9310(%rip)
85b5(5): mov 0x28(%rsp),%rdi
85ba(2): test %eax,%eax
85bc(5): mov $0x0,%eax
85c1(4): cmove %eax,%r12d
85c5(3): add %r15,%rbx
85c8(5): call 0xffff92e8(%rip)
85cd(2): test %eax,%eax
85cf(2): jz 0xffffff84(%rip)
85d1(3): mov %r12d,%edx
85d4(3): mov %rbx,%rdi
85d7(6): movzx 0x7d(%rsp),%r8d
85dd(3): xor $0x1,%edx
85e0(5): movzx 0x7e(%rsp),%ebx
85e5(6): movzx 0x7f(%rsp),%r10d
85eb(4): and 0xd(%rsp),%dl
85ef(8): mov 0x80(%rsp),%r15
85f7(5): mov 0x40(%rsp),%r14
85fc(5): mov 0x70(%rsp),%r13
8601(5): mov 0x30(%rsp),%r11
8606(4): cmp $0x1,%rdi
860a(6): jbe 0x601(%rip)
8610(3): mov %rdi,%rcx
8613(2): xor %esi,%esi
8615(6): movzx 0xf(%rsp),%r9d
861b(3): add %rbp,%rcx
861e(5): mov 0x10(%rsp),%rdi
8623(5): jmp 0xbb(%rip)
8628(8): nop 0x0(%rax,%rax,1)
8630(5): cmp $0x2,0x8(%rsp)
8635(3): setz %al
8638(3): test %r9b,%r9b
863b(6): jnz 0x4b5(%rip)
8641(3): mov %r8d,%esi
8644(3): xor $0x1,%esi
8647(3): and %sil,%al
864a(2): jz 0x31(%rip)
864c(3): cmp %r15,%r13
864f(2): jbe 0x7(%rip)
8651(5): mov $0x27,0x0(%r14,%r15,1)
8656(4): lea 0x1(%r15),%rsi
865a(3): cmp %rsi,%r13
865d(2): jbe 0x8(%rip)
865f(6): mov $0x24,0x1(%r14,%r15,1)
8665(4): lea 0x2(%r15),%rsi
8669(3): cmp %rsi,%r13
866c(2): jbe 0x8(%rip)
866e(6): mov $0x27,0x2(%r14,%r15,1)
8674(4): add $0x3,%r15
8678(3): mov %eax,%r8d
867b(3): cmp %r15,%r13
867e(2): jbe 0x7(%rip)
8680(5): mov $0x5c,0x0(%r14,%r15,1)
8685(4): lea 0x1(%r15),%rax
8689(3): cmp %rax,%r13
868c(2): jbe 0xf(%rip)
868e(2): mov %ebx,%eax
8690(3): shr $0x6,%al
8693(3): add $0x30,%eax
8696(5): mov %al,0x1(%r14,%r15,1)
869b(4): lea 0x2(%r15),%rax
869f(3): cmp %rax,%r13
86a2(2): jbe 0x12(%rip)
86a4(2): mov %ebx,%eax
86a6(3): shr $0x3,%al
86a9(3): and $0x7,%eax
86ac(3): add $0x30,%eax
86af(5): mov %al,0x2(%r14,%r15,1)
86b4(3): and $0x7,%ebx
86b7(4): add $0x1,%rbp
86bb(4): add $0x3,%r15
86bf(3): add $0x30,%ebx
86c2(3): cmp %rcx,%rbp
86c5(6): jnb 0xfffff7eb(%rip)
86cb(2): mov %edx,%esi
86cd(3): cmp %r15,%r13
86d0(2): jbe 0x6(%rip)
86d2(4): mov %bl,0x0(%r14,%r15,1)
86d6(4): movzx 0x0(%rdi,%rbp,1),%ebx
86da(4): add $0x1,%r15
86de(2): test %dl,%dl
86e0(6): jnz 0xffffff50(%rip)
86e6(2): mov %esi,%eax
86e8(3): xor $0x1,%eax
86eb(3): and %r8d,%eax
86ee(3): test %r10b,%r10b
86f1(2): jz 0x10(%rip)
86f3(3): cmp %r15,%r13
86f6(2): jbe 0x7(%rip)
86f8(5): mov $0x5c,0x0(%r14,%r15,1)
86fd(4): add $0x1,%r15
8701(4): add $0x1,%rbp
8705(3): cmp %rcx,%rbp
8708(6): jnb 0xfffff784(%rip)
870e(2): test %al,%al
8710(6): jz 0x3fe(%rip)
8716(3): cmp %r15,%r13
8719(2): jbe 0x7(%rip)
871b(5): mov $0x27,0x0(%r14,%r15,1)
8720(4): lea 0x1(%r15),%rax
8724(3): cmp %rax,%r13
8727(2): jbe 0x8(%rip)
8729(6): mov $0x27,0x1(%r14,%r15,1)
872f(4): add $0x2,%r15
8733(3): xor %r10d,%r10d
8736(3): xor %r8d,%r8d
8739(2): jmp 0xffffff94(%rip)
873b(5): nop 0x0(%rax,%rax,1)
8740(4): cmp $0x1,%r15
8744(6): jz 0xfffffe65(%rip)
874a(5): mov 0x10(%rsp),%rdi
874f(4): lea 0x0(%rdi,%r15,1),%rcx
8753(5): lea 0x1(%rdi,%r14,1),%rdx
8758(4): lea 0x0(%rcx,%r14,1),%r8
875c(2): jmp 0x11(%rip)
875e(2): nop 
8760(4): add $0x1,%rdx
8764(3): cmp %rdx,%r8
8767(6): jz 0xfffffe42(%rip)
876d(3): movzx (%rdx),%ecx
8770(3): sub $0x5b,%ecx
8773(3): cmp $0x21,%cl
8776(2): jnbe 0xffffffea(%rip)
8778(5): mov $0x1,%esi
877d(3): shl/sal %cl,%rsi
8780(3): mov %rsi,%rcx
8783(a): mov $0x8589934635,%rsi
878d(3): test %rsi,%rcx
8790(2): jz 0xffffffd0(%rip)
8792(5): mov 0x40(%rsp),%r14
8797(5): mov 0x70(%rsp),%r13
879c(5): mov 0x30(%rsp),%rbp
87a1(8): mov $0x2,0x8(%rsp)
87a9(5): cmp $0x0,0xd(%rsp)
87ae(2): jz 0x12(%rip)
87b0(2): test %al,%al
87b2(5): mov $0x4,%eax
87b7(5): cmove 0x8(%rsp),%eax
87bc(4): mov %eax,0x8(%rsp)
87c0(4): sub $0x8,%rsp
87c4(3): mov %rbp,%rcx
87c7(3): mov %r13,%rsi
87ca(4): push 0x68(%rsp)
87ce(4): push 0x78(%rsp)
87d2(3): mov %r14,%rdi
87d5(2): push $0x0
87d7(8): mov 0x98(%rsp),%r9d
87df(5): mov 0x28(%rsp),%r8d
87e4(5): mov 0x30(%rsp),%rdx
87e9(4): and $0xfd,%r9d
87ed(5): call 0xfffff433(%rip)
87f2(4): add $0x20,%rsp
87f6(3): mov %rax,%r15
87f9(8): mov 0xa8(%rsp),%rbx
8801(9): xor $0x28,%rbx
880a(3): mov %r15,%rax
880d(6): jnz 0x606(%rip)
8813(7): add $0xb8,%rsp
881a(1): pop %rbx
881b(1): pop %rbp
881c(2): pop %r12
881e(2): pop %r13
8820(2): pop %r14
8822(2): pop %r15
8824(1): ret near (%rsp)
8825(3): nop (%rax)
8828(3): mov %r11,%rbp
882b(5): jmp 0xffffff7e(%rip)
8830(3): cmp %r15,%r13
8833(2): jbe 0x7(%rip)
8835(5): mov $0x27,0x0(%r14,%r15,1)
883a(4): lea 0x1(%r15),%rax
883e(3): cmp %rax,%r13
8841(2): jbe 0x8(%rip)
8843(6): mov $0x5c,0x1(%r14,%r15,1)
8849(4): lea 0x2(%r15),%rax
884d(3): cmp %rax,%r13
8850(6): jbe 0x5f2(%rip)
8856(3): mov %r13,%rdx
8859(6): mov $0x27,0x2(%r14,%r15,1)
885f(5): mov 0x50(%rsp),%r13
8864(5): jmp 0xfffffbde(%rip)
8869(3): mov %r12d,%eax
886c(5): mov $0x30,%ebx
8871(3): xor %r12d,%r12d
8874(5): jmp 0xfffff605(%rip)
8879(6): mov $0x27,0x2(%r14,%r15,1)
887f(5): jmp 0xfffff9ca(%rip)
8884(2): test %ebx,%ebx
8886(6): jnz 0xfffff42d(%rip)
888c(5): mov $0x1,0xd(%rsp)
8891(3): test %r13,%r13
8894(6): jnz 0x596(%rip)
889a(7): lea 0x2a94(%rip),%rax
88a1(9): mov $0x0,0x50(%rsp)
88aa(5): mov $0x1,0xe(%rsp)
88af(5): mov $0x0,0x7c(%rsp)
88b4(3): xor %r12d,%r12d
88b7(5): mov $0x0,0xf(%rsp)
88bc(9): mov $0x1,0x18(%rsp)
88c5(5): mov %rax,0x48(%rsp)
88ca(6): mov $0x1,%r15d
88d0(8): mov $0x2,0x8(%rsp)
88d8(5): jmp 0xfffff41b(%rip)
88dd(3): nop (%rax)
88e0(2): test %ebx,%ebx
88e2(6): jnz 0x3fb(%rip)
88e8(3): test %r13,%r13
88eb(6): jz 0x22b(%rip)
88f1(4): mov $0x22,(%r14)
88f5(5): mov $0x1,0xe(%rsp)
88fa(3): xor %r12d,%r12d
88fd(5): mov $0x0,0x7c(%rsp)
8902(9): mov $0x0,0x50(%rsp)
890b(7): lea 0x2a21(%rip),%rax
8912(5): mov $0x0,0xf(%rsp)
8917(5): mov $0x1,0xd(%rsp)
891c(9): mov $0x1,0x18(%rsp)
8925(6): mov $0x1,%r15d
892b(5): mov %rax,0x48(%rsp)
8930(5): jmp 0xfffff3c3(%rip)
8935(7): lea 0x29f7(%rip),%rax
893c(5): mov $0x1,0xe(%rsp)
8941(5): mov $0x0,0x7c(%rsp)
8946(3): xor %r12d,%r12d
8949(9): mov $0x0,0x50(%rsp)
8952(5): mov $0x1,0xf(%rsp)
8957(5): mov $0x1,0xd(%rsp)
895c(9): mov $0x1,0x18(%rsp)
8965(3): xor %r15d,%r15d
8968(5): mov %rax,0x48(%rsp)
896d(8): mov $0x5,0x8(%rsp)
8975(5): jmp 0xfffff37e(%rip)
897a(5): mov $0x1,0xe(%rsp)
897f(5): mov $0x0,0x7c(%rsp)
8984(3): xor %r12d,%r12d
8987(9): mov $0x0,0x50(%rsp)
8990(5): mov $0x0,0xf(%rsp)
8995(3): xor %r15d,%r15d
8998(5): mov $0x1,0xd(%rsp)
899d(9): mov $0x0,0x18(%rsp)
89a6(9): mov $0x0,0x48(%rsp)
89af(5): jmp 0xfffff344(%rip)
89b4(5): cmp $0xa,0x8(%rsp)
89b9(2): jz 0x58(%rip)
89bb(7): lea 0x2975(%rip),%rsi
89c2(2): xor %edi,%edi
89c4(5): mov $0x5,%edx
89c9(5): call 0xffff8c97(%rip)
89ce(3): mov %rax,%rcx
89d1(5): mov %rax,0x68(%rsp)
89d6(7): lea 0x295a(%rip),%rax
89dd(3): cmp %rax,%rcx
89e0(6): jz 0x39e(%rip)
89e6(7): lea 0x2948(%rip),%rsi
89ed(2): xor %edi,%edi
89ef(5): mov $0x5,%edx
89f4(5): call 0xffff8c6c(%rip)
89f9(3): mov %rax,%rcx
89fc(5): mov %rax,0x60(%rsp)
8a01(7): lea 0x292d(%rip),%rax
8a08(3): cmp %rax,%rcx
8a0b(6): jz 0x389(%rip)
8a11(3): xor %r15d,%r15d
8a14(2): test %ebx,%ebx
8a16(6): jz 0x1c7(%rip)
8a1c(2): test %ebx,%ebx
8a1e(5): mov 0x60(%rsp),%rbx
8a23(5): setnz 0xf(%rsp)
8a28(3): xor %r12d,%r12d
8a2b(3): mov %rbx,%rdi
8a2e(5): call 0xffff8c52(%rip)
8a33(5): mov %rbx,0x48(%rsp)
8a38(5): mov %rax,0x18(%rsp)
8a3d(5): mov $0x1,0xe(%rsp)
8a42(5): mov $0x0,0x7c(%rsp)
8a47(9): mov $0x0,0x50(%rsp)
8a50(5): mov $0x1,0xd(%rsp)
8a55(5): jmp 0xfffff29e(%rip)
8a5a(5): mov $0x1,0xe(%rsp)
8a5f(5): mov $0x0,0x7c(%rsp)
8a64(3): xor %r12d,%r12d
8a67(9): mov $0x0,0x50(%rsp)
8a70(5): mov $0x0,0xf(%rsp)
8a75(3): xor %r15d,%r15d
8a78(5): mov $0x0,0xd(%rsp)
8a7d(9): mov $0x0,0x18(%rsp)
8a86(9): mov $0x0,0x48(%rsp)
8a8f(5): jmp 0xfffff264(%rip)
8a94(5): mov $0x1,0xe(%rsp)
8a99(5): mov $0x0,0x7c(%rsp)
8a9e(3): xor %r12d,%r12d
8aa1(9): mov $0x0,0x50(%rsp)
8aaa(5): mov $0x1,0xf(%rsp)
8aaf(5): mov $0x1,0xd(%rsp)
8ab4(5): jmp 0xfffff21f(%rip)
8ab9(3): cmp %r15,%r13
8abc(2): jbe 0x7(%rip)
8abe(5): mov $0x30,0x0(%r14,%r15,1)
8ac3(4): lea 0x2(%rcx),%rax
8ac7(3): cmp %rax,%r13
8aca(2): jbe 0x8(%rip)
8acc(6): mov $0x30,0x2(%r14,%rcx,1)
8ad2(3): mov %r12d,%eax
8ad5(4): lea 0x3(%rcx),%r15
8ad9(3): xor %r12d,%r12d
8adc(5): mov $0x30,%ebx
8ae1(5): jmp 0xfffff367(%rip)
8ae6(a): nop 0x0(%rax,%rax,1)
8af0(5): movzx 0xf(%rsp),%ebx
8af5(3): mov %r11,%rbp
8af8(4): mov %bl,0xd(%rsp)
8afc(5): jmp 0xfffffcad(%rip)
8b01(5): movzx 0xd(%rsp),%edx
8b06(3): xor %r12d,%r12d
8b09(5): jmp 0xfffffb07(%rip)
8b0e(3): xor %r10d,%r10d
8b11(5): jmp 0xfffffbbc(%rip)
8b16(9): mov $0x0,0x50(%rsp)
8b1f(5): mov $0x1,0xe(%rsp)
8b24(3): xor %r12d,%r12d
8b27(5): mov $0x0,0x7c(%rsp)
8b2c(5): jmp 0xfffffddf(%rip)
8b31(5): mov 0x30(%rsp),%r11
8b36(3): mov %r14,%rsi
8b39(3): mov %r13,%rcx
8b3c(3): mov %rbx,%rax
8b3f(3): mov %rbx,%rdi
8b42(6): movzx 0x7d(%rsp),%r8d
8b48(5): movzx 0x7e(%rsp),%ebx
8b4d(8): mov 0x88(%rsp),%r9
8b55(3): cmp %r11,%rsi
8b58(6): movzx 0x7f(%rsp),%r10d
8b5e(8): mov 0x80(%rsp),%r15
8b66(5): mov 0x40(%rsp),%r14
8b6b(5): mov 0x70(%rsp),%r13
8b70(2): jnb 0x28(%rip)
8b72(3): cmp $0x0,(%rcx)
8b75(2): jnz 0x12(%rip)
8b77(2): jmp 0x21(%rip)
8b79(7): nop 0x0(%rax)
8b80(5): cmp $0x0,0x0(%r9,%rax,1)
8b85(2): jz 0x10(%rip)
8b87(4): add $0x1,%rax
8b8b(5): lea 0x0(%rbp,%rax,1),%rdx
8b90(3): cmp %rdx,%r11
8b93(2): jnbe 0xffffffed(%rip)
8b95(3): mov %rax,%rdi
8b98(5): movzx 0xd(%rsp),%edx
8b9d(3): xor %r12d,%r12d
8ba0(5): jmp 0xfffffa66(%rip)
8ba5(3): mov %rbx,%rdi
8ba8(6): movzx 0x7d(%rsp),%r8d
8bae(5): movzx 0x7e(%rsp),%ebx
8bb3(6): movzx 0x7f(%rsp),%r10d
8bb9(8): mov 0x80(%rsp),%r15
8bc1(3): xor %r12d,%r12d
8bc4(5): mov 0x40(%rsp),%r14
8bc9(5): mov 0x70(%rsp),%r13
8bce(5): mov 0x30(%rsp),%r11
8bd3(5): movzx 0xd(%rsp),%edx
8bd8(5): jmp 0xfffffa2e(%rip)
8bdd(5): mov 0x68(%rsp),%rdx
8be2(3): movzx (%rdx),%eax
8be5(2): test %al,%al
8be7(6): jz 0xfffffe35(%rip)
8bed(3): nop (%rax)
8bf0(3): cmp %r15,%r13
8bf3(2): jbe 0x6(%rip)
8bf5(4): mov %al,0x0(%r14,%r15,1)
8bf9(4): add $0x1,%r15
8bfd(5): movzx 0x0(%rdx,%r15,1),%eax
8c02(2): test %al,%al
8c04(2): jnz 0xffffffec(%rip)
8c06(5): jmp 0xfffffe16(%rip)
8c0b(2): mov %edx,%eax
8c0d(5): jmp 0xfffff55a(%rip)
8c12(4): movzx 0x0(%rax,%rcx,1),%ebx
8c16(3): cmp $0x3e,%bl
8c19(6): jnbe 0xfffff877(%rip)
8c1f(a): mov $0x8070630310989004800,%rax
8c29(4): bt %rbx,%rax
8c2d(6): jnb 0xfffff863(%rip)
8c33(5): cmp $0x0,0xf(%rsp)
8c38(6): jnz 0x1ea(%rip)
8c3e(3): cmp %r15,%r13
8c41(2): jbe 0x7(%rip)
8c43(5): mov $0x3f,0x0(%r14,%r15,1)
8c48(4): lea 0x1(%r15),%rax
8c4c(3): cmp %rax,%r13
8c4f(2): jbe 0x8(%rip)
8c51(6): mov $0x22,0x1(%r14,%r15,1)
8c57(4): lea 0x2(%r15),%rax
8c5b(3): cmp %rax,%r13
8c5e(2): jbe 0x8(%rip)
8c60(6): mov $0x22,0x2(%r14,%r15,1)
8c66(4): lea 0x3(%r15),%rax
8c6a(3): cmp %rax,%r13
8c6d(2): jbe 0x8(%rip)
8c6f(6): mov $0x3f,0x3(%r14,%r15,1)
8c75(4): add $0x4,%r15
8c79(2): xor %edx,%edx
8c7b(3): xor %r12d,%r12d
8c7e(2): xor %eax,%eax
8c80(3): mov %rcx,%rbp
8c83(5): jmp 0xfffff1c5(%rip)
8c88(2): test %ebx,%ebx
8c8a(6): jz 0x18e(%rip)
8c90(7): lea 0x269e(%rip),%rax
8c97(5): mov $0x1,0xe(%rsp)
8c9c(5): mov $0x0,0x7c(%rsp)
8ca1(3): xor %r12d,%r12d
8ca4(9): mov $0x0,0x50(%rsp)
8cad(5): mov $0x1,0xf(%rsp)
8cb2(5): mov $0x0,0xd(%rsp)
8cb7(9): mov $0x1,0x18(%rsp)
8cc0(3): xor %r15d,%r15d
8cc3(5): mov %rax,0x48(%rsp)
8cc8(5): jmp 0xfffff02b(%rip)
8ccd(3): nop (%rax)
8cd0(3): mov %r11,%rbp
8cd3(5): movzx 0xf(%rsp),%eax
8cd8(5): jmp 0xfffffad1(%rip)
8cdd(7): lea 0x264f(%rip),%rax
8ce4(5): mov $0x1,0xe(%rsp)
8ce9(5): mov $0x0,0x7c(%rsp)
8cee(3): xor %r12d,%r12d
8cf1(9): mov $0x0,0x50(%rsp)
8cfa(5): mov $0x1,0xf(%rsp)
8cff(5): mov $0x1,0xd(%rsp)
8d04(9): mov $0x1,0x18(%rsp)
8d0d(3): xor %r15d,%r15d
8d10(5): mov %rax,0x48(%rsp)
8d15(5): jmp 0xffffefde(%rip)
8d1a(2): mov %edx,%eax
8d1c(5): mov 0x48(%rsp),%rbx
8d21(3): test %rbx,%rbx
8d24(2): jz 0x2e(%rip)
8d26(2): test %al,%al
8d28(2): jz 0x2a(%rip)
8d2a(3): movzx (%rbx),%ecx
8d2d(3): mov %rbx,%rax
8d30(2): test %cl,%cl
8d32(2): jz 0x20(%rip)
8d34(3): mov %r15,%rdx
8d37(3): sub %r15,%rax
8d3a(3): cmp %rdx,%r13
8d3d(2): jbe 0x6(%rip)
8d3f(4): mov %cl,0x0(%r14,%rdx,1)
8d43(4): add $0x1,%rdx
8d47(4): movzx 0x0(%rax,%rdx,1),%ecx
8d4b(2): test %cl,%cl
8d4d(2): jnz 0xffffffed(%rip)
8d4f(3): mov %rdx,%r15
8d52(3): cmp %r15,%r13
8d55(6): jbe 0xfffffaa4(%rip)
8d5b(5): mov $0x0,0x0(%r14,%r15,1)
8d60(5): jmp 0xfffffa99(%rip)
8d65(5): cmp $0x2,0x8(%rsp)
8d6a(5): movzx 0xf(%rsp),%ebx
8d6f(3): mov %r11,%rbp
8d72(3): setz %al
8d75(4): mov %bl,0xd(%rsp)
8d79(5): jmp 0xfffffa30(%rip)
8d7e(4): mov 0x8(%rsp),%esi
8d82(3): mov %rcx,%rdi
8d85(5): call 0xffffedab(%rip)
8d8a(5): mov %rax,0x68(%rsp)
8d8f(5): jmp 0xfffffc57(%rip)
8d94(4): mov 0x8(%rsp),%esi
8d98(3): mov %rcx,%rdi
8d9b(5): call 0xffffed95(%rip)
8da0(5): mov %rax,0x60(%rsp)
8da5(5): jmp 0xfffffc6c(%rip)
8daa(5): movzx 0xf(%rsp),%ebx
8daf(3): mov %r11,%rbp
8db2(2): mov %edx,%eax
8db4(4): mov %bl,0xd(%rsp)
8db8(5): jmp 0xfffff9f1(%rip)
8dbd(4): sub $0x8,%rsp
8dc1(6): mov $0x5,%r8d
8dc7(3): mov %r11,%rcx
8dca(4): push 0x68(%rsp)
8dce(4): push 0x78(%rsp)
8dd2(3): mov %r14,%rdi
8dd5(4): push 0x38(%rsp)
8dd9(8): mov 0x98(%rsp),%r9d
8de1(5): mov 0x30(%rsp),%rdx
8de6(5): mov 0x70(%rsp),%rsi
8deb(5): call 0xffffee35(%rip)
8df0(4): add $0x20,%rsp
8df4(3): mov %rax,%r15
8df7(5): jmp 0xfffffa02(%rip)
8dfc(5): movzx 0x7c(%rsp),%eax
8e01(5): jmp 0xffffff1b(%rip)
8e06(8): mov $0x2,0x8(%rsp)
8e0e(5): jmp 0xfffff99b(%rip)
8e13(5): call 0xffff887d(%rip)
8e18(5): mov $0x0,0xd(%rsp)
8e1d(5): jmp 0xfffffa74(%rip)
8e22(3): mov %r11,%rbp
8e25(5): jmp 0xfffff99b(%rip)
8e2a(5): mov $0x1,0xe(%rsp)
8e2f(2): xor %eax,%eax
8e31(3): xor %r12d,%r12d
8e34(9): mov $0x0,0x50(%rsp)
8e3d(5): jmp 0xfffff5a7(%rip)
8e42(3): mov %r13,%rdx
8e45(5): mov 0x50(%rsp),%r13
8e4a(5): jmp 0xfffff5f8(%rip)
8e4f(5): call 0xffff8771(%rip)

"quotearg_n_options" :
8e60(2): push %r15
8e62(2): push %r14
8e64(3): movsxd %edi,%r15
8e67(2): push %r13
8e69(2): push %r12
8e6b(3): mov %rdx,%r14
8e6e(1): push %rbp
8e6f(1): push %rbx
8e70(3): mov %rcx,%rbp
8e73(4): sub $0x28,%rsp
8e77(5): mov %rsi,0x8(%rsp)
8e7c(5): call 0xffff8754(%rip)
8e81(3): mov %rax,%r13
8e84(2): mov (%rax),%eax
8e86(3): test %r15d,%r15d
8e89(7): mov 0x2051f0(%rip),%rbx
8e90(4): mov %eax,0x18(%rsp)
8e94(6): js 0x16d(%rip)
8e9a(7): cmp %r15d,0x2051d7(%rip)
8ea1(2): jnle 0x64(%rip)
8ea3(7): cmp $0x7fffffff,%r15d
8eaa(6): jz 0x15c(%rip)
8eb0(4): lea 0x1(%r15),%r12d
8eb4(7): lea 0x2051d5(%rip),%rax
8ebb(3): movsxd %r12d,%rsi
8ebe(4): shl/sal $0x4,%rsi
8ec2(3): cmp %rax,%rbx
8ec5(6): jz 0x11b(%rip)
8ecb(3): mov %rbx,%rdi
8ece(5): call 0xf82(%rip)
8ed3(3): mov %rax,%rbx
8ed6(7): mov %rax,0x2051a3(%rip)
8edd(7): movsxd 0x205194(%rip),%rdi
8ee4(3): mov %r12d,%edx
8ee7(2): xor %esi,%esi
8ee9(2): sub %edi,%edx
8eeb(4): shl/sal $0x4,%rdi
8eef(3): movsxd %edx,%rdx
8ef2(3): add %rbx,%rdi
8ef5(4): shl/sal $0x4,%rdx
8ef9(5): call 0xffff8807(%rip)
8efe(7): mov %r12d,0x205173(%rip)
8f05(3): mov 0x4(%rbp),%eax
8f08(4): shl/sal $0x4,%r15
8f0c(4): sub $0x8,%rsp
8f10(3): add %r15,%rbx
8f13(4): lea 0x8(%rbp),%r15
8f17(4): mov 0x0(%rbp),%r8d
8f1b(3): mov (%rbx),%r11
8f1e(4): mov 0x8(%rbx),%r12
8f22(3): mov %r14,%rcx
8f25(3): or $0x1,%eax
8f28(4): mov %eax,0x24(%rsp)
8f2c(3): push 0x30(%rbp)
8f2f(3): mov %eax,%r9d
8f32(3): push 0x28(%rbp)
8f35(2): push %r15
8f37(3): mov %r11,%rsi
8f3a(5): mov 0x28(%rsp),%rdx
8f3f(3): mov %r12,%rdi
8f42(5): mov %r11,0x30(%rsp)
8f47(5): call 0xffffecd9(%rip)
8f4c(4): add $0x20,%rsp
8f50(5): mov 0x10(%rsp),%r11
8f55(3): cmp %rax,%r11
8f58(2): jnbe 0x69(%rip)
8f5a(4): lea 0x1(%rax),%rsi
8f5e(7): lea 0x2051db(%rip),%rax
8f65(3): cmp %rax,%r12
8f68(3): mov %rsi,(%rbx)
8f6b(2): jz 0x14(%rip)
8f6d(3): mov %r12,%rdi
8f70(5): mov %rsi,0x10(%rsp)
8f75(5): call 0xffff863b(%rip)
8f7a(5): mov 0x10(%rsp),%rsi
8f7f(3): mov %rsi,%rdi
8f82(5): mov %rsi,0x10(%rsp)
8f87(5): call 0xe69(%rip)
8f8c(4): sub $0x8,%rsp
8f90(4): mov %rax,0x8(%rbx)
8f94(4): mov 0x0(%rbp),%r8d
8f98(3): push 0x30(%rbp)
8f9b(3): push 0x28(%rbp)
8f9e(3): mov %r14,%rcx
8fa1(2): push %r15
8fa3(5): mov 0x3c(%rsp),%r9d
8fa8(3): mov %rax,%rdi
8fab(5): mov 0x28(%rsp),%rdx
8fb0(5): mov 0x30(%rsp),%rsi
8fb5(3): mov %rax,%r12
8fb8(5): call 0xffffec68(%rip)
8fbd(4): add $0x20,%rsp
8fc1(4): mov 0x18(%rsp),%eax
8fc5(4): mov %eax,0x0(%r13)
8fc9(4): add $0x28,%rsp
8fcd(3): mov %r12,%rax
8fd0(1): pop %rbx
8fd1(1): pop %rbp
8fd2(2): pop %r12
8fd4(2): pop %r13
8fd6(2): pop %r14
8fd8(2): pop %r15
8fda(1): ret near (%rsp)
8fdb(5): nop 0x0(%rax,%rax,1)
8fe0(2): xor %edi,%edi
8fe2(5): call 0xe6e(%rip)
8fe7(8): movdqa 0x2050a1(%rip),%xmm0
8fef(3): mov %rax,%rbx
8ff2(7): mov %rax,0x205087(%rip)
8ff9(3): movups %xmm0,(%rax)
8ffc(5): jmp 0xfffffee1(%rip)
9001(5): call 0xffff85bf(%rip)
9006(5): call 0x103a(%rip)

"clone_quoting_options" :
9010(2): push %r12
9012(1): push %rbp
9013(1): push %rbx
9014(3): mov %rdi,%rbx
9017(5): call 0xffff85b9(%rip)
901c(3): mov (%rax),%r12d
901f(3): mov %rax,%rbp
9022(7): lea 0x205217(%rip),%rax
9029(3): test %rbx,%rbx
902c(5): mov $0x38,%esi
9031(4): cmove %rax,%rbx
9035(3): mov %rbx,%rdi
9038(5): call 0xfb8(%rip)
903d(4): mov %r12d,0x0(%rbp)
9041(1): pop %rbx
9042(1): pop %rbp
9043(2): pop %r12
9045(1): ret near (%rsp)

"get_quoting_style" :
9050(7): lea 0x2051e9(%rip),%rax
9057(3): test %rdi,%rdi
905a(4): cmove %rax,%rdi
905e(2): mov (%rdi),%eax
9060(1): ret near (%rsp)

"set_quoting_style" :
9070(7): lea 0x2051c9(%rip),%rax
9077(3): test %rdi,%rdi
907a(4): cmove %rax,%rdi
907e(2): mov %esi,(%rdi)
9080(1): ret near (%rsp)

"set_char_quoting" :
9090(7): lea 0x2051a9(%rip),%rax
9097(3): test %rdi,%rdi
909a(2): mov %esi,%ecx
909c(4): cmove %rax,%rdi
90a0(2): mov %esi,%eax
90a2(3): and $0x1f,%ecx
90a5(3): shr $0x5,%al
90a8(3): movzx %al,%eax
90ab(5): lea 0x8(%rdi,%rax,4),%rdi
90b0(2): mov (%rdi),%esi
90b2(2): mov %esi,%eax
90b4(2): shr %cl,%eax
90b6(2): xor %eax,%edx
90b8(3): and $0x1,%eax
90bb(3): and $0x1,%edx
90be(2): shl/sal %cl,%edx
90c0(2): xor %esi,%edx
90c2(2): mov %edx,(%rdi)
90c4(1): ret near (%rsp)

"set_quoting_flags" :
90d0(7): lea 0x205169(%rip),%rax
90d7(3): test %rdi,%rdi
90da(4): cmove %rax,%rdi
90de(3): mov 0x4(%rdi),%eax
90e1(3): mov %esi,0x4(%rdi)
90e4(1): ret near (%rsp)

"set_custom_quoting" :
90f0(7): lea 0x205149(%rip),%rax
90f7(3): test %rdi,%rdi
90fa(4): cmove %rax,%rdi
90fe(3): test %rsi,%rsi
9101(6): mov $0xa,(%rdi)
9107(2): jz 0x10(%rip)
9109(3): test %rdx,%rdx
910c(2): jz 0xb(%rip)
910e(4): mov %rsi,0x28(%rdi)
9112(4): mov %rdx,0x30(%rdi)
9116(1): ret near (%rsp)
9117(4): sub $0x8,%rsp
911b(5): call 0xffff84a5(%rip)

"quotearg_buffer" :
9120(2): push %r15
9122(2): push %r14
9124(7): lea 0x205115(%rip),%rax
912b(2): push %r13
912d(2): push %r12
912f(3): mov %rdi,%r13
9132(1): push %rbp
9133(1): push %rbx
9134(3): mov %r8,%rbx
9137(3): mov %rsi,%r14
913a(3): mov %rdx,%r15
913d(4): sub $0x18,%rsp
9141(3): test %r8,%r8
9144(4): cmove %rax,%rbx
9148(5): mov %rcx,0x8(%rsp)
914d(5): call 0xffff8483(%rip)
9152(3): mov (%rax),%r12d
9155(3): mov %rax,%rbp
9158(4): lea 0x8(%rbx),%rax
915c(4): sub $0x8,%rsp
9160(4): mov 0x4(%rbx),%r9d
9164(3): push 0x30(%rbx)
9167(3): mov (%rbx),%r8d
916a(3): push 0x28(%rbx)
916d(3): mov %r15,%rdx
9170(1): push %rax
9171(5): mov 0x28(%rsp),%rcx
9176(3): mov %r14,%rsi
9179(3): mov %r13,%rdi
917c(5): call 0xffffeaa4(%rip)
9181(4): mov %r12d,0x0(%rbp)
9185(4): add $0x38,%rsp
9189(1): pop %rbx
918a(1): pop %rbp
918b(2): pop %r12
918d(2): pop %r13
918f(2): pop %r14
9191(2): pop %r15
9193(1): ret near (%rsp)

"quotearg_alloc_mem" :
91a0(2): push %r15
91a2(2): push %r14
91a4(7): lea 0x205095(%rip),%rax
91ab(2): push %r13
91ad(2): push %r12
91af(3): mov %rdx,%r12
91b2(1): push %rbp
91b3(1): push %rbx
91b4(3): mov %rcx,%rbx
91b7(3): mov %rdi,%r14
91ba(3): mov %rsi,%r15
91bd(4): sub $0x38,%rsp
91c1(3): test %rcx,%rcx
91c4(4): cmove %rax,%rbx
91c8(2): xor %ebp,%ebp
91ca(5): call 0xffff8406(%rip)
91cf(3): test %r12,%r12
91d2(3): mov %rax,%r13
91d5(2): mov (%rax),%eax
91d7(4): setz %bpl
91db(3): or 0x4(%rbx),%ebp
91de(4): lea 0x8(%rbx),%r10
91e2(4): sub $0x8,%rsp
91e6(3): mov (%rbx),%r8d
91e9(3): mov %r15,%rcx
91ec(4): mov %eax,0x14(%rsp)
91f0(3): push 0x30(%rbx)
91f3(3): mov %r14,%rdx
91f6(3): push 0x28(%rbx)
91f9(2): push %r10
91fb(2): xor %esi,%esi
91fd(3): mov %ebp,%r9d
9200(2): xor %edi,%edi
9202(5): mov %r10,0x40(%rsp)
9207(5): call 0xffffea19(%rip)
920c(4): lea 0x1(%rax),%rsi
9210(5): mov %rax,0x48(%rsp)
9215(4): add $0x20,%rsp
9219(3): mov %rsi,%rdi
921c(5): mov %rsi,0x18(%rsp)
9221(5): call 0xbcf(%rip)
9226(5): mov %rax,0x10(%rsp)
922b(4): sub $0x8,%rsp
922f(3): push 0x30(%rbx)
9232(3): push 0x28(%rbx)
9235(5): mov 0x38(%rsp),%r10
923a(3): mov %ebp,%r9d
923d(3): mov (%rbx),%r8d
9240(3): mov %r15,%rcx
9243(3): mov %r14,%rdx
9246(3): mov %rax,%rdi
9249(2): push %r10
924b(5): mov 0x38(%rsp),%rsi
9250(5): call 0xffffe9d0(%rip)
9255(4): mov 0x2c(%rsp),%eax
9259(4): add $0x20,%rsp
925d(3): test %r12,%r12
9260(4): mov %eax,0x0(%r13)
9264(2): jz 0xb(%rip)
9266(5): mov 0x28(%rsp),%r11
926b(4): mov %r11,(%r12)
926f(5): mov 0x10(%rsp),%rax
9274(4): add $0x38,%rsp
9278(1): pop %rbx
9279(1): pop %rbp
927a(2): pop %r12
927c(2): pop %r13
927e(2): pop %r14
9280(2): pop %r15
9282(1): ret near (%rsp)

"quotearg_alloc" :
9290(3): mov %rdx,%rcx
9293(2): xor %edx,%edx
9295(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
92a0(6): mov 0x204dd2(%rip),%eax
92a6(2): push %r12
92a8(7): mov 0x204dd1(%rip),%r12
92af(1): push %rbp
92b0(1): push %rbx
92b1(3): cmp $0x1,%eax
92b4(2): jle 0x2d(%rip)
92b6(3): sub $0x2,%eax
92b9(5): lea 0x18(%r12),%rbx
92be(4): shl/sal $0x4,%rax
92c2(5): lea 0x28(%r12,%rax,1),%rbp
92c7(9): nop 0x0(%rax,%rax,1)
92d0(3): mov (%rbx),%rdi
92d3(4): add $0x10,%rbx
92d7(5): call 0xffff82d9(%rip)
92dc(3): cmp %rbp,%rbx
92df(2): jnz 0xfffffff1(%rip)
92e1(5): mov 0x8(%r12),%rdi
92e6(7): lea 0x204e53(%rip),%rbx
92ed(3): cmp %rbx,%rdi
92f0(2): jz 0x19(%rip)
92f2(5): call 0xffff82be(%rip)
92f7(b): mov $0x100,0x204d8e(%rip)
9302(7): mov %rbx,0x204d8f(%rip)
9309(7): lea 0x204d80(%rip),%rbx
9310(3): cmp %rbx,%r12
9313(2): jz 0x11(%rip)
9315(3): mov %r12,%rdi
9318(5): call 0xffff8298(%rip)
931d(7): mov %rbx,0x204d5c(%rip)
9324(1): pop %rbx
9325(a): mov $0x1,0x204d49(%rip)
932f(1): pop %rbp
9330(2): pop %r12
9332(1): ret near (%rsp)

"quotearg_n" :
9340(7): lea 0x204ef9(%rip),%rcx
9347(7): mov $0xffffffff,%rdx
934e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
9360(7): lea 0x204ed9(%rip),%rcx
9367(5): jmp 0xfffffaf9(%rip)

"quotearg" :
9370(7): lea 0x204ec9(%rip),%rcx
9377(3): mov %rdi,%rsi
937a(7): mov $0xffffffff,%rdx
9381(2): xor %edi,%edi
9383(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
9390(7): lea 0x204ea9(%rip),%rcx
9397(3): mov %rsi,%rdx
939a(3): mov %rdi,%rsi
939d(2): xor %edi,%edi
939f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
93b0(4): sub $0x48,%rsp
93b4(3): mov %rdx,%rax
93b7(9): mov $0x28,%rdx
93c0(5): mov %rdx,0x38(%rsp)
93c5(2): xor %edx,%edx
93c7(3): cmp $0xa,%esi
93ca(2): jz 0x6a(%rip)
93cc(3): mov %esi,(%rsp)
93cf(3): mov %rsp,%rcx
93d2(7): mov $0xffffffff,%rdx
93d9(3): mov %rax,%rsi
93dc(9): mov $0x0,0x4(%rsp)
93e5(9): mov $0x0,0xc(%rsp)
93ee(9): mov $0x0,0x14(%rsp)
93f7(9): mov $0x0,0x1c(%rsp)
9400(9): mov $0x0,0x24(%rsp)
9409(9): mov $0x0,0x2c(%rsp)
9412(8): mov $0x0,0x34(%rsp)
941a(5): call 0xfffffa46(%rip)
941f(5): mov 0x38(%rsp),%rcx
9424(9): xor $0x28,%rcx
942d(2): jnz 0xc(%rip)
942f(4): add $0x48,%rsp
9433(1): ret near (%rsp)
9434(5): call 0xffff818c(%rip)
9439(5): call 0xffff8257(%rip)

"quotearg_n_style_mem" :
9440(4): sub $0x48,%rsp
9444(3): mov %rdx,%rax
9447(3): mov %rcx,%rdx
944a(9): mov $0x28,%rcx
9453(5): mov %rcx,0x38(%rsp)
9458(2): xor %ecx,%ecx
945a(3): cmp $0xa,%esi
945d(2): jz 0x63(%rip)
945f(3): mov %esi,(%rsp)
9462(3): mov %rsp,%rcx
9465(3): mov %rax,%rsi
9468(9): mov $0x0,0x4(%rsp)
9471(9): mov $0x0,0xc(%rsp)
947a(9): mov $0x0,0x14(%rsp)
9483(9): mov $0x0,0x1c(%rsp)
948c(9): mov $0x0,0x24(%rsp)
9495(9): mov $0x0,0x2c(%rsp)
949e(8): mov $0x0,0x34(%rsp)
94a6(5): call 0xfffff9ba(%rip)
94ab(5): mov 0x38(%rsp),%rdx
94b0(9): xor $0x28,%rdx
94b9(2): jnz 0xc(%rip)
94bb(4): add $0x48,%rsp
94bf(1): ret near (%rsp)
94c0(5): call 0xffff8100(%rip)
94c5(5): call 0xffff81cb(%rip)

"quotearg_style" :
94d0(3): mov %rsi,%rdx
94d3(2): mov %edi,%esi
94d5(2): xor %edi,%edi
94d7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
94e0(3): mov %rdx,%rcx
94e3(3): mov %rsi,%rdx
94e6(2): mov %edi,%esi
94e8(2): xor %edi,%edi
94ea(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
94f0(4): sub $0x48,%rsp
94f4(2): mov %edx,%ecx
94f6(9): mov $0x28,%rax
94ff(5): mov %rax,0x38(%rsp)
9504(2): xor %eax,%eax
9506(7): mov 0x204d63(%rip),%rax
950d(3): mov %rsp,%r8
9510(3): and $0x1f,%ecx
9513(8): movdqa 0x204d25(%rip),%xmm0
951b(5): mov %rax,0x30(%rsp)
9520(2): mov %edx,%eax
9522(4): movaps %xmm0,(%rsp)
9526(3): shr $0x5,%al
9529(3): movzx %al,%eax
952c(5): lea 0x8(%r8,%rax,4),%r9
9531(8): movdqa 0x204d17(%rip),%xmm0
9539(5): movaps %xmm0,0x10(%rsp)
953e(8): movdqa 0x204d1a(%rip),%xmm0
9546(5): movaps %xmm0,0x20(%rsp)
954b(3): mov (%r9),%edx
954e(2): mov %edx,%eax
9550(2): shr %cl,%eax
9552(2): not %eax
9554(3): and $0x1,%eax
9557(2): shl/sal %cl,%eax
9559(3): mov %r8,%rcx
955c(2): xor %edx,%eax
955e(3): mov %rsi,%rdx
9561(3): mov %rdi,%rsi
9564(3): mov %eax,(%r9)
9567(2): xor %edi,%edi
9569(5): call 0xfffff8f7(%rip)
956e(5): mov 0x38(%rsp),%rsi
9573(9): xor $0x28,%rsi
957c(2): jnz 0x7(%rip)
957e(4): add $0x48,%rsp
9582(1): ret near (%rsp)
9583(5): call 0xffff810d(%rip)

"quotearg_char" :
9590(4): movsx %sil,%edx
9594(7): mov $0xffffffff,%rsi
959b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
95a0(5): mov $0x3a,%edx
95a5(7): mov $0xffffffff,%rsi
95ac(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
95c0(5): mov $0x3a,%edx
95c5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
95d0(4): sub $0x48,%rsp
95d4(3): mov %rdx,%rax
95d7(9): mov $0x28,%rdx
95e0(5): mov %rdx,0x38(%rsp)
95e5(2): xor %edx,%edx
95e7(3): cmp $0xa,%esi
95ea(2): jz 0x6a(%rip)
95ec(3): mov %esi,(%rsp)
95ef(3): mov %rsp,%rcx
95f2(7): mov $0xffffffff,%rdx
95f9(3): mov %rax,%rsi
95fc(9): mov $0x0,0x4(%rsp)
9605(9): mov $0x4000000,0xc(%rsp)
960e(9): mov $0x0,0x14(%rsp)
9617(9): mov $0x0,0x1c(%rsp)
9620(9): mov $0x0,0x24(%rsp)
9629(9): mov $0x0,0x2c(%rsp)
9632(8): mov $0x0,0x34(%rsp)
963a(5): call 0xfffff826(%rip)
963f(5): mov 0x38(%rsp),%rcx
9644(9): xor $0x28,%rcx
964d(2): jnz 0xc(%rip)
964f(4): add $0x48,%rsp
9653(1): ret near (%rsp)
9654(5): call 0xffff7f6c(%rip)
9659(5): call 0xffff8037(%rip)

"quotearg_n_custom_mem" :
9660(4): sub $0x48,%rsp
9664(3): mov %rcx,%r9
9667(7): mov 0x204c02(%rip),%rcx
966e(8): movdqa 0x204bca(%rip),%xmm0
9676(9): mov $0x28,%rax
967f(5): mov %rax,0x38(%rsp)
9684(2): xor %eax,%eax
9686(4): movaps %xmm0,(%rsp)
968a(3): test %rsi,%rsi
968d(5): mov %rcx,0x30(%rsp)
9692(7): mov $0xa,(%rsp)
9699(8): movdqa 0x204baf(%rip),%xmm0
96a1(5): movaps %xmm0,0x10(%rsp)
96a6(8): movdqa 0x204bb2(%rip),%xmm0
96ae(5): movaps %xmm0,0x20(%rsp)
96b3(2): jz 0x34(%rip)
96b5(3): test %rdx,%rdx
96b8(2): jz 0x2f(%rip)
96ba(5): mov %rsi,0x28(%rsp)
96bf(5): mov %rdx,0x30(%rsp)
96c4(3): mov %rsp,%rcx
96c7(3): mov %r8,%rdx
96ca(3): mov %r9,%rsi
96cd(5): call 0xfffff793(%rip)
96d2(5): mov 0x38(%rsp),%rdi
96d7(9): xor $0x28,%rdi
96e0(2): jnz 0xc(%rip)
96e2(4): add $0x48,%rsp
96e6(1): ret near (%rsp)
96e7(5): call 0xffff7ed9(%rip)
96ec(5): call 0xffff7fa4(%rip)

"quotearg_n_custom" :
9700(7): mov $0xffffffff,%r8
9707(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
9710(3): mov %rdx,%rcx
9713(7): mov $0xffffffff,%r8
971a(3): mov %rsi,%rdx
971d(3): mov %rdi,%rsi
9720(2): xor %edi,%edi
9722(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
9730(3): mov %rcx,%r8
9733(3): mov %rdx,%rcx
9736(3): mov %rsi,%rdx
9739(3): mov %rdi,%rsi
973c(2): xor %edi,%edi
973e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
9750(7): lea 0x2048e9(%rip),%rcx
9757(5): jmp 0xfffff709(%rip)

"quote_mem" :
9760(7): lea 0x2048d9(%rip),%rcx
9767(3): mov %rsi,%rdx
976a(3): mov %rdi,%rsi
976d(2): xor %edi,%edi
976f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
9780(7): lea 0x2048b9(%rip),%rcx
9787(7): mov $0xffffffff,%rdx
978e(5): jmp 0xfffff6d2(%rip)

"quote" :
97a0(7): lea 0x204899(%rip),%rcx
97a7(3): mov %rdi,%rsi
97aa(7): mov $0xffffffff,%rdx
97b1(2): xor %edi,%edi
97b3(5): jmp 0xfffff6ad(%rip)

"dup_safer" :
97c0(5): mov $0x3,%edx
97c5(2): xor %esi,%esi
97c7(2): xor %eax,%eax
97c9(5): jmp 0x937(%rip)

"version_etc_arn" :
97d0(2): push %r15
97d2(2): push %r14
97d4(2): push %r13
97d6(2): push %r12
97d8(3): mov %r9,%r12
97db(1): push %rbp
97dc(1): push %rbx
97dd(3): mov %rdi,%rbp
97e0(3): mov %r8,%rbx
97e3(4): sub $0x28,%rsp
97e7(3): test %rsi,%rsi
97ea(6): jz 0x11e(%rip)
97f0(3): mov %rdx,%r8
97f3(7): lea 0x200e(%rip),%rdx
97fa(3): mov %rcx,%r9
97fd(2): xor %eax,%eax
97ff(3): mov %rsi,%rcx
9802(5): mov $0x1,%esi
9807(5): call 0xffff8099(%rip)
980c(7): lea 0x2008(%rip),%rsi
9813(2): xor %edi,%edi
9815(5): mov $0x5,%edx
981a(5): call 0xffff7e46(%rip)
981f(7): lea 0x231a(%rip),%rdx
9826(3): mov %rax,%rcx
9829(6): mov $0x7e3,%r8d
982f(5): mov $0x1,%esi
9834(3): mov %rbp,%rdi
9837(2): xor %eax,%eax
9839(5): call 0xffff8067(%rip)
983e(7): lea 0x2063(%rip),%rsi
9845(2): xor %edi,%edi
9847(5): mov $0x5,%edx
984c(5): call 0xffff7e14(%rip)
9851(3): mov %rbp,%rsi
9854(3): mov %rax,%rdi
9857(5): call 0xffff7ee9(%rip)
985c(4): cmp $0x9,%r12
9860(6): jnbe 0x340(%rip)
9866(7): lea 0x229b(%rip),%rdx
986d(4): movsxd 0x0(%rdx,%r12,4),%rax
9871(3): add %rdx,%rax
9874(2): jmp %rax
9876(a): nop 0x0(%rax,%rax,1)
9880(4): mov 0x38(%rbx),%r9
9884(4): mov 0x10(%rbx),%rax
9888(7): lea 0x2189(%rip),%rsi
988f(4): mov 0x8(%rbx),%r8
9893(5): mov $0x5,%edx
9898(2): xor %edi,%edi
989a(4): mov 0x30(%rbx),%r13
989e(4): mov 0x28(%rbx),%r12
98a2(5): mov %r9,0x10(%rsp)
98a7(4): mov 0x20(%rbx),%r15
98ab(4): mov 0x18(%rbx),%r14
98af(4): mov %rax,(%rsp)
98b3(5): mov %r8,0x8(%rsp)
98b8(3): mov (%rbx),%rbx
98bb(5): call 0xffff7da5(%rip)
98c0(4): sub $0x8,%rsp
98c4(5): mov 0x18(%rsp),%r9
98c9(3): mov %rax,%rdx
98cc(3): mov %rbx,%rcx
98cf(5): mov $0x1,%esi
98d4(3): mov %rbp,%rdi
98d7(2): xor %eax,%eax
98d9(2): push %r9
98db(2): push %r13
98dd(2): push %r12
98df(2): push %r15
98e1(2): push %r14
98e3(5): mov 0x30(%rsp),%r9
98e8(5): mov 0x38(%rsp),%r8
98ed(5): call 0xffff7fb3(%rip)
98f2(4): add $0x30,%rsp
98f6(4): add $0x28,%rsp
98fa(1): pop %rbx
98fb(1): pop %rbp
98fc(2): pop %r12
98fe(2): pop %r13
9900(2): pop %r14
9902(2): pop %r15
9904(1): ret near (%rsp)
9905(3): nop (%rax)
9908(3): mov %rcx,%r8
990b(3): mov %rdx,%rcx
990e(7): lea 0x1eff(%rip),%rdx
9915(5): mov $0x1,%esi
991a(2): xor %eax,%eax
991c(5): call 0xffff7f84(%rip)
9921(5): jmp 0xfffffeeb(%rip)
9926(a): nop 0x0(%rax,%rax,1)
9930(4): mov 0x40(%rbx),%r10
9934(4): mov 0x38(%rbx),%r9
9938(7): lea 0x2109(%rip),%rsi
993f(4): mov 0x10(%rbx),%rax
9943(4): mov 0x8(%rbx),%r8
9947(5): mov $0x5,%edx
994c(4): mov 0x30(%rbx),%r13
9950(4): mov 0x28(%rbx),%r12
9954(4): mov 0x20(%rbx),%r15
9958(4): mov 0x18(%rbx),%r14
995c(3): mov (%rbx),%rbx
995f(5): mov %r10,0x18(%rsp)
9964(5): mov %r9,0x10(%rsp)
9969(4): mov %rax,(%rsp)
996d(5): mov %r8,0x8(%rsp)
9972(2): xor %edi,%edi
9974(5): call 0xffff7cec(%rip)
9979(5): mov 0x18(%rsp),%r10
997e(2): push %r10
9980(5): jmp 0xffffff44(%rip)
9985(3): nop (%rax)
9988(3): mov (%rbx),%rbx
998b(7): lea 0x1e8d(%rip),%rsi
9992(5): mov $0x5,%edx
9997(2): xor %edi,%edi
9999(5): call 0xffff7cc7(%rip)
999e(4): add $0x28,%rsp
99a2(3): mov %rbx,%rcx
99a5(3): mov %rbp,%rdi
99a8(1): pop %rbx
99a9(1): pop %rbp
99aa(2): pop %r12
99ac(2): pop %r13
99ae(2): pop %r14
99b0(2): pop %r15
99b2(3): mov %rax,%rdx
99b5(5): mov $0x1,%esi
99ba(2): xor %eax,%eax
99bc(5): jmp 0xffff7ee4(%rip)
99c1(7): nop 0x0(%rax)
99c8(4): mov 0x8(%rbx),%r12
99cc(7): lea 0x1e5c(%rip),%rsi
99d3(3): mov (%rbx),%rbx
99d6(5): mov $0x5,%edx
99db(2): xor %edi,%edi
99dd(5): call 0xffff7c83(%rip)
99e2(4): add $0x28,%rsp
99e6(3): mov %r12,%r8
99e9(3): mov %rbx,%rcx
99ec(3): mov %rbp,%rdi
99ef(3): mov %rax,%rdx
99f2(5): mov $0x1,%esi
99f7(1): pop %rbx
99f8(1): pop %rbp
99f9(2): pop %r12
99fb(2): pop %r13
99fd(2): pop %r14
99ff(2): pop %r15
9a01(2): xor %eax,%eax
9a03(5): jmp 0xffff7e9d(%rip)
9a08(8): nop 0x0(%rax,%rax,1)
9a10(4): mov 0x10(%rbx),%r13
9a14(4): mov 0x8(%rbx),%r12
9a18(7): lea 0x1e27(%rip),%rsi
9a1f(3): mov (%rbx),%rbx
9a22(5): mov $0x5,%edx
9a27(2): xor %edi,%edi
9a29(5): call 0xffff7c37(%rip)
9a2e(4): add $0x28,%rsp
9a32(3): mov %r13,%r9
9a35(3): mov %r12,%r8
9a38(3): mov %rbx,%rcx
9a3b(3): mov %rbp,%rdi
9a3e(3): mov %rax,%rdx
9a41(1): pop %rbx
9a42(1): pop %rbp
9a43(2): pop %r12
9a45(2): pop %r13
9a47(2): pop %r14
9a49(2): pop %r15
9a4b(5): mov $0x1,%esi
9a50(2): xor %eax,%eax
9a52(5): jmp 0xffff7e4e(%rip)
9a57(9): nop 0x0(%rax,%rax,1)
9a60(7): lea 0x1f11(%rip),%rsi
9a67(5): mov $0x5,%edx
9a6c(2): xor %edi,%edi
9a6e(4): mov 0x18(%rbx),%r14
9a72(4): mov 0x10(%rbx),%r13
9a76(4): mov 0x8(%rbx),%r12
9a7a(3): mov (%rbx),%rbx
9a7d(5): call 0xffff7be3(%rip)
9a82(4): sub $0x8,%rsp
9a86(2): push %r14
9a88(3): mov %rax,%rdx
9a8b(3): mov %r13,%r9
9a8e(3): mov %r12,%r8
9a91(3): mov %rbx,%rcx
9a94(3): mov %rbp,%rdi
9a97(5): mov $0x1,%esi
9a9c(2): xor %eax,%eax
9a9e(5): call 0xffff7e02(%rip)
9aa3(1): pop %rax
9aa4(1): pop %rdx
9aa5(4): add $0x28,%rsp
9aa9(1): pop %rbx
9aaa(1): pop %rbp
9aab(2): pop %r12
9aad(2): pop %r13
9aaf(2): pop %r14
9ab1(2): pop %r15
9ab3(1): ret near (%rsp)
9ab4(4): nop 0x0(%rax)
9ab8(4): mov 0x20(%rbx),%r15
9abc(7): lea 0x1ed5(%rip),%rsi
9ac3(5): mov $0x5,%edx
9ac8(2): xor %edi,%edi
9aca(4): mov 0x18(%rbx),%r14
9ace(4): mov 0x10(%rbx),%r13
9ad2(4): mov 0x8(%rbx),%r12
9ad6(3): mov (%rbx),%rbx
9ad9(5): call 0xffff7b87(%rip)
9ade(2): push %r15
9ae0(2): jmp 0xffffffa6(%rip)
9ae2(6): nop 0x0(%rax,%rax,1)
9ae8(4): mov 0x8(%rbx),%r8
9aec(4): mov 0x28(%rbx),%r12
9af0(7): lea 0x1ec9(%rip),%rsi
9af7(4): mov 0x20(%rbx),%r15
9afb(4): mov 0x18(%rbx),%r14
9aff(5): mov $0x5,%edx
9b04(4): mov 0x10(%rbx),%r13
9b08(2): xor %edi,%edi
9b0a(3): mov (%rbx),%rbx
9b0d(4): mov %r8,(%rsp)
9b11(5): call 0xffff7b4f(%rip)
9b16(4): sub $0x8,%rsp
9b1a(3): mov %r13,%r9
9b1d(2): push %r12
9b1f(2): push %r15
9b21(2): push %r14
9b23(5): mov 0x20(%rsp),%r8
9b28(3): mov %rbx,%rcx
9b2b(3): mov %rax,%rdx
9b2e(3): mov %rbp,%rdi
9b31(5): mov $0x1,%esi
9b36(2): xor %eax,%eax
9b38(5): call 0xffff7d68(%rip)
9b3d(4): add $0x20,%rsp
9b41(4): add $0x28,%rsp
9b45(1): pop %rbx
9b46(1): pop %rbp
9b47(2): pop %r12
9b49(2): pop %r13
9b4b(2): pop %r14
9b4d(2): pop %r15
9b4f(1): ret near (%rsp)
9b50(4): mov 0x10(%rbx),%r9
9b54(4): mov 0x30(%rbx),%r13
9b58(7): lea 0x1e89(%rip),%rsi
9b5f(4): mov 0x28(%rbx),%r12
9b63(4): mov 0x20(%rbx),%r15
9b67(5): mov $0x5,%edx
9b6c(4): mov 0x18(%rbx),%r14
9b70(4): mov 0x8(%rbx),%r8
9b74(2): xor %edi,%edi
9b76(5): mov %r9,0x8(%rsp)
9b7b(3): mov (%rbx),%rbx
9b7e(4): mov %r8,(%rsp)
9b82(5): call 0xffff7ade(%rip)
9b87(2): push %r13
9b89(2): push %r12
9b8b(2): push %r15
9b8d(2): push %r14
9b8f(5): mov 0x28(%rsp),%r9
9b94(2): jmp 0xffffff8f(%rip)
9b96(a): nop 0x0(%rax,%rax,1)
9ba0(4): mov 0x40(%rbx),%r10
9ba4(4): mov 0x38(%rbx),%r9
9ba8(5): mov $0x5,%edx
9bad(4): mov 0x10(%rbx),%rax
9bb1(4): mov 0x8(%rbx),%r8
9bb5(7): lea 0x1ec4(%rip),%rsi
9bbc(4): mov 0x30(%rbx),%r13
9bc0(4): mov 0x28(%rbx),%r12
9bc4(4): mov 0x20(%rbx),%r15
9bc8(4): mov 0x18(%rbx),%r14
9bcc(5): mov %r10,0x18(%rsp)
9bd1(5): mov %r9,0x10(%rsp)
9bd6(4): mov %rax,(%rsp)
9bda(5): mov %r8,0x8(%rsp)
9bdf(3): mov (%rbx),%rbx
9be2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
9bf0(3): xor %r9d,%r9d
9bf3(4): cmp $0x0,(%r8)
9bf7(2): jz 0x14(%rip)
9bf9(7): nop 0x0(%rax)
9c00(4): add $0x1,%r9
9c04(5): cmp $0x0,0x0(%r8,%r9,8)
9c09(2): jnz 0xfffffff7(%rip)
9c0b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
9c10(4): sub $0x68,%rsp
9c14(3): mov %r8,%r10
9c17(3): xor %r9d,%r9d
9c1a(9): mov $0x28,%rax
9c23(5): mov %rax,0x58(%rsp)
9c28(2): xor %eax,%eax
9c2a(3): mov %rsp,%r8
9c2d(3): nop (%rax)
9c30(3): mov (%r10),%eax
9c33(3): cmp $0x2f,%eax
9c36(2): jnbe 0x44(%rip)
9c38(3): mov %eax,%r11d
9c3b(4): add 0x10(%r10),%r11
9c3f(3): add $0x8,%eax
9c42(3): mov %eax,(%r10)
9c45(3): mov (%r11),%rax
9c48(3): test %rax,%rax
9c4b(4): mov %rax,0x0(%r8,%r9,8)
9c4f(2): jz 0xc(%rip)
9c51(4): add $0x1,%r9
9c55(4): cmp $0xa,%r9
9c59(2): jnz 0xffffffd7(%rip)
9c5b(5): call 0xfffffb75(%rip)
9c60(5): mov 0x58(%rsp),%rax
9c65(9): xor $0x28,%rax
9c6e(2): jnz 0x7(%rip)
9c70(4): add $0x68,%rsp
9c74(1): ret near (%rsp)
9c75(5): call 0xffff7a1b(%rip)
9c7a(4): mov 0x8(%r10),%r11
9c7e(4): lea 0x8(%r11),%rax
9c82(4): mov %rax,0x8(%r10)
9c86(2): jmp 0xffffffbf(%rip)

"version_etc" :
9c90(1): push %rbp
9c91(1): push %rbx
9c92(6): mov $0x20,%r10d
9c98(3): xor %r11d,%r11d
9c9b(7): sub $0xb8,%rsp
9ca2(9): mov $0x28,%rax
9cab(5): mov %rax,0x78(%rsp)
9cb0(2): xor %eax,%eax
9cb2(8): lea 0xd0(%rsp),%rax
9cba(8): mov %r8,0xa0(%rsp)
9cc2(8): lea 0xd0(%rsp),%rbx
9cca(5): lea 0x20(%rsp),%r8
9ccf(8): mov %r9,0xa8(%rsp)
9cd7(8): mov $0x20,0x8(%rsp)
9cdf(5): mov %rax,0x10(%rsp)
9ce4(8): lea 0x80(%rsp),%rax
9cec(3): xor %r9d,%r9d
9cef(5): mov %rax,0x18(%rsp)
9cf4(3): mov %rax,%rbp
9cf7(9): nop 0x0(%rax,%rax,1)
9d00(4): cmp $0x2f,%r10d
9d04(2): jnbe 0x58(%rip)
9d06(3): mov %r10d,%eax
9d09(6): mov $0x1,%r11d
9d0f(4): add $0x8,%r10d
9d13(3): add %rbp,%rax
9d16(3): mov (%rax),%rax
9d19(3): test %rax,%rax
9d1c(4): mov %rax,0x0(%r8,%r9,8)
9d20(2): jz 0xc(%rip)
9d22(4): add $0x1,%r9
9d26(4): cmp $0xa,%r9
9d2a(2): jnz 0xffffffd6(%rip)
9d2c(3): test %r11b,%r11b
9d2f(2): jnz 0x26(%rip)
9d31(5): call 0xfffffa9f(%rip)
9d36(5): mov 0x78(%rsp),%rax
9d3b(9): xor $0x28,%rax
9d44(2): jnz 0xc(%rip)
9d46(7): add $0xb8,%rsp
9d4d(1): pop %rbx
9d4e(1): pop %rbp
9d4f(1): ret near (%rsp)
9d50(5): call 0xffff7940(%rip)
9d55(5): mov %r10d,0x8(%rsp)
9d5a(2): jmp 0xffffffd7(%rip)
9d5c(3): mov %rbx,%rax
9d5f(4): add $0x8,%rbx
9d63(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
9d70(1): push %rbx
9d71(7): lea 0x1aea(%rip),%rsi
9d78(5): mov $0x5,%edx
9d7d(2): xor %edi,%edi
9d7f(5): call 0xffff78e1(%rip)
9d84(7): lea 0x1aec(%rip),%rdx
9d8b(3): mov %rax,%rsi
9d8e(5): mov $0x1,%edi
9d93(2): xor %eax,%eax
9d95(5): call 0xffff7a7b(%rip)
9d9a(7): lea 0x1aec(%rip),%rsi
9da1(5): mov $0x5,%edx
9da6(2): xor %edi,%edi
9da8(5): call 0xffff78b8(%rip)
9dad(7): lea 0x1004(%rip),%rcx
9db4(7): lea 0x957(%rip),%rdx
9dbb(3): mov %rax,%rsi
9dbe(5): mov $0x1,%edi
9dc3(2): xor %eax,%eax
9dc5(5): call 0xffff7a4b(%rip)
9dca(7): mov 0x2042d7(%rip),%rbx
9dd1(7): lea 0x1ce8(%rip),%rsi
9dd8(2): xor %edi,%edi
9dda(5): mov $0x5,%edx
9ddf(5): call 0xffff7881(%rip)
9de4(3): mov %rbx,%rsi
9de7(3): mov %rax,%rdi
9dea(1): pop %rbx
9deb(5): jmp 0xffff7955(%rip)

"xmalloc" :
9df0(1): push %rbx
9df1(3): mov %rdi,%rbx
9df4(5): call 0xffff799c(%rip)
9df9(3): test %rax,%rax
9dfc(2): jnz 0x7(%rip)
9dfe(3): test %rbx,%rbx
9e01(2): jnz 0x4(%rip)
9e03(1): pop %rbx
9e04(1): ret near (%rsp)
9e05(5): call 0x23b(%rip)

"xnmalloc" :
9e10(3): mov %rdi,%rax
9e13(3): mul %rax,%rsi,%rdx
9e16(3): mov %rax,%rdi
9e19(3): seto %al
9e1c(3): test %rdi,%rdi
9e1f(2): js 0xc(%rip)
9e21(3): movzx %al,%eax
9e24(3): test %rax,%rax
9e27(2): jnz 0x4(%rip)
9e29(2): jmp 0xffffffc7(%rip)
9e2b(4): sub $0x8,%rsp
9e2f(5): call 0x211(%rip)

"xrealloc" :
9e50(3): test %rsi,%rsi
9e53(1): push %rbx
9e54(3): mov %rsi,%rbx
9e57(2): jnz 0x7(%rip)
9e59(3): test %rdi,%rdi
9e5c(2): jnz 0x1c(%rip)
9e5e(3): mov %rbx,%rsi
9e61(5): call 0xffff797f(%rip)
9e66(3): test %rax,%rax
9e69(2): jnz 0x7(%rip)
9e6b(3): test %rbx,%rbx
9e6e(2): jnz 0x13(%rip)
9e70(1): pop %rbx
9e71(1): ret near (%rsp)
9e72(6): nop 0x0(%rax,%rax,1)
9e78(5): call 0xffff7738(%rip)
9e7d(2): xor %eax,%eax
9e7f(1): pop %rbx
9e80(1): ret near (%rsp)
9e81(5): call 0x1bf(%rip)

"xnrealloc" :
9e90(3): mov %rsi,%rax
9e93(3): mul %rax,%rdx,%rdx
9e96(3): mov %rax,%rsi
9e99(3): seto %al
9e9c(3): test %rsi,%rsi
9e9f(2): js 0xc(%rip)
9ea1(3): movzx %al,%eax
9ea4(3): test %rax,%rax
9ea7(2): jnz 0x4(%rip)
9ea9(2): jmp 0xffffffa7(%rip)
9eab(4): sub $0x8,%rsp
9eaf(5): call 0x191(%rip)

"x2nrealloc" :
9ec0(3): test %rdi,%rdi
9ec3(3): mov %rdx,%r9
9ec6(3): mov (%rsi),%rcx
9ec9(2): jz 0x37(%rip)
9ecb(2): xor %edx,%edx
9ecd(a): mov $0x6148914691236517204,%rax
9ed7(3): div %r9,%rax
9eda(3): cmp %rcx,%rax
9edd(2): jbe 0x3e(%rip)
9edf(3): mov %rcx,%rax
9ee2(3): shr $0x1,%rax
9ee5(5): lea 0x1(%rax,%rcx,1),%rcx
9eea(3): mov %rcx,(%rsi)
9eed(4): imul %r9,%rcx
9ef1(3): mov %rcx,%rsi
9ef4(5): jmp 0xffffff5c(%rip)
9ef9(7): nop 0x0(%rax)
9f00(3): test %rcx,%rcx
9f03(2): jz 0x25(%rip)
9f05(3): mov %rcx,%rax
9f08(3): mul %rax,%r9,%rdx
9f0b(3): seto %dl
9f0e(3): test %rax,%rax
9f11(3): movzx %dl,%edx
9f14(2): js 0x7(%rip)
9f16(3): test %rdx,%rdx
9f19(2): jz 0xffffffd1(%rip)
9f1b(4): sub $0x8,%rsp
9f1f(5): call 0x121(%rip)
9f24(4): nop 0x0(%rax)
9f28(2): xor %edx,%edx
9f2a(5): mov $0x80,%eax
9f2f(3): xor %r8d,%r8d
9f32(3): div %r9,%rax
9f35(3): test %rax,%rax
9f38(4): setz %r8b
9f3c(4): lea 0x0(%r8,%rax,1),%rcx
9f40(2): jmp 0xffffffc5(%rip)

"x2realloc" :
9f50(3): test %rdi,%rdi
9f53(3): mov (%rsi),%rax
9f56(2): jz 0x2a(%rip)
9f58(a): mov $0x6148914691236517203,%rdx
9f62(3): cmp %rdx,%rax
9f65(2): jnbe 0x2c(%rip)
9f67(3): mov %rax,%rdx
9f6a(3): shr $0x1,%rdx
9f6d(5): lea 0x1(%rdx,%rax,1),%rax
9f72(3): mov %rax,(%rsi)
9f75(3): mov %rax,%rsi
9f78(5): jmp 0xfffffed8(%rip)
9f7d(3): nop (%rax)
9f80(3): test %rax,%rax
9f83(5): mov $0x80,%edx
9f88(4): cmove %rdx,%rax
9f8c(3): test %rax,%rax
9f8f(2): jns 0xffffffe3(%rip)
9f91(4): sub $0x8,%rsp
9f95(5): call 0xab(%rip)

"xzalloc" :
9fa0(1): push %rbx
9fa1(3): mov %rdi,%rbx
9fa4(5): call 0xfffffe4c(%rip)
9fa9(3): mov %rbx,%rdx
9fac(2): xor %esi,%esi
9fae(3): mov %rax,%rdi
9fb1(1): pop %rbx
9fb2(5): jmp 0xffff774e(%rip)

"xcalloc" :
9fc0(3): mov %rdi,%rax
9fc3(4): sub $0x8,%rsp
9fc7(3): mul %rax,%rsi,%rdx
9fca(3): seto %dl
9fcd(3): test %rax,%rax
9fd0(2): js 0x19(%rip)
9fd2(3): movzx %dl,%edx
9fd5(3): test %rdx,%rdx
9fd8(2): jnz 0x11(%rip)
9fda(5): call 0xffff7776(%rip)
9fdf(3): test %rax,%rax
9fe2(2): jz 0x7(%rip)
9fe4(4): add $0x8,%rsp
9fe8(1): ret near (%rsp)
9fe9(5): call 0x57(%rip)

"xmemdup" :
9ff0(1): push %rbp
9ff1(1): push %rbx
9ff2(3): mov %rdi,%rbp
9ff5(3): mov %rsi,%rdi
9ff8(3): mov %rsi,%rbx
9ffb(4): sub $0x8,%rsp
9fff(5): call 0xfffffdf1(%rip)
a004(4): add $0x8,%rsp
a008(3): mov %rbx,%rdx
a00b(3): mov %rbp,%rsi
a00e(1): pop %rbx
a00f(1): pop %rbp
a010(3): mov %rax,%rdi
a013(5): jmp 0xffff775d(%rip)

"xstrdup" :
a020(1): push %rbx
a021(3): mov %rdi,%rbx
a024(5): call 0xffff765c(%rip)
a029(3): mov %rbx,%rdi
a02c(4): lea 0x1(%rax),%rsi
a030(1): pop %rbx
a031(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
a040(7): lea 0x1b28(%rip),%rsi
a047(4): sub $0x8,%rsp
a04b(5): mov $0x5,%edx
a050(2): xor %edi,%edi
a052(5): call 0xffff760e(%rip)
a057(6): mov 0x203fc3(%rip),%edi
a05d(7): lea 0x11f1(%rip),%rdx
a064(3): mov %rax,%rcx
a067(2): xor %esi,%esi
a069(2): xor %eax,%eax
a06b(5): call 0xffff77c5(%rip)
a070(5): call 0xffff7550(%rip)

"rpl_fclose" :
a080(2): push %r12
a082(1): push %rbp
a083(1): push %rbx
a084(3): mov %rdi,%rbx
a087(5): call 0xffff76f9(%rip)
a08c(2): test %eax,%eax
a08e(3): mov %rbx,%rdi
a091(2): js 0x56(%rip)
a093(5): call 0xffff772d(%rip)
a098(2): test %eax,%eax
a09a(2): jnz 0x2e(%rip)
a09c(3): mov %rbx,%rdi
a09f(5): call 0x2e1(%rip)
a0a4(2): test %eax,%eax
a0a6(2): jz 0x3e(%rip)
a0a8(5): call 0xffff7528(%rip)
a0ad(3): mov (%rax),%r12d
a0b0(3): mov %rbx,%rdi
a0b3(3): mov %rax,%rbp
a0b6(5): call 0xffff758a(%rip)
a0bb(3): test %r12d,%r12d
a0be(2): jnz 0x32(%rip)
a0c0(1): pop %rbx
a0c1(1): pop %rbp
a0c2(2): pop %r12
a0c4(1): ret near (%rsp)
a0c5(3): nop (%rax)
a0c8(3): mov %rbx,%rdi
a0cb(5): call 0xffff76b5(%rip)
a0d0(2): xor %esi,%esi
a0d2(5): mov $0x1,%edx
a0d7(2): mov %eax,%edi
a0d9(5): call 0xffff7617(%rip)
a0de(4): cmp $0xffffffff,%rax
a0e2(2): jnz 0xffffffba(%rip)
a0e4(3): mov %rbx,%rdi
a0e7(1): pop %rbx
a0e8(1): pop %rbp
a0e9(2): pop %r12
a0eb(5): jmp 0xffff7555(%rip)
a0f0(4): mov %r12d,0x0(%rbp)
a0f4(5): mov $0xffffffff,%eax
a0f9(2): jmp 0xffffffc7(%rip)

"rpl_fcntl" :
a100(2): push %r12
a102(1): push %rbp
a103(2): mov %edi,%ebp
a105(1): push %rbx
a106(4): sub $0x50,%rsp
a10a(9): mov $0x28,%rax
a113(5): mov %rax,0x18(%rsp)
a118(2): xor %eax,%eax
a11a(5): lea 0x70(%rsp),%rax
a11f(2): test %esi,%esi
a121(5): mov %rdx,0x30(%rsp)
a126(5): mov %rcx,0x38(%rsp)
a12b(5): mov %r8,0x40(%rsp)
a130(5): mov %rax,0x8(%rsp)
a135(5): lea 0x20(%rsp),%rax
a13a(5): mov %r9,0x48(%rsp)
a13f(7): mov $0x10,(%rsp)
a146(5): mov %rax,0x10(%rsp)
a14b(6): jz 0x207(%rip)
a151(6): cmp $0x406,%esi
a157(2): jnz 0x49(%rip)
a159(5): mov 0x10(%rsp),%rax
a15e(7): cmp $0x0,0x204113(%rip)
a165(7): mov $0x18,(%rsp)
a16c(4): mov 0x10(%rax),%r12d
a170(3): mov %r12d,%edx
a173(6): js 0x130(%rip)
a179(2): xor %eax,%eax
a17b(5): mov $0x406,%esi
a180(5): call 0xffff7490(%rip)
a185(2): test %eax,%eax
a187(2): mov %eax,%ebx
a189(6): js 0x18f(%rip)
a18f(a): mov $0x1,0x2040df(%rip)
a199(2): jmp 0x47(%rip)
a19b(5): nop 0x0(%rax,%rax,1)
a1a0(3): cmp $0xb,%esi
a1a3(2): jz 0x2d(%rip)
a1a5(2): jnle 0x5b(%rip)
a1a7(3): cmp $0x4,%esi
a1aa(6): jz 0xd6(%rip)
a1b0(6): jnle 0xc0(%rip)
a1b6(3): cmp $0x2,%esi
a1b9(6): jz 0xc7(%rip)
a1bf(2): jnle 0x11(%rip)
a1c1(3): cmp $0x1,%esi
a1c4(2): jnz 0x64(%rip)
a1c6(a): nop 0x0(%rax,%rax,1)
a1d0(2): mov %ebp,%edi
a1d2(2): xor %eax,%eax
a1d4(5): call 0xffff743c(%rip)
a1d9(2): mov %eax,%ebx
a1db(5): nop 0x0(%rax,%rax,1)
a1e0(5): mov 0x18(%rsp),%rcx
a1e5(9): xor $0x28,%rcx
a1ee(2): mov %ebx,%eax
a1f0(6): jnz 0x15d(%rip)
a1f6(4): add $0x50,%rsp
a1fa(1): pop %rbx
a1fb(1): pop %rbp
a1fc(2): pop %r12
a1fe(1): ret near (%rsp)
a1ff(1): nop 
a200(6): cmp $0x407,%esi
a206(2): jnle 0x4a(%rip)
a208(6): cmp $0x406,%esi
a20e(2): jnl 0x72(%rip)
a210(6): cmp $0x401,%esi
a216(2): jz 0xffffffba(%rip)
a218(6): cmp $0x402,%esi
a21e(2): jz 0x62(%rip)
a220(6): cmp $0x400,%esi
a226(2): jz 0x5a(%rip)
a228(3): mov (%rsp),%eax
a22b(3): cmp $0x2f,%eax
a22e(6): jnbe 0x13c(%rip)
a234(5): add 0x10(%rsp),%rax
a239(3): mov (%rax),%rdx
a23c(2): mov %ebp,%edi
a23e(2): xor %eax,%eax
a240(5): call 0xffff73d0(%rip)
a245(2): mov %eax,%ebx
a247(2): jmp 0xffffff99(%rip)
a249(7): nop 0x0(%rax)
a250(6): cmp $0x409,%esi
a256(2): jz 0x2a(%rip)
a258(6): jl 0xffffff78(%rip)
a25e(6): cmp $0x40a,%esi
a264(2): jnz 0xffffffc4(%rip)
a266(5): jmp 0xffffff6a(%rip)
a26b(5): nop 0x0(%rax,%rax,1)
a270(3): cmp $0x9,%esi
a273(6): jz 0xffffff5d(%rip)
a279(2): jnle 0x7(%rip)
a27b(3): cmp $0x8,%esi
a27e(2): jnz 0xffffffaa(%rip)
a280(3): mov (%rsp),%eax
a283(3): cmp $0x2f,%eax
a286(6): jnbe 0xee(%rip)
a28c(5): add 0x10(%rsp),%rax
a291(2): mov (%rax),%edx
a293(2): mov %ebp,%edi
a295(2): xor %eax,%eax
a297(5): call 0xffff7379(%rip)
a29c(2): mov %eax,%ebx
a29e(5): jmp 0xffffff42(%rip)
a2a3(2): xor %esi,%esi
a2a5(2): xor %eax,%eax
a2a7(5): call 0xffff7369(%rip)
a2ac(2): test %eax,%eax
a2ae(2): mov %eax,%ebx
a2b0(6): js 0xffffff30(%rip)
a2b6(7): cmp $0xff,0x203fbb(%rip)
a2bd(6): jnz 0xffffff23(%rip)
a2c3(2): xor %eax,%eax
a2c5(5): mov $0x1,%esi
a2ca(2): mov %ebx,%edi
a2cc(5): call 0xffff7344(%rip)
a2d1(2): test %eax,%eax
a2d3(2): js 0x1e(%rip)
a2d5(3): or $0x1,%eax
a2d8(5): mov $0x2,%esi
a2dd(2): mov %ebx,%edi
a2df(2): mov %eax,%edx
a2e1(2): xor %eax,%eax
a2e3(5): call 0xffff732d(%rip)
a2e8(3): cmp $0xff,%eax
a2eb(6): jnz 0xfffffef5(%rip)
a2f1(5): call 0xffff72df(%rip)
a2f6(3): mov (%rax),%r12d
a2f9(3): mov %rax,%rbp
a2fc(2): mov %ebx,%edi
a2fe(5): call 0xffff7412(%rip)
a303(5): mov $0xffffffff,%ebx
a308(4): mov %r12d,0x0(%rbp)
a30c(5): jmp 0xfffffed4(%rip)
a311(7): nop 0x0(%rax)
a318(5): call 0xffff72b8(%rip)
a31d(3): cmp $0x16,(%rax)
a320(6): jnz 0xfffffe6f(%rip)
a326(2): xor %esi,%esi
a328(2): xor %eax,%eax
a32a(3): mov %r12d,%edx
a32d(2): mov %ebp,%edi
a32f(5): call 0xffff72e1(%rip)
a334(2): test %eax,%eax
a336(2): mov %eax,%ebx
a338(6): js 0xfffffea8(%rip)
a33e(a): mov $0xffffffff,0x203f30(%rip)
a348(5): jmp 0xffffff7b(%rip)
a34d(5): call 0xffff7343(%rip)
a352(5): mov 0x10(%rsp),%rax
a357(2): xor %esi,%esi
a359(3): mov 0x10(%rax),%edx
a35c(2): xor %eax,%eax
a35e(5): call 0xffff72b2(%rip)
a363(2): mov %eax,%ebx
a365(5): jmp 0xfffffe7b(%rip)
a36a(5): mov 0x8(%rsp),%rax
a36f(5): jmp 0xfffffeca(%rip)
a374(5): mov 0x8(%rsp),%rax
a379(5): jmp 0xffffff18(%rip)

"rpl_fflush" :
a380(3): test %rdi,%rdi
a383(1): push %rbx
a384(3): mov %rdi,%rbx
a387(2): jz 0x13(%rip)
a389(5): call 0xffff7437(%rip)
a38e(2): test %eax,%eax
a390(2): jz 0xa(%rip)
a392(6): test $0x100,(%rbx)
a398(2): jnz 0x10(%rip)
a39a(3): mov %rbx,%rdi
a39d(1): pop %rbx
a39e(5): jmp 0xffff7402(%rip)
a3a3(5): nop 0x0(%rax,%rax,1)
a3a8(3): mov %rbx,%rdi
a3ab(5): mov $0x1,%edx
a3b0(2): xor %esi,%esi
a3b2(5): call 0xe(%rip)
a3b7(3): mov %rbx,%rdi
a3ba(1): pop %rbx
a3bb(5): jmp 0xffff73e5(%rip)

"rpl_fseeko" :
a3c0(4): mov 0x8(%rdi),%rax
a3c4(4): cmp %rax,0x10(%rdi)
a3c8(2): jz 0x8(%rip)
a3ca(5): jmp 0xffff7476(%rip)
a3cf(1): nop 
a3d0(4): mov 0x20(%rdi),%rax
a3d4(4): cmp %rax,0x28(%rdi)
a3d8(2): jnz 0xfffffff2(%rip)
a3da(5): cmp $0x0,0x48(%rdi)
a3df(2): jnz 0xffffffeb(%rip)
a3e1(2): push %r12
a3e3(1): push %rbp
a3e4(3): mov %edx,%r12d
a3e7(1): push %rbx
a3e8(3): mov %rsi,%rbp
a3eb(3): mov %rdi,%rbx
a3ee(5): call 0xffff7392(%rip)
a3f3(3): mov %r12d,%edx
a3f6(3): mov %rbp,%rsi
a3f9(2): mov %eax,%edi
a3fb(5): call 0xffff72f5(%rip)
a400(4): cmp $0xffffffff,%rax
a404(2): jz 0xe(%rip)
a406(3): and $0xef,(%rbx)
a409(7): mov %rax,0x90(%rbx)
a410(2): xor %eax,%eax
a412(1): pop %rbx
a413(1): pop %rbp
a414(2): pop %r12
a416(1): ret near (%rsp)

"rpl_mbrtowc" :
a420(2): push %r13
a422(2): push %r12
a424(3): mov %rsi,%r13
a427(1): push %rbp
a428(1): push %rbx
a429(3): mov %rdi,%rbx
a42c(3): mov %rdx,%r12
a42f(4): sub $0x18,%rsp
a433(9): mov $0x28,%rax
a43c(5): mov %rax,0x8(%rsp)
a441(2): xor %eax,%eax
a443(5): lea 0x4(%rsp),%rax
a448(3): test %rdi,%rdi
a44b(4): cmove %rax,%rbx
a44f(3): mov %rbx,%rdi
a452(5): call 0xffff725e(%rip)
a457(4): cmp $0xfffffffd,%rax
a45b(3): mov %rax,%rbp
a45e(2): jbe 0x22(%rip)
a460(3): test %r12,%r12
a463(2): jz 0x1d(%rip)
a465(2): xor %edi,%edi
a467(5): call 0xc9(%rip)
a46c(2): test %al,%al
a46e(2): jnz 0x12(%rip)
a470(5): movzx 0x0(%r13),%eax
a475(5): mov $0x1,%ebp
a47a(2): mov %eax,(%rbx)
a47c(4): nop 0x0(%rax)
a480(5): mov 0x8(%rsp),%rdx
a485(9): xor $0x28,%rdx
a48e(3): mov %rbp,%rax
a491(2): jnz 0xd(%rip)
a493(4): add $0x18,%rsp
a497(1): pop %rbx
a498(1): pop %rbp
a499(2): pop %r12
a49b(2): pop %r13
a49d(1): ret near (%rsp)
a49e(5): call 0xffff71f2(%rip)

"close_stream" :
a4b0(2): push %r12
a4b2(1): push %rbp
a4b3(3): mov %rdi,%rbp
a4b6(1): push %rbx
a4b7(5): call 0xffff7149(%rip)
a4bc(3): mov 0x0(%rbp),%ebx
a4bf(3): mov %rbp,%rdi
a4c2(3): mov %rax,%r12
a4c5(5): call 0xfffffbbb(%rip)
a4ca(3): and $0x20,%ebx
a4cd(2): test %ebx,%ebx
a4cf(2): jnz 0x19(%rip)
a4d1(2): test %eax,%eax
a4d3(2): jz 0xc(%rip)
a4d5(3): test %r12,%r12
a4d8(5): mov $0xffffffff,%eax
a4dd(2): jz 0x3b(%rip)
a4df(1): pop %rbx
a4e0(1): pop %rbp
a4e1(2): pop %r12
a4e3(1): ret near (%rsp)
a4e4(4): nop 0x0(%rax)
a4e8(2): test %eax,%eax
a4ea(2): jnz 0x1e(%rip)
a4ec(5): call 0xffff70e4(%rip)
a4f1(6): mov $0x0,(%rax)
a4f7(5): mov $0xffffffff,%eax
a4fc(1): pop %rbx
a4fd(1): pop %rbp
a4fe(2): pop %r12
a500(1): ret near (%rsp)
a501(7): nop 0x0(%rax)
a508(1): pop %rbx
a509(5): mov $0xffffffff,%eax
a50e(1): pop %rbp
a50f(2): pop %r12
a511(1): ret near (%rsp)
a512(6): nop 0x0(%rax,%rax,1)
a518(5): call 0xffff70b8(%rip)
a51d(3): cmp $0x9,(%rax)
a520(1): pop %rbx
a521(1): pop %rbp
a522(2): pop %r12
a524(3): setnz %al
a527(3): movzx %al,%eax
a52a(2): neg %eax
a52c(1): ret near (%rsp)

"hard_locale" :
a530(4): sub $0x8,%rsp
a534(2): xor %esi,%esi
a536(5): call 0xffff72ca(%rip)
a53b(3): mov %rax,%rdx
a53e(5): mov $0x1,%eax
a543(3): test %rdx,%rdx
a546(2): jz 0x1f(%rip)
a548(7): lea 0x1631(%rip),%rdi
a54f(5): mov $0x2,%ecx
a554(3): mov %rdx,%rsi
a557(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a559(3): setnbe %cl
a55c(3): sbb $0x0,%cl
a55f(2): xor %eax,%eax
a561(2): test %cl,%cl
a563(2): jnz 0xd(%rip)
a565(4): add $0x8,%rsp
a569(1): ret near (%rsp)
a56a(6): nop 0x0(%rax,%rax,1)
a570(7): lea 0x160b(%rip),%rdi
a577(5): mov $0x6,%ecx
a57c(3): mov %rdx,%rsi
a57f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a581(3): setnbe %al
a584(2): sbb $0x0,%al
a586(2): test %al,%al
a588(3): setnz %al
a58b(4): add $0x8,%rsp
a58f(1): ret near (%rsp)

"locale_charset" :
a590(4): sub $0x8,%rsp
a594(5): mov $0xe,%edi
a599(5): call 0xffff7217(%rip)
a59e(3): test %rax,%rax
a5a1(2): jz 0x1f(%rip)
a5a3(3): cmp $0x0,(%rax)
a5a6(7): lea 0x15db(%rip),%rdx
a5ad(4): cmove %rdx,%rax
a5b1(4): add $0x8,%rsp
a5b5(1): ret near (%rsp)
a5b6(a): nop 0x0(%rax,%rax,1)
a5c0(7): lea 0x15c1(%rip),%rax
a5c7(4): add $0x8,%rsp
a5cb(1): ret near (%rsp)

"__libc_csu_init" :
a5d0(2): push %r15
a5d2(2): push %r14
a5d4(3): mov %rdx,%r15
a5d7(2): push %r13
a5d9(2): push %r12
a5db(7): lea 0x20342e(%rip),%r12
a5e2(1): push %rbp
a5e3(7): lea 0x20342e(%rip),%rbp
a5ea(1): push %rbx
a5eb(3): mov %edi,%r13d
a5ee(3): mov %rsi,%r14
a5f1(3): sub %r12,%rbp
a5f4(4): sub $0x8,%rsp
a5f8(4): sar $0x3,%rbp
a5fc(5): call 0xffff6f84(%rip)
a601(3): test %rbp,%rbp
a604(2): jz 0x22(%rip)
a606(2): xor %ebx,%ebx
a608(8): nop 0x0(%rax,%rax,1)
a610(3): mov %r15,%rdx
a613(3): mov %r14,%rsi
a616(3): mov %r13d,%edi
a619(4): call 0x0(%r12,%rbx,8)
a61d(4): add $0x1,%rbx
a621(3): cmp %rbx,%rbp
a624(2): jnz 0xffffffec(%rip)
a626(4): add $0x8,%rsp
a62a(1): pop %rbx
a62b(1): pop %rbp
a62c(2): pop %r12
a62e(2): pop %r13
a630(2): pop %r14
a632(2): pop %r15
a634(1): ret near (%rsp)

"atexit" :
a650(7): mov 0x2039b1(%rip),%rdx
a657(2): xor %esi,%esi
a659(5): jmp 0xffff7217(%rip)

"_fini" :
a660(4): sub $0x8,%rsp
a664(4): add $0x8,%rsp
a668(1): ret near (%rsp)

