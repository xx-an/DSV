0x17c0: sub rsp,0x8
0x17c4: mov rax,qword ptr [rip+0x20980d]
0x17cb: test rax,rax
0x17ce: jz 0x17d2
0x17d0: call rax
0x17d2: add rsp,0x8
0x17d6: ret 
0x17e0: push qword ptr [rip+0x2095ea]
0x17e6: jmp qword ptr [rip+0x2095ec]
0x17f6: push 0x0
0x17fb: jmp 0x17e0
0x1806: push 0x1
0x180b: jmp 0x17e0
0x1816: push 0x2
0x181b: jmp 0x17e0
0x1826: push 0x3
0x182b: jmp 0x17e0
0x1836: push 0x4
0x183b: jmp 0x17e0
0x1846: push 0x5
0x184b: jmp 0x17e0
0x1856: push 0x6
0x185b: jmp 0x17e0
0x1866: push 0x7
0x186b: jmp 0x17e0
0x1870: jmp qword ptr [rip+0x2095aa]
0x1876: push 0x8
0x187b: jmp 0x17e0
0x1886: push 0x9
0x188b: jmp 0x17e0
0x1890: jmp qword ptr [rip+0x20959a]
0x1896: push 0xa
0x189b: jmp 0x17e0
0x18a6: push 0xb
0x18ab: jmp 0x17e0
0x18b6: push 0xc
0x18bb: jmp 0x17e0
0x18c6: push 0xd
0x18cb: jmp 0x17e0
0x18d0: jmp qword ptr [rip+0x20957a]
0x18d6: push 0xe
0x18db: jmp 0x17e0
0x18e6: push 0xf
0x18eb: jmp 0x17e0
0x18f6: push 0x10
0x18fb: jmp 0x17e0
0x1906: push 0x11
0x190b: jmp 0x17e0
0x1916: push 0x12
0x191b: jmp 0x17e0
0x1920: jmp qword ptr [rip+0x209552]
0x1926: push 0x13
0x192b: jmp 0x17e0
0x1936: push 0x14
0x193b: jmp 0x17e0
0x1946: push 0x15
0x194b: jmp 0x17e0
0x1956: push 0x16
0x195b: jmp 0x17e0
0x1960: jmp qword ptr [rip+0x209532]
0x1966: push 0x17
0x196b: jmp 0x17e0
0x1976: push 0x18
0x197b: jmp 0x17e0
0x1980: jmp qword ptr [rip+0x209522]
0x1986: push 0x19
0x198b: jmp 0x17e0
0x1996: push 0x1a
0x199b: jmp 0x17e0
0x19a6: push 0x1b
0x19ab: jmp 0x17e0
0x19b6: push 0x1c
0x19bb: jmp 0x17e0
0x19c6: push 0x1d
0x19cb: jmp 0x17e0
0x19d6: push 0x1e
0x19db: jmp 0x17e0
0x19e0: jmp qword ptr [rip+0x2094f2]
0x19e6: push 0x1f
0x19eb: jmp 0x17e0
0x19f6: push 0x20
0x19fb: jmp 0x17e0
0x1a06: push 0x21
0x1a0b: jmp 0x17e0
0x1a16: push 0x22
0x1a1b: jmp 0x17e0
0x1a26: push 0x23
0x1a2b: jmp 0x17e0
0x1a30: jmp qword ptr [rip+0x2094ca]
0x1a36: push 0x24
0x1a3b: jmp 0x17e0
0x1a46: push 0x25
0x1a4b: jmp 0x17e0
0x1a56: push 0x26
0x1a5b: jmp 0x17e0
0x1a60: jmp qword ptr [rip+0x2094b2]
0x1a66: push 0x27
0x1a6b: jmp 0x17e0
0x1a76: push 0x28
0x1a7b: jmp 0x17e0
0x1a80: jmp qword ptr [rip+0x2094a2]
0x1a86: push 0x29
0x1a8b: jmp 0x17e0
0x1a96: push 0x2a
0x1a9b: jmp 0x17e0
0x1aa6: push 0x2b
0x1aab: jmp 0x17e0
0x1ab6: push 0x2c
0x1abb: jmp 0x17e0
0x1ac6: push 0x2d
0x1acb: jmp 0x17e0
0x1ad6: push 0x2e
0x1adb: jmp 0x17e0
0x1ae6: push 0x2f
0x1aeb: jmp 0x17e0
0x1af6: push 0x30
0x1afb: jmp 0x17e0
0x1b00: jmp qword ptr [rip+0x209462]
0x1b06: push 0x31
0x1b0b: jmp 0x17e0
0x1b16: push 0x32
0x1b1b: jmp 0x17e0
0x1b26: push 0x33
0x1b2b: jmp 0x17e0
0x1b36: push 0x34
0x1b3b: jmp 0x17e0
0x1b46: push 0x35
0x1b4b: jmp 0x17e0
0x1b56: push 0x36
0x1b5b: jmp 0x17e0
0x1b66: push 0x37
0x1b6b: jmp 0x17e0
0x1b76: push 0x38
0x1b7b: jmp 0x17e0
0x1b86: push 0x39
0x1b8b: jmp 0x17e0
0x1b96: push 0x3a
0x1b9b: jmp 0x17e0
0x1ba6: push 0x3b
0x1bab: jmp 0x17e0
0x1bb6: push 0x3c
0x1bbb: jmp 0x17e0
0x1bc0: jmp qword ptr [rip+0x209422]
0x1f39: jmp 0x1d0f
0x1f6a: hlt 
0x1f70: lea rdi,[rip+0x209129]
0x1f77: push rbp
0x1f78: lea rax,[rip+0x209121]
0x1f7f: cmp rax,rdi
0x1f82: mov rbp,rsp
0x1f85: jz 0x1fa0
0x1f87: mov rax,qword ptr [rip+0x20903a]
0x1f8e: test rax,rax
0x1f91: jz 0x1fa0
0x1f93: pop rbp
0x1f94: jmp rax
0x1fa0: pop rbp
0x1fa1: ret 
0x1fb0: lea rdi,[rip+0x2090e9]
0x1fb7: lea rsi,[rip+0x2090e2]
0x1fbe: push rbp
0x1fbf: sub rsi,rdi
0x1fc2: mov rbp,rsp
0x1fc5: sar rsi,0x3
0x1fc9: mov rax,rsi
0x1fcc: shr rax,0x3f
0x1fd0: add rsi,rax
0x1fd3: sar rsi,1
0x1fd6: jz 0x1ff0
0x1fd8: mov rax,qword ptr [rip+0x209001]
0x1fdf: test rax,rax
0x1fe2: jz 0x1ff0
0x1fe4: pop rbp
0x1fe5: jmp rax
0x1ff0: pop rbp
0x1ff1: ret 
0x2000: cmp byte ptr [rip+0x2090c1],0x0
0x2007: jnz 0x2038
0x2009: cmp qword ptr [rip+0x208fd7],0x0
0x2011: push rbp
0x2012: mov rbp,rsp
0x2015: jz 0x2023
0x2017: mov rdi,qword ptr [rip+0x208fea]
0x201e: call 0x1bc0
0x2023: call 0x1f70
0x2028: mov byte ptr [rip+0x209099],0x1
0x202f: pop rbp
0x2030: ret 
0x2038: ret 
0x2040: push rbp
0x2041: mov rbp,rsp
0x2044: pop rbp
0x2045: jmp 0x1fb0
0x22bd: call 0x1920
0x22c2: nop dword ptr [rax]
0x22c6: nop word ptr cs:[rax + rax*0x1]
0x23b2: call 0x1920
0x23b7: nop word ptr [rax + rax*0x1]
0x259c: mov rdi,r13
0x259f: call 0x1810
0x294e: call 0x1920
0x2972: nop dword ptr [rax]
0x2976: nop word ptr cs:[rax + rax*0x1]
0x3116: mov rdx,rbx
0x3119: mov esi,0x3
0x311e: xor edi,edi
0x3120: call 0x5360
0x3125: mov rbx,rax
0x3128: call 0x1840
0x312d: mov esi,dword ptr [rax]
0x312f: lea rdx,[rip+0x5bab]
0x3136: mov rcx,rbx
0x3139: mov edi,0x1
0x313e: xor eax,eax
0x3140: call 0x1af0
0x3145: call 0x1920
0x314a: nop word ptr [rax + rax*0x1]
0x3623: call 0x1920
0x3628: nop dword ptr [rax + rax*0x1]
0x3640: mov edi,dword ptr [rip+0x207b4a]
0x3646: jmp 0x1960
0x3650: mov qword ptr [rip+0x207b49],rdi
0x3657: ret 
0x3660: mov byte ptr [rip+0x207b31],dil
0x3667: ret 
0x3670: push rbp
0x3671: push rbx
0x3672: sub rsp,0x8
0x3676: mov rdi,qword ptr [rip+0x207a2b]
0x367d: call 0x61c0
0x3682: test eax,eax
0x3684: jz 0x369c
0x3686: call 0x1840
0x368b: cmp byte ptr [rip+0x207b06],0x0
0x3692: mov rbx,rax
0x3695: jz 0x36b3
0x3697: cmp dword ptr [rax],0x20
0x369a: jnz 0x36b3
0x369c: mov rdi,qword ptr [rip+0x207a1d]
0x36a3: call 0x61c0
0x36a8: test eax,eax
0x36aa: jnz 0x36f2
0x36ac: add rsp,0x8
0x36b0: pop rbx
0x36b1: pop rbp
0x36b2: ret 
0x36b3: lea rsi,[rip+0x5617]
0x36ba: xor edi,edi
0x36bc: mov edx,0x5
0x36c1: call 0x18f0
0x36c6: mov rdi,qword ptr [rip+0x207ad3]
0x36cd: mov rbp,rax
0x36d0: test rdi,rdi
0x36d3: jz 0x36fd
0x36d5: call 0x5330
0x36da: mov esi,dword ptr [rbx]
0x36dc: lea rdx,[rip+0x55fa]
0x36e3: mov rcx,rax
0x36e6: mov r8,rbp
0x36e9: xor edi,edi
0x36eb: xor eax,eax
0x36ed: call 0x1af0
0x36f2: mov edi,dword ptr [rip+0x207930]
0x36f8: call 0x1870
0x36fd: mov esi,dword ptr [rbx]
0x36ff: lea rdx,[rip+0x55db]
0x3706: mov rcx,rax
0x3709: xor edi,edi
0x370b: xor eax,eax
0x370d: call 0x1af0
0x3712: jmp 0x36f2
0x38bf: nop 
0x4ba3: call 0x1920
0x4be4: nop 
0x4be6: nop word ptr cs:[rax + rax*0x1]
0x4d91: call 0x1830
0x4d96: call 0x5dc0
0x4d9b: nop dword ptr [rax + rax*0x1]
0x4da0: push r12
0x4da2: push rbp
0x4da3: push rbx
0x4da4: mov rbx,rdi
0x4da7: call 0x1840
0x4dac: mov r12d,dword ptr [rax]
0x4daf: mov rbp,rax
0x4db2: lea rax,[rip+0x206507]
0x4db9: test rbx,rbx
0x4dbc: mov esi,0x38
0x4dc1: cmovz rbx,rax
0x4dc5: mov rdi,rbx
0x4dc8: call 0x5d70
0x4dcd: mov dword ptr [rbp],r12d
0x4dd1: pop rbx
0x4dd2: pop rbp
0x4dd3: pop r12
0x4dd5: ret 
0x4de0: lea rax,[rip+0x2064d9]
0x4de7: test rdi,rdi
0x4dea: cmovz rdi,rax
0x4dee: mov eax,dword ptr [rdi]
0x4df0: ret 
0x4e00: lea rax,[rip+0x2064b9]
0x4e07: test rdi,rdi
0x4e0a: cmovz rdi,rax
0x4e0e: mov dword ptr [rdi],esi
0x4e10: ret 
0x4e20: lea rax,[rip+0x206499]
0x4e27: test rdi,rdi
0x4e2a: mov ecx,esi
0x4e2c: cmovz rdi,rax
0x4e30: mov eax,esi
0x4e32: and ecx,0x1f
0x4e35: shr al,0x5
0x4e38: movzx eax,al
0x4e3b: lea rdi,[rdi + rax*0x4 + 0x8]
0x4e40: mov esi,dword ptr [rdi]
0x4e42: mov eax,esi
0x4e44: shr eax,cl
0x4e46: xor edx,eax
0x4e48: and eax,0x1
0x4e4b: and edx,0x1
0x4e4e: shl edx,cl
0x4e50: xor edx,esi
0x4e52: mov dword ptr [rdi],edx
0x4e54: ret 
0x4e60: lea rax,[rip+0x206459]
0x4e67: test rdi,rdi
0x4e6a: cmovz rdi,rax
0x4e6e: mov eax,dword ptr [rdi + 0x4]
0x4e71: mov dword ptr [rdi + 0x4],esi
0x4e74: ret 
0x4e80: lea rax,[rip+0x206439]
0x4e87: test rdi,rdi
0x4e8a: cmovz rdi,rax
0x4e8e: test rsi,rsi
0x4e91: mov dword ptr [rdi],0xa
0x4e97: jz 0x4ea7
0x4e99: test rdx,rdx
0x4e9c: jz 0x4ea7
0x4e9e: mov qword ptr [rdi + 0x28],rsi
0x4ea2: mov qword ptr [rdi + 0x30],rdx
0x4ea6: ret 
0x4ea7: sub rsp,0x8
0x4eab: call 0x1830
0x4eb0: push r15
0x4eb2: push r14
0x4eb4: lea rax,[rip+0x206405]
0x4ebb: push r13
0x4ebd: push r12
0x4ebf: mov r13,rdi
0x4ec2: push rbp
0x4ec3: push rbx
0x4ec4: mov rbx,r8
0x4ec7: mov r14,rsi
0x4eca: mov r15,rdx
0x4ecd: sub rsp,0x18
0x4ed1: test r8,r8
0x4ed4: cmovz rbx,rax
0x4ed8: mov qword ptr [rsp + 0x8],rcx
0x4edd: call 0x1840
0x4ee2: mov r12d,dword ptr [rax]
0x4ee5: mov rbp,rax
0x4ee8: lea rax,[rbx + 0x8]
0x4eec: sub rsp,0x8
0x4ef0: mov r9d,dword ptr [rbx + 0x4]
0x4ef4: push qword ptr [rbx + 0x30]
0x4ef7: mov r8d,dword ptr [rbx]
0x4efa: push qword ptr [rbx + 0x28]
0x4efd: mov rdx,r15
0x4f00: push rax
0x4f01: mov rcx,qword ptr [rsp + 0x28]
0x4f06: mov rsi,r14
0x4f09: mov rdi,r13
0x4f0c: call 0x39b0
0x4f11: mov dword ptr [rbp],r12d
0x4f15: add rsp,0x38
0x4f19: pop rbx
0x4f1a: pop rbp
0x4f1b: pop r12
0x4f1d: pop r13
0x4f1f: pop r14
0x4f21: pop r15
0x4f23: ret 
0x4f30: push r15
0x4f32: push r14
0x4f34: lea rax,[rip+0x206385]
0x4f3b: push r13
0x4f3d: push r12
0x4f3f: mov r12,rdx
0x4f42: push rbp
0x4f43: push rbx
0x4f44: mov rbx,rcx
0x4f47: mov r14,rdi
0x4f4a: mov r15,rsi
0x4f4d: sub rsp,0x38
0x4f51: test rcx,rcx
0x4f54: cmovz rbx,rax
0x4f58: xor ebp,ebp
0x4f5a: call 0x1840
0x4f5f: test r12,r12
0x4f62: mov r13,rax
0x4f65: mov eax,dword ptr [rax]
0x4f67: setz bpl
0x4f6b: or ebp,dword ptr [rbx + 0x4]
0x4f6e: lea r10,[rbx + 0x8]
0x4f72: sub rsp,0x8
0x4f76: mov r8d,dword ptr [rbx]
0x4f79: mov rcx,r15
0x4f7c: mov dword ptr [rsp + 0x14],eax
0x4f80: push qword ptr [rbx + 0x30]
0x4f83: mov rdx,r14
0x4f86: push qword ptr [rbx + 0x28]
0x4f89: push r10
0x4f8b: xor esi,esi
0x4f8d: mov r9d,ebp
0x4f90: xor edi,edi
0x4f92: mov qword ptr [rsp + 0x40],r10
0x4f97: call 0x39b0
0x4f9c: lea rsi,[rax + 0x1]
0x4fa0: mov qword ptr [rsp + 0x48],rax
0x4fa5: add rsp,0x20
0x4fa9: mov rdi,rsi
0x4fac: mov qword ptr [rsp + 0x18],rsi
0x4fb1: call 0x5b70
0x4fb6: mov qword ptr [rsp + 0x10],rax
0x4fbb: sub rsp,0x8
0x4fbf: push qword ptr [rbx + 0x30]
0x4fc2: push qword ptr [rbx + 0x28]
0x4fc5: mov r10,qword ptr [rsp + 0x38]
0x4fca: mov r9d,ebp
0x4fcd: mov r8d,dword ptr [rbx]
0x4fd0: mov rcx,r15
0x4fd3: mov rdx,r14
0x4fd6: mov rdi,rax
0x4fd9: push r10
0x4fdb: mov rsi,qword ptr [rsp + 0x38]
0x4fe0: call 0x39b0
0x4fe5: mov eax,dword ptr [rsp + 0x2c]
0x4fe9: add rsp,0x20
0x4fed: test r12,r12
0x4ff0: mov dword ptr [r13],eax
0x4ff4: jz 0x4fff
0x4ff6: mov r11,qword ptr [rsp + 0x28]
0x4ffb: mov qword ptr [r12],r11
0x4fff: mov rax,qword ptr [rsp + 0x10]
0x5004: add rsp,0x38
0x5008: pop rbx
0x5009: pop rbp
0x500a: pop r12
0x500c: pop r13
0x500e: pop r14
0x5010: pop r15
0x5012: ret 
0x5020: mov rcx,rdx
0x5023: xor edx,edx
0x5025: jmp 0x4f30
0x5030: mov eax,dword ptr [rip+0x206042]
0x5036: push r12
0x5038: mov r12,qword ptr [rip+0x206041]
0x503f: push rbp
0x5040: push rbx
0x5041: cmp eax,0x1
0x5044: jle 0x5071
0x5046: sub eax,0x2
0x5049: lea rbx,[r12 + 0x18]
0x504e: shl rax,0x4
0x5052: lea rbp,[r12 + rax*0x1 + 0x28]
0x5057: nop word ptr [rax + rax*0x1]
0x5060: mov rdi,qword ptr [rbx]
0x5063: add rbx,0x10
0x5067: call 0x1810
0x506c: cmp rbx,rbp
0x506f: jnz 0x5060
0x5071: mov rdi,qword ptr [r12 + 0x8]
0x5076: lea rbx,[rip+0x206143]
0x507d: cmp rdi,rbx
0x5080: jz 0x5099
0x5082: call 0x1810
0x5087: mov qword ptr [rip+0x205ffe],0x100
0x5092: mov qword ptr [rip+0x205fff],rbx
0x5099: lea rbx,[rip+0x205ff0]
0x50a0: cmp r12,rbx
0x50a3: jz 0x50b4
0x50a5: mov rdi,r12
0x50a8: call 0x1810
0x50ad: mov qword ptr [rip+0x205fcc],rbx
0x50b4: pop rbx
0x50b5: mov dword ptr [rip+0x205fb9],0x1
0x50bf: pop rbp
0x50c0: pop r12
0x50c2: ret 
0x50d0: lea rcx,[rip+0x2061e9]
0x50d7: mov rdx,-0x1
0x50de: jmp 0x4bf0
0x50f0: lea rcx,[rip+0x2061c9]
0x50f7: jmp 0x4bf0
0x5100: lea rcx,[rip+0x2061b9]
0x5107: mov rsi,rdi
0x510a: mov rdx,-0x1
0x5111: xor edi,edi
0x5113: jmp 0x4bf0
0x5120: lea rcx,[rip+0x206199]
0x5127: mov rdx,rsi
0x512a: mov rsi,rdi
0x512d: xor edi,edi
0x512f: jmp 0x4bf0
0x5140: sub rsp,0x48
0x5144: mov rax,rdx
0x5147: mov rdx,qword ptr fs:[rip+0xffffffffffffaed8]
0x5150: mov qword ptr [rsp + 0x38],rdx
0x5155: xor edx,edx
0x5157: cmp esi,0xa
0x515a: jz 0x51c4
0x515c: mov dword ptr [rsp],esi
0x515f: mov rcx,rsp
0x5162: mov rdx,-0x1
0x5169: mov rsi,rax
0x516c: mov qword ptr [rsp + 0x4],0x0
0x5175: mov qword ptr [rsp + 0xc],0x0
0x517e: mov qword ptr [rsp + 0x14],0x0
0x5187: mov qword ptr [rsp + 0x1c],0x0
0x5190: mov qword ptr [rsp + 0x24],0x0
0x5199: mov qword ptr [rsp + 0x2c],0x0
0x51a2: mov dword ptr [rsp + 0x34],0x0
0x51aa: call 0x4bf0
0x51af: mov rcx,qword ptr [rsp + 0x38]
0x51b4: xor rcx,qword ptr fs:[rip+0xffffffffffffae6b]
0x51bd: jnz 0x51c9
0x51bf: add rsp,0x48
0x51c3: ret 
0x51c4: call 0x1830
0x51c9: call 0x1920
0x51ce: nop 
0x51d0: sub rsp,0x48
0x51d4: mov rax,rdx
0x51d7: mov rdx,rcx
0x51da: mov rcx,qword ptr fs:[rip+0xffffffffffffae45]
0x51e3: mov qword ptr [rsp + 0x38],rcx
0x51e8: xor ecx,ecx
0x51ea: cmp esi,0xa
0x51ed: jz 0x5250
0x51ef: mov dword ptr [rsp],esi
0x51f2: mov rcx,rsp
0x51f5: mov rsi,rax
0x51f8: mov qword ptr [rsp + 0x4],0x0
0x5201: mov qword ptr [rsp + 0xc],0x0
0x520a: mov qword ptr [rsp + 0x14],0x0
0x5213: mov qword ptr [rsp + 0x1c],0x0
0x521c: mov qword ptr [rsp + 0x24],0x0
0x5225: mov qword ptr [rsp + 0x2c],0x0
0x522e: mov dword ptr [rsp + 0x34],0x0
0x5236: call 0x4bf0
0x523b: mov rdx,qword ptr [rsp + 0x38]
0x5240: xor rdx,qword ptr fs:[rip+0xffffffffffffaddf]
0x5249: jnz 0x5255
0x524b: add rsp,0x48
0x524f: ret 
0x5250: call 0x1830
0x5255: call 0x1920
0x525a: nop word ptr [rax + rax*0x1]
0x5260: mov rdx,rsi
0x5263: mov esi,edi
0x5265: xor edi,edi
0x5267: jmp 0x5140
0x5270: mov rcx,rdx
0x5273: mov rdx,rsi
0x5276: mov esi,edi
0x5278: xor edi,edi
0x527a: jmp 0x51d0
0x5280: sub rsp,0x48
0x5284: mov ecx,edx
0x5286: mov rax,qword ptr fs:[rip+0xffffffffffffad99]
0x528f: mov qword ptr [rsp + 0x38],rax
0x5294: xor eax,eax
0x5296: mov rax,qword ptr [rip+0x206053]
0x529d: mov r8,rsp
0x52a0: and ecx,0x1f
0x52a3: movdqa xmm0,[rip+0x206015]
0x52ab: mov qword ptr [rsp + 0x30],rax
0x52b0: mov eax,edx
0x52b2: movaps xmmword ptr [rsp],xmm0
0x52b6: shr al,0x5
0x52b9: movzx eax,al
0x52bc: lea r9,[r8 + rax*0x4 + 0x8]
0x52c1: movdqa xmm0,[rip+0x206007]
0x52c9: movaps xmmword ptr [rsp + 0x10],xmm0
0x52ce: movdqa xmm0,[rip+0x20600a]
0x52d6: movaps xmmword ptr [rsp + 0x20],xmm0
0x52db: mov edx,dword ptr [r9]
0x52de: mov eax,edx
0x52e0: shr eax,cl
0x52e2: not eax
0x52e4: and eax,0x1
0x52e7: shl eax,cl
0x52e9: mov rcx,r8
0x52ec: xor eax,edx
0x52ee: mov rdx,rsi
0x52f1: mov rsi,rdi
0x52f4: mov dword ptr [r9],eax
0x52f7: xor edi,edi
0x52f9: call 0x4bf0
0x52fe: mov rsi,qword ptr [rsp + 0x38]
0x5303: xor rsi,qword ptr fs:[rip+0xffffffffffffad1c]
0x530c: jnz 0x5313
0x530e: add rsp,0x48
0x5312: ret 
0x5313: call 0x1920
0x5318: nop dword ptr [rax + rax*0x1]
0x5320: movsx edx,sil
0x5324: mov rsi,-0x1
0x532b: jmp 0x5280
0x5330: mov edx,0x3a
0x5335: mov rsi,-0x1
0x533c: jmp 0x5280
0x5350: mov edx,0x3a
0x5355: jmp 0x5280
0x5360: sub rsp,0x48
0x5364: mov rax,rdx
0x5367: mov rdx,qword ptr fs:[rip+0xffffffffffffacb8]
0x5370: mov qword ptr [rsp + 0x38],rdx
0x5375: xor edx,edx
0x5377: cmp esi,0xa
0x537a: jz 0x53e4
0x537c: mov dword ptr [rsp],esi
0x537f: mov rcx,rsp
0x5382: mov rdx,-0x1
0x5389: mov rsi,rax
0x538c: mov qword ptr [rsp + 0x4],0x0
0x5395: mov qword ptr [rsp + 0xc],0x4000000
0x539e: mov qword ptr [rsp + 0x14],0x0
0x53a7: mov qword ptr [rsp + 0x1c],0x0
0x53b0: mov qword ptr [rsp + 0x24],0x0
0x53b9: mov qword ptr [rsp + 0x2c],0x0
0x53c2: mov dword ptr [rsp + 0x34],0x0
0x53ca: call 0x4bf0
0x53cf: mov rcx,qword ptr [rsp + 0x38]
0x53d4: xor rcx,qword ptr fs:[rip+0xffffffffffffac4b]
0x53dd: jnz 0x53e9
0x53df: add rsp,0x48
0x53e3: ret 
0x53e4: call 0x1830
0x53e9: call 0x1920
0x53ee: nop 
0x53f0: sub rsp,0x48
0x53f4: mov r9,rcx
0x53f7: mov rcx,qword ptr [rip+0x205ef2]
0x53fe: movdqa xmm0,[rip+0x205eba]
0x5406: mov rax,qword ptr fs:[rip+0xffffffffffffac19]
0x540f: mov qword ptr [rsp + 0x38],rax
0x5414: xor eax,eax
0x5416: movaps xmmword ptr [rsp],xmm0
0x541a: test rsi,rsi
0x541d: mov qword ptr [rsp + 0x30],rcx
0x5422: mov dword ptr [rsp],0xa
0x5429: movdqa xmm0,[rip+0x205e9f]
0x5431: movaps xmmword ptr [rsp + 0x10],xmm0
0x5436: movdqa xmm0,[rip+0x205ea2]
0x543e: movaps xmmword ptr [rsp + 0x20],xmm0
0x5443: jz 0x5477
0x5445: test rdx,rdx
0x5448: jz 0x5477
0x544a: mov qword ptr [rsp + 0x28],rsi
0x544f: mov qword ptr [rsp + 0x30],rdx
0x5454: mov rcx,rsp
0x5457: mov rdx,r8
0x545a: mov rsi,r9
0x545d: call 0x4bf0
0x5462: mov rdi,qword ptr [rsp + 0x38]
0x5467: xor rdi,qword ptr fs:[rip+0xffffffffffffabb8]
0x5470: jnz 0x547c
0x5472: add rsp,0x48
0x5476: ret 
0x5477: call 0x1830
0x547c: call 0x1920
0x5481: nop dword ptr [rax + rax*0x1]
0x5486: nop word ptr cs:[rax + rax*0x1]
0x5490: mov r8,-0x1
0x5497: jmp 0x53f0
0x54a0: mov rcx,rdx
0x54a3: mov r8,-0x1
0x54aa: mov rdx,rsi
0x54ad: mov rsi,rdi
0x54b0: xor edi,edi
0x54b2: jmp 0x53f0
0x54c0: mov r8,rcx
0x54c3: mov rcx,rdx
0x54c6: mov rdx,rsi
0x54c9: mov rsi,rdi
0x54cc: xor edi,edi
0x54ce: jmp 0x53f0
0x54e0: lea rcx,[rip+0x205b59]
0x54e7: jmp 0x4bf0
0x54f0: lea rcx,[rip+0x205b49]
0x54f7: mov rdx,rsi
0x54fa: mov rsi,rdi
0x54fd: xor edi,edi
0x54ff: jmp 0x4bf0
0x5510: lea rcx,[rip+0x205b29]
0x5517: mov rdx,-0x1
0x551e: jmp 0x4bf0
0x5688: mov r8,rcx
0x568b: mov rcx,rdx
0x568e: lea rdx,[rip+0x3b7f]
0x5695: mov esi,0x1
0x569a: xor eax,eax
0x569c: call 0x1b40
0x56a1: jmp 0x558c
0x5970: xor r9d,r9d
0x5973: cmp qword ptr [r8],0x0
0x5977: jz 0x598b
0x5979: nop dword ptr [rax]
0x5980: add r9,0x1
0x5984: cmp qword ptr [r8 + r9*0x8],0x0
0x5989: jnz 0x5980
0x598b: jmp 0x5550
0x5990: sub rsp,0x68
0x5994: mov r10,r8
0x5997: xor r9d,r9d
0x599a: mov rax,qword ptr fs:[rip+0xffffffffffffa685]
0x59a3: mov qword ptr [rsp + 0x58],rax
0x59a8: xor eax,eax
0x59aa: mov r8,rsp
0x59ad: nop dword ptr [rax]
0x59b0: mov eax,dword ptr [r10]
0x59b3: cmp eax,0x2f
0x59b6: ja 0x59fa
0x59b8: mov r11d,eax
0x59bb: add r11,qword ptr [r10 + 0x10]
0x59bf: add eax,0x8
0x59c2: mov dword ptr [r10],eax
0x59c5: mov rax,qword ptr [r11]
0x59c8: test rax,rax
0x59cb: mov qword ptr [r8 + r9*0x8],rax
0x59cf: jz 0x59db
0x59d1: add r9,0x1
0x59d5: cmp r9,0xa
0x59d9: jnz 0x59b0
0x59db: call 0x5550
0x59e0: mov rax,qword ptr [rsp + 0x58]
0x59e5: xor rax,qword ptr fs:[rip+0xffffffffffffa63a]
0x59ee: jnz 0x59f5
0x59f0: add rsp,0x68
0x59f4: ret 
0x59f5: call 0x1920
0x59fa: mov r11,qword ptr [r10 + 0x8]
0x59fe: lea rax,[r11 + 0x8]
0x5a02: mov qword ptr [r10 + 0x8],rax
0x5a06: jmp 0x59c5
0x5ad0: call 0x1920
0x5adc: mov rax,rbx
0x5adf: add rbx,0x8
0x5ae3: jmp 0x5a96
0x5af0: push rbx
0x5af1: lea rsi,[rip+0x376a]
0x5af8: mov edx,0x5
0x5afd: xor edi,edi
0x5aff: call 0x18f0
0x5b04: lea rdx,[rip+0x376c]
0x5b0b: mov rsi,rax
0x5b0e: mov edi,0x1
0x5b13: xor eax,eax
0x5b15: call 0x1ac0
0x5b1a: lea rsi,[rip+0x376c]
0x5b21: mov edx,0x5
0x5b26: xor edi,edi
0x5b28: call 0x18f0
0x5b2d: lea rcx,[rip+0x30e4]
0x5b34: lea rdx,[rip+0x2acf]
0x5b3b: mov rsi,rax
0x5b3e: mov edi,0x1
0x5b43: xor eax,eax
0x5b45: call 0x1ac0
0x5b4a: mov rbx,qword ptr [rip+0x205557]
0x5b51: lea rsi,[rip+0x3968]
0x5b58: xor edi,edi
0x5b5a: mov edx,0x5
0x5b5f: call 0x18f0
0x5b64: mov rsi,rbx
0x5b67: mov rdi,rax
0x5b6a: pop rbx
0x5b6b: jmp 0x19d0
0x5b8a: nop word ptr [rax + rax*0x1]
0x5b90: mov rax,rdi
0x5b93: mul rsi
0x5b96: mov rdi,rax
0x5b99: seto al
0x5b9c: test rdi,rdi
0x5b9f: js 0x5bab
0x5ba1: movzx eax,al
0x5ba4: test rax,rax
0x5ba7: jnz 0x5bab
0x5ba9: jmp 0x5b70
0x5bab: sub rsp,0x8
0x5baf: call 0x5dc0
0x5bb4: nop 
0x5bb6: nop word ptr cs:[rax + rax*0x1]
0x5bc0: jmp 0x5b70
0x5c06: nop word ptr cs:[rax + rax*0x1]
0x5c10: mov rax,rsi
0x5c13: mul rdx
0x5c16: mov rsi,rax
0x5c19: seto al
0x5c1c: test rsi,rsi
0x5c1f: js 0x5c2b
0x5c21: movzx eax,al
0x5c24: test rax,rax
0x5c27: jnz 0x5c2b
0x5c29: jmp 0x5bd0
0x5c2b: sub rsp,0x8
0x5c2f: call 0x5dc0
0x5c34: nop 
0x5c36: nop word ptr cs:[rax + rax*0x1]
0x5c40: test rdi,rdi
0x5c43: mov r9,rdx
0x5c46: mov rcx,qword ptr [rsi]
0x5c49: jz 0x5c80
0x5c4b: xor edx,edx
0x5c4d: mov rax,0x5555555555555554
0x5c57: div r9
0x5c5a: cmp rax,rcx
0x5c5d: jbe 0x5c9b
0x5c5f: mov rax,rcx
0x5c62: shr rax,1
0x5c65: lea rcx,[rax + rcx*0x1 + 0x1]
0x5c6a: mov qword ptr [rsi],rcx
0x5c6d: imul rcx,r9
0x5c71: mov rsi,rcx
0x5c74: jmp 0x5bd0
0x5c80: test rcx,rcx
0x5c83: jz 0x5ca8
0x5c85: mov rax,rcx
0x5c88: mul r9
0x5c8b: seto dl
0x5c8e: test rax,rax
0x5c91: movzx edx,dl
0x5c94: js 0x5c9b
0x5c96: test rdx,rdx
0x5c99: jz 0x5c6a
0x5c9b: sub rsp,0x8
0x5c9f: call 0x5dc0
0x5ca4: nop dword ptr [rax]
0x5ca8: xor edx,edx
0x5caa: mov eax,0x80
0x5caf: xor r8d,r8d
0x5cb2: div r9
0x5cb5: test rax,rax
0x5cb8: setz r8b
0x5cbc: lea rcx,[r8 + rax*0x1]
0x5cc0: jmp 0x5c85
0x5cd0: test rdi,rdi
0x5cd3: mov rax,qword ptr [rsi]
0x5cd6: jz 0x5d00
0x5cd8: mov rdx,0x5555555555555553
0x5ce2: cmp rax,rdx
0x5ce5: ja 0x5d11
0x5ce7: mov rdx,rax
0x5cea: shr rdx,1
0x5ced: lea rax,[rdx + rax*0x1 + 0x1]
0x5cf2: mov qword ptr [rsi],rax
0x5cf5: mov rsi,rax
0x5cf8: jmp 0x5bd0
0x5d00: test rax,rax
0x5d03: mov edx,0x80
0x5d08: cmovz rax,rdx
0x5d0c: test rax,rax
0x5d0f: jns 0x5cf2
0x5d11: sub rsp,0x8
0x5d15: call 0x5dc0
0x5d1a: nop word ptr [rax + rax*0x1]
0x5d20: push rbx
0x5d21: mov rbx,rdi
0x5d24: call 0x5b70
0x5d29: mov rdx,rbx
0x5d2c: xor esi,esi
0x5d2e: mov rdi,rax
0x5d31: pop rbx
0x5d32: jmp 0x19a0
0x5d40: mov rax,rdi
0x5d43: sub rsp,0x8
0x5d47: mul rsi
0x5d4a: seto dl
0x5d4d: test rax,rax
0x5d50: js 0x5d69
0x5d52: movzx edx,dl
0x5d55: test rdx,rdx
0x5d58: jnz 0x5d69
0x5d5a: call 0x19e0
0x5d5f: test rax,rax
0x5d62: jz 0x5d69
0x5d64: add rsp,0x8
0x5d68: ret 
0x5d69: call 0x5dc0
0x5d6e: nop 
0x5d70: push rbp
0x5d71: push rbx
0x5d72: mov rbp,rdi
0x5d75: mov rdi,rsi
0x5d78: mov rbx,rsi
0x5d7b: sub rsp,0x8
0x5d7f: call 0x5b70
0x5d84: add rsp,0x8
0x5d88: mov rdx,rbx
0x5d8b: mov rsi,rbp
0x5d8e: pop rbx
0x5d8f: pop rbp
0x5d90: mov rdi,rax
0x5d93: jmp 0x1a00
0x5da0: push rbx
0x5da1: mov rbx,rdi
0x5da4: call 0x1910
0x5da9: mov rdi,rbx
0x5dac: lea rsi,[rax + 0x1]
0x5db0: pop rbx
0x5db1: jmp 0x5d70
0x5df0: call 0x1830
0x5df5: nop word ptr cs:[rax + rax*0x1]
0x5dff: nop 
0x5e1f: movaps xmmword ptr [rsp + 0x50],xmm0
0x5e24: movaps xmmword ptr [rsp + 0x60],xmm1
0x5e29: movaps xmmword ptr [rsp + 0x70],xmm2
0x5e2e: movaps xmmword ptr [0x80 + rsp],xmm3
0x5e36: movaps xmmword ptr [0x90 + rsp],xmm4
0x5e3e: movaps xmmword ptr [0xa0 + rsp],xmm5
0x5e46: movaps xmmword ptr [0xb0 + rsp],xmm6
0x5e4e: movaps xmmword ptr [0xc0 + rsp],xmm7
0x5eac: call 0x1920
0x5eb1: nop word ptr cs:[rax + rax*0x1]
0x5ebb: nop dword ptr [rax + rax*0x1]
0x5f3e: call 0x1920
0x5f43: nop word ptr cs:[rax + rax*0x1]
0x5f4d: nop dword ptr [rax]
0x61b9: call 0x1920
0x61be: nop 
0x61c0: push r12
0x61c2: push rbp
0x61c3: mov rbp,rdi
0x61c6: push rbx
0x61c7: call 0x1890
0x61cc: mov ebx,dword ptr [rbp]
0x61cf: mov rdi,rbp
0x61d2: mov r12,rax
0x61d5: call 0x6280
0x61da: and ebx,0x20
0x61dd: test ebx,ebx
0x61df: jnz 0x61f8
0x61e1: test eax,eax
0x61e3: jz 0x61ef
0x61e5: test r12,r12
0x61e8: mov eax,0xffffffff
0x61ed: jz 0x6228
0x61ef: pop rbx
0x61f0: pop rbp
0x61f1: pop r12
0x61f3: ret 
0x61f8: test eax,eax
0x61fa: jnz 0x6218
0x61fc: call 0x1840
0x6201: mov dword ptr [rax],0x0
0x6207: mov eax,0xffffffff
0x620c: pop rbx
0x620d: pop rbp
0x620e: pop r12
0x6210: ret 
0x6218: pop rbx
0x6219: mov eax,0xffffffff
0x621e: pop rbp
0x621f: pop r12
0x6221: ret 
0x6228: call 0x1840
0x622d: cmp dword ptr [rax],0x9
0x6230: pop rbx
0x6231: pop rbp
0x6232: pop r12
0x6234: setnz al
0x6237: movzx eax,al
0x623a: neg eax
0x623c: ret 
0x6280: push r12
0x6282: push rbp
0x6283: push rbx
0x6284: mov rbx,rdi
0x6287: call 0x1a30
0x628c: test eax,eax
0x628e: mov rdi,rbx
0x6291: js 0x62e7
0x6293: call 0x1a80
0x6298: test eax,eax
0x629a: jnz 0x62c8
0x629c: mov rdi,rbx
0x629f: call 0x6300
0x62a4: test eax,eax
0x62a6: jz 0x62e4
0x62a8: call 0x1840
0x62ad: mov r12d,dword ptr [rax]
0x62b0: mov rdi,rbx
0x62b3: mov rbp,rax
0x62b6: call 0x18d0
0x62bb: test r12d,r12d
0x62be: jnz 0x62f0
0x62c0: pop rbx
0x62c1: pop rbp
0x62c2: pop r12
0x62c4: ret 
0x62c8: mov rdi,rbx
0x62cb: call 0x1a30
0x62d0: xor esi,esi
0x62d2: mov edx,0x1
0x62d7: mov edi,eax
0x62d9: call 0x1980
0x62de: cmp rax,-0x1
0x62e2: jnz 0x629c
0x62e4: mov rdi,rbx
0x62e7: pop rbx
0x62e8: pop rbp
0x62e9: pop r12
0x62eb: jmp 0x18d0
0x62f0: mov dword ptr [rbp],r12d
0x62f4: mov eax,0xffffffff
0x62f9: jmp 0x62c0
0x6300: test rdi,rdi
0x6303: push rbx
0x6304: mov rbx,rdi
0x6307: jz 0x631a
0x6309: call 0x1a80
0x630e: test eax,eax
0x6310: jz 0x631a
0x6312: test dword ptr [rbx],0x100
0x6318: jnz 0x6328
0x631a: mov rdi,rbx
0x631d: pop rbx
0x631e: jmp 0x1a60
0x6328: mov rdi,rbx
0x632b: mov edx,0x1
0x6330: xor esi,esi
0x6332: call 0x6340
0x6337: mov rdi,rbx
0x633a: pop rbx
0x633b: jmp 0x1a60
0x6340: mov rax,qword ptr [rdi + 0x8]
0x6344: cmp qword ptr [rdi + 0x10],rax
0x6348: jz 0x6350
0x634a: jmp 0x1b00
0x6350: mov rax,qword ptr [rdi + 0x20]
0x6354: cmp qword ptr [rdi + 0x28],rax
0x6358: jnz 0x634a
0x635a: cmp qword ptr [rdi + 0x48],0x0
0x635f: jnz 0x634a
0x6361: push r12
0x6363: push rbp
0x6364: mov r12d,edx
0x6367: push rbx
0x6368: mov rbp,rsi
0x636b: mov rbx,rdi
0x636e: call 0x1a30
0x6373: mov edx,r12d
0x6376: mov rsi,rbp
0x6379: mov edi,eax
0x637b: call 0x1980
0x6380: cmp rax,-0x1
0x6384: jz 0x6392
0x6386: and dword ptr [rbx],0xffffffef
0x6389: mov qword ptr [0x90 + rbx],rax
0x6390: xor eax,eax
0x6392: pop rbx
0x6393: pop rbp
0x6394: pop r12
0x6396: ret 
0x64a2: mov rax,qword ptr [-0x418 + rbp]
0x64a9: mov r12,qword ptr [rax]
0x6974: movsxd rdx,ecx
0x6977: cmp rdx,r10
0x697a: jnc 0x698a
0x697c: add rdx,r15
0x697f: cmp byte ptr [rdx + r14*0x1],0x0
0x6984: jnz 0x72c6
0x698a: cmp ecx,eax
0x698c: jge 0x6996
0x6df8: mov byte ptr [rdi + 0x1],0x0
0x6dfc: jmp 0x68b0
0x72cb: nop dword ptr [rax + rax*0x1]
0x7497: call 0x1920
0x7500: mov rdx,qword ptr [rdi + 0x8]
0x7504: add rdx,0xf
0x7508: and rdx,-0x10
0x750c: lea r11,[rdx + 0x10]
0x7510: mov qword ptr [rdi + 0x8],r11
0x7514: fld tword ptr [rdx]
0x7516: fstp tword ptr [rax + 0x10]
0x7519: nop dword ptr [rax]
0x7520: add rcx,0x1
0x7524: add rax,0x20
0x7528: cmp qword ptr [rsi],rcx
0x752b: ja 0x74e8
0x7536: mov r11d,dword ptr [rdi]
0x7539: cmp r11d,0x2f
0x753d: ja 0x767a
0x7543: mov edx,r11d
0x7546: add rdx,qword ptr [rdi + 0x10]
0x754a: add r11d,0x8
0x754e: mov dword ptr [rdi],r11d
0x7551: mov rdx,qword ptr [rdx]
0x7554: mov qword ptr [rax + 0x10],rdx
0x7558: jmp 0x7520
0x755a: mov r11d,dword ptr [rdi]
0x755d: cmp r11d,0x2f
0x7561: ja 0x769c
0x7567: mov edx,r11d
0x756a: add rdx,qword ptr [rdi + 0x10]
0x756e: add r11d,0x8
0x7572: mov dword ptr [rdi],r11d
0x7575: mov edx,dword ptr [rdx]
0x7577: mov dword ptr [rax + 0x10],edx
0x757a: jmp 0x7520
0x757c: mov r11d,dword ptr [rdi]
0x757f: cmp r11d,0x2f
0x7583: ja 0x768b
0x7589: mov edx,r11d
0x758c: add rdx,qword ptr [rdi + 0x10]
0x7590: add r11d,0x8
0x7594: mov dword ptr [rdi],r11d
0x7597: mov edx,dword ptr [rdx]
0x7599: mov byte ptr [rax + 0x10],dl
0x759c: jmp 0x7520
0x759e: mov r11d,dword ptr [rdi]
0x75a1: cmp r11d,0x2f
0x75a5: ja 0x764a
0x75ab: mov edx,r11d
0x75ae: add rdx,qword ptr [rdi + 0x10]
0x75b2: add r11d,0x8
0x75b6: mov dword ptr [rdi],r11d
0x75b9: mov edx,dword ptr [rdx]
0x75bb: mov word ptr [rax + 0x10],dx
0x75bf: jmp 0x7520
0x75c4: mov r11d,dword ptr [rdi]
0x75c7: cmp r11d,0x2f
0x75cb: ja 0x765b
0x75d1: mov edx,r11d
0x75d4: add rdx,qword ptr [rdi + 0x10]
0x75d8: add r11d,0x8
0x75dc: mov dword ptr [rdi],r11d
0x75df: mov rdx,qword ptr [rdx]
0x75e2: test rdx,rdx
0x75e5: cmovz rdx,r9
0x75e9: mov qword ptr [rax + 0x10],rdx
0x75ed: jmp 0x7520
0x75f2: mov r11d,dword ptr [rdi + 0x4]
0x75f6: cmp r11d,0xaf
0x75fd: ja 0x76ad
0x7603: mov edx,r11d
0x7606: add rdx,qword ptr [rdi + 0x10]
0x760a: add r11d,0x10
0x760e: mov dword ptr [rdi + 0x4],r11d
0x7612: movsd xmm0,qword ptr [rdx]
0x7616: movsd qword ptr [rax + 0x10],xmm0
0x761b: jmp 0x7520
0x7620: mov r11d,dword ptr [rdi]
0x7623: cmp r11d,0x2f
0x7627: ja 0x766c
0x7629: mov edx,r11d
0x762c: add rdx,qword ptr [rdi + 0x10]
0x7630: add r11d,0x8
0x7634: mov dword ptr [rdi],r11d
0x7637: mov rdx,qword ptr [rdx]
0x763a: test rdx,rdx
0x763d: cmovz rdx,r10
0x7641: mov qword ptr [rax + 0x10],rdx
0x7645: jmp 0x7520
0x764a: mov rdx,qword ptr [rdi + 0x8]
0x764e: lea r11,[rdx + 0x8]
0x7652: mov qword ptr [rdi + 0x8],r11
0x7656: jmp 0x75b9
0x765b: mov rdx,qword ptr [rdi + 0x8]
0x765f: lea r11,[rdx + 0x8]
0x7663: mov qword ptr [rdi + 0x8],r11
0x7667: jmp 0x75df
0x766c: mov rdx,qword ptr [rdi + 0x8]
0x7670: lea r11,[rdx + 0x8]
0x7674: mov qword ptr [rdi + 0x8],r11
0x7678: jmp 0x7637
0x767a: mov rdx,qword ptr [rdi + 0x8]
0x767e: lea r11,[rdx + 0x8]
0x7682: mov qword ptr [rdi + 0x8],r11
0x7686: jmp 0x7551
0x768b: mov rdx,qword ptr [rdi + 0x8]
0x768f: lea r11,[rdx + 0x8]
0x7693: mov qword ptr [rdi + 0x8],r11
0x7697: jmp 0x7597
0x769c: mov rdx,qword ptr [rdi + 0x8]
0x76a0: lea r11,[rdx + 0x8]
0x76a4: mov qword ptr [rdi + 0x8],r11
0x76a8: jmp 0x7575
0x76ad: mov rdx,qword ptr [rdi + 0x8]
0x76b1: lea r11,[rdx + 0x8]
0x76b5: mov qword ptr [rdi + 0x8],r11
0x76b9: jmp 0x7612
0x83b0: push r15
0x83b2: push r14
0x83b4: mov r15,rdx
0x83b7: push r13
0x83b9: push r12
0x83bb: lea r12,[rip+0x20256e]
0x83c2: push rbp
0x83c3: lea rbp,[rip+0x20256e]
0x83ca: push rbx
0x83cb: mov r13d,edi
0x83ce: mov r14,rsi
0x83d1: sub rbp,r12
0x83d4: sub rsp,0x8
0x83d8: sar rbp,0x3
0x83dc: call 0x17c0
0x83e1: test rbp,rbp
0x83e4: jz 0x8406
0x83e6: xor ebx,ebx
0x83e8: nop dword ptr [rax + rax*0x1]
0x83f0: mov rdx,r15
0x83f3: mov rsi,r14
0x83f6: mov edi,r13d
0x83f9: call qword ptr [r12 + rbx*0x8]
0x83fd: add rbx,0x1
0x8401: cmp rbp,rbx
0x8404: jnz 0x83f0
0x8406: add rsp,0x8
0x840a: pop rbx
0x840b: pop rbp
0x840c: pop r12
0x840e: pop r13
0x8410: pop r14
0x8412: pop r15
0x8414: ret 
0x8420: ret 
0x8440: sub rsp,0x8
0x8444: add rsp,0x8
0x8448: ret 
