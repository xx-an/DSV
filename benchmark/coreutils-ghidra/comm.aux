0x1470: push qword ptr [rip+0x2079ba]
0x1476: jmp qword ptr [rip+0x2079bc]
0x1486: push 0x0
0x148b: jmp 0x1470
0x1496: push 0x1
0x149b: jmp 0x1470
0x14a6: push 0x2
0x14ab: jmp 0x1470
0x14b6: push 0x3
0x14bb: jmp 0x1470
0x14c6: push 0x4
0x14cb: jmp 0x1470
0x14d0: jmp qword ptr [rip+0x207992]
0x14d6: push 0x5
0x14db: jmp 0x1470
0x14e0: jmp qword ptr [rip+0x20798a]
0x14e6: push 0x6
0x14eb: jmp 0x1470
0x14f6: push 0x7
0x14fb: jmp 0x1470
0x1506: push 0x8
0x150b: jmp 0x1470
0x1516: push 0x9
0x151b: jmp 0x1470
0x1526: push 0xa
0x152b: jmp 0x1470
0x1536: push 0xb
0x153b: jmp 0x1470
0x1546: push 0xc
0x154b: jmp 0x1470
0x1556: push 0xd
0x155b: jmp 0x1470
0x1566: push 0xe
0x156b: jmp 0x1470
0x1576: push 0xf
0x157b: jmp 0x1470
0x1586: push 0x10
0x158b: jmp 0x1470
0x1596: push 0x11
0x159b: jmp 0x1470
0x15a6: push 0x12
0x15ab: jmp 0x1470
0x15b0: jmp qword ptr [rip+0x207922]
0x15b6: push 0x13
0x15bb: jmp 0x1470
0x15c6: push 0x14
0x15cb: jmp 0x1470
0x15d6: push 0x15
0x15db: jmp 0x1470
0x15e6: push 0x16
0x15eb: jmp 0x1470
0x15f6: push 0x17
0x15fb: jmp 0x1470
0x1600: jmp qword ptr [rip+0x2078fa]
0x1606: push 0x18
0x160b: jmp 0x1470
0x1616: push 0x19
0x161b: jmp 0x1470
0x1620: jmp qword ptr [rip+0x2078ea]
0x1626: push 0x1a
0x162b: jmp 0x1470
0x1636: push 0x1b
0x163b: jmp 0x1470
0x1640: jmp qword ptr [rip+0x2078da]
0x1646: push 0x1c
0x164b: jmp 0x1470
0x1656: push 0x1d
0x165b: jmp 0x1470
0x1666: push 0x1e
0x166b: jmp 0x1470
0x1676: push 0x1f
0x167b: jmp 0x1470
0x1686: push 0x20
0x168b: jmp 0x1470
0x1696: push 0x21
0x169b: jmp 0x1470
0x16a6: push 0x22
0x16ab: jmp 0x1470
0x16b6: push 0x23
0x16bb: jmp 0x1470
0x16c6: push 0x24
0x16cb: jmp 0x1470
0x16d6: push 0x25
0x16db: jmp 0x1470
0x16e6: push 0x26
0x16eb: jmp 0x1470
0x16f6: push 0x27
0x16fb: jmp 0x1470
0x1706: push 0x28
0x170b: jmp 0x1470
0x1716: push 0x29
0x171b: jmp 0x1470
0x1726: push 0x2a
0x172b: jmp 0x1470
0x1736: push 0x2b
0x173b: jmp 0x1470
0x1746: push 0x2c
0x174b: jmp 0x1470
0x1750: jmp qword ptr [rip+0x207852]
0x1756: push 0x2d
0x175b: jmp 0x1470
0x1760: jmp qword ptr [rip+0x20784a]
0x1766: push 0x2e
0x176b: jmp 0x1470
0x1776: push 0x2f
0x177b: jmp 0x1470
0x1780: jmp qword ptr [rip+0x20785a]
0x1a44: lea rsi,[rip+0x472a]
0x1a4b: mov rbx,rax
0x1a4e: mov edx,0x5
0x1a53: xor edi,edi
0x1a55: call 0x1530
0x1a5a: mov rcx,rbx
0x1a5d: mov rdx,rax
0x1a60: xor esi,esi
0x1a62: xor edi,edi
0x1a64: xor eax,eax
0x1a66: call 0x16e0
0x1aa1: jmp 0x1a6b
0x1ad1: mov edx,0x5
0x1ad6: mov rbx,rax
0x1ad9: lea rsi,[rip+0x46ae]
0x1ae0: jmp 0x1a53
0x1b09: nop dword ptr [rax]
0x1b3a: hlt 
0x1b40: lea rdi,[rip+0x207559]
0x1b47: push rbp
0x1b48: lea rax,[rip+0x207551]
0x1b4f: cmp rax,rdi
0x1b52: mov rbp,rsp
0x1b55: jz 0x1b70
0x1b57: mov rax,qword ptr [rip+0x207462]
0x1b5e: test rax,rax
0x1b61: jz 0x1b70
0x1b63: pop rbp
0x1b64: jmp rax
0x1b70: pop rbp
0x1b71: ret 
0x1b80: lea rdi,[rip+0x207519]
0x1b87: lea rsi,[rip+0x207512]
0x1b8e: push rbp
0x1b8f: sub rsi,rdi
0x1b92: mov rbp,rsp
0x1b95: sar rsi,0x3
0x1b99: mov rax,rsi
0x1b9c: shr rax,0x3f
0x1ba0: add rsi,rax
0x1ba3: sar rsi,0x1
0x1ba6: jz 0x1bc0
0x1ba8: mov rax,qword ptr [rip+0x207429]
0x1baf: test rax,rax
0x1bb2: jz 0x1bc0
0x1bb4: pop rbp
0x1bb5: jmp rax
0x1bc0: pop rbp
0x1bc1: ret 
0x1bd0: cmp byte ptr [rip+0x207511],0x0
0x1bd7: jnz 0x1c08
0x1bd9: cmp qword ptr [rip+0x2073ff],0x0
0x1be1: push rbp
0x1be2: mov rbp,rsp
0x1be5: jz 0x1bf3
0x1be7: mov rdi,qword ptr [rip+0x20741a]
0x1bee: call 0x1780
0x1bf3: call 0x1b40
0x1bf8: mov byte ptr [rip+0x2074e9],0x1
0x1bff: pop rbp
0x1c00: ret 
0x1c08: ret 
0x1c10: push rbp
0x1c11: mov rbp,rsp
0x1c14: pop rbp
0x1c15: jmp 0x1b80
0x1c90: cmp byte ptr [rip+0x20746b],0x0
0x1c97: jnz 0x1c6d
0x1d46: mov byte ptr [r12+rbx*0x1],0x1
0x214b: jmp 0x1f35
0x2274: mov rbx,rax
0x2277: call 0x14b0
0x227c: mov esi,dword ptr [rax]
0x227e: lea rdx,[rip+0x3f8a]
0x2285: mov rcx,rbx
0x2288: mov edi,0x1
0x228d: xor eax,eax
0x228f: call 0x16e0
0x22b6: mov rbx,rax
0x22b9: call 0x14b0
0x22be: mov esi,dword ptr [rax]
0x22c0: lea rdx,[rip+0x3f48]
0x22c7: mov rcx,rbx
0x22ca: mov edi,0x1
0x22cf: xor eax,eax
0x22d1: call 0x16e0
0x22ea: mov rbx,rax
0x22ed: call 0x14b0
0x22f2: mov esi,dword ptr [rax]
0x22f4: lea rdx,[rip+0x3f14]
0x22fb: mov rcx,rbx
0x22fe: mov edi,0x1
0x2303: xor eax,eax
0x2305: call 0x16e0
0x2319: mov rbx,rax
0x231c: call 0x14b0
0x2321: mov esi,dword ptr [rax]
0x2323: lea rdx,[rip+0x3ee5]
0x232a: mov rcx,rbx
0x232d: mov edi,0x1
0x2332: xor eax,eax
0x2334: call 0x16e0
0x2339: nop dword ptr [rax]
0x27e0: mov qword ptr [rip+0x206929],rdi
0x27e7: ret 
0x27f0: mov byte ptr [rip+0x206911],dil
0x27f7: ret 
0x2800: push rbp
0x2801: push rbx
0x2802: sub rsp,0x8
0x2806: mov rdi,qword ptr [rip+0x20689b]
0x280d: call 0x5740
0x2812: test eax,eax
0x2814: jz 0x282c
0x2816: call 0x14b0
0x281b: cmp byte ptr [rip+0x2068e6],0x0
0x2822: mov rbx,rax
0x2825: jz 0x2843
0x2827: cmp dword ptr [rax],0x20
0x282a: jnz 0x2843
0x282c: mov rdi,qword ptr [rip+0x2068ad]
0x2833: call 0x5740
0x2838: test eax,eax
0x283a: jnz 0x2882
0x283c: add rsp,0x8
0x2840: pop rbx
0x2841: pop rbp
0x2842: ret 
0x2843: lea rsi,[rip+0x39b5]
0x284a: xor edi,edi
0x284c: mov edx,0x5
0x2851: call 0x1530
0x2856: mov rdi,qword ptr [rip+0x2068b3]
0x285d: mov rbp,rax
0x2860: test rdi,rdi
0x2863: jz 0x288d
0x2865: call 0x46d0
0x286a: mov esi,dword ptr [rbx]
0x286c: lea rdx,[rip+0x3998]
0x2873: mov rcx,rax
0x2876: mov r8,rbp
0x2879: xor edi,edi
0x287b: xor eax,eax
0x287d: call 0x16e0
0x2882: mov edi,dword ptr [rip+0x2067a0]
0x2888: call 0x14d0
0x288d: mov esi,dword ptr [rbx]
0x288f: lea rdx,[rip+0x3979]
0x2896: mov rcx,rax
0x2899: xor edi,edi
0x289b: xor eax,eax
0x289d: call 0x16e0
0x28a2: jmp 0x2882
0x28b0: jmp 0x15d0
0x2b26: test byte ptr [rbp],0x20
0x2b2a: jnz 0x2b40
0x2b2c: cmp byte ptr [rbx-0x1],dl
0x2b2f: jz 0x2ae6
0x2b31: mov r12d,r15d
0x2b34: mov ecx,edx
0x2b36: jmp 0x2aa4
0x2b60: mov edx,0xa
0x2b65: jmp 0x2a50
0x2b70: mov rdi,qword ptr [rdi+0x10]
0x2b74: jmp 0x1490
0x2c5f: nop 
0x2c70: movzx edx,byte ptr [rax]
0x2c73: and edx,0xffffffdf
0x2c76: cmp dl,0x55
0x2c79: jz 0x2cf0
0x2c7b: cmp dl,0x47
0x2c7e: jz 0x2ca0
0x2c80: lea rax,[rip+0x35ec]
0x2c87: lea rdx,[rip+0x35e7]
0x2c8e: cmp ebx,0x9
0x2c91: cmovnz rax,rdx
0x2c95: add rsp,0x8
0x2c99: pop rbx
0x2c9a: pop rbp
0x2c9b: ret 
0x2ca0: movzx edx,byte ptr [rax+0x1]
0x2ca4: and edx,0xffffffdf
0x2ca7: cmp dl,0x42
0x2caa: jnz 0x2c80
0x2cac: cmp byte ptr [rax+0x2],0x31
0x2cb0: jnz 0x2c80
0x2cb2: cmp byte ptr [rax+0x3],0x38
0x2cb6: jnz 0x2c80
0x2cb8: cmp byte ptr [rax+0x4],0x30
0x2cbc: jnz 0x2c80
0x2cbe: cmp byte ptr [rax+0x5],0x33
0x2cc2: jnz 0x2c80
0x2cc4: cmp byte ptr [rax+0x6],0x30
0x2cc8: jnz 0x2c80
0x2cca: cmp byte ptr [rax+0x7],0x0
0x2cce: jnz 0x2c80
0x2cd0: cmp byte ptr [rbp],0x60
0x2cd4: lea rax,[rip+0x3591]
0x2cdb: lea rdx,[rip+0x358e]
0x2ce2: cmovnz rax,rdx
0x2ce6: add rsp,0x8
0x2cea: pop rbx
0x2ceb: pop rbp
0x2cec: ret 
0x2cf0: movzx edx,byte ptr [rax+0x1]
0x2cf4: and edx,0xffffffdf
0x2cf7: cmp dl,0x54
0x2cfa: jnz 0x2c80
0x2cfc: movzx edx,byte ptr [rax+0x2]
0x2d00: and edx,0xffffffdf
0x2d03: cmp dl,0x46
0x2d06: jnz 0x2c80
0x2d0c: cmp byte ptr [rax+0x3],0x2d
0x2d10: jnz 0x2c80
0x2d16: cmp byte ptr [rax+0x4],0x38
0x2d1a: jnz 0x2c80
0x2d20: cmp byte ptr [rax+0x5],0x0
0x2d24: jnz 0x2c80
0x2d2a: cmp byte ptr [rbp],0x60
0x2d2e: lea rax,[rip+0x352f]
0x2d35: lea rdx,[rip+0x352c]
0x2d3c: cmovnz rax,rdx
0x2d40: add rsp,0x8
0x2d44: pop rbx
0x2d45: pop rbp
0x2d46: ret 
0x36ab: test rax,rax
0x36ae: mov r15,rax
0x36b1: jz 0x3701
0x36b3: cmp rax,-0x1
0x36b7: jz 0x3cd5
0x36bd: cmp rax,-0x2
0x36c1: jz 0x3c61
0x36c7: cmp dword ptr [rsp+0x8],0x2
0x36cc: setz al
0x36cf: and al,byte ptr [rsp+0xf]
0x36d3: jnz 0x3870
0x36d9: mov edi,dword ptr [0x9c+rsp]
0x36e0: call 0x1760
0x36e5: mov rdi,qword ptr [rsp+0x28]
0x36ea: test eax,eax
0x36ec: mov eax,0x0
0x36f1: cmovz r12d,eax
0x36f5: add rbx,r15
0x36f8: call 0x1750
0x36fd: test eax,eax
0x36ff: jz 0x3683
0x3701: mov edx,r12d
0x3704: mov rdi,rbx
0x3707: movzx r8d,byte ptr [rsp+0x7d]
0x370d: xor edx,0x1
0x3710: movzx ebx,byte ptr [rsp+0x7e]
0x3715: movzx r10d,byte ptr [rsp+0x7f]
0x371b: and dl,byte ptr [rsp+0xd]
0x371f: mov r15,qword ptr [0x80+rsp]
0x3727: mov r14,qword ptr [rsp+0x40]
0x372c: mov r13,qword ptr [rsp+0x70]
0x3731: mov r11,qword ptr [rsp+0x30]
0x3736: cmp rdi,0x1
0x373a: jbe 0x3d3b
0x37fb: mov esi,edx
0x37fd: cmp r13,r15
0x3800: jbe 0x3806
0x3802: mov byte ptr [r14+r15*0x1],bl
0x3806: movzx ebx,byte ptr [rdi+rbp*0x1]
0x380a: add r15,0x1
0x383e: test al,al
0x3840: jz 0x3c3e
0x3846: cmp r13,r15
0x3849: jbe 0x3850
0x384b: mov byte ptr [r14+r15*0x1],0x27
0x3850: lea rax,[r15+0x1]
0x3854: cmp r13,rax
0x3857: jbe 0x385f
0x3859: mov byte ptr [r14+r15*0x1+0x1],0x27
0x385f: add r15,0x2
0x3863: xor r10d,r10d
0x3866: xor r8d,r8d
0x3869: jmp 0x37fd
0x3870: cmp r15,0x1
0x3874: jz 0x36d9
0x387a: mov rdi,qword ptr [rsp+0x10]
0x387f: lea rcx,[rdi+r15*0x1]
0x3883: lea rdx,[rdi+r14*0x1+0x1]
0x3888: lea r8,[rcx+r14*0x1]
0x388c: jmp 0x389d
0x3890: add rdx,0x1
0x3894: cmp r8,rdx
0x3897: jz 0x36d9
0x389d: movzx ecx,byte ptr [rdx]
0x38a0: sub ecx,0x5b
0x38a3: cmp cl,0x21
0x38a6: ja 0x3890
0x38a8: mov esi,0x1
0x38ad: shl rsi,cl
0x38b0: mov rcx,rsi
0x38b3: mov rsi,0x20000002b
0x38bd: test rcx,rsi
0x38c0: jz 0x3890
0x38c2: mov r14,qword ptr [rsp+0x40]
0x38c7: mov r13,qword ptr [rsp+0x70]
0x38cc: mov rbp,qword ptr [rsp+0x30]
0x38d1: mov dword ptr [rsp+0x8],0x2
0x3922: add rsp,0x20
0x3926: mov r15,rax
0x3c3e: xor r10d,r10d
0x3c41: jmp 0x37fd
0x3c61: mov r11,qword ptr [rsp+0x30]
0x3c66: mov rsi,r14
0x3c69: mov rcx,r13
0x3c6c: mov rax,rbx
0x3c6f: mov rdi,rbx
0x3c72: movzx r8d,byte ptr [rsp+0x7d]
0x3c78: movzx ebx,byte ptr [rsp+0x7e]
0x3c7d: mov r9,qword ptr [0x88+rsp]
0x3c85: cmp rsi,r11
0x3c88: movzx r10d,byte ptr [rsp+0x7f]
0x3c8e: mov r15,qword ptr [0x80+rsp]
0x3c96: mov r14,qword ptr [rsp+0x40]
0x3c9b: mov r13,qword ptr [rsp+0x70]
0x3ca0: jnc 0x3cc8
0x3ca2: cmp byte ptr [rcx],0x0
0x3ca5: jnz 0x3cb7
0x3ca7: jmp 0x3cc8
0x3cb0: cmp byte ptr [r9+rax*0x1],0x0
0x3cb5: jz 0x3cc5
0x3cb7: add rax,0x1
0x3cbb: lea rdx,[rbp+rax*0x1]
0x3cc0: cmp r11,rdx
0x3cc3: ja 0x3cb0
0x3cc5: mov rdi,rax
0x3cc8: movzx edx,byte ptr [rsp+0xd]
0x3ccd: xor r12d,r12d
0x3cd0: jmp 0x3736
0x3cd5: mov rdi,rbx
0x3cd8: movzx r8d,byte ptr [rsp+0x7d]
0x3cde: movzx ebx,byte ptr [rsp+0x7e]
0x3ce3: movzx r10d,byte ptr [rsp+0x7f]
0x3ce9: mov r15,qword ptr [0x80+rsp]
0x3cf1: xor r12d,r12d
0x3cf4: mov r14,qword ptr [rsp+0x40]
0x3cf9: mov r13,qword ptr [rsp+0x70]
0x3cfe: mov r11,qword ptr [rsp+0x30]
0x3d03: movzx edx,byte ptr [rsp+0xd]
0x3d08: jmp 0x3736
0x3d3b: mov eax,edx
0x3d3d: jmp 0x3297
0x3eba: mov qword ptr [rsp+0x68],rax
0x3ebf: jmp 0x3b16
0x3ed0: mov qword ptr [rsp+0x60],rax
0x3ed5: jmp 0x3b41
0x3f20: add rsp,0x20
0x3f24: mov r15,rax
0x3f27: jmp 0x3929
0x3f84: nop 
0x3f86: nop word ptr cs:[rax+rax*0x1]
0x4003: mov rbx,rax
0x4006: mov qword ptr [rip+0x205073],rax
0x400d: movsxd rdi,dword ptr [rip+0x205064]
0x4014: mov edx,r12d
0x4017: xor esi,esi
0x4019: sub edx,edi
0x401b: shl rdi,0x4
0x401f: movsxd rdx,edx
0x4022: add rdi,rbx
0x4025: shl rdx,0x4
0x4029: call 0x15b0
0x402e: mov dword ptr [rip+0x205043],r12d
0x407c: add rsp,0x20
0x4080: mov r11,qword ptr [rsp+0x10]
0x4085: cmp r11,rax
0x4088: ja 0x40f1
0x408a: lea rsi,[rax+0x1]
0x408e: lea rax,[rip+0x20508b]
0x4095: cmp r12,rax
0x4098: mov qword ptr [rbx],rsi
0x409b: jz 0x40af
0x409d: mov rdi,r12
0x40a0: mov qword ptr [rsp+0x10],rsi
0x40a5: call 0x1490
0x40aa: mov rsi,qword ptr [rsp+0x10]
0x40af: mov rdi,rsi
0x40b2: mov qword ptr [rsp+0x10],rsi
0x40b7: call 0x4f20
0x40bc: sub rsp,0x8
0x40c0: mov qword ptr [rbx+0x8],rax
0x40c4: mov r8d,dword ptr [rbp]
0x40c8: push qword ptr [rbp+0x30]
0x40cb: push qword ptr [rbp+0x28]
0x40ce: mov rcx,r14
0x40d1: push r15
0x40d3: mov r9d,dword ptr [rsp+0x3c]
0x40d8: mov rdi,rax
0x40db: mov rdx,qword ptr [rsp+0x28]
0x40e0: mov rsi,qword ptr [rsp+0x30]
0x40e5: mov r12,rax
0x40e8: call 0x2d50
0x40ed: add rsp,0x20
0x40f1: mov eax,dword ptr [rsp+0x18]
0x40f5: mov dword ptr [r13],eax
0x40f9: add rsp,0x28
0x40fd: mov rax,r12
0x4100: pop rbx
0x4101: pop rbp
0x4102: pop r12
0x4104: pop r13
0x4106: pop r14
0x4108: pop r15
0x410a: ret 
0x4117: movdqa xmm0,xmmword ptr [rip+0x204f71]
0x411f: mov rbx,rax
0x4122: mov qword ptr [rip+0x204f57],rax
0x4129: movups xmmword ptr [rax],xmm0
0x412c: jmp 0x400d
0x4131: call 0x14a0
0x4136: call 0x5170
0x413b: nop dword ptr [rax+rax*0x1]
0x4140: push r12
0x4142: push rbp
0x4143: push rbx
0x4144: mov rbx,rdi
0x4147: call 0x14b0
0x414c: mov r12d,dword ptr [rax]
0x414f: mov rbp,rax
0x4152: lea rax,[rip+0x2050c7]
0x4159: test rbx,rbx
0x415c: mov esi,0x38
0x4161: cmovz rbx,rax
0x4165: mov rdi,rbx
0x4168: call 0x5120
0x416d: mov dword ptr [rbp],r12d
0x4171: pop rbx
0x4172: pop rbp
0x4173: pop r12
0x4175: ret 
0x4180: lea rax,[rip+0x205099]
0x4187: test rdi,rdi
0x418a: cmovz rdi,rax
0x418e: mov eax,dword ptr [rdi]
0x4190: ret 
0x41a0: lea rax,[rip+0x205079]
0x41a7: test rdi,rdi
0x41aa: cmovz rdi,rax
0x41ae: mov dword ptr [rdi],esi
0x41b0: ret 
0x41c0: lea rax,[rip+0x205059]
0x41c7: test rdi,rdi
0x41ca: mov ecx,esi
0x41cc: cmovz rdi,rax
0x41d0: mov eax,esi
0x41d2: and ecx,0x1f
0x41d5: shr al,0x5
0x41d8: movzx eax,al
0x41db: lea rdi,[rdi+rax*0x4+0x8]
0x41e0: mov esi,dword ptr [rdi]
0x41e2: mov eax,esi
0x41e4: shr eax,cl
0x41e6: xor edx,eax
0x41e8: and eax,0x1
0x41eb: and edx,0x1
0x41ee: shl edx,cl
0x41f0: xor edx,esi
0x41f2: mov dword ptr [rdi],edx
0x41f4: ret 
0x4200: lea rax,[rip+0x205019]
0x4207: test rdi,rdi
0x420a: cmovz rdi,rax
0x420e: mov eax,dword ptr [rdi+0x4]
0x4211: mov dword ptr [rdi+0x4],esi
0x4214: ret 
0x4220: lea rax,[rip+0x204ff9]
0x4227: test rdi,rdi
0x422a: cmovz rdi,rax
0x422e: test rsi,rsi
0x4231: mov dword ptr [rdi],0xa
0x4237: jz 0x4247
0x4239: test rdx,rdx
0x423c: jz 0x4247
0x423e: mov qword ptr [rdi+0x28],rsi
0x4242: mov qword ptr [rdi+0x30],rdx
0x4246: ret 
0x4247: sub rsp,0x8
0x424b: call 0x14a0
0x4250: push r15
0x4252: push r14
0x4254: lea rax,[rip+0x204fc5]
0x425b: push r13
0x425d: push r12
0x425f: mov r13,rdi
0x4262: push rbp
0x4263: push rbx
0x4264: mov rbx,r8
0x4267: mov r14,rsi
0x426a: mov r15,rdx
0x426d: sub rsp,0x18
0x4271: test r8,r8
0x4274: cmovz rbx,rax
0x4278: mov qword ptr [rsp+0x8],rcx
0x427d: call 0x14b0
0x4282: mov r12d,dword ptr [rax]
0x4285: mov rbp,rax
0x4288: lea rax,[rbx+0x8]
0x428c: sub rsp,0x8
0x4290: mov r9d,dword ptr [rbx+0x4]
0x4294: push qword ptr [rbx+0x30]
0x4297: mov r8d,dword ptr [rbx]
0x429a: push qword ptr [rbx+0x28]
0x429d: mov rdx,r15
0x42a0: push rax
0x42a1: mov rcx,qword ptr [rsp+0x28]
0x42a6: mov rsi,r14
0x42a9: mov rdi,r13
0x42ac: call 0x2d50
0x42b1: mov dword ptr [rbp],r12d
0x42b5: add rsp,0x38
0x42b9: pop rbx
0x42ba: pop rbp
0x42bb: pop r12
0x42bd: pop r13
0x42bf: pop r14
0x42c1: pop r15
0x42c3: ret 
0x42d0: push r15
0x42d2: push r14
0x42d4: lea rax,[rip+0x204f45]
0x42db: push r13
0x42dd: push r12
0x42df: mov r12,rdx
0x42e2: push rbp
0x42e3: push rbx
0x42e4: mov rbx,rcx
0x42e7: mov r14,rdi
0x42ea: mov r15,rsi
0x42ed: sub rsp,0x38
0x42f1: test rcx,rcx
0x42f4: cmovz rbx,rax
0x42f8: xor ebp,ebp
0x42fa: call 0x14b0
0x42ff: test r12,r12
0x4302: mov r13,rax
0x4305: mov eax,dword ptr [rax]
0x4307: setz bpl
0x430b: or ebp,dword ptr [rbx+0x4]
0x430e: lea r10,[rbx+0x8]
0x4312: sub rsp,0x8
0x4316: mov r8d,dword ptr [rbx]
0x4319: mov rcx,r15
0x431c: mov dword ptr [rsp+0x14],eax
0x4320: push qword ptr [rbx+0x30]
0x4323: mov rdx,r14
0x4326: push qword ptr [rbx+0x28]
0x4329: push r10
0x432b: xor esi,esi
0x432d: mov r9d,ebp
0x4330: xor edi,edi
0x4332: mov qword ptr [rsp+0x40],r10
0x4337: call 0x2d50
0x433c: lea rsi,[rax+0x1]
0x4340: mov qword ptr [rsp+0x48],rax
0x4345: add rsp,0x20
0x4349: mov rdi,rsi
0x434c: mov qword ptr [rsp+0x18],rsi
0x4351: call 0x4f20
0x4356: mov qword ptr [rsp+0x10],rax
0x435b: sub rsp,0x8
0x435f: push qword ptr [rbx+0x30]
0x4362: push qword ptr [rbx+0x28]
0x4365: mov r10,qword ptr [rsp+0x38]
0x436a: mov r9d,ebp
0x436d: mov r8d,dword ptr [rbx]
0x4370: mov rcx,r15
0x4373: mov rdx,r14
0x4376: mov rdi,rax
0x4379: push r10
0x437b: mov rsi,qword ptr [rsp+0x38]
0x4380: call 0x2d50
0x4385: mov eax,dword ptr [rsp+0x2c]
0x4389: add rsp,0x20
0x438d: test r12,r12
0x4390: mov dword ptr [r13],eax
0x4394: jz 0x439f
0x4396: mov r11,qword ptr [rsp+0x28]
0x439b: mov qword ptr [r12],r11
0x439f: mov rax,qword ptr [rsp+0x10]
0x43a4: add rsp,0x38
0x43a8: pop rbx
0x43a9: pop rbp
0x43aa: pop r12
0x43ac: pop r13
0x43ae: pop r14
0x43b0: pop r15
0x43b2: ret 
0x43c0: mov rcx,rdx
0x43c3: xor edx,edx
0x43c5: jmp 0x42d0
0x43d0: mov eax,dword ptr [rip+0x204ca2]
0x43d6: push r12
0x43d8: mov r12,qword ptr [rip+0x204ca1]
0x43df: push rbp
0x43e0: push rbx
0x43e1: cmp eax,0x1
0x43e4: jle 0x4411
0x43e6: sub eax,0x2
0x43e9: lea rbx,[r12+0x18]
0x43ee: shl rax,0x4
0x43f2: lea rbp,[r12+rax*0x1+0x28]
0x43f7: nop word ptr [rax+rax*0x1]
0x4400: mov rdi,qword ptr [rbx]
0x4403: add rbx,0x10
0x4407: call 0x1490
0x440c: cmp rbx,rbp
0x440f: jnz 0x4400
0x4411: mov rdi,qword ptr [r12+0x8]
0x4416: lea rbx,[rip+0x204d03]
0x441d: cmp rdi,rbx
0x4420: jz 0x4439
0x4422: call 0x1490
0x4427: mov qword ptr [rip+0x204c5e],0x100
0x4432: mov qword ptr [rip+0x204c5f],rbx
0x4439: lea rbx,[rip+0x204c50]
0x4440: cmp r12,rbx
0x4443: jz 0x4454
0x4445: mov rdi,r12
0x4448: call 0x1490
0x444d: mov qword ptr [rip+0x204c2c],rbx
0x4454: pop rbx
0x4455: mov dword ptr [rip+0x204c19],0x1
0x445f: pop rbp
0x4460: pop r12
0x4462: ret 
0x4470: lea rcx,[rip+0x204da9]
0x4477: mov rdx,-0x1
0x447e: jmp 0x3f90
0x4490: lea rcx,[rip+0x204d89]
0x4497: jmp 0x3f90
0x44a0: lea rcx,[rip+0x204d79]
0x44a7: mov rsi,rdi
0x44aa: mov rdx,-0x1
0x44b1: xor edi,edi
0x44b3: jmp 0x3f90
0x44c0: lea rcx,[rip+0x204d59]
0x44c7: mov rdx,rsi
0x44ca: mov rsi,rdi
0x44cd: xor edi,edi
0x44cf: jmp 0x3f90
0x44e0: sub rsp,0x48
0x44e4: mov rax,rdx
0x44e7: mov rdx,qword ptr fs:[0x28]
0x44f0: mov qword ptr [rsp+0x38],rdx
0x44f5: xor edx,edx
0x44f7: cmp esi,0xa
0x44fa: jz 0x4564
0x44fc: mov dword ptr [rsp],esi
0x44ff: mov rcx,rsp
0x4502: mov rdx,-0x1
0x4509: mov rsi,rax
0x450c: mov qword ptr [rsp+0x4],0x0
0x4515: mov qword ptr [rsp+0xc],0x0
0x451e: mov qword ptr [rsp+0x14],0x0
0x4527: mov qword ptr [rsp+0x1c],0x0
0x4530: mov qword ptr [rsp+0x24],0x0
0x4539: mov qword ptr [rsp+0x2c],0x0
0x4542: mov dword ptr [rsp+0x34],0x0
0x454a: call 0x3f90
0x454f: mov rcx,qword ptr [rsp+0x38]
0x4554: xor rcx,qword ptr fs:[0x28]
0x455d: jnz 0x4569
0x455f: add rsp,0x48
0x4563: ret 
0x4564: call 0x14a0
0x4569: call 0x1560
0x456e: nop 
0x4570: sub rsp,0x48
0x4574: mov rax,rdx
0x4577: mov rdx,rcx
0x457a: mov rcx,qword ptr fs:[0x28]
0x4583: mov qword ptr [rsp+0x38],rcx
0x4588: xor ecx,ecx
0x458a: cmp esi,0xa
0x458d: jz 0x45f0
0x458f: mov dword ptr [rsp],esi
0x4592: mov rcx,rsp
0x4595: mov rsi,rax
0x4598: mov qword ptr [rsp+0x4],0x0
0x45a1: mov qword ptr [rsp+0xc],0x0
0x45aa: mov qword ptr [rsp+0x14],0x0
0x45b3: mov qword ptr [rsp+0x1c],0x0
0x45bc: mov qword ptr [rsp+0x24],0x0
0x45c5: mov qword ptr [rsp+0x2c],0x0
0x45ce: mov dword ptr [rsp+0x34],0x0
0x45d6: call 0x3f90
0x45db: mov rdx,qword ptr [rsp+0x38]
0x45e0: xor rdx,qword ptr fs:[0x28]
0x45e9: jnz 0x45f5
0x45eb: add rsp,0x48
0x45ef: ret 
0x45f0: call 0x14a0
0x45f5: call 0x1560
0x45fa: nop word ptr [rax+rax*0x1]
0x4600: mov rdx,rsi
0x4603: mov esi,edi
0x4605: xor edi,edi
0x4607: jmp 0x44e0
0x4610: mov rcx,rdx
0x4613: mov rdx,rsi
0x4616: mov esi,edi
0x4618: xor edi,edi
0x461a: jmp 0x4570
0x4620: sub rsp,0x48
0x4624: mov ecx,edx
0x4626: mov rax,qword ptr fs:[0x28]
0x462f: mov qword ptr [rsp+0x38],rax
0x4634: xor eax,eax
0x4636: mov rax,qword ptr [rip+0x204c13]
0x463d: mov r8,rsp
0x4640: and ecx,0x1f
0x4643: movdqa xmm0,xmmword ptr [rip+0x204bd5]
0x464b: mov qword ptr [rsp+0x30],rax
0x4650: mov eax,edx
0x4652: movaps xmmword ptr [rsp],xmm0
0x4656: shr al,0x5
0x4659: movzx eax,al
0x465c: lea r9,[r8+rax*0x4+0x8]
0x4661: movdqa xmm0,xmmword ptr [rip+0x204bc7]
0x4669: movaps xmmword ptr [rsp+0x10],xmm0
0x466e: movdqa xmm0,xmmword ptr [rip+0x204bca]
0x4676: movaps xmmword ptr [rsp+0x20],xmm0
0x467b: mov edx,dword ptr [r9]
0x467e: mov eax,edx
0x4680: shr eax,cl
0x4682: not eax
0x4684: and eax,0x1
0x4687: shl eax,cl
0x4689: mov rcx,r8
0x468c: xor eax,edx
0x468e: mov rdx,rsi
0x4691: mov rsi,rdi
0x4694: mov dword ptr [r9],eax
0x4697: xor edi,edi
0x4699: call 0x3f90
0x469e: mov rsi,qword ptr [rsp+0x38]
0x46a3: xor rsi,qword ptr fs:[0x28]
0x46ac: jnz 0x46b3
0x46ae: add rsp,0x48
0x46b2: ret 
0x46b3: call 0x1560
0x46b8: nop dword ptr [rax+rax*0x1]
0x46c0: movsx edx,sil
0x46c4: mov rsi,-0x1
0x46cb: jmp 0x4620
0x46d0: mov edx,0x3a
0x46d5: mov rsi,-0x1
0x46dc: jmp 0x4620
0x46f0: mov edx,0x3a
0x46f5: jmp 0x4620
0x476f: mov rcx,qword ptr [rsp+0x38]
0x4774: xor rcx,qword ptr fs:[0x28]
0x477d: jnz 0x4789
0x477f: add rsp,0x48
0x4783: ret 
0x4784: call 0x14a0
0x4789: call 0x1560
0x478e: nop 
0x4790: sub rsp,0x48
0x4794: mov r9,rcx
0x4797: mov rcx,qword ptr [rip+0x204ab2]
0x479e: movdqa xmm0,xmmword ptr [rip+0x204a7a]
0x47a6: mov rax,qword ptr fs:[0x28]
0x47af: mov qword ptr [rsp+0x38],rax
0x47b4: xor eax,eax
0x47b6: movaps xmmword ptr [rsp],xmm0
0x47ba: test rsi,rsi
0x47bd: mov qword ptr [rsp+0x30],rcx
0x47c2: mov dword ptr [rsp],0xa
0x47c9: movdqa xmm0,xmmword ptr [rip+0x204a5f]
0x47d1: movaps xmmword ptr [rsp+0x10],xmm0
0x47d6: movdqa xmm0,xmmword ptr [rip+0x204a62]
0x47de: movaps xmmword ptr [rsp+0x20],xmm0
0x47e3: jz 0x4817
0x47e5: test rdx,rdx
0x47e8: jz 0x4817
0x47ea: mov qword ptr [rsp+0x28],rsi
0x47ef: mov qword ptr [rsp+0x30],rdx
0x47f4: mov rcx,rsp
0x47f7: mov rdx,r8
0x47fa: mov rsi,r9
0x47fd: call 0x3f90
0x4802: mov rdi,qword ptr [rsp+0x38]
0x4807: xor rdi,qword ptr fs:[0x28]
0x4810: jnz 0x481c
0x4812: add rsp,0x48
0x4816: ret 
0x4817: call 0x14a0
0x481c: call 0x1560
0x4821: nop dword ptr [rax+rax*0x1]
0x4826: nop word ptr cs:[rax+rax*0x1]
0x4830: mov r8,-0x1
0x4837: jmp 0x4790
0x4840: mov rcx,rdx
0x4843: mov r8,-0x1
0x484a: mov rdx,rsi
0x484d: mov rsi,rdi
0x4850: xor edi,edi
0x4852: jmp 0x4790
0x4860: mov r8,rcx
0x4863: mov rcx,rdx
0x4866: mov rdx,rsi
0x4869: mov rsi,rdi
0x486c: xor edi,edi
0x486e: jmp 0x4790
0x4880: lea rcx,[rip+0x2047b9]
0x4887: jmp 0x3f90
0x4890: lea rcx,[rip+0x2047a9]
0x4897: mov rdx,rsi
0x489a: mov rsi,rdi
0x489d: xor edi,edi
0x489f: jmp 0x3f90
0x48b0: lea rcx,[rip+0x204789]
0x48b7: mov rdx,-0x1
0x48be: jmp 0x3f90
0x4a38: mov r8,rcx
0x4a3b: mov rcx,rdx
0x4a3e: lea rdx,[rip+0x1d0f]
0x4a45: mov esi,0x1
0x4a4a: xor eax,eax
0x4a4c: call 0x1740
0x4a51: jmp 0x493c
0x4d20: xor r9d,r9d
0x4d23: cmp qword ptr [r8],0x0
0x4d27: jz 0x4d3b
0x4d29: nop dword ptr [rax]
0x4d30: add r9,0x1
0x4d34: cmp qword ptr [r8+r9*0x8],0x0
0x4d39: jnz 0x4d30
0x4d3b: jmp 0x4900
0x4d40: sub rsp,0x68
0x4d44: mov r10,r8
0x4d47: xor r9d,r9d
0x4d4a: mov rax,qword ptr fs:[0x28]
0x4d53: mov qword ptr [rsp+0x58],rax
0x4d58: xor eax,eax
0x4d5a: mov r8,rsp
0x4d5d: nop dword ptr [rax]
0x4d60: mov eax,dword ptr [r10]
0x4d63: cmp eax,0x2f
0x4d66: ja 0x4daa
0x4d68: mov r11d,eax
0x4d6b: add r11,qword ptr [r10+0x10]
0x4d6f: add eax,0x8
0x4d72: mov dword ptr [r10],eax
0x4d75: mov rax,qword ptr [r11]
0x4d78: test rax,rax
0x4d7b: mov qword ptr [r8+r9*0x8],rax
0x4d7f: jz 0x4d8b
0x4d81: add r9,0x1
0x4d85: cmp r9,0xa
0x4d89: jnz 0x4d60
0x4d8b: call 0x4900
0x4d90: mov rax,qword ptr [rsp+0x58]
0x4d95: xor rax,qword ptr fs:[0x28]
0x4d9e: jnz 0x4da5
0x4da0: add rsp,0x68
0x4da4: ret 
0x4da5: call 0x1560
0x4daa: mov r11,qword ptr [r10+0x8]
0x4dae: lea rax,[r11+0x8]
0x4db2: mov qword ptr [r10+0x8],rax
0x4db6: jmp 0x4d75
0x4ea0: push rbx
0x4ea1: lea rsi,[rip+0x18fa]
0x4ea8: mov edx,0x5
0x4ead: xor edi,edi
0x4eaf: call 0x1530
0x4eb4: lea rdx,[rip+0x18fc]
0x4ebb: mov rsi,rax
0x4ebe: mov edi,0x1
0x4ec3: xor eax,eax
0x4ec5: call 0x16d0
0x4eca: lea rsi,[rip+0x18fc]
0x4ed1: mov edx,0x5
0x4ed6: xor edi,edi
0x4ed8: call 0x1530
0x4edd: lea rcx,[rip+0x10b4]
0x4ee4: lea rdx,[rip+0x120c]
0x4eeb: mov rsi,rax
0x4eee: mov edi,0x1
0x4ef3: xor eax,eax
0x4ef5: call 0x16d0
0x4efa: mov rbx,qword ptr [rip+0x2041a7]
0x4f01: lea rsi,[rip+0x1af8]
0x4f08: xor edi,edi
0x4f0a: mov edx,0x5
0x4f0f: call 0x1530
0x4f14: mov rsi,rbx
0x4f17: mov rdi,rax
0x4f1a: pop rbx
0x4f1b: jmp 0x15f0
0x4f20: push rbx
0x4f21: mov rbx,rdi
0x4f24: call 0x1640
0x4f29: test rax,rax
0x4f2c: jnz 0x4f33
0x4f2e: test rbx,rbx
0x4f31: jnz 0x4f35
0x4f33: pop rbx
0x4f34: ret 
0x4f35: call 0x5170
0x4f3a: nop word ptr [rax+rax*0x1]
0x4f40: mov rax,rdi
0x4f43: mul rsi
0x4f46: mov rdi,rax
0x4f49: seto al
0x4f4c: test rdi,rdi
0x4f4f: js 0x4f5b
0x4f51: movzx eax,al
0x4f54: test rax,rax
0x4f57: jnz 0x4f5b
0x4f59: jmp 0x4f20
0x4f5b: sub rsp,0x8
0x4f5f: call 0x5170
0x4f64: nop 
0x4f66: nop word ptr cs:[rax+rax*0x1]
0x4f70: jmp 0x4f20
0x4f9b: test rbx,rbx
0x4f9e: jnz 0x4fb1
0x4fb1: call 0x5170
0x4fb6: nop word ptr cs:[rax+rax*0x1]
0x4fc0: mov rax,rsi
0x4fc3: mul rdx
0x4fc6: mov rsi,rax
0x4fc9: seto al
0x4fcc: test rsi,rsi
0x4fcf: js 0x4fdb
0x4fd1: movzx eax,al
0x4fd4: test rax,rax
0x4fd7: jnz 0x4fdb
0x4fd9: jmp 0x4f80
0x4fdb: sub rsp,0x8
0x4fdf: call 0x5170
0x4fe4: nop 
0x4fe6: nop word ptr cs:[rax+rax*0x1]
0x4ff0: test rdi,rdi
0x4ff3: mov r9,rdx
0x4ff6: mov rcx,qword ptr [rsi]
0x4ff9: jz 0x5030
0x4ffb: xor edx,edx
0x4ffd: mov rax,0x5555555555555554
0x5007: div r9
0x500a: cmp rax,rcx
0x500d: jbe 0x504b
0x500f: mov rax,rcx
0x5012: shr rax,0x1
0x5015: lea rcx,[rax+rcx*0x1+0x1]
0x501a: mov qword ptr [rsi],rcx
0x501d: imul rcx,r9
0x5021: mov rsi,rcx
0x5024: jmp 0x4f80
0x5030: test rcx,rcx
0x5033: jz 0x5058
0x5035: mov rax,rcx
0x5038: mul r9
0x503b: seto dl
0x503e: test rax,rax
0x5041: movzx edx,dl
0x5044: js 0x504b
0x5046: test rdx,rdx
0x5049: jz 0x501a
0x504b: sub rsp,0x8
0x504f: call 0x5170
0x5054: nop dword ptr [rax]
0x5058: xor edx,edx
0x505a: mov eax,0x80
0x505f: xor r8d,r8d
0x5062: div r9
0x5065: test rax,rax
0x5068: setz r8b
0x506c: lea rcx,[r8+rax*0x1]
0x5070: jmp 0x5035
0x50ca: nop word ptr [rax+rax*0x1]
0x50d0: push rbx
0x50d1: mov rbx,rdi
0x50d4: call 0x4f20
0x50d9: mov rdx,rbx
0x50dc: xor esi,esi
0x50de: mov rdi,rax
0x50e1: pop rbx
0x50e2: jmp 0x15b0
0x50f0: mov rax,rdi
0x50f3: sub rsp,0x8
0x50f7: mul rsi
0x50fa: seto dl
0x50fd: test rax,rax
0x5100: js 0x5119
0x5102: movzx edx,dl
0x5105: test rdx,rdx
0x5108: jnz 0x5119
0x510a: call 0x1600
0x510f: test rax,rax
0x5112: jz 0x5119
0x5114: add rsp,0x8
0x5118: ret 
0x5119: call 0x5170
0x511e: nop 
0x5120: push rbp
0x5121: push rbx
0x5122: mov rbp,rdi
0x5125: mov rdi,rsi
0x5128: mov rbx,rsi
0x512b: sub rsp,0x8
0x512f: call 0x4f20
0x5134: add rsp,0x8
0x5138: mov rdx,rbx
0x513b: mov rsi,rbp
0x513e: pop rbx
0x513f: pop rbp
0x5140: mov rdi,rax
0x5143: jmp 0x1620
0x5150: push rbx
0x5151: mov rbx,rdi
0x5154: call 0x1550
0x5159: mov rdi,rbx
0x515c: lea rsi,[rax+0x1]
0x5160: pop rbx
0x5161: jmp 0x5120
0x51a0: call 0x14a0
0x51a5: nop word ptr cs:[rax+rax*0x1]
0x51af: nop 
0x51e9: lea rsi,[rip+0x18f0]
0x51f0: mov edx,0x5
0x51f5: xor edi,edi
0x51f7: call 0x1530
0x51fc: xor esi,esi
0x51fe: mov rdx,rax
0x5201: xor edi,edi
0x5203: xor eax,eax
0x5205: call 0x16e0
0x520a: mov rcx,r13
0x520d: mov rdx,rbp
0x5210: mov esi,0x8
0x5215: mov edi,0x1
0x521a: call 0x4570
0x521f: mov rcx,r12
0x5222: mov rdx,rbx
0x5225: mov esi,0x8
0x522a: xor edi,edi
0x522c: mov rbp,rax
0x522f: call 0x4570
0x5234: lea rsi,[rip+0x18d5]
0x523b: mov rbx,rax
0x523e: mov edx,0x5
0x5243: xor edi,edi
0x5245: call 0x1530
0x524a: mov r8,rbp
0x524d: mov rcx,rbx
0x5250: mov edi,dword ptr [rip+0x203dd2]
0x5256: pop rbx
0x5257: pop rbp
0x5258: pop r12
0x525a: pop r13
0x525c: pop r14
0x525e: mov rdx,rax
0x5261: xor esi,esi
0x5263: xor eax,eax
0x5265: jmp 0x16e0
0x52c0: push r14
0x52c2: push r13
0x52c4: mov r14,rcx
0x52c7: push r12
0x52c9: push rbp
0x52ca: mov r12,rdx
0x52cd: push rbx
0x52ce: mov rbp,rdi
0x52d1: mov rbx,rsi
0x52d4: call 0x5970
0x52d9: mov r13d,eax
0x52dc: call 0x14b0
0x52e1: mov edi,dword ptr [rax]
0x52e3: test edi,edi
0x52e5: jz 0x52fa
0x52e7: lea rdx,[rbx-0x1]
0x52eb: lea r8,[r14-0x1]
0x52ef: mov rcx,r12
0x52f2: mov rsi,rbp
0x52f5: call 0x51b0
0x52fa: pop rbx
0x52fb: mov eax,r13d
0x52fe: pop rbp
0x52ff: pop r12
0x5301: pop r13
0x5303: pop r14
0x5305: ret 
0x53e1: cmp esi,0x406
0x53e7: jnz 0x5430
0x53e9: mov rax,qword ptr [rsp+0x10]
0x53ee: cmp dword ptr [rip+0x203e63],0x0
0x53f5: mov dword ptr [rsp],0x18
0x53fc: mov r12d,dword ptr [rax+0x10]
0x5400: mov edx,r12d
0x5403: js 0x5533
0x5409: xor eax,eax
0x540b: mov esi,0x406
0x5410: call 0x14f0
0x5415: test eax,eax
0x5417: mov ebx,eax
0x5419: js 0x55a8
0x541f: mov dword ptr [rip+0x203e2f],0x1
0x5429: jmp 0x5470
0x5430: cmp esi,0xb
0x5433: jz 0x5460
0x5435: jg 0x5490
0x5437: cmp esi,0x4
0x543a: jz 0x5510
0x5440: jg 0x5500
0x5446: cmp esi,0x2
0x5449: jz 0x5510
0x544f: jg 0x5460
0x5451: cmp esi,0x1
0x5454: jnz 0x54b8
0x5456: nop word ptr cs:[rax+rax*0x1]
0x5460: mov edi,ebp
0x5462: xor eax,eax
0x5464: call 0x14f0
0x5469: mov ebx,eax
0x546b: nop dword ptr [rax+rax*0x1]
0x5490: cmp esi,0x407
0x5496: jg 0x54e0
0x5498: cmp esi,0x406
0x549e: jge 0x5510
0x54a0: cmp esi,0x401
0x54a6: jz 0x5460
0x54a8: cmp esi,0x402
0x54ae: jz 0x5510
0x54b0: cmp esi,0x400
0x54b6: jz 0x5510
0x54b8: mov eax,dword ptr [rsp]
0x54bb: cmp eax,0x2f
0x54be: ja 0x55fa
0x54c4: add rax,qword ptr [rsp+0x10]
0x54c9: mov rdx,qword ptr [rax]
0x54cc: mov edi,ebp
0x54ce: xor eax,eax
0x54d0: call 0x14f0
0x54d5: mov ebx,eax
0x54d7: jmp 0x5470
0x54e0: cmp esi,0x409
0x54e6: jz 0x5510
0x54e8: jl 0x5460
0x54ee: cmp esi,0x40a
0x54f4: jnz 0x54b8
0x54f6: jmp 0x5460
0x5500: cmp esi,0x9
0x5503: jz 0x5460
0x5509: jg 0x5510
0x550b: cmp esi,0x8
0x550e: jnz 0x54b8
0x5510: mov eax,dword ptr [rsp]
0x5513: cmp eax,0x2f
0x5516: ja 0x5604
0x551c: add rax,qword ptr [rsp+0x10]
0x5521: mov edx,dword ptr [rax]
0x5523: mov edi,ebp
0x5525: xor eax,eax
0x5527: call 0x14f0
0x552c: mov ebx,eax
0x552e: jmp 0x5470
0x5533: xor esi,esi
0x5535: xor eax,eax
0x5537: call 0x14f0
0x553c: test eax,eax
0x553e: mov ebx,eax
0x5540: js 0x5470
0x5546: cmp dword ptr [rip+0x203d0b],-0x1
0x554d: jnz 0x5470
0x5553: xor eax,eax
0x5555: mov esi,0x1
0x555a: mov edi,ebx
0x555c: call 0x14f0
0x5561: test eax,eax
0x5563: js 0x5581
0x5565: or eax,0x1
0x5568: mov esi,0x2
0x556d: mov edi,ebx
0x556f: mov edx,eax
0x5571: xor eax,eax
0x5573: call 0x14f0
0x5578: cmp eax,-0x1
0x557b: jnz 0x5470
0x5581: call 0x14b0
0x5586: mov r12d,dword ptr [rax]
0x5589: mov rbp,rax
0x558c: mov edi,ebx
0x558e: call 0x15c0
0x5593: mov ebx,0xffffffff
0x5598: mov dword ptr [rbp],r12d
0x559c: jmp 0x5470
0x55a8: call 0x14b0
0x55ad: cmp dword ptr [rax],0x16
0x55b0: jnz 0x541f
0x55b6: xor esi,esi
0x55b8: xor eax,eax
0x55ba: mov edx,r12d
0x55bd: mov edi,ebp
0x55bf: call 0x14f0
0x55c4: test eax,eax
0x55c6: mov ebx,eax
0x55c8: js 0x5470
0x55ce: mov dword ptr [rip+0x203c80],0xffffffff
0x55d8: jmp 0x5553
0x55fa: mov rax,qword ptr [rsp+0x8]
0x55ff: jmp 0x54c9
0x5604: mov rax,qword ptr [rsp+0x8]
0x5609: jmp 0x5521
0x5733: nop word ptr cs:[rax+rax*0x1]
0x573d: nop dword ptr [rax]
0x5740: push r12
0x5742: push rbp
0x5743: mov rbp,rdi
0x5746: push rbx
0x5747: call 0x14e0
0x574c: mov ebx,dword ptr [rbp]
0x574f: mov rdi,rbp
0x5752: mov r12,rax
0x5755: call 0x5310
0x575a: and ebx,0x20
0x575d: test ebx,ebx
0x575f: jnz 0x5778
0x5761: test eax,eax
0x5763: jz 0x576f
0x5765: test r12,r12
0x5768: mov eax,0xffffffff
0x576d: jz 0x57a8
0x576f: pop rbx
0x5770: pop rbp
0x5771: pop r12
0x5773: ret 
0x5778: test eax,eax
0x577a: jnz 0x5798
0x577c: call 0x14b0
0x5781: mov dword ptr [rax],0x0
0x5787: mov eax,0xffffffff
0x578c: pop rbx
0x578d: pop rbp
0x578e: pop r12
0x5790: ret 
0x5798: pop rbx
0x5799: mov eax,0xffffffff
0x579e: pop rbp
0x579f: pop r12
0x57a1: ret 
0x57a8: call 0x14b0
0x57ad: cmp dword ptr [rax],0x9
0x57b0: pop rbx
0x57b1: pop rbp
0x57b2: pop r12
0x57b4: setnz al
0x57b7: movzx eax,al
0x57ba: neg eax
0x57bc: ret 
0x5970: push r12
0x5972: push rbp
0x5973: mov r12,rdx
0x5976: push rbx
0x5977: mov rbp,rdi
0x597a: mov rbx,rsi
0x597d: sub rsp,0x10
0x5981: cmp rsi,rcx
0x5984: jnz 0x599f
0x5986: mov rdx,rsi
0x5989: mov rsi,r12
0x598c: mov qword ptr [rsp+0x8],rcx
0x5991: call 0x15e0
0x5996: test eax,eax
0x5998: mov rcx,qword ptr [rsp+0x8]
0x599d: jz 0x59b8
0x599f: add rsp,0x10
0x59a3: mov rdx,r12
0x59a6: mov rsi,rbx
0x59a9: mov rdi,rbp
0x59ac: pop rbx
0x59ad: pop rbp
0x59ae: pop r12
0x59b0: jmp 0x5800
0x59b8: call 0x14b0
0x59bd: mov dword ptr [rax],0x0
0x59c3: add rsp,0x10
0x59c7: xor eax,eax
0x59c9: pop rbx
0x59ca: pop rbp
0x59cb: pop r12
0x59cd: ret 
0x5a40: ret 
0x5a60: sub rsp,0x8
0x5a64: add rsp,0x8
0x5a68: ret 
