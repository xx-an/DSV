0x1550: sub rsp,0x8
0x1554: mov rax,qword ptr [rip+0x209a85]
0x155b: test rax,rax
0x155e: jz 0x1562
0x1560: call rax
0x1562: add rsp,0x8
0x1566: ret 
0x1570: push qword ptr [rip+0x20989a]
0x1576: jmp qword ptr [rip+0x20989c]
0x1586: push 0x0
0x158b: jmp 0x1570
0x1596: push 0x1
0x159b: jmp 0x1570
0x15a6: push 0x2
0x15ab: jmp 0x1570
0x15b6: push 0x3
0x15bb: jmp 0x1570
0x15c6: push 0x4
0x15cb: jmp 0x1570
0x15d0: jmp qword ptr [rip+0x209872]
0x15d6: push 0x5
0x15db: jmp 0x1570
0x15e6: push 0x6
0x15eb: jmp 0x1570
0x15f0: jmp qword ptr [rip+0x209862]
0x15f6: push 0x7
0x15fb: jmp 0x1570
0x1606: push 0x8
0x160b: jmp 0x1570
0x1616: push 0x9
0x161b: jmp 0x1570
0x1620: jmp qword ptr [rip+0x20984a]
0x1626: push 0xa
0x162b: jmp 0x1570
0x1636: push 0xb
0x163b: jmp 0x1570
0x1646: push 0xc
0x164b: jmp 0x1570
0x1656: push 0xd
0x165b: jmp 0x1570
0x1666: push 0xe
0x166b: jmp 0x1570
0x1676: push 0xf
0x167b: jmp 0x1570
0x1686: push 0x10
0x168b: jmp 0x1570
0x1696: push 0x11
0x169b: jmp 0x1570
0x16a6: push 0x12
0x16ab: jmp 0x1570
0x16b6: push 0x13
0x16bb: jmp 0x1570
0x16c6: push 0x14
0x16cb: jmp 0x1570
0x16d0: jmp qword ptr [rip+0x2097f2]
0x16d6: push 0x15
0x16db: jmp 0x1570
0x16e6: push 0x16
0x16eb: jmp 0x1570
0x16f6: push 0x17
0x16fb: jmp 0x1570
0x1706: push 0x18
0x170b: jmp 0x1570
0x1716: push 0x19
0x171b: jmp 0x1570
0x1726: push 0x1a
0x172b: jmp 0x1570
0x1730: jmp qword ptr [rip+0x2097c2]
0x1736: push 0x1b
0x173b: jmp 0x1570
0x1746: push 0x1c
0x174b: jmp 0x1570
0x1756: push 0x1d
0x175b: jmp 0x1570
0x1766: push 0x1e
0x176b: jmp 0x1570
0x1770: jmp qword ptr [rip+0x2097a2]
0x1776: push 0x1f
0x177b: jmp 0x1570
0x1786: push 0x20
0x178b: jmp 0x1570
0x1796: push 0x21
0x179b: jmp 0x1570
0x17a0: jmp qword ptr [rip+0x20978a]
0x17a6: push 0x22
0x17ab: jmp 0x1570
0x17b6: push 0x23
0x17bb: jmp 0x1570
0x17c0: jmp qword ptr [rip+0x20977a]
0x17c6: push 0x24
0x17cb: jmp 0x1570
0x17d0: jmp qword ptr [rip+0x209772]
0x17d6: push 0x25
0x17db: jmp 0x1570
0x17e6: push 0x26
0x17eb: jmp 0x1570
0x17f6: push 0x27
0x17fb: jmp 0x1570
0x1806: push 0x28
0x180b: jmp 0x1570
0x1810: jmp qword ptr [rip+0x209752]
0x1816: push 0x29
0x181b: jmp 0x1570
0x1820: jmp qword ptr [rip+0x20974a]
0x1826: push 0x2a
0x182b: jmp 0x1570
0x1836: push 0x2b
0x183b: jmp 0x1570
0x1846: push 0x2c
0x184b: jmp 0x1570
0x1850: jmp qword ptr [rip+0x209732]
0x1856: push 0x2d
0x185b: jmp 0x1570
0x1866: push 0x2e
0x186b: jmp 0x1570
0x1876: push 0x2f
0x187b: jmp 0x1570
0x1886: push 0x30
0x188b: jmp 0x1570
0x1896: push 0x31
0x189b: jmp 0x1570
0x18a6: push 0x32
0x18ab: jmp 0x1570
0x18b6: push 0x33
0x18bb: jmp 0x1570
0x18c6: push 0x34
0x18cb: jmp 0x1570
0x18d6: push 0x35
0x18db: jmp 0x1570
0x18e0: jmp qword ptr [rip+0x20970a]
0x206a: mov ecx,dword ptr [rsp]
0x206d: lea rax,[rip+0x67a2]
0x2074: cmp ecx,0x1
0x2077: cmovnz rax,qword ptr [rsp + 0x20]
0x207d: mov rdi,rax
0x2080: lea eax,[rcx + r15*0x1 - 0x1]
0x2085: mov rsi,qword ptr [r12 + rax*0x8]
0x2089: call 0x26d0
0x208e: test al,al
0x2090: jnz 0x1e05
0x2096: mov r15d,dword ptr [rip+0x208ff3]
0x209d: jmp 0x1b26
0x230b: lea rdi,[rsp + 0x78]
0x2310: lea rsi,[rip+0x5df0]
0x2317: push qword ptr [rsp + 0x38]
0x231b: push qword ptr [rsp + 0x38]
0x231f: xor eax,eax
0x2321: call 0x5a00
0x2326: pop r10
0x2328: test eax,eax
0x232a: pop r11
0x232c: mov r10,qword ptr [rsp]
0x2330: jns 0x23dd
0x2336: jmp 0x233a
0x2338: fstp st0
0x237d: call 0x1670
0x2382: fstp tword ptr [rsp + 0x10]
0x2386: mov qword ptr [rsp],r10
0x238a: lea rdi,[rsp + 0x70]
0x238f: lea rsi,[rip+0x5d71]
0x2396: push qword ptr [rsp + 0x48]
0x239a: push qword ptr [rsp + 0x48]
0x239e: call 0x5a00
0x23a3: pop rbx
0x23a4: pop r13
0x23a6: test eax,eax
0x23a8: mov r10,qword ptr [rsp]
0x23ac: fld tword ptr [rsp + 0x10]
0x23b0: js 0x2338
0x23b2: mov qword ptr [rsp],r10
0x23b6: fld tword ptr [rsp + 0x30]
0x23ba: fmul st1
0x23bc: fucomip st0,st1
0x23be: fstp st0
0x23c0: jp 0x23c8
0x23c2: jz 0x230b
0x23c8: lea rdi,[rip+0x5bcc]
0x23cf: call 0x58e0
0x23d4: mov r10,qword ptr [rsp]
0x23d8: mov qword ptr [rsp + 0x78],rax
0x23dd: mov rdi,qword ptr [rsp + 0x70]
0x23e2: cmp byte ptr [rdi],0x2d
0x23e5: jz 0x240b
0x23e7: mov rsi,qword ptr [rsp + 0x78]
0x23ec: cmp byte ptr [rsi],0x2d
0x23ef: jz 0x240b
0x23f1: mov qword ptr [rsp],r10
0x23f5: call 0x26d0
0x23fa: test al,al
0x23fc: jnz 0x1e05
0x2402: mov rdi,qword ptr [rsp + 0x70]
0x2407: mov r10,qword ptr [rsp]
0x240b: mov qword ptr [rsp],r10
0x240f: call 0x1590
0x2414: mov rdi,qword ptr [rsp + 0x78]
0x2419: call 0x1590
0x241e: xor eax,eax
0x2420: xor ecx,ecx
0x2422: xor r9d,r9d
0x2425: mov r10,qword ptr [rsp]
0x2429: jmp 0x213c
0x244f: jmp 0x2373
0x2493: mov edi,0x1
0x2498: call 0x2aa0
0x2538: nop dword ptr [rax + rax*0x1]
0x256a: hlt 
0x2570: lea rdi,[rip+0x208b09]
0x2577: push rbp
0x2578: lea rax,[rip+0x208b01]
0x257f: cmp rax,rdi
0x2582: mov rbp,rsp
0x2585: jz 0x25a0
0x2587: mov rax,qword ptr [rip+0x208a42]
0x258e: test rax,rax
0x2591: jz 0x25a0
0x2593: pop rbp
0x2594: jmp rax
0x25a0: pop rbp
0x25a1: ret 
0x25b0: lea rdi,[rip+0x208ac9]
0x25b7: lea rsi,[rip+0x208ac2]
0x25be: push rbp
0x25bf: sub rsi,rdi
0x25c2: mov rbp,rsp
0x25c5: sar rsi,0x3
0x25c9: mov rax,rsi
0x25cc: shr rax,0x3f
0x25d0: add rsi,rax
0x25d3: sar rsi,1
0x25d6: jz 0x25f0
0x25d8: mov rax,qword ptr [rip+0x208a09]
0x25df: test rax,rax
0x25e2: jz 0x25f0
0x25e4: pop rbp
0x25e5: jmp rax
0x25f0: pop rbp
0x25f1: ret 
0x2600: cmp byte ptr [rip+0x208ac1],0x0
0x2607: jnz 0x2638
0x2609: cmp qword ptr [rip+0x2089df],0x0
0x2611: push rbp
0x2612: mov rbp,rsp
0x2615: jz 0x2623
0x2617: mov rdi,qword ptr [rip+0x2089ea]
0x261e: call 0x18e0
0x2623: call 0x2570
0x2628: mov byte ptr [rip+0x208a99],0x1
0x262f: pop rbp
0x2630: ret 
0x2638: ret 
0x2640: push rbp
0x2641: mov rbp,rsp
0x2644: pop rbp
0x2645: jmp 0x25b0
0x26c9: nop dword ptr [rax]
0x26d0: push r15
0x26d2: push r14
0x26d4: mov r9,rdi
0x26d7: push r13
0x26d9: push r12
0x26db: lea rdi,[rip+0x58b9]
0x26e2: push rbp
0x26e3: push rbx
0x26e4: mov ecx,0x4
0x26e9: mov r8,rsi
0x26ec: mov r13,r9
0x26ef: sub rsp,0x48
0x26f3: cmpsb.repe rdi,rsi
0x26f5: seta al
0x26f8: sbb al,0x0
0x26fa: cmp byte ptr [r9],0x30
0x26fe: movsx eax,al
0x2701: mov dword ptr [rsp + 0x8],eax
0x2705: jz 0x2713
0x2707: jmp 0x2731
0x2710: mov r13,rdx
0x2713: movzx eax,byte ptr [r13 + 0x1]
0x2718: lea rdx,[r13 + 0x1]
0x271c: cmp al,0x30
0x271e: jz 0x2710
0x2720: test al,al
0x2722: jnz 0x2902
0x2728: cmp r9,rdx
0x272b: jz 0x2902
0x2731: cmp byte ptr [r8],0x30
0x2735: mov rbp,r8
0x2738: jz 0x2743
0x273a: jmp 0x2760
0x2740: mov rbp,rdx
0x2743: movzx eax,byte ptr [rbp + 0x1]
0x2747: lea rdx,[rbp + 0x1]
0x274b: cmp al,0x30
0x274d: jz 0x2740
0x274f: cmp r8,rdx
0x2752: jz 0x28fa
0x2758: test al,al
0x275a: jnz 0x28fa
0x2760: mov rdi,r13
0x2763: mov ebx,0x1f
0x2768: call 0x1660
0x276d: mov edx,dword ptr [rsp + 0x8]
0x2771: lea r14,[rax + 0x1]
0x2775: mov r15,rax
0x2778: mov qword ptr [rsp],rax
0x277c: cmp r14,0x1f
0x2780: cmovnc rbx,r14
0x2784: test edx,edx
0x2786: jz 0x2a2e
0x278c: xor eax,eax
0x278e: or rcx,-0x1
0x2792: mov rdi,rbp
0x2795: scasb.repne rdi
0x2797: mov rsi,rcx
0x279a: not rsi
0x279d: lea r12,[rsi - 0x1]
0x27a1: mov qword ptr [rsp + 0x20],rsi
0x27a6: cmp rbx,r12
0x27a9: cmovc rbx,r12
0x27ad: lea rdi,[rbx + 0x1]
0x27b1: mov qword ptr [rsp + 0x18],rdi
0x27b6: call 0x56b0
0x27bb: mov rsi,rbx
0x27be: sub rsi,qword ptr [rsp]
0x27c2: mov rdx,r14
0x27c5: mov qword ptr [rsp + 0x10],rax
0x27ca: mov rdi,rsi
0x27cd: mov rsi,r13
0x27d0: add rdi,rax
0x27d3: call 0x1760
0x27d8: mov rdi,qword ptr [rsp + 0x18]
0x27dd: mov r13,rax
0x27e0: mov r14,rax
0x27e3: call 0x56b0
0x27e8: mov rcx,qword ptr [rsp + 0x20]
0x27ed: mov rdi,rbx
0x27f0: mov rsi,rbp
0x27f3: sub rdi,r12
0x27f6: mov qword ptr [rsp + 0x38],rax
0x27fb: add rdi,rax
0x27fe: mov rdx,rcx
0x2801: call 0x1760
0x2806: cmp qword ptr [rsp],r12
0x280a: mov qword ptr [rsp + 0x30],rax
0x280f: jnc 0x2a76
0x2815: mov rdi,qword ptr [rsp + 0x18]
0x281a: mov eax,0x2000
0x281f: add rdi,rdi
0x2822: cmp rdi,0x2000
0x2829: cmovnc rax,rdi
0x282d: mov rdi,rax
0x2830: mov r13,rax
0x2833: mov qword ptr [rsp + 0x28],rax
0x2838: call 0x56b0
0x283d: mov rdx,qword ptr [rsp]
0x2841: mov rbp,rax
0x2844: mov rsi,r14
0x2847: mov rdi,rbp
0x284a: lea r13,[rbp + r13*0x1]
0x284f: call 0x1810
0x2854: mov rdx,rax
0x2857: mov eax,dword ptr [rsp + 0x8]
0x285b: test eax,eax
0x285d: setz byte ptr [rsp]
0x2861: nop dword ptr [rax]
0x2868: cmp r15,r12
0x286b: jc 0x2877
0x286d: cmp byte ptr [rsp],0x0
0x2871: jz 0x29b8
0x2877: mov rax,qword ptr [rip+0x208872]
0x287e: lea rcx,[rdx + 0x1]
0x2882: movzx eax,byte ptr [rax]
0x2885: mov byte ptr [rdx],al
0x2887: lea rax,[r14 + r15*0x1 - 0x1]
0x288c: jmp 0x289d
0x2890: sub rax,0x1
0x2894: mov byte ptr [rax + 0x1],0x30
0x2898: cmp rax,r14
0x289b: jc 0x2910
0x289d: movzx edx,byte ptr [rax]
0x28a0: cmp dl,0x38
0x28a3: jg 0x2890
0x28a5: add edx,0x1
0x28a8: cmp rbx,r15
0x28ab: mov byte ptr [rax],dl
0x28ad: jz 0x2922
0x28af: mov rdx,r15
0x28b2: mov rsi,r14
0x28b5: mov rdi,rcx
0x28b8: call 0x1810
0x28bd: mov rdx,rax
0x28c0: mov rax,r15
0x28c3: not rax
0x28c6: add rax,r13
0x28c9: cmp rdx,rax
0x28cc: jbe 0x2868
0x28ce: mov rcx,qword ptr [rip+0x2087b3]
0x28d5: mov rsi,rdx
0x28d8: mov rdi,rbp
0x28db: sub rsi,rbp
0x28de: mov edx,0x1
0x28e3: call 0x17d0
0x28e8: cmp rax,0x1
0x28ec: jnz 0x2a96
0x28f2: mov rdx,rbp
0x28f5: jmp 0x2868
0x28fa: mov rbp,rdx
0x28fd: jmp 0x2760
0x2902: mov r13,rdx
0x2905: jmp 0x2731
0x2910: add r15,0x1
0x2914: mov byte ptr [r14 - 0x1],0x31
0x2919: sub r14,0x1
0x291d: cmp rbx,r15
0x2920: jnz 0x28af
0x2922: lea r11,[rbx + rbx*0x1]
0x2926: mov rdi,qword ptr [rsp + 0x10]
0x292b: mov qword ptr [rsp + 0x20],rcx
0x2930: lea r10,[r11 + 0x1]
0x2934: mov qword ptr [rsp + 0x18],r11
0x2939: mov rsi,r10
0x293c: mov qword ptr [rsp + 0x8],r10
0x2941: call 0x5710
0x2946: lea rdx,[rbx + 0x1]
0x294a: lea rdi,[rax + rbx*0x1]
0x294e: mov rsi,rax
0x2951: mov qword ptr [rsp + 0x10],rax
0x2956: call 0x1820
0x295b: mov r10,qword ptr [rsp + 0x8]
0x2960: mov r11,qword ptr [rsp + 0x18]
0x2965: mov r14,rax
0x2968: mov rcx,qword ptr [rsp + 0x20]
0x296d: add r10,r10
0x2970: cmp r10,qword ptr [rsp + 0x28]
0x2975: mov rbx,r11
0x2978: jbe 0x28af
0x297e: sub rcx,rbp
0x2981: mov rsi,r10
0x2984: mov rdi,rbp
0x2987: mov qword ptr [rsp + 0x8],rcx
0x298c: mov qword ptr [rsp + 0x18],r10
0x2991: call 0x5710
0x2996: mov r10,qword ptr [rsp + 0x18]
0x299b: mov rcx,qword ptr [rsp + 0x8]
0x29a0: mov rbp,rax
0x29a3: lea r13,[rax + r10*0x1]
0x29a7: add rcx,rax
0x29aa: mov qword ptr [rsp + 0x28],r10
0x29af: jmp 0x28af
0x29b8: cmp r15,r12
0x29bb: ja 0x29dc
0x29bd: mov rsi,qword ptr [rsp + 0x30]
0x29c2: mov rdi,r14
0x29c5: mov qword ptr [rsp + 0x8],rdx
0x29ca: call 0x1740
0x29cf: test eax,eax
0x29d1: mov rdx,qword ptr [rsp + 0x8]
0x29d6: js 0x2877
0x29dc: mov byte ptr [rdx],0xa
0x29df: lea rsi,[rdx + 0x1]
0x29e3: mov rcx,qword ptr [rip+0x20869e]
0x29ea: mov edx,0x1
0x29ef: mov rdi,rbp
0x29f2: sub rsi,rbp
0x29f5: call 0x17d0
0x29fa: sub rax,0x1
0x29fe: jnz 0x2a96
0x2a04: mov ebx,0x1
0x2a09: mov rdi,qword ptr [rsp + 0x10]
0x2a0e: call 0x1590
0x2a13: mov rdi,qword ptr [rsp + 0x38]
0x2a18: call 0x1590
0x2a1d: add rsp,0x48
0x2a21: mov eax,ebx
0x2a23: pop rbx
0x2a24: pop rbp
0x2a25: pop r12
0x2a27: pop r13
0x2a29: pop r14
0x2a2b: pop r15
0x2a2d: ret 
0x2a2e: lea rax,[rbx + 0x1]
0x2a32: xor r12d,r12d
0x2a35: mov rdi,rax
0x2a38: mov qword ptr [rsp + 0x18],rax
0x2a3d: call 0x56b0
0x2a42: mov rdi,rbx
0x2a45: sub rdi,qword ptr [rsp]
0x2a49: mov rdx,r14
0x2a4c: mov rsi,r13
0x2a4f: mov qword ptr [rsp + 0x10],rax
0x2a54: add rdi,rax
0x2a57: call 0x1760
0x2a5c: mov qword ptr [rsp + 0x38],0x0
0x2a65: mov r14,rax
0x2a68: mov qword ptr [rsp + 0x30],0x0
0x2a71: jmp 0x2815
0x2a76: jbe 0x2a7c
0x2a78: xor ebx,ebx
0x2a7a: jmp 0x2a09
0x2a7c: mov rsi,rax
0x2a7f: mov rdi,r13
0x2a82: call 0x1740
0x2a87: test eax,eax
0x2a89: jle 0x2815
0x2a8f: xor ebx,ebx
0x2a91: jmp 0x2a09
0x2a96: call 0x2690
0x2a9b: nop dword ptr [rax + rax*0x1]
0x3190: mov edi,0x1
0x3195: call 0x2aa0
0x31c9: mov edi,0x1
0x31ce: call 0x2aa0
0x31d8: nop dword ptr [rax + rax*0x1]
0x3280: fstp st0
0x3282: call 0x1670
0x3287: nop word ptr [rax + rax*0x1]
0x3290: mov qword ptr [rip+0x207e71],rdi
0x3297: ret 
0x32a0: mov byte ptr [rip+0x207e59],dil
0x32a7: ret 
0x32b0: push rbp
0x32b1: push rbx
0x32b2: sub rsp,0x8
0x32b6: mov rdi,qword ptr [rip+0x207dcb]
0x32bd: call 0x5c90
0x32c2: test eax,eax
0x32c4: jz 0x32dc
0x32c6: call 0x15b0
0x32cb: cmp byte ptr [rip+0x207e2e],0x0
0x32d2: mov rbx,rax
0x32d5: jz 0x32f3
0x32d7: cmp dword ptr [rax],0x20
0x32da: jnz 0x32f3
0x32dc: mov rdi,qword ptr [rip+0x207ddd]
0x32e3: call 0x5c90
0x32e8: test eax,eax
0x32ea: jnz 0x3332
0x32ec: add rsp,0x8
0x32f0: pop rbx
0x32f1: pop rbp
0x32f2: ret 
0x32f3: lea rsi,[rip+0x4c95]
0x32fa: xor edi,edi
0x32fc: mov edx,0x5
0x3301: call 0x1640
0x3306: mov rdi,qword ptr [rip+0x207dfb]
0x330d: mov rbp,rax
0x3310: test rdi,rdi
0x3313: jz 0x333d
0x3315: call 0x4e70
0x331a: mov esi,dword ptr [rbx]
0x331c: lea rdx,[rip+0x54f5]
0x3323: mov rcx,rax
0x3326: mov r8,rbp
0x3329: xor edi,edi
0x332b: xor eax,eax
0x332d: call 0x1840
0x3332: mov edi,dword ptr [rip+0x207ce0]
0x3338: call 0x15d0
0x333d: mov esi,dword ptr [rbx]
0x333f: lea rdx,[rip+0x54d6]
0x3346: mov rcx,rax
0x3349: xor edi,edi
0x334b: xor eax,eax
0x334d: call 0x1840
0x3352: jmp 0x3332
0x33ff: nop 
0x46e3: call 0x1670
0x4724: nop 
0x4726: nop word ptr cs:[rax + rax*0x1]
0x48db: nop dword ptr [rax + rax*0x1]
0x48e0: push r12
0x48e2: push rbp
0x48e3: push rbx
0x48e4: mov rbx,rdi
0x48e7: call 0x15b0
0x48ec: mov r12d,dword ptr [rax]
0x48ef: mov rbp,rax
0x48f2: lea rax,[rip+0x206927]
0x48f9: test rbx,rbx
0x48fc: mov esi,0x38
0x4901: cmovz rbx,rax
0x4905: mov rdi,rbx
0x4908: call 0x58b0
0x490d: mov dword ptr [rbp],r12d
0x4911: pop rbx
0x4912: pop rbp
0x4913: pop r12
0x4915: ret 
0x4920: lea rax,[rip+0x2068f9]
0x4927: test rdi,rdi
0x492a: cmovz rdi,rax
0x492e: mov eax,dword ptr [rdi]
0x4930: ret 
0x4940: lea rax,[rip+0x2068d9]
0x4947: test rdi,rdi
0x494a: cmovz rdi,rax
0x494e: mov dword ptr [rdi],esi
0x4950: ret 
0x4960: lea rax,[rip+0x2068b9]
0x4967: test rdi,rdi
0x496a: mov ecx,esi
0x496c: cmovz rdi,rax
0x4970: mov eax,esi
0x4972: and ecx,0x1f
0x4975: shr al,0x5
0x4978: movzx eax,al
0x497b: lea rdi,[rdi + rax*0x4 + 0x8]
0x4980: mov esi,dword ptr [rdi]
0x4982: mov eax,esi
0x4984: shr eax,cl
0x4986: xor edx,eax
0x4988: and eax,0x1
0x498b: and edx,0x1
0x498e: shl edx,cl
0x4990: xor edx,esi
0x4992: mov dword ptr [rdi],edx
0x4994: ret 
0x49a0: lea rax,[rip+0x206879]
0x49a7: test rdi,rdi
0x49aa: cmovz rdi,rax
0x49ae: mov eax,dword ptr [rdi + 0x4]
0x49b1: mov dword ptr [rdi + 0x4],esi
0x49b4: ret 
0x49c0: lea rax,[rip+0x206859]
0x49c7: test rdi,rdi
0x49ca: cmovz rdi,rax
0x49ce: test rsi,rsi
0x49d1: mov dword ptr [rdi],0xa
0x49d7: jz 0x49e7
0x49d9: test rdx,rdx
0x49dc: jz 0x49e7
0x49de: mov qword ptr [rdi + 0x28],rsi
0x49e2: mov qword ptr [rdi + 0x30],rdx
0x49e6: ret 
0x49e7: sub rsp,0x8
0x49eb: call 0x15a0
0x49f0: push r15
0x49f2: push r14
0x49f4: lea rax,[rip+0x206825]
0x49fb: push r13
0x49fd: push r12
0x49ff: mov r13,rdi
0x4a02: push rbp
0x4a03: push rbx
0x4a04: mov rbx,r8
0x4a07: mov r14,rsi
0x4a0a: mov r15,rdx
0x4a0d: sub rsp,0x18
0x4a11: test r8,r8
0x4a14: cmovz rbx,rax
0x4a18: mov qword ptr [rsp + 0x8],rcx
0x4a1d: call 0x15b0
0x4a22: mov r12d,dword ptr [rax]
0x4a25: mov rbp,rax
0x4a28: lea rax,[rbx + 0x8]
0x4a2c: sub rsp,0x8
0x4a30: mov r9d,dword ptr [rbx + 0x4]
0x4a34: push qword ptr [rbx + 0x30]
0x4a37: mov r8d,dword ptr [rbx]
0x4a3a: push qword ptr [rbx + 0x28]
0x4a3d: mov rdx,r15
0x4a40: push rax
0x4a41: mov rcx,qword ptr [rsp + 0x28]
0x4a46: mov rsi,r14
0x4a49: mov rdi,r13
0x4a4c: call 0x34f0
0x4a51: mov dword ptr [rbp],r12d
0x4a55: add rsp,0x38
0x4a59: pop rbx
0x4a5a: pop rbp
0x4a5b: pop r12
0x4a5d: pop r13
0x4a5f: pop r14
0x4a61: pop r15
0x4a63: ret 
0x4a70: push r15
0x4a72: push r14
0x4a74: lea rax,[rip+0x2067a5]
0x4a7b: push r13
0x4a7d: push r12
0x4a7f: mov r12,rdx
0x4a82: push rbp
0x4a83: push rbx
0x4a84: mov rbx,rcx
0x4a87: mov r14,rdi
0x4a8a: mov r15,rsi
0x4a8d: sub rsp,0x38
0x4a91: test rcx,rcx
0x4a94: cmovz rbx,rax
0x4a98: xor ebp,ebp
0x4a9a: call 0x15b0
0x4a9f: test r12,r12
0x4aa2: mov r13,rax
0x4aa5: mov eax,dword ptr [rax]
0x4aa7: setz bpl
0x4aab: or ebp,dword ptr [rbx + 0x4]
0x4aae: lea r10,[rbx + 0x8]
0x4ab2: sub rsp,0x8
0x4ab6: mov r8d,dword ptr [rbx]
0x4ab9: mov rcx,r15
0x4abc: mov dword ptr [rsp + 0x14],eax
0x4ac0: push qword ptr [rbx + 0x30]
0x4ac3: mov rdx,r14
0x4ac6: push qword ptr [rbx + 0x28]
0x4ac9: push r10
0x4acb: xor esi,esi
0x4acd: mov r9d,ebp
0x4ad0: xor edi,edi
0x4ad2: mov qword ptr [rsp + 0x40],r10
0x4ad7: call 0x34f0
0x4adc: lea rsi,[rax + 0x1]
0x4ae0: mov qword ptr [rsp + 0x48],rax
0x4ae5: add rsp,0x20
0x4ae9: mov rdi,rsi
0x4aec: mov qword ptr [rsp + 0x18],rsi
0x4af1: call 0x56b0
0x4af6: mov qword ptr [rsp + 0x10],rax
0x4afb: sub rsp,0x8
0x4aff: push qword ptr [rbx + 0x30]
0x4b02: push qword ptr [rbx + 0x28]
0x4b05: mov r10,qword ptr [rsp + 0x38]
0x4b0a: mov r9d,ebp
0x4b0d: mov r8d,dword ptr [rbx]
0x4b10: mov rcx,r15
0x4b13: mov rdx,r14
0x4b16: mov rdi,rax
0x4b19: push r10
0x4b1b: mov rsi,qword ptr [rsp + 0x38]
0x4b20: call 0x34f0
0x4b25: mov eax,dword ptr [rsp + 0x2c]
0x4b29: add rsp,0x20
0x4b2d: test r12,r12
0x4b30: mov dword ptr [r13],eax
0x4b34: jz 0x4b3f
0x4b36: mov r11,qword ptr [rsp + 0x28]
0x4b3b: mov qword ptr [r12],r11
0x4b3f: mov rax,qword ptr [rsp + 0x10]
0x4b44: add rsp,0x38
0x4b48: pop rbx
0x4b49: pop rbp
0x4b4a: pop r12
0x4b4c: pop r13
0x4b4e: pop r14
0x4b50: pop r15
0x4b52: ret 
0x4b60: mov rcx,rdx
0x4b63: xor edx,edx
0x4b65: jmp 0x4a70
0x4b70: mov eax,dword ptr [rip+0x2064e2]
0x4b76: push r12
0x4b78: mov r12,qword ptr [rip+0x2064e1]
0x4b7f: push rbp
0x4b80: push rbx
0x4b81: cmp eax,0x1
0x4b84: jle 0x4bb1
0x4b86: sub eax,0x2
0x4b89: lea rbx,[r12 + 0x18]
0x4b8e: shl rax,0x4
0x4b92: lea rbp,[r12 + rax*0x1 + 0x28]
0x4b97: nop word ptr [rax + rax*0x1]
0x4ba0: mov rdi,qword ptr [rbx]
0x4ba3: add rbx,0x10
0x4ba7: call 0x1590
0x4bac: cmp rbx,rbp
0x4baf: jnz 0x4ba0
0x4bb1: mov rdi,qword ptr [r12 + 0x8]
0x4bb6: lea rbx,[rip+0x206563]
0x4bbd: cmp rdi,rbx
0x4bc0: jz 0x4bd9
0x4bc2: call 0x1590
0x4bc7: mov qword ptr [rip+0x20649e],0x100
0x4bd2: mov qword ptr [rip+0x20649f],rbx
0x4bd9: lea rbx,[rip+0x206490]
0x4be0: cmp r12,rbx
0x4be3: jz 0x4bf4
0x4be5: mov rdi,r12
0x4be8: call 0x1590
0x4bed: mov qword ptr [rip+0x20646c],rbx
0x4bf4: pop rbx
0x4bf5: mov dword ptr [rip+0x206459],0x1
0x4bff: pop rbp
0x4c00: pop r12
0x4c02: ret 
0x4c10: lea rcx,[rip+0x206609]
0x4c17: mov rdx,-0x1
0x4c1e: jmp 0x4730
0x4c30: lea rcx,[rip+0x2065e9]
0x4c37: jmp 0x4730
0x4c40: lea rcx,[rip+0x2065d9]
0x4c47: mov rsi,rdi
0x4c4a: mov rdx,-0x1
0x4c51: xor edi,edi
0x4c53: jmp 0x4730
0x4c60: lea rcx,[rip+0x2065b9]
0x4c67: mov rdx,rsi
0x4c6a: mov rsi,rdi
0x4c6d: xor edi,edi
0x4c6f: jmp 0x4730
0x4c80: sub rsp,0x48
0x4c84: mov rax,rdx
0x4c87: mov rdx,qword ptr fs:[rip+0xffffffffffffb398]
0x4c90: mov qword ptr [rsp + 0x38],rdx
0x4c95: xor edx,edx
0x4c97: cmp esi,0xa
0x4c9a: jz 0x4d04
0x4c9c: mov dword ptr [rsp],esi
0x4c9f: mov rcx,rsp
0x4ca2: mov rdx,-0x1
0x4ca9: mov rsi,rax
0x4cac: mov qword ptr [rsp + 0x4],0x0
0x4cb5: mov qword ptr [rsp + 0xc],0x0
0x4cbe: mov qword ptr [rsp + 0x14],0x0
0x4cc7: mov qword ptr [rsp + 0x1c],0x0
0x4cd0: mov qword ptr [rsp + 0x24],0x0
0x4cd9: mov qword ptr [rsp + 0x2c],0x0
0x4ce2: mov dword ptr [rsp + 0x34],0x0
0x4cea: call 0x4730
0x4cef: mov rcx,qword ptr [rsp + 0x38]
0x4cf4: xor rcx,qword ptr fs:[rip+0xffffffffffffb32b]
0x4cfd: jnz 0x4d09
0x4cff: add rsp,0x48
0x4d03: ret 
0x4d04: call 0x15a0
0x4d09: call 0x1670
0x4d0e: nop 
0x4d10: sub rsp,0x48
0x4d14: mov rax,rdx
0x4d17: mov rdx,rcx
0x4d1a: mov rcx,qword ptr fs:[rip+0xffffffffffffb305]
0x4d23: mov qword ptr [rsp + 0x38],rcx
0x4d28: xor ecx,ecx
0x4d2a: cmp esi,0xa
0x4d2d: jz 0x4d90
0x4d2f: mov dword ptr [rsp],esi
0x4d32: mov rcx,rsp
0x4d35: mov rsi,rax
0x4d38: mov qword ptr [rsp + 0x4],0x0
0x4d41: mov qword ptr [rsp + 0xc],0x0
0x4d4a: mov qword ptr [rsp + 0x14],0x0
0x4d53: mov qword ptr [rsp + 0x1c],0x0
0x4d5c: mov qword ptr [rsp + 0x24],0x0
0x4d65: mov qword ptr [rsp + 0x2c],0x0
0x4d6e: mov dword ptr [rsp + 0x34],0x0
0x4d76: call 0x4730
0x4d7b: mov rdx,qword ptr [rsp + 0x38]
0x4d80: xor rdx,qword ptr fs:[rip+0xffffffffffffb29f]
0x4d89: jnz 0x4d95
0x4d8b: add rsp,0x48
0x4d8f: ret 
0x4d90: call 0x15a0
0x4d95: call 0x1670
0x4d9a: nop word ptr [rax + rax*0x1]
0x4da0: mov rdx,rsi
0x4da3: mov esi,edi
0x4da5: xor edi,edi
0x4da7: jmp 0x4c80
0x4db0: mov rcx,rdx
0x4db3: mov rdx,rsi
0x4db6: mov esi,edi
0x4db8: xor edi,edi
0x4dba: jmp 0x4d10
0x4dc0: sub rsp,0x48
0x4dc4: mov ecx,edx
0x4dc6: mov rax,qword ptr fs:[rip+0xffffffffffffb259]
0x4dcf: mov qword ptr [rsp + 0x38],rax
0x4dd4: xor eax,eax
0x4dd6: mov rax,qword ptr [rip+0x206473]
0x4ddd: mov r8,rsp
0x4de0: and ecx,0x1f
0x4de3: movdqa xmm0,[rip+0x206435]
0x4deb: mov qword ptr [rsp + 0x30],rax
0x4df0: mov eax,edx
0x4df2: movaps xmmword ptr [rsp],xmm0
0x4df6: shr al,0x5
0x4df9: movzx eax,al
0x4dfc: lea r9,[r8 + rax*0x4 + 0x8]
0x4e01: movdqa xmm0,[rip+0x206427]
0x4e09: movaps xmmword ptr [rsp + 0x10],xmm0
0x4e0e: movdqa xmm0,[rip+0x20642a]
0x4e16: movaps xmmword ptr [rsp + 0x20],xmm0
0x4e1b: mov edx,dword ptr [r9]
0x4e1e: mov eax,edx
0x4e20: shr eax,cl
0x4e22: not eax
0x4e24: and eax,0x1
0x4e27: shl eax,cl
0x4e29: mov rcx,r8
0x4e2c: xor eax,edx
0x4e2e: mov rdx,rsi
0x4e31: mov rsi,rdi
0x4e34: mov dword ptr [r9],eax
0x4e37: xor edi,edi
0x4e39: call 0x4730
0x4e3e: mov rsi,qword ptr [rsp + 0x38]
0x4e43: xor rsi,qword ptr fs:[rip+0xffffffffffffb1dc]
0x4e4c: jnz 0x4e53
0x4e4e: add rsp,0x48
0x4e52: ret 
0x4e53: call 0x1670
0x4e58: nop dword ptr [rax + rax*0x1]
0x4e60: movsx edx,sil
0x4e64: mov rsi,-0x1
0x4e6b: jmp 0x4dc0
0x4e70: mov edx,0x3a
0x4e75: mov rsi,-0x1
0x4e7c: jmp 0x4dc0
0x4e90: mov edx,0x3a
0x4e95: jmp 0x4dc0
0x4ea0: sub rsp,0x48
0x4ea4: mov rax,rdx
0x4ea7: mov rdx,qword ptr fs:[rip+0xffffffffffffb178]
0x4eb0: mov qword ptr [rsp + 0x38],rdx
0x4eb5: xor edx,edx
0x4eb7: cmp esi,0xa
0x4eba: jz 0x4f24
0x4ebc: mov dword ptr [rsp],esi
0x4ebf: mov rcx,rsp
0x4ec2: mov rdx,-0x1
0x4ec9: mov rsi,rax
0x4ecc: mov qword ptr [rsp + 0x4],0x0
0x4ed5: mov qword ptr [rsp + 0xc],0x4000000
0x4ede: mov qword ptr [rsp + 0x14],0x0
0x4ee7: mov qword ptr [rsp + 0x1c],0x0
0x4ef0: mov qword ptr [rsp + 0x24],0x0
0x4ef9: mov qword ptr [rsp + 0x2c],0x0
0x4f02: mov dword ptr [rsp + 0x34],0x0
0x4f0a: call 0x4730
0x4f0f: mov rcx,qword ptr [rsp + 0x38]
0x4f14: xor rcx,qword ptr fs:[rip+0xffffffffffffb10b]
0x4f1d: jnz 0x4f29
0x4f1f: add rsp,0x48
0x4f23: ret 
0x4f24: call 0x15a0
0x4f29: call 0x1670
0x4f2e: nop 
0x4f30: sub rsp,0x48
0x4f34: mov r9,rcx
0x4f37: mov rcx,qword ptr [rip+0x206312]
0x4f3e: movdqa xmm0,[rip+0x2062da]
0x4f46: mov rax,qword ptr fs:[rip+0xffffffffffffb0d9]
0x4f4f: mov qword ptr [rsp + 0x38],rax
0x4f54: xor eax,eax
0x4f56: movaps xmmword ptr [rsp],xmm0
0x4f5a: test rsi,rsi
0x4f5d: mov qword ptr [rsp + 0x30],rcx
0x4f62: mov dword ptr [rsp],0xa
0x4f69: movdqa xmm0,[rip+0x2062bf]
0x4f71: movaps xmmword ptr [rsp + 0x10],xmm0
0x4f76: movdqa xmm0,[rip+0x2062c2]
0x4f7e: movaps xmmword ptr [rsp + 0x20],xmm0
0x4f83: jz 0x4fb7
0x4f85: test rdx,rdx
0x4f88: jz 0x4fb7
0x4f8a: mov qword ptr [rsp + 0x28],rsi
0x4f8f: mov qword ptr [rsp + 0x30],rdx
0x4f94: mov rcx,rsp
0x4f97: mov rdx,r8
0x4f9a: mov rsi,r9
0x4f9d: call 0x4730
0x4fa2: mov rdi,qword ptr [rsp + 0x38]
0x4fa7: xor rdi,qword ptr fs:[rip+0xffffffffffffb078]
0x4fb0: jnz 0x4fbc
0x4fb2: add rsp,0x48
0x4fb6: ret 
0x4fb7: call 0x15a0
0x4fbc: call 0x1670
0x4fc1: nop dword ptr [rax + rax*0x1]
0x4fc6: nop word ptr cs:[rax + rax*0x1]
0x4fd0: mov r8,-0x1
0x4fd7: jmp 0x4f30
0x4fe0: mov rcx,rdx
0x4fe3: mov r8,-0x1
0x4fea: mov rdx,rsi
0x4fed: mov rsi,rdi
0x4ff0: xor edi,edi
0x4ff2: jmp 0x4f30
0x5000: mov r8,rcx
0x5003: mov rcx,rdx
0x5006: mov rdx,rsi
0x5009: mov rsi,rdi
0x500c: xor edi,edi
0x500e: jmp 0x4f30
0x5020: lea rcx,[rip+0x205ff9]
0x5027: jmp 0x4730
0x5030: lea rcx,[rip+0x205fe9]
0x5037: mov rdx,rsi
0x503a: mov rsi,rdi
0x503d: xor edi,edi
0x503f: jmp 0x4730
0x51c8: mov r8,rcx
0x51cb: mov rcx,rdx
0x51ce: lea rdx,[rip+0x3b7f]
0x51d5: mov esi,0x1
0x51da: xor eax,eax
0x51dc: call 0x1890
0x51e1: jmp 0x50cc
0x54b0: xor r9d,r9d
0x54b3: cmp qword ptr [r8],0x0
0x54b7: jz 0x54cb
0x54b9: nop dword ptr [rax]
0x54c0: add r9,0x1
0x54c4: cmp qword ptr [r8 + r9*0x8],0x0
0x54c9: jnz 0x54c0
0x54cb: jmp 0x5090
0x54d0: sub rsp,0x68
0x54d4: mov r10,r8
0x54d7: xor r9d,r9d
0x54da: mov rax,qword ptr fs:[rip+0xffffffffffffab45]
0x54e3: mov qword ptr [rsp + 0x58],rax
0x54e8: xor eax,eax
0x54ea: mov r8,rsp
0x54ed: nop dword ptr [rax]
0x54f0: mov eax,dword ptr [r10]
0x54f3: cmp eax,0x2f
0x54f6: ja 0x553a
0x54f8: mov r11d,eax
0x54fb: add r11,qword ptr [r10 + 0x10]
0x54ff: add eax,0x8
0x5502: mov dword ptr [r10],eax
0x5505: mov rax,qword ptr [r11]
0x5508: test rax,rax
0x550b: mov qword ptr [r8 + r9*0x8],rax
0x550f: jz 0x551b
0x5511: add r9,0x1
0x5515: cmp r9,0xa
0x5519: jnz 0x54f0
0x551b: call 0x5090
0x5520: mov rax,qword ptr [rsp + 0x58]
0x5525: xor rax,qword ptr fs:[rip+0xffffffffffffaafa]
0x552e: jnz 0x5535
0x5530: add rsp,0x68
0x5534: ret 
0x5535: call 0x1670
0x553a: mov r11,qword ptr [r10 + 0x8]
0x553e: lea rax,[r11 + 0x8]
0x5542: mov qword ptr [r10 + 0x8],rax
0x5546: jmp 0x5505
0x5610: call 0x1670
0x561c: mov rax,rbx
0x561f: add rbx,0x8
0x5623: jmp 0x55d6
0x5630: push rbx
0x5631: lea rsi,[rip+0x376a]
0x5638: mov edx,0x5
0x563d: xor edi,edi
0x563f: call 0x1640
0x5644: lea rdx,[rip+0x376c]
0x564b: mov rsi,rax
0x564e: mov edi,0x1
0x5653: xor eax,eax
0x5655: call 0x1800
0x565a: lea rsi,[rip+0x376c]
0x5661: mov edx,0x5
0x5666: xor edi,edi
0x5668: call 0x1640
0x566d: lea rcx,[rip+0x3014]
0x5674: lea rdx,[rip+0x299e]
0x567b: mov rsi,rax
0x567e: mov edi,0x1
0x5683: xor eax,eax
0x5685: call 0x1800
0x568a: mov rbx,qword ptr [rip+0x2059f7]
0x5691: lea rsi,[rip+0x3968]
0x5698: xor edi,edi
0x569a: mov edx,0x5
0x569f: call 0x1640
0x56a4: mov rsi,rbx
0x56a7: mov rdi,rax
0x56aa: pop rbx
0x56ab: jmp 0x1720
0x56ca: nop word ptr [rax + rax*0x1]
0x56d0: mov rax,rdi
0x56d3: mul rsi
0x56d6: mov rdi,rax
0x56d9: seto al
0x56dc: test rdi,rdi
0x56df: js 0x56eb
0x56e1: movzx eax,al
0x56e4: test rax,rax
0x56e7: jnz 0x56eb
0x56e9: jmp 0x56b0
0x56eb: sub rsp,0x8
0x56ef: call 0x5900
0x56f4: nop 
0x56f6: nop word ptr cs:[rax + rax*0x1]
0x5700: jmp 0x56b0
0x5746: nop word ptr cs:[rax + rax*0x1]
0x5750: mov rax,rsi
0x5753: mul rdx
0x5756: mov rsi,rax
0x5759: seto al
0x575c: test rsi,rsi
0x575f: js 0x576b
0x5761: movzx eax,al
0x5764: test rax,rax
0x5767: jnz 0x576b
0x5769: jmp 0x5710
0x576b: sub rsp,0x8
0x576f: call 0x5900
0x5774: nop 
0x5776: nop word ptr cs:[rax + rax*0x1]
0x5780: test rdi,rdi
0x5783: mov r9,rdx
0x5786: mov rcx,qword ptr [rsi]
0x5789: jz 0x57c0
0x578b: xor edx,edx
0x578d: mov rax,0x5555555555555554
0x5797: div r9
0x579a: cmp rax,rcx
0x579d: jbe 0x57db
0x579f: mov rax,rcx
0x57a2: shr rax,1
0x57a5: lea rcx,[rax + rcx*0x1 + 0x1]
0x57aa: mov qword ptr [rsi],rcx
0x57ad: imul rcx,r9
0x57b1: mov rsi,rcx
0x57b4: jmp 0x5710
0x57c0: test rcx,rcx
0x57c3: jz 0x57e8
0x57c5: mov rax,rcx
0x57c8: mul r9
0x57cb: seto dl
0x57ce: test rax,rax
0x57d1: movzx edx,dl
0x57d4: js 0x57db
0x57d6: test rdx,rdx
0x57d9: jz 0x57aa
0x57db: sub rsp,0x8
0x57df: call 0x5900
0x57e4: nop dword ptr [rax]
0x57e8: xor edx,edx
0x57ea: mov eax,0x80
0x57ef: xor r8d,r8d
0x57f2: div r9
0x57f5: test rax,rax
0x57f8: setz r8b
0x57fc: lea rcx,[r8 + rax*0x1]
0x5800: jmp 0x57c5
0x5810: test rdi,rdi
0x5813: mov rax,qword ptr [rsi]
0x5816: jz 0x5840
0x5818: mov rdx,0x5555555555555553
0x5822: cmp rax,rdx
0x5825: ja 0x5851
0x5827: mov rdx,rax
0x582a: shr rdx,1
0x582d: lea rax,[rdx + rax*0x1 + 0x1]
0x5832: mov qword ptr [rsi],rax
0x5835: mov rsi,rax
0x5838: jmp 0x5710
0x5840: test rax,rax
0x5843: mov edx,0x80
0x5848: cmovz rax,rdx
0x584c: test rax,rax
0x584f: jns 0x5832
0x5851: sub rsp,0x8
0x5855: call 0x5900
0x585a: nop word ptr [rax + rax*0x1]
0x5860: push rbx
0x5861: mov rbx,rdi
0x5864: call 0x56b0
0x5869: mov rdx,rbx
0x586c: xor esi,esi
0x586e: mov rdi,rax
0x5871: pop rbx
0x5872: jmp 0x16e0
0x5880: mov rax,rdi
0x5883: sub rsp,0x8
0x5887: mul rsi
0x588a: seto dl
0x588d: test rax,rax
0x5890: js 0x58a9
0x5892: movzx edx,dl
0x5895: test rdx,rdx
0x5898: jnz 0x58a9
0x589a: call 0x1730
0x589f: test rax,rax
0x58a2: jz 0x58a9
0x58a4: add rsp,0x8
0x58a8: ret 
0x58a9: call 0x5900
0x58ae: nop 
0x58b0: push rbp
0x58b1: push rbx
0x58b2: mov rbp,rdi
0x58b5: mov rdi,rsi
0x58b8: mov rbx,rsi
0x58bb: sub rsp,0x8
0x58bf: call 0x56b0
0x58c4: add rsp,0x8
0x58c8: mov rdx,rbx
0x58cb: mov rsi,rbp
0x58ce: pop rbx
0x58cf: pop rbp
0x58d0: mov rdi,rax
0x58d3: jmp 0x1760
0x58e0: push rbx
0x58e1: mov rbx,rdi
0x58e4: call 0x1660
0x58e9: mov rdi,rbx
0x58ec: lea rsi,[rax + 0x1]
0x58f0: pop rbx
0x58f1: jmp 0x58b0
0x5930: call 0x15a0
0x5935: nop word ptr cs:[rax + rax*0x1]
0x593f: nop 
0x59f9: nop dword ptr [rax]
0x5a1f: movaps xmmword ptr [rsp + 0x50],xmm0
0x5a24: movaps xmmword ptr [rsp + 0x60],xmm1
0x5a29: movaps xmmword ptr [rsp + 0x70],xmm2
0x5a2e: movaps xmmword ptr [0x80 + rsp],xmm3
0x5a36: movaps xmmword ptr [0x90 + rsp],xmm4
0x5a3e: movaps xmmword ptr [0xa0 + rsp],xmm5
0x5a46: movaps xmmword ptr [0xb0 + rsp],xmm6
0x5a4e: movaps xmmword ptr [0xc0 + rsp],xmm7
0x5aac: call 0x1670
0x5ab1: nop word ptr cs:[rax + rax*0x1]
0x5abb: nop dword ptr [rax + rax*0x1]
0x5b3e: call 0x1670
0x5b43: nop word ptr cs:[rax + rax*0x1]
0x5b4d: nop dword ptr [rax]
0x5bc9: call 0x1670
0x5bce: nop 
0x5c45: add rsp,0x10
0x5c49: fldz 
0x5c4b: pop rbx
0x5c4c: pop rbp
0x5c4d: pop r12
0x5c4f: ret 
0x5c86: nop word ptr cs:[rax + rax*0x1]
0x5c90: push r12
0x5c92: push rbp
0x5c93: mov rbp,rdi
0x5c96: push rbx
0x5c97: call 0x15f0
0x5c9c: mov ebx,dword ptr [rbp]
0x5c9f: mov rdi,rbp
0x5ca2: mov r12,rax
0x5ca5: call 0x5db0
0x5caa: and ebx,0x20
0x5cad: test ebx,ebx
0x5caf: jnz 0x5cc8
0x5cb1: test eax,eax
0x5cb3: jz 0x5cbf
0x5cb5: test r12,r12
0x5cb8: mov eax,0xffffffff
0x5cbd: jz 0x5cf8
0x5cbf: pop rbx
0x5cc0: pop rbp
0x5cc1: pop r12
0x5cc3: ret 
0x5cc8: test eax,eax
0x5cca: jnz 0x5ce8
0x5ccc: call 0x15b0
0x5cd1: mov dword ptr [rax],0x0
0x5cd7: mov eax,0xffffffff
0x5cdc: pop rbx
0x5cdd: pop rbp
0x5cde: pop r12
0x5ce0: ret 
0x5ce8: pop rbx
0x5ce9: mov eax,0xffffffff
0x5cee: pop rbp
0x5cef: pop r12
0x5cf1: ret 
0x5cf8: call 0x15b0
0x5cfd: cmp dword ptr [rax],0x9
0x5d00: pop rbx
0x5d01: pop rbp
0x5d02: pop r12
0x5d04: setnz al
0x5d07: movzx eax,al
0x5d0a: neg eax
0x5d0c: ret 
0x5db0: push r12
0x5db2: push rbp
0x5db3: push rbx
0x5db4: mov rbx,rdi
0x5db7: call 0x1770
0x5dbc: test eax,eax
0x5dbe: mov rdi,rbx
0x5dc1: js 0x5e17
0x5dc3: call 0x17c0
0x5dc8: test eax,eax
0x5dca: jnz 0x5df8
0x5dcc: mov rdi,rbx
0x5dcf: call 0x5e30
0x5dd4: test eax,eax
0x5dd6: jz 0x5e14
0x5dd8: call 0x15b0
0x5ddd: mov r12d,dword ptr [rax]
0x5de0: mov rdi,rbx
0x5de3: mov rbp,rax
0x5de6: call 0x1620
0x5deb: test r12d,r12d
0x5dee: jnz 0x5e20
0x5df0: pop rbx
0x5df1: pop rbp
0x5df2: pop r12
0x5df4: ret 
0x5df8: mov rdi,rbx
0x5dfb: call 0x1770
0x5e00: xor esi,esi
0x5e02: mov edx,0x1
0x5e07: mov edi,eax
0x5e09: call 0x16d0
0x5e0e: cmp rax,-0x1
0x5e12: jnz 0x5dcc
0x5e14: mov rdi,rbx
0x5e17: pop rbx
0x5e18: pop rbp
0x5e19: pop r12
0x5e1b: jmp 0x1620
0x5e20: mov dword ptr [rbp],r12d
0x5e24: mov eax,0xffffffff
0x5e29: jmp 0x5df0
0x5e30: test rdi,rdi
0x5e33: push rbx
0x5e34: mov rbx,rdi
0x5e37: jz 0x5e4a
0x5e39: call 0x17c0
0x5e3e: test eax,eax
0x5e40: jz 0x5e4a
0x5e42: test dword ptr [rbx],0x100
0x5e48: jnz 0x5e58
0x5e4a: mov rdi,rbx
0x5e4d: pop rbx
0x5e4e: jmp 0x17a0
0x5e58: mov rdi,rbx
0x5e5b: mov edx,0x1
0x5e60: xor esi,esi
0x5e62: call 0x5e70
0x5e67: mov rdi,rbx
0x5e6a: pop rbx
0x5e6b: jmp 0x17a0
0x5e70: mov rax,qword ptr [rdi + 0x8]
0x5e74: cmp qword ptr [rdi + 0x10],rax
0x5e78: jz 0x5e80
0x5e7a: jmp 0x1850
0x5e80: mov rax,qword ptr [rdi + 0x20]
0x5e84: cmp qword ptr [rdi + 0x28],rax
0x5e88: jnz 0x5e7a
0x5e8a: cmp qword ptr [rdi + 0x48],0x0
0x5e8f: jnz 0x5e7a
0x5e91: push r12
0x5e93: push rbp
0x5e94: mov r12d,edx
0x5e97: push rbx
0x5e98: mov rbp,rsi
0x5e9b: mov rbx,rdi
0x5e9e: call 0x1770
0x5ea3: mov edx,r12d
0x5ea6: mov rsi,rbp
0x5ea9: mov edi,eax
0x5eab: call 0x16d0
0x5eb0: cmp rax,-0x1
0x5eb4: jz 0x5ec2
0x5eb6: and dword ptr [rbx],0xffffffef
0x5eb9: mov qword ptr [0x90 + rbx],rax
0x5ec0: xor eax,eax
0x5ec2: pop rbx
0x5ec3: pop rbp
0x5ec4: pop r12
0x5ec6: ret 
0x5fd2: mov rax,qword ptr [-0x418 + rbp]
0x5fd9: mov r12,qword ptr [rax]
0x64a4: movsxd rdx,ecx
0x64a7: cmp rdx,r10
0x64aa: jnc 0x64ba
0x64ac: add rdx,r15
0x64af: cmp byte ptr [rdx + r14*0x1],0x0
0x64b4: jnz 0x6df6
0x64ba: cmp ecx,eax
0x64bc: jge 0x64c6
0x6dfb: nop dword ptr [rax + rax*0x1]
0x6fc7: call 0x1670
0x7ee0: push r15
0x7ee2: push r14
0x7ee4: mov r15,rdx
0x7ee7: push r13
0x7ee9: push r12
0x7eeb: lea r12,[rip+0x202bfe]
0x7ef2: push rbp
0x7ef3: lea rbp,[rip+0x202bfe]
0x7efa: push rbx
0x7efb: mov r13d,edi
0x7efe: mov r14,rsi
0x7f01: sub rbp,r12
0x7f04: sub rsp,0x8
0x7f08: sar rbp,0x3
0x7f0c: call 0x1550
0x7f11: test rbp,rbp
0x7f14: jz 0x7f36
0x7f16: xor ebx,ebx
0x7f18: nop dword ptr [rax + rax*0x1]
0x7f20: mov rdx,r15
0x7f23: mov rsi,r14
0x7f26: mov edi,r13d
0x7f29: call qword ptr [r12 + rbx*0x8]
0x7f2d: add rbx,0x1
0x7f31: cmp rbp,rbx
0x7f34: jnz 0x7f20
0x7f36: add rsp,0x8
0x7f3a: pop rbx
0x7f3b: pop rbp
0x7f3c: pop r12
0x7f3e: pop r13
0x7f40: pop r14
0x7f42: pop r15
0x7f44: ret 
0x7f50: ret 
0x7f70: sub rsp,0x8
0x7f74: add rsp,0x8
0x7f78: ret 
