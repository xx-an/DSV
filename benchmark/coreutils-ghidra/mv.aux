0x2540: sub rsp,0x8
0x2544: mov rax,qword ptr [rip+0x219a95]
0x254b: test rax,rax
0x254e: jz 0x2552
0x2550: call rax
0x2552: add rsp,0x8
0x2556: ret 
0x2560: push qword ptr [rip+0x2196ca]
0x2566: jmp qword ptr [rip+0x2196cc]
0x2576: push 0x0
0x257b: jmp 0x2560
0x2586: push 0x1
0x258b: jmp 0x2560
0x2596: push 0x2
0x259b: jmp 0x2560
0x25a6: push 0x3
0x25ab: jmp 0x2560
0x25b6: push 0x4
0x25bb: jmp 0x2560
0x25c6: push 0x5
0x25cb: jmp 0x2560
0x25d0: jmp qword ptr [rip+0x21969a]
0x25d6: push 0x6
0x25db: jmp 0x2560
0x25e6: push 0x7
0x25eb: jmp 0x2560
0x25f0: jmp qword ptr [rip+0x21968a]
0x25f6: push 0x8
0x25fb: jmp 0x2560
0x2606: push 0x9
0x260b: jmp 0x2560
0x2616: push 0xa
0x261b: jmp 0x2560
0x2626: push 0xb
0x262b: jmp 0x2560
0x2636: push 0xc
0x263b: jmp 0x2560
0x2646: push 0xd
0x264b: jmp 0x2560
0x2650: jmp qword ptr [rip+0x21965a]
0x2656: push 0xe
0x265b: jmp 0x2560
0x2666: push 0xf
0x266b: jmp 0x2560
0x2676: push 0x10
0x267b: jmp 0x2560
0x2686: push 0x11
0x268b: jmp 0x2560
0x2696: push 0x12
0x269b: jmp 0x2560
0x26a6: push 0x13
0x26ab: jmp 0x2560
0x26b0: jmp qword ptr [rip+0x21962a]
0x26b6: push 0x14
0x26bb: jmp 0x2560
0x26c6: push 0x15
0x26cb: jmp 0x2560
0x26d6: push 0x16
0x26db: jmp 0x2560
0x26e0: jmp qword ptr [rip+0x219612]
0x26e6: push 0x17
0x26eb: jmp 0x2560
0x26f6: push 0x18
0x26fb: jmp 0x2560
0x2706: push 0x19
0x270b: jmp 0x2560
0x2716: push 0x1a
0x271b: jmp 0x2560
0x2726: push 0x1b
0x272b: jmp 0x2560
0x2736: push 0x1c
0x273b: jmp 0x2560
0x2746: push 0x1d
0x274b: jmp 0x2560
0x2756: push 0x1e
0x275b: jmp 0x2560
0x2766: push 0x1f
0x276b: jmp 0x2560
0x2776: push 0x20
0x277b: jmp 0x2560
0x2780: jmp qword ptr [rip+0x2195c2]
0x2786: push 0x21
0x278b: jmp 0x2560
0x2796: push 0x22
0x279b: jmp 0x2560
0x27a6: push 0x23
0x27ab: jmp 0x2560
0x27b6: push 0x24
0x27bb: jmp 0x2560
0x27c6: push 0x25
0x27cb: jmp 0x2560
0x27d6: push 0x26
0x27db: jmp 0x2560
0x27e6: push 0x27
0x27eb: jmp 0x2560
0x27f6: push 0x28
0x27fb: jmp 0x2560
0x2806: push 0x29
0x280b: jmp 0x2560
0x2816: push 0x2a
0x281b: jmp 0x2560
0x2826: push 0x2b
0x282b: jmp 0x2560
0x2836: push 0x2c
0x283b: jmp 0x2560
0x2846: push 0x2d
0x284b: jmp 0x2560
0x2856: push 0x2e
0x285b: jmp 0x2560
0x2866: push 0x2f
0x286b: jmp 0x2560
0x2876: push 0x30
0x287b: jmp 0x2560
0x2886: push 0x31
0x288b: jmp 0x2560
0x2896: push 0x32
0x289b: jmp 0x2560
0x28a6: push 0x33
0x28ab: jmp 0x2560
0x28b6: push 0x34
0x28bb: jmp 0x2560
0x28c6: push 0x35
0x28cb: jmp 0x2560
0x28d6: push 0x36
0x28db: jmp 0x2560
0x28e6: push 0x37
0x28eb: jmp 0x2560
0x28f6: push 0x38
0x28fb: jmp 0x2560
0x2906: push 0x39
0x290b: jmp 0x2560
0x2916: push 0x3a
0x291b: jmp 0x2560
0x2926: push 0x3b
0x292b: jmp 0x2560
0x2936: push 0x3c
0x293b: jmp 0x2560
0x2946: push 0x3d
0x294b: jmp 0x2560
0x2956: push 0x3e
0x295b: jmp 0x2560
0x2966: push 0x3f
0x296b: jmp 0x2560
0x2976: push 0x40
0x297b: jmp 0x2560
0x2986: push 0x41
0x298b: jmp 0x2560
0x2996: push 0x42
0x299b: jmp 0x2560
0x29a6: push 0x43
0x29ab: jmp 0x2560
0x29b6: push 0x44
0x29bb: jmp 0x2560
0x29c0: jmp qword ptr [rip+0x2194a2]
0x29c6: push 0x45
0x29cb: jmp 0x2560
0x29d0: jmp qword ptr [rip+0x21949a]
0x29d6: push 0x46
0x29db: jmp 0x2560
0x29e6: push 0x47
0x29eb: jmp 0x2560
0x29f6: push 0x48
0x29fb: jmp 0x2560
0x2a06: push 0x49
0x2a0b: jmp 0x2560
0x2a10: jmp qword ptr [rip+0x21947a]
0x2a16: push 0x4a
0x2a1b: jmp 0x2560
0x2a26: push 0x4b
0x2a2b: jmp 0x2560
0x2a36: push 0x4c
0x2a3b: jmp 0x2560
0x2a46: push 0x4d
0x2a4b: jmp 0x2560
0x2a50: jmp qword ptr [rip+0x21945a]
0x2a56: push 0x4e
0x2a5b: jmp 0x2560
0x2a66: push 0x4f
0x2a6b: jmp 0x2560
0x2a76: push 0x50
0x2a7b: jmp 0x2560
0x2a80: jmp qword ptr [rip+0x219442]
0x2a86: push 0x51
0x2a8b: jmp 0x2560
0x2a96: push 0x52
0x2a9b: jmp 0x2560
0x2aa6: push 0x53
0x2aab: jmp 0x2560
0x2ab6: push 0x54
0x2abb: jmp 0x2560
0x2ac6: push 0x55
0x2acb: jmp 0x2560
0x2ad0: jmp qword ptr [rip+0x21941a]
0x2ad6: push 0x56
0x2adb: jmp 0x2560
0x2ae6: push 0x57
0x2aeb: jmp 0x2560
0x2af6: push 0x58
0x2afb: jmp 0x2560
0x2b06: push 0x59
0x2b0b: jmp 0x2560
0x2b16: push 0x5a
0x2b1b: jmp 0x2560
0x2b26: push 0x5b
0x2b2b: jmp 0x2560
0x2b36: push 0x5c
0x2b3b: jmp 0x2560
0x2b40: jmp qword ptr [rip+0x2193e2]
0x2b46: push 0x5d
0x2b4b: jmp 0x2560
0x2b56: push 0x5e
0x2b5b: jmp 0x2560
0x2b60: jmp qword ptr [rip+0x2193d2]
0x2b66: push 0x5f
0x2b6b: jmp 0x2560
0x2b76: push 0x60
0x2b7b: jmp 0x2560
0x2b86: push 0x61
0x2b8b: jmp 0x2560
0x2b96: push 0x62
0x2b9b: jmp 0x2560
0x2ba6: push 0x63
0x2bab: jmp 0x2560
0x2bb6: push 0x64
0x2bbb: jmp 0x2560
0x2bc6: push 0x65
0x2bcb: jmp 0x2560
0x2bd6: push 0x66
0x2bdb: jmp 0x2560
0x2be6: push 0x67
0x2beb: jmp 0x2560
0x2bf6: push 0x68
0x2bfb: jmp 0x2560
0x2c06: push 0x69
0x2c0b: jmp 0x2560
0x2c16: push 0x6a
0x2c1b: jmp 0x2560
0x2c26: push 0x6b
0x2c2b: jmp 0x2560
0x2c36: push 0x6c
0x2c3b: jmp 0x2560
0x2c46: push 0x6d
0x2c4b: jmp 0x2560
0x2c56: push 0x6e
0x2c5b: jmp 0x2560
0x2c66: push 0x6f
0x2c6b: jmp 0x2560
0x2c76: push 0x70
0x2c7b: jmp 0x2560
0x2c88: jmp qword ptr [rip+0x219362]
0x2cd9: nop dword ptr [rax]
0x2ec8: nop dword ptr [rax + rax*0x1]
0x2fcc: nop dword ptr [rax]
0x330e: jmp 0x2ebe
0x3334: jmp 0x2ebe
0x346e: call 0x2780
0x3473: nop word ptr cs:[rax + rax*0x1]
0x347d: nop dword ptr [rax]
0x34aa: hlt 
0x34b0: lea rdi,[rip+0x218bf1]
0x34b7: push rbp
0x34b8: lea rax,[rip+0x218be9]
0x34bf: cmp rax,rdi
0x34c2: mov rbp,rsp
0x34c5: jz 0x34e0
0x34c7: mov rax,qword ptr [rip+0x218b02]
0x34ce: test rax,rax
0x34d1: jz 0x34e0
0x34d3: pop rbp
0x34d4: jmp rax
0x34e0: pop rbp
0x34e1: ret 
0x34f0: lea rdi,[rip+0x218bb1]
0x34f7: lea rsi,[rip+0x218baa]
0x34fe: push rbp
0x34ff: sub rsi,rdi
0x3502: mov rbp,rsp
0x3505: sar rsi,0x3
0x3509: mov rax,rsi
0x350c: shr rax,0x3f
0x3510: add rsi,rax
0x3513: sar rsi,1
0x3516: jz 0x3530
0x3518: mov rax,qword ptr [rip+0x218ac9]
0x351f: test rax,rax
0x3522: jz 0x3530
0x3524: pop rbp
0x3525: jmp rax
0x3530: pop rbp
0x3531: ret 
0x3540: cmp byte ptr [rip+0x218bc1],0x0
0x3547: jnz 0x3578
0x3549: cmp qword ptr [rip+0x218a9f],0x0
0x3551: push rbp
0x3552: mov rbp,rsp
0x3555: jz 0x3563
0x3557: mov rdi,qword ptr [rip+0x218aaa]
0x355e: call 0x2c88
0x3563: call 0x34b0
0x3568: mov byte ptr [rip+0x218b99],0x1
0x356f: pop rbp
0x3570: ret 
0x3578: ret 
0x3580: push rbp
0x3581: mov rbp,rsp
0x3584: pop rbp
0x3585: jmp 0x34f0
0x3684: call 0x2780
0x36eb: nop dword ptr [rax + rax*0x1]
0x3cb1: mov rax,qword ptr [rbx + 0x8]
0x3cb5: cmp qword ptr [rax + 0x58],0x0
0x3cba: jns 0x3cd3
0x3cbc: jmp 0x3cda
0x3cc0: mov qword ptr [rax + 0x20],0x1
0x3cc8: mov rax,qword ptr [rax + 0x8]
0x3ccc: cmp qword ptr [rax + 0x58],0x0
0x3cd1: js 0x3cda
0x3cd3: cmp qword ptr [rax + 0x20],0x0
0x3cd8: jz 0x3cc0
0x3cda: mov eax,0x4
0x3cdf: jmp 0x3c05
0x3df8: call 0x2780
0x3dfd: nop dword ptr [rax]
0x3e00: push rbx
0x3e01: mov rax,qword ptr [rdx + 0x30]
0x3e05: mov rbx,rdx
0x3e08: cmp rax,-0x1
0x3e0c: jz 0x3e20
0x3e0e: test rax,rax
0x3e11: js 0x3e66
0x3e13: xor eax,eax
0x3e15: pop rbx
0x3e16: ret 
0x3e20: mov rcx,rdx
0x3e23: mov r8d,0x100
0x3e29: mov rdx,rsi
0x3e2c: mov esi,edi
0x3e2e: mov edi,0x1
0x3e33: call 0x27c0
0x3e38: test eax,eax
0x3e3a: jz 0x3e60
0x3e3c: mov qword ptr [rbx + 0x30],-0x2
0x3e44: call 0x25a0
0x3e49: movsxd rdx,dword ptr [rax]
0x3e4c: mov qword ptr [rbx + 0x8],rdx
0x3e50: mov dword ptr [rax],edx
0x3e52: mov eax,0xffffffff
0x3e57: pop rbx
0x3e58: ret 
0x3e60: mov rax,qword ptr [rbx + 0x30]
0x3e64: jmp 0x3e0e
0x3e66: call 0x25a0
0x3e6b: mov rdx,qword ptr [rbx + 0x8]
0x3e6f: jmp 0x3e50
0x3f85: cmp byte ptr [r13],0x0
0x3f8a: jnz 0x3fa9
0x3f8c: cmp eax,0x3
0x3f8f: jz 0x3f98
0x3f91: cmp byte ptr [r13 + 0x19],0x0
0x3f96: jz 0x3fb2
0x3f98: call 0x10c80
0x3f9d: test al,al
0x3f9f: jz 0x4268
0x3fa5: mov eax,dword ptr [r13 + 0x4]
0x3fa9: cmp eax,0x3
0x3fac: jz 0x40e0
0x3fe0: lea rbx,[rsp + 0x20]
0x3fe5: mov edi,dword ptr [rsp + 0x10]
0x3fe9: mov rsi,r15
0x3fec: mov rdx,rbx
0x3fef: call 0x3e00
0x3ff4: test eax,eax
0x3ff6: jnz 0x41c0
0x3ffc: mov eax,dword ptr [rsp + 0x38]
0x4000: and eax,0xf000
0x4005: cmp eax,0xa000
0x400a: jz 0x4254
0x4010: cmp eax,0x4000
0x4015: jz 0x40f4
0x401b: mov rsi,qword ptr [rsp + 0x8]
0x4020: mov edi,0x4
0x4025: call 0xe6d0
0x402a: mov rbp,rax
0x402d: mov edi,dword ptr [rsp + 0x10]
0x4031: mov rdx,rbx
0x4034: mov rsi,r15
0x4037: call 0x3e00
0x403c: test eax,eax
0x403e: jnz 0x42f0
0x4044: mov rdi,rbx
0x4047: call 0xb350
0x404c: test r12d,r12d
0x404f: mov r13,rax
0x4052: mov rbx,qword ptr [rip+0x218527]
0x4059: mov edx,0x5
0x405e: jz 0x42d8
0x4064: lea rsi,[rip+0x11b25]
0x406b: xor edi,edi
0x406d: call 0x2730
0x4072: mov rdi,qword ptr [rip+0x218087]
0x4079: mov rdx,rax
0x407c: mov r9,rbp
0x407f: mov r8,r13
0x4082: mov rcx,rbx
0x4085: mov esi,0x1
0x408a: xor eax,eax
0x408c: call 0x2c20
0x4091: call 0x10fd0
0x4096: test al,al
0x4098: jnz 0x3fb2
0x409e: nop 
0x40e0: xor r12d,r12d
0x40e3: test ebp,ebp
0x40e5: jz 0x3fe0
0x40eb: cmp ebp,0x4
0x40ee: jnz 0x4238
0x40f4: cmp byte ptr [r13 + 0x9],0x0
0x40f9: jz 0x4210
0x40ff: mov rsi,qword ptr [rsp + 0x8]
0x4104: mov edi,0x4
0x4109: call 0xe6d0
0x410e: cmp dword ptr [rsp + 0x14],0x2
0x4113: mov rbp,rax
0x4116: jnz 0x424a
0x411c: test r14b,r14b
0x411f: jnz 0x424a
0x4125: test r12d,r12d
0x4128: mov rbx,qword ptr [rip+0x218451]
0x412f: mov edx,0x5
0x4134: jz 0x4330
0x413a: lea rsi,[rip+0x119ff]
0x4141: xor edi,edi
0x4143: call 0x2730
0x4148: mov rdi,qword ptr [rip+0x217fb1]
0x414f: mov rdx,rax
0x4152: mov r8,rbp
0x4155: mov rcx,rbx
0x4158: mov esi,0x1
0x415d: xor eax,eax
0x415f: call 0x2c20
0x4164: jmp 0x4091
0x41c0: call 0x25a0
0x41c5: mov ebx,dword ptr [rax]
0x41c7: mov rsi,qword ptr [rsp + 0x8]
0x41cc: mov edi,0x4
0x41d1: call 0xe6d0
0x41d6: mov rbp,rax
0x41d9: lea rsi,[rip+0x118d7]
0x41e0: mov edx,0x5
0x41e5: xor edi,edi
0x41e7: call 0x2730
0x41ec: mov rcx,rbp
0x41ef: mov rdx,rax
0x41f2: mov esi,ebx
0x41f4: xor eax,eax
0x41f6: xor edi,edi
0x41f8: call 0x2b10
0x41fd: mov eax,0x4
0x4202: jmp 0x3fb7
0x4210: cmp byte ptr [r13 + 0xa],0x0
0x4215: jz 0x421c
0x4217: test r14b,r14b
0x421a: jnz 0x4238
0x421c: mov rsi,qword ptr [rsp + 0x8]
0x4221: mov edi,0x4
0x4226: mov ebx,0x15
0x422b: call 0xe6d0
0x4230: mov rbp,rax
0x4233: jmp 0x41d9
0x4238: mov rsi,qword ptr [rsp + 0x8]
0x423d: mov edi,0x4
0x4242: call 0xe6d0
0x4247: mov rbp,rax
0x424a: lea rbx,[rsp + 0x20]
0x424f: jmp 0x402d
0x4254: cmp dword ptr [r13 + 0x4],0x3
0x4259: jnz 0x3fb2
0x425f: jmp 0x401b
0x4268: lea rbx,[rsp + 0x20]
0x426d: mov edi,dword ptr [rsp + 0x10]
0x4271: mov rsi,r15
0x4274: mov rdx,rbx
0x4277: call 0x3e00
0x427c: test eax,eax
0x427e: jnz 0x41c0
0x4284: mov eax,dword ptr [rsp + 0x38]
0x4288: and eax,0xf000
0x428d: cmp eax,0xa000
0x4292: jz 0x3fa5
0x4298: mov edi,dword ptr [rsp + 0x10]
0x429c: mov ecx,0x200
0x42a1: mov edx,0x2
0x42a6: mov rsi,r15
0x42a9: call 0x2650
0x42ae: test eax,eax
0x42b0: jz 0x3fa5
0x42b6: call 0x25a0
0x42bb: mov ebx,dword ptr [rax]
0x42bd: mov r12d,0x1
0x42c3: cmp ebx,0xd
0x42c6: jz 0x40e3
0x42cc: jmp 0x41c7
0x42d8: lea rsi,[rip+0x117e9]
0x42df: xor edi,edi
0x42e1: call 0x2730
0x42e6: jmp 0x4072
0x42f0: lea rsi,[rip+0x117c0]
0x42f7: mov edx,0x5
0x42fc: xor edi,edi
0x42fe: call 0x2730
0x4303: mov rbx,rax
0x4306: call 0x25a0
0x430b: mov esi,dword ptr [rax]
0x430d: mov rcx,rbp
0x4310: xor eax,eax
0x4312: mov rdx,rbx
0x4315: xor edi,edi
0x4317: call 0x2b10
0x431c: mov eax,0x4
0x4321: jmp 0x3fb7
0x4330: lea rsi,[rip+0x11839]
0x4337: xor edi,edi
0x4339: call 0x2730
0x433e: jmp 0x4148
0x4343: call 0x2780
0x4348: nop dword ptr [rax + rax*0x1]
0x4429: mov rsi,r15
0x442c: mov edx,0x4
0x4431: mov rdi,rbx
0x4434: call 0x133e0
0x4439: mov rdi,rbx
0x443c: mov ebp,0x4
0x4441: call 0x12c60
0x4446: mov rdi,rbx
0x4449: call 0x12c60
0x444e: test rax,rax
0x4451: mov r15,rax
0x4454: jnz 0x43d4
0x44bd: cmp qword ptr [r15 + 0x58],0x0
0x44c2: jle 0x44d8
0x44c4: mov rax,qword ptr [rbx + 0x18]
0x44c8: cmp qword ptr [r15 + 0x78],rax
0x44cc: jnz 0x4a78
0x44d2: nop word ptr [rax + rax*0x1]
0x4583: cmp byte ptr [r13 + 0xa],0x0
0x4588: jz 0x46f0
0x458e: mov rsi,qword ptr [r15 + 0x30]
0x4592: mov edi,dword ptr [rbx + 0x2c]
0x4595: xor eax,eax
0x4597: mov edx,0x30900
0x459c: call 0x2770
0x45a1: test eax,eax
0x45a3: js 0x4601
0x45a5: mov edi,eax
0x45a7: mov dword ptr [rsp + 0x8],eax
0x45ab: call 0x2b80
0x45b0: test rax,rax
0x45b3: mov r14,rax
0x45b6: mov edx,dword ptr [rsp + 0x8]
0x45ba: jz 0x4af2
0x45c0: call 0x25a0
0x45c5: mov qword ptr [rsp + 0x8],rax
0x45ca: mov dword ptr [rax],0x0
0x45d0: mov rdi,r14
0x45d3: call 0x29f0
0x45d8: test rax,rax
0x45db: jz 0x4616
0x45dd: cmp byte ptr [rax + 0x13],0x2e
0x45e1: jnz 0x45f9
0x45e3: xor edx,edx
0x45e5: cmp byte ptr [rax + 0x14],0x2e
0x45e9: setz dl
0x45ec: movzx eax,byte ptr [rax + rdx*0x1 + 0x14]
0x45f1: test al,al
0x45f3: jz 0x45d0
0x45f5: cmp al,0x2f
0x45f7: jz 0x45d0
0x45f9: mov rdi,r14
0x45fc: call 0x28a0
0x4601: cmp byte ptr [r13 + 0xa],0x0
0x4606: jz 0x46f0
0x460c: mov ebp,0x27
0x4611: jmp 0x46f5
0x4616: mov rax,qword ptr [rsp + 0x8]
0x461b: mov rdi,r14
0x461e: mov edx,dword ptr [rax]
0x4620: mov dword ptr [rsp + 0x8],edx
0x4624: call 0x28a0
0x4629: mov edx,dword ptr [rsp + 0x8]
0x462d: test edx,edx
0x462f: jnz 0x4601
0x4631: nop dword ptr [rax]
0x46f0: mov ebp,0x15
0x46f5: mov rsi,qword ptr [r15 + 0x38]
0x46f9: mov edi,0x4
0x46fe: call 0xe6d0
0x4703: lea rsi,[rip+0x113ad]
0x470a: xor edi,edi
0x470c: mov r14,rax
0x470f: mov edx,0x5
0x4714: call 0x2730
0x4719: xor edi,edi
0x471b: mov rdx,rax
0x471e: mov rcx,r14
0x4721: xor eax,eax
0x4723: mov esi,ebp
0x4725: call 0x2b10
0x472a: mov rax,qword ptr [r15 + 0x8]
0x472e: cmp qword ptr [rax + 0x58],0x0
0x4733: jns 0x4757
0x4735: jmp 0x4429
0x4740: mov qword ptr [rax + 0x20],0x1
0x4748: mov rax,qword ptr [rax + 0x8]
0x474c: cmp qword ptr [rax + 0x58],0x0
0x4751: js 0x4429
0x4757: cmp qword ptr [rax + 0x20],0x0
0x475c: jz 0x4740
0x475e: jmp 0x4429
0x485d: jmp 0x4429
0x4868: lea rsi,[rip+0x1127c]
0x486f: xor edx,edx
0x4871: mov rdi,r14
0x4874: call 0xb5e0
0x4879: test rax,rax
0x487c: mov r14,rax
0x487f: jz 0x4897
0x4881: mov rdx,qword ptr [rsp + 0x18]
0x4886: mov rsi,rax
0x4889: mov edi,0x1
0x488e: call 0x2760
0x4893: test eax,eax
0x4895: jz 0x4900
0x4897: mov rdx,qword ptr [r15 + 0x30]
0x489b: mov esi,0x4
0x48a0: mov edi,0x1
0x48a5: call 0xe5b0
0x48aa: mov rdx,r14
0x48ad: xor edi,edi
0x48af: mov esi,0x4
0x48b4: mov rbp,rax
0x48b7: call 0xe5b0
0x48bc: lea rsi,[rip+0x113d5]
0x48c3: xor edi,edi
0x48c5: mov edx,0x5
0x48ca: mov qword ptr [rsp + 0x8],rax
0x48cf: call 0x2730
0x48d4: mov rcx,qword ptr [rsp + 0x8]
0x48d9: mov rdx,rax
0x48dc: xor edi,edi
0x48de: mov r8,rbp
0x48e1: xor esi,esi
0x48e3: xor eax,eax
0x48e5: call 0x2b10
0x48ea: mov rdi,r14
0x48ed: call 0x2c80
0x48f2: jmp 0x4429
0x4900: mov rdi,r14
0x4903: call 0x2c80
0x4908: mov rax,qword ptr [rsp + 0x30]
0x490d: cmp qword ptr [rbx + 0x18],rax
0x4911: jz 0x4678
0x4917: mov rsi,qword ptr [r15 + 0x38]
0x491b: mov edi,0x4
0x4920: call 0xe6d0
0x4925: lea rsi,[rip+0x1138c]
0x492c: mov rbp,rax
0x492f: mov edx,0x5
0x4934: xor edi,edi
0x4936: call 0x2730
0x493b: xor esi,esi
0x493d: mov rdx,rax
0x4940: mov rcx,rbp
0x4943: xor edi,edi
0x4945: xor eax,eax
0x4947: call 0x2b10
0x494c: lea rsi,[rip+0x114ad]
0x4953: mov edx,0x5
0x4958: xor edi,edi
0x495a: call 0x2730
0x495f: xor esi,esi
0x4961: mov rdx,rax
0x4964: xor edi,edi
0x4966: xor eax,eax
0x4968: call 0x2b10
0x496d: jmp 0x4429
0x49a0: mov rdi,rbx
0x49a3: call 0x12ad0
0x49a8: test eax,eax
0x49aa: jz 0x447c
0x49d8: jmp 0x447c
0x4a63: mov edx,0x5
0x4a68: lea rsi,[rip+0x111f1]
0x4a6f: jmp 0x4958
0x4a78: mov rax,qword ptr [r15 + 0x8]
0x4a7c: cmp qword ptr [rax + 0x58],0x0
0x4a81: jns 0x4a9b
0x4a83: jmp 0x4aa2
0x4a88: mov qword ptr [rax + 0x20],0x1
0x4a90: mov rax,qword ptr [rax + 0x8]
0x4a94: cmp qword ptr [rax + 0x58],0x0
0x4a99: js 0x4aa2
0x4a9b: cmp qword ptr [rax + 0x20],0x0
0x4aa0: jz 0x4a88
0x4aa2: mov rsi,qword ptr [r15 + 0x38]
0x4aa6: mov edi,0x4
0x4aab: call 0xe6d0
0x4ab0: lea rsi,[rip+0x11201]
0x4ab7: mov rbp,rax
0x4aba: mov edx,0x5
0x4abf: xor edi,edi
0x4ac1: call 0x2730
0x4ac6: mov rcx,rbp
0x4ac9: mov rdx,rax
0x4acc: xor esi,esi
0x4ace: xor edi,edi
0x4ad0: xor eax,eax
0x4ad2: mov ebp,0x4
0x4ad7: call 0x2b10
0x4adc: jmp 0x43c0
0x4af2: mov edi,edx
0x4af4: call 0x2870
0x4af9: jmp 0x4601
0x4b32: jmp 0x4a63
0x4b7c: call 0x2590
0x4ba0: call 0x2780
0x4ea6: xor ebx,ebx
0x4ea8: add rsp,0x8
0x4eac: mov eax,ebx
0x4eae: pop rbx
0x4eaf: pop rbp
0x4eb0: pop r12
0x4eb2: pop r13
0x4eb4: ret 
0x5006: call 0x2780
0x500b: nop dword ptr [rax + rax*0x1]
0x50a0: add rsp,0x8
0x50a4: xor eax,eax
0x50a6: pop rbx
0x50a7: pop rbp
0x50a8: pop r12
0x50aa: pop r13
0x50ac: ret 
0x5479: jmp 0x51d5
0x54ce: jmp 0x51d5
0x5543: movzx ebx,byte ptr [rbp + 0x26]
0x560a: pop rbx
0x560b: xor eax,eax
0x560d: pop rbp
0x560e: pop r12
0x5610: ret 
0x5660: lea r8,[rip+0x74a9]
0x5667: lea rcx,[rip+0x7432]
0x566e: xor esi,esi
0x5670: lea rdx,[rip+0x7419]
0x5677: push rbx
0x5678: mov rbx,rdi
0x567b: mov edi,0x3d
0x5680: call 0xbff0
0x5685: mov qword ptr [rbx + 0x48],rax
0x5689: pop rbx
0x568a: ret 
0x588a: jmp 0x58cc
0x5d83: jmp 0x6186
0x600a: cmp byte ptr [rbx + 0x24],0x0
0x600e: jnz 0x5c50
0x6014: nop dword ptr [rax]
0x6261: jmp 0x6186
0x6500: jmp 0x68d0
0x6558: jmp 0x6186
0x67e4: jmp 0x6186
0x68cb: nop dword ptr [rax + rax*0x1]
0x6a3c: mov rax,qword ptr [-0x340 + rbp]
0x6a43: mov byte ptr [rax],0x1
0x6a55: nop dword ptr [rax]
0x6aff: mov rsi,qword ptr [-0x280 + rbp]
0x6b06: mov rdi,qword ptr [-0x278 + rbp]
0x6b0d: call 0x9c10
0x6b12: jmp 0x5c50
0x6c6a: jmp 0x6186
0x6e3f: jmp 0x68d0
0x6f96: jmp 0x5c50
0x7268: mov rsi,qword ptr [-0x310 + rbp]
0x726f: mov edi,0x4
0x7274: call 0xe6d0
0x7279: lea rsi,[rip+0xed58]
0x7280: mov rbx,rax
0x7283: xor edi,edi
0x7285: mov edx,0x5
0x728a: call 0x2730
0x728f: mov rcx,rbx
0x7292: mov rdx,rax
0x7295: xor esi,esi
0x7297: xor edi,edi
0x7299: xor eax,eax
0x729b: call 0x2b10
0x72a0: jmp 0x6186
0x7346: mov rax,qword ptr [-0x340 + rbp]
0x734d: mov r12d,0x1
0x7353: mov byte ptr [rax],0x1
0x7356: jmp 0x6186
0x79ab: jmp 0x6a46
0x7a8a: xor r8d,r8d
0x7a8d: mov qword ptr [-0x330 + rbp],0x0
0x7d8d: jmp 0x6186
0x8042: cmp byte ptr [rbx + 0x18],0x0
0x8046: jnz 0x6bc4
0x804c: jmp 0x6180
0x80ae: jmp 0x6186
0x82aa: xor r12d,r12d
0x82ad: jmp 0x6186
0x84a9: test eax,eax
0x84ab: jnz 0x5c50
0x84b1: jmp 0x6186
0x8547: mov rdi,qword ptr [-0x330 + rbp]
0x854e: call 0x2c80
0x8553: jmp 0x68d0
0x859b: jmp 0x7883
0x863e: jmp 0x68d0
0x8706: not eax
0x8708: and dword ptr [-0x35c + rbp],eax
0x870e: jz 0x60bd
0x8714: cmp byte ptr [-0x315 + rbp],0x1
0x871b: jz 0x60ca
0x8721: test r14b,r14b
0x8724: jnz 0x9097
0x872a: mov eax,dword ptr [-0x1d8 + rbp]
0x8730: mov dword ptr [-0x38c + rbp],eax
0x8736: not eax
0x8738: test dword ptr [-0x35c + rbp],eax
0x873e: jnz 0x60ca
0x8744: jmp 0x6186
0x8c3f: xor r8d,r8d
0x8c42: jmp 0x7a98
0x8de5: movzx r9d,byte ptr [-0x330 + rbp]
0x8ded: xor r8d,r8d
0x8df0: mov qword ptr [-0x330 + rbp],0x0
0x8dfb: mov r14d,r9d
0x8dfe: jmp 0x7a98
0x8e64: call 0x2780
0x9097: mov rsi,qword ptr [-0x308 + rbp]
0x909e: lea rdx,[-0x1f0 + rbp]
0x90a5: mov edi,0x1
0x90aa: call 0x2760
0x90af: test eax,eax
0x90b1: jz 0x872a
0x90b7: mov rsi,qword ptr [-0x308 + rbp]
0x90be: jmp 0x6225
0x93a7: cmp byte ptr [rbx + 0x24],0x0
0x93ab: jz 0x8f04
0x93b1: jmp 0x8bd2
0x93fe: xor r8d,r8d
0x9401: mov qword ptr [-0x330 + rbp],0x0
0x940c: jmp 0x8bd5
0x9502: jmp 0x8bd2
0x971c: xor r8d,r8d
0x971f: mov qword ptr [-0x330 + rbp],0x0
0x972a: jmp 0x8bd5
0x986b: jmp 0x8bc6
0x9934: movzx r8d,byte ptr [rbx + 0x24]
0x9939: test r8b,r8b
0x993c: jnz 0x68d0
0x9942: jmp 0x5ebf
0x9986: mov qword ptr [-0x330 + rbp],0x0
0x9991: movzx r8d,byte ptr [-0x328 + rbp]
0x9999: jmp 0x7a98
0x9aa0: cmp r10d,0x2
0x9aa4: jz 0x9b15
0x9af0: cmp byte ptr [rcx + 0x2c],0x0
0x9af4: jz 0x9a9b
0x9af6: lea rcx,[rip+0xccbb]
0x9afd: lea rsi,[rip+0xcc89]
0x9b04: lea rdi,[rip+0xc935]
0x9b0b: mov edx,0xb8a
0x9b10: call 0x2820
0x9b15: lea rcx,[rip+0xcc9c]
0x9b1c: lea rsi,[rip+0xcc6a]
0x9b23: lea rdi,[rip+0xc93e]
0x9b2a: mov edx,0xb8d
0x9b2f: call 0x2820
0x9b34: call 0x2780
0x9b39: lea rcx,[rip+0xcc78]
0x9b40: lea rsi,[rip+0xcc46]
0x9b47: lea rdi,[rip+0xc8ca]
0x9b4e: mov edx,0xb89
0x9b53: call 0x2820
0x9b58: lea rcx,[rip+0xcc59]
0x9b5f: lea rsi,[rip+0xcc27]
0x9b66: lea rdi,[rip+0xc883]
0x9b6d: mov edx,0xb88
0x9b72: call 0x2820
0x9b96: lea rcx,[rip+0xcc1b]
0x9b9d: lea rsi,[rip+0xcbe9]
0x9ba4: lea rdi,[rip+0xcbff]
0x9bab: mov edx,0xb86
0x9bb0: call 0x2820
0x9bb5: nop word ptr cs:[rax + rax*0x1]
0x9bbf: nop 
0x9bf0: push rbx
0x9bf1: mov rbx,rdi
0x9bf4: mov rdi,qword ptr [rdi + 0x10]
0x9bf8: call 0x2c80
0x9bfd: mov rdi,rbx
0x9c00: pop rbx
0x9c01: jmp 0x2c80
0x9c75: call 0x2780
0x9c7a: nop word ptr [rax + rax*0x1]
0x9cd4: call 0x2780
0x9cd9: nop dword ptr [rax]
0x9d59: nop dword ptr [rax]
0x9d9b: nop dword ptr [rax + rax*0x1]
0x9da0: mov rdi,qword ptr [rip+0x2127b1]
0x9da7: jmp 0xc240
0x9fe9: nop dword ptr [rax]
0xa0e8: call 0x2780
0xa0ed: nop dword ptr [rax]
0xa2ec: call 0x2780
0xa2f1: nop dword ptr [rax + rax*0x1]
0xa2f6: nop word ptr cs:[rax + rax*0x1]
0xa44d: call 0x2780
0xa452: nop word ptr cs:[rax + rax*0x1]
0xa45c: nop dword ptr [rax]
0xa4e5: mov eax,ebx
0xa4e7: pop rbx
0xa4e8: pop rbp
0xa4e9: pop r12
0xa4eb: ret 
0xac64: call 0xa630
0xac69: mov rdi,qword ptr [rip+0x2118f0]
0xac70: jmp 0xa6e3
0xac8d: call 0x2780
0xac92: nop word ptr cs:[rax + rax*0x1]
0xac9c: nop dword ptr [rax]
0xacf0: sub rsp,0x8
0xacf4: xor ecx,ecx
0xacf6: call 0xa680
0xacfb: test rax,rax
0xacfe: jz 0xad05
0xad00: add rsp,0x8
0xad04: ret 
0xad05: call 0x10f10
0xad0a: nop word ptr [rax + rax*0x1]
0xad10: test rsi,rsi
0xad13: jz 0xad20
0xad15: cmp byte ptr [rsi],0x0
0xad18: jz 0xad20
0xad1a: jmp 0xacb0
0xad20: mov eax,0x2
0xad25: ret 
0xadf0: mov qword ptr [rip+0x211771],rdi
0xadf7: ret 
0xae00: push r12
0xae02: push rbp
0xae03: push rbx
0xae04: mov rbx,qword ptr [rip+0x2112c5]
0xae0b: mov rdi,rbx
0xae0e: call 0x110b0
0xae13: test rax,rax
0xae16: jnz 0xaeb8
0xae1c: mov rdi,rbx
0xae1f: call 0x139f0
0xae24: test eax,eax
0xae26: jnz 0xae58
0xae28: pop rbx
0xae29: pop rbp
0xae2a: pop r12
0xae2c: jmp 0xaf30
0xae38: call 0x11070
0xae3d: test eax,eax
0xae3f: mov rdi,qword ptr [rip+0x21128a]
0xae46: jz 0xaed6
0xae4c: call 0x139f0
0xae51: nop dword ptr [rax]
0xae58: lea rsi,[rip+0xbaa1]
0xae5f: xor edi,edi
0xae61: mov edx,0x5
0xae66: call 0x2730
0xae6b: mov rbx,qword ptr [rip+0x2116f6]
0xae72: mov r12,rax
0xae75: call 0x25a0
0xae7a: mov rbp,rax
0xae7d: test rbx,rbx
0xae80: jz 0xaef0
0xae82: mov rdi,rbx
0xae85: call 0xe7a0
0xae8a: mov esi,dword ptr [rbp]
0xae8d: lea rdx,[rip+0xba7f]
0xae94: mov rcx,rax
0xae97: mov r8,r12
0xae9a: xor edi,edi
0xae9c: xor eax,eax
0xae9e: call 0x2b10
0xaea3: call 0xaf30
0xaea8: mov edi,dword ptr [rip+0x21117a]
0xaeae: call 0x25d0
0xaeb8: xor esi,esi
0xaeba: mov rdi,rbx
0xaebd: mov edx,0x1
0xaec2: call 0x110e0
0xaec7: test eax,eax
0xaec9: mov rdi,qword ptr [rip+0x211200]
0xaed0: jz 0xae38
0xaed6: call 0x139f0
0xaedb: test eax,eax
0xaedd: jnz 0xae58
0xaee3: pop rbx
0xaee4: pop rbp
0xaee5: pop r12
0xaee7: jmp 0xaf30
0xaef0: mov esi,dword ptr [rax]
0xaef2: lea rdx,[rip+0xc54e]
0xaef9: mov rcx,r12
0xaefc: xor edi,edi
0xaefe: xor eax,eax
0xaf00: call 0x2b10
0xaf05: jmp 0xaea3
0xaf10: mov qword ptr [rip+0x211661],rdi
0xaf17: ret 
0xaf20: mov byte ptr [rip+0x211649],dil
0xaf27: ret 
0xaf30: push rbp
0xaf31: push rbx
0xaf32: sub rsp,0x8
0xaf36: mov rdi,qword ptr [rip+0x21118b]
0xaf3d: call 0x139f0
0xaf42: test eax,eax
0xaf44: jz 0xaf5c
0xaf46: call 0x25a0
0xaf4b: cmp byte ptr [rip+0x21161e],0x0
0xaf52: mov rbx,rax
0xaf55: jz 0xaf73
0xaf57: cmp dword ptr [rax],0x20
0xaf5a: jnz 0xaf73
0xaf5c: mov rdi,qword ptr [rip+0x21119d]
0xaf63: call 0x139f0
0xaf68: test eax,eax
0xaf6a: jnz 0xafb2
0xaf6c: add rsp,0x8
0xaf70: pop rbx
0xaf71: pop rbp
0xaf72: ret 
0xaf73: lea rsi,[rip+0xb9a0]
0xaf7a: xor edi,edi
0xaf7c: mov edx,0x5
0xaf81: call 0x2730
0xaf86: mov rdi,qword ptr [rip+0x2115eb]
0xaf8d: mov rbp,rax
0xaf90: test rdi,rdi
0xaf93: jz 0xafbd
0xaf95: call 0xe7a0
0xaf9a: mov esi,dword ptr [rbx]
0xaf9c: lea rdx,[rip+0xb970]
0xafa3: mov rcx,rax
0xafa6: mov r8,rbp
0xafa9: xor edi,edi
0xafab: xor eax,eax
0xafad: call 0x2b10
0xafb2: mov edi,dword ptr [rip+0x211070]
0xafb8: call 0x25d0
0xafbd: mov esi,dword ptr [rbx]
0xafbf: lea rdx,[rip+0xc481]
0xafc6: mov rcx,rax
0xafc9: xor edi,edi
0xafcb: xor eax,eax
0xafcd: call 0x2b10
0xafd2: jmp 0xafb2
0xaff8: nop dword ptr [rax + rax*0x1]
0xb1c0: test rdi,rdi
0xb1c3: jz 0xb1e0
0xb1c5: push rbx
0xb1c6: mov ebx,esi
0xb1c8: call 0x29c0
0xb1cd: mov ecx,ebx
0xb1cf: xor edx,edx
0xb1d1: xor esi,esi
0xb1d3: pop rbx
0xb1d4: mov edi,eax
0xb1d6: jmp 0x28b0
0xb1e0: ret 
0xb259: call 0x2780
0xb25e: nop 
0xb2b5: add rsp,0x8
0xb2b9: mov rdi,rbx
0xb2bc: pop rbx
0xb2bd: pop rbp
0xb2be: pop r12
0xb2c0: pop r13
0xb2c2: jmp 0xcb10
0xb2e7: nop word ptr [rax + rax*0x1]
0xb326: test rax,rax
0xb329: setnz al
0xb341: call 0x2780
0xb346: nop word ptr cs:[rax + rax*0x1]
0xb350: mov eax,dword ptr [rdi + 0x18]
0xb353: mov edx,0x5
0xb358: and eax,0xf000
0xb35d: cmp eax,0x8000
0xb362: jz 0xb3b0
0xb364: cmp eax,0x4000
0xb369: jz 0xb400
0xb36f: cmp eax,0xa000
0xb374: jz 0xb3e0
0xb376: cmp eax,0x6000
0xb37b: jz 0xb410
0xb381: cmp eax,0x2000
0xb386: jz 0xb420
0xb38c: cmp eax,0x1000
0xb391: jz 0xb430
0xb397: cmp eax,0xc000
0xb39c: jz 0xb3f0
0xb39e: lea rsi,[rip+0xb5e5]
0xb3a5: xor edi,edi
0xb3a7: jmp 0x2730
0xb3b0: cmp qword ptr [rdi + 0x30],0x0
0xb3b5: jnz 0xb3c8
0xb3b7: lea rsi,[rip+0xb568]
0xb3be: xor edi,edi
0xb3c0: jmp 0x2730
0xb3c8: lea rsi,[rip+0xb56a]
0xb3cf: xor edi,edi
0xb3d1: jmp 0x2730
0xb3e0: lea rsi,[rip+0xb55f]
0xb3e7: xor edi,edi
0xb3e9: jmp 0x2730
0xb3f0: lea rsi,[rip+0xb58c]
0xb3f7: xor edi,edi
0xb3f9: jmp 0x2730
0xb400: lea rsi,[rip+0x9c13]
0xb407: xor edi,edi
0xb409: jmp 0x2730
0xb410: lea rsi,[rip+0xb53d]
0xb417: xor edi,edi
0xb419: jmp 0x2730
0xb420: lea rsi,[rip+0xb540]
0xb427: xor edi,edi
0xb429: jmp 0x2730
0xb430: lea rsi,[rip+0xb547]
0xb437: xor edi,edi
0xb439: jmp 0x2730
0xb5d0: mov edi,dword ptr [rdi + 0x18]
0xb5d3: jmp 0xb440
0xb5f8: nop dword ptr [rax + rax*0x1]
0xb820: mov rax,rdi
0xb823: xor edx,edx
0xb825: ror rax,0x3
0xb829: div rsi
0xb82c: mov rax,rdx
0xb82f: ret 
0xb830: cmp rdi,rsi
0xb833: setz al
0xb836: ret 
0xb862: nop dword ptr [rax]
0xb866: nop word ptr cs:[rax + rax*0x1]
0xbb50: mov rax,qword ptr [rdi + 0x10]
0xbb54: ret 
0xbb60: mov rax,qword ptr [rdi + 0x18]
0xbb64: ret 
0xbb70: mov rax,qword ptr [rdi + 0x20]
0xbb74: ret 
0xbb80: mov rsi,qword ptr [rdi]
0xbb83: mov rdi,qword ptr [rdi + 0x8]
0xbb87: xor eax,eax
0xbb89: cmp rsi,rdi
0xbb8c: jnc 0xbbc7
0xbb8e: nop 
0xbb90: cmp qword ptr [rsi],0x0
0xbb94: jz 0xbbbc
0xbb96: mov rdx,qword ptr [rsi + 0x8]
0xbb9a: mov ecx,0x1
0xbb9f: test rdx,rdx
0xbba2: jz 0xbbb5
0xbba4: nop dword ptr [rax]
0xbba8: mov rdx,qword ptr [rdx + 0x8]
0xbbac: add rcx,0x1
0xbbb0: test rdx,rdx
0xbbb3: jnz 0xbba8
0xbbb5: cmp rax,rcx
0xbbb8: cmovc rax,rcx
0xbbbc: add rsi,0x10
0xbbc0: cmp rsi,rdi
0xbbc3: jc 0xbb90
0xbbc5: ret 
0xbbc7: ret 
0xbbd0: mov rcx,qword ptr [rdi]
0xbbd3: mov r8,qword ptr [rdi + 0x8]
0xbbd7: xor edx,edx
0xbbd9: xor esi,esi
0xbbdb: cmp rcx,r8
0xbbde: jnc 0xbc16
0xbbe0: cmp qword ptr [rcx],0x0
0xbbe4: jz 0xbc0d
0xbbe6: mov rax,qword ptr [rcx + 0x8]
0xbbea: add rsi,0x1
0xbbee: add rdx,0x1
0xbbf2: test rax,rax
0xbbf5: jz 0xbc0d
0xbbf7: nop word ptr [rax + rax*0x1]
0xbc00: mov rax,qword ptr [rax + 0x8]
0xbc04: add rdx,0x1
0xbc08: test rax,rax
0xbc0b: jnz 0xbc00
0xbc0d: add rcx,0x10
0xbc11: cmp rcx,r8
0xbc14: jc 0xbbe0
0xbc16: xor eax,eax
0xbc18: cmp qword ptr [rdi + 0x18],rsi
0xbc1c: jz 0xbc20
0xbc1e: ret 
0xbc20: cmp qword ptr [rdi + 0x20],rdx
0xbc24: setz al
0xbc27: ret 
0xbc30: push r13
0xbc32: push r12
0xbc34: mov r12,rsi
0xbc37: push rbp
0xbc38: push rbx
0xbc39: xor ebx,ebx
0xbc3b: sub rsp,0x8
0xbc3f: mov rsi,qword ptr [rdi]
0xbc42: mov rcx,qword ptr [rdi + 0x20]
0xbc46: mov rbp,qword ptr [rdi + 0x10]
0xbc4a: mov r13,qword ptr [rdi + 0x18]
0xbc4e: mov rdi,qword ptr [rdi + 0x8]
0xbc52: cmp rsi,rdi
0xbc55: jnc 0xbc95
0xbc57: nop word ptr [rax + rax*0x1]
0xbc60: cmp qword ptr [rsi],0x0
0xbc64: jz 0xbc8c
0xbc66: mov rax,qword ptr [rsi + 0x8]
0xbc6a: mov edx,0x1
0xbc6f: test rax,rax
0xbc72: jz 0xbc85
0xbc74: nop dword ptr [rax]
0xbc78: mov rax,qword ptr [rax + 0x8]
0xbc7c: add rdx,0x1
0xbc80: test rax,rax
0xbc83: jnz 0xbc78
0xbc85: cmp rbx,rdx
0xbc88: cmovc rbx,rdx
0xbc8c: add rsi,0x10
0xbc90: cmp rsi,rdi
0xbc93: jc 0xbc60
0xbc95: lea rdx,[rip+0xacf9]
0xbc9c: mov esi,0x1
0xbca1: mov rdi,r12
0xbca4: xor eax,eax
0xbca6: call 0x2c20
0xbcab: lea rdx,[rip+0xacfb]
0xbcb2: xor eax,eax
0xbcb4: mov rcx,rbp
0xbcb7: mov esi,0x1
0xbcbc: mov rdi,r12
0xbcbf: call 0x2c20
0xbcc4: test r13,r13
0xbcc7: js 0xbd30
0xbcc9: pxor xmm0,xmm0
0xbccd: test rbp,rbp
0xbcd0: cvtsi2sd xmm0,r13
0xbcd5: mulsd xmm0,qword ptr [rip+0xad6b]
0xbcdd: js 0xbd59
0xbcdf: pxor xmm1,xmm1
0xbce3: cvtsi2sd xmm1,rbp
0xbce8: divsd xmm0,xmm1
0xbcec: lea rdx,[rip+0xaced]
0xbcf3: mov rcx,r13
0xbcf6: mov rdi,r12
0xbcf9: mov esi,0x1
0xbcfe: mov eax,0x1
0xbd03: call 0x2c20
0xbd08: add rsp,0x8
0xbd0c: mov rcx,rbx
0xbd0f: mov rdi,r12
0xbd12: pop rbx
0xbd13: pop rbp
0xbd14: pop r12
0xbd16: pop r13
0xbd18: lea rdx,[rip+0xaca6]
0xbd1f: mov esi,0x1
0xbd24: xor eax,eax
0xbd26: jmp 0x2c20
0xbd30: mov rax,r13
0xbd33: mov rdx,r13
0xbd36: pxor xmm0,xmm0
0xbd3a: shr rax,1
0xbd3d: and edx,0x1
0xbd40: or rax,rdx
0xbd43: test rbp,rbp
0xbd46: cvtsi2sd xmm0,rax
0xbd4b: addsd xmm0,xmm0
0xbd4f: mulsd xmm0,qword ptr [rip+0xacf1]
0xbd57: jns 0xbcdf
0xbd59: mov rax,rbp
0xbd5c: pxor xmm1,xmm1
0xbd60: shr rax,1
0xbd63: and ebp,0x1
0xbd66: or rax,rbp
0xbd69: cvtsi2sd xmm1,rax
0xbd6e: addsd xmm1,xmm1
0xbd72: jmp 0xbce8
0xbda0: mov rsi,qword ptr [rbx]
0xbdb0: test al,al
0xbdb2: jnz 0xbdd0
0xbdb4: mov rbx,qword ptr [rbx + 0x8]
0xbdb8: test rbx,rbx
0xbdbb: jnz 0xbda0
0xbdd0: mov rsi,qword ptr [rbx]
0xbdd3: pop rbx
0xbdd4: pop rbp
0xbdd5: mov rax,rsi
0xbdd8: pop r12
0xbdda: ret 
0xbde0: cmp qword ptr [rdi + 0x20],0x0
0xbde5: jz 0xbe13
0xbde7: mov rdx,qword ptr [rdi]
0xbdea: mov rcx,qword ptr [rdi + 0x8]
0xbdee: cmp rdx,rcx
0xbdf1: jnc 0xbe18
0xbdf3: mov rax,qword ptr [rdx]
0xbdf6: test rax,rax
0xbdf9: jnz 0xbe16
0xbdfb: nop dword ptr [rax + rax*0x1]
0xbe00: add rdx,0x10
0xbe04: cmp rdx,rcx
0xbe07: jnc 0xbe18
0xbe09: mov rax,qword ptr [rdx]
0xbe0c: test rax,rax
0xbe0f: jz 0xbe00
0xbe11: ret 
0xbe13: xor eax,eax
0xbe15: ret 
0xbe16: ret 
0xbe18: sub rsp,0x8
0xbe1c: call 0x2590
0xbe21: nop dword ptr [rax + rax*0x1]
0xbe26: nop word ptr cs:[rax + rax*0x1]
0xbe30: push rbp
0xbe31: push rbx
0xbe32: mov rbp,rdi
0xbe35: mov rbx,rsi
0xbe38: sub rsp,0x8
0xbe3c: call 0xb840
0xbe41: mov rdx,rax
0xbe44: mov rcx,rax
0xbe47: mov rax,qword ptr [rdx]
0xbe4a: mov rdx,qword ptr [rdx + 0x8]
0xbe4e: cmp rax,rbx
0xbe51: jz 0xbe69
0xbe53: nop dword ptr [rax + rax*0x1]
0xbe58: test rdx,rdx
0xbe5b: jz 0xbe6e
0xbe5d: mov rax,qword ptr [rdx]
0xbe60: mov rdx,qword ptr [rdx + 0x8]
0xbe64: cmp rax,rbx
0xbe67: jnz 0xbe58
0xbe69: test rdx,rdx
0xbe6c: jnz 0xbe98
0xbe6e: mov rdx,qword ptr [rbp + 0x8]
0xbe72: jmp 0xbe80
0xbe78: mov rax,qword ptr [rcx]
0xbe7b: test rax,rax
0xbe7e: jnz 0xbe8b
0xbe80: add rcx,0x10
0xbe84: cmp rdx,rcx
0xbe87: ja 0xbe78
0xbe89: xor eax,eax
0xbe8b: add rsp,0x8
0xbe8f: pop rbx
0xbe90: pop rbp
0xbe91: ret 
0xbe98: mov rax,qword ptr [rdx]
0xbe9b: add rsp,0x8
0xbe9f: pop rbx
0xbea0: pop rbp
0xbea1: ret 
0xbeb0: mov r9,qword ptr [rdi]
0xbeb3: cmp qword ptr [rdi + 0x8],r9
0xbeb7: jbe 0xbf12
0xbeb9: xor r8d,r8d
0xbebc: mov rcx,qword ptr [r9]
0xbebf: test rcx,rcx
0xbec2: jz 0xbefd
0xbec4: cmp rdx,r8
0xbec7: jbe 0xbf07
0xbec9: mov qword ptr [rsi + r8*0x8],rcx
0xbecd: mov rcx,qword ptr [r9 + 0x8]
0xbed1: lea rax,[r8 + 0x1]
0xbed5: test rcx,rcx
0xbed8: jz 0xbefa
0xbeda: nop word ptr [rax + rax*0x1]
0xbee0: cmp rdx,rax
0xbee3: jz 0xbf10
0xbee5: mov r8,qword ptr [rcx]
0xbee8: add rax,0x1
0xbeec: mov qword ptr [rsi + rax*0x8 - 0x8],r8
0xbef1: mov rcx,qword ptr [rcx + 0x8]
0xbef5: test rcx,rcx
0xbef8: jnz 0xbee0
0xbefa: mov r8,rax
0xbefd: add r9,0x10
0xbf01: cmp qword ptr [rdi + 0x8],r9
0xbf05: ja 0xbebc
0xbf07: mov rax,r8
0xbf0a: ret 
0xbf10: ret 
0xbf12: xor eax,eax
0xbf14: ret 
0xbf20: push r15
0xbf22: push r14
0xbf24: push r13
0xbf26: push r12
0xbf28: push rbp
0xbf29: push rbx
0xbf2a: sub rsp,0x8
0xbf2e: mov r14,qword ptr [rdi]
0xbf31: cmp qword ptr [rdi + 0x8],r14
0xbf35: jbe 0xbf86
0xbf37: mov r13,rdx
0xbf3a: mov r12,rsi
0xbf3d: mov r15,rdi
0xbf40: xor ebp,ebp
0xbf42: mov rdi,qword ptr [r14]
0xbf45: test rdi,rdi
0xbf48: jz 0xbf6a
0xbf4a: mov rbx,r14
0xbf4d: jmp 0xbf53
0xbf50: mov rdi,qword ptr [rbx]
0xbf53: mov rsi,r13
0xbf56: call r12
0xbf59: test al,al
0xbf5b: jz 0xbf74
0xbf5d: mov rbx,qword ptr [rbx + 0x8]
0xbf61: add rbp,0x1
0xbf65: test rbx,rbx
0xbf68: jnz 0xbf50
0xbf6a: add r14,0x10
0xbf6e: cmp qword ptr [r15 + 0x8],r14
0xbf72: ja 0xbf42
0xbf74: add rsp,0x8
0xbf78: mov rax,rbp
0xbf7b: pop rbx
0xbf7c: pop rbp
0xbf7d: pop r12
0xbf7f: pop r13
0xbf81: pop r14
0xbf83: pop r15
0xbf85: ret 
0xbf86: xor ebp,ebp
0xbf88: jmp 0xbf74
0xbf90: movzx ecx,byte ptr [rdi]
0xbf93: xor edx,edx
0xbf95: test cl,cl
0xbf97: jz 0xbfbd
0xbf99: nop dword ptr [rax]
0xbfa0: mov rax,rdx
0xbfa3: add rdi,0x1
0xbfa7: shl rax,0x5
0xbfab: sub rax,rdx
0xbfae: xor edx,edx
0xbfb0: add rax,rcx
0xbfb3: movzx ecx,byte ptr [rdi]
0xbfb6: div rsi
0xbfb9: test cl,cl
0xbfbb: jnz 0xbfa0
0xbfbd: mov rax,rdx
0xbfc0: ret 
0xbfd0: mov rax,0x3f80000000000000
0xbfda: mov byte ptr [rdi + 0x10],0x0
0xbfde: mov qword ptr [rdi],rax
0xbfe1: mov rax,0x3fb4fdf43f4ccccd
0xbfeb: mov qword ptr [rdi + 0x8],rax
0xbfef: ret 
0xc04c: mov qword ptr [rax + 0x28],r15
0xc050: call 0xb990
0xc055: test al,al
0xc057: jz 0xc0e0
0xc05d: cmp byte ptr [r15 + 0x10],0x0
0xc062: jz 0xc160
0xc160: test rbp,rbp
0xc163: movss xmm1,dword ptr [r15 + 0x8]
0xc169: jns 0xc121
0xc1b0: push r12
0xc1b2: push rbp
0xc1b3: mov rbp,rdi
0xc1b6: push rbx
0xc1b7: mov r12,qword ptr [rdi]
0xc1ba: cmp r12,qword ptr [rdi + 0x8]
0xc1be: jnc 0xc22b
0xc1c0: cmp qword ptr [r12],0x0
0xc1c5: jz 0xc221
0xc1c7: mov rbx,qword ptr [r12 + 0x8]
0xc1cc: mov rax,qword ptr [rbp + 0x40]
0xc1d0: test rbx,rbx
0xc1d3: jz 0xc205
0xc1d5: nop dword ptr [rax]
0xc1d8: test rax,rax
0xc1db: jz 0xc1e6
0xc1dd: mov rdi,qword ptr [rbx]
0xc1e0: call rax
0xc1e2: mov rax,qword ptr [rbp + 0x40]
0xc1e6: mov rdx,qword ptr [rbx + 0x8]
0xc1ea: mov rcx,qword ptr [rbp + 0x48]
0xc1ee: mov qword ptr [rbx],0x0
0xc1f5: test rdx,rdx
0xc1f8: mov qword ptr [rbx + 0x8],rcx
0xc1fc: mov qword ptr [rbp + 0x48],rbx
0xc200: mov rbx,rdx
0xc203: jnz 0xc1d8
0xc205: test rax,rax
0xc208: jz 0xc210
0xc20a: mov rdi,qword ptr [r12]
0xc20e: call rax
0xc210: mov qword ptr [r12],0x0
0xc218: mov qword ptr [r12 + 0x8],0x0
0xc221: add r12,0x10
0xc225: cmp qword ptr [rbp + 0x8],r12
0xc229: ja 0xc1c0
0xc22b: mov qword ptr [rbp + 0x18],0x0
0xc233: mov qword ptr [rbp + 0x20],0x0
0xc23b: pop rbx
0xc23c: pop rbp
0xc23d: pop r12
0xc23f: ret 
0xc280: mov rdi,qword ptr [rbx]
0xc288: mov rbx,qword ptr [rbx + 0x8]
0xc28c: test rbx,rbx
0xc28f: jnz 0xc280
0xc291: mov rax,qword ptr [r12 + 0x8]
0xc54a: call 0x2780
0xc55e: nop 
0xc742: nop word ptr [rax + rax*0x1]
0xc7df: call 0x2780
0xc7e4: nop 
0xc7e6: nop word ptr cs:[rax + rax*0x1]
0xc844: call 0x2780
0xc849: nop dword ptr [rax]
0xca4e: call 0x2780
0xca53: nop word ptr cs:[rax + rax*0x1]
0xca5d: nop dword ptr [rax]
0xca60: push rbp
0xca61: push rbx
0xca62: mov rbp,rdi
0xca65: mov rbx,rsi
0xca68: sub rsp,0x8
0xca6c: mov rdi,qword ptr [rdi]
0xca6f: call 0x13c70
0xca74: xor rax,qword ptr [rbp + 0x8]
0xca78: xor edx,edx
0xca7a: add rsp,0x8
0xca7e: div rbx
0xca81: pop rbx
0xca82: pop rbp
0xca83: mov rax,rdx
0xca86: ret 
0xca90: mov rax,qword ptr [rdi + 0x8]
0xca94: xor edx,edx
0xca96: div rsi
0xca99: mov rax,rdx
0xca9c: ret 
0xcaa0: xor eax,eax
0xcaa2: mov rdx,qword ptr [rsi + 0x8]
0xcaa6: cmp qword ptr [rdi + 0x8],rdx
0xcaaa: jz 0xcab0
0xcaac: ret 
0xcab0: mov rcx,qword ptr [rsi + 0x10]
0xcab4: cmp qword ptr [rdi + 0x10],rcx
0xcab8: jnz 0xcaac
0xcaba: sub rsp,0x8
0xcabe: mov rsi,qword ptr [rsi]
0xcac1: mov rdi,qword ptr [rdi]
0xcac4: call 0xeee0
0xcac9: add rsp,0x8
0xcacd: ret 
0xcad0: xor eax,eax
0xcad2: mov rdx,qword ptr [rsi + 0x8]
0xcad6: cmp qword ptr [rdi + 0x8],rdx
0xcada: jz 0xcae0
0xcadc: ret 
0xcae0: mov rcx,qword ptr [rsi + 0x10]
0xcae4: cmp qword ptr [rdi + 0x10],rcx
0xcae8: jnz 0xcadc
0xcaea: sub rsp,0x8
0xcaee: mov rsi,qword ptr [rsi]
0xcaf1: mov rdi,qword ptr [rdi]
0xcaf4: call 0x2930
0xcaf9: test eax,eax
0xcafb: setz al
0xcafe: add rsp,0x8
0xcb02: ret 
0xcb10: push rbx
0xcb11: mov rbx,rdi
0xcb14: mov rdi,qword ptr [rdi]
0xcb17: call 0x2c80
0xcb1c: mov rdi,rbx
0xcb1f: pop rbx
0xcb20: jmp 0x2c80
0xcc4f: nop 
0xccb8: mov ebp,0xfffffffe
0xccbd: jmp 0xcc9a
0xccbf: call 0x2780
0xccc4: nop word ptr cs:[rax + rax*0x1]
0xccce: nop 
0xcd1f: call 0x2780
0xcd24: nop word ptr cs:[rax + rax*0x1]
0xcd2e: nop 
0xd15b: mov ebx,edx
0xd15d: xor r12d,r12d
0xd160: xor eax,eax
0xd66f: lea rcx,[rbp + 0x2]
0xd673: cmp rcx,r11
0xd676: jnc 0xd690
0xd678: mov rax,qword ptr [rsp + 0x10]
0xd67d: cmp byte ptr [rax + rbp*0x1 + 0x1],0x3f
0xd682: jz 0xde12
0xd688: nop dword ptr [rax + rax*0x1]
0xde12: movzx ebx,byte ptr [rax + rcx*0x1]
0xde16: cmp bl,0x3e
0xde19: ja 0xd690
0xde1f: mov rax,0x7000a38200000000
0xde29: bt rax,rbx
0xde2d: jnc 0xd690
0xde33: cmp byte ptr [rsp + 0xf],0x0
0xde38: jnz 0xe022
0xde3e: cmp r13,r15
0xde41: jbe 0xde48
0xde43: mov byte ptr [r14 + r15*0x1],0x3f
0xde48: lea rax,[r15 + 0x1]
0xde4c: cmp r13,rax
0xde4f: jbe 0xde57
0xde51: mov byte ptr [r14 + r15*0x1 + 0x1],0x22
0xde57: lea rax,[r15 + 0x2]
0xde5b: cmp r13,rax
0xde5e: jbe 0xde66
0xde60: mov byte ptr [r14 + r15*0x1 + 0x2],0x22
0xde66: lea rax,[r15 + 0x3]
0xde6a: cmp r13,rax
0xde6d: jbe 0xde75
0xde6f: mov byte ptr [r14 + r15*0x1 + 0x3],0x3f
0xde75: add r15,0x4
0xde79: xor edx,edx
0xde7b: xor r12d,r12d
0xde7e: xor eax,eax
0xde80: mov rbp,rcx
0xde83: jmp 0xd048
0xde90: lea rax,[rip+0x8c0e]
0xde97: mov byte ptr [rsp + 0xe],0x1
0xde9c: mov byte ptr [rsp + 0x7c],0x0
0xdea1: xor r12d,r12d
0xdea4: mov qword ptr [rsp + 0x50],0x0
0xdead: mov byte ptr [rsp + 0xf],0x1
0xdeb2: mov byte ptr [rsp + 0xd],0x0
0xdeb7: mov qword ptr [rsp + 0x18],0x1
0xdec0: xor r15d,r15d
0xdec3: mov qword ptr [rsp + 0x48],rax
0xdec8: jmp 0xcef3
0xdedd: lea rax,[rip+0x8bbf]
0xdee4: mov byte ptr [rsp + 0xe],0x1
0xdee9: mov byte ptr [rsp + 0x7c],0x0
0xdeee: xor r12d,r12d
0xdef1: mov qword ptr [rsp + 0x50],0x0
0xdefa: mov byte ptr [rsp + 0xf],0x1
0xdeff: mov byte ptr [rsp + 0xd],0x1
0xdf04: mov qword ptr [rsp + 0x18],0x1
0xdf0d: xor r15d,r15d
0xdf10: mov qword ptr [rsp + 0x48],rax
0xdf15: jmp 0xcef3
0xe013: call 0x2780
0xe022: mov rbp,r11
0xe025: jmp 0xd9c0
0xe054: nop 
0xe056: nop word ptr cs:[rax + rax*0x1]
0xe20b: nop dword ptr [rax + rax*0x1]
0xe210: push r12
0xe212: push rbp
0xe213: push rbx
0xe214: mov rbx,rdi
0xe217: call 0x25a0
0xe21c: mov r12d,dword ptr [rax]
0xe21f: mov rbp,rax
0xe222: lea rax,[rip+0x20e477]
0xe229: test rbx,rbx
0xe22c: mov esi,0x38
0xe231: cmovz rbx,rax
0xe235: mov rdi,rbx
0xe238: call 0x10ec0
0xe23d: mov dword ptr [rbp],r12d
0xe241: pop rbx
0xe242: pop rbp
0xe243: pop r12
0xe245: ret 
0xe250: lea rax,[rip+0x20e449]
0xe257: test rdi,rdi
0xe25a: cmovz rdi,rax
0xe25e: mov eax,dword ptr [rdi]
0xe260: ret 
0xe270: lea rax,[rip+0x20e429]
0xe277: test rdi,rdi
0xe27a: cmovz rdi,rax
0xe27e: mov dword ptr [rdi],esi
0xe280: ret 
0xe290: lea rax,[rip+0x20e409]
0xe297: test rdi,rdi
0xe29a: mov ecx,esi
0xe29c: cmovz rdi,rax
0xe2a0: mov eax,esi
0xe2a2: and ecx,0x1f
0xe2a5: shr al,0x5
0xe2a8: movzx eax,al
0xe2ab: lea rdi,[rdi + rax*0x4 + 0x8]
0xe2b0: mov esi,dword ptr [rdi]
0xe2b2: mov eax,esi
0xe2b4: shr eax,cl
0xe2b6: xor edx,eax
0xe2b8: and eax,0x1
0xe2bb: and edx,0x1
0xe2be: shl edx,cl
0xe2c0: xor edx,esi
0xe2c2: mov dword ptr [rdi],edx
0xe2c4: ret 
0xe2d0: lea rax,[rip+0x20e3c9]
0xe2d7: test rdi,rdi
0xe2da: cmovz rdi,rax
0xe2de: mov eax,dword ptr [rdi + 0x4]
0xe2e1: mov dword ptr [rdi + 0x4],esi
0xe2e4: ret 
0xe2f0: lea rax,[rip+0x20e3a9]
0xe2f7: test rdi,rdi
0xe2fa: cmovz rdi,rax
0xe2fe: test rsi,rsi
0xe301: mov dword ptr [rdi],0xa
0xe307: jz 0xe317
0xe309: test rdx,rdx
0xe30c: jz 0xe317
0xe30e: mov qword ptr [rdi + 0x28],rsi
0xe312: mov qword ptr [rdi + 0x30],rdx
0xe316: ret 
0xe317: sub rsp,0x8
0xe31b: call 0x2590
0xe320: push r15
0xe322: push r14
0xe324: lea rax,[rip+0x20e375]
0xe32b: push r13
0xe32d: push r12
0xe32f: mov r13,rdi
0xe332: push rbp
0xe333: push rbx
0xe334: mov rbx,r8
0xe337: mov r14,rsi
0xe33a: mov r15,rdx
0xe33d: sub rsp,0x18
0xe341: test r8,r8
0xe344: cmovz rbx,rax
0xe348: mov qword ptr [rsp + 0x8],rcx
0xe34d: call 0x25a0
0xe352: mov r12d,dword ptr [rax]
0xe355: mov rbp,rax
0xe358: lea rax,[rbx + 0x8]
0xe35c: sub rsp,0x8
0xe360: mov r9d,dword ptr [rbx + 0x4]
0xe364: push qword ptr [rbx + 0x30]
0xe367: mov r8d,dword ptr [rbx]
0xe36a: push qword ptr [rbx + 0x28]
0xe36d: mov rdx,r15
0xe370: push rax
0xe371: mov rcx,qword ptr [rsp + 0x28]
0xe376: mov rsi,r14
0xe379: mov rdi,r13
0xe37c: call 0xce20
0xe381: mov dword ptr [rbp],r12d
0xe385: add rsp,0x38
0xe389: pop rbx
0xe38a: pop rbp
0xe38b: pop r12
0xe38d: pop r13
0xe38f: pop r14
0xe391: pop r15
0xe393: ret 
0xe3a0: push r15
0xe3a2: push r14
0xe3a4: lea rax,[rip+0x20e2f5]
0xe3ab: push r13
0xe3ad: push r12
0xe3af: mov r12,rdx
0xe3b2: push rbp
0xe3b3: push rbx
0xe3b4: mov rbx,rcx
0xe3b7: mov r14,rdi
0xe3ba: mov r15,rsi
0xe3bd: sub rsp,0x38
0xe3c1: test rcx,rcx
0xe3c4: cmovz rbx,rax
0xe3c8: xor ebp,ebp
0xe3ca: call 0x25a0
0xe3cf: test r12,r12
0xe3d2: mov r13,rax
0xe3d5: mov eax,dword ptr [rax]
0xe3d7: setz bpl
0xe3db: or ebp,dword ptr [rbx + 0x4]
0xe3de: lea r10,[rbx + 0x8]
0xe3e2: sub rsp,0x8
0xe3e6: mov r8d,dword ptr [rbx]
0xe3e9: mov rcx,r15
0xe3ec: mov dword ptr [rsp + 0x14],eax
0xe3f0: push qword ptr [rbx + 0x30]
0xe3f3: mov rdx,r14
0xe3f6: push qword ptr [rbx + 0x28]
0xe3f9: push r10
0xe3fb: xor esi,esi
0xe3fd: mov r9d,ebp
0xe400: xor edi,edi
0xe402: mov qword ptr [rsp + 0x40],r10
0xe407: call 0xce20
0xe40c: lea rsi,[rax + 0x1]
0xe410: mov qword ptr [rsp + 0x48],rax
0xe415: add rsp,0x20
0xe419: mov rdi,rsi
0xe41c: mov qword ptr [rsp + 0x18],rsi
0xe421: call 0x10cc0
0xe426: mov qword ptr [rsp + 0x10],rax
0xe42b: sub rsp,0x8
0xe42f: push qword ptr [rbx + 0x30]
0xe432: push qword ptr [rbx + 0x28]
0xe435: mov r10,qword ptr [rsp + 0x38]
0xe43a: mov r9d,ebp
0xe43d: mov r8d,dword ptr [rbx]
0xe440: mov rcx,r15
0xe443: mov rdx,r14
0xe446: mov rdi,rax
0xe449: push r10
0xe44b: mov rsi,qword ptr [rsp + 0x38]
0xe450: call 0xce20
0xe455: mov eax,dword ptr [rsp + 0x2c]
0xe459: add rsp,0x20
0xe45d: test r12,r12
0xe460: mov dword ptr [r13],eax
0xe464: jz 0xe46f
0xe466: mov r11,qword ptr [rsp + 0x28]
0xe46b: mov qword ptr [r12],r11
0xe46f: mov rax,qword ptr [rsp + 0x10]
0xe474: add rsp,0x38
0xe478: pop rbx
0xe479: pop rbp
0xe47a: pop r12
0xe47c: pop r13
0xe47e: pop r14
0xe480: pop r15
0xe482: ret 
0xe490: mov rcx,rdx
0xe493: xor edx,edx
0xe495: jmp 0xe3a0
0xe4a0: mov eax,dword ptr [rip+0x20dbd2]
0xe4a6: push r12
0xe4a8: mov r12,qword ptr [rip+0x20dbd1]
0xe4af: push rbp
0xe4b0: push rbx
0xe4b1: cmp eax,0x1
0xe4b4: jle 0xe4e1
0xe4b6: sub eax,0x2
0xe4b9: lea rbx,[r12 + 0x18]
0xe4be: shl rax,0x4
0xe4c2: lea rbp,[r12 + rax*0x1 + 0x28]
0xe4c7: nop word ptr [rax + rax*0x1]
0xe4d0: mov rdi,qword ptr [rbx]
0xe4d3: add rbx,0x10
0xe4d7: call 0x2c80
0xe4dc: cmp rbx,rbp
0xe4df: jnz 0xe4d0
0xe4e1: mov rdi,qword ptr [r12 + 0x8]
0xe4e6: lea rbx,[rip+0x20e0b3]
0xe4ed: cmp rdi,rbx
0xe4f0: jz 0xe509
0xe4f2: call 0x2c80
0xe4f7: mov qword ptr [rip+0x20db8e],0x100
0xe502: mov qword ptr [rip+0x20db8f],rbx
0xe509: lea rbx,[rip+0x20db80]
0xe510: cmp r12,rbx
0xe513: jz 0xe524
0xe515: mov rdi,r12
0xe518: call 0x2c80
0xe51d: mov qword ptr [rip+0x20db5c],rbx
0xe524: pop rbx
0xe525: mov dword ptr [rip+0x20db49],0x1
0xe52f: pop rbp
0xe530: pop r12
0xe532: ret 
0xe540: lea rcx,[rip+0x20e159]
0xe547: mov rdx,-0x1
0xe54e: jmp 0xe060
0xe560: lea rcx,[rip+0x20e139]
0xe567: jmp 0xe060
0xe570: lea rcx,[rip+0x20e129]
0xe577: mov rsi,rdi
0xe57a: mov rdx,-0x1
0xe581: xor edi,edi
0xe583: jmp 0xe060
0xe590: lea rcx,[rip+0x20e109]
0xe597: mov rdx,rsi
0xe59a: mov rsi,rdi
0xe59d: xor edi,edi
0xe59f: jmp 0xe060
0xe634: call 0x2590
0xe639: call 0x2780
0xe63e: nop 
0xe640: sub rsp,0x48
0xe644: mov rax,rdx
0xe647: mov rdx,rcx
0xe64a: mov rcx,qword ptr fs:[rip+0xffffffffffff19d5]
0xe653: mov qword ptr [rsp + 0x38],rcx
0xe658: xor ecx,ecx
0xe65a: cmp esi,0xa
0xe65d: jz 0xe6c0
0xe65f: mov dword ptr [rsp],esi
0xe662: mov rcx,rsp
0xe665: mov rsi,rax
0xe668: mov qword ptr [rsp + 0x4],0x0
0xe671: mov qword ptr [rsp + 0xc],0x0
0xe67a: mov qword ptr [rsp + 0x14],0x0
0xe683: mov qword ptr [rsp + 0x1c],0x0
0xe68c: mov qword ptr [rsp + 0x24],0x0
0xe695: mov qword ptr [rsp + 0x2c],0x0
0xe69e: mov dword ptr [rsp + 0x34],0x0
0xe6a6: call 0xe060
0xe6ab: mov rdx,qword ptr [rsp + 0x38]
0xe6b0: xor rdx,qword ptr fs:[rip+0xffffffffffff196f]
0xe6b9: jnz 0xe6c5
0xe6bb: add rsp,0x48
0xe6bf: ret 
0xe6c0: call 0x2590
0xe6c5: call 0x2780
0xe6ca: nop word ptr [rax + rax*0x1]
0xe6e0: mov rcx,rdx
0xe6e3: mov rdx,rsi
0xe6e6: mov esi,edi
0xe6e8: xor edi,edi
0xe6ea: jmp 0xe640
0xe6f0: sub rsp,0x48
0xe6f4: mov ecx,edx
0xe6f6: mov rax,qword ptr fs:[rip+0xffffffffffff1929]
0xe6ff: mov qword ptr [rsp + 0x38],rax
0xe704: xor eax,eax
0xe706: mov rax,qword ptr [rip+0x20dfc3]
0xe70d: mov r8,rsp
0xe710: and ecx,0x1f
0xe713: movdqa xmm0,[rip+0x20df85]
0xe71b: mov qword ptr [rsp + 0x30],rax
0xe720: mov eax,edx
0xe722: movaps xmmword ptr [rsp],xmm0
0xe726: shr al,0x5
0xe729: movzx eax,al
0xe72c: lea r9,[r8 + rax*0x4 + 0x8]
0xe731: movdqa xmm0,[rip+0x20df77]
0xe739: movaps xmmword ptr [rsp + 0x10],xmm0
0xe73e: movdqa xmm0,[rip+0x20df7a]
0xe746: movaps xmmword ptr [rsp + 0x20],xmm0
0xe74b: mov edx,dword ptr [r9]
0xe74e: mov eax,edx
0xe750: shr eax,cl
0xe752: not eax
0xe754: and eax,0x1
0xe757: shl eax,cl
0xe759: mov rcx,r8
0xe75c: xor eax,edx
0xe75e: mov rdx,rsi
0xe761: mov rsi,rdi
0xe764: mov dword ptr [r9],eax
0xe767: xor edi,edi
0xe769: call 0xe060
0xe76e: mov rsi,qword ptr [rsp + 0x38]
0xe773: xor rsi,qword ptr fs:[rip+0xffffffffffff18ac]
0xe77c: jnz 0xe783
0xe77e: add rsp,0x48
0xe782: ret 
0xe783: call 0x2780
0xe788: nop dword ptr [rax + rax*0x1]
0xe790: movsx edx,sil
0xe794: mov rsi,-0x1
0xe79b: jmp 0xe6f0
0xe7a0: mov edx,0x3a
0xe7a5: mov rsi,-0x1
0xe7ac: jmp 0xe6f0
0xe7c0: mov edx,0x3a
0xe7c5: jmp 0xe6f0
0xe854: call 0x2590
0xe859: call 0x2780
0xe85e: nop 
0xe860: sub rsp,0x48
0xe864: mov r9,rcx
0xe867: mov rcx,qword ptr [rip+0x20de62]
0xe86e: movdqa xmm0,[rip+0x20de2a]
0xe876: mov rax,qword ptr fs:[rip+0xffffffffffff17a9]
0xe87f: mov qword ptr [rsp + 0x38],rax
0xe884: xor eax,eax
0xe886: movaps xmmword ptr [rsp],xmm0
0xe88a: test rsi,rsi
0xe88d: mov qword ptr [rsp + 0x30],rcx
0xe892: mov dword ptr [rsp],0xa
0xe899: movdqa xmm0,[rip+0x20de0f]
0xe8a1: movaps xmmword ptr [rsp + 0x10],xmm0
0xe8a6: movdqa xmm0,[rip+0x20de12]
0xe8ae: movaps xmmword ptr [rsp + 0x20],xmm0
0xe8b3: jz 0xe8e7
0xe8b5: test rdx,rdx
0xe8b8: jz 0xe8e7
0xe8ba: mov qword ptr [rsp + 0x28],rsi
0xe8bf: mov qword ptr [rsp + 0x30],rdx
0xe8c4: mov rcx,rsp
0xe8c7: mov rdx,r8
0xe8ca: mov rsi,r9
0xe8cd: call 0xe060
0xe8d2: mov rdi,qword ptr [rsp + 0x38]
0xe8d7: xor rdi,qword ptr fs:[rip+0xffffffffffff1748]
0xe8e0: jnz 0xe8ec
0xe8e2: add rsp,0x48
0xe8e6: ret 
0xe8e7: call 0x2590
0xe8ec: call 0x2780
0xe8f1: nop dword ptr [rax + rax*0x1]
0xe8f6: nop word ptr cs:[rax + rax*0x1]
0xe900: mov r8,-0x1
0xe907: jmp 0xe860
0xe910: mov rcx,rdx
0xe913: mov r8,-0x1
0xe91a: mov rdx,rsi
0xe91d: mov rsi,rdi
0xe920: xor edi,edi
0xe922: jmp 0xe860
0xe930: mov r8,rcx
0xe933: mov rcx,rdx
0xe936: mov rdx,rsi
0xe939: mov rsi,rdi
0xe93c: xor edi,edi
0xe93e: jmp 0xe860
0xe950: lea rcx,[rip+0x20d6e9]
0xe957: jmp 0xe060
0xe960: lea rcx,[rip+0x20d6d9]
0xe967: mov rdx,rsi
0xe96a: mov rsi,rdi
0xe96d: xor edi,edi
0xe96f: jmp 0xe060
0xec25: call 0x2780
0xec2a: nop word ptr [rax + rax*0x1]
0xec9c: call 0x2780
0xeca1: nop word ptr cs:[rax + rax*0x1]
0xecab: nop dword ptr [rax + rax*0x1]
0xee05: jmp 0xed98
0xee2d: jmp 0xed64
0xee32: call 0x2780
0xee37: nop word ptr [rax + rax*0x1]
0xef00: mov rax,qword ptr [rsi + 0x8]
0xef04: cmp qword ptr [rdi + 0x8],rax
0xef08: jc 0xef18
0xef0a: seta al
0xef0d: movzx eax,al
0xef10: ret 
0xef18: mov eax,0xffffffff
0xef1d: ret 
0xef20: mov rsi,qword ptr [rsi]
0xef23: mov rdi,qword ptr [rdi]
0xef26: jmp 0x2930
0xf23e: nop 
0xf240: mov rdi,qword ptr [rsp + 0x10]
0xf245: call 0x2c80
0xf24a: mov rdi,r13
0xf24d: xor r13d,r13d
0xf250: call 0x2c80
0xf255: mov dword ptr [rbp],ebx
0xf258: jmp 0xf08b
0xf310: push rbx
0xf311: mov rsi,rdi
0xf314: mov edi,0x1
0xf319: sub rsp,0xa0
0xf320: mov rdx,rsp
0xf323: mov rax,qword ptr fs:[rip+0xffffffffffff0cfc]
0xf32c: mov qword ptr [0x98 + rsp],rax
0xf334: xor eax,eax
0xf336: call 0x2760
0xf33b: mov ebx,eax
0xf33d: call 0x25a0
0xf342: test ebx,ebx
0xf344: jz 0xf360
0xf346: mov edx,dword ptr [rax]
0xf348: cmp edx,0x4b
0xf34b: jz 0xf360
0xf34d: xor eax,eax
0xf34f: cmp edx,0x2
0xf352: setnz al
0xf355: neg eax
0xf357: jmp 0xf36b
0xf360: mov dword ptr [rax],0x11
0xf366: mov eax,0xffffffff
0xf36b: mov rcx,qword ptr [0x98 + rsp]
0xf373: xor rcx,qword ptr fs:[rip+0xffffffffffff0cac]
0xf37c: jnz 0xf387
0xf37e: add rsp,0xa0
0xf385: pop rbx
0xf386: ret 
0xf387: call 0x2780
0xf38c: nop dword ptr [rax]
0xf390: mov esi,0x1c0
0xf395: jmp 0x2610
0xf3a0: mov esi,dword ptr [rsi]
0xf3a2: mov edx,0x180
0xf3a7: xor eax,eax
0xf3a9: and sil,0x3c
0xf3ad: or sil,0xc2
0xf3b1: jmp 0x2b30
0xf540: sub rsp,0x18
0xf544: cmp ecx,0x1
0xf547: mov dword ptr [rsp + 0xc],edx
0xf54b: jz 0xf5b0
0xf54d: cmp ecx,0x2
0xf550: jz 0xf578
0xf552: test ecx,ecx
0xf554: jz 0xf590
0xf556: lea rcx,[rip+0x7a63]
0xf55d: lea rsi,[rip+0x7a04]
0xf564: lea rdi,[rip+0x7a25]
0xf56b: mov edx,0x147
0xf570: call 0x2820
0xf575: nop dword ptr [rax]
0xf578: lea rdx,[rsp + 0xc]
0xf57d: lea rcx,[rip+0xfffffffffffffd8c]
0xf584: call 0xf3c0
0xf589: add rsp,0x18
0xf58d: ret 
0xf590: lea rdx,[rsp + 0xc]
0xf595: lea rcx,[rip+0xfffffffffffffe04]
0xf59c: call 0xf3c0
0xf5a1: add rsp,0x18
0xf5a5: ret 
0xf5b0: lea rdx,[rsp + 0xc]
0xf5b5: lea rcx,[rip+0xfffffffffffffdd4]
0xf5bc: call 0xf3c0
0xf5c1: add rsp,0x18
0xf5c5: ret 
0xf5d0: mov r8d,0x6
0xf5d6: jmp 0xf540
0xf5e0: mov r8d,0x6
0xf5e6: jmp 0xf3c0
0xf630: mov rax,qword ptr [rdi]
0xf633: xor edx,edx
0xf635: div rsi
0xf638: mov rax,rdx
0xf63b: ret 
0xf640: mov rax,qword ptr [rsi]
0xf643: cmp qword ptr [rdi],rax
0xf646: setz al
0xf649: ret 
0xfd78: call 0x2780
0xff80: mov ecx,0x100
0xff85: jmp 0x2580
0x103d6: call 0x2780
0x10520: mov ecx,dword ptr [rip+0x20c1c2]
0x10526: xor edx,edx
0x10528: xor ebx,ebx
0x1052a: mov qword ptr [rsp + 0x8],0x0
0x10533: test ecx,ecx
0x10535: jns 0x1046e
0x1053b: mov dword ptr [rip+0x20c1a3],0xffffffff
0x1060e: jmp 0x104d0
0x10646: call 0x2780
0x10798: mov r8,rcx
0x1079b: mov rcx,rdx
0x1079e: lea rdx,[rip+0x6886]
0x107a5: mov esi,0x1
0x107aa: xor eax,eax
0x107ac: call 0x2c20
0x107b1: jmp 0x1069c
0x10a80: xor r9d,r9d
0x10a83: cmp qword ptr [r8],0x0
0x10a87: jz 0x10a9b
0x10a89: nop dword ptr [rax]
0x10a90: add r9,0x1
0x10a94: cmp qword ptr [r8 + r9*0x8],0x0
0x10a99: jnz 0x10a90
0x10a9b: jmp 0x10660
0x10aa0: sub rsp,0x68
0x10aa4: mov r10,r8
0x10aa7: xor r9d,r9d
0x10aaa: mov rax,qword ptr fs:[rip+0xfffffffffffef575]
0x10ab3: mov qword ptr [rsp + 0x58],rax
0x10ab8: xor eax,eax
0x10aba: mov r8,rsp
0x10abd: nop dword ptr [rax]
0x10ac0: mov eax,dword ptr [r10]
0x10ac3: cmp eax,0x2f
0x10ac6: ja 0x10b0a
0x10ac8: mov r11d,eax
0x10acb: add r11,qword ptr [r10 + 0x10]
0x10acf: add eax,0x8
0x10ad2: mov dword ptr [r10],eax
0x10ad5: mov rax,qword ptr [r11]
0x10ad8: test rax,rax
0x10adb: mov qword ptr [r8 + r9*0x8],rax
0x10adf: jz 0x10aeb
0x10ae1: add r9,0x1
0x10ae5: cmp r9,0xa
0x10ae9: jnz 0x10ac0
0x10aeb: call 0x10660
0x10af0: mov rax,qword ptr [rsp + 0x58]
0x10af5: xor rax,qword ptr fs:[rip+0xfffffffffffef52a]
0x10afe: jnz 0x10b05
0x10b00: add rsp,0x68
0x10b04: ret 
0x10b05: call 0x2780
0x10b0a: mov r11,qword ptr [r10 + 0x8]
0x10b0e: lea rax,[r11 + 0x8]
0x10b12: mov qword ptr [r10 + 0x8],rax
0x10b16: jmp 0x10ad5
0x10be0: call 0x2780
0x10bec: mov rax,rbx
0x10bef: add rbx,0x8
0x10bf3: jmp 0x10ba6
0x10c00: push rbx
0x10c01: lea rsi,[rip+0x6471]
0x10c08: mov edx,0x5
0x10c0d: xor edi,edi
0x10c0f: call 0x2730
0x10c14: lea rdx,[rip+0x4ee8]
0x10c1b: mov rsi,rax
0x10c1e: mov edi,0x1
0x10c23: xor eax,eax
0x10c25: call 0x2ab0
0x10c2a: lea rsi,[rip+0x645d]
0x10c31: mov edx,0x5
0x10c36: xor edi,edi
0x10c38: call 0x2730
0x10c3d: lea rcx,[rip+0x4cbc]
0x10c44: lea rdx,[rip+0x4363]
0x10c4b: mov rsi,rax
0x10c4e: mov edi,0x1
0x10c53: xor eax,eax
0x10c55: call 0x2ab0
0x10c5a: mov rbx,qword ptr [rip+0x20b467]
0x10c61: lea rsi,[rip+0x6658]
0x10c68: xor edi,edi
0x10c6a: mov edx,0x5
0x10c6f: call 0x2730
0x10c74: mov rsi,rbx
0x10c77: mov rdi,rax
0x10c7a: pop rbx
0x10c7b: jmp 0x28f0
0x10cda: nop word ptr [rax + rax*0x1]
0x10ce0: mov rax,rdi
0x10ce3: mul rsi
0x10ce6: mov rdi,rax
0x10ce9: seto al
0x10cec: test rdi,rdi
0x10cef: js 0x10cfb
0x10cf1: movzx eax,al
0x10cf4: test rax,rax
0x10cf7: jnz 0x10cfb
0x10cf9: jmp 0x10cc0
0x10cfb: sub rsp,0x8
0x10cff: call 0x10f10
0x10d04: nop 
0x10d06: nop word ptr cs:[rax + rax*0x1]
0x10d10: jmp 0x10cc0
0x10d56: nop word ptr cs:[rax + rax*0x1]
0x10d60: mov rax,rsi
0x10d63: mul rdx
0x10d66: mov rsi,rax
0x10d69: seto al
0x10d6c: test rsi,rsi
0x10d6f: js 0x10d7b
0x10d71: movzx eax,al
0x10d74: test rax,rax
0x10d77: jnz 0x10d7b
0x10d79: jmp 0x10d20
0x10d7b: sub rsp,0x8
0x10d7f: call 0x10f10
0x10d84: nop 
0x10d86: nop word ptr cs:[rax + rax*0x1]
0x10d90: test rdi,rdi
0x10d93: mov r9,rdx
0x10d96: mov rcx,qword ptr [rsi]
0x10d99: jz 0x10dd0
0x10d9b: xor edx,edx
0x10d9d: mov rax,0x5555555555555554
0x10da7: div r9
0x10daa: cmp rax,rcx
0x10dad: jbe 0x10deb
0x10daf: mov rax,rcx
0x10db2: shr rax,1
0x10db5: lea rcx,[rax + rcx*0x1 + 0x1]
0x10dba: mov qword ptr [rsi],rcx
0x10dbd: imul rcx,r9
0x10dc1: mov rsi,rcx
0x10dc4: jmp 0x10d20
0x10dd0: test rcx,rcx
0x10dd3: jz 0x10df8
0x10dd5: mov rax,rcx
0x10dd8: mul r9
0x10ddb: seto dl
0x10dde: test rax,rax
0x10de1: movzx edx,dl
0x10de4: js 0x10deb
0x10de6: test rdx,rdx
0x10de9: jz 0x10dba
0x10deb: sub rsp,0x8
0x10def: call 0x10f10
0x10df4: nop dword ptr [rax]
0x10df8: xor edx,edx
0x10dfa: mov eax,0x80
0x10dff: xor r8d,r8d
0x10e02: div r9
0x10e05: test rax,rax
0x10e08: setz r8b
0x10e0c: lea rcx,[r8 + rax*0x1]
0x10e10: jmp 0x10dd5
0x10e20: test rdi,rdi
0x10e23: mov rax,qword ptr [rsi]
0x10e26: jz 0x10e50
0x10e28: mov rdx,0x5555555555555553
0x10e32: cmp rax,rdx
0x10e35: ja 0x10e61
0x10e37: mov rdx,rax
0x10e3a: shr rdx,1
0x10e3d: lea rax,[rdx + rax*0x1 + 0x1]
0x10e42: mov qword ptr [rsi],rax
0x10e45: mov rsi,rax
0x10e48: jmp 0x10d20
0x10e50: test rax,rax
0x10e53: mov edx,0x80
0x10e58: cmovz rax,rdx
0x10e5c: test rax,rax
0x10e5f: jns 0x10e42
0x10e61: sub rsp,0x8
0x10e65: call 0x10f10
0x10e6a: nop word ptr [rax + rax*0x1]
0x10e70: push rbx
0x10e71: mov rbx,rdi
0x10e74: call 0x10cc0
0x10e79: mov rdx,rbx
0x10e7c: xor esi,esi
0x10e7e: mov rdi,rax
0x10e81: pop rbx
0x10e82: jmp 0x2830
0x10e90: mov rax,rdi
0x10e93: sub rsp,0x8
0x10e97: mul rsi
0x10e9a: seto dl
0x10e9d: test rax,rax
0x10ea0: js 0x10eb9
0x10ea2: movzx edx,dl
0x10ea5: test rdx,rdx
0x10ea8: jnz 0x10eb9
0x10eaa: call 0x2910
0x10eaf: test rax,rax
0x10eb2: jz 0x10eb9
0x10eb4: add rsp,0x8
0x10eb8: ret 
0x10eb9: call 0x10f10
0x10ebe: nop 
0x10f40: call 0x2590
0x10f45: nop word ptr cs:[rax + rax*0x1]
0x10f4f: nop 
0x10f7f: nop 
0x10f9f: nop 
0x10fa0: mov edx,dword ptr [rdi + 0x48]
0x10fa3: mov eax,0x1
0x10fa8: and edx,0x11
0x10fab: cmp edx,0x10
0x10fae: jz 0x10fb7
0x10fb0: xor eax,eax
0x10fb2: cmp edx,0x11
0x10fb5: jz 0x10fc0
0x10fb7: ret 
0x10fc0: cmp qword ptr [rsi + 0x58],0x0
0x10fc5: setnz al
0x10fc8: ret 
0x11062: call 0x2780
0x11067: nop word ptr [rax + rax*0x1]
0x11070: test rdi,rdi
0x11073: push rbx
0x11074: mov rbx,rdi
0x11077: jz 0x1108a
0x11079: call 0x2a50
0x1107e: test eax,eax
0x11080: jz 0x1108a
0x11082: test dword ptr [rbx],0x100
0x11088: jnz 0x11098
0x1108a: mov rdi,rbx
0x1108d: pop rbx
0x1108e: jmp 0x2a10
0x11098: mov rdi,rbx
0x1109b: mov edx,0x1
0x110a0: xor esi,esi
0x110a2: call 0x110e0
0x110a7: mov rdi,rbx
0x110aa: pop rbx
0x110ab: jmp 0x2a10
0x110b0: xor eax,eax
0x110b2: mov rcx,qword ptr [rdi + 0x20]
0x110b6: cmp qword ptr [rdi + 0x28],rcx
0x110ba: ja 0x110d7
0x110bc: mov rax,qword ptr [rdi + 0x10]
0x110c0: sub rax,qword ptr [rdi + 0x8]
0x110c4: test dword ptr [rdi],0x100
0x110ca: jz 0x110d7
0x110cc: mov rdx,qword ptr [rdi + 0x58]
0x110d0: sub rdx,qword ptr [rdi + 0x48]
0x110d4: add rax,rdx
0x110d7: ret 
0x110e0: mov rax,qword ptr [rdi + 0x8]
0x110e4: cmp qword ptr [rdi + 0x10],rax
0x110e8: jz 0x110f0
0x110ea: jmp 0x2b40
0x110f0: mov rax,qword ptr [rdi + 0x20]
0x110f4: cmp qword ptr [rdi + 0x28],rax
0x110f8: jnz 0x110ea
0x110fa: cmp qword ptr [rdi + 0x48],0x0
0x110ff: jnz 0x110ea
0x11101: push r12
0x11103: push rbp
0x11104: mov r12d,edx
0x11107: push rbx
0x11108: mov rbp,rsi
0x1110b: mov rbx,rdi
0x1110e: call 0x29c0
0x11113: mov edx,r12d
0x11116: mov rsi,rbp
0x11119: mov edi,eax
0x1111b: call 0x2800
0x11120: cmp rax,-0x1
0x11124: jz 0x11132
0x11126: and dword ptr [rbx],0xffffffef
0x11129: mov qword ptr [0x90 + rbx],rax
0x11130: xor eax,eax
0x11132: pop rbx
0x11133: pop rbp
0x11134: pop r12
0x11136: ret 
0x11140: xor eax,eax
0x11142: mov rdx,qword ptr [rsi + 0x8]
0x11146: cmp qword ptr [rdi + 0x8],rdx
0x1114a: jz 0x11150
0x1114c: ret 
0x11150: mov rax,qword ptr [rsi]
0x11153: cmp qword ptr [rdi],rax
0x11156: setz al
0x11159: ret 
0x11160: mov rax,qword ptr [rdi + 0x8]
0x11164: xor edx,edx
0x11166: div rsi
0x11169: mov rax,rdx
0x1116c: ret 
0x11170: mov rax,qword ptr [rdi]
0x11173: xor edx,edx
0x11175: div rsi
0x11178: mov rax,rdx
0x1117b: ret 
0x11180: mov rax,qword ptr [rsi]
0x11183: cmp qword ptr [rdi],rax
0x11186: setz al
0x11189: ret 
0x11190: mov rdx,qword ptr [rdi]
0x11193: mov rax,qword ptr [rsi]
0x11196: mov rax,qword ptr [0x80 + rax]
0x1119d: cmp qword ptr [0x80 + rdx],rax
0x111a4: jc 0x111b0
0x111a6: seta al
0x111a9: movzx eax,al
0x111ac: ret 
0x111b0: mov eax,0xffffffff
0x111b5: ret 
0x116e2: call 0x2780
0x116ec: nop dword ptr [rax]
0x117c6: nop word ptr cs:[rax + rax*0x1]
0x11ba5: call 0x2780
0x11d2e: call 0x2780
0x11d38: nop dword ptr [rax + rax*0x1]
0x11d99: mov qword ptr [rsp + 0x38],-0x1
0x11e83: test ah,0x4
0x11e86: jz 0x12188
0x12188: xor edx,edx
0x1218a: mov rsi,r13
0x1218d: mov rdi,r15
0x12190: call 0x111c0
0x12195: mov word ptr [r13 + 0x70],ax
0x1219a: jmp 0x11ed1
0x1244c: cmp rbx,0x1
0x12450: jz 0x12305
0x12456: mov rsi,qword ptr [rsp + 0x10]
0x1245b: mov rdx,rbx
0x1245e: mov rdi,r15
0x12461: call 0x11390
0x12466: mov qword ptr [rsp + 0x10],rax
0x1246b: jmp 0x12305
0x124cd: test rbx,rbx
0x124d0: mov dword ptr [rbp + 0x40],eax
0x124d3: jnz 0x12609
0x124d9: cmp qword ptr [rsp + 0x50],0x0
0x124df: mov eax,0x4
0x124e4: jnz 0x12609
0x124ea: mov word ptr [rbp + 0x70],ax
0x12580: mov byte ptr [rsp + 0x5f],0x0
0x12585: mov edi,dword ptr [r15 + 0x48]
0x12589: jmp 0x11dab
0x12609: mov eax,0x7
0x1260e: jmp 0x124ea
0x126f1: call 0x2780
0x12935: cmp rbp,0x1
0x12939: jbe 0x1294c
0x1293b: mov rsi,r12
0x1293e: mov rdx,rbp
0x12941: mov rdi,rbx
0x12944: call 0x11390
0x12949: mov r12,rax
0x1299d: mov edi,dword ptr [rbx + 0x2c]
0x129a0: lea rdx,[rip+0x3145]
0x129a7: call 0x11910
0x129ac: test eax,eax
0x129ae: mov dword ptr [rbx + 0x28],eax
0x129b1: jns 0x129c0
0x129b3: or dword ptr [rbx + 0x48],0x4
0x129b7: nop word ptr [rax + rax*0x1]
0x129e0: mov rdi,qword ptr [r13]
0x129e4: mov eax,ebp
0x129e6: mov dword ptr [rbx + 0x2c],0xffffff9c
0x129ed: and ah,0xfd
0x129f0: or eax,0x4
0x129f3: test rdi,rdi
0x129f6: mov dword ptr [rbx + 0x48],eax
0x129f9: jnz 0x1279e
0x12ab8: call 0x25a0
0x12abd: xor ebx,ebx
0x12abf: mov dword ptr [rax],0x16
0x12ac5: jmp 0x129ce
0x12e54: nop dword ptr [rax]
0x133f0: sub rsp,0x8
0x133f4: call 0x25a0
0x133f9: mov dword ptr [rax],0x16
0x133ff: mov eax,0x1
0x13404: add rsp,0x8
0x13408: ret 
0x13410: push r14
0x13412: push r13
0x13414: push r12
0x13416: push rbp
0x13417: mov r12d,esi
0x1341a: push rbx
0x1341b: mov rbx,rdi
0x1341e: call 0x25a0
0x13423: test r12d,0xffffefff
0x1342a: mov r13,rax
0x1342d: jnz 0x13518
0x13433: mov rbp,qword ptr [rbx]
0x13436: mov dword ptr [rax],0x0
0x1343c: test byte ptr [rbx + 0x49],0x20
0x13440: jnz 0x134c0
0x13442: movzx eax,word ptr [rbp + 0x70]
0x13446: cmp ax,0x9
0x1344a: jz 0x134b0
0x1344c: cmp ax,0x1
0x13450: jnz 0x134c0
0x13452: mov rdi,qword ptr [rbx + 0x8]
0x13456: test rdi,rdi
0x13459: jz 0x13460
0x1345b: call 0x11530
0x13460: cmp r12d,0x1000
0x13467: mov r14d,0x1
0x1346d: jnz 0x1347c
0x1346f: or dword ptr [rbx + 0x48],0x1000
0x13476: mov r14d,0x2
0x1347c: cmp qword ptr [rbp + 0x58],0x0
0x13481: jnz 0x13495
0x13483: mov rax,qword ptr [rbp + 0x30]
0x13487: cmp byte ptr [rax],0x2f
0x1348a: jz 0x13495
0x1348c: mov esi,dword ptr [rbx + 0x48]
0x1348f: test sil,0x4
0x13493: jz 0x134d0
0x13495: mov esi,r14d
0x13498: mov rdi,rbx
0x1349b: call 0x11d40
0x134a0: mov qword ptr [rbx + 0x8],rax
0x134a4: pop rbx
0x134a5: pop rbp
0x134a6: pop r12
0x134a8: pop r13
0x134aa: pop r14
0x134ac: ret 
0x134b0: pop rbx
0x134b1: mov rax,qword ptr [rbp + 0x10]
0x134b5: pop rbp
0x134b6: pop r12
0x134b8: pop r13
0x134ba: pop r14
0x134bc: ret 
0x134c0: pop rbx
0x134c1: xor eax,eax
0x134c3: pop rbp
0x134c4: pop r12
0x134c6: pop r13
0x134c8: pop r14
0x134ca: ret 
0x134d0: mov edi,dword ptr [rbx + 0x2c]
0x134d3: lea rdx,[rip+0x2612]
0x134da: call 0x11910
0x134df: test eax,eax
0x134e1: mov ebp,eax
0x134e3: js 0x13539
0x134e5: mov esi,r14d
0x134e8: mov rdi,rbx
0x134eb: call 0x11d40
0x134f0: test byte ptr [rbx + 0x49],0x2
0x134f4: mov qword ptr [rbx + 0x8],rax
0x134f8: jnz 0x13528
0x134fa: mov edi,ebp
0x134fc: call 0x2a60
0x13501: test eax,eax
0x13503: jnz 0x13548
0x13505: mov edi,ebp
0x13507: call 0x2870
0x1350c: mov rax,qword ptr [rbx + 0x8]
0x13510: jmp 0x134a4
0x13518: mov dword ptr [rax],0x16
0x1351e: xor eax,eax
0x13520: jmp 0x134a4
0x13528: mov edx,0x1
0x1352d: mov esi,ebp
0x1352f: mov rdi,rbx
0x13532: call 0x11760
0x13537: jmp 0x1350c
0x13539: mov qword ptr [rbx + 0x8],0x0
0x13541: xor eax,eax
0x13543: jmp 0x134a4
0x13548: mov ebx,dword ptr [r13]
0x1354c: mov edi,ebp
0x1354e: call 0x2870
0x13553: xor eax,eax
0x13555: mov dword ptr [r13],ebx
0x13559: jmp 0x134a4
0x135de: call 0x2780
0x135e3: nop word ptr cs:[rax + rax*0x1]
0x135ed: nop dword ptr [rax]
0x13660: mov edi,0x1
0x13665: jmp 0x3780
0x13770: mov byte ptr [rsp + 0x17],0x1
0x13775: jmp 0x136f7
0x13810: push r15
0x13812: push r14
0x13814: mov r14,rdi
0x13817: push r13
0x13819: push r12
0x1381b: xor edi,edi
0x1381d: push rbp
0x1381e: push rbx
0x1381f: mov rbp,rsi
0x13822: lea rsi,[rip+0x3bff]
0x13829: mov r12,rdx
0x1382c: mov edx,0x5
0x13831: sub rsp,0x8
0x13835: mov rbx,qword ptr [rip+0x2088c4]
0x1383c: call 0x2730
0x13841: mov rdi,rax
0x13844: mov rsi,rbx
0x13847: call 0x28f0
0x1384c: mov r15,qword ptr [r14]
0x1384f: test r15,r15
0x13852: jz 0x138e8
0x13858: xor r13d,r13d
0x1385b: xor ebx,ebx
0x1385d: jmp 0x13898
0x13860: mov rdi,r15
0x13863: add rbx,0x1
0x13867: mov r13,rbp
0x1386a: call 0xe9a0
0x1386f: mov rdi,qword ptr [rip+0x20888a]
0x13876: lea rdx,[rip+0x3bc0]
0x1387d: mov rcx,rax
0x13880: mov esi,0x1
0x13885: xor eax,eax
0x13887: add rbp,r12
0x1388a: call 0x2c20
0x1388f: mov r15,qword ptr [r14 + rbx*0x8]
0x13893: test r15,r15
0x13896: jz 0x138e8
0x13898: test rbx,rbx
0x1389b: jz 0x13860
0x1389d: mov rdx,r12
0x138a0: mov rsi,rbp
0x138a3: mov rdi,r13
0x138a6: call 0x28d0
0x138ab: test eax,eax
0x138ad: jnz 0x13860
0x138af: mov rdi,r15
0x138b2: add rbx,0x1
0x138b6: add rbp,r12
0x138b9: call 0xe9a0
0x138be: mov rdi,qword ptr [rip+0x20883b]
0x138c5: lea rdx,[rip+0x3b79]
0x138cc: mov rcx,rax
0x138cf: mov esi,0x1
0x138d4: xor eax,eax
0x138d6: call 0x2c20
0x138db: mov r15,qword ptr [r14 + rbx*0x8]
0x138df: test r15,r15
0x138e2: jnz 0x13898
0x138e4: nop dword ptr [rax]
0x138e8: mov rdi,qword ptr [rip+0x208811]
0x138ef: mov rax,qword ptr [rdi + 0x28]
0x138f3: cmp rax,qword ptr [rdi + 0x30]
0x138f7: jnc 0x13918
0x138f9: lea rdx,[rax + 0x1]
0x138fd: mov qword ptr [rdi + 0x28],rdx
0x13901: mov byte ptr [rax],0xa
0x13904: add rsp,0x8
0x13908: pop rbx
0x13909: pop rbp
0x1390a: pop r12
0x1390c: pop r13
0x1390e: pop r14
0x13910: pop r15
0x13912: ret 
0x13918: add rsp,0x8
0x1391c: mov esi,0xa
0x13921: pop rbx
0x13922: pop rbp
0x13923: pop r12
0x13925: pop r13
0x13927: pop r14
0x13929: pop r15
0x1392b: jmp 0x27d0
0x13983: mov rdx,r15
0x13986: mov rsi,rbp
0x13989: mov rdi,rbx
0x1398c: call 0x13810
0x13991: call r13
0x13994: mov rax,-0x1
0x1399b: jmp 0x13966
0x139a0: push r14
0x139a2: push r13
0x139a4: push r12
0x139a6: push rbp
0x139a7: push rbx
0x139a8: mov r14,qword ptr [rsi]
0x139ab: test r14,r14
0x139ae: jz 0x139e1
0x139b0: mov r12,rcx
0x139b3: mov r13,rdi
0x139b6: mov rbp,rdx
0x139b9: lea rbx,[rsi + 0x8]
0x139bd: jmp 0x139cf
0x139c0: mov r14,qword ptr [rbx]
0x139c3: add rbp,r12
0x139c6: add rbx,0x8
0x139ca: test r14,r14
0x139cd: jz 0x139e1
0x139cf: mov rdx,r12
0x139d2: mov rsi,rbp
0x139d5: mov rdi,r13
0x139d8: call 0x28d0
0x139dd: test eax,eax
0x139df: jnz 0x139c0
0x139e1: pop rbx
0x139e2: mov rax,r14
0x139e5: pop rbp
0x139e6: pop r12
0x139e8: pop r13
0x139ea: pop r14
0x139ec: ret 
0x139f0: push r12
0x139f2: push rbp
0x139f3: mov rbp,rdi
0x139f6: push rbx
0x139f7: call 0x25f0
0x139fc: mov ebx,dword ptr [rbp]
0x139ff: mov rdi,rbp
0x13a02: mov r12,rax
0x13a05: call 0x14ab0
0x13a0a: and ebx,0x20
0x13a0d: test ebx,ebx
0x13a0f: jnz 0x13a28
0x13a11: test eax,eax
0x13a13: jz 0x13a1f
0x13a15: test r12,r12
0x13a18: mov eax,0xffffffff
0x13a1d: jz 0x13a58
0x13a1f: pop rbx
0x13a20: pop rbp
0x13a21: pop r12
0x13a23: ret 
0x13a28: test eax,eax
0x13a2a: jnz 0x13a48
0x13a2c: call 0x25a0
0x13a31: mov dword ptr [rax],0x0
0x13a37: mov eax,0xffffffff
0x13a3c: pop rbx
0x13a3d: pop rbp
0x13a3e: pop r12
0x13a40: ret 
0x13a48: pop rbx
0x13a49: mov eax,0xffffffff
0x13a4e: pop rbp
0x13a4f: pop r12
0x13a51: ret 
0x13a58: call 0x25a0
0x13a5d: cmp dword ptr [rax],0x9
0x13a60: pop rbx
0x13a61: pop rbp
0x13a62: pop r12
0x13a64: setnz al
0x13a67: movzx eax,al
0x13a6a: neg eax
0x13a6c: ret 
0x13b0a: nop word ptr [rax + rax*0x1]
0x13bc0: sub rsp,0x28
0x13bc4: xor edi,edi
0x13bc6: mov rsi,rsp
0x13bc9: mov rax,qword ptr fs:[rip+0xfffffffffffec456]
0x13bd2: mov qword ptr [rsp + 0x18],rax
0x13bd7: xor eax,eax
0x13bd9: call 0x2680
0x13bde: mov rcx,qword ptr [rsp + 0x18]
0x13be3: xor rcx,qword ptr fs:[rip+0xfffffffffffec43c]
0x13bec: mov rax,qword ptr [rsp]
0x13bf0: mov rdx,qword ptr [rsp + 0x8]
0x13bf5: jnz 0x13bfc
0x13bf7: add rsp,0x28
0x13bfb: ret 
0x13bfc: call 0x2780
0x13c01: nop word ptr cs:[rax + rax*0x1]
0x13c0b: nop dword ptr [rax + rax*0x1]
0x13c70: movsx rcx,byte ptr [rdi]
0x13c74: test cl,cl
0x13c76: jz 0x13ca0
0x13c78: xor eax,eax
0x13c7a: nop word ptr [rax + rax*0x1]
0x13c80: rol rax,0x9
0x13c84: add rdi,0x1
0x13c88: add rax,rcx
0x13c8b: movsx rcx,byte ptr [rdi]
0x13c8f: test cl,cl
0x13c91: jnz 0x13c80
0x13c93: xor edx,edx
0x13c95: div rsi
0x13c98: mov rax,rdx
0x13c9b: ret 
0x13ca0: xor edx,edx
0x13ca2: mov rax,rdx
0x13ca5: ret 
0x13d5e: nop 
0x13e09: call 0x2780
0x13e0e: nop 
0x13e10: push rbx
0x13e11: mov rbx,rdi
0x13e14: mov edi,0x18
0x13e19: call 0x10cc0
0x13e1e: mov qword ptr [rax],rbx
0x13e21: mov qword ptr [rax + 0x10],0x0
0x13e29: mov qword ptr [rax + 0x8],0x0
0x13e31: pop rbx
0x13e32: ret 
0x13e80: mov rax,qword ptr [rdi]
0x13e83: ret 
0x13fa5: call 0x2780
0x13faa: nop word ptr [rax + rax*0x1]
0x13fb0: push rbx
0x13fb1: mov rdx,-0x1
0x13fb8: mov rbx,rdi
0x13fbb: mov esi,0x18
0x13fc0: call 0x2b20
0x13fc5: mov rdi,rbx
0x13fc8: pop rbx
0x13fc9: jmp 0x2c80
0x14030: push rbp
0x14031: push rbx
0x14032: sub rsp,0x8
0x14036: test rdi,rdi
0x14039: jz 0x14078
0x1403b: call 0xe9a0
0x14040: mov rbp,rax
0x14043: call 0x25a0
0x14048: cmp dword ptr [rax],0x0
0x1404b: mov rbx,rax
0x1404e: mov edx,0x5
0x14053: jz 0x1407d
0x14055: lea rsi,[rip+0x345e]
0x1405c: xor edi,edi
0x1405e: call 0x2730
0x14063: mov edi,dword ptr [rip+0x207fbf]
0x14069: mov esi,dword ptr [rbx]
0x1406b: mov rdx,rax
0x1406e: mov rcx,rbp
0x14071: xor eax,eax
0x14073: call 0x2b10
0x14078: call 0x2590
0x1407d: lea rsi,[rip+0x3426]
0x14084: xor edi,edi
0x14086: call 0x2730
0x1408b: jmp 0x14063
0x140c2: lea rsi,[rip+0x340d]
0x140c9: call 0x14db0
0x140ce: test rax,rax
0x140d1: mov r13,rax
0x140d4: jz 0x142d8
0x140da: mov edi,0x1038
0x140df: call 0x10cc0
0x140e4: mov rbx,rax
0x140e7: mov qword ptr [rax],r13
0x140ea: lea rax,[rip+0xffffffffffffff3f]
0x140f1: cmp rbp,0x1000
0x140f8: mov ecx,0x1000
0x140fd: lea rsi,[rbx + 0x18]
0x14101: cmovbe rcx,rbp
0x14105: mov qword ptr [rbx + 0x8],rax
0x14109: mov qword ptr [rbx + 0x10],r12
0x1410d: xor edx,edx
0x1410f: mov rdi,r13
0x14112: call 0x2ad0
0x141d8: mov edi,0x1038
0x141dd: call 0x10cc0
0x141e2: mov rbx,rax
0x141e5: mov qword ptr [rax],0x0
0x141ec: lea rax,[rip+0xfffffffffffffe3d]
0x141f3: mov qword ptr [rbx + 0x10],0x0
0x141fb: mov qword ptr [rbx + 0x8],rax
0x141ff: jmp 0x14117
0x1428c: call 0x29d0
0x14291: mov dword ptr [rsp + 0x10],eax
0x14295: mov eax,0x800
0x1429a: mov edx,0x4
0x1429f: sub rax,rbp
0x142a2: lea rcx,[r13 + rbp*0x1]
0x142a7: cmp rax,0x4
0x142ab: cmova rax,rdx
0x142af: test eax,eax
0x142b1: mov esi,eax
0x142b3: jz 0x141c5
0x142b9: xor eax,eax
0x142bb: mov edx,eax
0x142bd: add eax,0x1
0x142c0: movzx edi,byte ptr [r12 + rdx*0x1]
0x142c5: cmp eax,esi
0x142c7: mov byte ptr [rcx + rdx*0x1],dil
0x142cb: jc 0x142bb
0x142cd: jmp 0x141c5
0x142d8: xor ebx,ebx
0x142da: jmp 0x14117
0x142df: call 0x2780
0x143c0: mov qword ptr [rdi + 0x8],rsi
0x143c4: ret 
0x143d0: mov qword ptr [rdi + 0x10],rsi
0x143d4: ret 
0x14404: call 0x25a0
0x14409: mov rcx,qword ptr [rsp + 0x8]
0x1440e: mov r13,rax
0x14411: jmp 0x14436
0x14418: mov rax,qword ptr [r12]
0x1441c: mov rdi,qword ptr [r12 + 0x10]
0x14421: mov eax,dword ptr [rax]
0x14423: and eax,0x20
0x14426: cmovnz eax,edx
0x14429: mov dword ptr [r13],eax
0x1442d: call qword ptr [r12 + 0x8]
0x14432: mov rcx,qword ptr [r12]
0x14436: mov rdx,rbp
0x14439: mov rdi,rbx
0x1443c: mov esi,0x1
0x14441: call 0x26b0
0x14446: add rbx,rax
0x14449: sub rbp,rax
0x1444c: mov edx,dword ptr [r13]
0x14450: jnz 0x14418
0x145aa: add rsp,0x8
0x145ae: mov rdi,rbp
0x145b1: pop rbx
0x145b2: pop rbp
0x145b3: jmp 0x14ab0
0x14ab0: push r12
0x14ab2: push rbp
0x14ab3: push rbx
0x14ab4: mov rbx,rdi
0x14ab7: call 0x29c0
0x14abc: test eax,eax
0x14abe: mov rdi,rbx
0x14ac1: js 0x14b17
0x14ac3: call 0x2a50
0x14ac8: test eax,eax
0x14aca: jnz 0x14af8
0x14acc: mov rdi,rbx
0x14acf: call 0x11070
0x14ad4: test eax,eax
0x14ad6: jz 0x14b14
0x14ad8: call 0x25a0
0x14add: mov r12d,dword ptr [rax]
0x14ae0: mov rdi,rbx
0x14ae3: mov rbp,rax
0x14ae6: call 0x26e0
0x14aeb: test r12d,r12d
0x14aee: jnz 0x14b20
0x14af0: pop rbx
0x14af1: pop rbp
0x14af2: pop r12
0x14af4: ret 
0x14af8: mov rdi,rbx
0x14afb: call 0x29c0
0x14b00: xor esi,esi
0x14b02: mov edx,0x1
0x14b07: mov edi,eax
0x14b09: call 0x2800
0x14b0e: cmp rax,-0x1
0x14b12: jnz 0x14acc
0x14b14: mov rdi,rbx
0x14b17: pop rbx
0x14b18: pop rbp
0x14b19: pop r12
0x14b1b: jmp 0x26e0
0x14b20: mov dword ptr [rbp],r12d
0x14b24: mov eax,0xffffffff
0x14b29: jmp 0x14af0
0x14d7d: call 0x2780
0x14db0: push r12
0x14db2: push rbp
0x14db3: mov rbp,rsi
0x14db6: push rbx
0x14db7: call 0x2b60
0x14dbc: test rax,rax
0x14dbf: mov rbx,rax
0x14dc2: jz 0x14dd1
0x14dc4: mov rdi,rax
0x14dc7: call 0x29c0
0x14dcc: cmp eax,0x2
0x14dcf: jbe 0x14de0
0x14dd1: mov rax,rbx
0x14dd4: pop rbx
0x14dd5: pop rbp
0x14dd6: pop r12
0x14dd8: ret 
0x14de0: mov edi,eax
0x14de2: call 0x14aa0
0x14de7: test eax,eax
0x14de9: mov r12d,eax
0x14dec: js 0x14e28
0x14dee: mov rdi,rbx
0x14df1: call 0x14ab0
0x14df6: test eax,eax
0x14df8: jnz 0x14e0d
0x14dfa: mov rsi,rbp
0x14dfd: mov edi,r12d
0x14e00: call 0x2a80
0x14e05: test rax,rax
0x14e08: mov rbx,rax
0x14e0b: jnz 0x14dd1
0x14e0d: call 0x25a0
0x14e12: mov ebp,dword ptr [rax]
0x14e14: mov rbx,rax
0x14e17: mov edi,r12d
0x14e1a: call 0x2870
0x14e1f: mov dword ptr [rbx],ebp
0x14e21: xor ebx,ebx
0x14e23: jmp 0x14dd1
0x14e28: call 0x25a0
0x14e2d: mov r12d,dword ptr [rax]
0x14e30: mov rbp,rax
0x14e33: mov rdi,rbx
0x14e36: call 0x14ab0
0x14e3b: xor ebx,ebx
0x14e3d: mov dword ptr [rbp],r12d
0x14e41: jmp 0x14dd1
0x14e50: push r15
0x14e52: push r14
0x14e54: mov r15,rdx
0x14e57: push r13
0x14e59: push r12
0x14e5b: lea r12,[rip+0x20692e]
0x14e62: push rbp
0x14e63: lea rbp,[rip+0x20692e]
0x14e6a: push rbx
0x14e6b: mov r13d,edi
0x14e6e: mov r14,rsi
0x14e71: sub rbp,r12
0x14e74: sub rsp,0x8
0x14e78: sar rbp,0x3
0x14e7c: call 0x2540
0x14e81: test rbp,rbp
0x14e84: jz 0x14ea6
0x14e86: xor ebx,ebx
0x14e88: nop dword ptr [rax + rax*0x1]
0x14e90: mov rdx,r15
0x14e93: mov rsi,r14
0x14e96: mov edi,r13d
0x14e99: call qword ptr [r12 + rbx*0x8]
0x14e9d: add rbx,0x1
0x14ea1: cmp rbp,rbx
0x14ea4: jnz 0x14e90
0x14ea6: add rsp,0x8
0x14eaa: pop rbx
0x14eab: pop rbp
0x14eac: pop r12
0x14eae: pop r13
0x14eb0: pop r14
0x14eb2: pop r15
0x14eb4: ret 
0x14ec0: ret 
0x14ee0: sub rsp,0x8
0x14ee4: add rsp,0x8
0x14ee8: ret 
