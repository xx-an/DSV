0x15d8: sub rsp,0x8
0x15dc: mov rax,qword ptr [rip+0x2079ed]
0x15e3: test rax,rax
0x15e6: jz 0x15ea
0x15e8: call rax
0x15ea: add rsp,0x8
0x15ee: ret 
0x15f0: push qword ptr [rip+0x2077fa]
0x15f6: jmp qword ptr [rip+0x2077fc]
0x1600: jmp qword ptr [rip+0x2077fa]
0x1606: push 0x0
0x160b: jmp 0x15f0
0x1616: push 0x1
0x161b: jmp 0x15f0
0x1626: push 0x2
0x162b: jmp 0x15f0
0x1636: push 0x3
0x163b: jmp 0x15f0
0x1646: push 0x4
0x164b: jmp 0x15f0
0x1656: push 0x5
0x165b: jmp 0x15f0
0x1660: jmp qword ptr [rip+0x2077ca]
0x1666: push 0x6
0x166b: jmp 0x15f0
0x1670: jmp qword ptr [rip+0x2077c2]
0x1676: push 0x7
0x167b: jmp 0x15f0
0x1686: push 0x8
0x168b: jmp 0x15f0
0x1690: jmp qword ptr [rip+0x2077b2]
0x1696: push 0x9
0x169b: jmp 0x15f0
0x16a6: push 0xa
0x16ab: jmp 0x15f0
0x16b6: push 0xb
0x16bb: jmp 0x15f0
0x16c6: push 0xc
0x16cb: jmp 0x15f0
0x16d6: push 0xd
0x16db: jmp 0x15f0
0x16e6: push 0xe
0x16eb: jmp 0x15f0
0x16f0: jmp qword ptr [rip+0x207782]
0x16f6: push 0xf
0x16fb: jmp 0x15f0
0x1706: push 0x10
0x170b: jmp 0x15f0
0x1716: push 0x11
0x171b: jmp 0x15f0
0x1726: push 0x12
0x172b: jmp 0x15f0
0x1736: push 0x13
0x173b: jmp 0x15f0
0x1746: push 0x14
0x174b: jmp 0x15f0
0x1756: push 0x15
0x175b: jmp 0x15f0
0x1766: push 0x16
0x176b: jmp 0x15f0
0x1770: jmp qword ptr [rip+0x207742]
0x1776: push 0x17
0x177b: jmp 0x15f0
0x1780: jmp qword ptr [rip+0x20773a]
0x1786: push 0x18
0x178b: jmp 0x15f0
0x1796: push 0x19
0x179b: jmp 0x15f0
0x17a6: push 0x1a
0x17ab: jmp 0x15f0
0x17b6: push 0x1b
0x17bb: jmp 0x15f0
0x17c6: push 0x1c
0x17cb: jmp 0x15f0
0x17d0: jmp qword ptr [rip+0x207712]
0x17d6: push 0x1d
0x17db: jmp 0x15f0
0x17e6: push 0x1e
0x17eb: jmp 0x15f0
0x17f6: push 0x1f
0x17fb: jmp 0x15f0
0x1800: jmp qword ptr [rip+0x2076fa]
0x1806: push 0x20
0x180b: jmp 0x15f0
0x1810: jmp qword ptr [rip+0x2076f2]
0x1816: push 0x21
0x181b: jmp 0x15f0
0x1826: push 0x22
0x182b: jmp 0x15f0
0x1836: push 0x23
0x183b: jmp 0x15f0
0x1846: push 0x24
0x184b: jmp 0x15f0
0x1850: jmp qword ptr [rip+0x2076d2]
0x1856: push 0x25
0x185b: jmp 0x15f0
0x1866: push 0x26
0x186b: jmp 0x15f0
0x1876: push 0x27
0x187b: jmp 0x15f0
0x1886: push 0x28
0x188b: jmp 0x15f0
0x1890: jmp qword ptr [rip+0x2076b2]
0x1896: push 0x29
0x189b: jmp 0x15f0
0x18a6: push 0x2a
0x18ab: jmp 0x15f0
0x18b6: push 0x2b
0x18bb: jmp 0x15f0
0x18c6: push 0x2c
0x18cb: jmp 0x15f0
0x18d6: push 0x2d
0x18db: jmp 0x15f0
0x18e6: push 0x2e
0x18eb: jmp 0x15f0
0x18f0: jmp qword ptr [rip+0x207682]
0x18f6: push 0x2f
0x18fb: jmp 0x15f0
0x1906: push 0x30
0x190b: jmp 0x15f0
0x1916: push 0x31
0x191b: jmp 0x15f0
0x1926: push 0x32
0x192b: jmp 0x15f0
0x1936: push 0x33
0x193b: jmp 0x15f0
0x1946: push 0x34
0x194b: jmp 0x15f0
0x1956: push 0x35
0x195b: jmp 0x15f0
0x1966: push 0x36
0x196b: jmp 0x15f0
0x1976: push 0x37
0x197b: jmp 0x15f0
0x1980: jmp qword ptr [rip+0x20765a]
0x1bb0: mov byte ptr [rip+0x207459],0x0
0x1d3d: lea rsi,[rip+0x4b81]
0x1d44: mov edx,0x5
0x1d49: xor edi,edi
0x1d4b: call 0x16c0
0x1d50: mov esi,dword ptr [rbx]
0x1d52: mov rdx,rax
0x1d55: mov edi,0x1
0x1d5a: xor eax,eax
0x1d5c: call 0x18d0
0x1dac: lea rsi,[rip+0x4b58]
0x1db3: mov edx,0x5
0x1db8: xor edi,edi
0x1dba: call 0x16c0
0x1dbf: mov esi,dword ptr [rbx]
0x1dc1: mov rdx,rax
0x1dc4: mov edi,0x1
0x1dc9: xor eax,eax
0x1dcb: call 0x18d0
0x1df3: jmp 0x1d3d
0x1ef1: lea rsi,[rip+0x49e6]
0x1ef8: mov edx,0x5
0x1efd: xor edi,edi
0x1eff: call 0x16c0
0x1f04: mov esi,dword ptr [rbx]
0x1f06: mov rdx,rax
0x1f09: mov edi,0x1
0x1f0e: xor eax,eax
0x1f10: call 0x18d0
0x1f15: lea rsi,[rip+0x49d6]
0x1f1c: mov edx,0x5
0x1f21: xor edi,edi
0x1f23: call 0x16c0
0x1f28: mov esi,dword ptr [rbx]
0x1f2a: mov rdx,rax
0x1f2d: mov edi,0x1
0x1f32: xor eax,eax
0x1f34: call 0x18d0
0x1f39: nop dword ptr [rax]
0x1f6a: hlt 
0x1f70: lea rdi,[rip+0x207129]
0x1f77: push rbp
0x1f78: lea rax,[rip+0x207121]
0x1f7f: cmp rax,rdi
0x1f82: mov rbp,rsp
0x1f85: jz 0x1fa0
0x1f87: mov rax,qword ptr [rip+0x207032]
0x1f8e: test rax,rax
0x1f91: jz 0x1fa0
0x1f93: pop rbp
0x1f94: jmp rax
0x1fa0: pop rbp
0x1fa1: ret 
0x1fb0: lea rdi,[rip+0x2070e9]
0x1fb7: lea rsi,[rip+0x2070e2]
0x1fbe: push rbp
0x1fbf: sub rsi,rdi
0x1fc2: mov rbp,rsp
0x1fc5: sar rsi,0x3
0x1fc9: mov rax,rsi
0x1fcc: shr rax,0x3f
0x1fd0: add rsi,rax
0x1fd3: sar rsi,1
0x1fd6: jz 0x1ff0
0x1fd8: mov rax,qword ptr [rip+0x206ff9]
0x1fdf: test rax,rax
0x1fe2: jz 0x1ff0
0x1fe4: pop rbp
0x1fe5: jmp rax
0x1ff0: pop rbp
0x1ff1: ret 
0x2000: cmp byte ptr [rip+0x2070c1],0x0
0x2007: jnz 0x2038
0x2009: cmp qword ptr [rip+0x206fcf],0x0
0x2011: push rbp
0x2012: mov rbp,rsp
0x2015: jz 0x2023
0x2017: mov rdi,qword ptr [rip+0x206fea]
0x201e: call 0x1980
0x2023: call 0x1f70
0x2028: mov byte ptr [rip+0x207099],0x1
0x202f: pop rbp
0x2030: ret 
0x2038: ret 
0x2040: push rbp
0x2041: mov rbp,rsp
0x2044: pop rbp
0x2045: jmp 0x1fb0
0x234d: jmp 0x2101
0x2471: mov byte ptr [rip+0x206b98],0x0
0x2478: jmp 0x20b9
0x24b6: mov byte ptr [rip+0x206b53],0x0
0x24bd: jmp 0x209b
0x257e: jmp 0x250b
0x25b7: jmp 0x2471
0x25c7: jmp 0x2101
0x25d7: jmp 0x21f4
0x25dc: call 0x16f0
0x25e1: nop dword ptr [rax + rax*0x1]
0x25e6: nop word ptr cs:[rax + rax*0x1]
0x29ce: nop 
0x2bce: jmp 0x2b53
0x2bd9: jmp 0x2b29
0x2c03: jmp 0x2b53
0x2c19: jmp 0x2a9e
0x2c1e: call 0x16f0
0x2c23: nop word ptr cs:[rax + rax*0x1]
0x2c2d: nop dword ptr [rax]
0x2c30: mov qword ptr [rip+0x206509],rdi
0x2c37: ret 
0x2c40: mov byte ptr [rip+0x2064f1],dil
0x2c47: ret 
0x2c50: push rbp
0x2c51: push rbx
0x2c52: sub rsp,0x8
0x2c56: mov rdi,qword ptr [rip+0x20644b]
0x2c5d: call 0x5cb0
0x2c62: test eax,eax
0x2c64: jz 0x2c7c
0x2c66: call 0x1640
0x2c6b: cmp byte ptr [rip+0x2064c6],0x0
0x2c72: mov rbx,rax
0x2c75: jz 0x2c93
0x2c77: cmp dword ptr [rax],0x20
0x2c7a: jnz 0x2c93
0x2c7c: mov rdi,qword ptr [rip+0x20643d]
0x2c83: call 0x5cb0
0x2c88: test eax,eax
0x2c8a: jnz 0x2cd2
0x2c8c: add rsp,0x8
0x2c90: pop rbx
0x2c91: pop rbp
0x2c92: ret 
0x2c93: lea rsi,[rip+0x3cdd]
0x2c9a: xor edi,edi
0x2c9c: mov edx,0x5
0x2ca1: call 0x16c0
0x2ca6: mov rdi,qword ptr [rip+0x206493]
0x2cad: mov rbp,rax
0x2cb0: test rdi,rdi
0x2cb3: jz 0x2cdd
0x2cb5: call 0x4860
0x2cba: mov esi,dword ptr [rbx]
0x2cbc: lea rdx,[rip+0x3cc0]
0x2cc3: mov rcx,rax
0x2cc6: mov r8,rbp
0x2cc9: xor edi,edi
0x2ccb: xor eax,eax
0x2ccd: call 0x18d0
0x2cd2: mov edi,dword ptr [rip+0x206348]
0x2cd8: call 0x1660
0x2cdd: mov esi,dword ptr [rbx]
0x2cdf: lea rdx,[rip+0x3ca1]
0x2ce6: mov rcx,rax
0x2ce9: xor edi,edi
0x2ceb: xor eax,eax
0x2ced: call 0x18d0
0x2cf2: jmp 0x2cd2
0x2def: nop 
0x40d3: call 0x16f0
0x4114: nop 
0x4116: nop word ptr cs:[rax + rax*0x1]
0x42c1: call 0x1630
0x42c6: call 0x5790
0x42cb: nop dword ptr [rax + rax*0x1]
0x42d0: push r12
0x42d2: push rbp
0x42d3: push rbx
0x42d4: mov rbx,rdi
0x42d7: call 0x1640
0x42dc: mov r12d,dword ptr [rax]
0x42df: mov rbp,rax
0x42e2: lea rax,[rip+0x204f77]
0x42e9: test rbx,rbx
0x42ec: mov esi,0x38
0x42f1: cmovz rbx,rax
0x42f5: mov rdi,rbx
0x42f8: call 0x5740
0x42fd: mov dword ptr [rbp],r12d
0x4301: pop rbx
0x4302: pop rbp
0x4303: pop r12
0x4305: ret 
0x4310: lea rax,[rip+0x204f49]
0x4317: test rdi,rdi
0x431a: cmovz rdi,rax
0x431e: mov eax,dword ptr [rdi]
0x4320: ret 
0x4330: lea rax,[rip+0x204f29]
0x4337: test rdi,rdi
0x433a: cmovz rdi,rax
0x433e: mov dword ptr [rdi],esi
0x4340: ret 
0x4350: lea rax,[rip+0x204f09]
0x4357: test rdi,rdi
0x435a: mov ecx,esi
0x435c: cmovz rdi,rax
0x4360: mov eax,esi
0x4362: and ecx,0x1f
0x4365: shr al,0x5
0x4368: movzx eax,al
0x436b: lea rdi,[rdi + rax*0x4 + 0x8]
0x4370: mov esi,dword ptr [rdi]
0x4372: mov eax,esi
0x4374: shr eax,cl
0x4376: xor edx,eax
0x4378: and eax,0x1
0x437b: and edx,0x1
0x437e: shl edx,cl
0x4380: xor edx,esi
0x4382: mov dword ptr [rdi],edx
0x4384: ret 
0x4390: lea rax,[rip+0x204ec9]
0x4397: test rdi,rdi
0x439a: cmovz rdi,rax
0x439e: mov eax,dword ptr [rdi + 0x4]
0x43a1: mov dword ptr [rdi + 0x4],esi
0x43a4: ret 
0x43b0: lea rax,[rip+0x204ea9]
0x43b7: test rdi,rdi
0x43ba: cmovz rdi,rax
0x43be: test rsi,rsi
0x43c1: mov dword ptr [rdi],0xa
0x43c7: jz 0x43d7
0x43c9: test rdx,rdx
0x43cc: jz 0x43d7
0x43ce: mov qword ptr [rdi + 0x28],rsi
0x43d2: mov qword ptr [rdi + 0x30],rdx
0x43d6: ret 
0x43d7: sub rsp,0x8
0x43db: call 0x1630
0x43e0: push r15
0x43e2: push r14
0x43e4: lea rax,[rip+0x204e75]
0x43eb: push r13
0x43ed: push r12
0x43ef: mov r13,rdi
0x43f2: push rbp
0x43f3: push rbx
0x43f4: mov rbx,r8
0x43f7: mov r14,rsi
0x43fa: mov r15,rdx
0x43fd: sub rsp,0x18
0x4401: test r8,r8
0x4404: cmovz rbx,rax
0x4408: mov qword ptr [rsp + 0x8],rcx
0x440d: call 0x1640
0x4412: mov r12d,dword ptr [rax]
0x4415: mov rbp,rax
0x4418: lea rax,[rbx + 0x8]
0x441c: sub rsp,0x8
0x4420: mov r9d,dword ptr [rbx + 0x4]
0x4424: push qword ptr [rbx + 0x30]
0x4427: mov r8d,dword ptr [rbx]
0x442a: push qword ptr [rbx + 0x28]
0x442d: mov rdx,r15
0x4430: push rax
0x4431: mov rcx,qword ptr [rsp + 0x28]
0x4436: mov rsi,r14
0x4439: mov rdi,r13
0x443c: call 0x2ee0
0x4441: mov dword ptr [rbp],r12d
0x4445: add rsp,0x38
0x4449: pop rbx
0x444a: pop rbp
0x444b: pop r12
0x444d: pop r13
0x444f: pop r14
0x4451: pop r15
0x4453: ret 
0x4460: push r15
0x4462: push r14
0x4464: lea rax,[rip+0x204df5]
0x446b: push r13
0x446d: push r12
0x446f: mov r12,rdx
0x4472: push rbp
0x4473: push rbx
0x4474: mov rbx,rcx
0x4477: mov r14,rdi
0x447a: mov r15,rsi
0x447d: sub rsp,0x38
0x4481: test rcx,rcx
0x4484: cmovz rbx,rax
0x4488: xor ebp,ebp
0x448a: call 0x1640
0x448f: test r12,r12
0x4492: mov r13,rax
0x4495: mov eax,dword ptr [rax]
0x4497: setz bpl
0x449b: or ebp,dword ptr [rbx + 0x4]
0x449e: lea r10,[rbx + 0x8]
0x44a2: sub rsp,0x8
0x44a6: mov r8d,dword ptr [rbx]
0x44a9: mov rcx,r15
0x44ac: mov dword ptr [rsp + 0x14],eax
0x44b0: push qword ptr [rbx + 0x30]
0x44b3: mov rdx,r14
0x44b6: push qword ptr [rbx + 0x28]
0x44b9: push r10
0x44bb: xor esi,esi
0x44bd: mov r9d,ebp
0x44c0: xor edi,edi
0x44c2: mov qword ptr [rsp + 0x40],r10
0x44c7: call 0x2ee0
0x44cc: lea rsi,[rax + 0x1]
0x44d0: mov qword ptr [rsp + 0x48],rax
0x44d5: add rsp,0x20
0x44d9: mov rdi,rsi
0x44dc: mov qword ptr [rsp + 0x18],rsi
0x44e1: call 0x5540
0x44e6: mov qword ptr [rsp + 0x10],rax
0x44eb: sub rsp,0x8
0x44ef: push qword ptr [rbx + 0x30]
0x44f2: push qword ptr [rbx + 0x28]
0x44f5: mov r10,qword ptr [rsp + 0x38]
0x44fa: mov r9d,ebp
0x44fd: mov r8d,dword ptr [rbx]
0x4500: mov rcx,r15
0x4503: mov rdx,r14
0x4506: mov rdi,rax
0x4509: push r10
0x450b: mov rsi,qword ptr [rsp + 0x38]
0x4510: call 0x2ee0
0x4515: mov eax,dword ptr [rsp + 0x2c]
0x4519: add rsp,0x20
0x451d: test r12,r12
0x4520: mov dword ptr [r13],eax
0x4524: jz 0x452f
0x4526: mov r11,qword ptr [rsp + 0x28]
0x452b: mov qword ptr [r12],r11
0x452f: mov rax,qword ptr [rsp + 0x10]
0x4534: add rsp,0x38
0x4538: pop rbx
0x4539: pop rbp
0x453a: pop r12
0x453c: pop r13
0x453e: pop r14
0x4540: pop r15
0x4542: ret 
0x4550: mov rcx,rdx
0x4553: xor edx,edx
0x4555: jmp 0x4460
0x4560: mov eax,dword ptr [rip+0x204b12]
0x4566: push r12
0x4568: mov r12,qword ptr [rip+0x204b11]
0x456f: push rbp
0x4570: push rbx
0x4571: cmp eax,0x1
0x4574: jle 0x45a1
0x4576: sub eax,0x2
0x4579: lea rbx,[r12 + 0x18]
0x457e: shl rax,0x4
0x4582: lea rbp,[r12 + rax*0x1 + 0x28]
0x4587: nop word ptr [rax + rax*0x1]
0x4590: mov rdi,qword ptr [rbx]
0x4593: add rbx,0x10
0x4597: call 0x1620
0x459c: cmp rbx,rbp
0x459f: jnz 0x4590
0x45a1: mov rdi,qword ptr [r12 + 0x8]
0x45a6: lea rbx,[rip+0x204bb3]
0x45ad: cmp rdi,rbx
0x45b0: jz 0x45c9
0x45b2: call 0x1620
0x45b7: mov qword ptr [rip+0x204ace],0x100
0x45c2: mov qword ptr [rip+0x204acf],rbx
0x45c9: lea rbx,[rip+0x204ac0]
0x45d0: cmp r12,rbx
0x45d3: jz 0x45e4
0x45d5: mov rdi,r12
0x45d8: call 0x1620
0x45dd: mov qword ptr [rip+0x204a9c],rbx
0x45e4: pop rbx
0x45e5: mov dword ptr [rip+0x204a89],0x1
0x45ef: pop rbp
0x45f0: pop r12
0x45f2: ret 
0x4600: lea rcx,[rip+0x204c59]
0x4607: mov rdx,-0x1
0x460e: jmp 0x4120
0x4620: lea rcx,[rip+0x204c39]
0x4627: jmp 0x4120
0x4630: lea rcx,[rip+0x204c29]
0x4637: mov rsi,rdi
0x463a: mov rdx,-0x1
0x4641: xor edi,edi
0x4643: jmp 0x4120
0x4650: lea rcx,[rip+0x204c09]
0x4657: mov rdx,rsi
0x465a: mov rsi,rdi
0x465d: xor edi,edi
0x465f: jmp 0x4120
0x4670: sub rsp,0x48
0x4674: mov rax,rdx
0x4677: mov rdx,qword ptr fs:[rip+0xffffffffffffb9a8]
0x4680: mov qword ptr [rsp + 0x38],rdx
0x4685: xor edx,edx
0x4687: cmp esi,0xa
0x468a: jz 0x46f4
0x468c: mov dword ptr [rsp],esi
0x468f: mov rcx,rsp
0x4692: mov rdx,-0x1
0x4699: mov rsi,rax
0x469c: mov qword ptr [rsp + 0x4],0x0
0x46a5: mov qword ptr [rsp + 0xc],0x0
0x46ae: mov qword ptr [rsp + 0x14],0x0
0x46b7: mov qword ptr [rsp + 0x1c],0x0
0x46c0: mov qword ptr [rsp + 0x24],0x0
0x46c9: mov qword ptr [rsp + 0x2c],0x0
0x46d2: mov dword ptr [rsp + 0x34],0x0
0x46da: call 0x4120
0x46df: mov rcx,qword ptr [rsp + 0x38]
0x46e4: xor rcx,qword ptr fs:[rip+0xffffffffffffb93b]
0x46ed: jnz 0x46f9
0x46ef: add rsp,0x48
0x46f3: ret 
0x46f4: call 0x1630
0x46f9: call 0x16f0
0x46fe: nop 
0x4700: sub rsp,0x48
0x4704: mov rax,rdx
0x4707: mov rdx,rcx
0x470a: mov rcx,qword ptr fs:[rip+0xffffffffffffb915]
0x4713: mov qword ptr [rsp + 0x38],rcx
0x4718: xor ecx,ecx
0x471a: cmp esi,0xa
0x471d: jz 0x4780
0x471f: mov dword ptr [rsp],esi
0x4722: mov rcx,rsp
0x4725: mov rsi,rax
0x4728: mov qword ptr [rsp + 0x4],0x0
0x4731: mov qword ptr [rsp + 0xc],0x0
0x473a: mov qword ptr [rsp + 0x14],0x0
0x4743: mov qword ptr [rsp + 0x1c],0x0
0x474c: mov qword ptr [rsp + 0x24],0x0
0x4755: mov qword ptr [rsp + 0x2c],0x0
0x475e: mov dword ptr [rsp + 0x34],0x0
0x4766: call 0x4120
0x476b: mov rdx,qword ptr [rsp + 0x38]
0x4770: xor rdx,qword ptr fs:[rip+0xffffffffffffb8af]
0x4779: jnz 0x4785
0x477b: add rsp,0x48
0x477f: ret 
0x4780: call 0x1630
0x4785: call 0x16f0
0x478a: nop word ptr [rax + rax*0x1]
0x4790: mov rdx,rsi
0x4793: mov esi,edi
0x4795: xor edi,edi
0x4797: jmp 0x4670
0x47a0: mov rcx,rdx
0x47a3: mov rdx,rsi
0x47a6: mov esi,edi
0x47a8: xor edi,edi
0x47aa: jmp 0x4700
0x47b0: sub rsp,0x48
0x47b4: mov ecx,edx
0x47b6: mov rax,qword ptr fs:[rip+0xffffffffffffb869]
0x47bf: mov qword ptr [rsp + 0x38],rax
0x47c4: xor eax,eax
0x47c6: mov rax,qword ptr [rip+0x204ac3]
0x47cd: mov r8,rsp
0x47d0: and ecx,0x1f
0x47d3: movdqa xmm0,[rip+0x204a85]
0x47db: mov qword ptr [rsp + 0x30],rax
0x47e0: mov eax,edx
0x47e2: movaps xmmword ptr [rsp],xmm0
0x47e6: shr al,0x5
0x47e9: movzx eax,al
0x47ec: lea r9,[r8 + rax*0x4 + 0x8]
0x47f1: movdqa xmm0,[rip+0x204a77]
0x47f9: movaps xmmword ptr [rsp + 0x10],xmm0
0x47fe: movdqa xmm0,[rip+0x204a7a]
0x4806: movaps xmmword ptr [rsp + 0x20],xmm0
0x480b: mov edx,dword ptr [r9]
0x480e: mov eax,edx
0x4810: shr eax,cl
0x4812: not eax
0x4814: and eax,0x1
0x4817: shl eax,cl
0x4819: mov rcx,r8
0x481c: xor eax,edx
0x481e: mov rdx,rsi
0x4821: mov rsi,rdi
0x4824: mov dword ptr [r9],eax
0x4827: xor edi,edi
0x4829: call 0x4120
0x482e: mov rsi,qword ptr [rsp + 0x38]
0x4833: xor rsi,qword ptr fs:[rip+0xffffffffffffb7ec]
0x483c: jnz 0x4843
0x483e: add rsp,0x48
0x4842: ret 
0x4843: call 0x16f0
0x4848: nop dword ptr [rax + rax*0x1]
0x4850: movsx edx,sil
0x4854: mov rsi,-0x1
0x485b: jmp 0x47b0
0x4860: mov edx,0x3a
0x4865: mov rsi,-0x1
0x486c: jmp 0x47b0
0x4880: mov edx,0x3a
0x4885: jmp 0x47b0
0x4890: sub rsp,0x48
0x4894: mov rax,rdx
0x4897: mov rdx,qword ptr fs:[rip+0xffffffffffffb788]
0x48a0: mov qword ptr [rsp + 0x38],rdx
0x48a5: xor edx,edx
0x48a7: cmp esi,0xa
0x48aa: jz 0x4914
0x48ac: mov dword ptr [rsp],esi
0x48af: mov rcx,rsp
0x48b2: mov rdx,-0x1
0x48b9: mov rsi,rax
0x48bc: mov qword ptr [rsp + 0x4],0x0
0x48c5: mov qword ptr [rsp + 0xc],0x4000000
0x48ce: mov qword ptr [rsp + 0x14],0x0
0x48d7: mov qword ptr [rsp + 0x1c],0x0
0x48e0: mov qword ptr [rsp + 0x24],0x0
0x48e9: mov qword ptr [rsp + 0x2c],0x0
0x48f2: mov dword ptr [rsp + 0x34],0x0
0x48fa: call 0x4120
0x48ff: mov rcx,qword ptr [rsp + 0x38]
0x4904: xor rcx,qword ptr fs:[rip+0xffffffffffffb71b]
0x490d: jnz 0x4919
0x490f: add rsp,0x48
0x4913: ret 
0x4914: call 0x1630
0x4919: call 0x16f0
0x491e: nop 
0x4920: sub rsp,0x48
0x4924: mov r9,rcx
0x4927: mov rcx,qword ptr [rip+0x204962]
0x492e: movdqa xmm0,[rip+0x20492a]
0x4936: mov rax,qword ptr fs:[rip+0xffffffffffffb6e9]
0x493f: mov qword ptr [rsp + 0x38],rax
0x4944: xor eax,eax
0x4946: movaps xmmword ptr [rsp],xmm0
0x494a: test rsi,rsi
0x494d: mov qword ptr [rsp + 0x30],rcx
0x4952: mov dword ptr [rsp],0xa
0x4959: movdqa xmm0,[rip+0x20490f]
0x4961: movaps xmmword ptr [rsp + 0x10],xmm0
0x4966: movdqa xmm0,[rip+0x204912]
0x496e: movaps xmmword ptr [rsp + 0x20],xmm0
0x4973: jz 0x49a7
0x4975: test rdx,rdx
0x4978: jz 0x49a7
0x497a: mov qword ptr [rsp + 0x28],rsi
0x497f: mov qword ptr [rsp + 0x30],rdx
0x4984: mov rcx,rsp
0x4987: mov rdx,r8
0x498a: mov rsi,r9
0x498d: call 0x4120
0x4992: mov rdi,qword ptr [rsp + 0x38]
0x4997: xor rdi,qword ptr fs:[rip+0xffffffffffffb688]
0x49a0: jnz 0x49ac
0x49a2: add rsp,0x48
0x49a6: ret 
0x49a7: call 0x1630
0x49ac: call 0x16f0
0x49b1: nop dword ptr [rax + rax*0x1]
0x49b6: nop word ptr cs:[rax + rax*0x1]
0x49c0: mov r8,-0x1
0x49c7: jmp 0x4920
0x49d0: mov rcx,rdx
0x49d3: mov r8,-0x1
0x49da: mov rdx,rsi
0x49dd: mov rsi,rdi
0x49e0: xor edi,edi
0x49e2: jmp 0x4920
0x49f0: mov r8,rcx
0x49f3: mov rcx,rdx
0x49f6: mov rdx,rsi
0x49f9: mov rsi,rdi
0x49fc: xor edi,edi
0x49fe: jmp 0x4920
0x4a10: lea rcx,[rip+0x204629]
0x4a17: jmp 0x4120
0x4a20: lea rcx,[rip+0x204619]
0x4a27: mov rdx,rsi
0x4a2a: mov rsi,rdi
0x4a2d: xor edi,edi
0x4a2f: jmp 0x4120
0x4a40: lea rcx,[rip+0x2045f9]
0x4a47: mov rdx,-0x1
0x4a4e: jmp 0x4120
0x4ac0: mov r15d,dword ptr [r12]
0x4ac9: mov qword ptr [r13],0x0
0x4ad6: mov qword ptr [r14],0x0
0x4ae6: mov rbx,r10
0x4ae9: sub rbx,rdi
0x4aec: jnz 0x4bc0
0x4af2: cmp byte ptr [r10 + 0x1],0x0
0x4af7: jz 0x4d08
0x4afd: add r10,0x1
0x4b01: mov qword ptr [rsp],0x0
0x4b09: setnz byte ptr [rsp + 0x1e]
0x4b0e: mov qword ptr [rsp + 0x8],r10
0x4b13: xor ebp,ebp
0x4b15: xor ebx,ebx
0x4b22: mov rax,qword ptr [rsp + 0x8]
0x4b27: cmp byte ptr [rax],0x2b
0x4b2a: jz 0x4ca0
0x4b30: mov rdi,qword ptr [rsp + 0x8]
0x4b35: call 0x1800
0x4b3a: test rax,rax
0x4b3d: jz 0x4ca0
0x4b43: mov r15d,dword ptr [rax + 0x10]
0x4b47: call 0x1600
0x4b4c: mov rdi,qword ptr [rsp + 0x8]
0x4b51: call 0x5770
0x4b56: mov rbx,rax
0x4b6c: mov dword ptr [r12],r15d
0x4b75: mov qword ptr [r13],r10
0x4b79: xor r10d,r10d
0x4b81: mov qword ptr [r14],rbx
0x4b84: xor ebx,ebx
0x4bc0: lea rsi,[rbx + 0x1]
0x4bc4: mov qword ptr [rsp],r10
0x4bc8: call 0x5740
0x4bcd: mov r10,qword ptr [rsp]
0x4bd1: mov byte ptr [rax + rbx*0x1],0x0
0x4bd5: mov rbp,rax
0x4bd8: cmp byte ptr [r10 + 0x1],0x0
0x4bdd: jnz 0x4d30
0x4c59: lea rax,[rip+0x2255]
0x4c60: mov byte ptr [rsp + 0x1e],0x0
0x4c65: xor ebx,ebx
0x4c67: mov qword ptr [rsp],rax
0x4c6b: call 0x1870
0x4c70: jmp 0x4b17
0x4ca0: mov rdi,qword ptr [rsp + 0x8]
0x4ca5: lea rcx,[rsp + 0x28]
0x4caa: lea r8,[rip+0x2278]
0x4cb1: xor esi,esi
0x4cb3: mov edx,0xa
0x4cb8: call 0x5800
0x4cbd: test eax,eax
0x4cbf: jz 0x4d18
0x4cc1: call 0x1600
0x4cc6: mov rdi,qword ptr [rsp + 0x8]
0x4ccb: call 0x5770
0x4cd0: mov rbx,rax
0x4cd3: lea rax,[rip+0x21e8]
0x4cda: mov qword ptr [rsp],rax
0x4d18: mov rax,qword ptr [rsp + 0x28]
0x4d1d: mov edx,0xfffffffe
0x4d22: cmp rax,rdx
0x4d25: mov r15d,eax
0x4d28: jbe 0x4b47
0x4d2e: jmp 0x4cc1
0x4d30: mov rax,r10
0x4d33: add rax,0x1
0x4d37: setnz byte ptr [rsp + 0x1e]
0x4d3c: test rbp,rbp
0x4d3f: mov qword ptr [rsp + 0x8],rax
0x4d44: jz 0x4e3a
0x4d4a: test rax,rax
0x4d4d: setz al
0x4d50: jmp 0x4bff
0x4d58: mov r15d,dword ptr [rax + 0x14]
0x4d5c: mov edi,r15d
0x4d5f: call 0x1740
0x4d64: test rax,rax
0x4d67: jz 0x4e20
0x4d6d: mov rdi,qword ptr [rax]
0x4d70: call 0x5770
0x4d75: mov rbx,rax
0x4d78: call 0x1600
0x4d7d: mov qword ptr [rsp],0x0
0x4d85: jmp 0x4c3f
0x4e20: lea rsi,[rsp + 0x30]
0x4e25: mov edi,r15d
0x4e28: call 0x2d00
0x4e2d: mov rdi,rax
0x4e30: jmp 0x4d70
0x4e35: call 0x16f0
0x4e3a: xor ebx,ebx
0x4e3c: mov qword ptr [rsp],0x0
0x4e44: jmp 0x4b17
0x4e59: push r15
0x4e5b: push r14
0x4e5d: mov r14,rsi
0x4e60: push r13
0x4e62: push r12
0x4e64: mov r13,r8
0x4e67: push rbp
0x4e68: push rbx
0x4e69: mov r12,rcx
0x4e6c: mov rbp,rdx
0x4e6f: mov rbx,rdi
0x4e72: mov esi,0x3a
0x4e77: sub rsp,0x18
0x4e7b: call 0x1730
0x4e80: mov r9,r13
0x4e83: mov r15,rax
0x4e86: mov r8,r12
0x4e89: mov rcx,rbp
0x4e8c: mov rdx,r14
0x4e8f: mov rsi,rax
0x4e92: mov rdi,rbx
0x4e95: call 0x4a80
0x4e9a: test r15,r15
0x4e9d: mov r10,rax
0x4ea0: jnz 0x4ee4
0x4ea2: test rax,rax
0x4ea5: mov qword ptr [rsp + 0x8],rax
0x4eaa: jz 0x4f18
0x4eac: mov esi,0x2e
0x4eb1: mov rdi,rbx
0x4eb4: call 0x1730
0x4eb9: test rax,rax
0x4ebc: mov r10,qword ptr [rsp + 0x8]
0x4ec1: jz 0x4ee4
0x4ec3: mov r9,r13
0x4ec6: mov r8,r12
0x4ec9: mov rcx,rbp
0x4ecc: mov rdx,r14
0x4ecf: mov rsi,rax
0x4ed2: mov rdi,rbx
0x4ed5: call 0x4a80
0x4eda: test rax,rax
0x4edd: mov r10,qword ptr [rsp + 0x8]
0x4ee2: jz 0x4f18
0x4ee4: add rsp,0x18
0x4ee8: mov rax,r10
0x4eeb: pop rbx
0x4eec: pop rbp
0x4eed: pop r12
0x4eef: pop r13
0x4ef1: pop r14
0x4ef3: pop r15
0x4ef5: ret 
0x4f18: xor r10d,r10d
0x4f1b: jmp 0x4ee4
0x5058: mov r8,rcx
0x505b: mov rcx,rdx
0x505e: lea rdx,[rip+0x1e77]
0x5065: mov esi,0x1
0x506a: xor eax,eax
0x506c: call 0x1940
0x5071: jmp 0x4f5c
0x5340: xor r9d,r9d
0x5343: cmp qword ptr [r8],0x0
0x5347: jz 0x535b
0x5349: nop dword ptr [rax]
0x5350: add r9,0x1
0x5354: cmp qword ptr [r8 + r9*0x8],0x0
0x5359: jnz 0x5350
0x535b: jmp 0x4f20
0x5360: sub rsp,0x68
0x5364: mov r10,r8
0x5367: xor r9d,r9d
0x536a: mov rax,qword ptr fs:[rip+0xffffffffffffacb5]
0x5373: mov qword ptr [rsp + 0x58],rax
0x5378: xor eax,eax
0x537a: mov r8,rsp
0x537d: nop dword ptr [rax]
0x5380: mov eax,dword ptr [r10]
0x5383: cmp eax,0x2f
0x5386: ja 0x53ca
0x5388: mov r11d,eax
0x538b: add r11,qword ptr [r10 + 0x10]
0x538f: add eax,0x8
0x5392: mov dword ptr [r10],eax
0x5395: mov rax,qword ptr [r11]
0x5398: test rax,rax
0x539b: mov qword ptr [r8 + r9*0x8],rax
0x539f: jz 0x53ab
0x53a1: add r9,0x1
0x53a5: cmp r9,0xa
0x53a9: jnz 0x5380
0x53ab: call 0x4f20
0x53b0: mov rax,qword ptr [rsp + 0x58]
0x53b5: xor rax,qword ptr fs:[rip+0xffffffffffffac6a]
0x53be: jnz 0x53c5
0x53c0: add rsp,0x68
0x53c4: ret 
0x53c5: call 0x16f0
0x53ca: mov r11,qword ptr [r10 + 0x8]
0x53ce: lea rax,[r11 + 0x8]
0x53d2: mov qword ptr [r10 + 0x8],rax
0x53d6: jmp 0x5395
0x54a0: call 0x16f0
0x54ac: mov rax,rbx
0x54af: add rbx,0x8
0x54b3: jmp 0x5466
0x54c0: push rbx
0x54c1: lea rsi,[rip+0x1a62]
0x54c8: mov edx,0x5
0x54cd: xor edi,edi
0x54cf: call 0x16c0
0x54d4: lea rdx,[rip+0x1a64]
0x54db: mov rsi,rax
0x54de: mov edi,0x1
0x54e3: xor eax,eax
0x54e5: call 0x18c0
0x54ea: lea rsi,[rip+0x1a64]
0x54f1: mov edx,0x5
0x54f6: xor edi,edi
0x54f8: call 0x16c0
0x54fd: lea rcx,[rip+0x111c]
0x5504: lea rdx,[rip+0x132c]
0x550b: mov rsi,rax
0x550e: mov edi,0x1
0x5513: xor eax,eax
0x5515: call 0x18c0
0x551a: mov rbx,qword ptr [rip+0x203b87]
0x5521: lea rsi,[rip+0x1c60]
0x5528: xor edi,edi
0x552a: mov edx,0x5
0x552f: call 0x16c0
0x5534: mov rsi,rbx
0x5537: mov rdi,rax
0x553a: pop rbx
0x553b: jmp 0x17c0
0x555a: nop word ptr [rax + rax*0x1]
0x5560: mov rax,rdi
0x5563: mul rsi
0x5566: mov rdi,rax
0x5569: seto al
0x556c: test rdi,rdi
0x556f: js 0x557b
0x5571: movzx eax,al
0x5574: test rax,rax
0x5577: jnz 0x557b
0x5579: jmp 0x5540
0x557b: sub rsp,0x8
0x557f: call 0x5790
0x5584: nop 
0x5586: nop word ptr cs:[rax + rax*0x1]
0x5590: jmp 0x5540
0x55a9: test rdi,rdi
0x55ac: jnz 0x55c8
0x55c8: call 0x1620
0x55cd: xor eax,eax
0x55cf: pop rbx
0x55d0: ret 
0x55d6: nop word ptr cs:[rax + rax*0x1]
0x55e0: mov rax,rsi
0x55e3: mul rdx
0x55e6: mov rsi,rax
0x55e9: seto al
0x55ec: test rsi,rsi
0x55ef: js 0x55fb
0x55f1: movzx eax,al
0x55f4: test rax,rax
0x55f7: jnz 0x55fb
0x55f9: jmp 0x55a0
0x55fb: sub rsp,0x8
0x55ff: call 0x5790
0x5604: nop 
0x5606: nop word ptr cs:[rax + rax*0x1]
0x5610: test rdi,rdi
0x5613: mov r9,rdx
0x5616: mov rcx,qword ptr [rsi]
0x5619: jz 0x5650
0x561b: xor edx,edx
0x561d: mov rax,0x5555555555555554
0x5627: div r9
0x562a: cmp rax,rcx
0x562d: jbe 0x566b
0x562f: mov rax,rcx
0x5632: shr rax,1
0x5635: lea rcx,[rax + rcx*0x1 + 0x1]
0x563a: mov qword ptr [rsi],rcx
0x563d: imul rcx,r9
0x5641: mov rsi,rcx
0x5644: jmp 0x55a0
0x5650: test rcx,rcx
0x5653: jz 0x5678
0x5655: mov rax,rcx
0x5658: mul r9
0x565b: seto dl
0x565e: test rax,rax
0x5661: movzx edx,dl
0x5664: js 0x566b
0x5666: test rdx,rdx
0x5669: jz 0x563a
0x566b: sub rsp,0x8
0x566f: call 0x5790
0x5674: nop dword ptr [rax]
0x5678: xor edx,edx
0x567a: mov eax,0x80
0x567f: xor r8d,r8d
0x5682: div r9
0x5685: test rax,rax
0x5688: setz r8b
0x568c: lea rcx,[r8 + rax*0x1]
0x5690: jmp 0x5655
0x56a0: test rdi,rdi
0x56a3: mov rax,qword ptr [rsi]
0x56a6: jz 0x56d0
0x56a8: mov rdx,0x5555555555555553
0x56b2: cmp rax,rdx
0x56b5: ja 0x56e1
0x56b7: mov rdx,rax
0x56ba: shr rdx,1
0x56bd: lea rax,[rdx + rax*0x1 + 0x1]
0x56c2: mov qword ptr [rsi],rax
0x56c5: mov rsi,rax
0x56c8: jmp 0x55a0
0x56d0: test rax,rax
0x56d3: mov edx,0x80
0x56d8: cmovz rax,rdx
0x56dc: test rax,rax
0x56df: jns 0x56c2
0x56e1: sub rsp,0x8
0x56e5: call 0x5790
0x56ea: nop word ptr [rax + rax*0x1]
0x56f0: push rbx
0x56f1: mov rbx,rdi
0x56f4: call 0x5540
0x56f9: mov rdx,rbx
0x56fc: xor esi,esi
0x56fe: mov rdi,rax
0x5701: pop rbx
0x5702: jmp 0x1790
0x5710: mov rax,rdi
0x5713: sub rsp,0x8
0x5717: mul rsi
0x571a: seto dl
0x571d: test rax,rax
0x5720: js 0x5739
0x5722: movzx edx,dl
0x5725: test rdx,rdx
0x5728: jnz 0x5739
0x572a: call 0x17d0
0x572f: test rax,rax
0x5732: jz 0x5739
0x5734: add rsp,0x8
0x5738: ret 
0x5739: call 0x5790
0x573e: nop 
0x57c0: call 0x1630
0x57c5: nop word ptr cs:[rax + rax*0x1]
0x57cf: nop 
0x57f7: nop word ptr [rax + rax*0x1]
0x58a4: cmp eax,0x22
0x58a7: mov ebp,0x1
0x58ac: jnz 0x58d8
0x58d2: nop word ptr [rax + rax*0x1]
0x5b80: call 0x16f0
0x5b85: lea rcx,[rip+0x17d4]
0x5b8c: lea rsi,[rip+0x16ad]
0x5b93: lea rdi,[rip+0x16c6]
0x5b9a: mov edx,0x54
0x5b9f: call 0x1780
0x5c9e: call 0x16f0
0x5ca3: nop word ptr cs:[rax + rax*0x1]
0x5cad: nop dword ptr [rax]
0x5cb0: push r12
0x5cb2: push rbp
0x5cb3: mov rbp,rdi
0x5cb6: push rbx
0x5cb7: call 0x1670
0x5cbc: mov ebx,dword ptr [rbp]
0x5cbf: mov rdi,rbp
0x5cc2: mov r12,rax
0x5cc5: call 0x6060
0x5cca: and ebx,0x20
0x5ccd: test ebx,ebx
0x5ccf: jnz 0x5ce8
0x5cd1: test eax,eax
0x5cd3: jz 0x5cdf
0x5cd5: test r12,r12
0x5cd8: mov eax,0xffffffff
0x5cdd: jz 0x5d18
0x5cdf: pop rbx
0x5ce0: pop rbp
0x5ce1: pop r12
0x5ce3: ret 
0x5ce8: test eax,eax
0x5cea: jnz 0x5d08
0x5cec: call 0x1640
0x5cf1: mov dword ptr [rax],0x0
0x5cf7: mov eax,0xffffffff
0x5cfc: pop rbx
0x5cfd: pop rbp
0x5cfe: pop r12
0x5d00: ret 
0x5d08: pop rbx
0x5d09: mov eax,0xffffffff
0x5d0e: pop rbp
0x5d0f: pop r12
0x5d11: ret 
0x5d18: call 0x1640
0x5d1d: cmp dword ptr [rax],0x9
0x5d20: pop rbx
0x5d21: pop rbp
0x5d22: pop r12
0x5d24: setnz al
0x5d27: movzx eax,al
0x5d2a: neg eax
0x5d2c: ret 
0x6057: call 0x16f0
0x605c: nop dword ptr [rax]
0x6060: push r12
0x6062: push rbp
0x6063: push rbx
0x6064: mov rbx,rdi
0x6067: call 0x1810
0x606c: test eax,eax
0x606e: mov rdi,rbx
0x6071: js 0x60c7
0x6073: call 0x1890
0x6078: test eax,eax
0x607a: jnz 0x60a8
0x607c: mov rdi,rbx
0x607f: call 0x60e0
0x6084: test eax,eax
0x6086: jz 0x60c4
0x6088: call 0x1640
0x608d: mov r12d,dword ptr [rax]
0x6090: mov rdi,rbx
0x6093: mov rbp,rax
0x6096: call 0x1690
0x609b: test r12d,r12d
0x609e: jnz 0x60d0
0x60a0: pop rbx
0x60a1: pop rbp
0x60a2: pop r12
0x60a4: ret 
0x60a8: mov rdi,rbx
0x60ab: call 0x1810
0x60b0: xor esi,esi
0x60b2: mov edx,0x1
0x60b7: mov edi,eax
0x60b9: call 0x1770
0x60be: cmp rax,-0x1
0x60c2: jnz 0x607c
0x60c4: mov rdi,rbx
0x60c7: pop rbx
0x60c8: pop rbp
0x60c9: pop r12
0x60cb: jmp 0x1690
0x60d0: mov dword ptr [rbp],r12d
0x60d4: mov eax,0xffffffff
0x60d9: jmp 0x60a0
0x60e0: test rdi,rdi
0x60e3: push rbx
0x60e4: mov rbx,rdi
0x60e7: jz 0x60fa
0x60e9: call 0x1890
0x60ee: test eax,eax
0x60f0: jz 0x60fa
0x60f2: test dword ptr [rbx],0x100
0x60f8: jnz 0x6108
0x60fa: mov rdi,rbx
0x60fd: pop rbx
0x60fe: jmp 0x1850
0x6108: mov rdi,rbx
0x610b: mov edx,0x1
0x6110: xor esi,esi
0x6112: call 0x6120
0x6117: mov rdi,rbx
0x611a: pop rbx
0x611b: jmp 0x1850
0x6120: mov rax,qword ptr [rdi + 0x8]
0x6124: cmp qword ptr [rdi + 0x10],rax
0x6128: jz 0x6130
0x612a: jmp 0x18f0
0x6130: mov rax,qword ptr [rdi + 0x20]
0x6134: cmp qword ptr [rdi + 0x28],rax
0x6138: jnz 0x612a
0x613a: cmp qword ptr [rdi + 0x48],0x0
0x613f: jnz 0x612a
0x6141: push r12
0x6143: push rbp
0x6144: mov r12d,edx
0x6147: push rbx
0x6148: mov rbp,rsi
0x614b: mov rbx,rdi
0x614e: call 0x1810
0x6153: mov edx,r12d
0x6156: mov rsi,rbp
0x6159: mov edi,eax
0x615b: call 0x1770
0x6160: cmp rax,-0x1
0x6164: jz 0x6172
0x6166: and dword ptr [rbx],0xffffffef
0x6169: mov qword ptr [0x90 + rbx],rax
0x6170: xor eax,eax
0x6172: pop rbx
0x6173: pop rbp
0x6174: pop r12
0x6176: ret 
0x6180: push r15
0x6182: push r14
0x6184: mov r15,rdx
0x6187: push r13
0x6189: push r12
0x618b: lea r12,[rip+0x2028be]
0x6192: push rbp
0x6193: lea rbp,[rip+0x2028be]
0x619a: push rbx
0x619b: mov r13d,edi
0x619e: mov r14,rsi
0x61a1: sub rbp,r12
0x61a4: sub rsp,0x8
0x61a8: sar rbp,0x3
0x61ac: call 0x15d8
0x61b1: test rbp,rbp
0x61b4: jz 0x61d6
0x61b6: xor ebx,ebx
0x61b8: nop dword ptr [rax + rax*0x1]
0x61c0: mov rdx,r15
0x61c3: mov rsi,r14
0x61c6: mov edi,r13d
0x61c9: call qword ptr [r12 + rbx*0x8]
0x61cd: add rbx,0x1
0x61d1: cmp rbp,rbx
0x61d4: jnz 0x61c0
0x61d6: add rsp,0x8
0x61da: pop rbx
0x61db: pop rbp
0x61dc: pop r12
0x61de: pop r13
0x61e0: pop r14
0x61e2: pop r15
0x61e4: ret 
0x61f0: ret 
0x6210: sub rsp,0x8
0x6214: add rsp,0x8
0x6218: ret 
