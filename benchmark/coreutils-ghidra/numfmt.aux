0x1970: sub rsp,0x8
0x1974: mov rax,qword ptr [rip+0x20c665]
0x197b: test rax,rax
0x197e: jz 0x1982
0x1980: call rax
0x1982: add rsp,0x8
0x1986: ret 
0x1990: push qword ptr [rip+0x20c45a]
0x1996: jmp qword ptr [rip+0x20c45c]
0x19a6: push 0x0
0x19ab: jmp 0x1990
0x19b6: push 0x1
0x19bb: jmp 0x1990
0x19c6: push 0x2
0x19cb: jmp 0x1990
0x19d6: push 0x3
0x19db: jmp 0x1990
0x19e6: push 0x4
0x19eb: jmp 0x1990
0x19f0: jmp qword ptr [rip+0x20c432]
0x19f6: push 0x5
0x19fb: jmp 0x1990
0x1a06: push 0x6
0x1a0b: jmp 0x1990
0x1a10: jmp qword ptr [rip+0x20c422]
0x1a16: push 0x7
0x1a1b: jmp 0x1990
0x1a26: push 0x8
0x1a2b: jmp 0x1990
0x1a30: jmp qword ptr [rip+0x20c412]
0x1a36: push 0x9
0x1a3b: jmp 0x1990
0x1a40: jmp qword ptr [rip+0x20c40a]
0x1a46: push 0xa
0x1a4b: jmp 0x1990
0x1a56: push 0xb
0x1a5b: jmp 0x1990
0x1a60: jmp qword ptr [rip+0x20c3fa]
0x1a66: push 0xc
0x1a6b: jmp 0x1990
0x1a76: push 0xd
0x1a7b: jmp 0x1990
0x1a86: push 0xe
0x1a8b: jmp 0x1990
0x1a96: push 0xf
0x1a9b: jmp 0x1990
0x1aa6: push 0x10
0x1aab: jmp 0x1990
0x1ab0: jmp qword ptr [rip+0x20c3d2]
0x1ab6: push 0x11
0x1abb: jmp 0x1990
0x1ac6: push 0x12
0x1acb: jmp 0x1990
0x1ad6: push 0x13
0x1adb: jmp 0x1990
0x1ae6: push 0x14
0x1aeb: jmp 0x1990
0x1af6: push 0x15
0x1afb: jmp 0x1990
0x1b06: push 0x16
0x1b0b: jmp 0x1990
0x1b10: jmp qword ptr [rip+0x20c3a2]
0x1b16: push 0x17
0x1b1b: jmp 0x1990
0x1b20: jmp qword ptr [rip+0x20c39a]
0x1b26: push 0x18
0x1b2b: jmp 0x1990
0x1b36: push 0x19
0x1b3b: jmp 0x1990
0x1b46: push 0x1a
0x1b4b: jmp 0x1990
0x1b56: push 0x1b
0x1b5b: jmp 0x1990
0x1b66: push 0x1c
0x1b6b: jmp 0x1990
0x1b76: push 0x1d
0x1b7b: jmp 0x1990
0x1b86: push 0x1e
0x1b8b: jmp 0x1990
0x1b90: jmp qword ptr [rip+0x20c362]
0x1b96: push 0x1f
0x1b9b: jmp 0x1990
0x1ba6: push 0x20
0x1bab: jmp 0x1990
0x1bb6: push 0x21
0x1bbb: jmp 0x1990
0x1bc6: push 0x22
0x1bcb: jmp 0x1990
0x1bd0: jmp qword ptr [rip+0x20c342]
0x1bd6: push 0x23
0x1bdb: jmp 0x1990
0x1be0: jmp qword ptr [rip+0x20c33a]
0x1be6: push 0x24
0x1beb: jmp 0x1990
0x1bf6: push 0x25
0x1bfb: jmp 0x1990
0x1c00: jmp qword ptr [rip+0x20c32a]
0x1c06: push 0x26
0x1c0b: jmp 0x1990
0x1c16: push 0x27
0x1c1b: jmp 0x1990
0x1c20: jmp qword ptr [rip+0x20c31a]
0x1c26: push 0x28
0x1c2b: jmp 0x1990
0x1c36: push 0x29
0x1c3b: jmp 0x1990
0x1c46: push 0x2a
0x1c4b: jmp 0x1990
0x1c56: push 0x2b
0x1c5b: jmp 0x1990
0x1c66: push 0x2c
0x1c6b: jmp 0x1990
0x1c76: push 0x2d
0x1c7b: jmp 0x1990
0x1c86: push 0x2e
0x1c8b: jmp 0x1990
0x1c90: jmp qword ptr [rip+0x20c2e2]
0x1c96: push 0x2f
0x1c9b: jmp 0x1990
0x1ca6: push 0x30
0x1cab: jmp 0x1990
0x1cb0: jmp qword ptr [rip+0x20c2d2]
0x1cb6: push 0x31
0x1cbb: jmp 0x1990
0x1cc6: push 0x32
0x1ccb: jmp 0x1990
0x1cd6: push 0x33
0x1cdb: jmp 0x1990
0x1ce6: push 0x34
0x1ceb: jmp 0x1990
0x1cf6: push 0x35
0x1cfb: jmp 0x1990
0x1d06: push 0x36
0x1d0b: jmp 0x1990
0x1d16: push 0x37
0x1d1b: jmp 0x1990
0x1d26: push 0x38
0x1d2b: jmp 0x1990
0x1d36: push 0x39
0x1d3b: jmp 0x1990
0x1d40: jmp qword ptr [rip+0x20c2aa]
0x1f85: nop dword ptr [rax]
0x2649: jmp 0x2413
0x280f: jmp 0x27d2
0x2832: jmp 0x2257
0x2858: mov eax,dword ptr [rip+0x20b87a]
0x285e: cmp ebp,eax
0x2860: jle 0x2589
0x2866: jmp 0x25c5
0x28a5: mov r9,qword ptr [rsp + 0x10]
0x2aed: call 0x1ab0
0x2b3a: mov rdi,r12
0x2b3d: call 0x7d50
0x2b42: lea rsi,[rip+0x82d7]
0x2b49: mov rbx,rax
0x2b4c: mov edx,0x5
0x2b51: xor edi,edi
0x2b53: call 0x1a80
0x2b58: mov rcx,rbx
0x2b5b: mov rdx,rax
0x2b5e: xor esi,esi
0x2b60: mov edi,0x1
0x2b65: xor eax,eax
0x2b67: call 0x1c80
0x2bba: hlt 
0x2bc0: lea rdi,[rip+0x20b4f9]
0x2bc7: push rbp
0x2bc8: lea rax,[rip+0x20b4f1]
0x2bcf: cmp rax,rdi
0x2bd2: mov rbp,rsp
0x2bd5: jz 0x2bf0
0x2bd7: mov rax,qword ptr [rip+0x20b3f2]
0x2bde: test rax,rax
0x2be1: jz 0x2bf0
0x2be3: pop rbp
0x2be4: jmp rax
0x2bf0: pop rbp
0x2bf1: ret 
0x2c00: lea rdi,[rip+0x20b4b9]
0x2c07: lea rsi,[rip+0x20b4b2]
0x2c0e: push rbp
0x2c0f: sub rsi,rdi
0x2c12: mov rbp,rsp
0x2c15: sar rsi,0x3
0x2c19: mov rax,rsi
0x2c1c: shr rax,0x3f
0x2c20: add rsi,rax
0x2c23: sar rsi,1
0x2c26: jz 0x2c40
0x2c28: mov rax,qword ptr [rip+0x20b3b9]
0x2c2f: test rax,rax
0x2c32: jz 0x2c40
0x2c34: pop rbp
0x2c35: jmp rax
0x2c40: pop rbp
0x2c41: ret 
0x2c50: cmp byte ptr [rip+0x20b4b1],0x0
0x2c57: jnz 0x2c88
0x2c59: cmp qword ptr [rip+0x20b38f],0x0
0x2c61: push rbp
0x2c62: mov rbp,rsp
0x2c65: jz 0x2c73
0x2c67: mov rdi,qword ptr [rip+0x20b39a]
0x2c6e: call 0x1d40
0x2c73: call 0x2bc0
0x2c78: mov byte ptr [rip+0x20b489],0x1
0x2c7f: pop rbp
0x2c80: ret 
0x2c88: ret 
0x2c90: push rbp
0x2c91: mov rbp,rsp
0x2c94: pop rbp
0x2c95: jmp 0x2c00
0x2f3b: call 0x1ab0
0x3541: pop r15
0x3543: pop rax
0x3544: jmp 0x32a0
0x36d6: jmp 0x3248
0x3725: jmp 0x3248
0x3850: pop rcx
0x3851: pop rsi
0x3852: jmp 0x32a0
0x392e: fxch 
0x3930: jmp 0x3934
0x3932: fxch 
0x3934: fld st0
0x3936: fldcw word ptr [rsp + 0x4c]
0x393a: fistp qword ptr [rsp]
0x393d: fldcw word ptr [rsp + 0x4e]
0x3941: fild qword ptr [rsp]
0x3944: fxch 
0x3946: fucomip st0,st1
0x3948: jbe 0x395b
0x394a: fstp st0
0x394c: mov rax,qword ptr [rsp]
0x3950: add rax,0x1
0x3954: mov qword ptr [rsp],rax
0x3958: fild qword ptr [rsp]
0x395b: test esi,esi
0x395d: faddp 
0x395f: jz 0x397f
0x3961: mov eax,esi
0x3963: fld dword ptr [rip+0x784b]
0x3969: sub eax,0x1
0x396c: jz 0x3c49
0x3b9e: fxch 
0x3ba0: jmp 0x3ba4
0x3ba2: fxch 
0x3ba4: fldcw word ptr [rsp + 0x4c]
0x3ba8: fistp qword ptr [rsp]
0x3bab: fldcw word ptr [rsp + 0x4e]
0x3baf: fild qword ptr [rsp]
0x3bb2: jmp 0x395b
0x3bb7: fxch 
0x3bb9: jmp 0x3bbd
0x3bbb: fxch 
0x3bbd: fldz 
0x3bbf: fucomip st0,st1
0x3bc1: jbe 0x3934
0x3bc7: fchs 
0x3bc9: fld st0
0x3bcb: fldcw word ptr [rsp + 0x4c]
0x3bcf: fistp qword ptr [rsp + 0x40]
0x3bd3: fldcw word ptr [rsp + 0x4e]
0x3bd7: mov rax,qword ptr [rsp + 0x40]
0x3bdc: xor ecx,ecx
0x3bde: mov qword ptr [rsp],rax
0x3be2: fild qword ptr [rsp]
0x3be5: fxch 
0x3be7: fucomip st0,st1
0x3be9: fstp st0
0x3beb: seta cl
0x3bee: add rax,rcx
0x3bf1: neg rax
0x3bf4: mov qword ptr [rsp],rax
0x3bf8: fild qword ptr [rsp]
0x3bfb: jmp 0x395b
0x3c00: fxch 
0x3c02: jmp 0x3c06
0x3c04: fxch 
0x3c06: fldz 
0x3c08: fucomip st0,st1
0x3c0a: ja 0x45c4
0x3c10: fadd dword ptr [rip+0x75aa]
0x3c16: fldcw word ptr [rsp + 0x4c]
0x3c1a: fistp qword ptr [rsp]
0x3c1d: fldcw word ptr [rsp + 0x4e]
0x3c21: fild qword ptr [rsp]
0x3c24: jmp 0x395b
0x3c29: fxch 
0x3c2b: jmp 0x3c2f
0x3c2d: fxch 
0x3c2f: fchs 
0x3c31: fld st0
0x3c33: fldcw word ptr [rsp + 0x4c]
0x3c37: fistp qword ptr [rsp + 0x40]
0x3c3b: fldcw word ptr [rsp + 0x4e]
0x3c3f: jmp 0x3bd7
0x3e3d: fstp st1
0x3e3f: fxch 
0x3e41: fxch st2
0x3e43: fxch 
0x4076: nop word ptr cs:[rax + rax*0x1]
0x40ea: fstp st1
0x40ec: fxch 
0x40ee: fxch st2
0x40f0: fxch 
0x4131: fstp st1
0x4133: fxch 
0x4135: fxch st2
0x4137: fxch 
0x41a3: fstp st1
0x41a5: fxch 
0x41a7: fxch st2
0x41a9: fxch 
0x41da: fxch st3
0x4273: pop rax
0x4274: pop rdx
0x4275: jmp 0x32a0
0x45c4: fsub dword ptr [rip+0x6bf6]
0x45ca: fldcw word ptr [rsp + 0x4c]
0x45ce: fistp qword ptr [rsp]
0x45d1: fldcw word ptr [rsp + 0x4e]
0x45d5: fild qword ptr [rsp]
0x45d8: jmp 0x395b
0x465c: call 0x1ab0
0x4921: mov eax,dword ptr [rip+0x2096ed]
0x4927: jmp 0x48e1
0x4931: jmp 0x4819
0x5080: mov eax,dword ptr [rsi]
0x5082: cmp dword ptr [rdi],eax
0x5084: jl 0x5090
0x5086: setg al
0x5089: movzx eax,al
0x508c: ret 
0x5090: mov eax,0xffffffff
0x5095: ret 
0x54bd: mov rax,qword ptr [rcx]
0x54c0: mov qword ptr [rip+0x208e2d],0x0
0x54cb: mov qword ptr [rip+0x208e2a],0x0
0x54d6: mov qword ptr [rip+0x208cb7],0x0
0x54e1: cmp rax,0x1
0x54e5: ja 0x5579
0x54eb: cmp rbx,0x1
0x54ef: jbe 0x5535
0x54f1: mov rax,rbx
0x54f4: lea rbp,[rcx + 0x8]
0x54f8: shl rax,0x4
0x54fc: lea r12,[rcx + rax*0x1 - 0x8]
0x5501: nop dword ptr [rax]
0x5508: mov rax,qword ptr [rbp]
0x550c: lea rdi,[rax + 0x1]
0x5510: mov rax,qword ptr [rbp + 0x8]
0x5514: cmp rdi,rax
0x5517: jz 0x552c
0x5519: lea rsi,[rax - 0x1]
0x551d: mov qword ptr [rsp + 0x8],rcx
0x5522: call 0x50a0
0x5527: mov rcx,qword ptr [rsp + 0x8]
0x552c: add rbp,0x10
0x5530: cmp r12,rbp
0x5533: jnz 0x5508
0x5535: shl rbx,0x4
0x5539: mov rax,qword ptr [rcx + rbx*0x1 - 0x8]
0x553e: cmp rax,-0x1
0x5542: jz 0x555e
0x5544: lea rdi,[rax + 0x1]
0x5548: mov rsi,-0x1
0x554f: mov qword ptr [rsp + 0x8],rcx
0x5554: call 0x50a0
0x5559: mov rcx,qword ptr [rsp + 0x8]
0x555e: mov rdi,rcx
0x5561: call 0x19b0
0x5566: mov rbx,qword ptr [rip+0x208d93]
0x556d: mov rcx,qword ptr [rip+0x208d84]
0x5574: jmp 0x5398
0x5579: lea rsi,[rax - 0x1]
0x557d: mov edi,0x1
0x5582: mov qword ptr [rsp + 0x8],rcx
0x5587: call 0x50a0
0x558c: mov rcx,qword ptr [rsp + 0x8]
0x5591: jmp 0x54eb
0x55a2: lea rsi,[rip+0x5d27]
0x55a9: xor edi,edi
0x55ab: call 0x1a80
0x55be: mov edi,0x1
0x55c3: call 0x4940
0x55fd: lea rsi,[rip+0x5cac]
0x5604: xor edi,edi
0x5606: call 0x1a80
0x560b: jmp 0x55b0
0x5648: lea rsi,[rip+0x5cd9]
0x564f: xor edi,edi
0x5651: call 0x1a80
0x5667: mov rdi,rbx
0x566a: call 0x19b0
0x566f: mov edi,0x1
0x5674: call 0x4940
0x5679: mov edx,0x5
0x567e: lea rsi,[rip+0x5c7b]
0x5685: jmp 0x55e4
0x56b9: lea rsi,[rip+0x5cb8]
0x56c0: xor edi,edi
0x56c2: call 0x1a80
0x56c7: jmp 0x55b0
0x56e3: lea rsi,[rip+0x5c66]
0x56ea: xor edi,edi
0x56ec: call 0x1a80
0x5702: mov edi,0x1
0x5707: call 0x4940
0x5730: sub rsp,0x8
0x5734: mov rdi,qword ptr [rip+0x208bbd]
0x573b: mov qword ptr [rip+0x208bba],0x0
0x5746: mov qword ptr [rip+0x208a47],0x0
0x5751: call 0x19b0
0x5756: mov qword ptr [rip+0x208b97],0x0
0x5761: add rsp,0x8
0x5765: ret 
0x5770: mov edi,0x1
0x5775: jmp 0x4940
0x5920: push r15
0x5922: push r14
0x5924: mov r14,rdi
0x5927: push r13
0x5929: push r12
0x592b: xor edi,edi
0x592d: push rbp
0x592e: push rbx
0x592f: mov rbp,rsi
0x5932: lea rsi,[rip+0x5aa5]
0x5939: mov r12,rdx
0x593c: mov edx,0x5
0x5941: sub rsp,0x8
0x5945: mov rbx,qword ptr [rip+0x2087b4]
0x594c: call 0x1a80
0x5951: mov rdi,rax
0x5954: mov rsi,rbx
0x5957: call 0x1b80
0x595c: mov r15,qword ptr [r14]
0x595f: test r15,r15
0x5962: jz 0x59f8
0x5968: xor r13d,r13d
0x596b: xor ebx,ebx
0x596d: jmp 0x59a8
0x5970: mov rdi,r15
0x5973: add rbx,0x1
0x5977: mov r13,rbp
0x597a: call 0x7d50
0x597f: mov rdi,qword ptr [rip+0x20877a]
0x5986: lea rdx,[rip+0x5a66]
0x598d: mov rcx,rax
0x5990: mov esi,0x1
0x5995: xor eax,eax
0x5997: add rbp,r12
0x599a: call 0x1ce0
0x599f: mov r15,qword ptr [r14 + rbx*0x8]
0x59a3: test r15,r15
0x59a6: jz 0x59f8
0x59a8: test rbx,rbx
0x59ab: jz 0x5970
0x59ad: mov rdx,r12
0x59b0: mov rsi,rbp
0x59b3: mov rdi,r13
0x59b6: call 0x1b70
0x59bb: test eax,eax
0x59bd: jnz 0x5970
0x59bf: mov rdi,r15
0x59c2: add rbx,0x1
0x59c6: add rbp,r12
0x59c9: call 0x7d50
0x59ce: mov rdi,qword ptr [rip+0x20872b]
0x59d5: lea rdx,[rip+0x5a1f]
0x59dc: mov rcx,rax
0x59df: mov esi,0x1
0x59e4: xor eax,eax
0x59e6: call 0x1ce0
0x59eb: mov r15,qword ptr [r14 + rbx*0x8]
0x59ef: test r15,r15
0x59f2: jnz 0x59a8
0x59f4: nop dword ptr [rax]
0x59f8: mov rdi,qword ptr [rip+0x208701]
0x59ff: mov rax,qword ptr [rdi + 0x28]
0x5a03: cmp rax,qword ptr [rdi + 0x30]
0x5a07: jnc 0x5a28
0x5a09: lea rdx,[rax + 0x1]
0x5a0d: mov qword ptr [rdi + 0x28],rdx
0x5a11: mov byte ptr [rax],0xa
0x5a14: add rsp,0x8
0x5a18: pop rbx
0x5a19: pop rbp
0x5a1a: pop r12
0x5a1c: pop r13
0x5a1e: pop r14
0x5a20: pop r15
0x5a22: ret 
0x5a28: add rsp,0x8
0x5a2c: mov esi,0xa
0x5a31: pop rbx
0x5a32: pop rbp
0x5a33: pop r12
0x5a35: pop r13
0x5a37: pop r14
0x5a39: pop r15
0x5a3b: jmp 0x1af0
0x5a93: mov rdx,r15
0x5a96: mov rsi,rbp
0x5a99: mov rdi,rbx
0x5a9c: call 0x5920
0x5aa1: call r13
0x5aa4: mov rax,-0x1
0x5aab: jmp 0x5a76
0x5ab0: push r14
0x5ab2: push r13
0x5ab4: push r12
0x5ab6: push rbp
0x5ab7: push rbx
0x5ab8: mov r14,qword ptr [rsi]
0x5abb: test r14,r14
0x5abe: jz 0x5af1
0x5ac0: mov r12,rcx
0x5ac3: mov r13,rdi
0x5ac6: mov rbp,rdx
0x5ac9: lea rbx,[rsi + 0x8]
0x5acd: jmp 0x5adf
0x5ad0: mov r14,qword ptr [rbx]
0x5ad3: add rbp,r12
0x5ad6: add rbx,0x8
0x5ada: test r14,r14
0x5add: jz 0x5af1
0x5adf: mov rdx,r12
0x5ae2: mov rsi,rbp
0x5ae5: mov rdi,r13
0x5ae8: call 0x1b70
0x5aed: test eax,eax
0x5aef: jnz 0x5ad0
0x5af1: pop rbx
0x5af2: mov rax,r14
0x5af5: pop rbp
0x5af6: pop r12
0x5af8: pop r13
0x5afa: pop r14
0x5afc: ret 
0x5b00: mov qword ptr [rip+0x2086a1],rdi
0x5b07: ret 
0x5b10: mov byte ptr [rip+0x208689],dil
0x5b17: ret 
0x5b20: push rbp
0x5b21: push rbx
0x5b22: sub rsp,0x8
0x5b26: mov rdi,qword ptr [rip+0x20859b]
0x5b2d: call 0x91b0
0x5b32: test eax,eax
0x5b34: jz 0x5b4c
0x5b36: call 0x19d0
0x5b3b: cmp byte ptr [rip+0x20865e],0x0
0x5b42: mov rbx,rax
0x5b45: jz 0x5b63
0x5b47: cmp dword ptr [rax],0x20
0x5b4a: jnz 0x5b63
0x5b4c: mov rdi,qword ptr [rip+0x2085ad]
0x5b53: call 0x91b0
0x5b58: test eax,eax
0x5b5a: jnz 0x5ba2
0x5b5c: add rsp,0x8
0x5b60: pop rbx
0x5b61: pop rbp
0x5b62: ret 
0x5b63: lea rsi,[rip+0x5896]
0x5b6a: xor edi,edi
0x5b6c: mov edx,0x5
0x5b71: call 0x1a80
0x5b76: mov rdi,qword ptr [rip+0x20862b]
0x5b7d: mov rbp,rax
0x5b80: test rdi,rdi
0x5b83: jz 0x5bad
0x5b85: call 0x7b50
0x5b8a: mov esi,dword ptr [rbx]
0x5b8c: lea rdx,[rip+0x5879]
0x5b93: mov rcx,rax
0x5b96: mov r8,rbp
0x5b99: xor edi,edi
0x5b9b: xor eax,eax
0x5b9d: call 0x1c80
0x5ba2: mov edi,dword ptr [rip+0x2084a8]
0x5ba8: call 0x19f0
0x5bad: mov esi,dword ptr [rbx]
0x5baf: lea rdx,[rip+0x5847]
0x5bb6: mov rcx,rax
0x5bb9: xor edi,edi
0x5bbb: xor eax,eax
0x5bbd: call 0x1c80
0x5bc2: jmp 0x5ba2
0x5c5c: mov r12,r15
0x5c5f: xor edx,edx
0x5d30: mov qword ptr [rsp + 0x8],0x0
0x5d68: xor ebp,ebp
0x5d6a: jmp 0x5c6d
0x5d70: call 0x1a90
0x5d75: cmp rax,0x1
0x5d79: jbe 0x5c0a
0x5d7f: xor edx,edx
0x5d81: xor edi,edi
0x5d83: mov rsi,r14
0x5d86: call 0x1a40
0x5d8b: cmp rax,-0x1
0x5d8f: jnz 0x5dc0
0x5d91: test bl,0x1
0x5d94: jnz 0x5c0a
0x5d9a: mov qword ptr [rsp],0x0
0x5da2: mov qword ptr [rsp + 0x8],0x0
0x5dab: mov r12,-0x1
0x5db2: jmp 0x5d01
0x5dc0: lea rbp,[rax + 0x1]
0x5dc4: lea rax,[rbp*0x4]
0x5dcc: mov rdi,rax
0x5dcf: mov qword ptr [rsp + 0x20],rax
0x5dd4: call 0x1bf0
0x5dd9: test rax,rax
0x5ddc: mov qword ptr [rsp],rax
0x5de0: jz 0x5f65
0x5de6: mov rdi,qword ptr [rsp]
0x5dea: mov rdx,rbp
0x5ded: mov rsi,r14
0x5df0: call 0x1a40
0x5df5: test rax,rax
0x5df8: jz 0x5f04
0x5dfe: mov rax,qword ptr [rsp]
0x5e02: mov rcx,qword ptr [rsp + 0x20]
0x5e07: mov dword ptr [rax + rcx*0x1 - 0x4],0x0
0x5e0f: mov edi,dword ptr [rax]
0x5e11: mov rdx,rax
0x5e14: test edi,edi
0x5e16: jz 0x5f15
0x5e1c: mov byte ptr [rsp + 0x20],0x0
0x5e21: nop dword ptr [rax]
0x5e28: mov qword ptr [rsp + 0x28],rdx
0x5e2d: call 0x1d10
0x5e32: test eax,eax
0x5e34: mov rdx,qword ptr [rsp + 0x28]
0x5e39: jnz 0x5e46
0x5e3b: mov dword ptr [rdx],0xfffd
0x5e41: mov byte ptr [rsp + 0x20],0x1
0x5e46: add rdx,0x4
0x5e4a: mov edi,dword ptr [rdx]
0x5e4c: test edi,edi
0x5e4e: jnz 0x5e28
0x5e50: mov rdi,qword ptr [rsp]
0x5e54: mov rsi,rbp
0x5e57: call 0x1a30
0x5e5c: cmp byte ptr [rsp + 0x20],0x0
0x5e61: movsxd rbp,eax
0x5e64: jz 0x5f28
0x5e6a: mov rsi,qword ptr [rsp]
0x5e6e: xor edx,edx
0x5e70: xor edi,edi
0x5e72: call 0x1cb0
0x5e77: add rax,0x1
0x5e7b: mov qword ptr [rsp + 0x20],rax
0x5e80: mov rdi,qword ptr [rsp + 0x20]
0x5e85: call 0x1bf0
0x5e8a: test rax,rax
0x5e8d: mov qword ptr [rsp + 0x8],rax
0x5e92: jz 0x5f50
0x5e98: mov r15,qword ptr [rsp]
0x5e9c: mov r14,qword ptr [r12]
0x5ea0: mov edi,dword ptr [r15]
0x5ea3: test edi,edi
0x5ea5: jz 0x5f7f
0x5eab: xor ebp,ebp
0x5ead: jmp 0x5ebe
0x5eb0: add r15,0x4
0x5eb4: mov edi,dword ptr [r15]
0x5eb7: mov rbp,rdx
0x5eba: test edi,edi
0x5ebc: jz 0x5edf
0x5ebe: call 0x1be0
0x5ec3: cmp eax,-0x1
0x5ec6: movsxd rdx,eax
0x5ec9: jnz 0x5ed7
0x5ecb: mov dword ptr [r15],0xfffd
0x5ed2: mov edx,0x1
0x5ed7: add rdx,rbp
0x5eda: cmp r14,rdx
0x5edd: jnc 0x5eb0
0x5edf: mov r14,qword ptr [rsp + 0x8]
0x5ee4: mov rdx,qword ptr [rsp + 0x20]
0x5ee9: mov rsi,qword ptr [rsp]
0x5eed: mov dword ptr [r15],0x0
0x5ef4: mov rdi,r14
0x5ef7: call 0x1cb0
0x5efc: mov r15,rax
0x5eff: jmp 0x5c1e
0x5f04: mov rbp,r15
0x5f07: mov qword ptr [rsp + 0x8],0x0
0x5f10: jmp 0x5c1e
0x5f15: mov rdi,qword ptr [rsp]
0x5f19: mov rsi,rbp
0x5f1c: call 0x1a30
0x5f21: movsxd rbp,eax
0x5f24: nop dword ptr [rax]
0x5f28: mov rax,qword ptr [r12]
0x5f2c: cmp rax,rbp
0x5f2f: jnc 0x5d30
0x5f35: mov rax,qword ptr [rsp + 0x8]
0x5f3a: add rax,0x1
0x5f3e: mov qword ptr [rsp + 0x20],rax
0x5f43: jmp 0x5e80
0x5f50: test bl,0x1
0x5f53: jnz 0x5c1e
0x5f59: mov r12,-0x1
0x5f60: jmp 0x5d01
0x5f65: test bl,0x1
0x5f68: mov rbp,r15
0x5f6b: mov qword ptr [rsp + 0x8],0x0
0x5f74: jnz 0x5c1e
0x5f7a: jmp 0x5d9a
0x5f7f: mov r15,qword ptr [rsp]
0x5f83: xor ebp,ebp
0x5f85: jmp 0x5edf
0x5fa0: push r15
0x5fa2: push r14
0x5fa4: mov r15,rdi
0x5fa7: push r13
0x5fa9: push r12
0x5fab: xor r12d,r12d
0x5fae: push rbp
0x5faf: push rbx
0x5fb0: mov rbp,rsi
0x5fb3: sub rsp,0x18
0x5fb7: mov r13,qword ptr [rsi]
0x5fba: mov dword ptr [rsp + 0x8],edx
0x5fbe: mov dword ptr [rsp + 0xc],ecx
0x5fc2: mov rax,r13
0x5fc5: nop dword ptr [rax]
0x5fc8: lea rbx,[rax + 0x1]
0x5fcc: mov rdi,r12
0x5fcf: mov rsi,rbx
0x5fd2: call 0x1c30
0x5fd7: test rax,rax
0x5fda: mov r14,rax
0x5fdd: jz 0x6020
0x5fdf: mov r9d,dword ptr [rsp + 0xc]
0x5fe4: mov r8d,dword ptr [rsp + 0x8]
0x5fe9: mov rcx,rbp
0x5fec: mov qword ptr [rbp],r13
0x5ff0: mov rdx,rbx
0x5ff3: mov rsi,rax
0x5ff6: mov rdi,r15
0x5ff9: call 0x5bd0
0x5ffe: cmp rax,-0x1
0x6002: jz 0x6030
0x6004: cmp rbx,rax
0x6007: mov r12,r14
0x600a: jbe 0x5fc8
0x600c: add rsp,0x18
0x6010: mov rax,r14
0x6013: pop rbx
0x6014: pop rbp
0x6015: pop r12
0x6017: pop r13
0x6019: pop r14
0x601b: pop r15
0x601d: ret 
0x6020: mov rdi,r12
0x6023: call 0x19b0
0x6028: jmp 0x600c
0x6030: mov rdi,r14
0x6033: xor r14d,r14d
0x6036: call 0x19b0
0x603b: jmp 0x600c
0x60df: nop 
0x73c3: call 0x1ab0
0x7404: nop 
0x7406: nop word ptr cs:[rax + rax*0x1]
0x75bb: nop dword ptr [rax + rax*0x1]
0x75c0: push r12
0x75c2: push rbp
0x75c3: push rbx
0x75c4: mov rbx,rdi
0x75c7: call 0x19d0
0x75cc: mov r12d,dword ptr [rax]
0x75cf: mov rbp,rax
0x75d2: lea rax,[rip+0x206ce7]
0x75d9: test rbx,rbx
0x75dc: mov esi,0x38
0x75e1: cmovz rbx,rax
0x75e5: mov rdi,rbx
0x75e8: call 0x8590
0x75ed: mov dword ptr [rbp],r12d
0x75f1: pop rbx
0x75f2: pop rbp
0x75f3: pop r12
0x75f5: ret 
0x7600: lea rax,[rip+0x206cb9]
0x7607: test rdi,rdi
0x760a: cmovz rdi,rax
0x760e: mov eax,dword ptr [rdi]
0x7610: ret 
0x7620: lea rax,[rip+0x206c99]
0x7627: test rdi,rdi
0x762a: cmovz rdi,rax
0x762e: mov dword ptr [rdi],esi
0x7630: ret 
0x7640: lea rax,[rip+0x206c79]
0x7647: test rdi,rdi
0x764a: mov ecx,esi
0x764c: cmovz rdi,rax
0x7650: mov eax,esi
0x7652: and ecx,0x1f
0x7655: shr al,0x5
0x7658: movzx eax,al
0x765b: lea rdi,[rdi + rax*0x4 + 0x8]
0x7660: mov esi,dword ptr [rdi]
0x7662: mov eax,esi
0x7664: shr eax,cl
0x7666: xor edx,eax
0x7668: and eax,0x1
0x766b: and edx,0x1
0x766e: shl edx,cl
0x7670: xor edx,esi
0x7672: mov dword ptr [rdi],edx
0x7674: ret 
0x7680: lea rax,[rip+0x206c39]
0x7687: test rdi,rdi
0x768a: cmovz rdi,rax
0x768e: mov eax,dword ptr [rdi + 0x4]
0x7691: mov dword ptr [rdi + 0x4],esi
0x7694: ret 
0x76a0: lea rax,[rip+0x206c19]
0x76a7: test rdi,rdi
0x76aa: cmovz rdi,rax
0x76ae: test rsi,rsi
0x76b1: mov dword ptr [rdi],0xa
0x76b7: jz 0x76c7
0x76b9: test rdx,rdx
0x76bc: jz 0x76c7
0x76be: mov qword ptr [rdi + 0x28],rsi
0x76c2: mov qword ptr [rdi + 0x30],rdx
0x76c6: ret 
0x76c7: sub rsp,0x8
0x76cb: call 0x19c0
0x76d0: push r15
0x76d2: push r14
0x76d4: lea rax,[rip+0x206be5]
0x76db: push r13
0x76dd: push r12
0x76df: mov r13,rdi
0x76e2: push rbp
0x76e3: push rbx
0x76e4: mov rbx,r8
0x76e7: mov r14,rsi
0x76ea: mov r15,rdx
0x76ed: sub rsp,0x18
0x76f1: test r8,r8
0x76f4: cmovz rbx,rax
0x76f8: mov qword ptr [rsp + 0x8],rcx
0x76fd: call 0x19d0
0x7702: mov r12d,dword ptr [rax]
0x7705: mov rbp,rax
0x7708: lea rax,[rbx + 0x8]
0x770c: sub rsp,0x8
0x7710: mov r9d,dword ptr [rbx + 0x4]
0x7714: push qword ptr [rbx + 0x30]
0x7717: mov r8d,dword ptr [rbx]
0x771a: push qword ptr [rbx + 0x28]
0x771d: mov rdx,r15
0x7720: push rax
0x7721: mov rcx,qword ptr [rsp + 0x28]
0x7726: mov rsi,r14
0x7729: mov rdi,r13
0x772c: call 0x61d0
0x7731: mov dword ptr [rbp],r12d
0x7735: add rsp,0x38
0x7739: pop rbx
0x773a: pop rbp
0x773b: pop r12
0x773d: pop r13
0x773f: pop r14
0x7741: pop r15
0x7743: ret 
0x7750: push r15
0x7752: push r14
0x7754: lea rax,[rip+0x206b65]
0x775b: push r13
0x775d: push r12
0x775f: mov r12,rdx
0x7762: push rbp
0x7763: push rbx
0x7764: mov rbx,rcx
0x7767: mov r14,rdi
0x776a: mov r15,rsi
0x776d: sub rsp,0x38
0x7771: test rcx,rcx
0x7774: cmovz rbx,rax
0x7778: xor ebp,ebp
0x777a: call 0x19d0
0x777f: test r12,r12
0x7782: mov r13,rax
0x7785: mov eax,dword ptr [rax]
0x7787: setz bpl
0x778b: or ebp,dword ptr [rbx + 0x4]
0x778e: lea r10,[rbx + 0x8]
0x7792: sub rsp,0x8
0x7796: mov r8d,dword ptr [rbx]
0x7799: mov rcx,r15
0x779c: mov dword ptr [rsp + 0x14],eax
0x77a0: push qword ptr [rbx + 0x30]
0x77a3: mov rdx,r14
0x77a6: push qword ptr [rbx + 0x28]
0x77a9: push r10
0x77ab: xor esi,esi
0x77ad: mov r9d,ebp
0x77b0: xor edi,edi
0x77b2: mov qword ptr [rsp + 0x40],r10
0x77b7: call 0x61d0
0x77bc: lea rsi,[rax + 0x1]
0x77c0: mov qword ptr [rsp + 0x48],rax
0x77c5: add rsp,0x20
0x77c9: mov rdi,rsi
0x77cc: mov qword ptr [rsp + 0x18],rsi
0x77d1: call 0x8390
0x77d6: mov qword ptr [rsp + 0x10],rax
0x77db: sub rsp,0x8
0x77df: push qword ptr [rbx + 0x30]
0x77e2: push qword ptr [rbx + 0x28]
0x77e5: mov r10,qword ptr [rsp + 0x38]
0x77ea: mov r9d,ebp
0x77ed: mov r8d,dword ptr [rbx]
0x77f0: mov rcx,r15
0x77f3: mov rdx,r14
0x77f6: mov rdi,rax
0x77f9: push r10
0x77fb: mov rsi,qword ptr [rsp + 0x38]
0x7800: call 0x61d0
0x7805: mov eax,dword ptr [rsp + 0x2c]
0x7809: add rsp,0x20
0x780d: test r12,r12
0x7810: mov dword ptr [r13],eax
0x7814: jz 0x781f
0x7816: mov r11,qword ptr [rsp + 0x28]
0x781b: mov qword ptr [r12],r11
0x781f: mov rax,qword ptr [rsp + 0x10]
0x7824: add rsp,0x38
0x7828: pop rbx
0x7829: pop rbp
0x782a: pop r12
0x782c: pop r13
0x782e: pop r14
0x7830: pop r15
0x7832: ret 
0x7840: mov rcx,rdx
0x7843: xor edx,edx
0x7845: jmp 0x7750
0x7850: mov eax,dword ptr [rip+0x206842]
0x7856: push r12
0x7858: mov r12,qword ptr [rip+0x206841]
0x785f: push rbp
0x7860: push rbx
0x7861: cmp eax,0x1
0x7864: jle 0x7891
0x7866: sub eax,0x2
0x7869: lea rbx,[r12 + 0x18]
0x786e: shl rax,0x4
0x7872: lea rbp,[r12 + rax*0x1 + 0x28]
0x7877: nop word ptr [rax + rax*0x1]
0x7880: mov rdi,qword ptr [rbx]
0x7883: add rbx,0x10
0x7887: call 0x19b0
0x788c: cmp rbx,rbp
0x788f: jnz 0x7880
0x7891: mov rdi,qword ptr [r12 + 0x8]
0x7896: lea rbx,[rip+0x206923]
0x789d: cmp rdi,rbx
0x78a0: jz 0x78b9
0x78a2: call 0x19b0
0x78a7: mov qword ptr [rip+0x2067fe],0x100
0x78b2: mov qword ptr [rip+0x2067ff],rbx
0x78b9: lea rbx,[rip+0x2067f0]
0x78c0: cmp r12,rbx
0x78c3: jz 0x78d4
0x78c5: mov rdi,r12
0x78c8: call 0x19b0
0x78cd: mov qword ptr [rip+0x2067cc],rbx
0x78d4: pop rbx
0x78d5: mov dword ptr [rip+0x2067b9],0x1
0x78df: pop rbp
0x78e0: pop r12
0x78e2: ret 
0x78f0: lea rcx,[rip+0x2069c9]
0x78f7: mov rdx,-0x1
0x78fe: jmp 0x7410
0x7910: lea rcx,[rip+0x2069a9]
0x7917: jmp 0x7410
0x7920: lea rcx,[rip+0x206999]
0x7927: mov rsi,rdi
0x792a: mov rdx,-0x1
0x7931: xor edi,edi
0x7933: jmp 0x7410
0x7940: lea rcx,[rip+0x206979]
0x7947: mov rdx,rsi
0x794a: mov rsi,rdi
0x794d: xor edi,edi
0x794f: jmp 0x7410
0x79e4: call 0x19c0
0x79e9: call 0x1ab0
0x79ee: nop 
0x79f0: sub rsp,0x48
0x79f4: mov rax,rdx
0x79f7: mov rdx,rcx
0x79fa: mov rcx,qword ptr fs:[rip+0xffffffffffff8625]
0x7a03: mov qword ptr [rsp + 0x38],rcx
0x7a08: xor ecx,ecx
0x7a0a: cmp esi,0xa
0x7a0d: jz 0x7a70
0x7a0f: mov dword ptr [rsp],esi
0x7a12: mov rcx,rsp
0x7a15: mov rsi,rax
0x7a18: mov qword ptr [rsp + 0x4],0x0
0x7a21: mov qword ptr [rsp + 0xc],0x0
0x7a2a: mov qword ptr [rsp + 0x14],0x0
0x7a33: mov qword ptr [rsp + 0x1c],0x0
0x7a3c: mov qword ptr [rsp + 0x24],0x0
0x7a45: mov qword ptr [rsp + 0x2c],0x0
0x7a4e: mov dword ptr [rsp + 0x34],0x0
0x7a56: call 0x7410
0x7a5b: mov rdx,qword ptr [rsp + 0x38]
0x7a60: xor rdx,qword ptr fs:[rip+0xffffffffffff85bf]
0x7a69: jnz 0x7a75
0x7a6b: add rsp,0x48
0x7a6f: ret 
0x7a70: call 0x19c0
0x7a75: call 0x1ab0
0x7a7a: nop word ptr [rax + rax*0x1]
0x7a80: mov rdx,rsi
0x7a83: mov esi,edi
0x7a85: xor edi,edi
0x7a87: jmp 0x7960
0x7a90: mov rcx,rdx
0x7a93: mov rdx,rsi
0x7a96: mov esi,edi
0x7a98: xor edi,edi
0x7a9a: jmp 0x79f0
0x7aa0: sub rsp,0x48
0x7aa4: mov ecx,edx
0x7aa6: mov rax,qword ptr fs:[rip+0xffffffffffff8579]
0x7aaf: mov qword ptr [rsp + 0x38],rax
0x7ab4: xor eax,eax
0x7ab6: mov rax,qword ptr [rip+0x206833]
0x7abd: mov r8,rsp
0x7ac0: and ecx,0x1f
0x7ac3: movdqa xmm0,[rip+0x2067f5]
0x7acb: mov qword ptr [rsp + 0x30],rax
0x7ad0: mov eax,edx
0x7ad2: movaps xmmword ptr [rsp],xmm0
0x7ad6: shr al,0x5
0x7ad9: movzx eax,al
0x7adc: lea r9,[r8 + rax*0x4 + 0x8]
0x7ae1: movdqa xmm0,[rip+0x2067e7]
0x7ae9: movaps xmmword ptr [rsp + 0x10],xmm0
0x7aee: movdqa xmm0,[rip+0x2067ea]
0x7af6: movaps xmmword ptr [rsp + 0x20],xmm0
0x7afb: mov edx,dword ptr [r9]
0x7afe: mov eax,edx
0x7b00: shr eax,cl
0x7b02: not eax
0x7b04: and eax,0x1
0x7b07: shl eax,cl
0x7b09: mov rcx,r8
0x7b0c: xor eax,edx
0x7b0e: mov rdx,rsi
0x7b11: mov rsi,rdi
0x7b14: mov dword ptr [r9],eax
0x7b17: xor edi,edi
0x7b19: call 0x7410
0x7b1e: mov rsi,qword ptr [rsp + 0x38]
0x7b23: xor rsi,qword ptr fs:[rip+0xffffffffffff84fc]
0x7b2c: jnz 0x7b33
0x7b2e: add rsp,0x48
0x7b32: ret 
0x7b33: call 0x1ab0
0x7b38: nop dword ptr [rax + rax*0x1]
0x7b40: movsx edx,sil
0x7b44: mov rsi,-0x1
0x7b4b: jmp 0x7aa0
0x7b50: mov edx,0x3a
0x7b55: mov rsi,-0x1
0x7b5c: jmp 0x7aa0
0x7b70: mov edx,0x3a
0x7b75: jmp 0x7aa0
0x7b80: sub rsp,0x48
0x7b84: mov rax,rdx
0x7b87: mov rdx,qword ptr fs:[rip+0xffffffffffff8498]
0x7b90: mov qword ptr [rsp + 0x38],rdx
0x7b95: xor edx,edx
0x7b97: cmp esi,0xa
0x7b9a: jz 0x7c04
0x7b9c: mov dword ptr [rsp],esi
0x7b9f: mov rcx,rsp
0x7ba2: mov rdx,-0x1
0x7ba9: mov rsi,rax
0x7bac: mov qword ptr [rsp + 0x4],0x0
0x7bb5: mov qword ptr [rsp + 0xc],0x4000000
0x7bbe: mov qword ptr [rsp + 0x14],0x0
0x7bc7: mov qword ptr [rsp + 0x1c],0x0
0x7bd0: mov qword ptr [rsp + 0x24],0x0
0x7bd9: mov qword ptr [rsp + 0x2c],0x0
0x7be2: mov dword ptr [rsp + 0x34],0x0
0x7bea: call 0x7410
0x7bef: mov rcx,qword ptr [rsp + 0x38]
0x7bf4: xor rcx,qword ptr fs:[rip+0xffffffffffff842b]
0x7bfd: jnz 0x7c09
0x7bff: add rsp,0x48
0x7c03: ret 
0x7c04: call 0x19c0
0x7c09: call 0x1ab0
0x7c0e: nop 
0x7c10: sub rsp,0x48
0x7c14: mov r9,rcx
0x7c17: mov rcx,qword ptr [rip+0x2066d2]
0x7c1e: movdqa xmm0,[rip+0x20669a]
0x7c26: mov rax,qword ptr fs:[rip+0xffffffffffff83f9]
0x7c2f: mov qword ptr [rsp + 0x38],rax
0x7c34: xor eax,eax
0x7c36: movaps xmmword ptr [rsp],xmm0
0x7c3a: test rsi,rsi
0x7c3d: mov qword ptr [rsp + 0x30],rcx
0x7c42: mov dword ptr [rsp],0xa
0x7c49: movdqa xmm0,[rip+0x20667f]
0x7c51: movaps xmmword ptr [rsp + 0x10],xmm0
0x7c56: movdqa xmm0,[rip+0x206682]
0x7c5e: movaps xmmword ptr [rsp + 0x20],xmm0
0x7c63: jz 0x7c97
0x7c65: test rdx,rdx
0x7c68: jz 0x7c97
0x7c6a: mov qword ptr [rsp + 0x28],rsi
0x7c6f: mov qword ptr [rsp + 0x30],rdx
0x7c74: mov rcx,rsp
0x7c77: mov rdx,r8
0x7c7a: mov rsi,r9
0x7c7d: call 0x7410
0x7c82: mov rdi,qword ptr [rsp + 0x38]
0x7c87: xor rdi,qword ptr fs:[rip+0xffffffffffff8398]
0x7c90: jnz 0x7c9c
0x7c92: add rsp,0x48
0x7c96: ret 
0x7c97: call 0x19c0
0x7c9c: call 0x1ab0
0x7ca1: nop dword ptr [rax + rax*0x1]
0x7ca6: nop word ptr cs:[rax + rax*0x1]
0x7cb0: mov r8,-0x1
0x7cb7: jmp 0x7c10
0x7cc0: mov rcx,rdx
0x7cc3: mov r8,-0x1
0x7cca: mov rdx,rsi
0x7ccd: mov rsi,rdi
0x7cd0: xor edi,edi
0x7cd2: jmp 0x7c10
0x7ce0: mov r8,rcx
0x7ce3: mov rcx,rdx
0x7ce6: mov rdx,rsi
0x7ce9: mov rsi,rdi
0x7cec: xor edi,edi
0x7cee: jmp 0x7c10
0x7d00: lea rcx,[rip+0x206359]
0x7d07: jmp 0x7410
0x7d10: lea rcx,[rip+0x206349]
0x7d17: mov rdx,rsi
0x7d1a: mov rsi,rdi
0x7d1d: xor edi,edi
0x7d1f: jmp 0x7410
0x7ea8: mov r8,rcx
0x7eab: mov rcx,rdx
0x7eae: lea rdx,[rip+0x3a7f]
0x7eb5: mov esi,0x1
0x7eba: xor eax,eax
0x7ebc: call 0x1ce0
0x7ec1: jmp 0x7dac
0x8190: xor r9d,r9d
0x8193: cmp qword ptr [r8],0x0
0x8197: jz 0x81ab
0x8199: nop dword ptr [rax]
0x81a0: add r9,0x1
0x81a4: cmp qword ptr [r8 + r9*0x8],0x0
0x81a9: jnz 0x81a0
0x81ab: jmp 0x7d70
0x81b0: sub rsp,0x68
0x81b4: mov r10,r8
0x81b7: xor r9d,r9d
0x81ba: mov rax,qword ptr fs:[rip+0xffffffffffff7e65]
0x81c3: mov qword ptr [rsp + 0x58],rax
0x81c8: xor eax,eax
0x81ca: mov r8,rsp
0x81cd: nop dword ptr [rax]
0x81d0: mov eax,dword ptr [r10]
0x81d3: cmp eax,0x2f
0x81d6: ja 0x821a
0x81d8: mov r11d,eax
0x81db: add r11,qword ptr [r10 + 0x10]
0x81df: add eax,0x8
0x81e2: mov dword ptr [r10],eax
0x81e5: mov rax,qword ptr [r11]
0x81e8: test rax,rax
0x81eb: mov qword ptr [r8 + r9*0x8],rax
0x81ef: jz 0x81fb
0x81f1: add r9,0x1
0x81f5: cmp r9,0xa
0x81f9: jnz 0x81d0
0x81fb: call 0x7d70
0x8200: mov rax,qword ptr [rsp + 0x58]
0x8205: xor rax,qword ptr fs:[rip+0xffffffffffff7e1a]
0x820e: jnz 0x8215
0x8210: add rsp,0x68
0x8214: ret 
0x8215: call 0x1ab0
0x821a: mov r11,qword ptr [r10 + 0x8]
0x821e: lea rax,[r11 + 0x8]
0x8222: mov qword ptr [r10 + 0x8],rax
0x8226: jmp 0x81e5
0x82f0: call 0x1ab0
0x82fc: mov rax,rbx
0x82ff: add rbx,0x8
0x8303: jmp 0x82b6
0x8310: push rbx
0x8311: lea rsi,[rip+0x366a]
0x8318: mov edx,0x5
0x831d: xor edi,edi
0x831f: call 0x1a80
0x8324: lea rdx,[rip+0x366c]
0x832b: mov rsi,rax
0x832e: mov edi,0x1
0x8333: xor eax,eax
0x8335: call 0x1c50
0x833a: lea rsi,[rip+0x366c]
0x8341: mov edx,0x5
0x8346: xor edi,edi
0x8348: call 0x1a80
0x834d: lea rcx,[rip+0x29a4]
0x8354: lea rdx,[rip+0x12ec]
0x835b: mov rsi,rax
0x835e: mov edi,0x1
0x8363: xor eax,eax
0x8365: call 0x1c50
0x836a: mov rbx,qword ptr [rip+0x205d57]
0x8371: lea rsi,[rip+0x3868]
0x8378: xor edi,edi
0x837a: mov edx,0x5
0x837f: call 0x1a80
0x8384: mov rsi,rbx
0x8387: mov rdi,rax
0x838a: pop rbx
0x838b: jmp 0x1b80
0x83aa: nop word ptr [rax + rax*0x1]
0x83b0: mov rax,rdi
0x83b3: mul rsi
0x83b6: mov rdi,rax
0x83b9: seto al
0x83bc: test rdi,rdi
0x83bf: js 0x83cb
0x83c1: movzx eax,al
0x83c4: test rax,rax
0x83c7: jnz 0x83cb
0x83c9: jmp 0x8390
0x83cb: sub rsp,0x8
0x83cf: call 0x85e0
0x83d4: nop 
0x83d6: nop word ptr cs:[rax + rax*0x1]
0x83e0: jmp 0x8390
0x8426: nop word ptr cs:[rax + rax*0x1]
0x8430: mov rax,rsi
0x8433: mul rdx
0x8436: mov rsi,rax
0x8439: seto al
0x843c: test rsi,rsi
0x843f: js 0x844b
0x8441: movzx eax,al
0x8444: test rax,rax
0x8447: jnz 0x844b
0x8449: jmp 0x83f0
0x844b: sub rsp,0x8
0x844f: call 0x85e0
0x8454: nop 
0x8456: nop word ptr cs:[rax + rax*0x1]
0x8460: test rdi,rdi
0x8463: mov r9,rdx
0x8466: mov rcx,qword ptr [rsi]
0x8469: jz 0x84a0
0x846b: xor edx,edx
0x846d: mov rax,0x5555555555555554
0x8477: div r9
0x847a: cmp rax,rcx
0x847d: jbe 0x84bb
0x847f: mov rax,rcx
0x8482: shr rax,1
0x8485: lea rcx,[rax + rcx*0x1 + 0x1]
0x848a: mov qword ptr [rsi],rcx
0x848d: imul rcx,r9
0x8491: mov rsi,rcx
0x8494: jmp 0x83f0
0x84a0: test rcx,rcx
0x84a3: jz 0x84c8
0x84a5: mov rax,rcx
0x84a8: mul r9
0x84ab: seto dl
0x84ae: test rax,rax
0x84b1: movzx edx,dl
0x84b4: js 0x84bb
0x84b6: test rdx,rdx
0x84b9: jz 0x848a
0x84bb: sub rsp,0x8
0x84bf: call 0x85e0
0x84c4: nop dword ptr [rax]
0x84c8: xor edx,edx
0x84ca: mov eax,0x80
0x84cf: xor r8d,r8d
0x84d2: div r9
0x84d5: test rax,rax
0x84d8: setz r8b
0x84dc: lea rcx,[r8 + rax*0x1]
0x84e0: jmp 0x84a5
0x84f0: test rdi,rdi
0x84f3: mov rax,qword ptr [rsi]
0x84f6: jz 0x8520
0x84f8: mov rdx,0x5555555555555553
0x8502: cmp rax,rdx
0x8505: ja 0x8531
0x8507: mov rdx,rax
0x850a: shr rdx,1
0x850d: lea rax,[rdx + rax*0x1 + 0x1]
0x8512: mov qword ptr [rsi],rax
0x8515: mov rsi,rax
0x8518: jmp 0x83f0
0x8520: test rax,rax
0x8523: mov edx,0x80
0x8528: cmovz rax,rdx
0x852c: test rax,rax
0x852f: jns 0x8512
0x8531: sub rsp,0x8
0x8535: call 0x85e0
0x853a: nop word ptr [rax + rax*0x1]
0x8540: push rbx
0x8541: mov rbx,rdi
0x8544: call 0x8390
0x8549: mov rdx,rbx
0x854c: xor esi,esi
0x854e: mov rdi,rax
0x8551: pop rbx
0x8552: jmp 0x1b40
0x8560: mov rax,rdi
0x8563: sub rsp,0x8
0x8567: mul rsi
0x856a: seto dl
0x856d: test rax,rax
0x8570: js 0x8589
0x8572: movzx edx,dl
0x8575: test rdx,rdx
0x8578: jnz 0x8589
0x857a: call 0x1b90
0x857f: test rax,rax
0x8582: jz 0x8589
0x8584: add rsp,0x8
0x8588: ret 
0x8589: call 0x85e0
0x858e: nop 
0x8610: call 0x19c0
0x8615: nop word ptr cs:[rax + rax*0x1]
0x861f: nop 
0x8638: nop dword ptr [rax + rax*0x1]
0x86f0: cmp eax,0x22
0x86f3: mov r12d,0x4
0x86f9: jnz 0x86c7
0x86fb: mov r12d,0x1
0x8701: jmp 0x86b2
0x8ba0: mov r12d,0x4
0x8ba6: jmp 0x86c7
0x8ccf: lea rcx,[rip+0x30ea]
0x8cd6: lea rsi,[rip+0x2fc3]
0x8cdd: lea rdi,[rip+0x2fdc]
0x8ce4: mov edx,0x54
0x8ce9: call 0x1b20
0x8cee: call 0x1ab0
0x8cf3: nop word ptr cs:[rax + rax*0x1]
0x8cfd: nop dword ptr [rax]
0x8da6: cmp eax,0x22
0x8da9: mov ebp,0x1
0x8dae: jnz 0x8dd8
0x9080: call 0x1ab0
0x9085: lea rcx,[rip+0x2e14]
0x908c: lea rsi,[rip+0x2c0d]
0x9093: lea rdi,[rip+0x2c26]
0x909a: mov edx,0x54
0x909f: call 0x1b20
0x919e: call 0x1ab0
0x91a3: nop word ptr cs:[rax + rax*0x1]
0x91ad: nop dword ptr [rax]
0x91b0: push r12
0x91b2: push rbp
0x91b3: mov rbp,rdi
0x91b6: push rbx
0x91b7: call 0x1a10
0x91bc: mov ebx,dword ptr [rbp]
0x91bf: mov rdi,rbp
0x91c2: mov r12,rax
0x91c5: call 0x92d0
0x91ca: and ebx,0x20
0x91cd: test ebx,ebx
0x91cf: jnz 0x91e8
0x91d1: test eax,eax
0x91d3: jz 0x91df
0x91d5: test r12,r12
0x91d8: mov eax,0xffffffff
0x91dd: jz 0x9218
0x91df: pop rbx
0x91e0: pop rbp
0x91e1: pop r12
0x91e3: ret 
0x91e8: test eax,eax
0x91ea: jnz 0x9208
0x91ec: call 0x19d0
0x91f1: mov dword ptr [rax],0x0
0x91f7: mov eax,0xffffffff
0x91fc: pop rbx
0x91fd: pop rbp
0x91fe: pop r12
0x9200: ret 
0x9208: pop rbx
0x9209: mov eax,0xffffffff
0x920e: pop rbp
0x920f: pop r12
0x9211: ret 
0x9218: call 0x19d0
0x921d: cmp dword ptr [rax],0x9
0x9220: pop rbx
0x9221: pop rbp
0x9222: pop r12
0x9224: setnz al
0x9227: movzx eax,al
0x922a: neg eax
0x922c: ret 
0x92d0: push r12
0x92d2: push rbp
0x92d3: push rbx
0x92d4: mov rbx,rdi
0x92d7: call 0x1bd0
0x92dc: test eax,eax
0x92de: mov rdi,rbx
0x92e1: js 0x9337
0x92e3: call 0x1c20
0x92e8: test eax,eax
0x92ea: jnz 0x9318
0x92ec: mov rdi,rbx
0x92ef: call 0x9350
0x92f4: test eax,eax
0x92f6: jz 0x9334
0x92f8: call 0x19d0
0x92fd: mov r12d,dword ptr [rax]
0x9300: mov rdi,rbx
0x9303: mov rbp,rax
0x9306: call 0x1a60
0x930b: test r12d,r12d
0x930e: jnz 0x9340
0x9310: pop rbx
0x9311: pop rbp
0x9312: pop r12
0x9314: ret 
0x9318: mov rdi,rbx
0x931b: call 0x1bd0
0x9320: xor esi,esi
0x9322: mov edx,0x1
0x9327: mov edi,eax
0x9329: call 0x1b10
0x932e: cmp rax,-0x1
0x9332: jnz 0x92ec
0x9334: mov rdi,rbx
0x9337: pop rbx
0x9338: pop rbp
0x9339: pop r12
0x933b: jmp 0x1a60
0x9340: mov dword ptr [rbp],r12d
0x9344: mov eax,0xffffffff
0x9349: jmp 0x9310
0x9350: test rdi,rdi
0x9353: push rbx
0x9354: mov rbx,rdi
0x9357: jz 0x936a
0x9359: call 0x1c20
0x935e: test eax,eax
0x9360: jz 0x936a
0x9362: test dword ptr [rbx],0x100
0x9368: jnz 0x9378
0x936a: mov rdi,rbx
0x936d: pop rbx
0x936e: jmp 0x1c00
0x9378: mov rdi,rbx
0x937b: mov edx,0x1
0x9380: xor esi,esi
0x9382: call 0x9390
0x9387: mov rdi,rbx
0x938a: pop rbx
0x938b: jmp 0x1c00
0x9390: mov rax,qword ptr [rdi + 0x8]
0x9394: cmp qword ptr [rdi + 0x10],rax
0x9398: jz 0x93a0
0x939a: jmp 0x1c90
0x93a0: mov rax,qword ptr [rdi + 0x20]
0x93a4: cmp qword ptr [rdi + 0x28],rax
0x93a8: jnz 0x939a
0x93aa: cmp qword ptr [rdi + 0x48],0x0
0x93af: jnz 0x939a
0x93b1: push r12
0x93b3: push rbp
0x93b4: mov r12d,edx
0x93b7: push rbx
0x93b8: mov rbp,rsi
0x93bb: mov rbx,rdi
0x93be: call 0x1bd0
0x93c3: mov edx,r12d
0x93c6: mov rsi,rbp
0x93c9: mov edi,eax
0x93cb: call 0x1b10
0x93d0: cmp rax,-0x1
0x93d4: jz 0x93e2
0x93d6: and dword ptr [rbx],0xffffffef
0x93d9: mov qword ptr [0x90 + rbx],rax
0x93e0: xor eax,eax
0x93e2: pop rbx
0x93e3: pop rbp
0x93e4: pop r12
0x93e6: ret 
0x93f0: push r15
0x93f2: push r14
0x93f4: mov r15,rdx
0x93f7: push r13
0x93f9: push r12
0x93fb: lea r12,[rip+0x20442e]
0x9402: push rbp
0x9403: lea rbp,[rip+0x20442e]
0x940a: push rbx
0x940b: mov r13d,edi
0x940e: mov r14,rsi
0x9411: sub rbp,r12
0x9414: sub rsp,0x8
0x9418: sar rbp,0x3
0x941c: call 0x1970
0x9421: test rbp,rbp
0x9424: jz 0x9446
0x9426: xor ebx,ebx
0x9428: nop dword ptr [rax + rax*0x1]
0x9430: mov rdx,r15
0x9433: mov rsi,r14
0x9436: mov edi,r13d
0x9439: call qword ptr [r12 + rbx*0x8]
0x943d: add rbx,0x1
0x9441: cmp rbp,rbx
0x9444: jnz 0x9430
0x9446: add rsp,0x8
0x944a: pop rbx
0x944b: pop rbp
0x944c: pop r12
0x944e: pop r13
0x9450: pop r14
0x9452: pop r15
0x9454: ret 
0x9460: ret 
0x9480: sub rsp,0x8
0x9484: add rsp,0x8
0x9488: ret 
