0x2710: sub rsp,0x8
0x2714: mov rax,qword ptr [rip+0x2178c5]
0x271b: test rax,rax
0x271e: jz 0x2722
0x2720: call rax
0x2722: add rsp,0x8
0x2726: ret 
0x2730: push qword ptr [rip+0x21751a]
0x2736: jmp qword ptr [rip+0x21751c]
0x2746: push 0x0
0x274b: jmp 0x2730
0x2756: push 0x1
0x275b: jmp 0x2730
0x2766: push 0x2
0x276b: jmp 0x2730
0x2776: push 0x3
0x277b: jmp 0x2730
0x2786: push 0x4
0x278b: jmp 0x2730
0x2796: push 0x5
0x279b: jmp 0x2730
0x27a0: jmp qword ptr [rip+0x2174ea]
0x27a6: push 0x6
0x27ab: jmp 0x2730
0x27b6: push 0x7
0x27bb: jmp 0x2730
0x27c0: jmp qword ptr [rip+0x2174da]
0x27c6: push 0x8
0x27cb: jmp 0x2730
0x27d6: push 0x9
0x27db: jmp 0x2730
0x27e6: push 0xa
0x27eb: jmp 0x2730
0x27f6: push 0xb
0x27fb: jmp 0x2730
0x2806: push 0xc
0x280b: jmp 0x2730
0x2816: push 0xd
0x281b: jmp 0x2730
0x2826: push 0xe
0x282b: jmp 0x2730
0x2836: push 0xf
0x283b: jmp 0x2730
0x2846: push 0x10
0x284b: jmp 0x2730
0x2856: push 0x11
0x285b: jmp 0x2730
0x2866: push 0x12
0x286b: jmp 0x2730
0x2876: push 0x13
0x287b: jmp 0x2730
0x2886: push 0x14
0x288b: jmp 0x2730
0x2896: push 0x15
0x289b: jmp 0x2730
0x28a6: push 0x16
0x28ab: jmp 0x2730
0x28b6: push 0x17
0x28bb: jmp 0x2730
0x28c6: push 0x18
0x28cb: jmp 0x2730
0x28d6: push 0x19
0x28db: jmp 0x2730
0x28e6: push 0x1a
0x28eb: jmp 0x2730
0x28f6: push 0x1b
0x28fb: jmp 0x2730
0x2906: push 0x1c
0x290b: jmp 0x2730
0x2916: push 0x1d
0x291b: jmp 0x2730
0x2926: push 0x1e
0x292b: jmp 0x2730
0x2930: jmp qword ptr [rip+0x217422]
0x2936: push 0x1f
0x293b: jmp 0x2730
0x2946: push 0x20
0x294b: jmp 0x2730
0x2956: push 0x21
0x295b: jmp 0x2730
0x2966: push 0x22
0x296b: jmp 0x2730
0x2976: push 0x23
0x297b: jmp 0x2730
0x2986: push 0x24
0x298b: jmp 0x2730
0x2996: push 0x25
0x299b: jmp 0x2730
0x29a6: push 0x26
0x29ab: jmp 0x2730
0x29b6: push 0x27
0x29bb: jmp 0x2730
0x29c6: push 0x28
0x29cb: jmp 0x2730
0x29d6: push 0x29
0x29db: jmp 0x2730
0x29e6: push 0x2a
0x29eb: jmp 0x2730
0x29f6: push 0x2b
0x29fb: jmp 0x2730
0x2a06: push 0x2c
0x2a0b: jmp 0x2730
0x2a16: push 0x2d
0x2a1b: jmp 0x2730
0x2a26: push 0x2e
0x2a2b: jmp 0x2730
0x2a36: push 0x2f
0x2a3b: jmp 0x2730
0x2a46: push 0x30
0x2a4b: jmp 0x2730
0x2a56: push 0x31
0x2a5b: jmp 0x2730
0x2a66: push 0x32
0x2a6b: jmp 0x2730
0x2a76: push 0x33
0x2a7b: jmp 0x2730
0x2a86: push 0x34
0x2a8b: jmp 0x2730
0x2a96: push 0x35
0x2a9b: jmp 0x2730
0x2aa6: push 0x36
0x2aab: jmp 0x2730
0x2ab6: push 0x37
0x2abb: jmp 0x2730
0x2ac6: push 0x38
0x2acb: jmp 0x2730
0x2ad6: push 0x39
0x2adb: jmp 0x2730
0x2ae6: push 0x3a
0x2aeb: jmp 0x2730
0x2af6: push 0x3b
0x2afb: jmp 0x2730
0x2b06: push 0x3c
0x2b0b: jmp 0x2730
0x2b16: push 0x3d
0x2b1b: jmp 0x2730
0x2b26: push 0x3e
0x2b2b: jmp 0x2730
0x2b36: push 0x3f
0x2b3b: jmp 0x2730
0x2b46: push 0x40
0x2b4b: jmp 0x2730
0x2b56: push 0x41
0x2b5b: jmp 0x2730
0x2b66: push 0x42
0x2b6b: jmp 0x2730
0x2b76: push 0x43
0x2b7b: jmp 0x2730
0x2b86: push 0x44
0x2b8b: jmp 0x2730
0x2b90: jmp qword ptr [rip+0x2172f2]
0x2b96: push 0x45
0x2b9b: jmp 0x2730
0x2ba6: push 0x46
0x2bab: jmp 0x2730
0x2bb6: push 0x47
0x2bbb: jmp 0x2730
0x2bc6: push 0x48
0x2bcb: jmp 0x2730
0x2bd6: push 0x49
0x2bdb: jmp 0x2730
0x2be6: push 0x4a
0x2beb: jmp 0x2730
0x2bf6: push 0x4b
0x2bfb: jmp 0x2730
0x2c06: push 0x4c
0x2c0b: jmp 0x2730
0x2c16: push 0x4d
0x2c1b: jmp 0x2730
0x2c26: push 0x4e
0x2c2b: jmp 0x2730
0x2c30: jmp qword ptr [rip+0x2172a2]
0x2c36: push 0x4f
0x2c3b: jmp 0x2730
0x2c46: push 0x50
0x2c4b: jmp 0x2730
0x2c56: push 0x51
0x2c5b: jmp 0x2730
0x2c66: push 0x52
0x2c6b: jmp 0x2730
0x2c76: push 0x53
0x2c7b: jmp 0x2730
0x2c80: jmp qword ptr [rip+0x21727a]
0x2c86: push 0x54
0x2c8b: jmp 0x2730
0x2c96: push 0x55
0x2c9b: jmp 0x2730
0x2ca6: push 0x56
0x2cab: jmp 0x2730
0x2cb6: push 0x57
0x2cbb: jmp 0x2730
0x2cc6: push 0x58
0x2ccb: jmp 0x2730
0x2cd6: push 0x59
0x2cdb: jmp 0x2730
0x2ce6: push 0x5a
0x2ceb: jmp 0x2730
0x2cf6: push 0x5b
0x2cfb: jmp 0x2730
0x2d00: jmp qword ptr [rip+0x21723a]
0x2d06: push 0x5c
0x2d0b: jmp 0x2730
0x2d16: push 0x5d
0x2d1b: jmp 0x2730
0x2d26: push 0x5e
0x2d2b: jmp 0x2730
0x2d36: push 0x5f
0x2d3b: jmp 0x2730
0x2d46: push 0x60
0x2d4b: jmp 0x2730
0x2d56: push 0x61
0x2d5b: jmp 0x2730
0x2d66: push 0x62
0x2d6b: jmp 0x2730
0x2d76: push 0x63
0x2d7b: jmp 0x2730
0x2d86: push 0x64
0x2d8b: jmp 0x2730
0x2d96: push 0x65
0x2d9b: jmp 0x2730
0x2da6: push 0x66
0x2dab: jmp 0x2730
0x2db6: push 0x67
0x2dbb: jmp 0x2730
0x2dc6: push 0x68
0x2dcb: jmp 0x2730
0x2dd6: push 0x69
0x2ddb: jmp 0x2730
0x2de6: push 0x6a
0x2deb: jmp 0x2730
0x2df6: push 0x6b
0x2dfb: jmp 0x2730
0x2e06: push 0x6c
0x2e0b: jmp 0x2730
0x2e18: jmp qword ptr [rip+0x2171d2]
0x2e69: nop dword ptr [rax]
0x30f8: mov byte ptr [rsp + 0x55],r14b
0x3125: test rax,rax
0x3128: jz 0x3571
0x312e: mov qword ptr [rsp + 0x20],rax
0x3133: jmp 0x3018
0x3289: jmp 0x3018
0x335a: mov byte ptr [rsp + 0x54],r14b
0x335f: jmp 0x3018
0x33c1: cmp dword ptr [rsp + 0x68],0x2
0x33c6: jz 0x357b
0x33cc: lea rsi,[rip+0xf6ea]
0x33d3: xor edi,edi
0x33d5: mov edx,0x5
0x33da: call 0x28e0
0x33df: mov rsi,qword ptr [rsp + 0x8]
0x33e4: mov rdi,rax
0x33e7: call 0xb200
0x3428: test al,al
0x342a: jnz 0x351b
0x3430: mov byte ptr [rsp + 0x55],0x0
0x3435: cmp qword ptr [rsp + 0x20],0x0
0x343b: jnz 0x3643
0x34a2: cmp byte ptr [rsp + 0x5c],0x0
0x34a7: jz 0x33ab
0x34ad: mov edx,0x5
0x34b2: lea rsi,[rip+0x110f7]
0x34b9: jmp 0x35d7
0x34be: cmp byte ptr [rsp + 0x1d],0x0
0x34c3: mov byte ptr [rsp + 0x5d],0x0
0x34c8: jnz 0x35cb
0x34fe: cmp byte ptr [rsp + 0x47],0x0
0x3503: jnz 0x3564
0x3505: mov dword ptr [rsp + 0x34],0x2
0x350d: movzx eax,byte ptr [rsp + 0x1f]
0x3512: mov byte ptr [rsp + 0x44],al
0x3516: jmp 0x3410
0x351b: cmp byte ptr [rsp + 0x55],0x0
0x3520: jz 0x3555
0x3522: lea rsi,[rip+0x11127]
0x3529: mov edx,0x5
0x352e: xor edi,edi
0x3530: call 0x28e0
0x3535: xor esi,esi
0x3537: mov rdx,rax
0x353a: mov edi,0x1
0x353f: xor eax,eax
0x3541: call 0x2cb0
0x354d: test al,al
0x354f: jz 0x3441
0x3555: cmp byte ptr [rip+0x216bf6],0x0
0x355c: jnz 0x3435
0x3562: jmp 0x35a0
0x3571: mov byte ptr [rsp + 0x51],r14b
0x3576: jmp 0x3018
0x357b: cmp dword ptr [rsp + 0x3c],0x2
0x3580: jz 0x33cc
0x3586: jmp 0x34e6
0x3593: cmp byte ptr [rip+0x216bb8],0x0
0x359a: jnz 0x3441
0x35a0: lea rsi,[rip+0x110d9]
0x35a7: mov edx,0x5
0x35ac: xor edi,edi
0x35ae: call 0x28e0
0x35b3: xor esi,esi
0x35b5: mov rdx,rax
0x35b8: mov edi,0x1
0x35bd: xor eax,eax
0x35bf: call 0x2cb0
0x35cb: lea rsi,[rip+0x1100e]
0x35d2: mov edx,0x5
0x35f6: lea rsi,[rip+0x10f43]
0x35fd: mov edx,0x5
0x3602: xor edi,edi
0x3604: call 0x28e0
0x3609: xor esi,esi
0x360b: mov rdx,rax
0x360e: mov edi,0x1
0x3613: xor eax,eax
0x3615: call 0x2cb0
0x361a: call 0x2930
0x361f: lea rsi,[rip+0x110da]
0x3626: mov edx,0x5
0x362b: xor edi,edi
0x362d: call 0x28e0
0x3632: xor esi,esi
0x3634: mov rdx,rax
0x3637: mov edi,0x1
0x363c: xor eax,eax
0x363e: call 0x2cb0
0x3643: call 0x2770
0x3648: mov rdi,qword ptr [rsp + 0x20]
0x364d: mov dword ptr [rax],0x5f
0x3653: mov rbx,rax
0x3656: call 0xed80
0x365b: lea rsi,[rip+0x11066]
0x3662: mov edx,0x5
0x3667: xor edi,edi
0x3669: mov rbp,rax
0x366c: call 0x28e0
0x3671: mov esi,dword ptr [rbx]
0x3673: mov rdx,rax
0x3676: mov rcx,rbp
0x3679: mov edi,0x1
0x367e: xor eax,eax
0x3680: call 0x2cb0
0x36c8: nop dword ptr [rax + rax*0x1]
0x36fa: hlt 
0x3700: lea rdi,[rip+0x216999]
0x3707: push rbp
0x3708: lea rax,[rip+0x216991]
0x370f: cmp rax,rdi
0x3712: mov rbp,rsp
0x3715: jz 0x3730
0x3717: mov rax,qword ptr [rip+0x2168b2]
0x371e: test rax,rax
0x3721: jz 0x3730
0x3723: pop rbp
0x3724: jmp rax
0x3730: pop rbp
0x3731: ret 
0x3740: lea rdi,[rip+0x216959]
0x3747: lea rsi,[rip+0x216952]
0x374e: push rbp
0x374f: sub rsi,rdi
0x3752: mov rbp,rsp
0x3755: sar rsi,0x3
0x3759: mov rax,rsi
0x375c: shr rax,0x3f
0x3760: add rsi,rax
0x3763: sar rsi,1
0x3766: jz 0x3780
0x3768: mov rax,qword ptr [rip+0x216879]
0x376f: test rax,rax
0x3772: jz 0x3780
0x3774: pop rbp
0x3775: jmp rax
0x3780: pop rbp
0x3781: ret 
0x3790: cmp byte ptr [rip+0x216951],0x0
0x3797: jnz 0x37c8
0x3799: cmp qword ptr [rip+0x21684f],0x0
0x37a1: push rbp
0x37a2: mov rbp,rsp
0x37a5: jz 0x37b3
0x37a7: mov rdi,qword ptr [rip+0x21685a]
0x37ae: call 0x2e18
0x37b3: call 0x3700
0x37b8: mov byte ptr [rip+0x216929],0x1
0x37bf: pop rbp
0x37c0: ret 
0x37c8: ret 
0x37d0: push rbp
0x37d1: mov rbp,rsp
0x37d4: pop rbp
0x37d5: jmp 0x3740
0x3922: nop dword ptr [rax]
0x3926: nop word ptr cs:[rax + rax*0x1]
0x39f4: nop 
0x39f6: nop word ptr cs:[rax + rax*0x1]
0x3d08: mov rdx,qword ptr [-0x168 + rbp]
0x3d0f: mov rsi,rax
0x3d12: mov rcx,r12
0x3d15: mov edi,0x1
0x3d1a: xor eax,eax
0x3d1c: call 0x2c60
0x3e40: movzx esi,byte ptr [r13 + 0x25]
0x3e45: xor edx,edx
0x3e47: mov rcx,r13
0x3e4a: mov rdi,r12
0x3e4d: call 0x56f0
0x3e52: test al,al
0x3e54: jnz 0x3b94
0x3e5a: cmp byte ptr [r13 + 0x26],0x0
0x3e5f: jz 0x3b94
0x3fbb: call 0x2930
0x4215: call 0x2930
0x421a: nop word ptr [rax + rax*0x1]
0x483f: cmp qword ptr [-0xf8 + rbp],0x0
0x4847: jnz 0x4c6f
0x484d: cmp r12d,0x2
0x4851: jg 0x4c30
0x4857: mov rdi,qword ptr [rbx + r12*0x8 - 0x8]
0x485c: lea rdx,[-0xe2 + rbp]
0x4863: lea rsi,[-0xd0 + rbp]
0x486a: movzx ecx,al
0x486d: call 0x3930
0x488d: mov r13d,dword ptr [r14]
0x4890: test r13d,r13d
0x4893: jz 0x48f4
0x4895: mov rsi,rbx
0x4898: mov rdi,r12
0x489b: call 0x2af0
0x48a0: test eax,eax
0x48a2: jnz 0x48f4
0x48a4: cmp byte ptr [-0xe2 + rbp],0x0
0x48ab: jnz 0x48f4
0x48ad: mov eax,dword ptr [-0xb8 + rbp]
0x48b3: and eax,0xf000
0x48b8: cmp eax,0x8000
0x48bd: jnz 0x48f4
0x48bf: mov rsi,rbx
0x48c2: mov edi,0xffffff9c
0x48c7: mov edx,r13d
0x48ca: call 0xb1c0
0x48cf: mov rsi,r14
0x48d2: lea r14,[rip+0x215827]
0x48d9: lea rdi,[rip+0x215820]
0x48e0: mov ecx,0x14
0x48e5: mov rbx,rax
0x48e8: movsd.rep rdi,rsi
0x48ea: mov dword ptr [rip+0x21580c],0x0
0x4c30: mov rsi,qword ptr [rsi + 0x10]
0x4c34: mov edi,0x4
0x4c39: call 0xeab0
0x4c3e: lea rsi,[rip+0xddc5]
0x4c45: mov rbx,rax
0x4c48: mov edx,0x5
0x4c6f: lea rsi,[rip+0xf84a]
0x4c76: mov edx,0x5
0x4c7b: xor edi,edi
0x4c7d: call 0x28e0
0x4c82: xor esi,esi
0x4c84: mov rdx,rax
0x4c87: mov edi,0x1
0x4c8c: xor eax,eax
0x4c8e: call 0x2cb0
0x4cb7: call 0x2930
0x5146: call 0x2930
0x514b: nop dword ptr [rax + rax*0x1]
0x5b1e: mov byte ptr [rax],r14b
0x5dcf: mov byte ptr [rax],0x1
0x5dd2: nop word ptr [rax + rax*0x1]
0x6a0b: nop dword ptr [rax + rax*0x1]
0x6b95: nop dword ptr [rax]
0x8fa4: call 0x2930
0x9c30: cmp byte ptr [rcx + 0x2c],0x0
0x9c34: jz 0x9bdb
0x9c36: lea rcx,[rip+0xb433]
0x9c3d: lea rsi,[rip+0xb403]
0x9c44: lea rdi,[rip+0xb0ad]
0x9c4b: mov edx,0xb8a
0x9c50: call 0x29e0
0x9c74: call 0x2930
0x9cd6: lea rcx,[rip+0xb393]
0x9cdd: lea rsi,[rip+0xb363]
0x9ce4: lea rdi,[rip+0xb379]
0x9ceb: mov edx,0xb86
0x9cf0: call 0x29e0
0x9cf5: nop word ptr cs:[rax + rax*0x1]
0x9cff: nop 
0x9d30: push rbx
0x9d31: mov rbx,rdi
0x9d34: mov rdi,qword ptr [rdi + 0x10]
0x9d38: call 0x2e10
0x9d3d: mov rdi,rbx
0x9d40: pop rbx
0x9d41: jmp 0x2e10
0x9db5: call 0x2930
0x9dba: nop word ptr [rax + rax*0x1]
0x9e14: call 0x2930
0x9e19: nop dword ptr [rax]
0x9e99: nop dword ptr [rax]
0x9edb: nop dword ptr [rax + rax*0x1]
0x9ee0: mov rdi,qword ptr [rip+0x210691]
0x9ee7: jmp 0xc620
0xa129: nop dword ptr [rax]
0xa228: call 0x2930
0xa22d: nop dword ptr [rax]
0xa42c: call 0x2930
0xa431: nop dword ptr [rax + rax*0x1]
0xa436: nop word ptr cs:[rax + rax*0x1]
0xa58d: call 0x2930
0xa592: nop word ptr cs:[rax + rax*0x1]
0xa59c: nop dword ptr [rax]
0xa770: mov edi,0x1
0xa775: jmp 0x4220
0xa920: push r15
0xa922: push r14
0xa924: mov r14,rdi
0xa927: push r13
0xa929: push r12
0xa92b: xor edi,edi
0xa92d: push rbp
0xa92e: push rbx
0xa92f: mov rbp,rsi
0xa932: lea rsi,[rip+0xa835]
0xa939: mov r12,rdx
0xa93c: mov edx,0x5
0xa941: sub rsp,0x8
0xa945: mov rbx,qword ptr [rip+0x20f794]
0xa94c: call 0x28e0
0xa951: mov rdi,rax
0xa954: mov rsi,rbx
0xa957: call 0x2ab0
0xa95c: mov r15,qword ptr [r14]
0xa95f: test r15,r15
0xa962: jz 0xa9f8
0xa968: xor r13d,r13d
0xa96b: xor ebx,ebx
0xa96d: jmp 0xa9a8
0xa970: mov rdi,r15
0xa973: add rbx,0x1
0xa977: mov r13,rbp
0xa97a: call 0xed80
0xa97f: mov rdi,qword ptr [rip+0x20f75a]
0xa986: lea rdx,[rip+0xa7f6]
0xa98d: mov rcx,rax
0xa990: mov esi,0x1
0xa995: xor eax,eax
0xa997: add rbp,r12
0xa99a: call 0x2db0
0xa99f: mov r15,qword ptr [r14 + rbx*0x8]
0xa9a3: test r15,r15
0xa9a6: jz 0xa9f8
0xa9a8: test rbx,rbx
0xa9ab: jz 0xa970
0xa9ad: mov rdx,r12
0xa9b0: mov rsi,rbp
0xa9b3: mov rdi,r13
0xa9b6: call 0x2a90
0xa9bb: test eax,eax
0xa9bd: jnz 0xa970
0xa9bf: mov rdi,r15
0xa9c2: add rbx,0x1
0xa9c6: add rbp,r12
0xa9c9: call 0xed80
0xa9ce: mov rdi,qword ptr [rip+0x20f70b]
0xa9d5: lea rdx,[rip+0xa7af]
0xa9dc: mov rcx,rax
0xa9df: mov esi,0x1
0xa9e4: xor eax,eax
0xa9e6: call 0x2db0
0xa9eb: mov r15,qword ptr [r14 + rbx*0x8]
0xa9ef: test r15,r15
0xa9f2: jnz 0xa9a8
0xa9f4: nop dword ptr [rax]
0xa9f8: mov rdi,qword ptr [rip+0x20f6e1]
0xa9ff: mov rax,qword ptr [rdi + 0x28]
0xaa03: cmp rax,qword ptr [rdi + 0x30]
0xaa07: jnc 0xaa28
0xaa09: lea rdx,[rax + 0x1]
0xaa0d: mov qword ptr [rdi + 0x28],rdx
0xaa11: mov byte ptr [rax],0xa
0xaa14: add rsp,0x8
0xaa18: pop rbx
0xaa19: pop rbp
0xaa1a: pop r12
0xaa1c: pop r13
0xaa1e: pop r14
0xaa20: pop r15
0xaa22: ret 
0xaa28: add rsp,0x8
0xaa2c: mov esi,0xa
0xaa31: pop rbx
0xaa32: pop rbp
0xaa33: pop r12
0xaa35: pop r13
0xaa37: pop r14
0xaa39: pop r15
0xaa3b: jmp 0x2990
0xaa93: mov rdx,r15
0xaa96: mov rsi,rbp
0xaa99: mov rdi,rbx
0xaa9c: call 0xa920
0xaaa1: call r13
0xaaa4: mov rax,-0x1
0xaaab: jmp 0xaa76
0xaab0: push r14
0xaab2: push r13
0xaab4: push r12
0xaab6: push rbp
0xaab7: push rbx
0xaab8: mov r14,qword ptr [rsi]
0xaabb: test r14,r14
0xaabe: jz 0xaaf1
0xaac0: mov r12,rcx
0xaac3: mov r13,rdi
0xaac6: mov rbp,rdx
0xaac9: lea rbx,[rsi + 0x8]
0xaacd: jmp 0xaadf
0xaad0: mov r14,qword ptr [rbx]
0xaad3: add rbp,r12
0xaad6: add rbx,0x8
0xaada: test r14,r14
0xaadd: jz 0xaaf1
0xaadf: mov rdx,r12
0xaae2: mov rsi,rbp
0xaae5: mov rdi,r13
0xaae8: call 0x2a90
0xaaed: test eax,eax
0xaaef: jnz 0xaad0
0xaaf1: pop rbx
0xaaf2: mov rax,r14
0xaaf5: pop rbp
0xaaf6: pop r12
0xaaf8: pop r13
0xaafa: pop r14
0xaafc: ret 
0xb15d: call 0x2930
0xb162: nop word ptr cs:[rax + rax*0x1]
0xb16c: nop dword ptr [rax]
0xb180: sub rsp,0x8
0xb184: mov r9,qword ptr [rip+0x20ee9d]
0xb18b: lea rdx,[rip+0x20e7ee]
0xb192: lea rcx,[rip+0xa047]
0xb199: mov r8d,0x4
0xb19f: call 0xaa40
0xb1a4: lea rdx,[rip+0xa035]
0xb1ab: mov eax,dword ptr [rdx + rax*0x4]
0xb1ae: add rsp,0x8
0xb1b2: ret 
0xb1c0: sub rsp,0x8
0xb1c4: xor ecx,ecx
0xb1c6: call 0xab50
0xb1cb: test rax,rax
0xb1ce: jz 0xb1d5
0xb1d0: add rsp,0x8
0xb1d4: ret 
0xb1d5: call 0x11270
0xb1da: nop word ptr [rax + rax*0x1]
0xb1e0: test rsi,rsi
0xb1e3: jz 0xb1f0
0xb1e5: cmp byte ptr [rsi],0x0
0xb1e8: jz 0xb1f0
0xb1ea: jmp 0xb180
0xb1f0: mov eax,0x2
0xb1f5: ret 
0xb200: test rsi,rsi
0xb203: jz 0xb20a
0xb205: cmp byte ptr [rsi],0x0
0xb208: jnz 0xb232
0xb20a: lea rdi,[rip+0x9f97]
0xb211: sub rsp,0x8
0xb215: call 0x2740
0xb21a: test rax,rax
0xb21d: jz 0xb240
0xb21f: cmp byte ptr [rax],0x0
0xb222: jz 0xb240
0xb224: lea rdi,[rip+0x9f7c]
0xb22b: mov rsi,rax
0xb22e: add rsp,0x8
0xb232: jmp 0xb180
0xb240: mov eax,0x2
0xb245: add rsp,0x8
0xb249: ret 
0xb2c0: mov qword ptr [rip+0x20f2c1],rdi
0xb2c7: ret 
0xb2d0: push r12
0xb2d2: push rbp
0xb2d3: push rbx
0xb2d4: mov rbx,qword ptr [rip+0x20edd5]
0xb2db: mov rdi,rbx
0xb2de: call 0x11390
0xb2e3: test rax,rax
0xb2e6: jnz 0xb388
0xb2ec: mov rdi,rbx
0xb2ef: call 0x11520
0xb2f4: test eax,eax
0xb2f6: jnz 0xb328
0xb2f8: pop rbx
0xb2f9: pop rbp
0xb2fa: pop r12
0xb2fc: jmp 0xb400
0xb308: call 0x11350
0xb30d: test eax,eax
0xb30f: mov rdi,qword ptr [rip+0x20ed9a]
0xb316: jz 0xb3a6
0xb31c: call 0x11520
0xb321: nop dword ptr [rax]
0xb328: lea rsi,[rip+0x9ed1]
0xb32f: xor edi,edi
0xb331: mov edx,0x5
0xb336: call 0x28e0
0xb33b: mov rbx,qword ptr [rip+0x20f246]
0xb342: mov r12,rax
0xb345: call 0x2770
0xb34a: mov rbp,rax
0xb34d: test rbx,rbx
0xb350: jz 0xb3c0
0xb352: mov rdi,rbx
0xb355: call 0xeb80
0xb35a: mov esi,dword ptr [rbp]
0xb35d: lea rdx,[rip+0x9eaf]
0xb364: mov rcx,rax
0xb367: mov r8,r12
0xb36a: xor edi,edi
0xb36c: xor eax,eax
0xb36e: call 0x2cb0
0xb388: xor esi,esi
0xb38a: mov rdi,rbx
0xb38d: mov edx,0x1
0xb392: call 0x113c0
0xb397: test eax,eax
0xb399: mov rdi,qword ptr [rip+0x20ed10]
0xb3a0: jz 0xb308
0xb3a6: call 0x11520
0xb3ab: test eax,eax
0xb3ad: jnz 0xb328
0xb3b3: pop rbx
0xb3b4: pop rbp
0xb3b5: pop r12
0xb3b7: jmp 0xb400
0xb3c0: mov esi,dword ptr [rax]
0xb3c2: lea rdx,[rip+0x9dc4]
0xb3c9: mov rcx,r12
0xb3cc: xor edi,edi
0xb3ce: xor eax,eax
0xb3d0: call 0x2cb0
0xb3e0: mov qword ptr [rip+0x20f1b1],rdi
0xb3e7: ret 
0xb3f0: mov byte ptr [rip+0x20f199],dil
0xb3f7: ret 
0xb400: push rbp
0xb401: push rbx
0xb402: sub rsp,0x8
0xb406: mov rdi,qword ptr [rip+0x20ec9b]
0xb40d: call 0x11520
0xb412: test eax,eax
0xb414: jz 0xb42c
0xb416: call 0x2770
0xb41b: cmp byte ptr [rip+0x20f16e],0x0
0xb422: mov rbx,rax
0xb425: jz 0xb443
0xb427: cmp dword ptr [rax],0x20
0xb42a: jnz 0xb443
0xb42c: mov rdi,qword ptr [rip+0x20ecad]
0xb433: call 0x11520
0xb438: test eax,eax
0xb43a: jnz 0xb482
0xb43c: add rsp,0x8
0xb440: pop rbx
0xb441: pop rbp
0xb442: ret 
0xb443: lea rsi,[rip+0x9dd0]
0xb44a: xor edi,edi
0xb44c: mov edx,0x5
0xb451: call 0x28e0
0xb456: mov rdi,qword ptr [rip+0x20f13b]
0xb45d: mov rbp,rax
0xb460: test rdi,rdi
0xb463: jz 0xb48d
0xb465: call 0xeb80
0xb46a: mov esi,dword ptr [rbx]
0xb46c: lea rdx,[rip+0x9da0]
0xb473: mov rcx,rax
0xb476: mov r8,rbp
0xb479: xor edi,edi
0xb47b: xor eax,eax
0xb47d: call 0x2cb0
0xb482: mov edi,dword ptr [rip+0x20eba8]
0xb488: call 0x27a0
0xb48d: mov esi,dword ptr [rbx]
0xb48f: lea rdx,[rip+0x9cf7]
0xb496: mov rcx,rax
0xb499: xor edi,edi
0xb49b: xor eax,eax
0xb49d: call 0x2cb0
0xb4c8: nop dword ptr [rax + rax*0x1]
0xb690: test rdi,rdi
0xb693: jz 0xb6b0
0xb695: push rbx
0xb696: mov ebx,esi
0xb698: call 0x2b80
0xb69d: mov ecx,ebx
0xb69f: xor edx,edx
0xb6a1: xor esi,esi
0xb6a3: pop rbx
0xb6a4: mov edi,eax
0xb6a6: jmp 0x2a70
0xb6b0: ret 
0xb729: call 0x2930
0xb72e: nop 
0xb7b7: nop word ptr [rax + rax*0x1]
0xb811: call 0x2930
0xb816: nop word ptr cs:[rax + rax*0x1]
0xb9b0: mov edi,dword ptr [rdi + 0x18]
0xb9b3: jmp 0xb820
0xb9d8: nop dword ptr [rax + rax*0x1]
0xbc00: mov rax,rdi
0xbc03: xor edx,edx
0xbc05: ror rax,0x3
0xbc09: div rsi
0xbc0c: mov rax,rdx
0xbc0f: ret 
0xbc10: cmp rdi,rsi
0xbc13: setz al
0xbc16: ret 
0xbc42: nop dword ptr [rax]
0xbc46: nop word ptr cs:[rax + rax*0x1]
0xbf30: mov rax,qword ptr [rdi + 0x10]
0xbf34: ret 
0xbf40: mov rax,qword ptr [rdi + 0x18]
0xbf44: ret 
0xbf50: mov rax,qword ptr [rdi + 0x20]
0xbf54: ret 
0xbf60: mov rsi,qword ptr [rdi]
0xbf63: mov rdi,qword ptr [rdi + 0x8]
0xbf67: xor eax,eax
0xbf69: cmp rsi,rdi
0xbf6c: jnc 0xbfa7
0xbf6e: nop 
0xbf70: cmp qword ptr [rsi],0x0
0xbf74: jz 0xbf9c
0xbf76: mov rdx,qword ptr [rsi + 0x8]
0xbf7a: mov ecx,0x1
0xbf7f: test rdx,rdx
0xbf82: jz 0xbf95
0xbf84: nop dword ptr [rax]
0xbf88: mov rdx,qword ptr [rdx + 0x8]
0xbf8c: add rcx,0x1
0xbf90: test rdx,rdx
0xbf93: jnz 0xbf88
0xbf95: cmp rax,rcx
0xbf98: cmovc rax,rcx
0xbf9c: add rsi,0x10
0xbfa0: cmp rsi,rdi
0xbfa3: jc 0xbf70
0xbfa5: ret 
0xbfa7: ret 
0xbfb0: mov rcx,qword ptr [rdi]
0xbfb3: mov r8,qword ptr [rdi + 0x8]
0xbfb7: xor edx,edx
0xbfb9: xor esi,esi
0xbfbb: cmp rcx,r8
0xbfbe: jnc 0xbff6
0xbfc0: cmp qword ptr [rcx],0x0
0xbfc4: jz 0xbfed
0xbfc6: mov rax,qword ptr [rcx + 0x8]
0xbfca: add rsi,0x1
0xbfce: add rdx,0x1
0xbfd2: test rax,rax
0xbfd5: jz 0xbfed
0xbfd7: nop word ptr [rax + rax*0x1]
0xbfe0: mov rax,qword ptr [rax + 0x8]
0xbfe4: add rdx,0x1
0xbfe8: test rax,rax
0xbfeb: jnz 0xbfe0
0xbfed: add rcx,0x10
0xbff1: cmp rcx,r8
0xbff4: jc 0xbfc0
0xbff6: xor eax,eax
0xbff8: cmp qword ptr [rdi + 0x18],rsi
0xbffc: jz 0xc000
0xbffe: ret 
0xc000: cmp qword ptr [rdi + 0x20],rdx
0xc004: setz al
0xc007: ret 
0xc010: push r13
0xc012: push r12
0xc014: mov r12,rsi
0xc017: push rbp
0xc018: push rbx
0xc019: xor ebx,ebx
0xc01b: sub rsp,0x8
0xc01f: mov rsi,qword ptr [rdi]
0xc022: mov rcx,qword ptr [rdi + 0x20]
0xc026: mov rbp,qword ptr [rdi + 0x10]
0xc02a: mov r13,qword ptr [rdi + 0x18]
0xc02e: mov rdi,qword ptr [rdi + 0x8]
0xc032: cmp rsi,rdi
0xc035: jnc 0xc075
0xc037: nop word ptr [rax + rax*0x1]
0xc040: cmp qword ptr [rsi],0x0
0xc044: jz 0xc06c
0xc046: mov rax,qword ptr [rsi + 0x8]
0xc04a: mov edx,0x1
0xc04f: test rax,rax
0xc052: jz 0xc065
0xc054: nop dword ptr [rax]
0xc058: mov rax,qword ptr [rax + 0x8]
0xc05c: add rdx,0x1
0xc060: test rax,rax
0xc063: jnz 0xc058
0xc065: cmp rbx,rdx
0xc068: cmovc rbx,rdx
0xc06c: add rsi,0x10
0xc070: cmp rsi,rdi
0xc073: jc 0xc040
0xc075: lea rdx,[rip+0x91aa]
0xc07c: mov esi,0x1
0xc081: mov rdi,r12
0xc084: xor eax,eax
0xc086: call 0x2db0
0xc08b: lea rdx,[rip+0x91ac]
0xc092: xor eax,eax
0xc094: mov rcx,rbp
0xc097: mov esi,0x1
0xc09c: mov rdi,r12
0xc09f: call 0x2db0
0xc0a4: test r13,r13
0xc0a7: js 0xc110
0xc0a9: pxor xmm0,xmm0
0xc0ad: test rbp,rbp
0xc0b0: cvtsi2sd xmm0,r13
0xc0b5: mulsd xmm0,qword ptr [rip+0x921b]
0xc0bd: js 0xc139
0xc0bf: pxor xmm1,xmm1
0xc0c3: cvtsi2sd xmm1,rbp
0xc0c8: divsd xmm0,xmm1
0xc0cc: lea rdx,[rip+0x919d]
0xc0d3: mov rcx,r13
0xc0d6: mov rdi,r12
0xc0d9: mov esi,0x1
0xc0de: mov eax,0x1
0xc0e3: call 0x2db0
0xc0e8: add rsp,0x8
0xc0ec: mov rcx,rbx
0xc0ef: mov rdi,r12
0xc0f2: pop rbx
0xc0f3: pop rbp
0xc0f4: pop r12
0xc0f6: pop r13
0xc0f8: lea rdx,[rip+0x9157]
0xc0ff: mov esi,0x1
0xc104: xor eax,eax
0xc106: jmp 0x2db0
0xc110: mov rax,r13
0xc113: mov rdx,r13
0xc116: pxor xmm0,xmm0
0xc11a: shr rax,1
0xc11d: and edx,0x1
0xc120: or rax,rdx
0xc123: test rbp,rbp
0xc126: cvtsi2sd xmm0,rax
0xc12b: addsd xmm0,xmm0
0xc12f: mulsd xmm0,qword ptr [rip+0x91a1]
0xc137: jns 0xc0bf
0xc139: mov rax,rbp
0xc13c: pxor xmm1,xmm1
0xc140: shr rax,1
0xc143: and ebp,0x1
0xc146: or rax,rbp
0xc149: cvtsi2sd xmm1,rax
0xc14e: addsd xmm1,xmm1
0xc152: jmp 0xc0c8
0xc180: mov rsi,qword ptr [rbx]
0xc190: test al,al
0xc192: jnz 0xc1b0
0xc194: mov rbx,qword ptr [rbx + 0x8]
0xc198: test rbx,rbx
0xc19b: jnz 0xc180
0xc1b0: mov rsi,qword ptr [rbx]
0xc1b3: pop rbx
0xc1b4: pop rbp
0xc1b5: mov rax,rsi
0xc1b8: pop r12
0xc1ba: ret 
0xc1c0: cmp qword ptr [rdi + 0x20],0x0
0xc1c5: jz 0xc1f3
0xc1c7: mov rdx,qword ptr [rdi]
0xc1ca: mov rcx,qword ptr [rdi + 0x8]
0xc1ce: cmp rdx,rcx
0xc1d1: jnc 0xc1f8
0xc1d3: mov rax,qword ptr [rdx]
0xc1d6: test rax,rax
0xc1d9: jnz 0xc1f6
0xc1db: nop dword ptr [rax + rax*0x1]
0xc1e0: add rdx,0x10
0xc1e4: cmp rdx,rcx
0xc1e7: jnc 0xc1f8
0xc1e9: mov rax,qword ptr [rdx]
0xc1ec: test rax,rax
0xc1ef: jz 0xc1e0
0xc1f1: ret 
0xc1f3: xor eax,eax
0xc1f5: ret 
0xc1f6: ret 
0xc1f8: sub rsp,0x8
0xc1fc: call 0x2760
0xc201: nop dword ptr [rax + rax*0x1]
0xc206: nop word ptr cs:[rax + rax*0x1]
0xc210: push rbp
0xc211: push rbx
0xc212: mov rbp,rdi
0xc215: mov rbx,rsi
0xc218: sub rsp,0x8
0xc21c: call 0xbc20
0xc221: mov rdx,rax
0xc224: mov rcx,rax
0xc227: mov rax,qword ptr [rdx]
0xc22a: mov rdx,qword ptr [rdx + 0x8]
0xc22e: cmp rax,rbx
0xc231: jz 0xc249
0xc233: nop dword ptr [rax + rax*0x1]
0xc238: test rdx,rdx
0xc23b: jz 0xc24e
0xc23d: mov rax,qword ptr [rdx]
0xc240: mov rdx,qword ptr [rdx + 0x8]
0xc244: cmp rax,rbx
0xc247: jnz 0xc238
0xc249: test rdx,rdx
0xc24c: jnz 0xc278
0xc24e: mov rdx,qword ptr [rbp + 0x8]
0xc252: jmp 0xc260
0xc258: mov rax,qword ptr [rcx]
0xc25b: test rax,rax
0xc25e: jnz 0xc26b
0xc260: add rcx,0x10
0xc264: cmp rdx,rcx
0xc267: ja 0xc258
0xc269: xor eax,eax
0xc26b: add rsp,0x8
0xc26f: pop rbx
0xc270: pop rbp
0xc271: ret 
0xc278: mov rax,qword ptr [rdx]
0xc27b: add rsp,0x8
0xc27f: pop rbx
0xc280: pop rbp
0xc281: ret 
0xc290: mov r9,qword ptr [rdi]
0xc293: cmp qword ptr [rdi + 0x8],r9
0xc297: jbe 0xc2f2
0xc299: xor r8d,r8d
0xc29c: mov rcx,qword ptr [r9]
0xc29f: test rcx,rcx
0xc2a2: jz 0xc2dd
0xc2a4: cmp rdx,r8
0xc2a7: jbe 0xc2e7
0xc2a9: mov qword ptr [rsi + r8*0x8],rcx
0xc2ad: mov rcx,qword ptr [r9 + 0x8]
0xc2b1: lea rax,[r8 + 0x1]
0xc2b5: test rcx,rcx
0xc2b8: jz 0xc2da
0xc2ba: nop word ptr [rax + rax*0x1]
0xc2c0: cmp rdx,rax
0xc2c3: jz 0xc2f0
0xc2c5: mov r8,qword ptr [rcx]
0xc2c8: add rax,0x1
0xc2cc: mov qword ptr [rsi + rax*0x8 - 0x8],r8
0xc2d1: mov rcx,qword ptr [rcx + 0x8]
0xc2d5: test rcx,rcx
0xc2d8: jnz 0xc2c0
0xc2da: mov r8,rax
0xc2dd: add r9,0x10
0xc2e1: cmp qword ptr [rdi + 0x8],r9
0xc2e5: ja 0xc29c
0xc2e7: mov rax,r8
0xc2ea: ret 
0xc2f0: ret 
0xc2f2: xor eax,eax
0xc2f4: ret 
0xc300: push r15
0xc302: push r14
0xc304: push r13
0xc306: push r12
0xc308: push rbp
0xc309: push rbx
0xc30a: sub rsp,0x8
0xc30e: mov r14,qword ptr [rdi]
0xc311: cmp qword ptr [rdi + 0x8],r14
0xc315: jbe 0xc366
0xc317: mov r13,rdx
0xc31a: mov r12,rsi
0xc31d: mov r15,rdi
0xc320: xor ebp,ebp
0xc322: mov rdi,qword ptr [r14]
0xc325: test rdi,rdi
0xc328: jz 0xc34a
0xc32a: mov rbx,r14
0xc32d: jmp 0xc333
0xc330: mov rdi,qword ptr [rbx]
0xc333: mov rsi,r13
0xc336: call r12
0xc339: test al,al
0xc33b: jz 0xc354
0xc33d: mov rbx,qword ptr [rbx + 0x8]
0xc341: add rbp,0x1
0xc345: test rbx,rbx
0xc348: jnz 0xc330
0xc34a: add r14,0x10
0xc34e: cmp qword ptr [r15 + 0x8],r14
0xc352: ja 0xc322
0xc354: add rsp,0x8
0xc358: mov rax,rbp
0xc35b: pop rbx
0xc35c: pop rbp
0xc35d: pop r12
0xc35f: pop r13
0xc361: pop r14
0xc363: pop r15
0xc365: ret 
0xc366: xor ebp,ebp
0xc368: jmp 0xc354
0xc370: movzx ecx,byte ptr [rdi]
0xc373: xor edx,edx
0xc375: test cl,cl
0xc377: jz 0xc39d
0xc379: nop dword ptr [rax]
0xc380: mov rax,rdx
0xc383: add rdi,0x1
0xc387: shl rax,0x5
0xc38b: sub rax,rdx
0xc38e: xor edx,edx
0xc390: add rax,rcx
0xc393: movzx ecx,byte ptr [rdi]
0xc396: div rsi
0xc399: test cl,cl
0xc39b: jnz 0xc380
0xc39d: mov rax,rdx
0xc3a0: ret 
0xc3b0: mov rax,0x3f80000000000000
0xc3ba: mov byte ptr [rdi + 0x10],0x0
0xc3be: mov qword ptr [rdi],rax
0xc3c1: mov rax,0x3fb4fdf43f4ccccd
0xc3cb: mov qword ptr [rdi + 0x8],rax
0xc3cf: ret 
0xc42c: mov qword ptr [rax + 0x28],r15
0xc430: call 0xbd70
0xc435: test al,al
0xc437: jz 0xc4c0
0xc43d: cmp byte ptr [r15 + 0x10],0x0
0xc442: jz 0xc540
0xc540: test rbp,rbp
0xc543: movss xmm1,dword ptr [r15 + 0x8]
0xc549: jns 0xc501
0xc590: push r12
0xc592: push rbp
0xc593: mov rbp,rdi
0xc596: push rbx
0xc597: mov r12,qword ptr [rdi]
0xc59a: cmp r12,qword ptr [rdi + 0x8]
0xc59e: jnc 0xc60b
0xc5a0: cmp qword ptr [r12],0x0
0xc5a5: jz 0xc601
0xc5a7: mov rbx,qword ptr [r12 + 0x8]
0xc5ac: mov rax,qword ptr [rbp + 0x40]
0xc5b0: test rbx,rbx
0xc5b3: jz 0xc5e5
0xc5b5: nop dword ptr [rax]
0xc5b8: test rax,rax
0xc5bb: jz 0xc5c6
0xc5bd: mov rdi,qword ptr [rbx]
0xc5c0: call rax
0xc5c2: mov rax,qword ptr [rbp + 0x40]
0xc5c6: mov rdx,qword ptr [rbx + 0x8]
0xc5ca: mov rcx,qword ptr [rbp + 0x48]
0xc5ce: mov qword ptr [rbx],0x0
0xc5d5: test rdx,rdx
0xc5d8: mov qword ptr [rbx + 0x8],rcx
0xc5dc: mov qword ptr [rbp + 0x48],rbx
0xc5e0: mov rbx,rdx
0xc5e3: jnz 0xc5b8
0xc5e5: test rax,rax
0xc5e8: jz 0xc5f0
0xc5ea: mov rdi,qword ptr [r12]
0xc5ee: call rax
0xc5f0: mov qword ptr [r12],0x0
0xc5f8: mov qword ptr [r12 + 0x8],0x0
0xc601: add r12,0x10
0xc605: cmp qword ptr [rbp + 0x8],r12
0xc609: ja 0xc5a0
0xc60b: mov qword ptr [rbp + 0x18],0x0
0xc613: mov qword ptr [rbp + 0x20],0x0
0xc61b: pop rbx
0xc61c: pop rbp
0xc61d: pop r12
0xc61f: ret 
0xc620: push r12
0xc622: push rbp
0xc623: mov r12,rdi
0xc626: push rbx
0xc627: cmp qword ptr [rdi + 0x40],0x0
0xc62c: mov rbp,qword ptr [rdi]
0xc62f: mov rax,qword ptr [rdi + 0x8]
0xc633: jz 0xc683
0xc635: cmp qword ptr [rdi + 0x20],0x0
0xc63a: jz 0xc683
0xc63c: cmp rbp,rax
0xc63f: jnc 0xc6bc
0xc641: nop dword ptr [rax]
0xc648: mov rdi,qword ptr [rbp]
0xc64c: test rdi,rdi
0xc64f: jz 0xc676
0xc651: mov rbx,rbp
0xc654: jmp 0xc663
0xc660: mov rdi,qword ptr [rbx]
0xc663: call qword ptr [r12 + 0x40]
0xc668: mov rbx,qword ptr [rbx + 0x8]
0xc66c: test rbx,rbx
0xc66f: jnz 0xc660
0xc671: mov rax,qword ptr [r12 + 0x8]
0xc676: add rbp,0x10
0xc67a: cmp rax,rbp
0xc67d: ja 0xc648
0xc67f: mov rbp,qword ptr [r12]
0xc683: cmp rbp,rax
0xc686: jnc 0xc6bc
0xc688: nop dword ptr [rax + rax*0x1]
0xc690: mov rdi,qword ptr [rbp + 0x8]
0xc694: test rdi,rdi
0xc697: jz 0xc6b1
0xc699: nop dword ptr [rax]
0xc6a0: mov rbx,qword ptr [rdi + 0x8]
0xc6a4: call 0x2e10
0xc6a9: test rbx,rbx
0xc6ac: mov rdi,rbx
0xc6af: jnz 0xc6a0
0xc6b1: add rbp,0x10
0xc6b5: cmp qword ptr [r12 + 0x8],rbp
0xc6ba: ja 0xc690
0xc6bc: mov rdi,qword ptr [r12 + 0x48]
0xc6c1: test rdi,rdi
0xc6c4: jz 0xc6e1
0xc6c6: nop word ptr cs:[rax + rax*0x1]
0xc6d0: mov rbx,qword ptr [rdi + 0x8]
0xc6d4: call 0x2e10
0xc6d9: test rbx,rbx
0xc6dc: mov rdi,rbx
0xc6df: jnz 0xc6d0
0xc6e1: mov rdi,qword ptr [r12]
0xc6e5: call 0x2e10
0xc6ea: pop rbx
0xc6eb: mov rdi,r12
0xc6ee: pop rbp
0xc6ef: pop r12
0xc6f1: jmp 0x2e10
0xc92a: call 0x2930
0xc93e: nop 
0xcb22: nop word ptr [rax + rax*0x1]
0xcbbf: call 0x2930
0xcbc4: nop 
0xcbc6: nop word ptr cs:[rax + rax*0x1]
0xcc24: call 0x2930
0xcc29: nop dword ptr [rax]
0xce2e: call 0x2930
0xce33: nop word ptr cs:[rax + rax*0x1]
0xce3d: nop dword ptr [rax]
0xce40: push rbp
0xce41: push rbx
0xce42: mov rbp,rdi
0xce45: mov rbx,rsi
0xce48: sub rsp,0x8
0xce4c: mov rdi,qword ptr [rdi]
0xce4f: call 0x11700
0xce54: xor rax,qword ptr [rbp + 0x8]
0xce58: xor edx,edx
0xce5a: add rsp,0x8
0xce5e: div rbx
0xce61: pop rbx
0xce62: pop rbp
0xce63: mov rax,rdx
0xce66: ret 
0xce70: mov rax,qword ptr [rdi + 0x8]
0xce74: xor edx,edx
0xce76: div rsi
0xce79: mov rax,rdx
0xce7c: ret 
0xce80: xor eax,eax
0xce82: mov rdx,qword ptr [rsi + 0x8]
0xce86: cmp qword ptr [rdi + 0x8],rdx
0xce8a: jz 0xce90
0xce8c: ret 
0xce90: mov rcx,qword ptr [rsi + 0x10]
0xce94: cmp qword ptr [rdi + 0x10],rcx
0xce98: jnz 0xce8c
0xce9a: sub rsp,0x8
0xce9e: mov rsi,qword ptr [rsi]
0xcea1: mov rdi,qword ptr [rdi]
0xcea4: call 0xf240
0xcea9: add rsp,0x8
0xcead: ret 
0xceb0: xor eax,eax
0xceb2: mov rdx,qword ptr [rsi + 0x8]
0xceb6: cmp qword ptr [rdi + 0x8],rdx
0xceba: jz 0xcec0
0xcebc: ret 
0xcec0: mov rcx,qword ptr [rsi + 0x10]
0xcec4: cmp qword ptr [rdi + 0x10],rcx
0xcec8: jnz 0xcebc
0xceca: sub rsp,0x8
0xcece: mov rsi,qword ptr [rsi]
0xced1: mov rdi,qword ptr [rdi]
0xced4: call 0x2af0
0xced9: test eax,eax
0xcedb: setz al
0xcede: add rsp,0x8
0xcee2: ret 
0xd02f: nop 
0xd098: mov ebp,0xfffffffe
0xd09d: jmp 0xd07a
0xd09f: call 0x2930
0xd0a4: nop word ptr cs:[rax + rax*0x1]
0xd0ae: nop 
0xd0ff: call 0x2930
0xd104: nop word ptr cs:[rax + rax*0x1]
0xd10e: nop 
0xe3f3: call 0x2930
0xe434: nop 
0xe436: nop word ptr cs:[rax + rax*0x1]
0xe5eb: nop dword ptr [rax + rax*0x1]
0xe5f0: push r12
0xe5f2: push rbp
0xe5f3: push rbx
0xe5f4: mov rbx,rdi
0xe5f7: call 0x2770
0xe5fc: mov r12d,dword ptr [rax]
0xe5ff: mov rbp,rax
0xe602: lea rax,[rip+0x20c0b7]
0xe609: test rbx,rbx
0xe60c: mov esi,0x38
0xe611: cmovz rbx,rax
0xe615: mov rdi,rbx
0xe618: call 0x11220
0xe61d: mov dword ptr [rbp],r12d
0xe621: pop rbx
0xe622: pop rbp
0xe623: pop r12
0xe625: ret 
0xe630: lea rax,[rip+0x20c089]
0xe637: test rdi,rdi
0xe63a: cmovz rdi,rax
0xe63e: mov eax,dword ptr [rdi]
0xe640: ret 
0xe650: lea rax,[rip+0x20c069]
0xe657: test rdi,rdi
0xe65a: cmovz rdi,rax
0xe65e: mov dword ptr [rdi],esi
0xe660: ret 
0xe670: lea rax,[rip+0x20c049]
0xe677: test rdi,rdi
0xe67a: mov ecx,esi
0xe67c: cmovz rdi,rax
0xe680: mov eax,esi
0xe682: and ecx,0x1f
0xe685: shr al,0x5
0xe688: movzx eax,al
0xe68b: lea rdi,[rdi + rax*0x4 + 0x8]
0xe690: mov esi,dword ptr [rdi]
0xe692: mov eax,esi
0xe694: shr eax,cl
0xe696: xor edx,eax
0xe698: and eax,0x1
0xe69b: and edx,0x1
0xe69e: shl edx,cl
0xe6a0: xor edx,esi
0xe6a2: mov dword ptr [rdi],edx
0xe6a4: ret 
0xe6b0: lea rax,[rip+0x20c009]
0xe6b7: test rdi,rdi
0xe6ba: cmovz rdi,rax
0xe6be: mov eax,dword ptr [rdi + 0x4]
0xe6c1: mov dword ptr [rdi + 0x4],esi
0xe6c4: ret 
0xe6d0: lea rax,[rip+0x20bfe9]
0xe6d7: test rdi,rdi
0xe6da: cmovz rdi,rax
0xe6de: test rsi,rsi
0xe6e1: mov dword ptr [rdi],0xa
0xe6e7: jz 0xe6f7
0xe6e9: test rdx,rdx
0xe6ec: jz 0xe6f7
0xe6ee: mov qword ptr [rdi + 0x28],rsi
0xe6f2: mov qword ptr [rdi + 0x30],rdx
0xe6f6: ret 
0xe6f7: sub rsp,0x8
0xe6fb: call 0x2760
0xe700: push r15
0xe702: push r14
0xe704: lea rax,[rip+0x20bfb5]
0xe70b: push r13
0xe70d: push r12
0xe70f: mov r13,rdi
0xe712: push rbp
0xe713: push rbx
0xe714: mov rbx,r8
0xe717: mov r14,rsi
0xe71a: mov r15,rdx
0xe71d: sub rsp,0x18
0xe721: test r8,r8
0xe724: cmovz rbx,rax
0xe728: mov qword ptr [rsp + 0x8],rcx
0xe72d: call 0x2770
0xe732: mov r12d,dword ptr [rax]
0xe735: mov rbp,rax
0xe738: lea rax,[rbx + 0x8]
0xe73c: sub rsp,0x8
0xe740: mov r9d,dword ptr [rbx + 0x4]
0xe744: push qword ptr [rbx + 0x30]
0xe747: mov r8d,dword ptr [rbx]
0xe74a: push qword ptr [rbx + 0x28]
0xe74d: mov rdx,r15
0xe750: push rax
0xe751: mov rcx,qword ptr [rsp + 0x28]
0xe756: mov rsi,r14
0xe759: mov rdi,r13
0xe75c: call 0xd200
0xe761: mov dword ptr [rbp],r12d
0xe765: add rsp,0x38
0xe769: pop rbx
0xe76a: pop rbp
0xe76b: pop r12
0xe76d: pop r13
0xe76f: pop r14
0xe771: pop r15
0xe773: ret 
0xe780: push r15
0xe782: push r14
0xe784: lea rax,[rip+0x20bf35]
0xe78b: push r13
0xe78d: push r12
0xe78f: mov r12,rdx
0xe792: push rbp
0xe793: push rbx
0xe794: mov rbx,rcx
0xe797: mov r14,rdi
0xe79a: mov r15,rsi
0xe79d: sub rsp,0x38
0xe7a1: test rcx,rcx
0xe7a4: cmovz rbx,rax
0xe7a8: xor ebp,ebp
0xe7aa: call 0x2770
0xe7af: test r12,r12
0xe7b2: mov r13,rax
0xe7b5: mov eax,dword ptr [rax]
0xe7b7: setz bpl
0xe7bb: or ebp,dword ptr [rbx + 0x4]
0xe7be: lea r10,[rbx + 0x8]
0xe7c2: sub rsp,0x8
0xe7c6: mov r8d,dword ptr [rbx]
0xe7c9: mov rcx,r15
0xe7cc: mov dword ptr [rsp + 0x14],eax
0xe7d0: push qword ptr [rbx + 0x30]
0xe7d3: mov rdx,r14
0xe7d6: push qword ptr [rbx + 0x28]
0xe7d9: push r10
0xe7db: xor esi,esi
0xe7dd: mov r9d,ebp
0xe7e0: xor edi,edi
0xe7e2: mov qword ptr [rsp + 0x40],r10
0xe7e7: call 0xd200
0xe7ec: lea rsi,[rax + 0x1]
0xe7f0: mov qword ptr [rsp + 0x48],rax
0xe7f5: add rsp,0x20
0xe7f9: mov rdi,rsi
0xe7fc: mov qword ptr [rsp + 0x18],rsi
0xe801: call 0x11020
0xe806: mov qword ptr [rsp + 0x10],rax
0xe80b: sub rsp,0x8
0xe80f: push qword ptr [rbx + 0x30]
0xe812: push qword ptr [rbx + 0x28]
0xe815: mov r10,qword ptr [rsp + 0x38]
0xe81a: mov r9d,ebp
0xe81d: mov r8d,dword ptr [rbx]
0xe820: mov rcx,r15
0xe823: mov rdx,r14
0xe826: mov rdi,rax
0xe829: push r10
0xe82b: mov rsi,qword ptr [rsp + 0x38]
0xe830: call 0xd200
0xe835: mov eax,dword ptr [rsp + 0x2c]
0xe839: add rsp,0x20
0xe83d: test r12,r12
0xe840: mov dword ptr [r13],eax
0xe844: jz 0xe84f
0xe846: mov r11,qword ptr [rsp + 0x28]
0xe84b: mov qword ptr [r12],r11
0xe84f: mov rax,qword ptr [rsp + 0x10]
0xe854: add rsp,0x38
0xe858: pop rbx
0xe859: pop rbp
0xe85a: pop r12
0xe85c: pop r13
0xe85e: pop r14
0xe860: pop r15
0xe862: ret 
0xe870: mov rcx,rdx
0xe873: xor edx,edx
0xe875: jmp 0xe780
0xe880: mov eax,dword ptr [rip+0x20b7f2]
0xe886: push r12
0xe888: mov r12,qword ptr [rip+0x20b7f1]
0xe88f: push rbp
0xe890: push rbx
0xe891: cmp eax,0x1
0xe894: jle 0xe8c1
0xe896: sub eax,0x2
0xe899: lea rbx,[r12 + 0x18]
0xe89e: shl rax,0x4
0xe8a2: lea rbp,[r12 + rax*0x1 + 0x28]
0xe8a7: nop word ptr [rax + rax*0x1]
0xe8b0: mov rdi,qword ptr [rbx]
0xe8b3: add rbx,0x10
0xe8b7: call 0x2e10
0xe8bc: cmp rbx,rbp
0xe8bf: jnz 0xe8b0
0xe8c1: mov rdi,qword ptr [r12 + 0x8]
0xe8c6: lea rbx,[rip+0x20bcf3]
0xe8cd: cmp rdi,rbx
0xe8d0: jz 0xe8e9
0xe8d2: call 0x2e10
0xe8d7: mov qword ptr [rip+0x20b7ae],0x100
0xe8e2: mov qword ptr [rip+0x20b7af],rbx
0xe8e9: lea rbx,[rip+0x20b7a0]
0xe8f0: cmp r12,rbx
0xe8f3: jz 0xe904
0xe8f5: mov rdi,r12
0xe8f8: call 0x2e10
0xe8fd: mov qword ptr [rip+0x20b77c],rbx
0xe904: pop rbx
0xe905: mov dword ptr [rip+0x20b769],0x1
0xe90f: pop rbp
0xe910: pop r12
0xe912: ret 
0xe920: lea rcx,[rip+0x20bd99]
0xe927: mov rdx,-0x1
0xe92e: jmp 0xe440
0xe940: lea rcx,[rip+0x20bd79]
0xe947: jmp 0xe440
0xe950: lea rcx,[rip+0x20bd69]
0xe957: mov rsi,rdi
0xe95a: mov rdx,-0x1
0xe961: xor edi,edi
0xe963: jmp 0xe440
0xe970: lea rcx,[rip+0x20bd49]
0xe977: mov rdx,rsi
0xe97a: mov rsi,rdi
0xe97d: xor edi,edi
0xe97f: jmp 0xe440
0xea19: call 0x2930
0xea1e: nop 
0xea20: sub rsp,0x48
0xea24: mov rax,rdx
0xea27: mov rdx,rcx
0xea2a: mov rcx,qword ptr fs:[rip+0xffffffffffff15f5]
0xea33: mov qword ptr [rsp + 0x38],rcx
0xea38: xor ecx,ecx
0xea3a: cmp esi,0xa
0xea3d: jz 0xeaa0
0xea3f: mov dword ptr [rsp],esi
0xea42: mov rcx,rsp
0xea45: mov rsi,rax
0xea48: mov qword ptr [rsp + 0x4],0x0
0xea51: mov qword ptr [rsp + 0xc],0x0
0xea5a: mov qword ptr [rsp + 0x14],0x0
0xea63: mov qword ptr [rsp + 0x1c],0x0
0xea6c: mov qword ptr [rsp + 0x24],0x0
0xea75: mov qword ptr [rsp + 0x2c],0x0
0xea7e: mov dword ptr [rsp + 0x34],0x0
0xea86: call 0xe440
0xea8b: mov rdx,qword ptr [rsp + 0x38]
0xea90: xor rdx,qword ptr fs:[rip+0xffffffffffff158f]
0xea99: jnz 0xeaa5
0xea9b: add rsp,0x48
0xea9f: ret 
0xeaa0: call 0x2760
0xeaa5: call 0x2930
0xeaaa: nop word ptr [rax + rax*0x1]
0xeac0: mov rcx,rdx
0xeac3: mov rdx,rsi
0xeac6: mov esi,edi
0xeac8: xor edi,edi
0xeaca: jmp 0xea20
0xead0: sub rsp,0x48
0xead4: mov ecx,edx
0xead6: mov rax,qword ptr fs:[rip+0xffffffffffff1549]
0xeadf: mov qword ptr [rsp + 0x38],rax
0xeae4: xor eax,eax
0xeae6: mov rax,qword ptr [rip+0x20bc03]
0xeaed: mov r8,rsp
0xeaf0: and ecx,0x1f
0xeaf3: movdqa xmm0,[rip+0x20bbc5]
0xeafb: mov qword ptr [rsp + 0x30],rax
0xeb00: mov eax,edx
0xeb02: movaps xmmword ptr [rsp],xmm0
0xeb06: shr al,0x5
0xeb09: movzx eax,al
0xeb0c: lea r9,[r8 + rax*0x4 + 0x8]
0xeb11: movdqa xmm0,[rip+0x20bbb7]
0xeb19: movaps xmmword ptr [rsp + 0x10],xmm0
0xeb1e: movdqa xmm0,[rip+0x20bbba]
0xeb26: movaps xmmword ptr [rsp + 0x20],xmm0
0xeb2b: mov edx,dword ptr [r9]
0xeb2e: mov eax,edx
0xeb30: shr eax,cl
0xeb32: not eax
0xeb34: and eax,0x1
0xeb37: shl eax,cl
0xeb39: mov rcx,r8
0xeb3c: xor eax,edx
0xeb3e: mov rdx,rsi
0xeb41: mov rsi,rdi
0xeb44: mov dword ptr [r9],eax
0xeb47: xor edi,edi
0xeb49: call 0xe440
0xeb4e: mov rsi,qword ptr [rsp + 0x38]
0xeb53: xor rsi,qword ptr fs:[rip+0xffffffffffff14cc]
0xeb5c: jnz 0xeb63
0xeb5e: add rsp,0x48
0xeb62: ret 
0xeb63: call 0x2930
0xeb68: nop dword ptr [rax + rax*0x1]
0xeb70: movsx edx,sil
0xeb74: mov rsi,-0x1
0xeb7b: jmp 0xead0
0xeb80: mov edx,0x3a
0xeb85: mov rsi,-0x1
0xeb8c: jmp 0xead0
0xeba0: mov edx,0x3a
0xeba5: jmp 0xead0
0xec34: call 0x2760
0xec39: call 0x2930
0xec3e: nop 
0xec40: sub rsp,0x48
0xec44: mov r9,rcx
0xec47: mov rcx,qword ptr [rip+0x20baa2]
0xec4e: movdqa xmm0,[rip+0x20ba6a]
0xec56: mov rax,qword ptr fs:[rip+0xffffffffffff13c9]
0xec5f: mov qword ptr [rsp + 0x38],rax
0xec64: xor eax,eax
0xec66: movaps xmmword ptr [rsp],xmm0
0xec6a: test rsi,rsi
0xec6d: mov qword ptr [rsp + 0x30],rcx
0xec72: mov dword ptr [rsp],0xa
0xec79: movdqa xmm0,[rip+0x20ba4f]
0xec81: movaps xmmword ptr [rsp + 0x10],xmm0
0xec86: movdqa xmm0,[rip+0x20ba52]
0xec8e: movaps xmmword ptr [rsp + 0x20],xmm0
0xec93: jz 0xecc7
0xec95: test rdx,rdx
0xec98: jz 0xecc7
0xec9a: mov qword ptr [rsp + 0x28],rsi
0xec9f: mov qword ptr [rsp + 0x30],rdx
0xeca4: mov rcx,rsp
0xeca7: mov rdx,r8
0xecaa: mov rsi,r9
0xecad: call 0xe440
0xecb2: mov rdi,qword ptr [rsp + 0x38]
0xecb7: xor rdi,qword ptr fs:[rip+0xffffffffffff1368]
0xecc0: jnz 0xeccc
0xecc2: add rsp,0x48
0xecc6: ret 
0xecc7: call 0x2760
0xeccc: call 0x2930
0xecd1: nop dword ptr [rax + rax*0x1]
0xecd6: nop word ptr cs:[rax + rax*0x1]
0xece0: mov r8,-0x1
0xece7: jmp 0xec40
0xecf0: mov rcx,rdx
0xecf3: mov r8,-0x1
0xecfa: mov rdx,rsi
0xecfd: mov rsi,rdi
0xed00: xor edi,edi
0xed02: jmp 0xec40
0xed10: mov r8,rcx
0xed13: mov rcx,rdx
0xed16: mov rdx,rsi
0xed19: mov rsi,rdi
0xed1c: xor edi,edi
0xed1e: jmp 0xec40
0xed30: lea rcx,[rip+0x20b309]
0xed37: jmp 0xe440
0xed40: lea rcx,[rip+0x20b2f9]
0xed47: mov rdx,rsi
0xed4a: mov rsi,rdi
0xed4d: xor edi,edi
0xed4f: jmp 0xe440
0xf005: call 0x2930
0xf00a: nop word ptr [rax + rax*0x1]
0xf192: call 0x2930
0xf197: nop word ptr [rax + rax*0x1]
0xf260: mov rax,qword ptr [rsi + 0x8]
0xf264: cmp qword ptr [rdi + 0x8],rax
0xf268: jc 0xf278
0xf26a: seta al
0xf26d: movzx eax,al
0xf270: ret 
0xf278: mov eax,0xffffffff
0xf27d: ret 
0xf280: mov rsi,qword ptr [rsi]
0xf283: mov rdi,qword ptr [rdi]
0xf286: jmp 0x2af0
0xf59e: nop 
0xf5a0: mov rdi,qword ptr [rsp + 0x10]
0xf5a5: call 0x2e10
0xf5aa: mov rdi,r13
0xf5ad: xor r13d,r13d
0xf5b0: call 0x2e10
0xf5b5: mov dword ptr [rbp],ebx
0xf5b8: jmp 0xf3eb
0xf670: push rbx
0xf671: mov rsi,rdi
0xf674: mov edi,0x1
0xf679: sub rsp,0xa0
0xf680: mov rdx,rsp
0xf683: mov rax,qword ptr fs:[rip+0xffffffffffff099c]
0xf68c: mov qword ptr [0x98 + rsp],rax
0xf694: xor eax,eax
0xf696: call 0x2910
0xf69b: mov ebx,eax
0xf69d: call 0x2770
0xf6a2: test ebx,ebx
0xf6a4: jz 0xf6c0
0xf6a6: mov edx,dword ptr [rax]
0xf6a8: cmp edx,0x4b
0xf6ab: jz 0xf6c0
0xf6ad: xor eax,eax
0xf6af: cmp edx,0x2
0xf6b2: setnz al
0xf6b5: neg eax
0xf6b7: jmp 0xf6cb
0xf6c0: mov dword ptr [rax],0x11
0xf6c6: mov eax,0xffffffff
0xf6cb: mov rcx,qword ptr [0x98 + rsp]
0xf6d3: xor rcx,qword ptr fs:[rip+0xffffffffffff094c]
0xf6dc: jnz 0xf6e7
0xf6de: add rsp,0xa0
0xf6e5: pop rbx
0xf6e6: ret 
0xf6e7: call 0x2930
0xf6ec: nop dword ptr [rax]
0xf6f0: mov esi,0x1c0
0xf6f5: jmp 0x27e0
0xf700: mov esi,dword ptr [rsi]
0xf702: mov edx,0x180
0xf707: xor eax,eax
0xf709: and sil,0x3c
0xf70d: or sil,0xc2
0xf711: jmp 0x2cd0
0xf8a0: sub rsp,0x18
0xf8a4: cmp ecx,0x1
0xf8a7: mov dword ptr [rsp + 0xc],edx
0xf8ab: jz 0xf910
0xf8ad: cmp ecx,0x2
0xf8b0: jz 0xf8d8
0xf8b2: test ecx,ecx
0xf8b4: jz 0xf8f0
0xf8b6: lea rcx,[rip+0x5fa3]
0xf8bd: lea rsi,[rip+0x5f44]
0xf8c4: lea rdi,[rip+0x5f65]
0xf8cb: mov edx,0x147
0xf8d0: call 0x29e0
0xf8d5: nop dword ptr [rax]
0xf8d8: lea rdx,[rsp + 0xc]
0xf8dd: lea rcx,[rip+0xfffffffffffffd8c]
0xf8e4: call 0xf720
0xf8e9: add rsp,0x18
0xf8ed: ret 
0xf8f0: lea rdx,[rsp + 0xc]
0xf8f5: lea rcx,[rip+0xfffffffffffffe04]
0xf8fc: call 0xf720
0xf901: add rsp,0x18
0xf905: ret 
0xf910: lea rdx,[rsp + 0xc]
0xf915: lea rcx,[rip+0xfffffffffffffdd4]
0xf91c: call 0xf720
0xf921: add rsp,0x18
0xf925: ret 
0xf930: mov r8d,0x6
0xf936: jmp 0xf8a0
0xf940: mov r8d,0x6
0xf946: jmp 0xf720
0xf990: mov rax,qword ptr [rdi]
0xf993: xor edx,edx
0xf995: div rsi
0xf998: mov rax,rdx
0xf99b: ret 
0xf9a0: mov rax,qword ptr [rsi]
0xf9a3: cmp qword ptr [rdi],rax
0xf9a6: setz al
0xf9a9: ret 
0x100d8: call 0x2930
0x102e0: mov ecx,0x100
0x102e5: jmp 0x2750
0x10736: call 0x2930
0x109a6: call 0x2930
0x10af8: mov r8,rcx
0x10afb: mov rcx,rdx
0x10afe: lea rdx,[rip+0x4dc6]
0x10b05: mov esi,0x1
0x10b0a: xor eax,eax
0x10b0c: call 0x2db0
0x10b11: jmp 0x109fc
0x10de0: xor r9d,r9d
0x10de3: cmp qword ptr [r8],0x0
0x10de7: jz 0x10dfb
0x10de9: nop dword ptr [rax]
0x10df0: add r9,0x1
0x10df4: cmp qword ptr [r8 + r9*0x8],0x0
0x10df9: jnz 0x10df0
0x10dfb: jmp 0x109c0
0x10e00: sub rsp,0x68
0x10e04: mov r10,r8
0x10e07: xor r9d,r9d
0x10e0a: mov rax,qword ptr fs:[rip+0xfffffffffffef215]
0x10e13: mov qword ptr [rsp + 0x58],rax
0x10e18: xor eax,eax
0x10e1a: mov r8,rsp
0x10e1d: nop dword ptr [rax]
0x10e20: mov eax,dword ptr [r10]
0x10e23: cmp eax,0x2f
0x10e26: ja 0x10e6a
0x10e28: mov r11d,eax
0x10e2b: add r11,qword ptr [r10 + 0x10]
0x10e2f: add eax,0x8
0x10e32: mov dword ptr [r10],eax
0x10e35: mov rax,qword ptr [r11]
0x10e38: test rax,rax
0x10e3b: mov qword ptr [r8 + r9*0x8],rax
0x10e3f: jz 0x10e4b
0x10e41: add r9,0x1
0x10e45: cmp r9,0xa
0x10e49: jnz 0x10e20
0x10e4b: call 0x109c0
0x10e50: mov rax,qword ptr [rsp + 0x58]
0x10e55: xor rax,qword ptr fs:[rip+0xfffffffffffef1ca]
0x10e5e: jnz 0x10e65
0x10e60: add rsp,0x68
0x10e64: ret 
0x10e65: call 0x2930
0x10e6a: mov r11,qword ptr [r10 + 0x8]
0x10e6e: lea rax,[r11 + 0x8]
0x10e72: mov qword ptr [r10 + 0x8],rax
0x10e76: jmp 0x10e35
0x10f40: call 0x2930
0x10f4c: mov rax,rbx
0x10f4f: add rbx,0x8
0x10f53: jmp 0x10f06
0x10f60: push rbx
0x10f61: lea rsi,[rip+0x49b1]
0x10f68: mov edx,0x5
0x10f6d: xor edi,edi
0x10f6f: call 0x28e0
0x10f74: lea rdx,[rip+0x49b3]
0x10f7b: mov rsi,rax
0x10f7e: mov edi,0x1
0x10f83: xor eax,eax
0x10f85: call 0x2c60
0x10f8a: lea rsi,[rip+0x49b3]
0x10f91: mov edx,0x5
0x10f96: xor edi,edi
0x10f98: call 0x28e0
0x10f9d: lea rcx,[rip+0x3444]
0x10fa4: lea rdx,[rip+0x1a13]
0x10fab: mov rsi,rax
0x10fae: mov edi,0x1
0x10fb3: xor eax,eax
0x10fb5: call 0x2c60
0x10fba: mov rbx,qword ptr [rip+0x2090e7]
0x10fc1: lea rsi,[rip+0x4ba8]
0x10fc8: xor edi,edi
0x10fca: mov edx,0x5
0x10fcf: call 0x28e0
0x10fd4: mov rsi,rbx
0x10fd7: mov rdi,rax
0x10fda: pop rbx
0x10fdb: jmp 0x2ab0
0x1103a: nop word ptr [rax + rax*0x1]
0x11040: mov rax,rdi
0x11043: mul rsi
0x11046: mov rdi,rax
0x11049: seto al
0x1104c: test rdi,rdi
0x1104f: js 0x1105b
0x11051: movzx eax,al
0x11054: test rax,rax
0x11057: jnz 0x1105b
0x11059: jmp 0x11020
0x1105b: sub rsp,0x8
0x1105f: call 0x11270
0x11064: nop 
0x11066: nop word ptr cs:[rax + rax*0x1]
0x11070: jmp 0x11020
0x110b6: nop word ptr cs:[rax + rax*0x1]
0x110c0: mov rax,rsi
0x110c3: mul rdx
0x110c6: mov rsi,rax
0x110c9: seto al
0x110cc: test rsi,rsi
0x110cf: js 0x110db
0x110d1: movzx eax,al
0x110d4: test rax,rax
0x110d7: jnz 0x110db
0x110d9: jmp 0x11080
0x110db: sub rsp,0x8
0x110df: call 0x11270
0x110e4: nop 
0x110e6: nop word ptr cs:[rax + rax*0x1]
0x110f0: test rdi,rdi
0x110f3: mov r9,rdx
0x110f6: mov rcx,qword ptr [rsi]
0x110f9: jz 0x11130
0x110fb: xor edx,edx
0x110fd: mov rax,0x5555555555555554
0x11107: div r9
0x1110a: cmp rax,rcx
0x1110d: jbe 0x1114b
0x1110f: mov rax,rcx
0x11112: shr rax,1
0x11115: lea rcx,[rax + rcx*0x1 + 0x1]
0x1111a: mov qword ptr [rsi],rcx
0x1111d: imul rcx,r9
0x11121: mov rsi,rcx
0x11124: jmp 0x11080
0x11130: test rcx,rcx
0x11133: jz 0x11158
0x11135: mov rax,rcx
0x11138: mul r9
0x1113b: seto dl
0x1113e: test rax,rax
0x11141: movzx edx,dl
0x11144: js 0x1114b
0x11146: test rdx,rdx
0x11149: jz 0x1111a
0x1114b: sub rsp,0x8
0x1114f: call 0x11270
0x11154: nop dword ptr [rax]
0x11158: xor edx,edx
0x1115a: mov eax,0x80
0x1115f: xor r8d,r8d
0x11162: div r9
0x11165: test rax,rax
0x11168: setz r8b
0x1116c: lea rcx,[r8 + rax*0x1]
0x11170: jmp 0x11135
0x11180: test rdi,rdi
0x11183: mov rax,qword ptr [rsi]
0x11186: jz 0x111b0
0x11188: mov rdx,0x5555555555555553
0x11192: cmp rax,rdx
0x11195: ja 0x111c1
0x11197: mov rdx,rax
0x1119a: shr rdx,1
0x1119d: lea rax,[rdx + rax*0x1 + 0x1]
0x111a2: mov qword ptr [rsi],rax
0x111a5: mov rsi,rax
0x111a8: jmp 0x11080
0x111b0: test rax,rax
0x111b3: mov edx,0x80
0x111b8: cmovz rax,rdx
0x111bc: test rax,rax
0x111bf: jns 0x111a2
0x111c1: sub rsp,0x8
0x111c5: call 0x11270
0x111ca: nop word ptr [rax + rax*0x1]
0x111d0: push rbx
0x111d1: mov rbx,rdi
0x111d4: call 0x11020
0x111d9: mov rdx,rbx
0x111dc: xor esi,esi
0x111de: mov rdi,rax
0x111e1: pop rbx
0x111e2: jmp 0x29f0
0x111f0: mov rax,rdi
0x111f3: sub rsp,0x8
0x111f7: mul rsi
0x111fa: seto dl
0x111fd: test rax,rax
0x11200: js 0x11219
0x11202: movzx edx,dl
0x11205: test rdx,rdx
0x11208: jnz 0x11219
0x1120a: call 0x2ad0
0x1120f: test rax,rax
0x11212: jz 0x11219
0x11214: add rsp,0x8
0x11218: ret 
0x11219: call 0x11270
0x1121e: nop 
0x112a5: nop word ptr cs:[rax + rax*0x1]
0x112af: nop 
0x11342: call 0x2930
0x11347: nop word ptr [rax + rax*0x1]
0x11390: xor eax,eax
0x11392: mov rcx,qword ptr [rdi + 0x20]
0x11396: cmp qword ptr [rdi + 0x28],rcx
0x1139a: ja 0x113b7
0x1139c: mov rax,qword ptr [rdi + 0x10]
0x113a0: sub rax,qword ptr [rdi + 0x8]
0x113a4: test dword ptr [rdi],0x100
0x113aa: jz 0x113b7
0x113ac: mov rdx,qword ptr [rdi + 0x58]
0x113b0: sub rdx,qword ptr [rdi + 0x48]
0x113b4: add rax,rdx
0x113b7: ret 
0x1149e: call 0x2930
0x114a3: nop word ptr cs:[rax + rax*0x1]
0x114ad: nop dword ptr [rax]
0x11520: push r12
0x11522: push rbp
0x11523: mov rbp,rdi
0x11526: push rbx
0x11527: call 0x27c0
0x1152c: mov ebx,dword ptr [rbp]
0x1152f: mov rdi,rbp
0x11532: mov r12,rax
0x11535: call 0x12490
0x1153a: and ebx,0x20
0x1153d: test ebx,ebx
0x1153f: jnz 0x11558
0x11541: test eax,eax
0x11543: jz 0x1154f
0x11545: test r12,r12
0x11548: mov eax,0xffffffff
0x1154d: jz 0x11588
0x1154f: pop rbx
0x11550: pop rbp
0x11551: pop r12
0x11553: ret 
0x11558: test eax,eax
0x1155a: jnz 0x11578
0x1155c: call 0x2770
0x11561: mov dword ptr [rax],0x0
0x11567: mov eax,0xffffffff
0x1156c: pop rbx
0x1156d: pop rbp
0x1156e: pop r12
0x11570: ret 
0x11578: pop rbx
0x11579: mov eax,0xffffffff
0x1157e: pop rbp
0x1157f: pop r12
0x11581: ret 
0x11588: call 0x2770
0x1158d: cmp dword ptr [rax],0x9
0x11590: pop rbx
0x11591: pop rbp
0x11592: pop r12
0x11594: setnz al
0x11597: movzx eax,al
0x1159a: neg eax
0x1159c: ret 
0x11650: sub rsp,0x28
0x11654: xor edi,edi
0x11656: mov rsi,rsp
0x11659: mov rax,qword ptr fs:[rip+0xfffffffffffee9c6]
0x11662: mov qword ptr [rsp + 0x18],rax
0x11667: xor eax,eax
0x11669: call 0x2830
0x1166e: mov rcx,qword ptr [rsp + 0x18]
0x11673: xor rcx,qword ptr fs:[rip+0xfffffffffffee9ac]
0x1167c: mov rax,qword ptr [rsp]
0x11680: mov rdx,qword ptr [rsp + 0x8]
0x11685: jnz 0x1168c
0x11687: add rsp,0x28
0x1168b: ret 
0x1168c: call 0x2930
0x11691: nop word ptr cs:[rax + rax*0x1]
0x1169b: nop dword ptr [rax + rax*0x1]
0x11700: movsx rcx,byte ptr [rdi]
0x11704: test cl,cl
0x11706: jz 0x11730
0x11708: xor eax,eax
0x1170a: nop word ptr [rax + rax*0x1]
0x11710: rol rax,0x9
0x11714: add rdi,0x1
0x11718: add rax,rcx
0x1171b: movsx rcx,byte ptr [rdi]
0x1171f: test cl,cl
0x11721: jnz 0x11710
0x11723: xor edx,edx
0x11725: div rsi
0x11728: mov rax,rdx
0x1172b: ret 
0x11730: xor edx,edx
0x11732: mov rax,rdx
0x11735: ret 
0x117c8: lea rax,[rsp + 0x60]
0x117cd: mov dword ptr [rsp],0x18
0x117d4: mov ecx,dword ptr [rsp + 0x38]
0x117d8: mov qword ptr [rsp + 0x8],rax
0x117dd: lea rax,[rsp + 0x20]
0x117e2: mov qword ptr [rsp + 0x10],rax
0x117e7: jmp 0x117a0
0x117e9: call 0x2930
0x117ee: nop 
0x117f0: push rbx
0x117f1: mov rbx,rdi
0x117f4: mov edi,0x18
0x117f9: call 0x11020
0x117fe: mov qword ptr [rax],rbx
0x11801: mov qword ptr [rax + 0x10],0x0
0x11809: mov qword ptr [rax + 0x8],0x0
0x11811: pop rbx
0x11812: ret 
0x11860: mov rax,qword ptr [rdi]
0x11863: ret 
0x11985: call 0x2930
0x1198a: nop word ptr [rax + rax*0x1]
0x11990: push rbx
0x11991: mov rdx,-0x1
0x11998: mov rbx,rdi
0x1199b: mov esi,0x18
0x119a0: call 0x2cc0
0x119a5: mov rdi,rbx
0x119a8: pop rbx
0x119a9: jmp 0x2e10
0x11a10: push rbp
0x11a11: push rbx
0x11a12: sub rsp,0x8
0x11a16: test rdi,rdi
0x11a19: jz 0x11a58
0x11a1b: call 0xed80
0x11a20: mov rbp,rax
0x11a23: call 0x2770
0x11a28: cmp dword ptr [rax],0x0
0x11a2b: mov rbx,rax
0x11a2e: mov edx,0x5
0x11a33: jz 0x11a5d
0x11a35: lea rsi,[rip+0x4202]
0x11a3c: xor edi,edi
0x11a3e: call 0x28e0
0x11a43: mov edi,dword ptr [rip+0x2085e7]
0x11a49: mov esi,dword ptr [rbx]
0x11a4b: mov rdx,rax
0x11a4e: mov rcx,rbp
0x11a51: xor eax,eax
0x11a53: call 0x2cb0
0x11a58: call 0x2760
0x11a5d: lea rsi,[rip+0x41ca]
0x11a64: xor edi,edi
0x11a66: call 0x28e0
0x11a6b: jmp 0x11a43
0x11aa2: lea rsi,[rip+0x41b1]
0x11aa9: call 0x12790
0x11aae: test rax,rax
0x11ab1: mov r13,rax
0x11ab4: jz 0x11cb8
0x11aba: mov edi,0x1038
0x11abf: call 0x11020
0x11ac4: mov rbx,rax
0x11ac7: mov qword ptr [rax],r13
0x11aca: lea rax,[rip+0xffffffffffffff3f]
0x11ad1: cmp rbp,0x1000
0x11ad8: mov ecx,0x1000
0x11add: lea rsi,[rbx + 0x18]
0x11ae1: cmovbe rcx,rbp
0x11ae5: mov qword ptr [rbx + 0x8],rax
0x11ae9: mov qword ptr [rbx + 0x10],r12
0x11aed: xor edx,edx
0x11aef: mov rdi,r13
0x11af2: call 0x2c80
0x11bb8: mov edi,0x1038
0x11bbd: call 0x11020
0x11bc2: mov rbx,rax
0x11bc5: mov qword ptr [rax],0x0
0x11bcc: lea rax,[rip+0xfffffffffffffe3d]
0x11bd3: mov qword ptr [rbx + 0x10],0x0
0x11bdb: mov qword ptr [rbx + 0x8],rax
0x11bdf: jmp 0x11af7
0x11c6c: call 0x2b90
0x11c71: mov dword ptr [rsp + 0x10],eax
0x11c75: mov eax,0x800
0x11c7a: mov edx,0x4
0x11c7f: sub rax,rbp
0x11c82: lea rcx,[r13 + rbp*0x1]
0x11c87: cmp rax,0x4
0x11c8b: cmova rax,rdx
0x11c8f: test eax,eax
0x11c91: mov esi,eax
0x11c93: jz 0x11ba5
0x11c99: xor eax,eax
0x11c9b: mov edx,eax
0x11c9d: add eax,0x1
0x11ca0: movzx edi,byte ptr [r12 + rdx*0x1]
0x11ca5: cmp eax,esi
0x11ca7: mov byte ptr [rcx + rdx*0x1],dil
0x11cab: jc 0x11c9b
0x11cad: jmp 0x11ba5
0x11cb8: xor ebx,ebx
0x11cba: jmp 0x11af7
0x11cbf: call 0x2930
0x11da0: mov qword ptr [rdi + 0x8],rsi
0x11da4: ret 
0x11db0: mov qword ptr [rdi + 0x10],rsi
0x11db4: ret 
0x11e12: mov rcx,qword ptr [r12]
0x1275d: call 0x2930
0x1277a: mov rax,qword ptr [rsp + 0x8]
0x1277f: jmp 0x12649
0x12784: mov rax,qword ptr [rsp + 0x8]
0x12789: jmp 0x126a1
0x12790: push r12
0x12792: push rbp
0x12793: mov rbp,rsi
0x12796: push rbx
0x12797: call 0x2d00
0x1279c: test rax,rax
0x1279f: mov rbx,rax
0x127a2: jz 0x127b1
0x127a4: mov rdi,rax
0x127a7: call 0x2b80
0x127ac: cmp eax,0x2
0x127af: jbe 0x127c0
0x127b1: mov rax,rbx
0x127b4: pop rbx
0x127b5: pop rbp
0x127b6: pop r12
0x127b8: ret 
0x127c0: mov edi,eax
0x127c2: call 0x12480
0x127c7: test eax,eax
0x127c9: mov r12d,eax
0x127cc: js 0x12808
0x127ce: mov rdi,rbx
0x127d1: call 0x12490
0x127d6: test eax,eax
0x127d8: jnz 0x127ed
0x127da: mov rsi,rbp
0x127dd: mov edi,r12d
0x127e0: call 0x2c30
0x127e5: test rax,rax
0x127e8: mov rbx,rax
0x127eb: jnz 0x127b1
0x127ed: call 0x2770
0x127f2: mov ebp,dword ptr [rax]
0x127f4: mov rbx,rax
0x127f7: mov edi,r12d
0x127fa: call 0x2a30
0x127ff: mov dword ptr [rbx],ebp
0x12801: xor ebx,ebx
0x12803: jmp 0x127b1
0x12808: call 0x2770
0x1280d: mov r12d,dword ptr [rax]
0x12810: mov rbp,rax
0x12813: mov rdi,rbx
0x12816: call 0x12490
0x1281b: xor ebx,ebx
0x1281d: mov dword ptr [rbp],r12d
0x12821: jmp 0x127b1
0x12830: push r15
0x12832: push r14
0x12834: mov r15,rdx
0x12837: push r13
0x12839: push r12
0x1283b: lea r12,[rip+0x206cee]
0x12842: push rbp
0x12843: lea rbp,[rip+0x206cee]
0x1284a: push rbx
0x1284b: mov r13d,edi
0x1284e: mov r14,rsi
0x12851: sub rbp,r12
0x12854: sub rsp,0x8
0x12858: sar rbp,0x3
0x1285c: call 0x2710
0x12861: test rbp,rbp
0x12864: jz 0x12886
0x12866: xor ebx,ebx
0x12868: nop dword ptr [rax + rax*0x1]
0x12870: mov rdx,r15
0x12873: mov rsi,r14
0x12876: mov edi,r13d
0x12879: call qword ptr [r12 + rbx*0x8]
0x1287d: add rbx,0x1
0x12881: cmp rbp,rbx
0x12884: jnz 0x12870
0x12886: add rsp,0x8
0x1288a: pop rbx
0x1288b: pop rbp
0x1288c: pop r12
0x1288e: pop r13
0x12890: pop r14
0x12892: pop r15
0x12894: ret 
0x128a0: ret 
0x128c0: sub rsp,0x8
0x128c4: add rsp,0x8
0x128c8: ret 
