0x1240: sub rsp,0x8
0x1244: mov rax,qword ptr [rip+0x205d9d]
0x124b: test rax,rax
0x124e: jz 0x1252
0x1250: call rax
0x1252: add rsp,0x8
0x1256: ret 
0x1260: push qword ptr [rip+0x205c0a]
0x1266: jmp qword ptr [rip+0x205c0c]
0x1276: push 0x0
0x127b: jmp 0x1260
0x1286: push 0x1
0x128b: jmp 0x1260
0x1296: push 0x2
0x129b: jmp 0x1260
0x12a6: push 0x3
0x12ab: jmp 0x1260
0x12b0: jmp qword ptr [rip+0x205bea]
0x12b6: push 0x4
0x12bb: jmp 0x1260
0x12c0: jmp qword ptr [rip+0x205be2]
0x12c6: push 0x5
0x12cb: jmp 0x1260
0x12d6: push 0x6
0x12db: jmp 0x1260
0x12e6: push 0x7
0x12eb: jmp 0x1260
0x12f0: jmp qword ptr [rip+0x205bca]
0x12f6: push 0x8
0x12fb: jmp 0x1260
0x1306: push 0x9
0x130b: jmp 0x1260
0x1316: push 0xa
0x131b: jmp 0x1260
0x1326: push 0xb
0x132b: jmp 0x1260
0x1336: push 0xc
0x133b: jmp 0x1260
0x1346: push 0xd
0x134b: jmp 0x1260
0x1350: jmp qword ptr [rip+0x205b9a]
0x1356: push 0xe
0x135b: jmp 0x1260
0x1366: push 0xf
0x136b: jmp 0x1260
0x1376: push 0x10
0x137b: jmp 0x1260
0x1386: push 0x11
0x138b: jmp 0x1260
0x1396: push 0x12
0x139b: jmp 0x1260
0x13a0: jmp qword ptr [rip+0x205b72]
0x13a6: push 0x13
0x13ab: jmp 0x1260
0x13b6: push 0x14
0x13bb: jmp 0x1260
0x13c6: push 0x15
0x13cb: jmp 0x1260
0x13d6: push 0x16
0x13db: jmp 0x1260
0x13e6: push 0x17
0x13eb: jmp 0x1260
0x13f0: jmp qword ptr [rip+0x205b4a]
0x13f6: push 0x18
0x13fb: jmp 0x1260
0x1400: jmp qword ptr [rip+0x205b42]
0x1406: push 0x19
0x140b: jmp 0x1260
0x1410: jmp qword ptr [rip+0x205b3a]
0x1416: push 0x1a
0x141b: jmp 0x1260
0x1426: push 0x1b
0x142b: jmp 0x1260
0x1430: jmp qword ptr [rip+0x205b2a]
0x1436: push 0x1c
0x143b: jmp 0x1260
0x1446: push 0x1d
0x144b: jmp 0x1260
0x1450: jmp qword ptr [rip+0x205b1a]
0x1456: push 0x1e
0x145b: jmp 0x1260
0x1466: push 0x1f
0x146b: jmp 0x1260
0x1476: push 0x20
0x147b: jmp 0x1260
0x1486: push 0x21
0x148b: jmp 0x1260
0x1496: push 0x22
0x149b: jmp 0x1260
0x14a0: jmp qword ptr [rip+0x205af2]
0x14a6: push 0x23
0x14ab: jmp 0x1260
0x14b6: push 0x24
0x14bb: jmp 0x1260
0x14c6: push 0x25
0x14cb: jmp 0x1260
0x14d6: push 0x26
0x14db: jmp 0x1260
0x14e6: push 0x27
0x14eb: jmp 0x1260
0x14f6: push 0x28
0x14fb: jmp 0x1260
0x1506: push 0x29
0x150b: jmp 0x1260
0x1516: push 0x2a
0x151b: jmp 0x1260
0x1520: jmp qword ptr [rip+0x205ad2]
0x16eb: xor r8d,r8d
0x16ee: nop 
0x18a4: xor r8d,r8d
0x18a7: jmp 0x16f0
0x18e0: xor r8d,r8d
0x18e3: jmp 0x16f0
0x18f2: cmp eax,0x2
0x18f5: jz 0x1a0b
0x18fb: mov rdx,qword ptr [rsp + 0x8]
0x1900: mov esi,0x3
0x1905: xor edi,edi
0x1907: mov byte ptr [rbp],0x0
0x190b: movzx r13d,byte ptr [rsp + 0x20]
0x1911: movzx r12d,byte ptr [rsp + 0x28]
0x1917: call 0x3c60
0x191c: mov esi,dword ptr [rbx]
0x191e: lea rdx,[rip+0x3653]
0x1925: mov rcx,rax
0x1928: xor edi,edi
0x192a: xor eax,eax
0x192c: call 0x1490
0x1931: mov byte ptr [rbp],r15b
0x1935: xor r8d,r8d
0x1938: jmp 0x16f0
0x1a03: xor r8d,r8d
0x1a06: jmp 0x16f0
0x1a0b: mov r12,r13
0x1a0e: jmp 0x1825
0x1ab8: xor edx,edx
0x1aba: jmp 0x17a2
0x1b05: xor r8d,r8d
0x1b08: jmp 0x16f0
0x1b16: lea rsi,[rip+0x339b]
0x1b1d: mov edx,0x5
0x1b22: xor edi,edi
0x1b24: call 0x1310
0x1b29: mov esi,dword ptr [rbx]
0x1b2b: mov rdx,rax
0x1b2e: mov rcx,r15
0x1b31: xor edi,edi
0x1b33: xor eax,eax
0x1b35: call 0x1490
0x1b3a: movzx r8d,byte ptr [rsp + 0x8]
0x1b40: jmp 0x16f0
0x1b9d: mov r10,qword ptr [rsp + 0x8]
0x1ba2: xor r8d,r8d
0x1ba5: mov byte ptr [r10],r15b
0x1ba8: jmp 0x16f0
0x1be6: call 0x1350
0x1beb: nop dword ptr [rax + rax*0x1]
0x1c1a: hlt 
0x1c20: lea rdi,[rip+0x205459]
0x1c27: push rbp
0x1c28: lea rax,[rip+0x205451]
0x1c2f: cmp rax,rdi
0x1c32: mov rbp,rsp
0x1c35: jz 0x1c50
0x1c37: mov rax,qword ptr [rip+0x20539a]
0x1c3e: test rax,rax
0x1c41: jz 0x1c50
0x1c43: pop rbp
0x1c44: jmp rax
0x1c50: pop rbp
0x1c51: ret 
0x1c60: lea rdi,[rip+0x205419]
0x1c67: lea rsi,[rip+0x205412]
0x1c6e: push rbp
0x1c6f: sub rsi,rdi
0x1c72: mov rbp,rsp
0x1c75: sar rsi,0x3
0x1c79: mov rax,rsi
0x1c7c: shr rax,0x3f
0x1c80: add rsi,rax
0x1c83: sar rsi,1
0x1c86: jz 0x1ca0
0x1c88: mov rax,qword ptr [rip+0x205361]
0x1c8f: test rax,rax
0x1c92: jz 0x1ca0
0x1c94: pop rbp
0x1c95: jmp rax
0x1ca0: pop rbp
0x1ca1: ret 
0x1cb0: cmp byte ptr [rip+0x2053f1],0x0
0x1cb7: jnz 0x1ce8
0x1cb9: cmp qword ptr [rip+0x205337],0x0
0x1cc1: push rbp
0x1cc2: mov rbp,rsp
0x1cc5: jz 0x1cd3
0x1cc7: mov rdi,qword ptr [rip+0x20533a]
0x1cce: call 0x1520
0x1cd3: call 0x1c20
0x1cd8: mov byte ptr [rip+0x2053c9],0x1
0x1cdf: pop rbp
0x1ce0: ret 
0x1ce8: ret 
0x1cf0: push rbp
0x1cf1: mov rbp,rsp
0x1cf4: pop rbp
0x1cf5: jmp 0x1c60
0x2050: mov qword ptr [rip+0x205061],rdi
0x2057: ret 
0x2060: mov byte ptr [rip+0x205049],dil
0x2067: ret 
0x2070: push rbp
0x2071: push rbx
0x2072: sub rsp,0x8
0x2076: mov rdi,qword ptr [rip+0x20500b]
0x207d: call 0x47b0
0x2082: test eax,eax
0x2084: jz 0x209c
0x2086: call 0x1290
0x208b: cmp byte ptr [rip+0x20501e],0x0
0x2092: mov rbx,rax
0x2095: jz 0x20b3
0x2097: cmp dword ptr [rax],0x20
0x209a: jnz 0x20b3
0x209c: mov rdi,qword ptr [rip+0x204ffd]
0x20a3: call 0x47b0
0x20a8: test eax,eax
0x20aa: jnz 0x20f2
0x20ac: add rsp,0x8
0x20b0: pop rbx
0x20b1: pop rbp
0x20b2: ret 
0x20b3: lea rsi,[rip+0x2eae]
0x20ba: xor edi,edi
0x20bc: mov edx,0x5
0x20c1: call 0x1310
0x20c6: mov rdi,qword ptr [rip+0x204feb]
0x20cd: mov rbp,rax
0x20d0: test rdi,rdi
0x20d3: jz 0x20fd
0x20d5: call 0x3c30
0x20da: mov esi,dword ptr [rbx]
0x20dc: lea rdx,[rip+0x2e91]
0x20e3: mov rcx,rax
0x20e6: mov r8,rbp
0x20e9: xor edi,edi
0x20eb: xor eax,eax
0x20ed: call 0x1490
0x20f2: mov edi,dword ptr [rip+0x204f20]
0x20f8: call 0x12b0
0x20fd: mov esi,dword ptr [rbx]
0x20ff: lea rdx,[rip+0x2e72]
0x2106: mov rcx,rax
0x2109: xor edi,edi
0x210b: xor eax,eax
0x210d: call 0x1490
0x2112: jmp 0x20f2
0x21bf: nop 
0x34a3: call 0x1350
0x34e4: nop 
0x34e6: nop word ptr cs:[rax + rax*0x1]
0x369b: nop dword ptr [rax + rax*0x1]
0x36a0: push r12
0x36a2: push rbp
0x36a3: push rbx
0x36a4: mov rbx,rdi
0x36a7: call 0x1290
0x36ac: mov r12d,dword ptr [rax]
0x36af: mov rbp,rax
0x36b2: lea rax,[rip+0x203b27]
0x36b9: test rbx,rbx
0x36bc: mov esi,0x38
0x36c1: cmovz rbx,rax
0x36c5: mov rdi,rbx
0x36c8: call 0x4670
0x36cd: mov dword ptr [rbp],r12d
0x36d1: pop rbx
0x36d2: pop rbp
0x36d3: pop r12
0x36d5: ret 
0x36e0: lea rax,[rip+0x203af9]
0x36e7: test rdi,rdi
0x36ea: cmovz rdi,rax
0x36ee: mov eax,dword ptr [rdi]
0x36f0: ret 
0x3700: lea rax,[rip+0x203ad9]
0x3707: test rdi,rdi
0x370a: cmovz rdi,rax
0x370e: mov dword ptr [rdi],esi
0x3710: ret 
0x3720: lea rax,[rip+0x203ab9]
0x3727: test rdi,rdi
0x372a: mov ecx,esi
0x372c: cmovz rdi,rax
0x3730: mov eax,esi
0x3732: and ecx,0x1f
0x3735: shr al,0x5
0x3738: movzx eax,al
0x373b: lea rdi,[rdi + rax*0x4 + 0x8]
0x3740: mov esi,dword ptr [rdi]
0x3742: mov eax,esi
0x3744: shr eax,cl
0x3746: xor edx,eax
0x3748: and eax,0x1
0x374b: and edx,0x1
0x374e: shl edx,cl
0x3750: xor edx,esi
0x3752: mov dword ptr [rdi],edx
0x3754: ret 
0x3760: lea rax,[rip+0x203a79]
0x3767: test rdi,rdi
0x376a: cmovz rdi,rax
0x376e: mov eax,dword ptr [rdi + 0x4]
0x3771: mov dword ptr [rdi + 0x4],esi
0x3774: ret 
0x3780: lea rax,[rip+0x203a59]
0x3787: test rdi,rdi
0x378a: cmovz rdi,rax
0x378e: test rsi,rsi
0x3791: mov dword ptr [rdi],0xa
0x3797: jz 0x37a7
0x3799: test rdx,rdx
0x379c: jz 0x37a7
0x379e: mov qword ptr [rdi + 0x28],rsi
0x37a2: mov qword ptr [rdi + 0x30],rdx
0x37a6: ret 
0x37a7: sub rsp,0x8
0x37ab: call 0x1280
0x37b0: push r15
0x37b2: push r14
0x37b4: lea rax,[rip+0x203a25]
0x37bb: push r13
0x37bd: push r12
0x37bf: mov r13,rdi
0x37c2: push rbp
0x37c3: push rbx
0x37c4: mov rbx,r8
0x37c7: mov r14,rsi
0x37ca: mov r15,rdx
0x37cd: sub rsp,0x18
0x37d1: test r8,r8
0x37d4: cmovz rbx,rax
0x37d8: mov qword ptr [rsp + 0x8],rcx
0x37dd: call 0x1290
0x37e2: mov r12d,dword ptr [rax]
0x37e5: mov rbp,rax
0x37e8: lea rax,[rbx + 0x8]
0x37ec: sub rsp,0x8
0x37f0: mov r9d,dword ptr [rbx + 0x4]
0x37f4: push qword ptr [rbx + 0x30]
0x37f7: mov r8d,dword ptr [rbx]
0x37fa: push qword ptr [rbx + 0x28]
0x37fd: mov rdx,r15
0x3800: push rax
0x3801: mov rcx,qword ptr [rsp + 0x28]
0x3806: mov rsi,r14
0x3809: mov rdi,r13
0x380c: call 0x22b0
0x3811: mov dword ptr [rbp],r12d
0x3815: add rsp,0x38
0x3819: pop rbx
0x381a: pop rbp
0x381b: pop r12
0x381d: pop r13
0x381f: pop r14
0x3821: pop r15
0x3823: ret 
0x3830: push r15
0x3832: push r14
0x3834: lea rax,[rip+0x2039a5]
0x383b: push r13
0x383d: push r12
0x383f: mov r12,rdx
0x3842: push rbp
0x3843: push rbx
0x3844: mov rbx,rcx
0x3847: mov r14,rdi
0x384a: mov r15,rsi
0x384d: sub rsp,0x38
0x3851: test rcx,rcx
0x3854: cmovz rbx,rax
0x3858: xor ebp,ebp
0x385a: call 0x1290
0x385f: test r12,r12
0x3862: mov r13,rax
0x3865: mov eax,dword ptr [rax]
0x3867: setz bpl
0x386b: or ebp,dword ptr [rbx + 0x4]
0x386e: lea r10,[rbx + 0x8]
0x3872: sub rsp,0x8
0x3876: mov r8d,dword ptr [rbx]
0x3879: mov rcx,r15
0x387c: mov dword ptr [rsp + 0x14],eax
0x3880: push qword ptr [rbx + 0x30]
0x3883: mov rdx,r14
0x3886: push qword ptr [rbx + 0x28]
0x3889: push r10
0x388b: xor esi,esi
0x388d: mov r9d,ebp
0x3890: xor edi,edi
0x3892: mov qword ptr [rsp + 0x40],r10
0x3897: call 0x22b0
0x389c: lea rsi,[rax + 0x1]
0x38a0: mov qword ptr [rsp + 0x48],rax
0x38a5: add rsp,0x20
0x38a9: mov rdi,rsi
0x38ac: mov qword ptr [rsp + 0x18],rsi
0x38b1: call 0x4470
0x38b6: mov qword ptr [rsp + 0x10],rax
0x38bb: sub rsp,0x8
0x38bf: push qword ptr [rbx + 0x30]
0x38c2: push qword ptr [rbx + 0x28]
0x38c5: mov r10,qword ptr [rsp + 0x38]
0x38ca: mov r9d,ebp
0x38cd: mov r8d,dword ptr [rbx]
0x38d0: mov rcx,r15
0x38d3: mov rdx,r14
0x38d6: mov rdi,rax
0x38d9: push r10
0x38db: mov rsi,qword ptr [rsp + 0x38]
0x38e0: call 0x22b0
0x38e5: mov eax,dword ptr [rsp + 0x2c]
0x38e9: add rsp,0x20
0x38ed: test r12,r12
0x38f0: mov dword ptr [r13],eax
0x38f4: jz 0x38ff
0x38f6: mov r11,qword ptr [rsp + 0x28]
0x38fb: mov qword ptr [r12],r11
0x38ff: mov rax,qword ptr [rsp + 0x10]
0x3904: add rsp,0x38
0x3908: pop rbx
0x3909: pop rbp
0x390a: pop r12
0x390c: pop r13
0x390e: pop r14
0x3910: pop r15
0x3912: ret 
0x3920: mov rcx,rdx
0x3923: xor edx,edx
0x3925: jmp 0x3830
0x3930: mov eax,dword ptr [rip+0x203722]
0x3936: push r12
0x3938: mov r12,qword ptr [rip+0x203721]
0x393f: push rbp
0x3940: push rbx
0x3941: cmp eax,0x1
0x3944: jle 0x3971
0x3946: sub eax,0x2
0x3949: lea rbx,[r12 + 0x18]
0x394e: shl rax,0x4
0x3952: lea rbp,[r12 + rax*0x1 + 0x28]
0x3957: nop word ptr [rax + rax*0x1]
0x3960: mov rdi,qword ptr [rbx]
0x3963: add rbx,0x10
0x3967: call 0x1270
0x396c: cmp rbx,rbp
0x396f: jnz 0x3960
0x3971: mov rdi,qword ptr [r12 + 0x8]
0x3976: lea rbx,[rip+0x203763]
0x397d: cmp rdi,rbx
0x3980: jz 0x3999
0x3982: call 0x1270
0x3987: mov qword ptr [rip+0x2036de],0x100
0x3992: mov qword ptr [rip+0x2036df],rbx
0x3999: lea rbx,[rip+0x2036d0]
0x39a0: cmp r12,rbx
0x39a3: jz 0x39b4
0x39a5: mov rdi,r12
0x39a8: call 0x1270
0x39ad: mov qword ptr [rip+0x2036ac],rbx
0x39b4: pop rbx
0x39b5: mov dword ptr [rip+0x203699],0x1
0x39bf: pop rbp
0x39c0: pop r12
0x39c2: ret 
0x39d0: lea rcx,[rip+0x203809]
0x39d7: mov rdx,-0x1
0x39de: jmp 0x34f0
0x39f0: lea rcx,[rip+0x2037e9]
0x39f7: jmp 0x34f0
0x3a00: lea rcx,[rip+0x2037d9]
0x3a07: mov rsi,rdi
0x3a0a: mov rdx,-0x1
0x3a11: xor edi,edi
0x3a13: jmp 0x34f0
0x3a20: lea rcx,[rip+0x2037b9]
0x3a27: mov rdx,rsi
0x3a2a: mov rsi,rdi
0x3a2d: xor edi,edi
0x3a2f: jmp 0x34f0
0x3ac4: call 0x1280
0x3ac9: call 0x1350
0x3ace: nop 
0x3b50: call 0x1280
0x3b55: call 0x1350
0x3b5a: nop word ptr [rax + rax*0x1]
0x3b70: mov rcx,rdx
0x3b73: mov rdx,rsi
0x3b76: mov esi,edi
0x3b78: xor edi,edi
0x3b7a: jmp 0x3ad0
0x3b80: sub rsp,0x48
0x3b84: mov ecx,edx
0x3b86: mov rax,qword ptr fs:[rip+0xffffffffffffc499]
0x3b8f: mov qword ptr [rsp + 0x38],rax
0x3b94: xor eax,eax
0x3b96: mov rax,qword ptr [rip+0x203673]
0x3b9d: mov r8,rsp
0x3ba0: and ecx,0x1f
0x3ba3: movdqa xmm0,[rip+0x203635]
0x3bab: mov qword ptr [rsp + 0x30],rax
0x3bb0: mov eax,edx
0x3bb2: movaps xmmword ptr [rsp],xmm0
0x3bb6: shr al,0x5
0x3bb9: movzx eax,al
0x3bbc: lea r9,[r8 + rax*0x4 + 0x8]
0x3bc1: movdqa xmm0,[rip+0x203627]
0x3bc9: movaps xmmword ptr [rsp + 0x10],xmm0
0x3bce: movdqa xmm0,[rip+0x20362a]
0x3bd6: movaps xmmword ptr [rsp + 0x20],xmm0
0x3bdb: mov edx,dword ptr [r9]
0x3bde: mov eax,edx
0x3be0: shr eax,cl
0x3be2: not eax
0x3be4: and eax,0x1
0x3be7: shl eax,cl
0x3be9: mov rcx,r8
0x3bec: xor eax,edx
0x3bee: mov rdx,rsi
0x3bf1: mov rsi,rdi
0x3bf4: mov dword ptr [r9],eax
0x3bf7: xor edi,edi
0x3bf9: call 0x34f0
0x3bfe: mov rsi,qword ptr [rsp + 0x38]
0x3c03: xor rsi,qword ptr fs:[rip+0xffffffffffffc41c]
0x3c0c: jnz 0x3c13
0x3c0e: add rsp,0x48
0x3c12: ret 
0x3c13: call 0x1350
0x3c18: nop dword ptr [rax + rax*0x1]
0x3c20: movsx edx,sil
0x3c24: mov rsi,-0x1
0x3c2b: jmp 0x3b80
0x3c30: mov edx,0x3a
0x3c35: mov rsi,-0x1
0x3c3c: jmp 0x3b80
0x3c50: mov edx,0x3a
0x3c55: jmp 0x3b80
0x3ce4: call 0x1280
0x3ce9: call 0x1350
0x3cee: nop 
0x3cf0: sub rsp,0x48
0x3cf4: mov r9,rcx
0x3cf7: mov rcx,qword ptr [rip+0x203512]
0x3cfe: movdqa xmm0,[rip+0x2034da]
0x3d06: mov rax,qword ptr fs:[rip+0xffffffffffffc319]
0x3d0f: mov qword ptr [rsp + 0x38],rax
0x3d14: xor eax,eax
0x3d16: movaps xmmword ptr [rsp],xmm0
0x3d1a: test rsi,rsi
0x3d1d: mov qword ptr [rsp + 0x30],rcx
0x3d22: mov dword ptr [rsp],0xa
0x3d29: movdqa xmm0,[rip+0x2034bf]
0x3d31: movaps xmmword ptr [rsp + 0x10],xmm0
0x3d36: movdqa xmm0,[rip+0x2034c2]
0x3d3e: movaps xmmword ptr [rsp + 0x20],xmm0
0x3d43: jz 0x3d77
0x3d45: test rdx,rdx
0x3d48: jz 0x3d77
0x3d4a: mov qword ptr [rsp + 0x28],rsi
0x3d4f: mov qword ptr [rsp + 0x30],rdx
0x3d54: mov rcx,rsp
0x3d57: mov rdx,r8
0x3d5a: mov rsi,r9
0x3d5d: call 0x34f0
0x3d62: mov rdi,qword ptr [rsp + 0x38]
0x3d67: xor rdi,qword ptr fs:[rip+0xffffffffffffc2b8]
0x3d70: jnz 0x3d7c
0x3d72: add rsp,0x48
0x3d76: ret 
0x3d77: call 0x1280
0x3d7c: call 0x1350
0x3d81: nop dword ptr [rax + rax*0x1]
0x3d86: nop word ptr cs:[rax + rax*0x1]
0x3d90: mov r8,-0x1
0x3d97: jmp 0x3cf0
0x3da0: mov rcx,rdx
0x3da3: mov r8,-0x1
0x3daa: mov rdx,rsi
0x3dad: mov rsi,rdi
0x3db0: xor edi,edi
0x3db2: jmp 0x3cf0
0x3dc0: mov r8,rcx
0x3dc3: mov rcx,rdx
0x3dc6: mov rdx,rsi
0x3dc9: mov rsi,rdi
0x3dcc: xor edi,edi
0x3dce: jmp 0x3cf0
0x3de0: lea rcx,[rip+0x203239]
0x3de7: jmp 0x34f0
0x3df0: lea rcx,[rip+0x203229]
0x3df7: mov rdx,rsi
0x3dfa: mov rsi,rdi
0x3dfd: xor edi,edi
0x3dff: jmp 0x34f0
0x3e10: lea rcx,[rip+0x203209]
0x3e17: mov rdx,-0x1
0x3e1e: jmp 0x34f0
0x3f88: mov r8,rcx
0x3f8b: mov rcx,rdx
0x3f8e: lea rdx,[rip+0x151f]
0x3f95: mov esi,0x1
0x3f9a: xor eax,eax
0x3f9c: call 0x14e0
0x3fa1: jmp 0x3e8c
0x4270: xor r9d,r9d
0x4273: cmp qword ptr [r8],0x0
0x4277: jz 0x428b
0x4279: nop dword ptr [rax]
0x4280: add r9,0x1
0x4284: cmp qword ptr [r8 + r9*0x8],0x0
0x4289: jnz 0x4280
0x428b: jmp 0x3e50
0x4290: sub rsp,0x68
0x4294: mov r10,r8
0x4297: xor r9d,r9d
0x429a: mov rax,qword ptr fs:[rip+0xffffffffffffbd85]
0x42a3: mov qword ptr [rsp + 0x58],rax
0x42a8: xor eax,eax
0x42aa: mov r8,rsp
0x42ad: nop dword ptr [rax]
0x42b0: mov eax,dword ptr [r10]
0x42b3: cmp eax,0x2f
0x42b6: ja 0x42fa
0x42b8: mov r11d,eax
0x42bb: add r11,qword ptr [r10 + 0x10]
0x42bf: add eax,0x8
0x42c2: mov dword ptr [r10],eax
0x42c5: mov rax,qword ptr [r11]
0x42c8: test rax,rax
0x42cb: mov qword ptr [r8 + r9*0x8],rax
0x42cf: jz 0x42db
0x42d1: add r9,0x1
0x42d5: cmp r9,0xa
0x42d9: jnz 0x42b0
0x42db: call 0x3e50
0x42e0: mov rax,qword ptr [rsp + 0x58]
0x42e5: xor rax,qword ptr fs:[rip+0xffffffffffffbd3a]
0x42ee: jnz 0x42f5
0x42f0: add rsp,0x68
0x42f4: ret 
0x42f5: call 0x1350
0x42fa: mov r11,qword ptr [r10 + 0x8]
0x42fe: lea rax,[r11 + 0x8]
0x4302: mov qword ptr [r10 + 0x8],rax
0x4306: jmp 0x42c5
0x43d0: call 0x1350
0x43dc: mov rax,rbx
0x43df: add rbx,0x8
0x43e3: jmp 0x4396
0x43f0: push rbx
0x43f1: lea rsi,[rip+0x110a]
0x43f8: mov edx,0x5
0x43fd: xor edi,edi
0x43ff: call 0x1310
0x4404: lea rdx,[rip+0x110c]
0x440b: mov rsi,rax
0x440e: mov edi,0x1
0x4413: xor eax,eax
0x4415: call 0x1480
0x441a: lea rsi,[rip+0x110c]
0x4421: mov edx,0x5
0x4426: xor edi,edi
0x4428: call 0x1310
0x442d: lea rcx,[rip+0x934]
0x4434: lea rdx,[rip+0x6e7]
0x443b: mov rsi,rax
0x443e: mov edi,0x1
0x4443: xor eax,eax
0x4445: call 0x1480
0x444a: mov rbx,qword ptr [rip+0x202c37]
0x4451: lea rsi,[rip+0x1308]
0x4458: xor edi,edi
0x445a: mov edx,0x5
0x445f: call 0x1310
0x4464: mov rsi,rbx
0x4467: mov rdi,rax
0x446a: pop rbx
0x446b: jmp 0x13e0
0x448a: nop word ptr [rax + rax*0x1]
0x4490: mov rax,rdi
0x4493: mul rsi
0x4496: mov rdi,rax
0x4499: seto al
0x449c: test rdi,rdi
0x449f: js 0x44ab
0x44a1: movzx eax,al
0x44a4: test rax,rax
0x44a7: jnz 0x44ab
0x44a9: jmp 0x4470
0x44ab: sub rsp,0x8
0x44af: call 0x46c0
0x44b4: nop 
0x44b6: nop word ptr cs:[rax + rax*0x1]
0x44c0: jmp 0x4470
0x4506: nop word ptr cs:[rax + rax*0x1]
0x4510: mov rax,rsi
0x4513: mul rdx
0x4516: mov rsi,rax
0x4519: seto al
0x451c: test rsi,rsi
0x451f: js 0x452b
0x4521: movzx eax,al
0x4524: test rax,rax
0x4527: jnz 0x452b
0x4529: jmp 0x44d0
0x452b: sub rsp,0x8
0x452f: call 0x46c0
0x4534: nop 
0x4536: nop word ptr cs:[rax + rax*0x1]
0x4540: test rdi,rdi
0x4543: mov r9,rdx
0x4546: mov rcx,qword ptr [rsi]
0x4549: jz 0x4580
0x454b: xor edx,edx
0x454d: mov rax,0x5555555555555554
0x4557: div r9
0x455a: cmp rax,rcx
0x455d: jbe 0x459b
0x455f: mov rax,rcx
0x4562: shr rax,1
0x4565: lea rcx,[rax + rcx*0x1 + 0x1]
0x456a: mov qword ptr [rsi],rcx
0x456d: imul rcx,r9
0x4571: mov rsi,rcx
0x4574: jmp 0x44d0
0x4580: test rcx,rcx
0x4583: jz 0x45a8
0x4585: mov rax,rcx
0x4588: mul r9
0x458b: seto dl
0x458e: test rax,rax
0x4591: movzx edx,dl
0x4594: js 0x459b
0x4596: test rdx,rdx
0x4599: jz 0x456a
0x459b: sub rsp,0x8
0x459f: call 0x46c0
0x45a4: nop dword ptr [rax]
0x45a8: xor edx,edx
0x45aa: mov eax,0x80
0x45af: xor r8d,r8d
0x45b2: div r9
0x45b5: test rax,rax
0x45b8: setz r8b
0x45bc: lea rcx,[r8 + rax*0x1]
0x45c0: jmp 0x4585
0x45d0: test rdi,rdi
0x45d3: mov rax,qword ptr [rsi]
0x45d6: jz 0x4600
0x45d8: mov rdx,0x5555555555555553
0x45e2: cmp rax,rdx
0x45e5: ja 0x4611
0x45e7: mov rdx,rax
0x45ea: shr rdx,1
0x45ed: lea rax,[rdx + rax*0x1 + 0x1]
0x45f2: mov qword ptr [rsi],rax
0x45f5: mov rsi,rax
0x45f8: jmp 0x44d0
0x4600: test rax,rax
0x4603: mov edx,0x80
0x4608: cmovz rax,rdx
0x460c: test rax,rax
0x460f: jns 0x45f2
0x4611: sub rsp,0x8
0x4615: call 0x46c0
0x461a: nop word ptr [rax + rax*0x1]
0x4620: push rbx
0x4621: mov rbx,rdi
0x4624: call 0x4470
0x4629: mov rdx,rbx
0x462c: xor esi,esi
0x462e: mov rdi,rax
0x4631: pop rbx
0x4632: jmp 0x13b0
0x4640: mov rax,rdi
0x4643: sub rsp,0x8
0x4647: mul rsi
0x464a: seto dl
0x464d: test rax,rax
0x4650: js 0x4669
0x4652: movzx edx,dl
0x4655: test rdx,rdx
0x4658: jnz 0x4669
0x465a: call 0x13f0
0x465f: test rax,rax
0x4662: jz 0x4669
0x4664: add rsp,0x8
0x4668: ret 
0x4669: call 0x46c0
0x466e: nop 
0x4670: push rbp
0x4671: push rbx
0x4672: mov rbp,rdi
0x4675: mov rdi,rsi
0x4678: mov rbx,rsi
0x467b: sub rsp,0x8
0x467f: call 0x4470
0x4684: add rsp,0x8
0x4688: mov rdx,rbx
0x468b: mov rsi,rbp
0x468e: pop rbx
0x468f: pop rbp
0x4690: mov rdi,rax
0x4693: jmp 0x1400
0x46a0: push rbx
0x46a1: mov rbx,rdi
0x46a4: call 0x1330
0x46a9: mov rdi,rbx
0x46ac: lea rsi,[rax + 0x1]
0x46b0: pop rbx
0x46b1: jmp 0x4670
0x46f0: call 0x1280
0x46f5: nop word ptr cs:[rax + rax*0x1]
0x46ff: nop 
0x479e: call 0x1350
0x47a3: nop word ptr cs:[rax + rax*0x1]
0x47ad: nop dword ptr [rax]
0x47b0: push r12
0x47b2: push rbp
0x47b3: mov rbp,rdi
0x47b6: push rbx
0x47b7: call 0x12c0
0x47bc: mov ebx,dword ptr [rbp]
0x47bf: mov rdi,rbp
0x47c2: mov r12,rax
0x47c5: call 0x48d0
0x47ca: and ebx,0x20
0x47cd: test ebx,ebx
0x47cf: jnz 0x47e8
0x47d1: test eax,eax
0x47d3: jz 0x47df
0x47d5: test r12,r12
0x47d8: mov eax,0xffffffff
0x47dd: jz 0x4818
0x47df: pop rbx
0x47e0: pop rbp
0x47e1: pop r12
0x47e3: ret 
0x47e8: test eax,eax
0x47ea: jnz 0x4808
0x47ec: call 0x1290
0x47f1: mov dword ptr [rax],0x0
0x47f7: mov eax,0xffffffff
0x47fc: pop rbx
0x47fd: pop rbp
0x47fe: pop r12
0x4800: ret 
0x4808: pop rbx
0x4809: mov eax,0xffffffff
0x480e: pop rbp
0x480f: pop r12
0x4811: ret 
0x4818: call 0x1290
0x481d: cmp dword ptr [rax],0x9
0x4820: pop rbx
0x4821: pop rbp
0x4822: pop r12
0x4824: setnz al
0x4827: movzx eax,al
0x482a: neg eax
0x482c: ret 
0x48d0: push r12
0x48d2: push rbp
0x48d3: push rbx
0x48d4: mov rbx,rdi
0x48d7: call 0x1410
0x48dc: test eax,eax
0x48de: mov rdi,rbx
0x48e1: js 0x4937
0x48e3: call 0x1450
0x48e8: test eax,eax
0x48ea: jnz 0x4918
0x48ec: mov rdi,rbx
0x48ef: call 0x4950
0x48f4: test eax,eax
0x48f6: jz 0x4934
0x48f8: call 0x1290
0x48fd: mov r12d,dword ptr [rax]
0x4900: mov rdi,rbx
0x4903: mov rbp,rax
0x4906: call 0x12f0
0x490b: test r12d,r12d
0x490e: jnz 0x4940
0x4910: pop rbx
0x4911: pop rbp
0x4912: pop r12
0x4914: ret 
0x4918: mov rdi,rbx
0x491b: call 0x1410
0x4920: xor esi,esi
0x4922: mov edx,0x1
0x4927: mov edi,eax
0x4929: call 0x13a0
0x492e: cmp rax,-0x1
0x4932: jnz 0x48ec
0x4934: mov rdi,rbx
0x4937: pop rbx
0x4938: pop rbp
0x4939: pop r12
0x493b: jmp 0x12f0
0x4940: mov dword ptr [rbp],r12d
0x4944: mov eax,0xffffffff
0x4949: jmp 0x4910
0x4950: test rdi,rdi
0x4953: push rbx
0x4954: mov rbx,rdi
0x4957: jz 0x496a
0x4959: call 0x1450
0x495e: test eax,eax
0x4960: jz 0x496a
0x4962: test dword ptr [rbx],0x100
0x4968: jnz 0x4978
0x496a: mov rdi,rbx
0x496d: pop rbx
0x496e: jmp 0x1430
0x4978: mov rdi,rbx
0x497b: mov edx,0x1
0x4980: xor esi,esi
0x4982: call 0x4990
0x4987: mov rdi,rbx
0x498a: pop rbx
0x498b: jmp 0x1430
0x4990: mov rax,qword ptr [rdi + 0x8]
0x4994: cmp qword ptr [rdi + 0x10],rax
0x4998: jz 0x49a0
0x499a: jmp 0x14a0
0x49a0: mov rax,qword ptr [rdi + 0x20]
0x49a4: cmp qword ptr [rdi + 0x28],rax
0x49a8: jnz 0x499a
0x49aa: cmp qword ptr [rdi + 0x48],0x0
0x49af: jnz 0x499a
0x49b1: push r12
0x49b3: push rbp
0x49b4: mov r12d,edx
0x49b7: push rbx
0x49b8: mov rbp,rsi
0x49bb: mov rbx,rdi
0x49be: call 0x1410
0x49c3: mov edx,r12d
0x49c6: mov rsi,rbp
0x49c9: mov edi,eax
0x49cb: call 0x13a0
0x49d0: cmp rax,-0x1
0x49d4: jz 0x49e2
0x49d6: and dword ptr [rbx],0xffffffef
0x49d9: mov qword ptr [0x90 + rbx],rax
0x49e0: xor eax,eax
0x49e2: pop rbx
0x49e3: pop rbp
0x49e4: pop r12
0x49e6: ret 
0x49f0: push r15
0x49f2: push r14
0x49f4: mov r15,rdx
0x49f7: push r13
0x49f9: push r12
0x49fb: lea r12,[rip+0x20218e]
0x4a02: push rbp
0x4a03: lea rbp,[rip+0x20218e]
0x4a0a: push rbx
0x4a0b: mov r13d,edi
0x4a0e: mov r14,rsi
0x4a11: sub rbp,r12
0x4a14: sub rsp,0x8
0x4a18: sar rbp,0x3
0x4a1c: call 0x1240
0x4a21: test rbp,rbp
0x4a24: jz 0x4a46
0x4a26: xor ebx,ebx
0x4a28: nop dword ptr [rax + rax*0x1]
0x4a30: mov rdx,r15
0x4a33: mov rsi,r14
0x4a36: mov edi,r13d
0x4a39: call qword ptr [r12 + rbx*0x8]
0x4a3d: add rbx,0x1
0x4a41: cmp rbp,rbx
0x4a44: jnz 0x4a30
0x4a46: add rsp,0x8
0x4a4a: pop rbx
0x4a4b: pop rbp
0x4a4c: pop r12
0x4a4e: pop r13
0x4a50: pop r14
0x4a52: pop r15
0x4a54: ret 
0x4a60: ret 
0x4a80: sub rsp,0x8
0x4a84: add rsp,0x8
0x4a88: ret 
