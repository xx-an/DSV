0x23e0: sub rsp,0x8
0x23e4: mov rax,qword ptr [rip+0x20ebfd]
0x23eb: test rax,rax
0x23ee: jz 0x23f2
0x23f0: call rax
0x23f2: add rsp,0x8
0x23f6: ret 
0x2400: push qword ptr [rip+0x20e9ea]
0x2406: jmp qword ptr [rip+0x20e9ec]
0x2416: push 0x0
0x241b: jmp 0x2400
0x2426: push 0x1
0x242b: jmp 0x2400
0x2436: push 0x2
0x243b: jmp 0x2400
0x2446: push 0x3
0x244b: jmp 0x2400
0x2456: push 0x4
0x245b: jmp 0x2400
0x2466: push 0x5
0x246b: jmp 0x2400
0x2470: jmp qword ptr [rip+0x20e9ba]
0x2476: push 0x6
0x247b: jmp 0x2400
0x2480: jmp qword ptr [rip+0x20e9b2]
0x2486: push 0x7
0x248b: jmp 0x2400
0x2496: push 0x8
0x249b: jmp 0x2400
0x24a6: push 0x9
0x24ab: jmp 0x2400
0x24b6: push 0xa
0x24bb: jmp 0x2400
0x24c0: jmp qword ptr [rip+0x20e992]
0x24c6: push 0xb
0x24cb: jmp 0x2400
0x24d6: push 0xc
0x24db: jmp 0x2400
0x24e6: push 0xd
0x24eb: jmp 0x2400
0x24f6: push 0xe
0x24fb: jmp 0x2400
0x2506: push 0xf
0x250b: jmp 0x2400
0x2516: push 0x10
0x251b: jmp 0x2400
0x2520: jmp qword ptr [rip+0x20e962]
0x2526: push 0x11
0x252b: jmp 0x2400
0x2536: push 0x12
0x253b: jmp 0x2400
0x2546: push 0x13
0x254b: jmp 0x2400
0x2556: push 0x14
0x255b: jmp 0x2400
0x2566: push 0x15
0x256b: jmp 0x2400
0x2576: push 0x16
0x257b: jmp 0x2400
0x2586: push 0x17
0x258b: jmp 0x2400
0x2590: jmp qword ptr [rip+0x20e92a]
0x2596: push 0x18
0x259b: jmp 0x2400
0x25a6: push 0x19
0x25ab: jmp 0x2400
0x25b6: push 0x1a
0x25bb: jmp 0x2400
0x25c6: push 0x1b
0x25cb: jmp 0x2400
0x25d6: push 0x1c
0x25db: jmp 0x2400
0x25e6: push 0x1d
0x25eb: jmp 0x2400
0x25f6: push 0x1e
0x25fb: jmp 0x2400
0x2606: push 0x1f
0x260b: jmp 0x2400
0x2610: jmp qword ptr [rip+0x20e8ea]
0x2616: push 0x20
0x261b: jmp 0x2400
0x2626: push 0x21
0x262b: jmp 0x2400
0x2636: push 0x22
0x263b: jmp 0x2400
0x2646: push 0x23
0x264b: jmp 0x2400
0x2650: jmp qword ptr [rip+0x20e8ca]
0x2656: push 0x24
0x265b: jmp 0x2400
0x2666: push 0x25
0x266b: jmp 0x2400
0x2670: jmp qword ptr [rip+0x20e8ba]
0x2676: push 0x26
0x267b: jmp 0x2400
0x2686: push 0x27
0x268b: jmp 0x2400
0x2690: jmp qword ptr [rip+0x20e8aa]
0x2696: push 0x28
0x269b: jmp 0x2400
0x26a6: push 0x29
0x26ab: jmp 0x2400
0x26b6: push 0x2a
0x26bb: jmp 0x2400
0x26c6: push 0x2b
0x26cb: jmp 0x2400
0x26d6: push 0x2c
0x26db: jmp 0x2400
0x26e6: push 0x2d
0x26eb: jmp 0x2400
0x26f6: push 0x2e
0x26fb: jmp 0x2400
0x2706: push 0x2f
0x270b: jmp 0x2400
0x2716: push 0x30
0x271b: jmp 0x2400
0x2720: jmp qword ptr [rip+0x20e862]
0x2726: push 0x31
0x272b: jmp 0x2400
0x2736: push 0x32
0x273b: jmp 0x2400
0x2746: push 0x33
0x274b: jmp 0x2400
0x2756: push 0x34
0x275b: jmp 0x2400
0x2766: push 0x35
0x276b: jmp 0x2400
0x2776: push 0x36
0x277b: jmp 0x2400
0x2786: push 0x37
0x278b: jmp 0x2400
0x2796: push 0x38
0x279b: jmp 0x2400
0x27a6: push 0x39
0x27ab: jmp 0x2400
0x27b6: push 0x3a
0x27bb: jmp 0x2400
0x27c0: jmp qword ptr [rip+0x20e832]
0x3002: mov rdi,qword ptr [rip+0x20e09f]
0x3009: mov rax,qword ptr [rdi + 0x28]
0x300d: cmp rax,qword ptr [rdi + 0x30]
0x3011: jnc 0x3219
0x3017: lea rdx,[rax + 0x1]
0x301b: mov qword ptr [rdi + 0x28],rdx
0x301f: mov byte ptr [rax],0xa
0x3136: jmp 0x307b
0x3164: jmp 0x2d01
0x3173: jmp 0x2f5e
0x3182: jmp 0x2aee
0x3191: jmp 0x2eeb
0x31a0: jmp 0x2be4
0x31c4: call 0x2520
0x3219: mov esi,0xa
0x321e: call 0x2570
0x3223: jmp 0x3022
0x3232: jmp 0x2c9a
0x3348: nop dword ptr [rax + rax*0x1]
0x337a: hlt 
0x3380: lea rdi,[rip+0x20dd19]
0x3387: push rbp
0x3388: lea rax,[rip+0x20dd11]
0x338f: cmp rax,rdi
0x3392: mov rbp,rsp
0x3395: jz 0x33b0
0x3397: mov rax,qword ptr [rip+0x20dc3a]
0x339e: test rax,rax
0x33a1: jz 0x33b0
0x33a3: pop rbp
0x33a4: jmp rax
0x33b0: pop rbp
0x33b1: ret 
0x33c0: lea rdi,[rip+0x20dcd9]
0x33c7: lea rsi,[rip+0x20dcd2]
0x33ce: push rbp
0x33cf: sub rsi,rdi
0x33d2: mov rbp,rsp
0x33d5: sar rsi,0x3
0x33d9: mov rax,rsi
0x33dc: shr rax,0x3f
0x33e0: add rsi,rax
0x33e3: sar rsi,1
0x33e6: jz 0x3400
0x33e8: mov rax,qword ptr [rip+0x20dc01]
0x33ef: test rax,rax
0x33f2: jz 0x3400
0x33f4: pop rbp
0x33f5: jmp rax
0x3400: pop rbp
0x3401: ret 
0x3410: cmp byte ptr [rip+0x20dcf1],0x0
0x3417: jnz 0x3448
0x3419: cmp qword ptr [rip+0x20dbd7],0x0
0x3421: push rbp
0x3422: mov rbp,rsp
0x3425: jz 0x3433
0x3427: mov rdi,qword ptr [rip+0x20dbda]
0x342e: call 0x27c0
0x3433: call 0x3380
0x3438: mov byte ptr [rip+0x20dcc9],0x1
0x343f: pop rbp
0x3440: ret 
0x3448: ret 
0x3450: push rbp
0x3451: mov rbp,rsp
0x3454: pop rbp
0x3455: jmp 0x33c0
0x351c: nop dword ptr [rax]
0x368a: mov eax,dword ptr [rip+0x20db6c]
0x3690: jmp 0x3668
0x36a2: jmp 0x360e
0x36ac: call 0x2520
0x36b1: nop dword ptr [rax + rax*0x1]
0x36b6: nop word ptr cs:[rax + rax*0x1]
0x3a24: call 0x2520
0x3a29: nop dword ptr [rax]
0x3aeb: call 0x2520
0x3b1f: nop 
0x3be3: call 0x2520
0x3c21: nop dword ptr [rax + rax*0x1]
0x3c26: nop word ptr cs:[rax + rax*0x1]
0x3c5f: lea rsi,[rip+0x7d2a]
0x3c66: xor edi,edi
0x3c68: call 0x24f0
0x3c6d: mov rdi,qword ptr [rip+0x20d48c]
0x3c74: mov rdx,rax
0x3c77: mov rcx,rbx
0x3c7a: mov esi,0x1
0x3c7f: xor eax,eax
0x3c81: call 0x2780
0x565b: call 0x2520
0x5940: mov qword ptr [rip+0x20b8c9],rdi
0x5947: ret 
0x5950: mov byte ptr [rip+0x20b8b1],dil
0x5957: ret 
0x5960: push rbp
0x5961: push rbx
0x5962: sub rsp,0x8
0x5966: mov rdi,qword ptr [rip+0x20b73b]
0x596d: call 0x8ff0
0x5972: test eax,eax
0x5974: jz 0x598c
0x5976: call 0x2450
0x597b: cmp byte ptr [rip+0x20b886],0x0
0x5982: mov rbx,rax
0x5985: jz 0x59a3
0x5987: cmp dword ptr [rax],0x20
0x598a: jnz 0x59a3
0x598c: mov rdi,qword ptr [rip+0x20b76d]
0x5993: call 0x8ff0
0x5998: test eax,eax
0x599a: jnz 0x59e2
0x599c: add rsp,0x8
0x59a0: pop rbx
0x59a1: pop rbp
0x59a2: ret 
0x59a3: lea rsi,[rip+0x8112]
0x59aa: xor edi,edi
0x59ac: mov edx,0x5
0x59b1: call 0x24f0
0x59b6: mov rdi,qword ptr [rip+0x20b853]
0x59bd: mov rbp,rax
0x59c0: test rdi,rdi
0x59c3: jz 0x59ed
0x59c5: call 0x7580
0x59ca: mov esi,dword ptr [rbx]
0x59cc: lea rdx,[rip+0x80f5]
0x59d3: mov rcx,rax
0x59d6: mov r8,rbp
0x59d9: xor edi,edi
0x59db: xor eax,eax
0x59dd: call 0x26e0
0x59e2: mov edi,dword ptr [rip+0x20b638]
0x59e8: call 0x2470
0x59ed: mov esi,dword ptr [rbx]
0x59ef: lea rdx,[rip+0x80d6]
0x59f6: mov rcx,rax
0x59f9: xor edi,edi
0x59fb: xor eax,eax
0x59fd: call 0x26e0
0x5b0f: nop 
0x6df3: call 0x2520
0x6e34: nop 
0x6e36: nop word ptr cs:[rax + rax*0x1]
0x6fe1: call 0x2440
0x6fe6: call 0x8010
0x6feb: nop dword ptr [rax + rax*0x1]
0x6ff0: push r12
0x6ff2: push rbp
0x6ff3: push rbx
0x6ff4: mov rbx,rdi
0x6ff7: call 0x2450
0x6ffc: mov r12d,dword ptr [rax]
0x6fff: mov rbp,rax
0x7002: lea rax,[rip+0x20a317]
0x7009: test rbx,rbx
0x700c: mov esi,0x38
0x7011: cmovz rbx,rax
0x7015: mov rdi,rbx
0x7018: call 0x7fc0
0x701d: mov dword ptr [rbp],r12d
0x7021: pop rbx
0x7022: pop rbp
0x7023: pop r12
0x7025: ret 
0x7030: lea rax,[rip+0x20a2e9]
0x7037: test rdi,rdi
0x703a: cmovz rdi,rax
0x703e: mov eax,dword ptr [rdi]
0x7040: ret 
0x7050: lea rax,[rip+0x20a2c9]
0x7057: test rdi,rdi
0x705a: cmovz rdi,rax
0x705e: mov dword ptr [rdi],esi
0x7060: ret 
0x7070: lea rax,[rip+0x20a2a9]
0x7077: test rdi,rdi
0x707a: mov ecx,esi
0x707c: cmovz rdi,rax
0x7080: mov eax,esi
0x7082: and ecx,0x1f
0x7085: shr al,0x5
0x7088: movzx eax,al
0x708b: lea rdi,[rdi + rax*0x4 + 0x8]
0x7090: mov esi,dword ptr [rdi]
0x7092: mov eax,esi
0x7094: shr eax,cl
0x7096: xor edx,eax
0x7098: and eax,0x1
0x709b: and edx,0x1
0x709e: shl edx,cl
0x70a0: xor edx,esi
0x70a2: mov dword ptr [rdi],edx
0x70a4: ret 
0x70b0: lea rax,[rip+0x20a269]
0x70b7: test rdi,rdi
0x70ba: cmovz rdi,rax
0x70be: mov eax,dword ptr [rdi + 0x4]
0x70c1: mov dword ptr [rdi + 0x4],esi
0x70c4: ret 
0x70d0: lea rax,[rip+0x20a249]
0x70d7: test rdi,rdi
0x70da: cmovz rdi,rax
0x70de: test rsi,rsi
0x70e1: mov dword ptr [rdi],0xa
0x70e7: jz 0x70f7
0x70e9: test rdx,rdx
0x70ec: jz 0x70f7
0x70ee: mov qword ptr [rdi + 0x28],rsi
0x70f2: mov qword ptr [rdi + 0x30],rdx
0x70f6: ret 
0x70f7: sub rsp,0x8
0x70fb: call 0x2440
0x7100: push r15
0x7102: push r14
0x7104: lea rax,[rip+0x20a215]
0x710b: push r13
0x710d: push r12
0x710f: mov r13,rdi
0x7112: push rbp
0x7113: push rbx
0x7114: mov rbx,r8
0x7117: mov r14,rsi
0x711a: mov r15,rdx
0x711d: sub rsp,0x18
0x7121: test r8,r8
0x7124: cmovz rbx,rax
0x7128: mov qword ptr [rsp + 0x8],rcx
0x712d: call 0x2450
0x7132: mov r12d,dword ptr [rax]
0x7135: mov rbp,rax
0x7138: lea rax,[rbx + 0x8]
0x713c: sub rsp,0x8
0x7140: mov r9d,dword ptr [rbx + 0x4]
0x7144: push qword ptr [rbx + 0x30]
0x7147: mov r8d,dword ptr [rbx]
0x714a: push qword ptr [rbx + 0x28]
0x714d: mov rdx,r15
0x7150: push rax
0x7151: mov rcx,qword ptr [rsp + 0x28]
0x7156: mov rsi,r14
0x7159: mov rdi,r13
0x715c: call 0x5c00
0x7161: mov dword ptr [rbp],r12d
0x7165: add rsp,0x38
0x7169: pop rbx
0x716a: pop rbp
0x716b: pop r12
0x716d: pop r13
0x716f: pop r14
0x7171: pop r15
0x7173: ret 
0x7180: push r15
0x7182: push r14
0x7184: lea rax,[rip+0x20a195]
0x718b: push r13
0x718d: push r12
0x718f: mov r12,rdx
0x7192: push rbp
0x7193: push rbx
0x7194: mov rbx,rcx
0x7197: mov r14,rdi
0x719a: mov r15,rsi
0x719d: sub rsp,0x38
0x71a1: test rcx,rcx
0x71a4: cmovz rbx,rax
0x71a8: xor ebp,ebp
0x71aa: call 0x2450
0x71af: test r12,r12
0x71b2: mov r13,rax
0x71b5: mov eax,dword ptr [rax]
0x71b7: setz bpl
0x71bb: or ebp,dword ptr [rbx + 0x4]
0x71be: lea r10,[rbx + 0x8]
0x71c2: sub rsp,0x8
0x71c6: mov r8d,dword ptr [rbx]
0x71c9: mov rcx,r15
0x71cc: mov dword ptr [rsp + 0x14],eax
0x71d0: push qword ptr [rbx + 0x30]
0x71d3: mov rdx,r14
0x71d6: push qword ptr [rbx + 0x28]
0x71d9: push r10
0x71db: xor esi,esi
0x71dd: mov r9d,ebp
0x71e0: xor edi,edi
0x71e2: mov qword ptr [rsp + 0x40],r10
0x71e7: call 0x5c00
0x71ec: lea rsi,[rax + 0x1]
0x71f0: mov qword ptr [rsp + 0x48],rax
0x71f5: add rsp,0x20
0x71f9: mov rdi,rsi
0x71fc: mov qword ptr [rsp + 0x18],rsi
0x7201: call 0x7dc0
0x7206: mov qword ptr [rsp + 0x10],rax
0x720b: sub rsp,0x8
0x720f: push qword ptr [rbx + 0x30]
0x7212: push qword ptr [rbx + 0x28]
0x7215: mov r10,qword ptr [rsp + 0x38]
0x721a: mov r9d,ebp
0x721d: mov r8d,dword ptr [rbx]
0x7220: mov rcx,r15
0x7223: mov rdx,r14
0x7226: mov rdi,rax
0x7229: push r10
0x722b: mov rsi,qword ptr [rsp + 0x38]
0x7230: call 0x5c00
0x7235: mov eax,dword ptr [rsp + 0x2c]
0x7239: add rsp,0x20
0x723d: test r12,r12
0x7240: mov dword ptr [r13],eax
0x7244: jz 0x724f
0x7246: mov r11,qword ptr [rsp + 0x28]
0x724b: mov qword ptr [r12],r11
0x724f: mov rax,qword ptr [rsp + 0x10]
0x7254: add rsp,0x38
0x7258: pop rbx
0x7259: pop rbp
0x725a: pop r12
0x725c: pop r13
0x725e: pop r14
0x7260: pop r15
0x7262: ret 
0x7270: mov rcx,rdx
0x7273: xor edx,edx
0x7275: jmp 0x7180
0x7280: mov eax,dword ptr [rip+0x209df2]
0x7286: push r12
0x7288: mov r12,qword ptr [rip+0x209df1]
0x728f: push rbp
0x7290: push rbx
0x7291: cmp eax,0x1
0x7294: jle 0x72c1
0x7296: sub eax,0x2
0x7299: lea rbx,[r12 + 0x18]
0x729e: shl rax,0x4
0x72a2: lea rbp,[r12 + rax*0x1 + 0x28]
0x72a7: nop word ptr [rax + rax*0x1]
0x72b0: mov rdi,qword ptr [rbx]
0x72b3: add rbx,0x10
0x72b7: call 0x2430
0x72bc: cmp rbx,rbp
0x72bf: jnz 0x72b0
0x72c1: mov rdi,qword ptr [r12 + 0x8]
0x72c6: lea rbx,[rip+0x209f53]
0x72cd: cmp rdi,rbx
0x72d0: jz 0x72e9
0x72d2: call 0x2430
0x72d7: mov qword ptr [rip+0x209dae],0x100
0x72e2: mov qword ptr [rip+0x209daf],rbx
0x72e9: lea rbx,[rip+0x209da0]
0x72f0: cmp r12,rbx
0x72f3: jz 0x7304
0x72f5: mov rdi,r12
0x72f8: call 0x2430
0x72fd: mov qword ptr [rip+0x209d7c],rbx
0x7304: pop rbx
0x7305: mov dword ptr [rip+0x209d69],0x1
0x730f: pop rbp
0x7310: pop r12
0x7312: ret 
0x7320: lea rcx,[rip+0x209ff9]
0x7327: mov rdx,-0x1
0x732e: jmp 0x6e40
0x7340: lea rcx,[rip+0x209fd9]
0x7347: jmp 0x6e40
0x7350: lea rcx,[rip+0x209fc9]
0x7357: mov rsi,rdi
0x735a: mov rdx,-0x1
0x7361: xor edi,edi
0x7363: jmp 0x6e40
0x7370: lea rcx,[rip+0x209fa9]
0x7377: mov rdx,rsi
0x737a: mov rsi,rdi
0x737d: xor edi,edi
0x737f: jmp 0x6e40
0x7390: sub rsp,0x48
0x7394: mov rax,rdx
0x7397: mov rdx,qword ptr fs:[rip+0xffffffffffff8c88]
0x73a0: mov qword ptr [rsp + 0x38],rdx
0x73a5: xor edx,edx
0x73a7: cmp esi,0xa
0x73aa: jz 0x7414
0x73ac: mov dword ptr [rsp],esi
0x73af: mov rcx,rsp
0x73b2: mov rdx,-0x1
0x73b9: mov rsi,rax
0x73bc: mov qword ptr [rsp + 0x4],0x0
0x73c5: mov qword ptr [rsp + 0xc],0x0
0x73ce: mov qword ptr [rsp + 0x14],0x0
0x73d7: mov qword ptr [rsp + 0x1c],0x0
0x73e0: mov qword ptr [rsp + 0x24],0x0
0x73e9: mov qword ptr [rsp + 0x2c],0x0
0x73f2: mov dword ptr [rsp + 0x34],0x0
0x73fa: call 0x6e40
0x73ff: mov rcx,qword ptr [rsp + 0x38]
0x7404: xor rcx,qword ptr fs:[rip+0xffffffffffff8c1b]
0x740d: jnz 0x7419
0x740f: add rsp,0x48
0x7413: ret 
0x7414: call 0x2440
0x7419: call 0x2520
0x741e: nop 
0x7420: sub rsp,0x48
0x7424: mov rax,rdx
0x7427: mov rdx,rcx
0x742a: mov rcx,qword ptr fs:[rip+0xffffffffffff8bf5]
0x7433: mov qword ptr [rsp + 0x38],rcx
0x7438: xor ecx,ecx
0x743a: cmp esi,0xa
0x743d: jz 0x74a0
0x743f: mov dword ptr [rsp],esi
0x7442: mov rcx,rsp
0x7445: mov rsi,rax
0x7448: mov qword ptr [rsp + 0x4],0x0
0x7451: mov qword ptr [rsp + 0xc],0x0
0x745a: mov qword ptr [rsp + 0x14],0x0
0x7463: mov qword ptr [rsp + 0x1c],0x0
0x746c: mov qword ptr [rsp + 0x24],0x0
0x7475: mov qword ptr [rsp + 0x2c],0x0
0x747e: mov dword ptr [rsp + 0x34],0x0
0x7486: call 0x6e40
0x748b: mov rdx,qword ptr [rsp + 0x38]
0x7490: xor rdx,qword ptr fs:[rip+0xffffffffffff8b8f]
0x7499: jnz 0x74a5
0x749b: add rsp,0x48
0x749f: ret 
0x74a0: call 0x2440
0x74a5: call 0x2520
0x74aa: nop word ptr [rax + rax*0x1]
0x74b0: mov rdx,rsi
0x74b3: mov esi,edi
0x74b5: xor edi,edi
0x74b7: jmp 0x7390
0x74c0: mov rcx,rdx
0x74c3: mov rdx,rsi
0x74c6: mov esi,edi
0x74c8: xor edi,edi
0x74ca: jmp 0x7420
0x74d0: sub rsp,0x48
0x74d4: mov ecx,edx
0x74d6: mov rax,qword ptr fs:[rip+0xffffffffffff8b49]
0x74df: mov qword ptr [rsp + 0x38],rax
0x74e4: xor eax,eax
0x74e6: mov rax,qword ptr [rip+0x209e63]
0x74ed: mov r8,rsp
0x74f0: and ecx,0x1f
0x74f3: movdqa xmm0,[rip+0x209e25]
0x74fb: mov qword ptr [rsp + 0x30],rax
0x7500: mov eax,edx
0x7502: movaps xmmword ptr [rsp],xmm0
0x7506: shr al,0x5
0x7509: movzx eax,al
0x750c: lea r9,[r8 + rax*0x4 + 0x8]
0x7511: movdqa xmm0,[rip+0x209e17]
0x7519: movaps xmmword ptr [rsp + 0x10],xmm0
0x751e: movdqa xmm0,[rip+0x209e1a]
0x7526: movaps xmmword ptr [rsp + 0x20],xmm0
0x752b: mov edx,dword ptr [r9]
0x752e: mov eax,edx
0x7530: shr eax,cl
0x7532: not eax
0x7534: and eax,0x1
0x7537: shl eax,cl
0x7539: mov rcx,r8
0x753c: xor eax,edx
0x753e: mov rdx,rsi
0x7541: mov rsi,rdi
0x7544: mov dword ptr [r9],eax
0x7547: xor edi,edi
0x7549: call 0x6e40
0x754e: mov rsi,qword ptr [rsp + 0x38]
0x7553: xor rsi,qword ptr fs:[rip+0xffffffffffff8acc]
0x755c: jnz 0x7563
0x755e: add rsp,0x48
0x7562: ret 
0x7563: call 0x2520
0x7568: nop dword ptr [rax + rax*0x1]
0x7570: movsx edx,sil
0x7574: mov rsi,-0x1
0x757b: jmp 0x74d0
0x7580: mov edx,0x3a
0x7585: mov rsi,-0x1
0x758c: jmp 0x74d0
0x75a0: mov edx,0x3a
0x75a5: jmp 0x74d0
0x7634: call 0x2440
0x7639: call 0x2520
0x763e: nop 
0x7640: sub rsp,0x48
0x7644: mov r9,rcx
0x7647: mov rcx,qword ptr [rip+0x209d02]
0x764e: movdqa xmm0,[rip+0x209cca]
0x7656: mov rax,qword ptr fs:[rip+0xffffffffffff89c9]
0x765f: mov qword ptr [rsp + 0x38],rax
0x7664: xor eax,eax
0x7666: movaps xmmword ptr [rsp],xmm0
0x766a: test rsi,rsi
0x766d: mov qword ptr [rsp + 0x30],rcx
0x7672: mov dword ptr [rsp],0xa
0x7679: movdqa xmm0,[rip+0x209caf]
0x7681: movaps xmmword ptr [rsp + 0x10],xmm0
0x7686: movdqa xmm0,[rip+0x209cb2]
0x768e: movaps xmmword ptr [rsp + 0x20],xmm0
0x7693: jz 0x76c7
0x7695: test rdx,rdx
0x7698: jz 0x76c7
0x769a: mov qword ptr [rsp + 0x28],rsi
0x769f: mov qword ptr [rsp + 0x30],rdx
0x76a4: mov rcx,rsp
0x76a7: mov rdx,r8
0x76aa: mov rsi,r9
0x76ad: call 0x6e40
0x76b2: mov rdi,qword ptr [rsp + 0x38]
0x76b7: xor rdi,qword ptr fs:[rip+0xffffffffffff8968]
0x76c0: jnz 0x76cc
0x76c2: add rsp,0x48
0x76c6: ret 
0x76c7: call 0x2440
0x76cc: call 0x2520
0x76d1: nop dword ptr [rax + rax*0x1]
0x76d6: nop word ptr cs:[rax + rax*0x1]
0x76e0: mov r8,-0x1
0x76e7: jmp 0x7640
0x76f0: mov rcx,rdx
0x76f3: mov r8,-0x1
0x76fa: mov rdx,rsi
0x76fd: mov rsi,rdi
0x7700: xor edi,edi
0x7702: jmp 0x7640
0x7710: mov r8,rcx
0x7713: mov rcx,rdx
0x7716: mov rdx,rsi
0x7719: mov rsi,rdi
0x771c: xor edi,edi
0x771e: jmp 0x7640
0x7730: lea rcx,[rip+0x209909]
0x7737: jmp 0x6e40
0x7740: lea rcx,[rip+0x2098f9]
0x7747: mov rdx,rsi
0x774a: mov rsi,rdi
0x774d: xor edi,edi
0x774f: jmp 0x6e40
0x7760: lea rcx,[rip+0x2098d9]
0x7767: mov rdx,-0x1
0x776e: jmp 0x6e40
0x78d8: mov r8,rcx
0x78db: mov rcx,rdx
0x78de: lea rdx,[rip+0x670f]
0x78e5: mov esi,0x1
0x78ea: xor eax,eax
0x78ec: call 0x2780
0x78f1: jmp 0x77dc
0x7bc0: xor r9d,r9d
0x7bc3: cmp qword ptr [r8],0x0
0x7bc7: jz 0x7bdb
0x7bc9: nop dword ptr [rax]
0x7bd0: add r9,0x1
0x7bd4: cmp qword ptr [r8 + r9*0x8],0x0
0x7bd9: jnz 0x7bd0
0x7bdb: jmp 0x77a0
0x7be0: sub rsp,0x68
0x7be4: mov r10,r8
0x7be7: xor r9d,r9d
0x7bea: mov rax,qword ptr fs:[rip+0xffffffffffff8435]
0x7bf3: mov qword ptr [rsp + 0x58],rax
0x7bf8: xor eax,eax
0x7bfa: mov r8,rsp
0x7bfd: nop dword ptr [rax]
0x7c00: mov eax,dword ptr [r10]
0x7c03: cmp eax,0x2f
0x7c06: ja 0x7c4a
0x7c08: mov r11d,eax
0x7c0b: add r11,qword ptr [r10 + 0x10]
0x7c0f: add eax,0x8
0x7c12: mov dword ptr [r10],eax
0x7c15: mov rax,qword ptr [r11]
0x7c18: test rax,rax
0x7c1b: mov qword ptr [r8 + r9*0x8],rax
0x7c1f: jz 0x7c2b
0x7c21: add r9,0x1
0x7c25: cmp r9,0xa
0x7c29: jnz 0x7c00
0x7c2b: call 0x77a0
0x7c30: mov rax,qword ptr [rsp + 0x58]
0x7c35: xor rax,qword ptr fs:[rip+0xffffffffffff83ea]
0x7c3e: jnz 0x7c45
0x7c40: add rsp,0x68
0x7c44: ret 
0x7c45: call 0x2520
0x7c4a: mov r11,qword ptr [r10 + 0x8]
0x7c4e: lea rax,[r11 + 0x8]
0x7c52: mov qword ptr [r10 + 0x8],rax
0x7c56: jmp 0x7c15
0x7d20: call 0x2520
0x7d2c: mov rax,rbx
0x7d2f: add rbx,0x8
0x7d33: jmp 0x7ce6
0x7d40: push rbx
0x7d41: lea rsi,[rip+0x62fa]
0x7d48: mov edx,0x5
0x7d4d: xor edi,edi
0x7d4f: call 0x24f0
0x7d54: lea rdx,[rip+0x62fc]
0x7d5b: mov rsi,rax
0x7d5e: mov edi,0x1
0x7d63: xor eax,eax
0x7d65: call 0x26d0
0x7d6a: lea rsi,[rip+0x62fc]
0x7d71: mov edx,0x5
0x7d76: xor edi,edi
0x7d78: call 0x24f0
0x7d7d: lea rcx,[rip+0x5b84]
0x7d84: lea rdx,[rip+0x36e5]
0x7d8b: mov rsi,rax
0x7d8e: mov edi,0x1
0x7d93: xor eax,eax
0x7d95: call 0x26d0
0x7d9a: mov rbx,qword ptr [rip+0x209307]
0x7da1: lea rsi,[rip+0x64f8]
0x7da8: xor edi,edi
0x7daa: mov edx,0x5
0x7daf: call 0x24f0
0x7db4: mov rsi,rbx
0x7db7: mov rdi,rax
0x7dba: pop rbx
0x7dbb: jmp 0x2600
0x7dda: nop word ptr [rax + rax*0x1]
0x7de0: mov rax,rdi
0x7de3: mul rsi
0x7de6: mov rdi,rax
0x7de9: seto al
0x7dec: test rdi,rdi
0x7def: js 0x7dfb
0x7df1: movzx eax,al
0x7df4: test rax,rax
0x7df7: jnz 0x7dfb
0x7df9: jmp 0x7dc0
0x7dfb: sub rsp,0x8
0x7dff: call 0x8010
0x7e04: nop 
0x7e06: nop word ptr cs:[rax + rax*0x1]
0x7e10: jmp 0x7dc0
0x7e29: test rdi,rdi
0x7e2c: jnz 0x7e48
0x7e48: call 0x2430
0x7e4d: xor eax,eax
0x7e4f: pop rbx
0x7e50: ret 
0x7e56: nop word ptr cs:[rax + rax*0x1]
0x7e60: mov rax,rsi
0x7e63: mul rdx
0x7e66: mov rsi,rax
0x7e69: seto al
0x7e6c: test rsi,rsi
0x7e6f: js 0x7e7b
0x7e71: movzx eax,al
0x7e74: test rax,rax
0x7e77: jnz 0x7e7b
0x7e79: jmp 0x7e20
0x7e7b: sub rsp,0x8
0x7e7f: call 0x8010
0x7e84: nop 
0x7e86: nop word ptr cs:[rax + rax*0x1]
0x7e90: test rdi,rdi
0x7e93: mov r9,rdx
0x7e96: mov rcx,qword ptr [rsi]
0x7e99: jz 0x7ed0
0x7e9b: xor edx,edx
0x7e9d: mov rax,0x5555555555555554
0x7ea7: div r9
0x7eaa: cmp rax,rcx
0x7ead: jbe 0x7eeb
0x7eaf: mov rax,rcx
0x7eb2: shr rax,1
0x7eb5: lea rcx,[rax + rcx*0x1 + 0x1]
0x7eba: mov qword ptr [rsi],rcx
0x7ebd: imul rcx,r9
0x7ec1: mov rsi,rcx
0x7ec4: jmp 0x7e20
0x7ed0: test rcx,rcx
0x7ed3: jz 0x7ef8
0x7ed5: mov rax,rcx
0x7ed8: mul r9
0x7edb: seto dl
0x7ede: test rax,rax
0x7ee1: movzx edx,dl
0x7ee4: js 0x7eeb
0x7ee6: test rdx,rdx
0x7ee9: jz 0x7eba
0x7eeb: sub rsp,0x8
0x7eef: call 0x8010
0x7ef4: nop dword ptr [rax]
0x7ef8: xor edx,edx
0x7efa: mov eax,0x80
0x7eff: xor r8d,r8d
0x7f02: div r9
0x7f05: test rax,rax
0x7f08: setz r8b
0x7f0c: lea rcx,[r8 + rax*0x1]
0x7f10: jmp 0x7ed5
0x7f20: test rdi,rdi
0x7f23: mov rax,qword ptr [rsi]
0x7f26: jz 0x7f50
0x7f28: mov rdx,0x5555555555555553
0x7f32: cmp rax,rdx
0x7f35: ja 0x7f61
0x7f37: mov rdx,rax
0x7f3a: shr rdx,1
0x7f3d: lea rax,[rdx + rax*0x1 + 0x1]
0x7f42: mov qword ptr [rsi],rax
0x7f45: mov rsi,rax
0x7f48: jmp 0x7e20
0x7f50: test rax,rax
0x7f53: mov edx,0x80
0x7f58: cmovz rax,rdx
0x7f5c: test rax,rax
0x7f5f: jns 0x7f42
0x7f61: sub rsp,0x8
0x7f65: call 0x8010
0x7f6a: nop word ptr [rax + rax*0x1]
0x7f70: push rbx
0x7f71: mov rbx,rdi
0x7f74: call 0x7dc0
0x7f79: mov rdx,rbx
0x7f7c: xor esi,esi
0x7f7e: mov rdi,rax
0x7f81: pop rbx
0x7f82: jmp 0x25c0
0x7f90: mov rax,rdi
0x7f93: sub rsp,0x8
0x7f97: mul rsi
0x7f9a: seto dl
0x7f9d: test rax,rax
0x7fa0: js 0x7fb9
0x7fa2: movzx edx,dl
0x7fa5: test rdx,rdx
0x7fa8: jnz 0x7fb9
0x7faa: call 0x2610
0x7faf: test rax,rax
0x7fb2: jz 0x7fb9
0x7fb4: add rsp,0x8
0x7fb8: ret 
0x7fb9: call 0x8010
0x7fbe: nop 
0x7fc0: push rbp
0x7fc1: push rbx
0x7fc2: mov rbp,rdi
0x7fc5: mov rdi,rsi
0x7fc8: mov rbx,rsi
0x7fcb: sub rsp,0x8
0x7fcf: call 0x7dc0
0x7fd4: add rsp,0x8
0x7fd8: mov rdx,rbx
0x7fdb: mov rsi,rbp
0x7fde: pop rbx
0x7fdf: pop rbp
0x7fe0: mov rdi,rax
0x7fe3: jmp 0x2640
0x7ff0: push rbx
0x7ff1: mov rbx,rdi
0x7ff4: call 0x2510
0x7ff9: mov rdi,rbx
0x7ffc: lea rsi,[rax + 0x1]
0x8000: pop rbx
0x8001: jmp 0x7fc0
0x8045: nop word ptr cs:[rax + rax*0x1]
0x804f: nop 
0x814b: call 0x2520
0x8150: sub rsp,0x10
0x8154: push r9
0x8156: mov r9,r8
0x8159: mov r8,rcx
0x815c: mov rcx,rdx
0x815f: mov rdx,rsi
0x8162: mov esi,0xa
0x8167: call 0x8050
0x816c: add rsp,0x18
0x8170: ret 
0x8230: cmp eax,0x22
0x8233: mov r12d,0x4
0x8239: jnz 0x8207
0x823b: mov r12d,0x1
0x8241: jmp 0x81f2
0x86e0: mov r12d,0x4
0x86e6: jmp 0x8207
0x880f: lea rcx,[rip+0x5c6a]
0x8816: lea rsi,[rip+0x5b43]
0x881d: lea rdi,[rip+0x5b5c]
0x8824: mov edx,0x54
0x8829: call 0x25a0
0x882e: call 0x2520
0x8833: nop word ptr cs:[rax + rax*0x1]
0x883d: nop dword ptr [rax]
0x88e6: cmp eax,0x22
0x88e9: mov ebp,0x1
0x88ee: jnz 0x8918
0x8912: nop word ptr [rax + rax*0x1]
0x8bc0: call 0x2520
0x8bc5: lea rcx,[rip+0x5994]
0x8bcc: lea rsi,[rip+0x578d]
0x8bd3: lea rdi,[rip+0x57a6]
0x8bda: mov edx,0x54
0x8bdf: call 0x25a0
0x8ead: call 0x2520
0x8eca: mov rax,qword ptr [rsp + 0x8]
0x8ecf: jmp 0x8d99
0x8ed4: mov rax,qword ptr [rsp + 0x8]
0x8ed9: jmp 0x8df1
0x8f5e: call 0x2520
0x8f63: nop word ptr cs:[rax + rax*0x1]
0x8f6d: nop dword ptr [rax]
0x8fe9: call 0x2520
0x8fee: nop 
0x8ff0: push r12
0x8ff2: push rbp
0x8ff3: mov rbp,rdi
0x8ff6: push rbx
0x8ff7: call 0x2480
0x8ffc: mov ebx,dword ptr [rbp]
0x8fff: mov rdi,rbp
0x9002: mov r12,rax
0x9005: call 0x9110
0x900a: and ebx,0x20
0x900d: test ebx,ebx
0x900f: jnz 0x9028
0x9011: test eax,eax
0x9013: jz 0x901f
0x9015: test r12,r12
0x9018: mov eax,0xffffffff
0x901d: jz 0x9058
0x901f: pop rbx
0x9020: pop rbp
0x9021: pop r12
0x9023: ret 
0x9028: test eax,eax
0x902a: jnz 0x9048
0x902c: call 0x2450
0x9031: mov dword ptr [rax],0x0
0x9037: mov eax,0xffffffff
0x903c: pop rbx
0x903d: pop rbp
0x903e: pop r12
0x9040: ret 
0x9048: pop rbx
0x9049: mov eax,0xffffffff
0x904e: pop rbp
0x904f: pop r12
0x9051: ret 
0x9058: call 0x2450
0x905d: cmp dword ptr [rax],0x9
0x9060: pop rbx
0x9061: pop rbp
0x9062: pop r12
0x9064: setnz al
0x9067: movzx eax,al
0x906a: neg eax
0x906c: ret 
0x9110: push r12
0x9112: push rbp
0x9113: push rbx
0x9114: mov rbx,rdi
0x9117: call 0x2650
0x911c: test eax,eax
0x911e: mov rdi,rbx
0x9121: js 0x9177
0x9123: call 0x2690
0x9128: test eax,eax
0x912a: jnz 0x9158
0x912c: mov rdi,rbx
0x912f: call 0x9190
0x9134: test eax,eax
0x9136: jz 0x9174
0x9138: call 0x2450
0x913d: mov r12d,dword ptr [rax]
0x9140: mov rdi,rbx
0x9143: mov rbp,rax
0x9146: call 0x24c0
0x914b: test r12d,r12d
0x914e: jnz 0x9180
0x9150: pop rbx
0x9151: pop rbp
0x9152: pop r12
0x9154: ret 
0x9158: mov rdi,rbx
0x915b: call 0x2650
0x9160: xor esi,esi
0x9162: mov edx,0x1
0x9167: mov edi,eax
0x9169: call 0x2590
0x916e: cmp rax,-0x1
0x9172: jnz 0x912c
0x9174: mov rdi,rbx
0x9177: pop rbx
0x9178: pop rbp
0x9179: pop r12
0x917b: jmp 0x24c0
0x9180: mov dword ptr [rbp],r12d
0x9184: mov eax,0xffffffff
0x9189: jmp 0x9150
0x9190: test rdi,rdi
0x9193: push rbx
0x9194: mov rbx,rdi
0x9197: jz 0x91aa
0x9199: call 0x2690
0x919e: test eax,eax
0x91a0: jz 0x91aa
0x91a2: test dword ptr [rbx],0x100
0x91a8: jnz 0x91b8
0x91aa: mov rdi,rbx
0x91ad: pop rbx
0x91ae: jmp 0x2670
0x91b8: mov rdi,rbx
0x91bb: mov edx,0x1
0x91c0: xor esi,esi
0x91c2: call 0x91d0
0x91c7: mov rdi,rbx
0x91ca: pop rbx
0x91cb: jmp 0x2670
0x91d0: mov rax,qword ptr [rdi + 0x8]
0x91d4: cmp qword ptr [rdi + 0x10],rax
0x91d8: jz 0x91e0
0x91da: jmp 0x2720
0x91e0: mov rax,qword ptr [rdi + 0x20]
0x91e4: cmp qword ptr [rdi + 0x28],rax
0x91e8: jnz 0x91da
0x91ea: cmp qword ptr [rdi + 0x48],0x0
0x91ef: jnz 0x91da
0x91f1: push r12
0x91f3: push rbp
0x91f4: mov r12d,edx
0x91f7: push rbx
0x91f8: mov rbp,rsi
0x91fb: mov rbx,rdi
0x91fe: call 0x2650
0x9203: mov edx,r12d
0x9206: mov rsi,rbp
0x9209: mov edi,eax
0x920b: call 0x2590
0x9210: cmp rax,-0x1
0x9214: jz 0x9222
0x9216: and dword ptr [rbx],0xffffffef
0x9219: mov qword ptr [0x90 + rbx],rax
0x9220: xor eax,eax
0x9222: pop rbx
0x9223: pop rbp
0x9224: pop r12
0x9226: ret 
0x9332: mov rax,qword ptr [-0x418 + rbp]
0x9339: mov r12,qword ptr [rax]
0x9804: movsxd rdx,ecx
0x9807: cmp rdx,r10
0x980a: jnc 0x981a
0x980c: add rdx,r15
0x980f: cmp byte ptr [rdx + r14*0x1],0x0
0x9814: jnz 0xa156
0x981a: cmp ecx,eax
0x981c: jge 0x9826
0xa15b: nop dword ptr [rax + rax*0x1]
0xa327: call 0x2520
0xb240: push r15
0xb242: push r14
0xb244: mov r15,rdx
0xb247: push r13
0xb249: push r12
0xb24b: lea r12,[rip+0x2047fe]
0xb252: push rbp
0xb253: lea rbp,[rip+0x2047fe]
0xb25a: push rbx
0xb25b: mov r13d,edi
0xb25e: mov r14,rsi
0xb261: sub rbp,r12
0xb264: sub rsp,0x8
0xb268: sar rbp,0x3
0xb26c: call 0x23e0
0xb271: test rbp,rbp
0xb274: jz 0xb296
0xb276: xor ebx,ebx
0xb278: nop dword ptr [rax + rax*0x1]
0xb280: mov rdx,r15
0xb283: mov rsi,r14
0xb286: mov edi,r13d
0xb289: call qword ptr [r12 + rbx*0x8]
0xb28d: add rbx,0x1
0xb291: cmp rbp,rbx
0xb294: jnz 0xb280
0xb296: add rsp,0x8
0xb29a: pop rbx
0xb29b: pop rbp
0xb29c: pop r12
0xb29e: pop r13
0xb2a0: pop r14
0xb2a2: pop r15
0xb2a4: ret 
0xb2b0: ret 
0xb2d0: sub rsp,0x8
0xb2d4: add rsp,0x8
0xb2d8: ret 
