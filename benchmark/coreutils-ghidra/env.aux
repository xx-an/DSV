0x1858: sub rsp,0x8
0x185c: mov rax,qword ptr [rip+0x20877d]
0x1863: test rax,rax
0x1866: jz 0x186a
0x1868: call rax
0x186a: add rsp,0x8
0x186e: ret 
0x1870: push qword ptr [rip+0x20855a]
0x1876: jmp qword ptr [rip+0x20855c]
0x1886: push 0x0
0x188b: jmp 0x1870
0x1896: push 0x1
0x189b: jmp 0x1870
0x18a6: push 0x2
0x18ab: jmp 0x1870
0x18b6: push 0x3
0x18bb: jmp 0x1870
0x18c6: push 0x4
0x18cb: jmp 0x1870
0x18d6: push 0x5
0x18db: jmp 0x1870
0x18e0: jmp qword ptr [rip+0x20852a]
0x18e6: push 0x6
0x18eb: jmp 0x1870
0x18f6: push 0x7
0x18fb: jmp 0x1870
0x1900: jmp qword ptr [rip+0x20851a]
0x1906: push 0x8
0x190b: jmp 0x1870
0x1916: push 0x9
0x191b: jmp 0x1870
0x1926: push 0xa
0x192b: jmp 0x1870
0x1930: jmp qword ptr [rip+0x208502]
0x1936: push 0xb
0x193b: jmp 0x1870
0x1946: push 0xc
0x194b: jmp 0x1870
0x1956: push 0xd
0x195b: jmp 0x1870
0x1966: push 0xe
0x196b: jmp 0x1870
0x1976: push 0xf
0x197b: jmp 0x1870
0x1986: push 0x10
0x198b: jmp 0x1870
0x1996: push 0x11
0x199b: jmp 0x1870
0x19a0: jmp qword ptr [rip+0x2084ca]
0x19a6: push 0x12
0x19ab: jmp 0x1870
0x19b6: push 0x13
0x19bb: jmp 0x1870
0x19c6: push 0x14
0x19cb: jmp 0x1870
0x19d6: push 0x15
0x19db: jmp 0x1870
0x19e6: push 0x16
0x19eb: jmp 0x1870
0x19f0: jmp qword ptr [rip+0x2084a2]
0x19f6: push 0x17
0x19fb: jmp 0x1870
0x1a06: push 0x18
0x1a0b: jmp 0x1870
0x1a16: push 0x19
0x1a1b: jmp 0x1870
0x1a26: push 0x1a
0x1a2b: jmp 0x1870
0x1a36: push 0x1b
0x1a3b: jmp 0x1870
0x1a46: push 0x1c
0x1a4b: jmp 0x1870
0x1a50: jmp qword ptr [rip+0x208472]
0x1a56: push 0x1d
0x1a5b: jmp 0x1870
0x1a66: push 0x1e
0x1a6b: jmp 0x1870
0x1a76: push 0x1f
0x1a7b: jmp 0x1870
0x1a86: push 0x20
0x1a8b: jmp 0x1870
0x1a96: push 0x21
0x1a9b: jmp 0x1870
0x1aa6: push 0x22
0x1aab: jmp 0x1870
0x1ab6: push 0x23
0x1abb: jmp 0x1870
0x1ac0: jmp qword ptr [rip+0x20843a]
0x1ac6: push 0x24
0x1acb: jmp 0x1870
0x1ad6: push 0x25
0x1adb: jmp 0x1870
0x1ae0: jmp qword ptr [rip+0x20842a]
0x1ae6: push 0x26
0x1aeb: jmp 0x1870
0x1af6: push 0x27
0x1afb: jmp 0x1870
0x1b00: jmp qword ptr [rip+0x20841a]
0x1b06: push 0x28
0x1b0b: jmp 0x1870
0x1b16: push 0x29
0x1b1b: jmp 0x1870
0x1b26: push 0x2a
0x1b2b: jmp 0x1870
0x1b36: push 0x2b
0x1b3b: jmp 0x1870
0x1b46: push 0x2c
0x1b4b: jmp 0x1870
0x1b50: jmp qword ptr [rip+0x2083f2]
0x1b56: push 0x2d
0x1b5b: jmp 0x1870
0x1b66: push 0x2e
0x1b6b: jmp 0x1870
0x1b76: push 0x2f
0x1b7b: jmp 0x1870
0x1b86: push 0x30
0x1b8b: jmp 0x1870
0x1b96: push 0x31
0x1b9b: jmp 0x1870
0x1ba6: push 0x32
0x1bab: jmp 0x1870
0x1bb6: push 0x33
0x1bbb: jmp 0x1870
0x1bc6: push 0x34
0x1bcb: jmp 0x1870
0x1bd6: push 0x35
0x1bdb: jmp 0x1870
0x1be6: push 0x36
0x1beb: jmp 0x1870
0x1bf6: push 0x37
0x1bfb: jmp 0x1870
0x1c06: push 0x38
0x1c0b: jmp 0x1870
0x1c16: push 0x39
0x1c1b: jmp 0x1870
0x1c26: push 0x3a
0x1c2b: jmp 0x1870
0x1c36: push 0x3b
0x1c3b: jmp 0x1870
0x1c46: push 0x3c
0x1c4b: jmp 0x1870
0x1c56: push 0x3d
0x1c5b: jmp 0x1870
0x1c60: jmp qword ptr [rip+0x20838a]
0x1d8f: nop 
0x1f3d: nop dword ptr [rax]
0x29b4: mov eax,0x7e
0x29b9: jmp 0x2787
0x2ad7: jmp 0x1d85
0x2baf: movsxd rax,dword ptr [rip+0x20769a]
0x2bb6: mov esi,0x20
0x2bbb: mov rdi,qword ptr [r15 + rax*0x8]
0x2bbf: call 0x19d0
0x2bc4: test rax,rax
0x2bc7: jz 0x2e1e
0x2bcd: lea rsi,[rip+0x49c4]
0x2bd4: mov edx,0x5
0x2bd9: xor edi,edi
0x2bdb: call 0x1960
0x2be0: xor esi,esi
0x2be2: mov rdx,rax
0x2be5: xor edi,edi
0x2be7: xor eax,eax
0x2be9: call 0x1b40
0x2bee: mov eax,0x7f
0x2bf3: jmp 0x2787
0x2e1e: mov eax,0x7f
0x2e23: jmp 0x2787
0x2e5f: mov edx,0x5
0x2e64: lea rsi,[rip+0x472d]
0x2e6b: jmp 0x2ac2
0x2ff5: call 0x19a0
0x30d1: nop word ptr cs:[rax + rax*0x1]
0x30db: nop dword ptr [rax + rax*0x1]
0x310a: hlt 
0x3110: lea rdi,[rip+0x207111]
0x3117: push rbp
0x3118: lea rax,[rip+0x207109]
0x311f: cmp rax,rdi
0x3122: mov rbp,rsp
0x3125: jz 0x3140
0x3127: mov rax,qword ptr [rip+0x206ea2]
0x312e: test rax,rax
0x3131: jz 0x3140
0x3133: pop rbp
0x3134: jmp rax
0x3140: pop rbp
0x3141: ret 
0x3150: lea rdi,[rip+0x2070d1]
0x3157: lea rsi,[rip+0x2070ca]
0x315e: push rbp
0x315f: sub rsi,rdi
0x3162: mov rbp,rsp
0x3165: sar rsi,0x3
0x3169: mov rax,rsi
0x316c: shr rax,0x3f
0x3170: add rsi,rax
0x3173: sar rsi,1
0x3176: jz 0x3190
0x3178: mov rax,qword ptr [rip+0x206e69]
0x317f: test rax,rax
0x3182: jz 0x3190
0x3184: pop rbp
0x3185: jmp rax
0x3190: pop rbp
0x3191: ret 
0x31a0: cmp byte ptr [rip+0x2070e1],0x0
0x31a7: jnz 0x31d8
0x31a9: cmp qword ptr [rip+0x206e3f],0x0
0x31b1: push rbp
0x31b2: mov rbp,rsp
0x31b5: jz 0x31c3
0x31b7: mov rdi,qword ptr [rip+0x206e4a]
0x31be: call 0x1c60
0x31c3: call 0x3110
0x31c8: mov byte ptr [rip+0x2070b9],0x1
0x31cf: pop rbp
0x31d0: ret 
0x31d8: ret 
0x31e0: push rbp
0x31e1: mov rbp,rsp
0x31e4: pop rbp
0x31e5: jmp 0x3150
0x3318: nop dword ptr [rax + rax*0x1]
0x3481: call 0x19a0
0x3486: nop word ptr cs:[rax + rax*0x1]
0x3a42: nop word ptr [rax + rax*0x1]
0x3ad2: call 0x19a0
0x3ad7: nop word ptr [rax + rax*0x1]
0x3c02: nop word ptr [rax + rax*0x1]
0x3cb5: call 0x19a0
0x3cba: nop word ptr [rax + rax*0x1]
0x3d6f: mov eax,0xffffffff
0x3d74: jmp 0x3e00
0x3e9c: call 0x19a0
0x3ea1: nop word ptr cs:[rax + rax*0x1]
0x3eab: nop dword ptr [rax + rax*0x1]
0x3eb0: mov qword ptr [rip+0x206549],rdi
0x3eb7: ret 
0x3ec0: mov byte ptr [rip+0x206531],dil
0x3ec7: ret 
0x3ed0: push rbp
0x3ed1: push rbx
0x3ed2: sub rsp,0x8
0x3ed6: mov rdi,qword ptr [rip+0x20636b]
0x3edd: call 0x6860
0x3ee2: test eax,eax
0x3ee4: jz 0x3efc
0x3ee6: call 0x18c0
0x3eeb: cmp byte ptr [rip+0x206506],0x0
0x3ef2: mov rbx,rax
0x3ef5: jz 0x3f13
0x3ef7: cmp dword ptr [rax],0x20
0x3efa: jnz 0x3f13
0x3efc: mov rdi,qword ptr [rip+0x20637d]
0x3f03: call 0x6860
0x3f08: test eax,eax
0x3f0a: jnz 0x3f52
0x3f0c: add rsp,0x8
0x3f10: pop rbx
0x3f11: pop rbp
0x3f12: ret 
0x3f13: lea rsi,[rip+0x380b]
0x3f1a: xor edi,edi
0x3f1c: mov edx,0x5
0x3f21: call 0x1960
0x3f26: mov rdi,qword ptr [rip+0x2064d3]
0x3f2d: mov rbp,rax
0x3f30: test rdi,rdi
0x3f33: jz 0x3f5d
0x3f35: call 0x5a90
0x3f3a: mov esi,dword ptr [rbx]
0x3f3c: lea rdx,[rip+0x37ee]
0x3f43: mov rcx,rax
0x3f46: mov r8,rbp
0x3f49: xor edi,edi
0x3f4b: xor eax,eax
0x3f4d: call 0x1b40
0x3f52: mov edi,dword ptr [rip+0x2060c0]
0x3f58: call 0x18e0
0x3f5d: mov esi,dword ptr [rbx]
0x3f5f: lea rdx,[rip+0x37cf]
0x3f66: mov rcx,rax
0x3f69: xor edi,edi
0x3f6b: xor eax,eax
0x3f6d: call 0x1b40
0x3f72: jmp 0x3f52
0x401f: nop 
0x5303: call 0x19a0
0x5344: nop 
0x5346: nop word ptr cs:[rax + rax*0x1]
0x54f1: call 0x18b0
0x54f6: call 0x6520
0x54fb: nop dword ptr [rax + rax*0x1]
0x5500: push r12
0x5502: push rbp
0x5503: push rbx
0x5504: mov rbx,rdi
0x5507: call 0x18c0
0x550c: mov r12d,dword ptr [rax]
0x550f: mov rbp,rax
0x5512: lea rax,[rip+0x205007]
0x5519: test rbx,rbx
0x551c: mov esi,0x38
0x5521: cmovz rbx,rax
0x5525: mov rdi,rbx
0x5528: call 0x64d0
0x552d: mov dword ptr [rbp],r12d
0x5531: pop rbx
0x5532: pop rbp
0x5533: pop r12
0x5535: ret 
0x5540: lea rax,[rip+0x204fd9]
0x5547: test rdi,rdi
0x554a: cmovz rdi,rax
0x554e: mov eax,dword ptr [rdi]
0x5550: ret 
0x5560: lea rax,[rip+0x204fb9]
0x5567: test rdi,rdi
0x556a: cmovz rdi,rax
0x556e: mov dword ptr [rdi],esi
0x5570: ret 
0x5580: lea rax,[rip+0x204f99]
0x5587: test rdi,rdi
0x558a: mov ecx,esi
0x558c: cmovz rdi,rax
0x5590: mov eax,esi
0x5592: and ecx,0x1f
0x5595: shr al,0x5
0x5598: movzx eax,al
0x559b: lea rdi,[rdi + rax*0x4 + 0x8]
0x55a0: mov esi,dword ptr [rdi]
0x55a2: mov eax,esi
0x55a4: shr eax,cl
0x55a6: xor edx,eax
0x55a8: and eax,0x1
0x55ab: and edx,0x1
0x55ae: shl edx,cl
0x55b0: xor edx,esi
0x55b2: mov dword ptr [rdi],edx
0x55b4: ret 
0x55c0: lea rax,[rip+0x204f59]
0x55c7: test rdi,rdi
0x55ca: cmovz rdi,rax
0x55ce: mov eax,dword ptr [rdi + 0x4]
0x55d1: mov dword ptr [rdi + 0x4],esi
0x55d4: ret 
0x55e0: lea rax,[rip+0x204f39]
0x55e7: test rdi,rdi
0x55ea: cmovz rdi,rax
0x55ee: test rsi,rsi
0x55f1: mov dword ptr [rdi],0xa
0x55f7: jz 0x5607
0x55f9: test rdx,rdx
0x55fc: jz 0x5607
0x55fe: mov qword ptr [rdi + 0x28],rsi
0x5602: mov qword ptr [rdi + 0x30],rdx
0x5606: ret 
0x5607: sub rsp,0x8
0x560b: call 0x18b0
0x5610: push r15
0x5612: push r14
0x5614: lea rax,[rip+0x204f05]
0x561b: push r13
0x561d: push r12
0x561f: mov r13,rdi
0x5622: push rbp
0x5623: push rbx
0x5624: mov rbx,r8
0x5627: mov r14,rsi
0x562a: mov r15,rdx
0x562d: sub rsp,0x18
0x5631: test r8,r8
0x5634: cmovz rbx,rax
0x5638: mov qword ptr [rsp + 0x8],rcx
0x563d: call 0x18c0
0x5642: mov r12d,dword ptr [rax]
0x5645: mov rbp,rax
0x5648: lea rax,[rbx + 0x8]
0x564c: sub rsp,0x8
0x5650: mov r9d,dword ptr [rbx + 0x4]
0x5654: push qword ptr [rbx + 0x30]
0x5657: mov r8d,dword ptr [rbx]
0x565a: push qword ptr [rbx + 0x28]
0x565d: mov rdx,r15
0x5660: push rax
0x5661: mov rcx,qword ptr [rsp + 0x28]
0x5666: mov rsi,r14
0x5669: mov rdi,r13
0x566c: call 0x4110
0x5671: mov dword ptr [rbp],r12d
0x5675: add rsp,0x38
0x5679: pop rbx
0x567a: pop rbp
0x567b: pop r12
0x567d: pop r13
0x567f: pop r14
0x5681: pop r15
0x5683: ret 
0x5690: push r15
0x5692: push r14
0x5694: lea rax,[rip+0x204e85]
0x569b: push r13
0x569d: push r12
0x569f: mov r12,rdx
0x56a2: push rbp
0x56a3: push rbx
0x56a4: mov rbx,rcx
0x56a7: mov r14,rdi
0x56aa: mov r15,rsi
0x56ad: sub rsp,0x38
0x56b1: test rcx,rcx
0x56b4: cmovz rbx,rax
0x56b8: xor ebp,ebp
0x56ba: call 0x18c0
0x56bf: test r12,r12
0x56c2: mov r13,rax
0x56c5: mov eax,dword ptr [rax]
0x56c7: setz bpl
0x56cb: or ebp,dword ptr [rbx + 0x4]
0x56ce: lea r10,[rbx + 0x8]
0x56d2: sub rsp,0x8
0x56d6: mov r8d,dword ptr [rbx]
0x56d9: mov rcx,r15
0x56dc: mov dword ptr [rsp + 0x14],eax
0x56e0: push qword ptr [rbx + 0x30]
0x56e3: mov rdx,r14
0x56e6: push qword ptr [rbx + 0x28]
0x56e9: push r10
0x56eb: xor esi,esi
0x56ed: mov r9d,ebp
0x56f0: xor edi,edi
0x56f2: mov qword ptr [rsp + 0x40],r10
0x56f7: call 0x4110
0x56fc: lea rsi,[rax + 0x1]
0x5700: mov qword ptr [rsp + 0x48],rax
0x5705: add rsp,0x20
0x5709: mov rdi,rsi
0x570c: mov qword ptr [rsp + 0x18],rsi
0x5711: call 0x62d0
0x5716: mov qword ptr [rsp + 0x10],rax
0x571b: sub rsp,0x8
0x571f: push qword ptr [rbx + 0x30]
0x5722: push qword ptr [rbx + 0x28]
0x5725: mov r10,qword ptr [rsp + 0x38]
0x572a: mov r9d,ebp
0x572d: mov r8d,dword ptr [rbx]
0x5730: mov rcx,r15
0x5733: mov rdx,r14
0x5736: mov rdi,rax
0x5739: push r10
0x573b: mov rsi,qword ptr [rsp + 0x38]
0x5740: call 0x4110
0x5745: mov eax,dword ptr [rsp + 0x2c]
0x5749: add rsp,0x20
0x574d: test r12,r12
0x5750: mov dword ptr [r13],eax
0x5754: jz 0x575f
0x5756: mov r11,qword ptr [rsp + 0x28]
0x575b: mov qword ptr [r12],r11
0x575f: mov rax,qword ptr [rsp + 0x10]
0x5764: add rsp,0x38
0x5768: pop rbx
0x5769: pop rbp
0x576a: pop r12
0x576c: pop r13
0x576e: pop r14
0x5770: pop r15
0x5772: ret 
0x5780: mov rcx,rdx
0x5783: xor edx,edx
0x5785: jmp 0x5690
0x5790: mov eax,dword ptr [rip+0x2048c2]
0x5796: push r12
0x5798: mov r12,qword ptr [rip+0x2048c1]
0x579f: push rbp
0x57a0: push rbx
0x57a1: cmp eax,0x1
0x57a4: jle 0x57d1
0x57a6: sub eax,0x2
0x57a9: lea rbx,[r12 + 0x18]
0x57ae: shl rax,0x4
0x57b2: lea rbp,[r12 + rax*0x1 + 0x28]
0x57b7: nop word ptr [rax + rax*0x1]
0x57c0: mov rdi,qword ptr [rbx]
0x57c3: add rbx,0x10
0x57c7: call 0x18a0
0x57cc: cmp rbx,rbp
0x57cf: jnz 0x57c0
0x57d1: mov rdi,qword ptr [r12 + 0x8]
0x57d6: lea rbx,[rip+0x204c43]
0x57dd: cmp rdi,rbx
0x57e0: jz 0x57f9
0x57e2: call 0x18a0
0x57e7: mov qword ptr [rip+0x20487e],0x100
0x57f2: mov qword ptr [rip+0x20487f],rbx
0x57f9: lea rbx,[rip+0x204870]
0x5800: cmp r12,rbx
0x5803: jz 0x5814
0x5805: mov rdi,r12
0x5808: call 0x18a0
0x580d: mov qword ptr [rip+0x20484c],rbx
0x5814: pop rbx
0x5815: mov dword ptr [rip+0x204839],0x1
0x581f: pop rbp
0x5820: pop r12
0x5822: ret 
0x5830: lea rcx,[rip+0x204ce9]
0x5837: mov rdx,-0x1
0x583e: jmp 0x5350
0x5850: lea rcx,[rip+0x204cc9]
0x5857: jmp 0x5350
0x5860: lea rcx,[rip+0x204cb9]
0x5867: mov rsi,rdi
0x586a: mov rdx,-0x1
0x5871: xor edi,edi
0x5873: jmp 0x5350
0x5880: lea rcx,[rip+0x204c99]
0x5887: mov rdx,rsi
0x588a: mov rsi,rdi
0x588d: xor edi,edi
0x588f: jmp 0x5350
0x5924: call 0x18b0
0x5929: call 0x19a0
0x592e: nop 
0x5930: sub rsp,0x48
0x5934: mov rax,rdx
0x5937: mov rdx,rcx
0x593a: mov rcx,qword ptr fs:[rip+0xffffffffffffa6e5]
0x5943: mov qword ptr [rsp + 0x38],rcx
0x5948: xor ecx,ecx
0x594a: cmp esi,0xa
0x594d: jz 0x59b0
0x594f: mov dword ptr [rsp],esi
0x5952: mov rcx,rsp
0x5955: mov rsi,rax
0x5958: mov qword ptr [rsp + 0x4],0x0
0x5961: mov qword ptr [rsp + 0xc],0x0
0x596a: mov qword ptr [rsp + 0x14],0x0
0x5973: mov qword ptr [rsp + 0x1c],0x0
0x597c: mov qword ptr [rsp + 0x24],0x0
0x5985: mov qword ptr [rsp + 0x2c],0x0
0x598e: mov dword ptr [rsp + 0x34],0x0
0x5996: call 0x5350
0x599b: mov rdx,qword ptr [rsp + 0x38]
0x59a0: xor rdx,qword ptr fs:[rip+0xffffffffffffa67f]
0x59a9: jnz 0x59b5
0x59ab: add rsp,0x48
0x59af: ret 
0x59b0: call 0x18b0
0x59b5: call 0x19a0
0x59ba: nop word ptr [rax + rax*0x1]
0x59d0: mov rcx,rdx
0x59d3: mov rdx,rsi
0x59d6: mov esi,edi
0x59d8: xor edi,edi
0x59da: jmp 0x5930
0x59e0: sub rsp,0x48
0x59e4: mov ecx,edx
0x59e6: mov rax,qword ptr fs:[rip+0xffffffffffffa639]
0x59ef: mov qword ptr [rsp + 0x38],rax
0x59f4: xor eax,eax
0x59f6: mov rax,qword ptr [rip+0x204b53]
0x59fd: mov r8,rsp
0x5a00: and ecx,0x1f
0x5a03: movdqa xmm0,[rip+0x204b15]
0x5a0b: mov qword ptr [rsp + 0x30],rax
0x5a10: mov eax,edx
0x5a12: movaps xmmword ptr [rsp],xmm0
0x5a16: shr al,0x5
0x5a19: movzx eax,al
0x5a1c: lea r9,[r8 + rax*0x4 + 0x8]
0x5a21: movdqa xmm0,[rip+0x204b07]
0x5a29: movaps xmmword ptr [rsp + 0x10],xmm0
0x5a2e: movdqa xmm0,[rip+0x204b0a]
0x5a36: movaps xmmword ptr [rsp + 0x20],xmm0
0x5a3b: mov edx,dword ptr [r9]
0x5a3e: mov eax,edx
0x5a40: shr eax,cl
0x5a42: not eax
0x5a44: and eax,0x1
0x5a47: shl eax,cl
0x5a49: mov rcx,r8
0x5a4c: xor eax,edx
0x5a4e: mov rdx,rsi
0x5a51: mov rsi,rdi
0x5a54: mov dword ptr [r9],eax
0x5a57: xor edi,edi
0x5a59: call 0x5350
0x5a5e: mov rsi,qword ptr [rsp + 0x38]
0x5a63: xor rsi,qword ptr fs:[rip+0xffffffffffffa5bc]
0x5a6c: jnz 0x5a73
0x5a6e: add rsp,0x48
0x5a72: ret 
0x5a73: call 0x19a0
0x5a78: nop dword ptr [rax + rax*0x1]
0x5a80: movsx edx,sil
0x5a84: mov rsi,-0x1
0x5a8b: jmp 0x59e0
0x5a90: mov edx,0x3a
0x5a95: mov rsi,-0x1
0x5a9c: jmp 0x59e0
0x5ab0: mov edx,0x3a
0x5ab5: jmp 0x59e0
0x5ac0: sub rsp,0x48
0x5ac4: mov rax,rdx
0x5ac7: mov rdx,qword ptr fs:[rip+0xffffffffffffa558]
0x5ad0: mov qword ptr [rsp + 0x38],rdx
0x5ad5: xor edx,edx
0x5ad7: cmp esi,0xa
0x5ada: jz 0x5b44
0x5adc: mov dword ptr [rsp],esi
0x5adf: mov rcx,rsp
0x5ae2: mov rdx,-0x1
0x5ae9: mov rsi,rax
0x5aec: mov qword ptr [rsp + 0x4],0x0
0x5af5: mov qword ptr [rsp + 0xc],0x4000000
0x5afe: mov qword ptr [rsp + 0x14],0x0
0x5b07: mov qword ptr [rsp + 0x1c],0x0
0x5b10: mov qword ptr [rsp + 0x24],0x0
0x5b19: mov qword ptr [rsp + 0x2c],0x0
0x5b22: mov dword ptr [rsp + 0x34],0x0
0x5b2a: call 0x5350
0x5b2f: mov rcx,qword ptr [rsp + 0x38]
0x5b34: xor rcx,qword ptr fs:[rip+0xffffffffffffa4eb]
0x5b3d: jnz 0x5b49
0x5b3f: add rsp,0x48
0x5b43: ret 
0x5b44: call 0x18b0
0x5b49: call 0x19a0
0x5b4e: nop 
0x5b50: sub rsp,0x48
0x5b54: mov r9,rcx
0x5b57: mov rcx,qword ptr [rip+0x2049f2]
0x5b5e: movdqa xmm0,[rip+0x2049ba]
0x5b66: mov rax,qword ptr fs:[rip+0xffffffffffffa4b9]
0x5b6f: mov qword ptr [rsp + 0x38],rax
0x5b74: xor eax,eax
0x5b76: movaps xmmword ptr [rsp],xmm0
0x5b7a: test rsi,rsi
0x5b7d: mov qword ptr [rsp + 0x30],rcx
0x5b82: mov dword ptr [rsp],0xa
0x5b89: movdqa xmm0,[rip+0x20499f]
0x5b91: movaps xmmword ptr [rsp + 0x10],xmm0
0x5b96: movdqa xmm0,[rip+0x2049a2]
0x5b9e: movaps xmmword ptr [rsp + 0x20],xmm0
0x5ba3: jz 0x5bd7
0x5ba5: test rdx,rdx
0x5ba8: jz 0x5bd7
0x5baa: mov qword ptr [rsp + 0x28],rsi
0x5baf: mov qword ptr [rsp + 0x30],rdx
0x5bb4: mov rcx,rsp
0x5bb7: mov rdx,r8
0x5bba: mov rsi,r9
0x5bbd: call 0x5350
0x5bc2: mov rdi,qword ptr [rsp + 0x38]
0x5bc7: xor rdi,qword ptr fs:[rip+0xffffffffffffa458]
0x5bd0: jnz 0x5bdc
0x5bd2: add rsp,0x48
0x5bd6: ret 
0x5bd7: call 0x18b0
0x5bdc: call 0x19a0
0x5be1: nop dword ptr [rax + rax*0x1]
0x5be6: nop word ptr cs:[rax + rax*0x1]
0x5bf0: mov r8,-0x1
0x5bf7: jmp 0x5b50
0x5c00: mov rcx,rdx
0x5c03: mov r8,-0x1
0x5c0a: mov rdx,rsi
0x5c0d: mov rsi,rdi
0x5c10: xor edi,edi
0x5c12: jmp 0x5b50
0x5c20: mov r8,rcx
0x5c23: mov rcx,rdx
0x5c26: mov rdx,rsi
0x5c29: mov rsi,rdi
0x5c2c: xor edi,edi
0x5c2e: jmp 0x5b50
0x5c40: lea rcx,[rip+0x2043d9]
0x5c47: jmp 0x5350
0x5c50: lea rcx,[rip+0x2043c9]
0x5c57: mov rdx,rsi
0x5c5a: mov rsi,rdi
0x5c5d: xor edi,edi
0x5c5f: jmp 0x5350
0x5c70: lea rcx,[rip+0x2043a9]
0x5c77: mov rdx,-0x1
0x5c7e: jmp 0x5350
0x5de8: mov r8,rcx
0x5deb: mov rcx,rdx
0x5dee: lea rdx,[rip+0x1e5f]
0x5df5: mov esi,0x1
0x5dfa: xor eax,eax
0x5dfc: call 0x1bf0
0x5e01: jmp 0x5cec
0x60d0: xor r9d,r9d
0x60d3: cmp qword ptr [r8],0x0
0x60d7: jz 0x60eb
0x60d9: nop dword ptr [rax]
0x60e0: add r9,0x1
0x60e4: cmp qword ptr [r8 + r9*0x8],0x0
0x60e9: jnz 0x60e0
0x60eb: jmp 0x5cb0
0x60f0: sub rsp,0x68
0x60f4: mov r10,r8
0x60f7: xor r9d,r9d
0x60fa: mov rax,qword ptr fs:[rip+0xffffffffffff9f25]
0x6103: mov qword ptr [rsp + 0x58],rax
0x6108: xor eax,eax
0x610a: mov r8,rsp
0x610d: nop dword ptr [rax]
0x6110: mov eax,dword ptr [r10]
0x6113: cmp eax,0x2f
0x6116: ja 0x615a
0x6118: mov r11d,eax
0x611b: add r11,qword ptr [r10 + 0x10]
0x611f: add eax,0x8
0x6122: mov dword ptr [r10],eax
0x6125: mov rax,qword ptr [r11]
0x6128: test rax,rax
0x612b: mov qword ptr [r8 + r9*0x8],rax
0x612f: jz 0x613b
0x6131: add r9,0x1
0x6135: cmp r9,0xa
0x6139: jnz 0x6110
0x613b: call 0x5cb0
0x6140: mov rax,qword ptr [rsp + 0x58]
0x6145: xor rax,qword ptr fs:[rip+0xffffffffffff9eda]
0x614e: jnz 0x6155
0x6150: add rsp,0x68
0x6154: ret 
0x6155: call 0x19a0
0x615a: mov r11,qword ptr [r10 + 0x8]
0x615e: lea rax,[r11 + 0x8]
0x6162: mov qword ptr [r10 + 0x8],rax
0x6166: jmp 0x6125
0x6230: call 0x19a0
0x623c: mov rax,rbx
0x623f: add rbx,0x8
0x6243: jmp 0x61f6
0x6250: push rbx
0x6251: lea rsi,[rip+0x1a4a]
0x6258: mov edx,0x5
0x625d: xor edi,edi
0x625f: call 0x1960
0x6264: lea rdx,[rip+0x1a4c]
0x626b: mov rsi,rax
0x626e: mov edi,0x1
0x6273: xor eax,eax
0x6275: call 0x1b30
0x627a: lea rsi,[rip+0x1a4c]
0x6281: mov edx,0x5
0x6286: xor edi,edi
0x6288: call 0x1960
0x628d: lea rcx,[rip+0x1174]
0x6294: lea rdx,[rip+0x970]
0x629b: mov rsi,rax
0x629e: mov edi,0x1
0x62a3: xor eax,eax
0x62a5: call 0x1b30
0x62aa: mov rbx,qword ptr [rip+0x203f97]
0x62b1: lea rsi,[rip+0x1c48]
0x62b8: xor edi,edi
0x62ba: mov edx,0x5
0x62bf: call 0x1960
0x62c4: mov rsi,rbx
0x62c7: mov rdi,rax
0x62ca: pop rbx
0x62cb: jmp 0x1a40
0x62ea: nop word ptr [rax + rax*0x1]
0x62f0: mov rax,rdi
0x62f3: mul rsi
0x62f6: mov rdi,rax
0x62f9: seto al
0x62fc: test rdi,rdi
0x62ff: js 0x630b
0x6301: movzx eax,al
0x6304: test rax,rax
0x6307: jnz 0x630b
0x6309: jmp 0x62d0
0x630b: sub rsp,0x8
0x630f: call 0x6520
0x6314: nop 
0x6316: nop word ptr cs:[rax + rax*0x1]
0x6320: jmp 0x62d0
0x6366: nop word ptr cs:[rax + rax*0x1]
0x6370: mov rax,rsi
0x6373: mul rdx
0x6376: mov rsi,rax
0x6379: seto al
0x637c: test rsi,rsi
0x637f: js 0x638b
0x6381: movzx eax,al
0x6384: test rax,rax
0x6387: jnz 0x638b
0x6389: jmp 0x6330
0x638b: sub rsp,0x8
0x638f: call 0x6520
0x6394: nop 
0x6396: nop word ptr cs:[rax + rax*0x1]
0x63a0: test rdi,rdi
0x63a3: mov r9,rdx
0x63a6: mov rcx,qword ptr [rsi]
0x63a9: jz 0x63e0
0x63ab: xor edx,edx
0x63ad: mov rax,0x5555555555555554
0x63b7: div r9
0x63ba: cmp rax,rcx
0x63bd: jbe 0x63fb
0x63bf: mov rax,rcx
0x63c2: shr rax,1
0x63c5: lea rcx,[rax + rcx*0x1 + 0x1]
0x63ca: mov qword ptr [rsi],rcx
0x63cd: imul rcx,r9
0x63d1: mov rsi,rcx
0x63d4: jmp 0x6330
0x63e0: test rcx,rcx
0x63e3: jz 0x6408
0x63e5: mov rax,rcx
0x63e8: mul r9
0x63eb: seto dl
0x63ee: test rax,rax
0x63f1: movzx edx,dl
0x63f4: js 0x63fb
0x63f6: test rdx,rdx
0x63f9: jz 0x63ca
0x63fb: sub rsp,0x8
0x63ff: call 0x6520
0x6404: nop dword ptr [rax]
0x6408: xor edx,edx
0x640a: mov eax,0x80
0x640f: xor r8d,r8d
0x6412: div r9
0x6415: test rax,rax
0x6418: setz r8b
0x641c: lea rcx,[r8 + rax*0x1]
0x6420: jmp 0x63e5
0x6430: test rdi,rdi
0x6433: mov rax,qword ptr [rsi]
0x6436: jz 0x6460
0x6438: mov rdx,0x5555555555555553
0x6442: cmp rax,rdx
0x6445: ja 0x6471
0x6447: mov rdx,rax
0x644a: shr rdx,1
0x644d: lea rax,[rdx + rax*0x1 + 0x1]
0x6452: mov qword ptr [rsi],rax
0x6455: mov rsi,rax
0x6458: jmp 0x6330
0x6460: test rax,rax
0x6463: mov edx,0x80
0x6468: cmovz rax,rdx
0x646c: test rax,rax
0x646f: jns 0x6452
0x6471: sub rsp,0x8
0x6475: call 0x6520
0x647a: nop word ptr [rax + rax*0x1]
0x6480: push rbx
0x6481: mov rbx,rdi
0x6484: call 0x62d0
0x6489: mov rdx,rbx
0x648c: xor esi,esi
0x648e: mov rdi,rax
0x6491: pop rbx
0x6492: jmp 0x1a10
0x64a0: mov rax,rdi
0x64a3: sub rsp,0x8
0x64a7: mul rsi
0x64aa: seto dl
0x64ad: test rax,rax
0x64b0: js 0x64c9
0x64b2: movzx edx,dl
0x64b5: test rdx,rdx
0x64b8: jnz 0x64c9
0x64ba: call 0x1a50
0x64bf: test rax,rax
0x64c2: jz 0x64c9
0x64c4: add rsp,0x8
0x64c8: ret 
0x64c9: call 0x6520
0x64ce: nop 
0x6550: call 0x18b0
0x6555: nop word ptr cs:[rax + rax*0x1]
0x655f: nop 
0x65de: call 0x19a0
0x65e3: nop word ptr cs:[rax + rax*0x1]
0x65ed: nop dword ptr [rax]
0x6770: call 0x19a0
0x6775: nop 
0x6776: nop word ptr cs:[rax + rax*0x1]
0x6860: push r12
0x6862: push rbp
0x6863: mov rbp,rdi
0x6866: push rbx
0x6867: call 0x1900
0x686c: mov ebx,dword ptr [rbp]
0x686f: mov rdi,rbp
0x6872: mov r12,rax
0x6875: call 0x6980
0x687a: and ebx,0x20
0x687d: test ebx,ebx
0x687f: jnz 0x6898
0x6881: test eax,eax
0x6883: jz 0x688f
0x6885: test r12,r12
0x6888: mov eax,0xffffffff
0x688d: jz 0x68c8
0x688f: pop rbx
0x6890: pop rbp
0x6891: pop r12
0x6893: ret 
0x6898: test eax,eax
0x689a: jnz 0x68b8
0x689c: call 0x18c0
0x68a1: mov dword ptr [rax],0x0
0x68a7: mov eax,0xffffffff
0x68ac: pop rbx
0x68ad: pop rbp
0x68ae: pop r12
0x68b0: ret 
0x68b8: pop rbx
0x68b9: mov eax,0xffffffff
0x68be: pop rbp
0x68bf: pop r12
0x68c1: ret 
0x68c8: call 0x18c0
0x68cd: cmp dword ptr [rax],0x9
0x68d0: pop rbx
0x68d1: pop rbp
0x68d2: pop r12
0x68d4: setnz al
0x68d7: movzx eax,al
0x68da: neg eax
0x68dc: ret 
0x6980: push r12
0x6982: push rbp
0x6983: push rbx
0x6984: mov rbx,rdi
0x6987: call 0x1ac0
0x698c: test eax,eax
0x698e: mov rdi,rbx
0x6991: js 0x69e7
0x6993: call 0x1b00
0x6998: test eax,eax
0x699a: jnz 0x69c8
0x699c: mov rdi,rbx
0x699f: call 0x6a00
0x69a4: test eax,eax
0x69a6: jz 0x69e4
0x69a8: call 0x18c0
0x69ad: mov r12d,dword ptr [rax]
0x69b0: mov rdi,rbx
0x69b3: mov rbp,rax
0x69b6: call 0x1930
0x69bb: test r12d,r12d
0x69be: jnz 0x69f0
0x69c0: pop rbx
0x69c1: pop rbp
0x69c2: pop r12
0x69c4: ret 
0x69c8: mov rdi,rbx
0x69cb: call 0x1ac0
0x69d0: xor esi,esi
0x69d2: mov edx,0x1
0x69d7: mov edi,eax
0x69d9: call 0x19f0
0x69de: cmp rax,-0x1
0x69e2: jnz 0x699c
0x69e4: mov rdi,rbx
0x69e7: pop rbx
0x69e8: pop rbp
0x69e9: pop r12
0x69eb: jmp 0x1930
0x69f0: mov dword ptr [rbp],r12d
0x69f4: mov eax,0xffffffff
0x69f9: jmp 0x69c0
0x6a00: test rdi,rdi
0x6a03: push rbx
0x6a04: mov rbx,rdi
0x6a07: jz 0x6a1a
0x6a09: call 0x1b00
0x6a0e: test eax,eax
0x6a10: jz 0x6a1a
0x6a12: test dword ptr [rbx],0x100
0x6a18: jnz 0x6a28
0x6a1a: mov rdi,rbx
0x6a1d: pop rbx
0x6a1e: jmp 0x1ae0
0x6a28: mov rdi,rbx
0x6a2b: mov edx,0x1
0x6a30: xor esi,esi
0x6a32: call 0x6a40
0x6a37: mov rdi,rbx
0x6a3a: pop rbx
0x6a3b: jmp 0x1ae0
0x6a40: mov rax,qword ptr [rdi + 0x8]
0x6a44: cmp qword ptr [rdi + 0x10],rax
0x6a48: jz 0x6a50
0x6a4a: jmp 0x1b50
0x6a50: mov rax,qword ptr [rdi + 0x20]
0x6a54: cmp qword ptr [rdi + 0x28],rax
0x6a58: jnz 0x6a4a
0x6a5a: cmp qword ptr [rdi + 0x48],0x0
0x6a5f: jnz 0x6a4a
0x6a61: push r12
0x6a63: push rbp
0x6a64: mov r12d,edx
0x6a67: push rbx
0x6a68: mov rbp,rsi
0x6a6b: mov rbx,rdi
0x6a6e: call 0x1ac0
0x6a73: mov edx,r12d
0x6a76: mov rsi,rbp
0x6a79: mov edi,eax
0x6a7b: call 0x19f0
0x6a80: cmp rax,-0x1
0x6a84: jz 0x6a92
0x6a86: and dword ptr [rbx],0xffffffef
0x6a89: mov qword ptr [0x90 + rbx],rax
0x6a90: xor eax,eax
0x6a92: pop rbx
0x6a93: pop rbp
0x6a94: pop r12
0x6a96: ret 
0x6aa0: push r15
0x6aa2: push r14
0x6aa4: mov r15,rdx
0x6aa7: push r13
0x6aa9: push r12
0x6aab: lea r12,[rip+0x202f1e]
0x6ab2: push rbp
0x6ab3: lea rbp,[rip+0x202f1e]
0x6aba: push rbx
0x6abb: mov r13d,edi
0x6abe: mov r14,rsi
0x6ac1: sub rbp,r12
0x6ac4: sub rsp,0x8
0x6ac8: sar rbp,0x3
0x6acc: call 0x1858
0x6ad1: test rbp,rbp
0x6ad4: jz 0x6af6
0x6ad6: xor ebx,ebx
0x6ad8: nop dword ptr [rax + rax*0x1]
0x6ae0: mov rdx,r15
0x6ae3: mov rsi,r14
0x6ae6: mov edi,r13d
0x6ae9: call qword ptr [r12 + rbx*0x8]
0x6aed: add rbx,0x1
0x6af1: cmp rbp,rbx
0x6af4: jnz 0x6ae0
0x6af6: add rsp,0x8
0x6afa: pop rbx
0x6afb: pop rbp
0x6afc: pop r12
0x6afe: pop r13
0x6b00: pop r14
0x6b02: pop r15
0x6b04: ret 
0x6b10: ret 
0x6b30: sub rsp,0x8
0x6b34: add rsp,0x8
0x6b38: ret 
