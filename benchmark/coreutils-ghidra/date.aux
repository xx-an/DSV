0x26f0: sub rsp,0x8
0x26f4: mov rax,qword ptr [rip+0x2158d5]
0x26fb: test rax,rax
0x26fe: jz 0x2702
0x2700: call rax
0x2702: add rsp,0x8
0x2706: ret 
0x2710: push qword ptr [rip+0x21567a]
0x2716: jmp qword ptr [rip+0x21567c]
0x2726: push 0x0
0x272b: jmp 0x2710
0x2736: push 0x1
0x273b: jmp 0x2710
0x2746: push 0x2
0x274b: jmp 0x2710
0x2756: push 0x3
0x275b: jmp 0x2710
0x2766: push 0x4
0x276b: jmp 0x2710
0x2776: push 0x5
0x277b: jmp 0x2710
0x2786: push 0x6
0x278b: jmp 0x2710
0x2796: push 0x7
0x279b: jmp 0x2710
0x27a6: push 0x8
0x27ab: jmp 0x2710
0x27b0: jmp qword ptr [rip+0x215632]
0x27b6: push 0x9
0x27bb: jmp 0x2710
0x27c0: jmp qword ptr [rip+0x21562a]
0x27c6: push 0xa
0x27cb: jmp 0x2710
0x27d6: push 0xb
0x27db: jmp 0x2710
0x27e6: push 0xc
0x27eb: jmp 0x2710
0x27f6: push 0xd
0x27fb: jmp 0x2710
0x2806: push 0xe
0x280b: jmp 0x2710
0x2816: push 0xf
0x281b: jmp 0x2710
0x2826: push 0x10
0x282b: jmp 0x2710
0x2836: push 0x11
0x283b: jmp 0x2710
0x2846: push 0x12
0x284b: jmp 0x2710
0x2850: jmp qword ptr [rip+0x2155e2]
0x2856: push 0x13
0x285b: jmp 0x2710
0x2866: push 0x14
0x286b: jmp 0x2710
0x2876: push 0x15
0x287b: jmp 0x2710
0x2886: push 0x16
0x288b: jmp 0x2710
0x2896: push 0x17
0x289b: jmp 0x2710
0x28a6: push 0x18
0x28ab: jmp 0x2710
0x28b6: push 0x19
0x28bb: jmp 0x2710
0x28c6: push 0x1a
0x28cb: jmp 0x2710
0x28d6: push 0x1b
0x28db: jmp 0x2710
0x28e6: push 0x1c
0x28eb: jmp 0x2710
0x28f6: push 0x1d
0x28fb: jmp 0x2710
0x2906: push 0x1e
0x290b: jmp 0x2710
0x2916: push 0x1f
0x291b: jmp 0x2710
0x2926: push 0x20
0x292b: jmp 0x2710
0x2930: jmp qword ptr [rip+0x215572]
0x2936: push 0x21
0x293b: jmp 0x2710
0x2946: push 0x22
0x294b: jmp 0x2710
0x2956: push 0x23
0x295b: jmp 0x2710
0x2966: push 0x24
0x296b: jmp 0x2710
0x2976: push 0x25
0x297b: jmp 0x2710
0x2986: push 0x26
0x298b: jmp 0x2710
0x2996: push 0x27
0x299b: jmp 0x2710
0x29a6: push 0x28
0x29ab: jmp 0x2710
0x29b0: jmp qword ptr [rip+0x215532]
0x29b6: push 0x29
0x29bb: jmp 0x2710
0x29c6: push 0x2a
0x29cb: jmp 0x2710
0x29d6: push 0x2b
0x29db: jmp 0x2710
0x29e6: push 0x2c
0x29eb: jmp 0x2710
0x29f6: push 0x2d
0x29fb: jmp 0x2710
0x2a06: push 0x2e
0x2a0b: jmp 0x2710
0x2a16: push 0x2f
0x2a1b: jmp 0x2710
0x2a26: push 0x30
0x2a2b: jmp 0x2710
0x2a36: push 0x31
0x2a3b: jmp 0x2710
0x2a46: push 0x32
0x2a4b: jmp 0x2710
0x2a56: push 0x33
0x2a5b: jmp 0x2710
0x2a66: push 0x34
0x2a6b: jmp 0x2710
0x2a76: push 0x35
0x2a7b: jmp 0x2710
0x2a86: push 0x36
0x2a8b: jmp 0x2710
0x2a96: push 0x37
0x2a9b: jmp 0x2710
0x2aa6: push 0x38
0x2aab: jmp 0x2710
0x2ab6: push 0x39
0x2abb: jmp 0x2710
0x2ac6: push 0x3a
0x2acb: jmp 0x2710
0x2ad6: push 0x3b
0x2adb: jmp 0x2710
0x2ae6: push 0x3c
0x2aeb: jmp 0x2710
0x2af6: push 0x3d
0x2afb: jmp 0x2710
0x2b06: push 0x3e
0x2b0b: jmp 0x2710
0x2b16: push 0x3f
0x2b1b: jmp 0x2710
0x2b26: push 0x40
0x2b2b: jmp 0x2710
0x2b36: push 0x41
0x2b3b: jmp 0x2710
0x2b46: push 0x42
0x2b4b: jmp 0x2710
0x2b56: push 0x43
0x2b5b: jmp 0x2710
0x2b60: jmp qword ptr [rip+0x21547a]
0x2b70: mov eax,edi
0x2b72: mov ecx,0x64
0x2b77: push rbx
0x2b78: cdq 
0x2b79: mov rbx,rsi
0x2b7c: idiv ecx
0x2b7e: xor ecx,ecx
0x2b80: lea r8d,[rax + 0x13]
0x2b84: mov esi,edx
0x2b86: sar esi,0x1f
0x2b89: mov eax,r8d
0x2b8c: xor edx,esi
0x2b8e: sar eax,0x1f
0x2b91: xor r8d,eax
0x2b94: cmp edi,0xfffff894
0x2b9a: lea rdi,[rip+0x10462]
0x2ba1: setge cl
0x2ba4: sub edx,esi
0x2ba6: sub r8d,eax
0x2ba9: add rcx,rdi
0x2bac: mov r9d,edx
0x2baf: mov rdi,rbx
0x2bb2: or rdx,-0x1
0x2bb6: mov esi,0x1
0x2bbb: xor eax,eax
0x2bbd: call 0x2b50
0x2bc2: mov rax,rbx
0x2bc5: pop rbx
0x2bc6: ret 
0x2dc9: nop dword ptr [rax]
0x2fa3: jmp 0x316b
0x30a3: jmp 0x3018
0x31d7: mov edi,0x2006c
0x31dc: call 0x2a00
0x31e1: cmp byte ptr [rax],0x0
0x31e4: mov rbx,rax
0x31e7: jnz 0x2eed
0x31ed: lea rbx,[rip+0xe52b]
0x31f4: jmp 0x2eed
0x327d: mov dword ptr [rip+0x214e35],ecx
0x3283: lea rbx,[rdi + 0x1]
0x3287: jmp 0x2ee4
0x3333: call 0x2850
0x338a: jmp 0x32cb
0x33ce: nop 
0x33fa: hlt 
0x3400: lea rdi,[rip+0x214c99]
0x3407: push rbp
0x3408: lea rax,[rip+0x214c91]
0x340f: cmp rax,rdi
0x3412: mov rbp,rsp
0x3415: jz 0x3430
0x3417: mov rax,qword ptr [rip+0x214ba2]
0x341e: test rax,rax
0x3421: jz 0x3430
0x3423: pop rbp
0x3424: jmp rax
0x3430: pop rbp
0x3431: ret 
0x3440: lea rdi,[rip+0x214c59]
0x3447: lea rsi,[rip+0x214c52]
0x344e: push rbp
0x344f: sub rsi,rdi
0x3452: mov rbp,rsp
0x3455: sar rsi,0x3
0x3459: mov rax,rsi
0x345c: shr rax,0x3f
0x3460: add rsi,rax
0x3463: sar rsi,1
0x3466: jz 0x3480
0x3468: mov rax,qword ptr [rip+0x214b69]
0x346f: test rax,rax
0x3472: jz 0x3480
0x3474: pop rbp
0x3475: jmp rax
0x3480: pop rbp
0x3481: ret 
0x3490: cmp byte ptr [rip+0x214c51],0x0
0x3497: jnz 0x34c8
0x3499: cmp qword ptr [rip+0x214b3f],0x0
0x34a1: push rbp
0x34a2: mov rbp,rsp
0x34a5: jz 0x34b3
0x34a7: mov rdi,qword ptr [rip+0x214b5a]
0x34ae: call 0x2b60
0x34b3: call 0x3400
0x34b8: mov byte ptr [rip+0x214c29],0x1
0x34bf: pop rbp
0x34c0: ret 
0x34c8: ret 
0x34d0: push rbp
0x34d1: mov rbp,rsp
0x34d4: pop rbp
0x34d5: jmp 0x3440
0x3590: mov rdi,qword ptr [rsp]
0x3594: lea rsi,[rsp + 0x50]
0x3599: call 0x5ed0
0x359e: mov rdi,rax
0x35a1: call 0xc730
0x35a6: lea rsi,[rip+0xe0b7]
0x35ad: mov rbx,rax
0x35b0: mov edx,0x5
0x35b5: xor edi,edi
0x35b7: call 0x2820
0x35bc: mov rcx,rbx
0x35bf: mov rdx,rax
0x35c2: xor esi,esi
0x35c4: xor eax,eax
0x35c6: xor edi,edi
0x35c8: call 0x2a90
0x35cd: xor eax,eax
0x35cf: jmp 0x356e
0x35d8: lea rsi,[rip+0xff9b]
0x35df: mov edi,0x2
0x35e4: call 0x2a50
0x35e9: mov r8d,dword ptr [rsp + 0x8]
0x35ee: mov rdi,qword ptr [rip+0x214ab3]
0x35f5: mov rsi,r12
0x35f8: mov rcx,rbp
0x35fb: mov rdx,rbx
0x35fe: call 0x5e20
0x3603: lea rsi,[rip+0xfca5]
0x360a: mov edi,0x2
0x360f: call 0x2a50
0x3614: jmp 0x3549
0x362a: mov eax,0x1
0x362f: jmp 0x356e
0x3634: call 0x2850
0x3639: nop dword ptr [rax]
0x3ce0: mov edi,0x1
0x3ce5: jmp 0x3640
0x3e90: push r15
0x3e92: push r14
0x3e94: mov r14,rdi
0x3e97: push r13
0x3e99: push r12
0x3e9b: xor edi,edi
0x3e9d: push rbp
0x3e9e: push rbx
0x3e9f: mov rbp,rsi
0x3ea2: lea rsi,[rip+0xef18]
0x3ea9: mov r12,rdx
0x3eac: mov edx,0x5
0x3eb1: sub rsp,0x8
0x3eb5: mov rbx,qword ptr [rip+0x214224]
0x3ebc: call 0x2820
0x3ec1: mov rdi,rax
0x3ec4: mov rsi,rbx
0x3ec7: call 0x2920
0x3ecc: mov r15,qword ptr [r14]
0x3ecf: test r15,r15
0x3ed2: jz 0x3f68
0x3ed8: xor r13d,r13d
0x3edb: xor ebx,ebx
0x3edd: jmp 0x3f18
0x3ee0: mov rdi,r15
0x3ee3: add rbx,0x1
0x3ee7: mov r13,rbp
0x3eea: call 0xc730
0x3eef: mov rdi,qword ptr [rip+0x2141ea]
0x3ef6: lea rdx,[rip+0xeed9]
0x3efd: mov rcx,rax
0x3f00: mov esi,0x1
0x3f05: xor eax,eax
0x3f07: add rbp,r12
0x3f0a: call 0x2b00
0x3f0f: mov r15,qword ptr [r14 + rbx*0x8]
0x3f13: test r15,r15
0x3f16: jz 0x3f68
0x3f18: test rbx,rbx
0x3f1b: jz 0x3ee0
0x3f1d: mov rdx,r12
0x3f20: mov rsi,rbp
0x3f23: mov rdi,r13
0x3f26: call 0x2910
0x3f2b: test eax,eax
0x3f2d: jnz 0x3ee0
0x3f2f: mov rdi,r15
0x3f32: add rbx,0x1
0x3f36: add rbp,r12
0x3f39: call 0xc730
0x3f3e: mov rdi,qword ptr [rip+0x21419b]
0x3f45: lea rdx,[rip+0xee92]
0x3f4c: mov rcx,rax
0x3f4f: mov esi,0x1
0x3f54: xor eax,eax
0x3f56: call 0x2b00
0x3f5b: mov r15,qword ptr [r14 + rbx*0x8]
0x3f5f: test r15,r15
0x3f62: jnz 0x3f18
0x3f64: nop dword ptr [rax]
0x3f68: mov rdi,qword ptr [rip+0x214171]
0x3f6f: mov rax,qword ptr [rdi + 0x28]
0x3f73: cmp rax,qword ptr [rdi + 0x30]
0x3f77: jnc 0x3f98
0x3f79: lea rdx,[rax + 0x1]
0x3f7d: mov qword ptr [rdi + 0x28],rdx
0x3f81: mov byte ptr [rax],0xa
0x3f84: add rsp,0x8
0x3f88: pop rbx
0x3f89: pop rbp
0x3f8a: pop r12
0x3f8c: pop r13
0x3f8e: pop r14
0x3f90: pop r15
0x3f92: ret 
0x3f98: add rsp,0x8
0x3f9c: mov esi,0xa
0x3fa1: pop rbx
0x3fa2: pop rbp
0x3fa3: pop r12
0x3fa5: pop r13
0x3fa7: pop r14
0x3fa9: pop r15
0x3fab: jmp 0x28a0
0x4003: mov rdx,r15
0x4006: mov rsi,rbp
0x4009: mov rdi,rbx
0x400c: call 0x3e90
0x4011: call r13
0x4014: mov rax,-0x1
0x401b: jmp 0x3fe6
0x4020: push r14
0x4022: push r13
0x4024: push r12
0x4026: push rbp
0x4027: push rbx
0x4028: mov r14,qword ptr [rsi]
0x402b: test r14,r14
0x402e: jz 0x4061
0x4030: mov r12,rcx
0x4033: mov r13,rdi
0x4036: mov rbp,rdx
0x4039: lea rbx,[rsi + 0x8]
0x403d: jmp 0x404f
0x4040: mov r14,qword ptr [rbx]
0x4043: add rbp,r12
0x4046: add rbx,0x8
0x404a: test r14,r14
0x404d: jz 0x4061
0x404f: mov rdx,r12
0x4052: mov rsi,rbp
0x4055: mov rdi,r13
0x4058: call 0x2910
0x405d: test eax,eax
0x405f: jnz 0x4040
0x4061: pop rbx
0x4062: mov rax,r14
0x4065: pop rbp
0x4066: pop r12
0x4068: pop r13
0x406a: pop r14
0x406c: ret 
0x4070: mov qword ptr [rip+0x214081],rdi
0x4077: ret 
0x4080: mov byte ptr [rip+0x214069],dil
0x4087: ret 
0x4090: push rbp
0x4091: push rbx
0x4092: sub rsp,0x8
0x4096: mov rdi,qword ptr [rip+0x21400b]
0x409d: call 0xd8c0
0x40a2: test eax,eax
0x40a4: jz 0x40bc
0x40a6: call 0x2780
0x40ab: cmp byte ptr [rip+0x21403e],0x0
0x40b2: mov rbx,rax
0x40b5: jz 0x40d3
0x40b7: cmp dword ptr [rax],0x20
0x40ba: jnz 0x40d3
0x40bc: mov rdi,qword ptr [rip+0x21401d]
0x40c3: call 0xd8c0
0x40c8: test eax,eax
0x40ca: jnz 0x4112
0x40cc: add rsp,0x8
0x40d0: pop rbx
0x40d1: pop rbp
0x40d2: ret 
0x40d3: lea rsi,[rip+0xed09]
0x40da: xor edi,edi
0x40dc: mov edx,0x5
0x40e1: call 0x2820
0x40e6: mov rdi,qword ptr [rip+0x21400b]
0x40ed: mov rbp,rax
0x40f0: test rdi,rdi
0x40f3: jz 0x411d
0x40f5: call 0xc530
0x40fa: mov esi,dword ptr [rbx]
0x40fc: lea rdx,[rip+0xecec]
0x4103: mov rcx,rax
0x4106: mov r8,rbp
0x4109: xor edi,edi
0x410b: xor eax,eax
0x410d: call 0x2a90
0x4112: mov edi,dword ptr [rip+0x213f08]
0x4118: call 0x27b0
0x411d: mov esi,dword ptr [rbx]
0x411f: lea rdx,[rip+0xecba]
0x4126: mov rcx,rax
0x4129: xor edi,edi
0x412b: xor eax,eax
0x412d: call 0x2a90
0x4132: jmp 0x4112
0x48a8: add rsp,0x20
0x48ac: movsxd r10,dword ptr [rsp + 0x40]
0x48b1: mov edx,0x0
0x48b6: mov rcx,r15
0x48b9: not rcx
0x48bc: test r10d,r10d
0x48bf: cmovns rdx,r10
0x48c3: cmp rax,rdx
0x48c6: mov r13,rdx
0x48c9: cmovnc r13,rax
0x48cd: cmp rcx,r13
0x48d0: jbe 0x42bf
0x48d6: test r12,r12
0x48d9: jnz 0x56db
0x56db: cmp rax,rdx
0x56de: jnc 0x5737
0x56e0: movsxd rdx,r10d
0x56e3: mov rdi,rdx
0x56e6: sub rdi,rax
0x56e9: mov eax,dword ptr [rsp + 0x8]
0x56ed: cmp eax,0x30
0x56f0: jz 0x5ada
0x56f6: cmp eax,0x2b
0x56f9: jz 0x5ada
0x56ff: xor edx,edx
0x5701: test rdi,rdi
0x5704: jz 0x5737
0x5706: mov dword ptr [rsp + 0x34],ebp
0x570a: mov qword ptr [rsp + 0x40],rbx
0x570f: mov rbp,rdi
0x5712: mov rbx,rdx
0x5715: nop dword ptr [rax]
0x5718: mov rsi,r12
0x571b: mov edi,0x20
0x5720: add rbx,0x1
0x5724: call 0x2900
0x5729: cmp rbp,rbx
0x572c: jnz 0x5718
0x572e: mov ebp,dword ptr [rsp + 0x34]
0x5732: mov rbx,qword ptr [rsp + 0x40]
0x5737: sub rsp,0x8
0x573b: mov r9d,r14d
0x573e: mov ecx,ebp
0x5740: mov eax,dword ptr [0x508 + rsp]
0x5747: mov rdi,r12
0x574a: push rax
0x574b: push qword ptr [rsp + 0x20]
0x574f: push qword ptr [rsp + 0x30]
0x5753: mov r8d,dword ptr [rsp + 0x28]
0x5758: mov rdx,qword ptr [rsp + 0x20]
0x575d: mov rsi,qword ptr [rsp + 0x58]
0x5762: call 0x4200
0x5767: add rsp,0x20
0x576b: jmp 0x48df
0x57ba: xor ebp,ebp
0x5ada: test rdi,rdi
0x5add: jz 0x5737
0x5ae3: xor edx,edx
0x5ae5: mov dword ptr [rsp + 0x34],ebp
0x5ae9: mov qword ptr [rsp + 0x40],rbx
0x5aee: mov rbp,rdi
0x5af1: mov rbx,rdx
0x5af4: nop dword ptr [rax]
0x5af8: mov rsi,r12
0x5afb: mov edi,0x30
0x5b00: add rbx,0x1
0x5b04: call 0x2900
0x5b09: cmp rbp,rbx
0x5b0c: jnz 0x5af8
0x5b0e: jmp 0x572e
0x5d10: cmp qword ptr [rsp + 0x38],0x0
0x5d16: jz 0x4c40
0x5d1c: xor edx,edx
0x5d1e: mov qword ptr [rsp + 0x50],rbx
0x5d23: mov rbx,rdx
0x5d26: mov rsi,r12
0x5d29: mov edi,0x30
0x5d2e: add rbx,0x1
0x5d32: call 0x2900
0x5d37: cmp qword ptr [rsp + 0x38],rbx
0x5d3c: jnz 0x5d26
0x5d3e: jmp 0x4c3b
0x5d76: cmp qword ptr [rsp + 0x38],0x0
0x5d7c: jz 0x58f4
0x5d82: xor edx,edx
0x5d84: mov qword ptr [rsp + 0x50],rbx
0x5d89: mov dword ptr [rsp + 0x5c],r10d
0x5d8e: mov rbx,rdx
0x5d91: mov rsi,r12
0x5d94: mov edi,0x30
0x5d99: add rbx,0x1
0x5d9d: call 0x2900
0x5da2: cmp qword ptr [rsp + 0x38],rbx
0x5da7: jnz 0x5d91
0x5da9: jmp 0x58ea
0x5df8: call 0x2850
0x5e6b: call 0x2850
0x5e80: sub rsp,0x28
0x5e84: xor edi,edi
0x5e86: mov rsi,rsp
0x5e89: mov rax,qword ptr fs:[rip+0xffffffffffffa196]
0x5e92: mov qword ptr [rsp + 0x18],rax
0x5e97: xor eax,eax
0x5e99: call 0x27d0
0x5e9e: mov rcx,qword ptr [rsp + 0x18]
0x5ea3: xor rcx,qword ptr fs:[rip+0xffffffffffffa17c]
0x5eac: mov rax,qword ptr [rsp]
0x5eb0: mov rdx,qword ptr [rsp + 0x8]
0x5eb5: jnz 0x5ebc
0x5eb7: add rsp,0x28
0x5ebb: ret 
0x5ebc: call 0x2850
0x5ec1: nop word ptr cs:[rax + rax*0x1]
0x5ecb: nop dword ptr [rax + rax*0x1]
0x5ed0: test rdi,rdi
0x5ed3: lea rcx,[rsi + 0x14]
0x5ed7: mov byte ptr [rsi + 0x14],0x0
0x5edb: mov r9,0x6666666666666667
0x5ee5: mov rsi,-0x3333333333333333
0x5eef: mov r8d,0x30
0x5ef5: js 0x5f33
0x5ef7: nop word ptr [rax + rax*0x1]
0x5f00: mov rax,rdi
0x5f03: sub rcx,0x1
0x5f07: mul rsi
0x5f0a: shr rdx,0x3
0x5f0e: lea rax,[rdx + rdx*0x4]
0x5f12: add rax,rax
0x5f15: sub rdi,rax
0x5f18: add edi,0x30
0x5f1b: test rdx,rdx
0x5f1e: mov byte ptr [rcx],dil
0x5f21: mov rdi,rdx
0x5f24: jnz 0x5f00
0x5f26: mov rax,rcx
0x5f29: ret 
0x5f30: mov rcx,rsi
0x5f33: mov rax,rdi
0x5f36: lea rsi,[rcx - 0x1]
0x5f3a: imul r9
0x5f3d: mov rax,rdi
0x5f40: sar rax,0x3f
0x5f44: sar rdx,0x2
0x5f48: sub rdx,rax
0x5f4b: lea rax,[rdx + rdx*0x4]
0x5f4f: lea eax,[r8 + rax*0x2]
0x5f53: sub eax,edi
0x5f55: test rdx,rdx
0x5f58: mov rdi,rdx
0x5f5b: mov byte ptr [rcx - 0x1],al
0x5f5e: jnz 0x5f30
0x5f60: sub rcx,0x2
0x5f64: mov byte ptr [rsi - 0x1],0x2d
0x5f68: mov rax,rcx
0x5f6b: ret 
0x6218: movaps xmmword ptr [rsp + 0x50],xmm0
0x621d: movaps xmmword ptr [rsp + 0x60],xmm1
0x6222: movaps xmmword ptr [rsp + 0x70],xmm2
0x6227: movaps xmmword ptr [0x80 + rsp],xmm3
0x622f: movaps xmmword ptr [0x90 + rsp],xmm4
0x6237: movaps xmmword ptr [0xa0 + rsp],xmm5
0x623f: movaps xmmword ptr [0xb0 + rsp],xmm6
0x6247: movaps xmmword ptr [0xc0 + rsp],xmm7
0x62cd: call 0x2850
0x62d2: nop dword ptr [rax]
0x62d6: nop word ptr cs:[rax + rax*0x1]
0x6400: mov eax,dword ptr [rdi]
0x6402: mov edx,dword ptr [rdi + 0x4]
0x6405: xor eax,dword ptr [rsi]
0x6407: xor edx,dword ptr [rsi + 0x4]
0x640a: or eax,edx
0x640c: mov edx,dword ptr [rdi + 0x8]
0x640f: xor edx,dword ptr [rsi + 0x8]
0x6412: or eax,edx
0x6414: mov edx,dword ptr [rdi + 0xc]
0x6417: xor edx,dword ptr [rsi + 0xc]
0x641a: or eax,edx
0x641c: mov edx,dword ptr [rdi + 0x10]
0x641f: xor edx,dword ptr [rsi + 0x10]
0x6422: or eax,edx
0x6424: mov edx,dword ptr [rdi + 0x14]
0x6427: xor edx,dword ptr [rsi + 0x14]
0x642a: or eax,edx
0x642c: setz al
0x642f: ret 
0x678c: call 0x2850
0x6791: nop dword ptr [rax + rax*0x1]
0x6796: nop word ptr cs:[rax + rax*0x1]
0x6c72: call 0x2850
0x6c77: nop word ptr [rax + rax*0x1]
0x7543: mov rdx,r14
0x7546: movzx ecx,al
0x7549: sub eax,0x61
0x754c: lea esi,[rcx - 0x20]
0x754f: cmp al,0x1a
0x7551: cmovc ecx,esi
0x7554: add rdx,0x1
0x7558: mov byte ptr [rdx - 0x1],cl
0x755b: movzx eax,byte ptr [rdx]
0x755e: test al,al
0x7560: jnz 0x7546
0x8760: call 0x2850
0x8cd4: mov rdi,r15
0x8cd7: call 0xd5b0
0x954d: lea rdi,[0xb0 + rsp]
0x9555: mov rsi,rbp
0x9558: call 0x6400
0x955d: test al,al
0x955f: jnz 0x9988
0x960b: cmp r14d,ebp
0x960e: jnz 0xa15d
0x9614: mov ebx,dword ptr [rsp + 0x28]
0x9618: cmp r11d,ebx
0x961b: jnz 0xa15d
0x9621: test al,al
0x9623: jz 0x8ccb
0x9629: lea rsi,[rip+0xa2b0]
0x9630: mov edx,0x5
0x9635: xor edi,edi
0x9637: lea rbx,[0x3e0 + rsp]
0x963f: call 0x2820
0x9644: mov rdi,rax
0x9647: xor eax,eax
0x9649: call 0x61f0
0x964e: lea rdi,[0xb0 + rsp]
0x9656: mov rdx,rbx
0x9659: mov rsi,r13
0x965c: call 0x66e0
0x9661: lea rsi,[rip+0x9c2a]
0x9668: mov r12,rax
0x966b: mov edx,0x5
0x9670: xor edi,edi
0x9672: call 0x2820
0x9677: mov rsi,r12
0x967a: mov rdi,rax
0x967d: xor eax,eax
0x967f: call 0x61f0
0x9684: mov rdi,qword ptr [rsp + 0x18]
0x9689: mov rdx,rbx
0x968c: mov rsi,r13
0x968f: call 0x66e0
0x9694: lea rsi,[rip+0x9c15]
0x969b: mov r12,rax
0x969e: mov edx,0x5
0x96a3: xor edi,edi
0x96a5: call 0x2820
0x96aa: mov rsi,r12
0x96ad: mov rdi,rax
0x96b0: xor eax,eax
0x96b2: call 0x61f0
0x96b7: lea rsi,[rip+0x9bf1]
0x96be: mov r12d,0x1
0x96c4: mov rax,rsi
0x97bd: cmp r14d,ebp
0x97c0: jz 0x97df
0x97c2: lea rsi,[rip+0xa1b7]
0x97c9: xor edi,edi
0x97cb: mov edx,0x5
0x97d0: call 0x2820
0x97d5: mov rdi,rax
0x97d8: xor eax,eax
0x97da: call 0x61f0
0x9959: mov rsi,qword ptr [rsp + 0x18]
0x995e: lea rdi,[0xb0 + rsp]
0x9966: mov qword ptr [rsp + 0x20],rdx
0x996b: call 0x6400
0x9970: mov rdx,qword ptr [rsp + 0x20]
0x9975: mov ebp,eax
0x9977: mov rdi,rdx
0x997a: call 0xd5b0
0x997f: test bpl,bpl
0x9982: jz 0x957b
0x9988: cmp qword ptr [0x260 + rsp],0x0
0x9991: jz 0x9c27
0x9997: cmp qword ptr [0x258 + rsp],0x0
0x99a0: jnz 0x9d6e
0x99a6: mov rax,qword ptr [0x1b8 + rsp]
0x99ae: test rax,rax
0x99b1: jle 0x99c8
0x99b3: xor r12d,r12d
0x99b6: mov esi,dword ptr [0x1c0 + rsp]
0x99bd: cmp dword ptr [0x88 + rsp],esi
0x99c4: setnz r12b
0x99c8: sub rax,r12
0x99cb: imul rcx,rax,0x7
0x99cf: jo 0x9a1a
0x99d1: mov eax,dword ptr [0x1c0 + rsp]
0x99d8: sub eax,dword ptr [0x88 + rsp]
0x99df: mov esi,0x7
0x99e4: add eax,0x7
0x99e7: cdq 
0x99e8: idiv esi
0x99ea: movsxd rax,edx
0x99ed: add rax,rcx
0x99f0: jo 0x9a1a
0x99f2: movsxd rdx,dword ptr [rsp + 0x7c]
0x99f7: add rax,rdx
0x99fa: seto dl
0x99fd: movsxd rcx,eax
0x9a00: mov dword ptr [rsp + 0x7c],eax
0x9a04: cmp rax,rcx
0x9a07: movzx edx,dl
0x9a0a: mov ecx,0x1
0x9a0f: cmovnz edx,ecx
0x9a12: test edx,edx
0x9a14: jz 0x9ba3
0x9a1a: cmp byte ptr [0x289 + rsp],0x0
0x9a22: jz 0x8ccb
0x9a28: mov rdi,qword ptr [rsp + 0x18]
0x9a2d: lea rdx,[0x300 + rsp]
0x9a35: mov rsi,r13
0x9a38: call 0x66e0
0x9a3d: lea rsi,[0x3e0 + rsp]
0x9a45: mov r14d,dword ptr [0x1c0 + rsp]
0x9a4d: mov rbp,qword ptr [0x1b8 + rsp]
0x9a55: mov rdi,r13
0x9a58: mov r12,rax
0x9a5b: call 0x67a0
0x9a60: lea rsi,[rip+0x9f69]
0x9a67: mov rbx,rax
0x9a6a: xor edi,edi
0x9a6c: mov edx,0x5
0x9a71: call 0x2820
0x9a76: mov r8,r12
0x9a79: mov rdi,rax
0x9a7c: mov ecx,r14d
0x9a7f: mov rdx,rbp
0x9a82: mov rsi,rbx
0x9a85: xor eax,eax
0x9a87: call 0x61f0
0x9a8c: jmp 0x8ccb
0x9ba3: mov rsi,qword ptr [rsp + 0x18]
0x9ba8: mov rdi,r15
0x9bab: mov dword ptr [0x90 + rsp],0xffffffff
0x9bb6: call 0xd670
0x9bbb: cmp rax,-0x1
0x9bbf: mov r14,rax
0x9bc2: jz 0x9a1a
0x9bc8: cmp byte ptr [0x289 + rsp],0x0
0x9bd0: jz 0x9d7e
0x9bd6: lea rbp,[0x300 + rsp]
0x9bde: mov rdi,qword ptr [rsp + 0x18]
0x9be3: mov rsi,r13
0x9be6: mov rdx,rbp
0x9be9: call 0x66e0
0x9bee: lea rsi,[0x3e0 + rsp]
0x9bf6: mov rdi,r13
0x9bf9: mov rbp,rax
0x9bfc: call 0x67a0
0x9c01: lea rsi,[rip+0x970d]
0x9c08: mov r12,rax
0x9c0b: mov edx,0x5
0x9c10: xor edi,edi
0x9c12: call 0x2820
0x9c17: mov rdx,rbp
0x9c1a: mov rdi,rax
0x9c1d: mov rsi,r12
0x9c20: xor eax,eax
0x9c22: call 0x61f0
0x9c27: cmp byte ptr [0x289 + rsp],0x0
0x9c2f: jz 0x9d7e
0x9c35: cmp qword ptr [0x258 + rsp],0x0
0x9c3e: mov rax,qword ptr [0x260 + rsp]
0x9c46: jnz 0xa08f
0x9c4c: test rax,rax
0x9c4f: jz 0xa4b1
0x9c55: lea rbp,[0x300 + rsp]
0x9c5d: mov rdi,qword ptr [rsp + 0x18]
0x9c62: mov rdx,rbp
0x9c65: mov rsi,r13
0x9c68: call 0x66e0
0x9c6d: lea rsi,[rip+0x96d4]
0x9c74: mov rbx,rax
0x9c77: mov edx,0x5
0x9c7c: xor edi,edi
0x9c7e: call 0x2820
0x9c83: mov rsi,rbx
0x9c86: mov rdi,rax
0x9c89: xor eax,eax
0x9c8b: call 0x61f0
0x9c90: mov rax,qword ptr [0x218 + rsp]
0x9c98: mov rdx,qword ptr [0x220 + rsp]
0x9ca0: movzx ebx,byte ptr [0x289 + rsp]
0x9ca8: or rdx,rax
0x9cab: mov rsi,rdx
0x9cae: or rsi,qword ptr [0x228 + rsp]
0x9cb6: jz 0x9d9b
0x9cbc: test bl,bl
0x9cbe: jz 0x9e05
0x9cc4: test rdx,rdx
0x9cc7: jz 0xa5b9
0x9ccd: cmp dword ptr [rsp + 0x7c],0xf
0x9cd2: jz 0x9cf1
0x9cd4: lea rsi,[rip+0x9db5]
0x9cdb: xor edi,edi
0x9cdd: mov edx,0x5
0x9ce2: call 0x2820
0x9ce7: mov rdi,rax
0x9cea: xor eax,eax
0x9cec: call 0x61f0
0x9cf1: cmp qword ptr [0x228 + rsp],0x0
0x9cfa: jnz 0xa5b9
0x9d00: movsxd rdx,dword ptr [0x84 + rsp]
0x9d08: xor eax,eax
0x9d0a: mov rcx,rdx
0x9d0d: add rcx,qword ptr [0x218 + rsp]
0x9d15: movsxd rdx,ecx
0x9d18: seto al
0x9d1b: mov dword ptr [rsp + 0x20],ecx
0x9d1f: cmp rcx,rdx
0x9d22: mov edx,0x1
0x9d27: cmovnz eax,edx
0x9d2a: test eax,eax
0x9d2c: jz 0x9e30
0x9d32: cmp byte ptr [0x289 + rsp],0x0
0x9d3a: jz 0x8ccb
0x9d40: lea rsi,[rip+0x961b]
0x9d47: xor edi,edi
0x9d49: mov edx,0x5
0x9d4e: call 0x2820
0x9d53: lea rsi,[rip+0x9616]
0x9d5a: mov rdi,rax
0x9d5d: mov edx,0x877
0x9d62: xor eax,eax
0x9d64: call 0x61f0
0x9d69: jmp 0x8ccb
0x9d6e: movzx ebx,byte ptr [0x289 + rsp]
0x9d76: test bl,bl
0x9d78: jnz 0xa098
0x9d7e: mov rax,qword ptr [0x218 + rsp]
0x9d86: mov rdx,qword ptr [0x220 + rsp]
0x9d8e: or rdx,rax
0x9d91: or rdx,qword ptr [0x228 + rsp]
0x9d99: jnz 0x9e05
0x9d9b: cmp qword ptr [0x280 + rsp],0x0
0x9da4: jz 0xa241
0x9daa: movsxd rax,dword ptr [0x1c8 + rsp]
0x9db2: xor edx,edx
0x9db4: mov rbp,rax
0x9db7: sub rax,qword ptr [0x98 + rsp]
0x9dbf: seto dl
0x9dc2: sub r14,rax
0x9dc5: seto al
0x9dc8: movzx eax,al
0x9dcb: or rdx,rax
0x9dce: jz 0xa241
0x9dd4: test bl,bl
0x9dd6: jz 0x8ccb
0x9ddc: lea rsi,[rip+0x9ead]
0x9de3: xor edi,edi
0x9de5: mov edx,0x5
0x9dea: call 0x2820
0x9def: mov esi,ebp
0x9df1: mov rdi,rax
0x9df4: xor eax,eax
0x9df6: call 0x61f0
0x9dfb: jmp 0x8ccb
0x9e00: call 0x2850
0x9e05: movsxd rdx,dword ptr [0x84 + rsp]
0x9e0d: add rax,rdx
0x9e10: seto dl
0x9e13: movsxd rcx,eax
0x9e16: mov dword ptr [rsp + 0x20],eax
0x9e1a: cmp rax,rcx
0x9e1d: movzx edx,dl
0x9e20: mov ecx,0x1
0x9e25: cmovnz edx,ecx
0x9e28: test edx,edx
0x9e2a: jnz 0x8ccb
0x9e30: movsxd r12,dword ptr [0x80 + rsp]
0x9e38: xor eax,eax
0x9e3a: add r12,qword ptr [0x220 + rsp]
0x9e42: movsxd rdx,r12d
0x9e45: seto al
0x9e48: cmp r12,rdx
0x9e4b: jnz 0x9d32
0x9e51: test eax,eax
0x9e53: jnz 0x9d32
0x9e59: movsxd rbp,dword ptr [rsp + 0x7c]
0x9e5e: xor eax,eax
0x9e60: add rbp,qword ptr [0x228 + rsp]
0x9e68: movsxd rdx,ebp
0x9e6b: seto al
0x9e6e: cmp rbp,rdx
0x9e71: jnz 0x9d32
0x9e77: test eax,eax
0x9e79: jnz 0x9d32
0x9e7f: mov eax,dword ptr [rsp + 0x20]
0x9e83: mov rsi,qword ptr [rsp + 0x18]
0x9e88: mov rdi,r15
0x9e8b: mov dword ptr [0x80 + rsp],r12d
0x9e93: mov dword ptr [rsp + 0x7c],ebp
0x9e97: mov dword ptr [0x84 + rsp],eax
0x9e9e: mov eax,dword ptr [0xb8 + rsp]
0x9ea5: mov dword ptr [rsp + 0x78],eax
0x9ea9: mov eax,dword ptr [0xb4 + rsp]
0x9eb0: mov dword ptr [rsp + 0x74],eax
0x9eb4: mov eax,dword ptr [0xb0 + rsp]
0x9ebb: mov dword ptr [rsp + 0x70],eax
0x9ebf: mov eax,dword ptr [0xd0 + rsp]
0x9ec6: mov dword ptr [0x90 + rsp],eax
0x9ecd: call 0xd670
0x9ed2: cmp rax,-0x1
0x9ed6: mov r14,rax
0x9ed9: jz 0xa547
0x9edf: movzx ebx,byte ptr [0x289 + rsp]
0x9ee7: test bl,bl
0x9ee9: jz 0x9d9b
0x9eef: mov rcx,qword ptr [0x228 + rsp]
0x9ef7: mov rax,qword ptr [0x218 + rsp]
0x9eff: lea rsi,[rip+0x9c7a]
0x9f06: mov rbx,qword ptr [0x220 + rsp]
0x9f0e: xor edi,edi
0x9f10: mov edx,0x5
0x9f15: mov qword ptr [rsp + 0x38],rcx
0x9f1a: mov qword ptr [rsp + 0x30],rax
0x9f1f: call 0x2820
0x9f24: mov rcx,qword ptr [rsp + 0x38]
0x9f29: mov rsi,qword ptr [rsp + 0x30]
0x9f2e: mov rdx,rbx
0x9f31: mov rdi,rax
0x9f34: xor eax,eax
0x9f36: call 0x61f0
0x9f3b: mov rdi,qword ptr [rsp + 0x18]
0x9f40: lea rdx,[0x300 + rsp]
0x9f48: mov rsi,r13
0x9f4b: call 0x66e0
0x9f50: lea rsi,[rip+0x942a]
0x9f57: xor edi,edi
0x9f59: mov rbx,rax
0x9f5c: mov edx,0x5
0x9f61: call 0x2820
0x9f66: mov rsi,rbx
0x9f69: mov rdi,rax
0x9f6c: xor eax,eax
0x9f6e: call 0x61f0
0x9f73: mov eax,dword ptr [0xd0 + rsp]
0x9f7a: cmp eax,-0x1
0x9f7d: jz 0x9fa5
0x9f7f: cmp eax,dword ptr [0x90 + rsp]
0x9f86: jz 0x9fa5
0x9f88: lea rsi,[rip+0x9c31]
0x9f8f: xor edi,edi
0x9f91: mov edx,0x5
0x9f96: call 0x2820
0x9f9b: mov rdi,rax
0x9f9e: xor eax,eax
0x9fa0: call 0x61f0
0x9fa5: cmp qword ptr [0x228 + rsp],0x0
0x9fae: jnz 0xa082
0x9fb4: cmp ebp,dword ptr [rsp + 0x7c]
0x9fb8: jnz 0x9fd7
0x9fba: cmp qword ptr [0x220 + rsp],0x0
0x9fc3: jnz 0xa082
0x9fc9: cmp r12d,dword ptr [0x80 + rsp]
0x9fd1: jz 0xa082
0x9fd7: lea rsi,[rip+0x9c22]
0x9fde: mov edx,0x5
0x9fe3: xor edi,edi
0x9fe5: call 0x2820
0x9fea: mov rdi,rax
0x9fed: xor eax,eax
0x9fef: call 0x61f0
0x9ff4: lea r8,[0x2d3 + rsp]
0x9ffc: mov edi,dword ptr [rsp + 0x20]
0xa000: mov rsi,r8
0xa003: mov qword ptr [rsp + 0x30],r8
0xa008: call 0x2b70
0xa00d: lea rsi,[rip+0x9c2c]
0xa014: mov edx,0x5
0xa019: xor edi,edi
0xa01b: mov rbx,rax
0xa01e: call 0x2820
0xa023: lea edx,[r12 + 0x1]
0xa028: mov ecx,ebp
0xa02a: mov rsi,rbx
0xa02d: mov rdi,rax
0xa030: xor eax,eax
0xa032: call 0x61f0
0xa037: mov r8,qword ptr [rsp + 0x30]
0xa03c: mov eax,dword ptr [0x80 + rsp]
0xa043: mov edi,dword ptr [0x84 + rsp]
0xa04a: mov r12d,dword ptr [rsp + 0x7c]
0xa04f: mov rsi,r8
0xa052: lea ebx,[rax + 0x1]
0xa055: call 0x2b70
0xa05a: lea rsi,[rip+0x9c07]
0xa061: mov rbp,rax
0xa064: mov edx,0x5
0xa069: xor edi,edi
0xa06b: call 0x2820
0xa070: mov ecx,r12d
0xa073: mov rdi,rax
0xa076: mov edx,ebx
0xa078: mov rsi,rbp
0xa07b: xor eax,eax
0xa07d: call 0x61f0
0xa082: movzx ebx,byte ptr [0x289 + rsp]
0xa08a: jmp 0x9d9b
0xa08f: test rax,rax
0xa092: jz 0x9c55
0xa098: lea rbp,[0x300 + rsp]
0xa0a0: lea rsi,[0x3e0 + rsp]
0xa0a8: mov rdi,r13
0xa0ab: call 0x67a0
0xa0b0: lea rsi,[rip+0x9999]
0xa0b7: mov rbx,rax
0xa0ba: xor edi,edi
0xa0bc: mov edx,0x5
0xa0c1: call 0x2820
0xa0c6: mov rsi,rbx
0xa0c9: mov rdi,rax
0xa0cc: xor eax,eax
0xa0ce: call 0x61f0
0xa0d3: jmp 0x9c5d
0xa241: test bl,bl
0xa243: jnz 0xa464
0xa249: mov rbp,qword ptr [0x230 + rsp]
0xa251: movzx r12d,byte ptr [0x289 + rsp]
0xa25a: imul r9,rbp,0xe10
0xa261: jo 0xa3bd
0xa267: add r9,r14
0xa26a: jo 0xa3bd
0xa270: mov r13,qword ptr [0x238 + rsp]
0xa278: imul rax,r13,0x3c
0xa27c: jo 0xa3bd
0xa282: add r9,rax
0xa285: jo 0xa3bd
0xa28b: mov r14,qword ptr [0x240 + rsp]
0xa293: add r9,r14
0xa296: jo 0xa3bd
0xa29c: movsxd rsi,dword ptr [0x248 + rsp]
0xa2a4: mov rcx,qword ptr [0x210 + rsp]
0xa2ac: mov r8d,0x3b9aca00
0xa2b2: mov rbx,r9
0xa2b5: add rcx,rsi
0xa2b8: mov rax,rcx
0xa2bb: cqo 
0xa2bd: idiv r8
0xa2c0: lea rax,[0x3b9aca00 + rdx]
0xa2c7: cqo 
0xa2c9: idiv r8
0xa2cc: mov rax,rcx
0xa2cf: sub rax,rdx
0xa2d2: mov rdi,rdx
0xa2d5: cqo 
0xa2d7: idiv r8
0xa2da: cdqe 
0xa2dc: add rbx,rax
0xa2df: jo 0xa3bd
0xa2e5: mov rax,qword ptr [rsp + 0x28]
0xa2ea: test r12b,r12b
0xa2ed: mov qword ptr [rax],rbx
0xa2f0: mov qword ptr [rax + 0x8],rdi
0xa2f4: jz 0x9002
0xa2fa: mov rax,rbp
0xa2fd: or rax,r13
0xa300: or rax,r14
0xa303: or rax,rsi
0xa306: jz 0x9002
0xa30c: mov dword ptr [rsp + 0x18],esi
0xa310: lea rsi,[rip+0x99d9]
0xa317: xor edi,edi
0xa319: mov edx,0x5
0xa31e: call 0x2820
0xa323: mov r10d,dword ptr [rsp + 0x18]
0xa328: mov rcx,r14
0xa32b: mov rdi,rax
0xa32e: mov rdx,r13
0xa331: xor eax,eax
0xa333: mov rsi,rbp
0xa336: mov r8d,r10d
0xa339: call 0x61f0
0xa33e: lea rsi,[rip+0x99fb]
0xa345: xor edi,edi
0xa347: mov edx,0x5
0xa34c: call 0x2820
0xa351: mov rsi,rbx
0xa354: mov rdi,rax
0xa357: xor eax,eax
0xa359: call 0x61f0
0xa35e: cmp dword ptr [0x90 + rsp],-0x1
0xa366: jz 0xa3af
0xa368: mov rsi,qword ptr [rsp + 0x28]
0xa36d: lea rdx,[0x170 + rsp]
0xa375: mov rdi,r15
0xa378: call 0xd5c0
0xa37d: test rax,rax
0xa380: jz 0xa3af
0xa382: mov eax,dword ptr [0x190 + rsp]
0xa389: cmp dword ptr [0x90 + rsp],eax
0xa390: jz 0xa3af
0xa392: lea rsi,[rip+0x99cf]
0xa399: xor edi,edi
0xa39b: mov edx,0x5
0xa3a0: call 0x2820
0xa3a5: mov rdi,rax
0xa3a8: xor eax,eax
0xa3aa: call 0x61f0
0xa3af: movzx r12d,byte ptr [0x289 + rsp]
0xa3b8: jmp 0x9002
0xa3bd: test r12b,r12b
0xa3c0: jz 0x8ccb
0xa3c6: mov edx,0x5
0xa3cb: lea rsi,[rip+0x98ee]
0xa3d2: jmp 0x9399
0xa464: mov rdi,qword ptr [rsp + 0x18]
0xa469: lea rdx,[0x300 + rsp]
0xa471: mov rsi,r13
0xa474: call 0x66e0
0xa479: lea rsi,[rip+0x8f1b]
0xa480: mov rbx,rax
0xa483: xor edi,edi
0xa485: mov edx,0x5
0xa48a: call 0x2820
0xa48f: mov rdx,r14
0xa492: mov rdi,rax
0xa495: mov rsi,rbx
0xa498: xor eax,eax
0xa49a: call 0x61f0
0xa49f: jmp 0xa249
0xa4b1: mov eax,dword ptr [0x80 + rsp]
0xa4b8: mov edi,dword ptr [0x84 + rsp]
0xa4bf: lea rsi,[0x2d3 + rsp]
0xa4c7: mov r12d,dword ptr [rsp + 0x7c]
0xa4cc: lea rbp,[0x300 + rsp]
0xa4d4: lea ebx,[rax + 0x1]
0xa4d7: call 0x2b70
0xa4dc: push r12
0xa4de: lea r8,[rip+0x8e4e]
0xa4e5: push rbx
0xa4e6: mov r9,rax
0xa4e9: mov ecx,0x64
0xa4ee: mov edx,0x1
0xa4f3: mov esi,0x64
0xa4f8: mov rdi,rbp
0xa4fb: xor eax,eax
0xa4fd: call 0x2740
0xa502: lea rsi,[rip+0x9517]
0xa509: mov edx,0x5
0xa50e: xor edi,edi
0xa510: call 0x2820
0xa515: mov rsi,rbp
0xa518: mov rdi,rax
0xa51b: xor eax,eax
0xa51d: call 0x61f0
0xa522: pop rax
0xa523: pop rdx
0xa524: cmp qword ptr [0x260 + rsp],0x0
0xa52d: jz 0x9c5d
0xa533: cmp qword ptr [0x258 + rsp],0x0
0xa53c: jnz 0xa0a0
0xa542: jmp 0x9c5d
0xa547: cmp byte ptr [0x289 + rsp],0x0
0xa54f: jz 0x8ccb
0xa555: mov rdi,qword ptr [rsp + 0x18]
0xa55a: lea rdx,[0x300 + rsp]
0xa562: mov rsi,r13
0xa565: call 0x66e0
0xa56a: lea rsi,[rip+0x95cf]
0xa571: mov rbx,rax
0xa574: xor edi,edi
0xa576: mov edx,0x5
0xa57b: call 0x2820
0xa580: mov rsi,rbx
0xa583: mov rdi,rax
0xa586: xor eax,eax
0xa588: call 0x61f0
0xa58d: jmp 0x8ccb
0xa5b9: cmp dword ptr [rsp + 0x78],0xc
0xa5be: jz 0x9d00
0xa5c4: lea rsi,[rip+0x952d]
0xa5cb: xor edi,edi
0xa5cd: mov edx,0x5
0xa5d2: call 0x2820
0xa5d7: mov rdi,rax
0xa5da: xor eax,eax
0xa5dc: call 0x61f0
0xa5e1: jmp 0x9d00
0xa600: push r14
0xa602: push r13
0xa604: mov r14,rdx
0xa607: push r12
0xa609: push rbp
0xa60a: mov r12,rdi
0xa60d: push rbx
0xa60e: lea rdi,[rip+0x7179]
0xa615: mov r13,rsi
0xa618: sub rsp,0x10
0xa61c: call 0x2730
0xa621: mov rdi,rax
0xa624: mov rbp,rax
0xa627: call 0xd300
0xa62c: mov rbx,rax
0xa62f: xor eax,eax
0xa631: test rbx,rbx
0xa634: jz 0xa65d
0xa636: mov r9,rbp
0xa639: mov r8,rbx
0xa63c: xor ecx,ecx
0xa63e: mov rdx,r14
0xa641: mov rsi,r13
0xa644: mov rdi,r12
0xa647: call 0x8890
0xa64c: mov rdi,rbx
0xa64f: mov byte ptr [rsp + 0xf],al
0xa653: call 0xd5b0
0xa658: movzx eax,byte ptr [rsp + 0xf]
0xa65d: add rsp,0x10
0xa661: pop rbx
0xa662: pop rbp
0xa663: pop r12
0xa665: pop r13
0xa667: pop r14
0xa669: ret 
0xa6a0: xor eax,eax
0xa6a2: jmp 0xa6ca
0xa71c: call 0x2850
0xa726: nop word ptr cs:[rax + rax*0x1]
0xa90e: mov edx,dword ptr [rsp + 0x24]
0xa912: mov ecx,dword ptr [rsp + 0x20]
0xa916: xor edx,dword ptr [rsp + 0x64]
0xa91a: xor ecx,dword ptr [rsp + 0x60]
0xa91e: mov esi,dword ptr [rsp + 0x10]
0xa922: or edx,ecx
0xa924: mov ecx,dword ptr [rsp + 0x1c]
0xa928: xor ecx,dword ptr [rsp + 0x5c]
0xa92c: or edx,ecx
0xa92e: mov ecx,dword ptr [rsp + 0x18]
0xa932: xor ecx,dword ptr [rsp + 0x58]
0xa936: or edx,ecx
0xa938: mov ecx,dword ptr [rsp + 0x14]
0xa93c: xor ecx,dword ptr [rsp + 0x54]
0xa940: or edx,ecx
0xa942: mov ecx,dword ptr [rsp + 0x50]
0xa946: xor ecx,esi
0xa948: or edx,ecx
0xa94a: jz 0xa990
0xa94c: cmp esi,0x3c
0xa94f: jnz 0xa794
0xa955: lea r14,[0xb0 + rsp]
0xa95d: mov edx,0x10
0xa962: mov rsi,rbx
0xa965: mov rdi,r14
0xa968: call 0x29b0
0xa96d: mov edx,0x3935
0xa972: lea rdi,[rsp + 0x8]
0xa977: mov byte ptr [rax],0x0
0xa97a: mov word ptr [rax - 0x2],dx
0xa97e: mov rsi,r14
0xa981: mov edx,ebp
0xa983: call 0xa730
0xa988: test al,al
0xa98a: jz 0xa794
0xa990: mov qword ptr [r12],r13
0xa994: mov eax,0x1
0xa999: jmp 0xa794
0xa9a0: lea rax,[r13 - 0x8]
0xa9a4: xor r14d,r14d
0xa9a7: cmp rax,0x4
0xa9ab: jbe 0xa7cd
0xa9b1: jmp 0xa792
0xa9c0: lea rdi,[rsp + 0x24]
0xa9c5: mov ecx,ebp
0xa9c7: mov rsi,r15
0xa9ca: call 0xa670
0xa9cf: test al,al
0xa9d1: jz 0xa792
0xa9d7: lea rax,[r15 + r13*0x4 - 0x10]
0xa9dc: mov esi,dword ptr [rax]
0xa9de: lea edx,[rsi - 0x1]
0xa9e1: mov dword ptr [rsp + 0x20],edx
0xa9e5: mov edx,dword ptr [rax + 0x4]
0xa9e8: mov dword ptr [rsp + 0x1c],edx
0xa9ec: mov edx,dword ptr [rax + 0x8]
0xa9ef: mov eax,dword ptr [rax + 0xc]
0xa9f2: mov dword ptr [rsp + 0x18],edx
0xa9f6: mov dword ptr [rsp + 0x14],eax
0xa9fa: jmp 0xa881
0xaa0f: call 0x2850
0xaa14: nop word ptr cs:[rax + rax*0x1]
0xaa1e: nop 
0xaabf: nop 
0xbda3: call 0x2850
0xbde4: nop 
0xbde6: nop word ptr cs:[rax + rax*0x1]
0xbf9b: nop dword ptr [rax + rax*0x1]
0xbfa0: push r12
0xbfa2: push rbp
0xbfa3: push rbx
0xbfa4: mov rbx,rdi
0xbfa7: call 0x2780
0xbfac: mov r12d,dword ptr [rax]
0xbfaf: mov rbp,rax
0xbfb2: lea rax,[rip+0x20c267]
0xbfb9: test rbx,rbx
0xbfbc: mov esi,0x38
0xbfc1: cmovz rbx,rax
0xbfc5: mov rdi,rbx
0xbfc8: call 0xd000
0xbfcd: mov dword ptr [rbp],r12d
0xbfd1: pop rbx
0xbfd2: pop rbp
0xbfd3: pop r12
0xbfd5: ret 
0xbfe0: lea rax,[rip+0x20c239]
0xbfe7: test rdi,rdi
0xbfea: cmovz rdi,rax
0xbfee: mov eax,dword ptr [rdi]
0xbff0: ret 
0xc000: lea rax,[rip+0x20c219]
0xc007: test rdi,rdi
0xc00a: cmovz rdi,rax
0xc00e: mov dword ptr [rdi],esi
0xc010: ret 
0xc020: lea rax,[rip+0x20c1f9]
0xc027: test rdi,rdi
0xc02a: mov ecx,esi
0xc02c: cmovz rdi,rax
0xc030: mov eax,esi
0xc032: and ecx,0x1f
0xc035: shr al,0x5
0xc038: movzx eax,al
0xc03b: lea rdi,[rdi + rax*0x4 + 0x8]
0xc040: mov esi,dword ptr [rdi]
0xc042: mov eax,esi
0xc044: shr eax,cl
0xc046: xor edx,eax
0xc048: and eax,0x1
0xc04b: and edx,0x1
0xc04e: shl edx,cl
0xc050: xor edx,esi
0xc052: mov dword ptr [rdi],edx
0xc054: ret 
0xc060: lea rax,[rip+0x20c1b9]
0xc067: test rdi,rdi
0xc06a: cmovz rdi,rax
0xc06e: mov eax,dword ptr [rdi + 0x4]
0xc071: mov dword ptr [rdi + 0x4],esi
0xc074: ret 
0xc080: lea rax,[rip+0x20c199]
0xc087: test rdi,rdi
0xc08a: cmovz rdi,rax
0xc08e: test rsi,rsi
0xc091: mov dword ptr [rdi],0xa
0xc097: jz 0xc0a7
0xc099: test rdx,rdx
0xc09c: jz 0xc0a7
0xc09e: mov qword ptr [rdi + 0x28],rsi
0xc0a2: mov qword ptr [rdi + 0x30],rdx
0xc0a6: ret 
0xc0a7: sub rsp,0x8
0xc0ab: call 0x2770
0xc0b0: push r15
0xc0b2: push r14
0xc0b4: lea rax,[rip+0x20c165]
0xc0bb: push r13
0xc0bd: push r12
0xc0bf: mov r13,rdi
0xc0c2: push rbp
0xc0c3: push rbx
0xc0c4: mov rbx,r8
0xc0c7: mov r14,rsi
0xc0ca: mov r15,rdx
0xc0cd: sub rsp,0x18
0xc0d1: test r8,r8
0xc0d4: cmovz rbx,rax
0xc0d8: mov qword ptr [rsp + 0x8],rcx
0xc0dd: call 0x2780
0xc0e2: mov r12d,dword ptr [rax]
0xc0e5: mov rbp,rax
0xc0e8: lea rax,[rbx + 0x8]
0xc0ec: sub rsp,0x8
0xc0f0: mov r9d,dword ptr [rbx + 0x4]
0xc0f4: push qword ptr [rbx + 0x30]
0xc0f7: mov r8d,dword ptr [rbx]
0xc0fa: push qword ptr [rbx + 0x28]
0xc0fd: mov rdx,r15
0xc100: push rax
0xc101: mov rcx,qword ptr [rsp + 0x28]
0xc106: mov rsi,r14
0xc109: mov rdi,r13
0xc10c: call 0xabb0
0xc111: mov dword ptr [rbp],r12d
0xc115: add rsp,0x38
0xc119: pop rbx
0xc11a: pop rbp
0xc11b: pop r12
0xc11d: pop r13
0xc11f: pop r14
0xc121: pop r15
0xc123: ret 
0xc130: push r15
0xc132: push r14
0xc134: lea rax,[rip+0x20c0e5]
0xc13b: push r13
0xc13d: push r12
0xc13f: mov r12,rdx
0xc142: push rbp
0xc143: push rbx
0xc144: mov rbx,rcx
0xc147: mov r14,rdi
0xc14a: mov r15,rsi
0xc14d: sub rsp,0x38
0xc151: test rcx,rcx
0xc154: cmovz rbx,rax
0xc158: xor ebp,ebp
0xc15a: call 0x2780
0xc15f: test r12,r12
0xc162: mov r13,rax
0xc165: mov eax,dword ptr [rax]
0xc167: setz bpl
0xc16b: or ebp,dword ptr [rbx + 0x4]
0xc16e: lea r10,[rbx + 0x8]
0xc172: sub rsp,0x8
0xc176: mov r8d,dword ptr [rbx]
0xc179: mov rcx,r15
0xc17c: mov dword ptr [rsp + 0x14],eax
0xc180: push qword ptr [rbx + 0x30]
0xc183: mov rdx,r14
0xc186: push qword ptr [rbx + 0x28]
0xc189: push r10
0xc18b: xor esi,esi
0xc18d: mov r9d,ebp
0xc190: xor edi,edi
0xc192: mov qword ptr [rsp + 0x40],r10
0xc197: call 0xabb0
0xc19c: lea rsi,[rax + 0x1]
0xc1a0: mov qword ptr [rsp + 0x48],rax
0xc1a5: add rsp,0x20
0xc1a9: mov rdi,rsi
0xc1ac: mov qword ptr [rsp + 0x18],rsi
0xc1b1: call 0xce00
0xc1b6: mov qword ptr [rsp + 0x10],rax
0xc1bb: sub rsp,0x8
0xc1bf: push qword ptr [rbx + 0x30]
0xc1c2: push qword ptr [rbx + 0x28]
0xc1c5: mov r10,qword ptr [rsp + 0x38]
0xc1ca: mov r9d,ebp
0xc1cd: mov r8d,dword ptr [rbx]
0xc1d0: mov rcx,r15
0xc1d3: mov rdx,r14
0xc1d6: mov rdi,rax
0xc1d9: push r10
0xc1db: mov rsi,qword ptr [rsp + 0x38]
0xc1e0: call 0xabb0
0xc1e5: mov eax,dword ptr [rsp + 0x2c]
0xc1e9: add rsp,0x20
0xc1ed: test r12,r12
0xc1f0: mov dword ptr [r13],eax
0xc1f4: jz 0xc1ff
0xc1f6: mov r11,qword ptr [rsp + 0x28]
0xc1fb: mov qword ptr [r12],r11
0xc1ff: mov rax,qword ptr [rsp + 0x10]
0xc204: add rsp,0x38
0xc208: pop rbx
0xc209: pop rbp
0xc20a: pop r12
0xc20c: pop r13
0xc20e: pop r14
0xc210: pop r15
0xc212: ret 
0xc220: mov rcx,rdx
0xc223: xor edx,edx
0xc225: jmp 0xc130
0xc230: mov eax,dword ptr [rip+0x20be42]
0xc236: push r12
0xc238: mov r12,qword ptr [rip+0x20be41]
0xc23f: push rbp
0xc240: push rbx
0xc241: cmp eax,0x1
0xc244: jle 0xc271
0xc246: sub eax,0x2
0xc249: lea rbx,[r12 + 0x18]
0xc24e: shl rax,0x4
0xc252: lea rbp,[r12 + rax*0x1 + 0x28]
0xc257: nop word ptr [rax + rax*0x1]
0xc260: mov rdi,qword ptr [rbx]
0xc263: add rbx,0x10
0xc267: call 0x2750
0xc26c: cmp rbx,rbp
0xc26f: jnz 0xc260
0xc271: mov rdi,qword ptr [r12 + 0x8]
0xc276: lea rbx,[rip+0x20bea3]
0xc27d: cmp rdi,rbx
0xc280: jz 0xc299
0xc282: call 0x2750
0xc287: mov qword ptr [rip+0x20bdfe],0x100
0xc292: mov qword ptr [rip+0x20bdff],rbx
0xc299: lea rbx,[rip+0x20bdf0]
0xc2a0: cmp r12,rbx
0xc2a3: jz 0xc2b4
0xc2a5: mov rdi,r12
0xc2a8: call 0x2750
0xc2ad: mov qword ptr [rip+0x20bdcc],rbx
0xc2b4: pop rbx
0xc2b5: mov dword ptr [rip+0x20bdb9],0x1
0xc2bf: pop rbp
0xc2c0: pop r12
0xc2c2: ret 
0xc2d0: lea rcx,[rip+0x20bf49]
0xc2d7: mov rdx,-0x1
0xc2de: jmp 0xbdf0
0xc2f0: lea rcx,[rip+0x20bf29]
0xc2f7: jmp 0xbdf0
0xc300: lea rcx,[rip+0x20bf19]
0xc307: mov rsi,rdi
0xc30a: mov rdx,-0x1
0xc311: xor edi,edi
0xc313: jmp 0xbdf0
0xc320: lea rcx,[rip+0x20bef9]
0xc327: mov rdx,rsi
0xc32a: mov rsi,rdi
0xc32d: xor edi,edi
0xc32f: jmp 0xbdf0
0xc3c4: call 0x2770
0xc3c9: call 0x2850
0xc3ce: nop 
0xc3d0: sub rsp,0x48
0xc3d4: mov rax,rdx
0xc3d7: mov rdx,rcx
0xc3da: mov rcx,qword ptr fs:[rip+0xffffffffffff3c45]
0xc3e3: mov qword ptr [rsp + 0x38],rcx
0xc3e8: xor ecx,ecx
0xc3ea: cmp esi,0xa
0xc3ed: jz 0xc450
0xc3ef: mov dword ptr [rsp],esi
0xc3f2: mov rcx,rsp
0xc3f5: mov rsi,rax
0xc3f8: mov qword ptr [rsp + 0x4],0x0
0xc401: mov qword ptr [rsp + 0xc],0x0
0xc40a: mov qword ptr [rsp + 0x14],0x0
0xc413: mov qword ptr [rsp + 0x1c],0x0
0xc41c: mov qword ptr [rsp + 0x24],0x0
0xc425: mov qword ptr [rsp + 0x2c],0x0
0xc42e: mov dword ptr [rsp + 0x34],0x0
0xc436: call 0xbdf0
0xc43b: mov rdx,qword ptr [rsp + 0x38]
0xc440: xor rdx,qword ptr fs:[rip+0xffffffffffff3bdf]
0xc449: jnz 0xc455
0xc44b: add rsp,0x48
0xc44f: ret 
0xc450: call 0x2770
0xc455: call 0x2850
0xc45a: nop word ptr [rax + rax*0x1]
0xc460: mov rdx,rsi
0xc463: mov esi,edi
0xc465: xor edi,edi
0xc467: jmp 0xc340
0xc470: mov rcx,rdx
0xc473: mov rdx,rsi
0xc476: mov esi,edi
0xc478: xor edi,edi
0xc47a: jmp 0xc3d0
0xc480: sub rsp,0x48
0xc484: mov ecx,edx
0xc486: mov rax,qword ptr fs:[rip+0xffffffffffff3b99]
0xc48f: mov qword ptr [rsp + 0x38],rax
0xc494: xor eax,eax
0xc496: mov rax,qword ptr [rip+0x20bdb3]
0xc49d: mov r8,rsp
0xc4a0: and ecx,0x1f
0xc4a3: movdqa xmm0,[rip+0x20bd75]
0xc4ab: mov qword ptr [rsp + 0x30],rax
0xc4b0: mov eax,edx
0xc4b2: movaps xmmword ptr [rsp],xmm0
0xc4b6: shr al,0x5
0xc4b9: movzx eax,al
0xc4bc: lea r9,[r8 + rax*0x4 + 0x8]
0xc4c1: movdqa xmm0,[rip+0x20bd67]
0xc4c9: movaps xmmword ptr [rsp + 0x10],xmm0
0xc4ce: movdqa xmm0,[rip+0x20bd6a]
0xc4d6: movaps xmmword ptr [rsp + 0x20],xmm0
0xc4db: mov edx,dword ptr [r9]
0xc4de: mov eax,edx
0xc4e0: shr eax,cl
0xc4e2: not eax
0xc4e4: and eax,0x1
0xc4e7: shl eax,cl
0xc4e9: mov rcx,r8
0xc4ec: xor eax,edx
0xc4ee: mov rdx,rsi
0xc4f1: mov rsi,rdi
0xc4f4: mov dword ptr [r9],eax
0xc4f7: xor edi,edi
0xc4f9: call 0xbdf0
0xc4fe: mov rsi,qword ptr [rsp + 0x38]
0xc503: xor rsi,qword ptr fs:[rip+0xffffffffffff3b1c]
0xc50c: jnz 0xc513
0xc50e: add rsp,0x48
0xc512: ret 
0xc513: call 0x2850
0xc518: nop dword ptr [rax + rax*0x1]
0xc520: movsx edx,sil
0xc524: mov rsi,-0x1
0xc52b: jmp 0xc480
0xc530: mov edx,0x3a
0xc535: mov rsi,-0x1
0xc53c: jmp 0xc480
0xc550: mov edx,0x3a
0xc555: jmp 0xc480
0xc5e4: call 0x2770
0xc5e9: call 0x2850
0xc5ee: nop 
0xc5f0: sub rsp,0x48
0xc5f4: mov r9,rcx
0xc5f7: mov rcx,qword ptr [rip+0x20bc52]
0xc5fe: movdqa xmm0,[rip+0x20bc1a]
0xc606: mov rax,qword ptr fs:[rip+0xffffffffffff3a19]
0xc60f: mov qword ptr [rsp + 0x38],rax
0xc614: xor eax,eax
0xc616: movaps xmmword ptr [rsp],xmm0
0xc61a: test rsi,rsi
0xc61d: mov qword ptr [rsp + 0x30],rcx
0xc622: mov dword ptr [rsp],0xa
0xc629: movdqa xmm0,[rip+0x20bbff]
0xc631: movaps xmmword ptr [rsp + 0x10],xmm0
0xc636: movdqa xmm0,[rip+0x20bc02]
0xc63e: movaps xmmword ptr [rsp + 0x20],xmm0
0xc643: jz 0xc677
0xc645: test rdx,rdx
0xc648: jz 0xc677
0xc64a: mov qword ptr [rsp + 0x28],rsi
0xc64f: mov qword ptr [rsp + 0x30],rdx
0xc654: mov rcx,rsp
0xc657: mov rdx,r8
0xc65a: mov rsi,r9
0xc65d: call 0xbdf0
0xc662: mov rdi,qword ptr [rsp + 0x38]
0xc667: xor rdi,qword ptr fs:[rip+0xffffffffffff39b8]
0xc670: jnz 0xc67c
0xc672: add rsp,0x48
0xc676: ret 
0xc677: call 0x2770
0xc67c: call 0x2850
0xc681: nop dword ptr [rax + rax*0x1]
0xc686: nop word ptr cs:[rax + rax*0x1]
0xc690: mov r8,-0x1
0xc697: jmp 0xc5f0
0xc6a0: mov rcx,rdx
0xc6a3: mov r8,-0x1
0xc6aa: mov rdx,rsi
0xc6ad: mov rsi,rdi
0xc6b0: xor edi,edi
0xc6b2: jmp 0xc5f0
0xc6c0: mov r8,rcx
0xc6c3: mov rcx,rdx
0xc6c6: mov rdx,rsi
0xc6c9: mov rsi,rdi
0xc6cc: xor edi,edi
0xc6ce: jmp 0xc5f0
0xc6e0: lea rcx,[rip+0x20b959]
0xc6e7: jmp 0xbdf0
0xc6f0: lea rcx,[rip+0x20b949]
0xc6f7: mov rdx,rsi
0xc6fa: mov rsi,rdi
0xc6fd: xor edi,edi
0xc6ff: jmp 0xbdf0
0xc7d4: call 0x2850
0xc7d9: nop dword ptr [rax]
0xc918: mov r8,rcx
0xc91b: mov rcx,rdx
0xc91e: lea rdx,[rip+0x802f]
0xc925: mov esi,0x1
0xc92a: xor eax,eax
0xc92c: call 0x2b00
0xc931: jmp 0xc81c
0xcc00: xor r9d,r9d
0xcc03: cmp qword ptr [r8],0x0
0xcc07: jz 0xcc1b
0xcc09: nop dword ptr [rax]
0xcc10: add r9,0x1
0xcc14: cmp qword ptr [r8 + r9*0x8],0x0
0xcc19: jnz 0xcc10
0xcc1b: jmp 0xc7e0
0xcc20: sub rsp,0x68
0xcc24: mov r10,r8
0xcc27: xor r9d,r9d
0xcc2a: mov rax,qword ptr fs:[rip+0xffffffffffff33f5]
0xcc33: mov qword ptr [rsp + 0x58],rax
0xcc38: xor eax,eax
0xcc3a: mov r8,rsp
0xcc3d: nop dword ptr [rax]
0xcc40: mov eax,dword ptr [r10]
0xcc43: cmp eax,0x2f
0xcc46: ja 0xcc8a
0xcc48: mov r11d,eax
0xcc4b: add r11,qword ptr [r10 + 0x10]
0xcc4f: add eax,0x8
0xcc52: mov dword ptr [r10],eax
0xcc55: mov rax,qword ptr [r11]
0xcc58: test rax,rax
0xcc5b: mov qword ptr [r8 + r9*0x8],rax
0xcc5f: jz 0xcc6b
0xcc61: add r9,0x1
0xcc65: cmp r9,0xa
0xcc69: jnz 0xcc40
0xcc6b: call 0xc7e0
0xcc70: mov rax,qword ptr [rsp + 0x58]
0xcc75: xor rax,qword ptr fs:[rip+0xffffffffffff33aa]
0xcc7e: jnz 0xcc85
0xcc80: add rsp,0x68
0xcc84: ret 
0xcc85: call 0x2850
0xcc8a: mov r11,qword ptr [r10 + 0x8]
0xcc8e: lea rax,[r11 + 0x8]
0xcc92: mov qword ptr [r10 + 0x8],rax
0xcc96: jmp 0xcc55
0xcd60: call 0x2850
0xcd6c: mov rax,rbx
0xcd6f: add rbx,0x8
0xcd73: jmp 0xcd26
0xcd80: push rbx
0xcd81: lea rsi,[rip+0x7c1a]
0xcd88: mov edx,0x5
0xcd8d: xor edi,edi
0xcd8f: call 0x2820
0xcd94: lea rdx,[rip+0x7c1c]
0xcd9b: mov rsi,rax
0xcd9e: mov edi,0x1
0xcda3: xor eax,eax
0xcda5: call 0x2a60
0xcdaa: lea rsi,[rip+0x7c1c]
0xcdb1: mov edx,0x5
0xcdb6: xor edi,edi
0xcdb8: call 0x2820
0xcdbd: lea rcx,[rip+0x5c8c]
0xcdc4: lea rdx,[rip+0x4927]
0xcdcb: mov rsi,rax
0xcdce: mov edi,0x1
0xcdd3: xor eax,eax
0xcdd5: call 0x2a60
0xcdda: mov rbx,qword ptr [rip+0x20b2c7]
0xcde1: lea rsi,[rip+0x7e18]
0xcde8: xor edi,edi
0xcdea: mov edx,0x5
0xcdef: call 0x2820
0xcdf4: mov rsi,rbx
0xcdf7: mov rdi,rax
0xcdfa: pop rbx
0xcdfb: jmp 0x2920
0xce1a: nop word ptr [rax + rax*0x1]
0xce20: mov rax,rdi
0xce23: mul rsi
0xce26: mov rdi,rax
0xce29: seto al
0xce2c: test rdi,rdi
0xce2f: js 0xce3b
0xce31: movzx eax,al
0xce34: test rax,rax
0xce37: jnz 0xce3b
0xce39: jmp 0xce00
0xce3b: sub rsp,0x8
0xce3f: call 0xd050
0xce44: nop 
0xce46: nop word ptr cs:[rax + rax*0x1]
0xce50: jmp 0xce00
0xce96: nop word ptr cs:[rax + rax*0x1]
0xcea0: mov rax,rsi
0xcea3: mul rdx
0xcea6: mov rsi,rax
0xcea9: seto al
0xceac: test rsi,rsi
0xceaf: js 0xcebb
0xceb1: movzx eax,al
0xceb4: test rax,rax
0xceb7: jnz 0xcebb
0xceb9: jmp 0xce60
0xcebb: sub rsp,0x8
0xcebf: call 0xd050
0xcec4: nop 
0xcec6: nop word ptr cs:[rax + rax*0x1]
0xced0: test rdi,rdi
0xced3: mov r9,rdx
0xced6: mov rcx,qword ptr [rsi]
0xced9: jz 0xcf10
0xcedb: xor edx,edx
0xcedd: mov rax,0x5555555555555554
0xcee7: div r9
0xceea: cmp rax,rcx
0xceed: jbe 0xcf2b
0xceef: mov rax,rcx
0xcef2: shr rax,1
0xcef5: lea rcx,[rax + rcx*0x1 + 0x1]
0xcefa: mov qword ptr [rsi],rcx
0xcefd: imul rcx,r9
0xcf01: mov rsi,rcx
0xcf04: jmp 0xce60
0xcf10: test rcx,rcx
0xcf13: jz 0xcf38
0xcf15: mov rax,rcx
0xcf18: mul r9
0xcf1b: seto dl
0xcf1e: test rax,rax
0xcf21: movzx edx,dl
0xcf24: js 0xcf2b
0xcf26: test rdx,rdx
0xcf29: jz 0xcefa
0xcf2b: sub rsp,0x8
0xcf2f: call 0xd050
0xcf34: nop dword ptr [rax]
0xcf38: xor edx,edx
0xcf3a: mov eax,0x80
0xcf3f: xor r8d,r8d
0xcf42: div r9
0xcf45: test rax,rax
0xcf48: setz r8b
0xcf4c: lea rcx,[r8 + rax*0x1]
0xcf50: jmp 0xcf15
0xcf60: test rdi,rdi
0xcf63: mov rax,qword ptr [rsi]
0xcf66: jz 0xcf90
0xcf68: mov rdx,0x5555555555555553
0xcf72: cmp rax,rdx
0xcf75: ja 0xcfa1
0xcf77: mov rdx,rax
0xcf7a: shr rdx,1
0xcf7d: lea rax,[rdx + rax*0x1 + 0x1]
0xcf82: mov qword ptr [rsi],rax
0xcf85: mov rsi,rax
0xcf88: jmp 0xce60
0xcf90: test rax,rax
0xcf93: mov edx,0x80
0xcf98: cmovz rax,rdx
0xcf9c: test rax,rax
0xcf9f: jns 0xcf82
0xcfa1: sub rsp,0x8
0xcfa5: call 0xd050
0xcfaa: nop word ptr [rax + rax*0x1]
0xcfb0: push rbx
0xcfb1: mov rbx,rdi
0xcfb4: call 0xce00
0xcfb9: mov rdx,rbx
0xcfbc: xor esi,esi
0xcfbe: mov rdi,rax
0xcfc1: pop rbx
0xcfc2: jmp 0x28f0
0xcfd0: mov rax,rdi
0xcfd3: sub rsp,0x8
0xcfd7: mul rsi
0xcfda: seto dl
0xcfdd: test rax,rax
0xcfe0: js 0xcff9
0xcfe2: movzx edx,dl
0xcfe5: test rdx,rdx
0xcfe8: jnz 0xcff9
0xcfea: call 0x2930
0xcfef: test rax,rax
0xcff2: jz 0xcff9
0xcff4: add rsp,0x8
0xcff8: ret 
0xcff9: call 0xd050
0xcffe: nop 
0xd000: push rbp
0xd001: push rbx
0xd002: mov rbp,rdi
0xd005: mov rdi,rsi
0xd008: mov rbx,rsi
0xd00b: sub rsp,0x8
0xd00f: call 0xce00
0xd014: add rsp,0x8
0xd018: mov rdx,rbx
0xd01b: mov rsi,rbp
0xd01e: pop rbx
0xd01f: pop rbp
0xd020: mov rdi,rax
0xd023: jmp 0x2970
0xd030: push rbx
0xd031: mov rbx,rdi
0xd034: call 0x2840
0xd039: mov rdi,rbx
0xd03c: lea rsi,[rax + 0x1]
0xd040: pop rbx
0xd041: jmp 0xd000
0xd080: call 0x2770
0xd085: nop word ptr cs:[rax + rax*0x1]
0xd08f: nop 
0xd22e: call 0x2850
0xd233: nop word ptr cs:[rax + rax*0x1]
0xd23d: nop dword ptr [rax]
0xd7ac: call 0x2850
0xd7b1: nop word ptr cs:[rax + rax*0x1]
0xd7bb: nop dword ptr [rax + rax*0x1]
0xd8ad: call 0x2850
0xd8b2: nop word ptr cs:[rax + rax*0x1]
0xd8bc: nop dword ptr [rax]
0xd8c0: push r12
0xd8c2: push rbp
0xd8c3: mov rbp,rdi
0xd8c6: push rbx
0xd8c7: call 0x27c0
0xd8cc: mov ebx,dword ptr [rbp]
0xd8cf: mov rdi,rbp
0xd8d2: mov r12,rax
0xd8d5: call 0xd090
0xd8da: and ebx,0x20
0xd8dd: test ebx,ebx
0xd8df: jnz 0xd8f8
0xd8e1: test eax,eax
0xd8e3: jz 0xd8ef
0xd8e5: test r12,r12
0xd8e8: mov eax,0xffffffff
0xd8ed: jz 0xd928
0xd8ef: pop rbx
0xd8f0: pop rbp
0xd8f1: pop r12
0xd8f3: ret 
0xd8f8: test eax,eax
0xd8fa: jnz 0xd918
0xd8fc: call 0x2780
0xd901: mov dword ptr [rax],0x0
0xd907: mov eax,0xffffffff
0xd90c: pop rbx
0xd90d: pop rbp
0xd90e: pop r12
0xd910: ret 
0xd918: pop rbx
0xd919: mov eax,0xffffffff
0xd91e: pop rbp
0xd91f: pop r12
0xd921: ret 
0xd928: call 0x2780
0xd92d: cmp dword ptr [rax],0x9
0xd930: pop rbx
0xd931: pop rbp
0xd932: pop r12
0xd934: setnz al
0xd937: movzx eax,al
0xd93a: neg eax
0xd93c: ret 
0xf515: call 0x2850
0xf589: call 0x2850
0xf58e: nop 
0xfb74: movsxd rdx,ecx
0xfb77: cmp rdx,r10
0xfb7a: jnc 0xfb8a
0xfb7c: add rdx,r15
0xfb7f: cmp byte ptr [rdx + r14*0x1],0x0
0xfb84: jnz 0x104c6
0xfb8a: cmp ecx,eax
0xfb8c: jge 0xfb96
0x104cb: nop dword ptr [rax + rax*0x1]
0x10697: call 0x2850
0x115b0: push r15
0x115b2: push r14
0x115b4: mov r15,rdx
0x115b7: push r13
0x115b9: push r12
0x115bb: lea r12,[rip+0x205a2e]
0x115c2: push rbp
0x115c3: lea rbp,[rip+0x205a2e]
0x115ca: push rbx
0x115cb: mov r13d,edi
0x115ce: mov r14,rsi
0x115d1: sub rbp,r12
0x115d4: sub rsp,0x8
0x115d8: sar rbp,0x3
0x115dc: call 0x26f0
0x115e1: test rbp,rbp
0x115e4: jz 0x11606
0x115e6: xor ebx,ebx
0x115e8: nop dword ptr [rax + rax*0x1]
0x115f0: mov rdx,r15
0x115f3: mov rsi,r14
0x115f6: mov edi,r13d
0x115f9: call qword ptr [r12 + rbx*0x8]
0x115fd: add rbx,0x1
0x11601: cmp rbp,rbx
0x11604: jnz 0x115f0
0x11606: add rsp,0x8
0x1160a: pop rbx
0x1160b: pop rbp
0x1160c: pop r12
0x1160e: pop r13
0x11610: pop r14
0x11612: pop r15
0x11614: ret 
0x11620: ret 
0x11640: sub rsp,0x8
0x11644: add rsp,0x8
0x11648: ret 
