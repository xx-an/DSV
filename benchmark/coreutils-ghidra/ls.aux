0x3210: sub rsp,0x8
0x3214: mov rax,qword ptr [rip+0x21cdbd]
0x321b: test rax,rax
0x321e: jz 0x3222
0x3220: call rax
0x3222: add rsp,0x8
0x3226: ret 
0x3230: push qword ptr [rip+0x21ca5a]
0x3236: jmp qword ptr [rip+0x21ca5c]
0x3246: push 0x0
0x324b: jmp 0x3230
0x3256: push 0x1
0x325b: jmp 0x3230
0x3266: push 0x2
0x326b: jmp 0x3230
0x3276: push 0x3
0x327b: jmp 0x3230
0x3286: push 0x4
0x328b: jmp 0x3230
0x3296: push 0x5
0x329b: jmp 0x3230
0x32a6: push 0x6
0x32ab: jmp 0x3230
0x32b6: push 0x7
0x32bb: jmp 0x3230
0x32c6: push 0x8
0x32cb: jmp 0x3230
0x32d0: jmp qword ptr [rip+0x21ca12]
0x32d6: push 0x9
0x32db: jmp 0x3230
0x32e6: push 0xa
0x32eb: jmp 0x3230
0x32f0: jmp qword ptr [rip+0x21ca02]
0x32f6: push 0xb
0x32fb: jmp 0x3230
0x3306: push 0xc
0x330b: jmp 0x3230
0x3316: push 0xd
0x331b: jmp 0x3230
0x3326: push 0xe
0x332b: jmp 0x3230
0x3336: push 0xf
0x333b: jmp 0x3230
0x3346: push 0x10
0x334b: jmp 0x3230
0x3356: push 0x11
0x335b: jmp 0x3230
0x3366: push 0x12
0x336b: jmp 0x3230
0x3376: push 0x13
0x337b: jmp 0x3230
0x3386: push 0x14
0x338b: jmp 0x3230
0x3396: push 0x15
0x339b: jmp 0x3230
0x33a0: jmp qword ptr [rip+0x21c9aa]
0x33a6: push 0x16
0x33ab: jmp 0x3230
0x33b6: push 0x17
0x33bb: jmp 0x3230
0x33c6: push 0x18
0x33cb: jmp 0x3230
0x33d6: push 0x19
0x33db: jmp 0x3230
0x33e6: push 0x1a
0x33eb: jmp 0x3230
0x33f6: push 0x1b
0x33fb: jmp 0x3230
0x3406: push 0x1c
0x340b: jmp 0x3230
0x3416: push 0x1d
0x341b: jmp 0x3230
0x3420: jmp qword ptr [rip+0x21c96a]
0x3426: push 0x1e
0x342b: jmp 0x3230
0x3436: push 0x1f
0x343b: jmp 0x3230
0x3446: push 0x20
0x344b: jmp 0x3230
0x3456: push 0x21
0x345b: jmp 0x3230
0x3466: push 0x22
0x346b: jmp 0x3230
0x3470: jmp qword ptr [rip+0x21c942]
0x3476: push 0x23
0x347b: jmp 0x3230
0x3486: push 0x24
0x348b: jmp 0x3230
0x3496: push 0x25
0x349b: jmp 0x3230
0x34a6: push 0x26
0x34ab: jmp 0x3230
0x34b6: push 0x27
0x34bb: jmp 0x3230
0x34c0: jmp qword ptr [rip+0x21c91a]
0x34c6: push 0x28
0x34cb: jmp 0x3230
0x34d6: push 0x29
0x34db: jmp 0x3230
0x34e6: push 0x2a
0x34eb: jmp 0x3230
0x34f6: push 0x2b
0x34fb: jmp 0x3230
0x3506: push 0x2c
0x350b: jmp 0x3230
0x3516: push 0x2d
0x351b: jmp 0x3230
0x3526: push 0x2e
0x352b: jmp 0x3230
0x3530: jmp qword ptr [rip+0x21c8e2]
0x3536: push 0x2f
0x353b: jmp 0x3230
0x3546: push 0x30
0x354b: jmp 0x3230
0x3556: push 0x31
0x355b: jmp 0x3230
0x3566: push 0x32
0x356b: jmp 0x3230
0x3576: push 0x33
0x357b: jmp 0x3230
0x3580: jmp qword ptr [rip+0x21c8ba]
0x3586: push 0x34
0x358b: jmp 0x3230
0x3596: push 0x35
0x359b: jmp 0x3230
0x35a6: push 0x36
0x35ab: jmp 0x3230
0x35b6: push 0x37
0x35bb: jmp 0x3230
0x35c0: jmp qword ptr [rip+0x21c89a]
0x35c6: push 0x38
0x35cb: jmp 0x3230
0x35d6: push 0x39
0x35db: jmp 0x3230
0x35e6: push 0x3a
0x35eb: jmp 0x3230
0x35f6: push 0x3b
0x35fb: jmp 0x3230
0x3600: jmp qword ptr [rip+0x21c87a]
0x3606: push 0x3c
0x360b: jmp 0x3230
0x3616: push 0x3d
0x361b: jmp 0x3230
0x3620: jmp qword ptr [rip+0x21c86a]
0x3626: push 0x3e
0x362b: jmp 0x3230
0x3636: push 0x3f
0x363b: jmp 0x3230
0x3646: push 0x40
0x364b: jmp 0x3230
0x3656: push 0x41
0x365b: jmp 0x3230
0x3666: push 0x42
0x366b: jmp 0x3230
0x3670: jmp qword ptr [rip+0x21c842]
0x3676: push 0x43
0x367b: jmp 0x3230
0x3686: push 0x44
0x368b: jmp 0x3230
0x3696: push 0x45
0x369b: jmp 0x3230
0x36a0: jmp qword ptr [rip+0x21c82a]
0x36a6: push 0x46
0x36ab: jmp 0x3230
0x36b6: push 0x47
0x36bb: jmp 0x3230
0x36c0: jmp qword ptr [rip+0x21c81a]
0x36c6: push 0x48
0x36cb: jmp 0x3230
0x36d6: push 0x49
0x36db: jmp 0x3230
0x36e6: push 0x4a
0x36eb: jmp 0x3230
0x36f6: push 0x4b
0x36fb: jmp 0x3230
0x3706: push 0x4c
0x370b: jmp 0x3230
0x3716: push 0x4d
0x371b: jmp 0x3230
0x3726: push 0x4e
0x372b: jmp 0x3230
0x3736: push 0x4f
0x373b: jmp 0x3230
0x3746: push 0x50
0x374b: jmp 0x3230
0x3756: push 0x51
0x375b: jmp 0x3230
0x3766: push 0x52
0x376b: jmp 0x3230
0x3770: jmp qword ptr [rip+0x21c7c2]
0x3776: push 0x53
0x377b: jmp 0x3230
0x3786: push 0x54
0x378b: jmp 0x3230
0x3796: push 0x55
0x379b: jmp 0x3230
0x37a6: push 0x56
0x37ab: jmp 0x3230
0x37b6: push 0x57
0x37bb: jmp 0x3230
0x37c6: push 0x58
0x37cb: jmp 0x3230
0x37d6: push 0x59
0x37db: jmp 0x3230
0x37e6: push 0x5a
0x37eb: jmp 0x3230
0x37f6: push 0x5b
0x37fb: jmp 0x3230
0x3806: push 0x5c
0x380b: jmp 0x3230
0x3816: push 0x5d
0x381b: jmp 0x3230
0x3826: push 0x5e
0x382b: jmp 0x3230
0x3836: push 0x5f
0x383b: jmp 0x3230
0x3846: push 0x60
0x384b: jmp 0x3230
0x3856: push 0x61
0x385b: jmp 0x3230
0x3866: push 0x62
0x386b: jmp 0x3230
0x3876: push 0x63
0x387b: jmp 0x3230
0x3890: jmp qword ptr [rip+0x21c75a]
0x447c: lea r8,[rip+0xf4d]
0x4483: lea rcx,[rip+0xf06]
0x448a: lea rdx,[rip+0xeef]
0x4491: xor esi,esi
0x4493: mov edi,0x1e
0x4498: call 0xdfb0
0x449d: test rax,rax
0x44a0: mov qword ptr [rip+0x21cf21],rax
0x44a7: jz 0x5264
0x44ad: mov r8,qword ptr [rip+0x21bb0c]
0x44b4: mov rcx,qword ptr [rip+0x21bb25]
0x44bb: lea rdi,[rip+0x21cc1e]
0x44c2: xor edx,edx
0x44c4: xor esi,esi
0x44c6: call 0x154f0
0x4657: test rax,rax
0x465a: jz 0x5206
0x4660: mov rdi,rax
0x4663: call 0x3880
0x4668: mov rdi,qword ptr [rbx]
0x466b: call 0x3880
0x4670: mov rdi,qword ptr [rbx + 0x8]
0x4674: call 0x3880
0x4679: mov rdi,rbx
0x467c: call 0x3880
0x4681: jmp 0x45e5
0x4741: jmp 0x3a4b
0x478c: jmp 0x3a73
0x479e: lea rdi,[rip+0x157f7]
0x47a5: mov rcx,r15
0x47a8: mov edx,0x1
0x47ad: mov esi,0x3
0x47b2: call 0x9690
0x47b7: jmp 0x4594
0x481a: sub ebx,0x1
0x481d: jnz 0x4810
0x4832: jmp 0x469c
0x49f8: lea rdi,[rip+0x21c741]
0x49ff: mov r8,r15
0x4a02: mov rcx,r14
0x4a05: xor edx,edx
0x4a07: xor esi,esi
0x4a09: call 0x154f0
0x4a0e: jmp 0x4524
0x4b95: mov rbx,r12
0x4b98: mov r12,r15
0x4c3c: jmp 0x3ae7
0x4f0c: mov rdi,qword ptr [rip+0x21c3ed]
0x4f13: call 0x3880
0x4f18: mov rdi,qword ptr [rip+0x21c3e9]
0x4f1f: jmp 0x4f2d
0x4f21: mov r14,qword ptr [rdi + 0x20]
0x4f25: call 0x3880
0x4f2a: mov rdi,r14
0x4f2d: test rdi,rdi
0x4f30: jnz 0x4f21
0x4f32: mov byte ptr [rip+0x21c3d9],0x0
0x503d: mov rbx,qword ptr [rip+0x21b27c]
0x5044: lea rsi,[rip+0x12ae1]
0x504b: mov edx,0x5
0x5050: xor edi,edi
0x5052: call 0x33e0
0x5057: mov rsi,rbx
0x505a: mov rdi,rax
0x505d: lea rbx,[rip+0x21a97c]
0x5064: call 0x3570
0x5069: lea rcx,[rip+0x12993]
0x5070: mov rdi,qword ptr [rip+0x21b249]
0x5077: add rbx,0x8
0x507b: xor eax,eax
0x507d: mov rdx,rbp
0x5080: mov esi,0x1
0x5085: call 0x3800
0x508a: mov rcx,qword ptr [rbx]
0x508d: test rcx,rcx
0x5090: jnz 0x5070
0x5092: mov rbx,qword ptr [rip+0x21b227]
0x5099: lea rsi,[rip+0x14d68]
0x50a0: xor edi,edi
0x50a2: mov edx,0x5
0x50a7: call 0x33e0
0x50ac: mov rsi,rbx
0x50af: mov rdi,rax
0x50b2: call 0x3570
0x5194: jmp 0x4a66
0x5206: lea rcx,[rip+0x114ad]
0x520d: lea rsi,[rip+0x12643]
0x5214: lea rdi,[rip+0x129a4]
0x521b: mov edx,0x640
0x5220: call 0x34d0
0x525f: call 0x3420
0x5264: call 0x147e0
0x5269: nop dword ptr [rax]
0x529a: hlt 
0x52a0: lea rdi,[rip+0x21afc1]
0x52a7: push rbp
0x52a8: lea rax,[rip+0x21afb9]
0x52af: cmp rax,rdi
0x52b2: mov rbp,rsp
0x52b5: jz 0x52d0
0x52b7: mov rax,qword ptr [rip+0x21ad0a]
0x52be: test rax,rax
0x52c1: jz 0x52d0
0x52c3: pop rbp
0x52c4: jmp rax
0x52d0: pop rbp
0x52d1: ret 
0x52e0: lea rdi,[rip+0x21af81]
0x52e7: lea rsi,[rip+0x21af7a]
0x52ee: push rbp
0x52ef: sub rsi,rdi
0x52f2: mov rbp,rsp
0x52f5: sar rsi,0x3
0x52f9: mov rax,rsi
0x52fc: shr rax,0x3f
0x5300: add rsi,rax
0x5303: sar rsi,1
0x5306: jz 0x5320
0x5308: mov rax,qword ptr [rip+0x21acd9]
0x530f: test rax,rax
0x5312: jz 0x5320
0x5314: pop rbp
0x5315: jmp rax
0x5320: pop rbp
0x5321: ret 
0x5330: cmp byte ptr [rip+0x21af91],0x0
0x5337: jnz 0x5368
0x5339: cmp qword ptr [rip+0x21acaf],0x0
0x5341: push rbp
0x5342: mov rbp,rsp
0x5345: jz 0x5353
0x5347: mov rdi,qword ptr [rip+0x21acba]
0x534e: call 0x3890
0x5353: call 0x52a0
0x5358: mov byte ptr [rip+0x21af69],0x1
0x535f: pop rbp
0x5360: ret 
0x5368: ret 
0x5370: push rbp
0x5371: mov rbp,rsp
0x5374: pop rbp
0x5375: jmp 0x52e0
0x5380: mov rax,qword ptr [rdi]
0x5383: xor edx,edx
0x5385: div rsi
0x5388: mov rax,rdx
0x538b: ret 
0x5390: xor eax,eax
0x5392: mov rdx,qword ptr [rsi]
0x5395: cmp qword ptr [rdi],rdx
0x5398: jz 0x53a0
0x539a: ret 
0x53a0: mov rax,qword ptr [rsi + 0x8]
0x53a4: cmp qword ptr [rdi + 0x8],rax
0x53a8: setz al
0x53ab: ret 
0x53b0: mov eax,dword ptr [rip+0x21be62]
0x53b6: test eax,eax
0x53b8: jnz 0x53c0
0x53ba: mov dword ptr [rip+0x21be58],edi
0x53c0: ret 
0x53d0: jmp 0x3880
0x574a: call 0x3420
0x574f: nop 
0x59bc: call 0x3420
0x59c1: nop dword ptr [rax + rax*0x1]
0x59c6: nop word ptr cs:[rax + rax*0x1]
0x5a40: mov rax,qword ptr [rsi + 0x48]
0x5a44: cmp qword ptr [rdi + 0x48],rax
0x5a48: jg 0x5a70
0x5a4a: jl 0x5a60
0x5a4c: mov rsi,qword ptr [rsi]
0x5a4f: mov rdi,qword ptr [rdi]
0x5a52: jmp 0x3590
0x5a60: mov eax,0x1
0x5a65: ret 
0x5a70: mov eax,0xffffffff
0x5a75: ret 
0x5a80: mov rdx,qword ptr [rdi + 0x48]
0x5a84: cmp qword ptr [rsi + 0x48],rdx
0x5a88: mov rax,rsi
0x5a8b: jg 0x5ab0
0x5a8d: jl 0x5aa0
0x5a8f: mov rsi,qword ptr [rdi]
0x5a92: mov rdi,qword ptr [rax]
0x5a95: jmp 0x3590
0x5aa0: mov eax,0x1
0x5aa5: ret 
0x5ab0: mov eax,0xffffffff
0x5ab5: ret 
0x5ac0: mov rsi,qword ptr [rsi]
0x5ac3: mov rdi,qword ptr [rdi]
0x5ac6: jmp 0x3590
0x5ad0: mov rax,rsi
0x5ad3: mov rsi,qword ptr [rdi]
0x5ad6: mov rdi,qword ptr [rax]
0x5ad9: jmp 0x3590
0x5ae0: push rbp
0x5ae1: push rbx
0x5ae2: mov rbx,rdi
0x5ae5: mov rdx,rbx
0x5ae8: mov rcx,-0x1
0x5aef: mov esi,0x2
0x5af4: sub rsp,0x18
0x5af8: mov r8,qword ptr [rip+0x21b7d1]
0x5aff: lea rdi,[rsp + 0x6]
0x5b04: mov rax,qword ptr fs:[rip+0xffffffffffffa51b]
0x5b0d: mov qword ptr [rsp + 0x8],rax
0x5b12: xor eax,eax
0x5b14: call 0x136e0
0x5b19: movzx edx,byte ptr [rsp + 0x6]
0x5b1e: cmp byte ptr [rbx],dl
0x5b20: jz 0x5b40
0x5b22: mov eax,0x1
0x5b27: mov rcx,qword ptr [rsp + 0x8]
0x5b2c: xor rcx,qword ptr fs:[rip+0xffffffffffffa4f3]
0x5b35: jnz 0x5b53
0x5b37: add rsp,0x18
0x5b3b: pop rbx
0x5b3c: pop rbp
0x5b3d: ret 
0x5b40: mov rbp,rax
0x5b43: mov rdi,rbx
0x5b46: call 0x3400
0x5b4b: cmp rax,rbp
0x5b4e: setnz al
0x5b51: jmp 0x5b27
0x5b53: call 0x3420
0x5b58: nop dword ptr [rax + rax*0x1]
0x5c31: nop dword ptr [rax + rax*0x1]
0x5c36: nop word ptr cs:[rax + rax*0x1]
0x5dd2: nop dword ptr [rax]
0x5dd6: nop word ptr cs:[rax + rax*0x1]
0x5de0: push rbp
0x5de1: push rbx
0x5de2: mov rbp,rsi
0x5de5: mov rbx,rdi
0x5de8: sub rsp,0x8
0x5dec: call 0x32a0
0x5df1: mov dword ptr [rax],0x0
0x5df7: add rsp,0x8
0x5dfb: mov rsi,rbp
0x5dfe: mov rdi,rbx
0x5e01: pop rbx
0x5e02: pop rbp
0x5e03: jmp 0x36a0
0x5e10: mov rax,qword ptr [rsi + 0x48]
0x5e14: cmp qword ptr [rdi + 0x48],rax
0x5e18: jg 0x5e30
0x5e1a: mov eax,0x1
0x5e1f: jge 0x5e28
0x5e21: ret 
0x5e28: mov rsi,qword ptr [rsi]
0x5e2b: mov rdi,qword ptr [rdi]
0x5e2e: jmp 0x5de0
0x5e30: mov eax,0xffffffff
0x5e35: ret 
0x5e40: mov rax,qword ptr [rdi + 0x48]
0x5e44: cmp qword ptr [rsi + 0x48],rax
0x5e48: mov rdx,rsi
0x5e4b: jg 0x5e70
0x5e4d: mov eax,0x1
0x5e52: jge 0x5e60
0x5e54: ret 
0x5e60: mov rsi,qword ptr [rdi]
0x5e63: mov rdi,qword ptr [rdx]
0x5e66: jmp 0x5de0
0x5e70: mov eax,0xffffffff
0x5e75: ret 
0x5e80: mov rsi,qword ptr [rsi]
0x5e83: mov rdi,qword ptr [rdi]
0x5e86: jmp 0x5de0
0x5e90: mov rax,rsi
0x5e93: mov rsi,qword ptr [rdi]
0x5e96: mov rdi,qword ptr [rax]
0x5e99: jmp 0x5de0
0x5ea0: mov rax,rsi
0x5ea3: mov rsi,qword ptr [rdi]
0x5ea6: mov rdi,qword ptr [rax]
0x5ea9: jmp 0xd250
0x5eb0: mov rsi,qword ptr [rsi]
0x5eb3: mov rdi,qword ptr [rdi]
0x5eb6: jmp 0xd250
0x5eda: cmp qword ptr [rip+0x21b4e6],0x0
0x5ee2: jz 0x5ef0
0x5ee4: mov rsi,rdi
0x5ee7: xor edx,edx
0x5ee9: xor edi,edi
0x5eeb: call 0x59d0
0x5f99: mov rdi,r15
0x5f9c: call 0xcd10
0x5fa1: cmp byte ptr [rax],0x2e
0x5fa4: jz 0x6018
0x5fa6: cmp byte ptr [r15],0x2f
0x5faa: jz 0x6000
0x5fac: mov rsi,r15
0x5faf: xor edx,edx
0x5fb1: mov rdi,r14
0x5fb4: call 0xd060
0x5fb9: mov rsi,qword ptr [rbp + 0x8]
0x5fbd: mov r15,rax
0x5fc0: mov rdi,rax
0x5fc3: mov edx,r13d
0x5fc6: call 0x59d0
0x5fcb: mov rdi,r15
0x5fce: call 0x3880
0x6018: xor edx,edx
0x601a: cmp byte ptr [rax + 0x1],0x2e
0x601e: setz dl
0x6021: movzx eax,byte ptr [rax + rdx*0x1 + 0x1]
0x6026: test al,al
0x6028: jz 0x5f2b
0x602e: cmp al,0x2f
0x6030: jz 0x5f2b
0x6036: jmp 0x5fa6
0x60e2: jmp 0x60c5
0x60fa: mov rcx,qword ptr [rip+0x21b1bf]
0x6101: jmp 0x6080
0x627a: jmp 0x6244
0x62e0: mov eax,dword ptr [rip+0x21af32]
0x62e6: test eax,eax
0x62e8: jnz 0x62f9
0x62ea: mov eax,dword ptr [rip+0x21af24]
0x62f0: add eax,0x1
0x62f3: mov dword ptr [rip+0x21af1b],eax
0x62f9: ret 
0x632f: test bl,bl
0x6331: jz 0x6348
0x6333: mov dword ptr [rip+0x21aed3],0x2
0x633d: pop rbx
0x633e: pop rbp
0x633f: pop r12
0x6341: ret 
0x6348: mov eax,dword ptr [rip+0x21aec2]
0x634e: test eax,eax
0x6350: jnz 0x633d
0x6352: pop rbx
0x6353: mov dword ptr [rip+0x21aeb3],0x1
0x635d: pop rbp
0x635e: pop r12
0x6360: ret 
0x6370: mov edx,dword ptr [0xa8 + rsi]
0x6376: mov ecx,dword ptr [0xa8 + rdi]
0x637c: cmp edx,0x3
0x637f: setz al
0x6382: cmp edx,0x9
0x6385: setz dl
0x6388: or eax,edx
0x638a: cmp ecx,0x3
0x638d: jz 0x63b8
0x638f: cmp ecx,0x9
0x6392: jz 0x63b8
0x6394: mov edx,dword ptr [0xac + rdi]
0x639a: and edx,0xf000
0x63a0: test al,al
0x63a2: jz 0x63d8
0x63a4: cmp edx,0x4000
0x63aa: jz 0x63f2
0x63ac: mov eax,0x1
0x63b1: ret 
0x63b8: test al,al
0x63ba: jnz 0x63f2
0x63bc: mov eax,dword ptr [0xac + rsi]
0x63c2: and eax,0xf000
0x63c7: cmp eax,0x4000
0x63cc: jz 0x63f2
0x63ce: mov eax,0xffffffff
0x63d3: ret 
0x63d8: mov eax,dword ptr [0xac + rsi]
0x63de: and eax,0xf000
0x63e3: cmp eax,0x4000
0x63e8: jz 0x63a4
0x63ea: cmp edx,0x4000
0x63f0: jz 0x63ce
0x63f2: mov rax,qword ptr [rsi + 0x48]
0x63f6: cmp qword ptr [rdi + 0x48],rax
0x63fa: jg 0x63ce
0x63fc: mov eax,0x1
0x6401: jl 0x63d3
0x6403: mov rsi,qword ptr [rsi]
0x6406: mov rdi,qword ptr [rdi]
0x6409: jmp 0x5de0
0x6410: mov edx,dword ptr [0xa8 + rsi]
0x6416: mov ecx,dword ptr [0xa8 + rdi]
0x641c: cmp edx,0x3
0x641f: setz al
0x6422: cmp edx,0x9
0x6425: setz dl
0x6428: or eax,edx
0x642a: cmp ecx,0x3
0x642d: jz 0x6458
0x642f: cmp ecx,0x9
0x6432: jz 0x6458
0x6434: mov edx,dword ptr [0xac + rdi]
0x643a: and edx,0xf000
0x6440: test al,al
0x6442: jz 0x6478
0x6444: cmp edx,0x4000
0x644a: jz 0x6492
0x644c: mov eax,0x1
0x6451: ret 
0x6458: test al,al
0x645a: jnz 0x6492
0x645c: mov eax,dword ptr [0xac + rsi]
0x6462: and eax,0xf000
0x6467: cmp eax,0x4000
0x646c: jz 0x6492
0x646e: mov eax,0xffffffff
0x6473: ret 
0x6478: mov eax,dword ptr [0xac + rsi]
0x647e: and eax,0xf000
0x6483: cmp eax,0x4000
0x6488: jz 0x6444
0x648a: cmp edx,0x4000
0x6490: jz 0x646e
0x6492: mov rax,qword ptr [rsi + 0x48]
0x6496: cmp qword ptr [rdi + 0x48],rax
0x649a: jg 0x646e
0x649c: jl 0x644c
0x649e: mov rsi,qword ptr [rsi]
0x64a1: mov rdi,qword ptr [rdi]
0x64a4: jmp 0x3590
0x64b0: mov rdx,rsi
0x64b3: mov esi,dword ptr [0xa8 + rdi]
0x64b9: mov ecx,dword ptr [0xa8 + rdx]
0x64bf: cmp ecx,0x3
0x64c2: setz al
0x64c5: cmp ecx,0x9
0x64c8: setz cl
0x64cb: or eax,ecx
0x64cd: cmp esi,0x3
0x64d0: jz 0x64f8
0x64d2: cmp esi,0x9
0x64d5: jz 0x64f8
0x64d7: mov ecx,dword ptr [0xac + rdi]
0x64dd: and ecx,0xf000
0x64e3: test al,al
0x64e5: jz 0x6518
0x64e7: cmp ecx,0x4000
0x64ed: jz 0x6532
0x64ef: mov eax,0x1
0x64f4: ret 
0x64f8: test al,al
0x64fa: jnz 0x6532
0x64fc: mov eax,dword ptr [0xac + rdx]
0x6502: and eax,0xf000
0x6507: cmp eax,0x4000
0x650c: jz 0x6532
0x650e: mov eax,0xffffffff
0x6513: ret 
0x6518: mov eax,dword ptr [0xac + rdx]
0x651e: and eax,0xf000
0x6523: cmp eax,0x4000
0x6528: jz 0x64e7
0x652a: cmp ecx,0x4000
0x6530: jz 0x650e
0x6532: mov rax,qword ptr [rdi + 0x48]
0x6536: cmp qword ptr [rdx + 0x48],rax
0x653a: jg 0x650e
0x653c: mov eax,0x1
0x6541: jl 0x6513
0x6543: mov rsi,qword ptr [rdi]
0x6546: mov rdi,qword ptr [rdx]
0x6549: jmp 0x5de0
0x6550: mov rdx,rsi
0x6553: mov esi,dword ptr [0xa8 + rdi]
0x6559: mov ecx,dword ptr [0xa8 + rdx]
0x655f: cmp ecx,0x3
0x6562: setz al
0x6565: cmp ecx,0x9
0x6568: setz cl
0x656b: or eax,ecx
0x656d: cmp esi,0x3
0x6570: jz 0x6598
0x6572: cmp esi,0x9
0x6575: jz 0x6598
0x6577: mov ecx,dword ptr [0xac + rdi]
0x657d: and ecx,0xf000
0x6583: test al,al
0x6585: jz 0x65b8
0x6587: cmp ecx,0x4000
0x658d: jz 0x65d2
0x658f: mov eax,0x1
0x6594: ret 
0x6598: test al,al
0x659a: jnz 0x65d2
0x659c: mov eax,dword ptr [0xac + rdx]
0x65a2: and eax,0xf000
0x65a7: cmp eax,0x4000
0x65ac: jz 0x65d2
0x65ae: mov eax,0xffffffff
0x65b3: ret 
0x65b8: mov eax,dword ptr [0xac + rdx]
0x65be: and eax,0xf000
0x65c3: cmp eax,0x4000
0x65c8: jz 0x6587
0x65ca: cmp ecx,0x4000
0x65d0: jz 0x65ae
0x65d2: mov rax,qword ptr [rdi + 0x48]
0x65d6: cmp qword ptr [rdx + 0x48],rax
0x65da: jg 0x65ae
0x65dc: jl 0x658f
0x65de: mov rsi,qword ptr [rdi]
0x65e1: mov rdi,qword ptr [rdx]
0x65e4: jmp 0x3590
0x65f0: mov edx,dword ptr [0xa8 + rsi]
0x65f6: mov ecx,dword ptr [0xa8 + rdi]
0x65fc: cmp edx,0x3
0x65ff: setz al
0x6602: cmp edx,0x9
0x6605: setz dl
0x6608: or eax,edx
0x660a: cmp ecx,0x3
0x660d: jz 0x6638
0x660f: cmp ecx,0x9
0x6612: jz 0x6638
0x6614: mov edx,dword ptr [0xac + rdi]
0x661a: and edx,0xf000
0x6620: test al,al
0x6622: jz 0x6658
0x6624: cmp edx,0x4000
0x662a: jz 0x6672
0x662c: mov eax,0x1
0x6631: ret 
0x6638: test al,al
0x663a: jnz 0x6672
0x663c: mov eax,dword ptr [0xac + rsi]
0x6642: and eax,0xf000
0x6647: cmp eax,0x4000
0x664c: jz 0x6672
0x664e: mov eax,0xffffffff
0x6653: ret 
0x6658: mov eax,dword ptr [0xac + rsi]
0x665e: and eax,0xf000
0x6663: cmp eax,0x4000
0x6668: jz 0x6624
0x666a: cmp edx,0x4000
0x6670: jz 0x664e
0x6672: mov rsi,qword ptr [rsi]
0x6675: mov rdi,qword ptr [rdi]
0x6678: jmp 0x5de0
0x6680: mov edx,dword ptr [0xa8 + rsi]
0x6686: mov ecx,dword ptr [0xa8 + rdi]
0x668c: cmp edx,0x3
0x668f: setz al
0x6692: cmp edx,0x9
0x6695: setz dl
0x6698: or eax,edx
0x669a: cmp ecx,0x3
0x669d: jz 0x66c8
0x669f: cmp ecx,0x9
0x66a2: jz 0x66c8
0x66a4: mov edx,dword ptr [0xac + rdi]
0x66aa: and edx,0xf000
0x66b0: test al,al
0x66b2: jz 0x66e8
0x66b4: cmp edx,0x4000
0x66ba: jz 0x6702
0x66bc: mov eax,0x1
0x66c1: ret 
0x66c8: test al,al
0x66ca: jnz 0x6702
0x66cc: mov eax,dword ptr [0xac + rsi]
0x66d2: and eax,0xf000
0x66d7: cmp eax,0x4000
0x66dc: jz 0x6702
0x66de: mov eax,0xffffffff
0x66e3: ret 
0x66e8: mov eax,dword ptr [0xac + rsi]
0x66ee: and eax,0xf000
0x66f3: cmp eax,0x4000
0x66f8: jz 0x66b4
0x66fa: cmp edx,0x4000
0x6700: jz 0x66de
0x6702: mov rsi,qword ptr [rsi]
0x6705: mov rdi,qword ptr [rdi]
0x6708: jmp 0x3590
0x6710: mov rcx,rsi
0x6713: mov esi,dword ptr [0xa8 + rdi]
0x6719: mov edx,dword ptr [0xa8 + rcx]
0x671f: cmp edx,0x3
0x6722: setz al
0x6725: cmp edx,0x9
0x6728: setz dl
0x672b: or eax,edx
0x672d: cmp esi,0x3
0x6730: jz 0x6758
0x6732: cmp esi,0x9
0x6735: jz 0x6758
0x6737: mov edx,dword ptr [0xac + rdi]
0x673d: and edx,0xf000
0x6743: test al,al
0x6745: jz 0x6778
0x6747: cmp edx,0x4000
0x674d: jz 0x6792
0x674f: mov eax,0x1
0x6754: ret 
0x6758: test al,al
0x675a: jnz 0x6792
0x675c: mov eax,dword ptr [0xac + rcx]
0x6762: and eax,0xf000
0x6767: cmp eax,0x4000
0x676c: jz 0x6792
0x676e: mov eax,0xffffffff
0x6773: ret 
0x6778: mov eax,dword ptr [0xac + rcx]
0x677e: and eax,0xf000
0x6783: cmp eax,0x4000
0x6788: jz 0x6747
0x678a: cmp edx,0x4000
0x6790: jz 0x676e
0x6792: mov rsi,qword ptr [rdi]
0x6795: mov rdi,qword ptr [rcx]
0x6798: jmp 0x5de0
0x67a0: mov rdx,rsi
0x67a3: mov esi,dword ptr [0xa8 + rdi]
0x67a9: mov ecx,dword ptr [0xa8 + rdx]
0x67af: cmp ecx,0x3
0x67b2: setz al
0x67b5: cmp ecx,0x9
0x67b8: setz cl
0x67bb: or eax,ecx
0x67bd: cmp esi,0x3
0x67c0: jz 0x67e8
0x67c2: cmp esi,0x9
0x67c5: jz 0x67e8
0x67c7: mov ecx,dword ptr [0xac + rdi]
0x67cd: and ecx,0xf000
0x67d3: test al,al
0x67d5: jz 0x6808
0x67d7: cmp ecx,0x4000
0x67dd: jz 0x6822
0x67df: mov eax,0x1
0x67e4: ret 
0x67e8: test al,al
0x67ea: jnz 0x6822
0x67ec: mov eax,dword ptr [0xac + rdx]
0x67f2: and eax,0xf000
0x67f7: cmp eax,0x4000
0x67fc: jz 0x6822
0x67fe: mov eax,0xffffffff
0x6803: ret 
0x6808: mov eax,dword ptr [0xac + rdx]
0x680e: and eax,0xf000
0x6813: cmp eax,0x4000
0x6818: jz 0x67d7
0x681a: cmp ecx,0x4000
0x6820: jz 0x67fe
0x6822: mov rsi,qword ptr [rdi]
0x6825: mov rdi,qword ptr [rdx]
0x6828: jmp 0x3590
0x6978: jmp 0x695b
0x6980: mov edx,dword ptr [0xa8 + rsi]
0x6986: mov ecx,dword ptr [0xa8 + rdi]
0x698c: cmp edx,0x3
0x698f: setz al
0x6992: cmp edx,0x9
0x6995: setz dl
0x6998: or eax,edx
0x699a: cmp ecx,0x3
0x699d: jz 0x69c8
0x699f: cmp ecx,0x9
0x69a2: jz 0x69c8
0x69a4: mov edx,dword ptr [0xac + rdi]
0x69aa: and edx,0xf000
0x69b0: test al,al
0x69b2: jz 0x69e8
0x69b4: cmp edx,0x4000
0x69ba: jz 0x6a08
0x69bc: mov eax,0x1
0x69c1: ret 
0x69c8: test al,al
0x69ca: jnz 0x6a08
0x69cc: mov eax,dword ptr [0xac + rsi]
0x69d2: and eax,0xf000
0x69d7: cmp eax,0x4000
0x69dc: jz 0x6a08
0x69de: mov eax,0xffffffff
0x69e3: ret 
0x69e8: mov eax,dword ptr [0xac + rsi]
0x69ee: and eax,0xf000
0x69f3: cmp eax,0x4000
0x69f8: jz 0x69b4
0x69fa: cmp edx,0x4000
0x6a00: jz 0x69de
0x6a02: nop word ptr [rax + rax*0x1]
0x6a08: mov rax,qword ptr [rsi + 0x70]
0x6a0c: cmp qword ptr [rdi + 0x70],rax
0x6a10: jg 0x69de
0x6a12: jl 0x69bc
0x6a14: mov rax,qword ptr [rsi + 0x78]
0x6a18: sub eax,dword ptr [rdi + 0x78]
0x6a1b: jnz 0x69e3
0x6a1d: mov rsi,qword ptr [rsi]
0x6a20: mov rdi,qword ptr [rdi]
0x6a23: jmp 0x3590
0x6a30: mov rdx,rsi
0x6a33: mov esi,dword ptr [0xa8 + rdi]
0x6a39: mov ecx,dword ptr [0xa8 + rdx]
0x6a3f: cmp ecx,0x3
0x6a42: setz al
0x6a45: cmp ecx,0x9
0x6a48: setz cl
0x6a4b: or eax,ecx
0x6a4d: cmp esi,0x3
0x6a50: jz 0x6a78
0x6a52: cmp esi,0x9
0x6a55: jz 0x6a78
0x6a57: mov ecx,dword ptr [0xac + rdi]
0x6a5d: and ecx,0xf000
0x6a63: test al,al
0x6a65: jz 0x6a98
0x6a67: cmp ecx,0x4000
0x6a6d: jz 0x6ab2
0x6a6f: mov eax,0x1
0x6a74: ret 
0x6a78: test al,al
0x6a7a: jnz 0x6ab2
0x6a7c: mov eax,dword ptr [0xac + rdx]
0x6a82: and eax,0xf000
0x6a87: cmp eax,0x4000
0x6a8c: jz 0x6ab2
0x6a8e: mov eax,0xffffffff
0x6a93: ret 
0x6a98: mov eax,dword ptr [0xac + rdx]
0x6a9e: and eax,0xf000
0x6aa3: cmp eax,0x4000
0x6aa8: jz 0x6a67
0x6aaa: cmp ecx,0x4000
0x6ab0: jz 0x6a8e
0x6ab2: mov rsi,qword ptr [rdi]
0x6ab5: mov rdi,qword ptr [rdx]
0x6ab8: jmp 0xd250
0x6ac0: mov edx,dword ptr [0xa8 + rsi]
0x6ac6: mov ecx,dword ptr [0xa8 + rdi]
0x6acc: cmp edx,0x3
0x6acf: setz al
0x6ad2: cmp edx,0x9
0x6ad5: setz dl
0x6ad8: or eax,edx
0x6ada: cmp ecx,0x3
0x6add: jz 0x6b08
0x6adf: cmp ecx,0x9
0x6ae2: jz 0x6b08
0x6ae4: mov edx,dword ptr [0xac + rdi]
0x6aea: and edx,0xf000
0x6af0: test al,al
0x6af2: jz 0x6b28
0x6af4: cmp edx,0x4000
0x6afa: jz 0x6b42
0x6afc: mov eax,0x1
0x6b01: ret 
0x6b08: test al,al
0x6b0a: jnz 0x6b42
0x6b0c: mov eax,dword ptr [0xac + rsi]
0x6b12: and eax,0xf000
0x6b17: cmp eax,0x4000
0x6b1c: jz 0x6b42
0x6b1e: mov eax,0xffffffff
0x6b23: ret 
0x6b28: mov eax,dword ptr [0xac + rsi]
0x6b2e: and eax,0xf000
0x6b33: cmp eax,0x4000
0x6b38: jz 0x6af4
0x6b3a: cmp edx,0x4000
0x6b40: jz 0x6b1e
0x6b42: mov rsi,qword ptr [rsi]
0x6b45: mov rdi,qword ptr [rdi]
0x6b48: jmp 0xd250
0x6b50: mov edx,dword ptr [0xa8 + rsi]
0x6b56: mov ecx,dword ptr [0xa8 + rdi]
0x6b5c: cmp edx,0x3
0x6b5f: setz al
0x6b62: cmp edx,0x9
0x6b65: setz dl
0x6b68: or eax,edx
0x6b6a: cmp ecx,0x3
0x6b6d: jz 0x6b98
0x6b6f: cmp ecx,0x9
0x6b72: jz 0x6b98
0x6b74: mov edx,dword ptr [0xac + rdi]
0x6b7a: and edx,0xf000
0x6b80: test al,al
0x6b82: jz 0x6bb8
0x6b84: cmp edx,0x4000
0x6b8a: jz 0x6bd8
0x6b8c: mov eax,0x1
0x6b91: ret 
0x6b98: test al,al
0x6b9a: jnz 0x6bd8
0x6b9c: mov eax,dword ptr [0xac + rsi]
0x6ba2: and eax,0xf000
0x6ba7: cmp eax,0x4000
0x6bac: jz 0x6bd8
0x6bae: mov eax,0xffffffff
0x6bb3: ret 
0x6bb8: mov eax,dword ptr [0xac + rsi]
0x6bbe: and eax,0xf000
0x6bc3: cmp eax,0x4000
0x6bc8: jz 0x6b84
0x6bca: cmp edx,0x4000
0x6bd0: jz 0x6bae
0x6bd2: nop word ptr [rax + rax*0x1]
0x6bd8: push r12
0x6bda: push rbp
0x6bdb: push rbx
0x6bdc: mov r12,qword ptr [rsi]
0x6bdf: mov rbx,rdi
0x6be2: mov esi,0x2e
0x6be7: mov rdi,r12
0x6bea: call 0x34a0
0x6bef: mov rbx,qword ptr [rbx]
0x6bf2: mov esi,0x2e
0x6bf7: mov rbp,rax
0x6bfa: mov rdi,rbx
0x6bfd: call 0x34a0
0x6c02: test rax,rax
0x6c05: jz 0x6c40
0x6c07: lea rdx,[rip+0x10ca5]
0x6c0e: test rbp,rbp
0x6c11: cmovz rbp,rdx
0x6c15: mov rsi,rax
0x6c18: mov rdi,rbp
0x6c1b: call 0x3590
0x6c20: test eax,eax
0x6c22: jnz 0x6c38
0x6c24: mov rsi,rbx
0x6c27: mov rdi,r12
0x6c2a: pop rbx
0x6c2b: pop rbp
0x6c2c: pop r12
0x6c2e: jmp 0x3590
0x6c38: pop rbx
0x6c39: pop rbp
0x6c3a: pop r12
0x6c3c: ret 
0x6c40: test rbp,rbp
0x6c43: lea rax,[rip+0x10c69]
0x6c4a: jnz 0x6c15
0x6c4c: jmp 0x6c24
0x6e19: call 0x3420
0x6e1e: nop 
0x6f4a: xor edx,edx
0x6f4c: mov rsi,rbp
0x6f4f: mov edi,0x2
0x6f54: call 0x3260
0x6fc5: call 0x3420
0x6fca: nop word ptr [rax + rax*0x1]
0x7160: movzx eax,byte ptr [rip+0x21a242]
0x7167: xor eax,0x1
0x716a: or al,byte ptr [rsp + 0x2f]
0x716e: xor eax,0x1
0x730d: jmp 0x7160
0x7337: jmp 0x7160
0x740d: jmp 0x7160
0x7479: call 0x3420
0x7687: mov rax,qword ptr [rsp + 0x28]
0x768c: mov rdi,qword ptr [rip+0x218bf5]
0x7693: movzx edx,byte ptr [rax + rbp*0x1 - 0x1]
0x7698: mov rax,qword ptr [rdi + 0x28]
0x769c: cmp rax,qword ptr [rdi + 0x30]
0x76a0: jnc 0x7850
0x76a6: lea rcx,[rax + 0x1]
0x76aa: mov qword ptr [rdi + 0x28],rcx
0x76ae: mov byte ptr [rax],dl
0x76c0: call 0x3880
0x7700: movzx r14d,byte ptr [rip+0x219ca1]
0x7708: test r14b,r14b
0x770b: jz 0x7554
0x7711: cmp byte ptr [rsp + 0x27],0x0
0x7716: jnz 0x7838
0x771c: mov rax,qword ptr [rsp + 0x28]
0x7721: mov rdi,qword ptr [rip+0x218b60]
0x7728: lea r10,[rbp - 0x2]
0x772c: movzx edx,byte ptr [rax]
0x772f: mov rax,qword ptr [rdi + 0x28]
0x7733: cmp rax,qword ptr [rdi + 0x30]
0x7737: jnc 0x786f
0x773d: lea rcx,[rax + 0x1]
0x7741: mov r9d,0x1
0x7747: mov qword ptr [rdi + 0x28],rcx
0x774b: mov byte ptr [rax],dl
0x774d: jmp 0x755a
0x77ff: mov rdx,qword ptr [rbx + 0x18]
0x7803: mov r10,qword ptr [rsp + 0x10]
0x7808: mov r9,qword ptr [rsp + 0x8]
0x780d: jmp 0x75fe
0x7825: mov rcx,qword ptr [rbx + 0x18]
0x7829: mov rax,qword ptr [rip+0x2199c8]
0x7830: jmp 0x7658
0x7838: mov r10,rbp
0x783b: xor r9d,r9d
0x783e: xor r14d,r14d
0x7841: jmp 0x755a
0x7850: movzx esi,dl
0x7853: call 0x3490
0x7858: jmp 0x76b0
0x786a: jmp 0x7778
0x786f: movzx esi,dl
0x7872: mov qword ptr [rsp + 0x8],r10
0x7877: call 0x3490
0x787c: mov r9d,0x1
0x7882: mov r10,qword ptr [rsp + 0x8]
0x7887: jmp 0x755a
0x788c: call 0x3420
0x7891: nop dword ptr [rax + rax*0x1]
0x7896: nop word ptr cs:[rax + rax*0x1]
0x7d30: cmp byte ptr [0xb8 + rbx],0x0
0x7d37: lea rcx,[rip+0xfb59]
0x7d3e: jz 0x7d4d
0x7d40: mov rdi,qword ptr [rbx + 0x20]
0x7d44: test rdi,rdi
0x7d47: jnz 0x7e78
0x7d4d: xor edx,edx
0x7d4f: cmp dword ptr [rip+0x2195e2],0x4
0x7d56: jz 0x7d5e
0x7d58: mov edx,dword ptr [rip+0x219602]
0x7d5e: lea rsi,[rip+0xfb5f]
0x7d65: mov edi,0x1
0x7d6a: xor eax,eax
0x7d6c: call 0x3710
0x7dbb: xor edx,edx
0x7dbd: cmp dword ptr [rip+0x219574],0x4
0x7dc4: mov rcx,qword ptr [0xb0 + rbx]
0x7dcb: jz 0x7dd3
0x7dcd: mov edx,dword ptr [rip+0x219581]
0x7dd3: lea rsi,[rip+0xfaea]
0x7dda: mov edi,0x1
0x7ddf: xor eax,eax
0x7de1: call 0x3710
0x7e78: mov rsi,rsp
0x7e7b: call 0xfba0
0x7e80: mov rcx,rax
0x7e83: jmp 0x7d4d
0x7e88: call 0x3420
0x7e8d: nop dword ptr [rax]
0x7f31: test dl,dl
0x7f33: lea r9,[rip+0xf95d]
0x7f3a: jz 0x7f49
0x7f3c: mov rdi,qword ptr [rbp + 0x20]
0x7f40: test rdi,rdi
0x7f43: jnz 0x8608
0x7f49: lea r12,[0x4d0 + rsp]
0x7f51: mov r8d,dword ptr [rip+0x219408]
0x7f58: lea rcx,[rip+0xf965]
0x7f5f: mov edx,0xe3b
0x7f64: mov esi,0x1
0x7f69: xor eax,eax
0x7f6b: mov rdi,r12
0x7f6e: mov rbx,r12
0x7f71: call 0x3870
0x7f76: mov eax,dword ptr [rbx]
0x7f78: add rbx,0x4
0x7f7c: lea edx,[-0x1010101 + rax]
0x7f82: not eax
0x7f84: and edx,eax
0x7f86: and edx,0x80808080
0x7f8c: jz 0x7f76
0x7f8e: mov eax,edx
0x7f90: shr eax,0x10
0x7f93: test edx,0x8080
0x7f99: cmovz edx,eax
0x7f9c: lea rax,[rbx + 0x2]
0x7fa0: cmovz rbx,rax
0x7fa4: mov eax,edx
0x7fa6: add al,dl
0x7fa8: movzx edx,byte ptr [0xb8 + rbp]
0x7faf: sbb rbx,0x3
0x82d2: mov eax,dword ptr [0xbc + rbp]
0x82d8: cmp eax,0x1
0x82db: jz 0x85e0
0x82e1: cmp eax,0x2
0x82e4: jnz 0x7eed
0x82ea: mov eax,dword ptr [rip+0x219044]
0x82f0: mov byte ptr [0xbe + rsp],0x2b
0x82f8: cmp eax,0x1
0x82fb: jnz 0x7efc
0x8301: nop dword ptr [rax]
0x8510: mov rdi,qword ptr [0xb0 + rbp]
0x8517: mov edx,dword ptr [rip+0x218e37]
0x851d: xor esi,esi
0x851f: call 0x61e0
0x8524: jmp 0x8100
0x85e0: mov byte ptr [0xbe + rsp],0x2e
0x85e8: jmp 0x7eed
0x85fd: jmp 0x80b0
0x8608: lea rsi,[0xe0 + rsp]
0x8610: call 0xfba0
0x8615: mov r9,rax
0x8618: jmp 0x7f49
0x8863: call 0x3420
0x88f4: call 0x3880
0x8920: call 0x3420
0x8925: nop 
0x8926: nop word ptr cs:[rax + rax*0x1]
0x895c: cmp dword ptr [rip+0x2189d5],0x4
0x8963: jz 0x8aa0
0x8969: movsxd rbx,dword ptr [rip+0x2189f0]
0x8970: add rbx,0x1
0x8974: cmp byte ptr [rip+0x2189b1],0x0
0x897b: jz 0x8a88
0x8a68: cmp dword ptr [rip+0x2188c9],0x4
0x8a6f: jz 0x8ac0
0x8a71: movsxd rax,dword ptr [rip+0x2188dc]
0x8a78: add rax,0x1
0x8a7c: add rbx,rax
0x8a7f: jmp 0x899c
0x8a88: cmp byte ptr [rip+0x2188d6],0x0
0x8a8f: jnz 0x8a71
0x8a91: jmp 0x899c
0x8aa0: mov rdi,qword ptr [rdi + 0x20]
0x8aa4: mov rsi,rsp
0x8aa7: call 0xfba0
0x8aac: mov rdi,rax
0x8aaf: call 0x3400
0x8ab4: lea rbx,[rax + 0x1]
0x8ab8: jmp 0x8a0a
0x8ac0: mov rdi,qword ptr [0xb0 + rbp]
0x8ac7: call 0x3400
0x8acc: add rax,0x1
0x8ad0: jmp 0x8a7c
0x8ad2: call 0x3420
0x8ad7: nop word ptr [rax + rax*0x1]
0x8f57: jmp 0x8e2c
0x8f71: movzx edx,byte ptr [rsp + 0xb]
0x8f76: mov ecx,dword ptr [rsp + 0xc]
0x8f7a: jmp 0x8ec9
0x92e0: jmp 0x929b
0x930a: jmp 0x9132
0x9342: jmp 0x9252
0x935d: jmp 0x906b
0x9380: mov rdx,rsi
0x9383: mov esi,dword ptr [0xa8 + rdi]
0x9389: mov ecx,dword ptr [0xa8 + rdx]
0x938f: cmp ecx,0x3
0x9392: setz al
0x9395: cmp ecx,0x9
0x9398: setz cl
0x939b: or eax,ecx
0x939d: cmp esi,0x3
0x93a0: jz 0x93c8
0x93a2: cmp esi,0x9
0x93a5: jz 0x93c8
0x93a7: mov ecx,dword ptr [0xac + rdi]
0x93ad: and ecx,0xf000
0x93b3: test al,al
0x93b5: jz 0x93e8
0x93b7: cmp ecx,0x4000
0x93bd: jz 0x9408
0x93bf: mov eax,0x1
0x93c4: ret 
0x93c8: test al,al
0x93ca: jnz 0x9408
0x93cc: mov eax,dword ptr [0xac + rdx]
0x93d2: and eax,0xf000
0x93d7: cmp eax,0x4000
0x93dc: jz 0x9408
0x93de: mov eax,0xffffffff
0x93e3: ret 
0x93e8: mov eax,dword ptr [0xac + rdx]
0x93ee: and eax,0xf000
0x93f3: cmp eax,0x4000
0x93f8: jz 0x93b7
0x93fa: cmp ecx,0x4000
0x9400: jz 0x93de
0x9402: nop word ptr [rax + rax*0x1]
0x9408: mov rax,qword ptr [rdi + 0x60]
0x940c: cmp qword ptr [rdx + 0x60],rax
0x9410: jg 0x93de
0x9412: jl 0x93bf
0x9414: mov rax,qword ptr [rdi + 0x68]
0x9418: sub eax,dword ptr [rdx + 0x68]
0x941b: jnz 0x93e3
0x941d: mov rsi,qword ptr [rdi]
0x9420: mov rdi,qword ptr [rdx]
0x9423: jmp 0x3590
0x9430: mov rdx,rsi
0x9433: mov esi,dword ptr [0xa8 + rdi]
0x9439: mov ecx,dword ptr [0xa8 + rdx]
0x943f: cmp ecx,0x3
0x9442: setz al
0x9445: cmp ecx,0x9
0x9448: setz cl
0x944b: or eax,ecx
0x944d: cmp esi,0x3
0x9450: jz 0x9478
0x9452: cmp esi,0x9
0x9455: jz 0x9478
0x9457: mov ecx,dword ptr [0xac + rdi]
0x945d: and ecx,0xf000
0x9463: test al,al
0x9465: jz 0x9498
0x9467: cmp ecx,0x4000
0x946d: jz 0x94b8
0x946f: mov eax,0x1
0x9474: ret 
0x9478: test al,al
0x947a: jnz 0x94b8
0x947c: mov eax,dword ptr [0xac + rdx]
0x9482: and eax,0xf000
0x9487: cmp eax,0x4000
0x948c: jz 0x94b8
0x948e: mov eax,0xffffffff
0x9493: ret 
0x9498: mov eax,dword ptr [0xac + rdx]
0x949e: and eax,0xf000
0x94a3: cmp eax,0x4000
0x94a8: jz 0x9467
0x94aa: cmp ecx,0x4000
0x94b0: jz 0x948e
0x94b2: nop word ptr [rax + rax*0x1]
0x94b8: mov rax,qword ptr [0x80 + rdi]
0x94bf: cmp qword ptr [0x80 + rdx],rax
0x94c6: jg 0x948e
0x94c8: jl 0x946f
0x94ca: mov rax,qword ptr [0x88 + rdi]
0x94d1: sub eax,dword ptr [0x88 + rdx]
0x94d7: jnz 0x9493
0x94d9: mov rsi,qword ptr [rdi]
0x94dc: mov rdi,qword ptr [rdx]
0x94df: jmp 0x3590
0x967c: call 0x3420
0x9681: nop dword ptr [rax + rax*0x1]
0x9686: nop word ptr cs:[rax + rax*0x1]
0x9945: mov rdi,qword ptr [0xb0 + rbx]
0x994c: call 0x3400
0x9951: cmp eax,dword ptr [rip+0x2179fd]
0x9957: jg 0x9eb0
0x9a20: test r14d,r14d
0x9a23: setz dl
0x9a26: cmp r14d,0x6
0x9a2a: jz 0x9a34
0x9a2c: test dl,dl
0x9a2e: jz 0x9b00
0x9b7a: xor r12d,r12d
0x9b7d: test r13b,r13b
0x9b80: jnz 0x9991
0x9b86: jmp 0x997a
0x9c36: jmp 0x97cc
0x9c98: mov rdi,qword ptr [rbx + 0x20]
0x9c9c: lea rsi,[-0x2d0 + rbp]
0x9ca3: call 0xfba0
0x9ca8: mov rdi,rax
0x9cab: call 0x3400
0x9cb0: cmp eax,dword ptr [rip+0x2176aa]
0x9cb6: jle 0x997a
0x9cbc: mov dword ptr [rip+0x21769e],eax
0x9cc2: jmp 0x997a
0x9e80: mov rdi,qword ptr [-0x388 + rbp]
0x9e87: call 0x5ae0
0x9e8c: movzx edx,al
0x9e8f: test al,al
0x9e91: mov dword ptr [0xc4 + rbx],edx
0x9e97: jz 0x9791
0x9e9d: mov byte ptr [rip+0x217505],0x1
0x9ea4: jmp 0x9791
0x9eb0: mov dword ptr [rip+0x21749e],eax
0x9eb6: jmp 0x995d
0xa2a1: xor r12d,r12d
0xa2a4: jmp 0x9991
0xa2d2: mov r14,qword ptr [rbx + 0x8]
0xa2d6: test r14,r14
0xa2d9: jnz 0xa009
0xa2df: nop 
0xa390: mov rdi,qword ptr [rbx + 0x8]
0xa394: call 0x5ae0
0xa399: test al,al
0xa39b: jz 0xa087
0xa3a1: mov dword ptr [0xc4 + rbx],0xffffffff
0xa3ab: jmp 0xa087
0xa3c0: mov rdx,qword ptr [rbx + 0x18]
0xa3c4: mov qword ptr [rip+0x215f1d],rdx
0xa3d4: call 0x3420
0xa499: mov rdi,r13
0xa49c: call 0x3540
0xa519: test rax,rax
0xa51c: jz 0xaa9f
0xa522: cmp rbp,rax
0xa525: jz 0xa57c
0xa527: mov rdi,rbp
0xa52a: call 0x3880
0xa52f: mov rdx,r14
0xa532: mov esi,0x3
0xa537: xor edi,edi
0xa539: call 0x13b90
0xa53e: lea rsi,[rip+0xd93b]
0xa545: mov rbx,rax
0xa548: mov edx,0x5
0xa54d: xor edi,edi
0xa54f: call 0x33e0
0xa554: mov rcx,rbx
0xa557: mov rdx,rax
0xa55a: xor esi,esi
0xa55c: xor edi,edi
0xa55e: xor eax,eax
0xa560: call 0x3760
0xa565: mov rdi,r13
0xa568: call 0x3540
0xa56d: mov dword ptr [rip+0x216c99],0x2
0xa577: jmp 0xa4a1
0xa57c: mov rax,qword ptr [rip+0x216b75]
0xa583: mov rdx,qword ptr [rip+0x216b76]
0xa58a: mov rbp,qword ptr [rsp + 0x18]
0xa58f: mov r15,qword ptr [rsp + 0x10]
0xa594: sub rdx,rax
0xa597: cmp rdx,0xf
0xa59b: ja 0xa5b5
0xa59d: lea rdi,[rip+0x216b3c]
0xa5a4: mov esi,0x10
0xa5a9: call 0x15530
0xa5ae: mov rax,qword ptr [rip+0x216b43]
0xa5b5: lea rdx,[rax + 0x10]
0xa5b9: mov qword ptr [rip+0x216b38],rdx
0xa5c0: mov qword ptr [rax + 0x8],r15
0xa5c4: mov qword ptr [rax],rbp
0xa748: lea rsi,[rip+0xd1de]
0xa74f: xor edi,edi
0xa751: mov edx,0x5
0xa756: call 0x33e0
0xa75b: movzx edi,byte ptr [rsp + 0xb]
0xa760: mov rdx,r14
0xa763: mov rsi,rax
0xa766: call 0x6300
0xa76b: cmp dword ptr [r12],0x4b
0xa770: jz 0xa670
0xa8a8: xor eax,eax
0xa8aa: cmp byte ptr [rbp + 0x14],0x2e
0xa8ae: setz al
0xa8b1: cmp byte ptr [rbp + rax*0x1 + 0x14],0x0
0xa8b6: jz 0xa670
0xa8bc: nop dword ptr [rax]
0xa8d0: mov r15,qword ptr [r15 + 0x8]
0xa8d4: test r15,r15
0xa8d7: jz 0xa8f8
0xa8d9: mov rdi,qword ptr [r15]
0xa8dc: mov edx,0x4
0xa8e1: mov rsi,rbx
0xa8e4: call 0x34f0
0xa8e9: test eax,eax
0xa8eb: jnz 0xa8d0
0xa8ed: jmp 0xa670
0xa993: jmp 0xa4a1
0xa998: xor esi,esi
0xa99a: mov rdi,r14
0xa99d: call 0x5ec0
0xa9a2: jmp 0xa798
0xa9d3: jmp 0xa786
0xaa3e: jmp 0xa6d4
0xaa77: jmp 0xa810
0xaa86: jmp 0xa87c
0xaa95: jmp 0xa6a9
0xaa9a: call 0x3420
0xaa9f: call 0x147e0
0xaaa4: nop 
0xaaa6: nop word ptr cs:[rax + rax*0x1]
0xaab0: mov rax,qword ptr [0x80 + rsi]
0xaab7: cmp qword ptr [0x80 + rdi],rax
0xaabe: jg 0xaaf0
0xaac0: jl 0xaae0
0xaac2: mov rax,qword ptr [0x88 + rsi]
0xaac9: sub eax,dword ptr [0x88 + rdi]
0xaacf: jnz 0xaae5
0xaad1: mov rsi,qword ptr [rsi]
0xaad4: mov rdi,qword ptr [rdi]
0xaad7: jmp 0x5de0
0xaae0: mov eax,0x1
0xaae5: ret 
0xaaf0: mov eax,0xffffffff
0xaaf5: ret 
0xab00: mov rax,qword ptr [rsi + 0x60]
0xab04: cmp qword ptr [rdi + 0x60],rax
0xab08: jg 0xab30
0xab0a: jl 0xab20
0xab0c: mov rax,qword ptr [rsi + 0x68]
0xab10: sub eax,dword ptr [rdi + 0x68]
0xab13: jnz 0xab25
0xab15: mov rsi,qword ptr [rsi]
0xab18: mov rdi,qword ptr [rdi]
0xab1b: jmp 0x5de0
0xab20: mov eax,0x1
0xab25: ret 
0xab30: mov eax,0xffffffff
0xab35: ret 
0xab40: mov rax,qword ptr [rsi + 0x70]
0xab44: cmp qword ptr [rdi + 0x70],rax
0xab48: jg 0xab70
0xab4a: jl 0xab60
0xab4c: mov rax,qword ptr [rsi + 0x78]
0xab50: sub eax,dword ptr [rdi + 0x78]
0xab53: jnz 0xab65
0xab55: mov rsi,qword ptr [rsi]
0xab58: mov rdi,qword ptr [rdi]
0xab5b: jmp 0x5de0
0xab60: mov eax,0x1
0xab65: ret 
0xab70: mov eax,0xffffffff
0xab75: ret 
0xab80: mov rax,qword ptr [rdi + 0x70]
0xab84: cmp qword ptr [rsi + 0x70],rax
0xab88: mov rdx,rsi
0xab8b: jg 0xabb0
0xab8d: jl 0xaba8
0xab8f: mov rax,qword ptr [rdi + 0x78]
0xab93: sub eax,dword ptr [rsi + 0x78]
0xab96: jnz 0xabad
0xab98: mov rsi,qword ptr [rdi]
0xab9b: mov rdi,qword ptr [rdx]
0xab9e: jmp 0x5de0
0xaba8: mov eax,0x1
0xabad: ret 
0xabb0: mov eax,0xffffffff
0xabb5: ret 
0xabc0: mov rax,qword ptr [rdi + 0x60]
0xabc4: cmp qword ptr [rsi + 0x60],rax
0xabc8: mov rdx,rsi
0xabcb: jg 0xabf0
0xabcd: jl 0xabe8
0xabcf: mov rax,qword ptr [rdi + 0x68]
0xabd3: sub eax,dword ptr [rsi + 0x68]
0xabd6: jnz 0xabed
0xabd8: mov rsi,qword ptr [rdi]
0xabdb: mov rdi,qword ptr [rdx]
0xabde: jmp 0x5de0
0xabe8: mov eax,0x1
0xabed: ret 
0xabf0: mov eax,0xffffffff
0xabf5: ret 
0xac00: mov rax,qword ptr [0x80 + rdi]
0xac07: cmp qword ptr [0x80 + rsi],rax
0xac0e: mov rdx,rsi
0xac11: jg 0xac40
0xac13: jl 0xac30
0xac15: mov rax,qword ptr [0x88 + rdi]
0xac1c: sub eax,dword ptr [0x88 + rsi]
0xac22: jnz 0xac35
0xac24: mov rsi,qword ptr [rdi]
0xac27: mov rdi,qword ptr [rdx]
0xac2a: jmp 0x5de0
0xac30: mov eax,0x1
0xac35: ret 
0xac40: mov eax,0xffffffff
0xac45: ret 
0xac50: push r12
0xac52: push rbp
0xac53: mov rbp,rdi
0xac56: push rbx
0xac57: mov rdi,qword ptr [rdi]
0xac5a: mov r12,rsi
0xac5d: mov esi,0x2e
0xac62: call 0x34a0
0xac67: mov rdi,qword ptr [r12]
0xac6b: mov esi,0x2e
0xac70: mov rbx,rax
0xac73: call 0x34a0
0xac78: lea rdx,[rip+0xcc34]
0xac7f: test rax,rax
0xac82: cmovz rax,rdx
0xac86: test rbx,rbx
0xac89: cmovz rbx,rdx
0xac8d: mov rsi,rax
0xac90: mov rdi,rbx
0xac93: call 0x5de0
0xac98: test eax,eax
0xac9a: jnz 0xacb0
0xac9c: pop rbx
0xac9d: mov rsi,qword ptr [r12]
0xaca1: mov rdi,qword ptr [rbp]
0xaca5: pop rbp
0xaca6: pop r12
0xaca8: jmp 0x5de0
0xacb0: pop rbx
0xacb1: pop rbp
0xacb2: pop r12
0xacb4: ret 
0xacc0: push r12
0xacc2: push rbp
0xacc3: mov rbp,rsi
0xacc6: push rbx
0xacc7: mov r12,rdi
0xacca: mov rdi,qword ptr [rbp]
0xacce: mov esi,0x2e
0xacd3: call 0x34a0
0xacd8: mov rdi,qword ptr [r12]
0xacdc: mov esi,0x2e
0xace1: mov rbx,rax
0xace4: call 0x34a0
0xace9: lea rdx,[rip+0xcbc3]
0xacf0: test rax,rax
0xacf3: cmovz rax,rdx
0xacf7: test rbx,rbx
0xacfa: cmovz rbx,rdx
0xacfe: mov rsi,rax
0xad01: mov rdi,rbx
0xad04: call 0x5de0
0xad09: test eax,eax
0xad0b: jnz 0xad20
0xad0d: pop rbx
0xad0e: mov rsi,qword ptr [r12]
0xad12: mov rdi,qword ptr [rbp]
0xad16: pop rbp
0xad17: pop r12
0xad19: jmp 0x5de0
0xad20: pop rbx
0xad21: pop rbp
0xad22: pop r12
0xad24: ret 
0xad30: mov rax,qword ptr [rdi + 0x60]
0xad34: cmp qword ptr [rsi + 0x60],rax
0xad38: mov rdx,rsi
0xad3b: jg 0xad60
0xad3d: jl 0xad58
0xad3f: mov rax,qword ptr [rdi + 0x68]
0xad43: sub eax,dword ptr [rsi + 0x68]
0xad46: jnz 0xad5d
0xad48: mov rsi,qword ptr [rdi]
0xad4b: mov rdi,qword ptr [rdx]
0xad4e: jmp 0x3590
0xad58: mov eax,0x1
0xad5d: ret 
0xad60: mov eax,0xffffffff
0xad65: ret 
0xad70: mov rax,qword ptr [rdi + 0x70]
0xad74: cmp qword ptr [rsi + 0x70],rax
0xad78: mov rdx,rsi
0xad7b: jg 0xada0
0xad7d: jl 0xad98
0xad7f: mov rax,qword ptr [rdi + 0x78]
0xad83: sub eax,dword ptr [rsi + 0x78]
0xad86: jnz 0xad9d
0xad88: mov rsi,qword ptr [rdi]
0xad8b: mov rdi,qword ptr [rdx]
0xad8e: jmp 0x3590
0xad98: mov eax,0x1
0xad9d: ret 
0xada0: mov eax,0xffffffff
0xada5: ret 
0xadb0: mov rax,qword ptr [0x80 + rdi]
0xadb7: cmp qword ptr [0x80 + rsi],rax
0xadbe: mov rdx,rsi
0xadc1: jg 0xadf0
0xadc3: jl 0xade0
0xadc5: mov rax,qword ptr [0x88 + rdi]
0xadcc: sub eax,dword ptr [0x88 + rsi]
0xadd2: jnz 0xade5
0xadd4: mov rsi,qword ptr [rdi]
0xadd7: mov rdi,qword ptr [rdx]
0xadda: jmp 0x3590
0xade0: mov eax,0x1
0xade5: ret 
0xadf0: mov eax,0xffffffff
0xadf5: ret 
0xae00: mov rax,qword ptr [rsi + 0x60]
0xae04: cmp qword ptr [rdi + 0x60],rax
0xae08: jg 0xae30
0xae0a: jl 0xae20
0xae0c: mov rax,qword ptr [rsi + 0x68]
0xae10: sub eax,dword ptr [rdi + 0x68]
0xae13: jnz 0xae25
0xae15: mov rsi,qword ptr [rsi]
0xae18: mov rdi,qword ptr [rdi]
0xae1b: jmp 0x3590
0xae20: mov eax,0x1
0xae25: ret 
0xae30: mov eax,0xffffffff
0xae35: ret 
0xae40: mov rax,qword ptr [rsi + 0x70]
0xae44: cmp qword ptr [rdi + 0x70],rax
0xae48: jg 0xae70
0xae4a: jl 0xae60
0xae4c: mov rax,qword ptr [rsi + 0x78]
0xae50: sub eax,dword ptr [rdi + 0x78]
0xae53: jnz 0xae65
0xae55: mov rsi,qword ptr [rsi]
0xae58: mov rdi,qword ptr [rdi]
0xae5b: jmp 0x3590
0xae60: mov eax,0x1
0xae65: ret 
0xae70: mov eax,0xffffffff
0xae75: ret 
0xae80: mov rax,qword ptr [0x80 + rsi]
0xae87: cmp qword ptr [0x80 + rdi],rax
0xae8e: jg 0xaec0
0xae90: jl 0xaeb0
0xae92: mov rax,qword ptr [0x88 + rsi]
0xae99: sub eax,dword ptr [0x88 + rdi]
0xae9f: jnz 0xaeb5
0xaea1: mov rsi,qword ptr [rsi]
0xaea4: mov rdi,qword ptr [rdi]
0xaea7: jmp 0x3590
0xaeb0: mov eax,0x1
0xaeb5: ret 
0xaec0: mov eax,0xffffffff
0xaec5: ret 
0xaed0: mov edx,dword ptr [0xa8 + rsi]
0xaed6: mov ecx,dword ptr [0xa8 + rdi]
0xaedc: cmp edx,0x3
0xaedf: setz al
0xaee2: cmp edx,0x9
0xaee5: setz dl
0xaee8: or eax,edx
0xaeea: cmp ecx,0x3
0xaeed: jz 0xaf18
0xaeef: cmp ecx,0x9
0xaef2: jz 0xaf18
0xaef4: mov edx,dword ptr [0xac + rdi]
0xaefa: and edx,0xf000
0xaf00: test al,al
0xaf02: jz 0xaf38
0xaf04: cmp edx,0x4000
0xaf0a: jz 0xaf58
0xaf0c: mov eax,0x1
0xaf11: ret 
0xaf18: test al,al
0xaf1a: jnz 0xaf58
0xaf1c: mov eax,dword ptr [0xac + rsi]
0xaf22: and eax,0xf000
0xaf27: cmp eax,0x4000
0xaf2c: jz 0xaf58
0xaf2e: mov eax,0xffffffff
0xaf33: ret 
0xaf38: mov eax,dword ptr [0xac + rsi]
0xaf3e: and eax,0xf000
0xaf43: cmp eax,0x4000
0xaf48: jz 0xaf04
0xaf4a: cmp edx,0x4000
0xaf50: jz 0xaf2e
0xaf52: nop word ptr [rax + rax*0x1]
0xaf58: mov rax,qword ptr [rsi + 0x60]
0xaf5c: cmp qword ptr [rdi + 0x60],rax
0xaf60: jg 0xaf2e
0xaf62: jl 0xaf0c
0xaf64: mov rax,qword ptr [rsi + 0x68]
0xaf68: sub eax,dword ptr [rdi + 0x68]
0xaf6b: jnz 0xaf33
0xaf6d: mov rsi,qword ptr [rsi]
0xaf70: mov rdi,qword ptr [rdi]
0xaf73: jmp 0x5de0
0xaf80: mov edx,dword ptr [0xa8 + rsi]
0xaf86: mov ecx,dword ptr [0xa8 + rdi]
0xaf8c: cmp edx,0x3
0xaf8f: setz al
0xaf92: cmp edx,0x9
0xaf95: setz dl
0xaf98: or eax,edx
0xaf9a: cmp ecx,0x3
0xaf9d: jz 0xafc8
0xaf9f: cmp ecx,0x9
0xafa2: jz 0xafc8
0xafa4: mov edx,dword ptr [0xac + rdi]
0xafaa: and edx,0xf000
0xafb0: test al,al
0xafb2: jz 0xafe8
0xafb4: cmp edx,0x4000
0xafba: jz 0xb008
0xafbc: mov eax,0x1
0xafc1: ret 
0xafc8: test al,al
0xafca: jnz 0xb008
0xafcc: mov eax,dword ptr [0xac + rsi]
0xafd2: and eax,0xf000
0xafd7: cmp eax,0x4000
0xafdc: jz 0xb008
0xafde: mov eax,0xffffffff
0xafe3: ret 
0xafe8: mov eax,dword ptr [0xac + rsi]
0xafee: and eax,0xf000
0xaff3: cmp eax,0x4000
0xaff8: jz 0xafb4
0xaffa: cmp edx,0x4000
0xb000: jz 0xafde
0xb002: nop word ptr [rax + rax*0x1]
0xb008: mov rax,qword ptr [rsi + 0x70]
0xb00c: cmp qword ptr [rdi + 0x70],rax
0xb010: jg 0xafde
0xb012: jl 0xafbc
0xb014: mov rax,qword ptr [rsi + 0x78]
0xb018: sub eax,dword ptr [rdi + 0x78]
0xb01b: jnz 0xafe3
0xb01d: mov rsi,qword ptr [rsi]
0xb020: mov rdi,qword ptr [rdi]
0xb023: jmp 0x5de0
0xb030: mov rdx,rsi
0xb033: mov esi,dword ptr [0xa8 + rdi]
0xb039: mov ecx,dword ptr [0xa8 + rdx]
0xb03f: cmp ecx,0x3
0xb042: setz al
0xb045: cmp ecx,0x9
0xb048: setz cl
0xb04b: or eax,ecx
0xb04d: cmp esi,0x3
0xb050: jz 0xb078
0xb052: cmp esi,0x9
0xb055: jz 0xb078
0xb057: mov ecx,dword ptr [0xac + rdi]
0xb05d: and ecx,0xf000
0xb063: test al,al
0xb065: jz 0xb098
0xb067: cmp ecx,0x4000
0xb06d: jz 0xb0b8
0xb06f: mov eax,0x1
0xb074: ret 
0xb078: test al,al
0xb07a: jnz 0xb0b8
0xb07c: mov eax,dword ptr [0xac + rdx]
0xb082: and eax,0xf000
0xb087: cmp eax,0x4000
0xb08c: jz 0xb0b8
0xb08e: mov eax,0xffffffff
0xb093: ret 
0xb098: mov eax,dword ptr [0xac + rdx]
0xb09e: and eax,0xf000
0xb0a3: cmp eax,0x4000
0xb0a8: jz 0xb067
0xb0aa: cmp ecx,0x4000
0xb0b0: jz 0xb08e
0xb0b2: nop word ptr [rax + rax*0x1]
0xb0b8: mov rax,qword ptr [0x80 + rdi]
0xb0bf: cmp qword ptr [0x80 + rdx],rax
0xb0c6: jg 0xb08e
0xb0c8: jl 0xb06f
0xb0ca: mov rax,qword ptr [0x88 + rdi]
0xb0d1: sub eax,dword ptr [0x88 + rdx]
0xb0d7: jnz 0xb093
0xb0d9: mov rsi,qword ptr [rdi]
0xb0dc: mov rdi,qword ptr [rdx]
0xb0df: jmp 0x5de0
0xb0f0: mov rdx,rsi
0xb0f3: mov esi,dword ptr [0xa8 + rdi]
0xb0f9: mov ecx,dword ptr [0xa8 + rdx]
0xb0ff: cmp ecx,0x3
0xb102: setz al
0xb105: cmp ecx,0x9
0xb108: setz cl
0xb10b: or eax,ecx
0xb10d: cmp esi,0x3
0xb110: jz 0xb138
0xb112: cmp esi,0x9
0xb115: jz 0xb138
0xb117: mov ecx,dword ptr [0xac + rdi]
0xb11d: and ecx,0xf000
0xb123: test al,al
0xb125: jz 0xb158
0xb127: cmp ecx,0x4000
0xb12d: jz 0xb178
0xb12f: mov eax,0x1
0xb134: ret 
0xb138: test al,al
0xb13a: jnz 0xb178
0xb13c: mov eax,dword ptr [0xac + rdx]
0xb142: and eax,0xf000
0xb147: cmp eax,0x4000
0xb14c: jz 0xb178
0xb14e: mov eax,0xffffffff
0xb153: ret 
0xb158: mov eax,dword ptr [0xac + rdx]
0xb15e: and eax,0xf000
0xb163: cmp eax,0x4000
0xb168: jz 0xb127
0xb16a: cmp ecx,0x4000
0xb170: jz 0xb14e
0xb172: nop word ptr [rax + rax*0x1]
0xb178: mov rax,qword ptr [rdi + 0x70]
0xb17c: cmp qword ptr [rdx + 0x70],rax
0xb180: jg 0xb14e
0xb182: jl 0xb12f
0xb184: mov rax,qword ptr [rdi + 0x78]
0xb188: sub eax,dword ptr [rdx + 0x78]
0xb18b: jnz 0xb153
0xb18d: mov rsi,qword ptr [rdi]
0xb190: mov rdi,qword ptr [rdx]
0xb193: jmp 0x5de0
0xb1a0: mov rdx,rsi
0xb1a3: mov esi,dword ptr [0xa8 + rdi]
0xb1a9: mov ecx,dword ptr [0xa8 + rdx]
0xb1af: cmp ecx,0x3
0xb1b2: setz al
0xb1b5: cmp ecx,0x9
0xb1b8: setz cl
0xb1bb: or eax,ecx
0xb1bd: cmp esi,0x3
0xb1c0: jz 0xb1e8
0xb1c2: cmp esi,0x9
0xb1c5: jz 0xb1e8
0xb1c7: mov ecx,dword ptr [0xac + rdi]
0xb1cd: and ecx,0xf000
0xb1d3: test al,al
0xb1d5: jz 0xb208
0xb1d7: cmp ecx,0x4000
0xb1dd: jz 0xb228
0xb1df: mov eax,0x1
0xb1e4: ret 
0xb1e8: test al,al
0xb1ea: jnz 0xb228
0xb1ec: mov eax,dword ptr [0xac + rdx]
0xb1f2: and eax,0xf000
0xb1f7: cmp eax,0x4000
0xb1fc: jz 0xb228
0xb1fe: mov eax,0xffffffff
0xb203: ret 
0xb208: mov eax,dword ptr [0xac + rdx]
0xb20e: and eax,0xf000
0xb213: cmp eax,0x4000
0xb218: jz 0xb1d7
0xb21a: cmp ecx,0x4000
0xb220: jz 0xb1fe
0xb222: nop word ptr [rax + rax*0x1]
0xb228: mov rax,qword ptr [rdi + 0x60]
0xb22c: cmp qword ptr [rdx + 0x60],rax
0xb230: jg 0xb1fe
0xb232: jl 0xb1df
0xb234: mov rax,qword ptr [rdi + 0x68]
0xb238: sub eax,dword ptr [rdx + 0x68]
0xb23b: jnz 0xb203
0xb23d: mov rsi,qword ptr [rdi]
0xb240: mov rdi,qword ptr [rdx]
0xb243: jmp 0x5de0
0xb250: mov edx,dword ptr [0xa8 + rsi]
0xb256: mov ecx,dword ptr [0xa8 + rdi]
0xb25c: cmp edx,0x3
0xb25f: setz al
0xb262: cmp edx,0x9
0xb265: setz dl
0xb268: or eax,edx
0xb26a: cmp ecx,0x3
0xb26d: jz 0xb298
0xb26f: cmp ecx,0x9
0xb272: jz 0xb298
0xb274: mov edx,dword ptr [0xac + rdi]
0xb27a: and edx,0xf000
0xb280: test al,al
0xb282: jz 0xb2b8
0xb284: cmp edx,0x4000
0xb28a: jz 0xb2d8
0xb28c: mov eax,0x1
0xb291: ret 
0xb298: test al,al
0xb29a: jnz 0xb2d8
0xb29c: mov eax,dword ptr [0xac + rsi]
0xb2a2: and eax,0xf000
0xb2a7: cmp eax,0x4000
0xb2ac: jz 0xb2d8
0xb2ae: mov eax,0xffffffff
0xb2b3: ret 
0xb2b8: mov eax,dword ptr [0xac + rsi]
0xb2be: and eax,0xf000
0xb2c3: cmp eax,0x4000
0xb2c8: jz 0xb284
0xb2ca: cmp edx,0x4000
0xb2d0: jz 0xb2ae
0xb2d2: nop word ptr [rax + rax*0x1]
0xb2d8: mov rax,qword ptr [0x80 + rsi]
0xb2df: cmp qword ptr [0x80 + rdi],rax
0xb2e6: jg 0xb2ae
0xb2e8: jl 0xb28c
0xb2ea: mov rax,qword ptr [0x88 + rsi]
0xb2f1: sub eax,dword ptr [0x88 + rdi]
0xb2f7: jnz 0xb2b3
0xb2f9: mov rsi,qword ptr [rsi]
0xb2fc: mov rdi,qword ptr [rdi]
0xb2ff: jmp 0x5de0
0xb310: push r12
0xb312: push rbp
0xb313: mov r12,rsi
0xb316: push rbx
0xb317: mov rbp,qword ptr [rdi]
0xb31a: mov esi,0x2e
0xb31f: mov rdi,rbp
0xb322: call 0x34a0
0xb327: mov r12,qword ptr [r12]
0xb32b: mov esi,0x2e
0xb330: mov rbx,rax
0xb333: mov rdi,r12
0xb336: call 0x34a0
0xb33b: test rax,rax
0xb33e: jz 0xb370
0xb340: lea rdx,[rip+0xc56c]
0xb347: test rbx,rbx
0xb34a: mov rsi,rax
0xb34d: cmovz rbx,rdx
0xb351: mov rdi,rbx
0xb354: call 0x3590
0xb359: test eax,eax
0xb35b: jnz 0xb38b
0xb35d: pop rbx
0xb35e: mov rsi,r12
0xb361: mov rdi,rbp
0xb364: pop rbp
0xb365: pop r12
0xb367: jmp 0x3590
0xb370: test rbx,rbx
0xb373: lea rax,[rip+0xc539]
0xb37a: jz 0xb35d
0xb37c: mov rsi,rax
0xb37f: mov rdi,rbx
0xb382: call 0x3590
0xb387: test eax,eax
0xb389: jz 0xb35d
0xb38b: pop rbx
0xb38c: pop rbp
0xb38d: pop r12
0xb38f: ret 
0xb390: push r12
0xb392: push rbp
0xb393: mov r12,rdi
0xb396: push rbx
0xb397: mov rbp,qword ptr [rsi]
0xb39a: mov esi,0x2e
0xb39f: mov rdi,rbp
0xb3a2: call 0x34a0
0xb3a7: mov r12,qword ptr [r12]
0xb3ab: mov esi,0x2e
0xb3b0: mov rbx,rax
0xb3b3: mov rdi,r12
0xb3b6: call 0x34a0
0xb3bb: test rax,rax
0xb3be: jz 0xb3f0
0xb3c0: lea rdx,[rip+0xc4ec]
0xb3c7: test rbx,rbx
0xb3ca: mov rsi,rax
0xb3cd: cmovz rbx,rdx
0xb3d1: mov rdi,rbx
0xb3d4: call 0x3590
0xb3d9: test eax,eax
0xb3db: jnz 0xb40b
0xb3dd: pop rbx
0xb3de: mov rsi,r12
0xb3e1: mov rdi,rbp
0xb3e4: pop rbp
0xb3e5: pop r12
0xb3e7: jmp 0x3590
0xb3f0: test rbx,rbx
0xb3f3: lea rax,[rip+0xc4b9]
0xb3fa: jz 0xb3dd
0xb3fc: mov rsi,rax
0xb3ff: mov rdi,rbx
0xb402: call 0x3590
0xb407: test eax,eax
0xb409: jz 0xb3dd
0xb40b: pop rbx
0xb40c: pop rbp
0xb40d: pop r12
0xb40f: ret 
0xb410: mov edx,dword ptr [0xa8 + rsi]
0xb416: mov ecx,dword ptr [0xa8 + rdi]
0xb41c: cmp edx,0x3
0xb41f: setz al
0xb422: cmp edx,0x9
0xb425: setz dl
0xb428: or eax,edx
0xb42a: cmp ecx,0x3
0xb42d: jz 0xb458
0xb42f: cmp ecx,0x9
0xb432: jz 0xb458
0xb434: mov edx,dword ptr [0xac + rdi]
0xb43a: and edx,0xf000
0xb440: test al,al
0xb442: jz 0xb478
0xb444: cmp edx,0x4000
0xb44a: jz 0xb498
0xb44c: mov eax,0x1
0xb451: ret 
0xb458: test al,al
0xb45a: jnz 0xb498
0xb45c: mov eax,dword ptr [0xac + rsi]
0xb462: and eax,0xf000
0xb467: cmp eax,0x4000
0xb46c: jz 0xb498
0xb46e: mov eax,0xffffffff
0xb473: ret 
0xb478: mov eax,dword ptr [0xac + rsi]
0xb47e: and eax,0xf000
0xb483: cmp eax,0x4000
0xb488: jz 0xb444
0xb48a: cmp edx,0x4000
0xb490: jz 0xb46e
0xb492: nop word ptr [rax + rax*0x1]
0xb498: push r12
0xb49a: push rbp
0xb49b: mov rbp,rdi
0xb49e: push rbx
0xb49f: mov rbx,rsi
0xb4a2: mov esi,0x2e
0xb4a7: mov rdi,qword ptr [rbx]
0xb4aa: call 0x34a0
0xb4af: mov rdi,qword ptr [rbp]
0xb4b3: mov esi,0x2e
0xb4b8: mov r12,rax
0xb4bb: call 0x34a0
0xb4c0: lea rdx,[rip+0xc3ec]
0xb4c7: test rax,rax
0xb4ca: cmovz rax,rdx
0xb4ce: test r12,r12
0xb4d1: cmovz r12,rdx
0xb4d5: mov rsi,rax
0xb4d8: mov rdi,r12
0xb4db: call 0x5de0
0xb4e0: test eax,eax
0xb4e2: jnz 0xb4f8
0xb4e4: mov rsi,qword ptr [rbp]
0xb4e8: mov rdi,qword ptr [rbx]
0xb4eb: pop rbx
0xb4ec: pop rbp
0xb4ed: pop r12
0xb4ef: jmp 0x5de0
0xb4f8: pop rbx
0xb4f9: pop rbp
0xb4fa: pop r12
0xb4fc: ret 
0xb500: mov edx,dword ptr [0xa8 + rsi]
0xb506: mov ecx,dword ptr [0xa8 + rdi]
0xb50c: cmp edx,0x3
0xb50f: setz al
0xb512: cmp edx,0x9
0xb515: setz dl
0xb518: or eax,edx
0xb51a: cmp ecx,0x3
0xb51d: jz 0xb548
0xb51f: cmp ecx,0x9
0xb522: jz 0xb548
0xb524: mov edx,dword ptr [0xac + rdi]
0xb52a: and edx,0xf000
0xb530: test al,al
0xb532: jz 0xb568
0xb534: cmp edx,0x4000
0xb53a: jz 0xb588
0xb53c: mov eax,0x1
0xb541: ret 
0xb548: test al,al
0xb54a: jnz 0xb588
0xb54c: mov eax,dword ptr [0xac + rsi]
0xb552: and eax,0xf000
0xb557: cmp eax,0x4000
0xb55c: jz 0xb588
0xb55e: mov eax,0xffffffff
0xb563: ret 
0xb568: mov eax,dword ptr [0xac + rsi]
0xb56e: and eax,0xf000
0xb573: cmp eax,0x4000
0xb578: jz 0xb534
0xb57a: cmp edx,0x4000
0xb580: jz 0xb55e
0xb582: nop word ptr [rax + rax*0x1]
0xb588: push r12
0xb58a: push rbp
0xb58b: mov rbp,rdi
0xb58e: push rbx
0xb58f: mov rdi,qword ptr [rdi]
0xb592: mov rbx,rsi
0xb595: mov esi,0x2e
0xb59a: call 0x34a0
0xb59f: mov rdi,qword ptr [rbx]
0xb5a2: mov esi,0x2e
0xb5a7: mov r12,rax
0xb5aa: call 0x34a0
0xb5af: lea rdx,[rip+0xc2fd]
0xb5b6: test rax,rax
0xb5b9: cmovz rax,rdx
0xb5bd: test r12,r12
0xb5c0: cmovz r12,rdx
0xb5c4: mov rsi,rax
0xb5c7: mov rdi,r12
0xb5ca: call 0x5de0
0xb5cf: test eax,eax
0xb5d1: jnz 0xb5e8
0xb5d3: mov rsi,qword ptr [rbx]
0xb5d6: mov rdi,qword ptr [rbp]
0xb5da: pop rbx
0xb5db: pop rbp
0xb5dc: pop r12
0xb5de: jmp 0x5de0
0xb5e8: pop rbx
0xb5e9: pop rbp
0xb5ea: pop r12
0xb5ec: ret 
0xb5f0: mov edx,dword ptr [0xa8 + rsi]
0xb5f6: mov ecx,dword ptr [0xa8 + rdi]
0xb5fc: cmp edx,0x3
0xb5ff: setz al
0xb602: cmp edx,0x9
0xb605: setz dl
0xb608: or eax,edx
0xb60a: cmp ecx,0x3
0xb60d: jz 0xb638
0xb60f: cmp ecx,0x9
0xb612: jz 0xb638
0xb614: mov edx,dword ptr [0xac + rdi]
0xb61a: and edx,0xf000
0xb620: test al,al
0xb622: jz 0xb658
0xb624: cmp edx,0x4000
0xb62a: jz 0xb678
0xb62c: mov eax,0x1
0xb631: ret 
0xb638: test al,al
0xb63a: jnz 0xb678
0xb63c: mov eax,dword ptr [0xac + rsi]
0xb642: and eax,0xf000
0xb647: cmp eax,0x4000
0xb64c: jz 0xb678
0xb64e: mov eax,0xffffffff
0xb653: ret 
0xb658: mov eax,dword ptr [0xac + rsi]
0xb65e: and eax,0xf000
0xb663: cmp eax,0x4000
0xb668: jz 0xb624
0xb66a: cmp edx,0x4000
0xb670: jz 0xb64e
0xb672: nop word ptr [rax + rax*0x1]
0xb678: mov rax,qword ptr [rsi + 0x60]
0xb67c: cmp qword ptr [rdi + 0x60],rax
0xb680: jg 0xb64e
0xb682: jl 0xb62c
0xb684: mov rax,qword ptr [rsi + 0x68]
0xb688: sub eax,dword ptr [rdi + 0x68]
0xb68b: jnz 0xb653
0xb68d: mov rsi,qword ptr [rsi]
0xb690: mov rdi,qword ptr [rdi]
0xb693: jmp 0x3590
0xb6a0: mov rdx,rsi
0xb6a3: mov esi,dword ptr [0xa8 + rdi]
0xb6a9: mov ecx,dword ptr [0xa8 + rdx]
0xb6af: cmp ecx,0x3
0xb6b2: setz al
0xb6b5: cmp ecx,0x9
0xb6b8: setz cl
0xb6bb: or eax,ecx
0xb6bd: cmp esi,0x3
0xb6c0: jz 0xb6e8
0xb6c2: cmp esi,0x9
0xb6c5: jz 0xb6e8
0xb6c7: mov ecx,dword ptr [0xac + rdi]
0xb6cd: and ecx,0xf000
0xb6d3: test al,al
0xb6d5: jz 0xb708
0xb6d7: cmp ecx,0x4000
0xb6dd: jz 0xb728
0xb6df: mov eax,0x1
0xb6e4: ret 
0xb6e8: test al,al
0xb6ea: jnz 0xb728
0xb6ec: mov eax,dword ptr [0xac + rdx]
0xb6f2: and eax,0xf000
0xb6f7: cmp eax,0x4000
0xb6fc: jz 0xb728
0xb6fe: mov eax,0xffffffff
0xb703: ret 
0xb708: mov eax,dword ptr [0xac + rdx]
0xb70e: and eax,0xf000
0xb713: cmp eax,0x4000
0xb718: jz 0xb6d7
0xb71a: cmp ecx,0x4000
0xb720: jz 0xb6fe
0xb722: nop word ptr [rax + rax*0x1]
0xb728: mov rax,qword ptr [rdi + 0x70]
0xb72c: cmp qword ptr [rdx + 0x70],rax
0xb730: jg 0xb6fe
0xb732: jl 0xb6df
0xb734: mov rax,qword ptr [rdi + 0x78]
0xb738: sub eax,dword ptr [rdx + 0x78]
0xb73b: jnz 0xb703
0xb73d: mov rsi,qword ptr [rdi]
0xb740: mov rdi,qword ptr [rdx]
0xb743: jmp 0x3590
0xb750: mov edx,dword ptr [0xa8 + rsi]
0xb756: mov ecx,dword ptr [0xa8 + rdi]
0xb75c: cmp edx,0x3
0xb75f: setz al
0xb762: cmp edx,0x9
0xb765: setz dl
0xb768: or eax,edx
0xb76a: cmp ecx,0x3
0xb76d: jz 0xb798
0xb76f: cmp ecx,0x9
0xb772: jz 0xb798
0xb774: mov edx,dword ptr [0xac + rdi]
0xb77a: and edx,0xf000
0xb780: test al,al
0xb782: jz 0xb7b8
0xb784: cmp edx,0x4000
0xb78a: jz 0xb7d8
0xb78c: mov eax,0x1
0xb791: ret 
0xb798: test al,al
0xb79a: jnz 0xb7d8
0xb79c: mov eax,dword ptr [0xac + rsi]
0xb7a2: and eax,0xf000
0xb7a7: cmp eax,0x4000
0xb7ac: jz 0xb7d8
0xb7ae: mov eax,0xffffffff
0xb7b3: ret 
0xb7b8: mov eax,dword ptr [0xac + rsi]
0xb7be: and eax,0xf000
0xb7c3: cmp eax,0x4000
0xb7c8: jz 0xb784
0xb7ca: cmp edx,0x4000
0xb7d0: jz 0xb7ae
0xb7d2: nop word ptr [rax + rax*0x1]
0xb7d8: mov rax,qword ptr [0x80 + rsi]
0xb7df: cmp qword ptr [0x80 + rdi],rax
0xb7e6: jg 0xb7ae
0xb7e8: jl 0xb78c
0xb7ea: mov rax,qword ptr [0x88 + rsi]
0xb7f1: sub eax,dword ptr [0x88 + rdi]
0xb7f7: jnz 0xb7b3
0xb7f9: mov rsi,qword ptr [rsi]
0xb7fc: mov rdi,qword ptr [rdi]
0xb7ff: jmp 0x3590
0xb810: mov edx,dword ptr [0xa8 + rsi]
0xb816: mov ecx,dword ptr [0xa8 + rdi]
0xb81c: cmp edx,0x3
0xb81f: setz al
0xb822: cmp edx,0x9
0xb825: setz dl
0xb828: or eax,edx
0xb82a: cmp ecx,0x3
0xb82d: jz 0xb858
0xb82f: cmp ecx,0x9
0xb832: jz 0xb858
0xb834: mov edx,dword ptr [0xac + rdi]
0xb83a: and edx,0xf000
0xb840: test al,al
0xb842: jz 0xb878
0xb844: cmp edx,0x4000
0xb84a: jz 0xb898
0xb84c: mov eax,0x1
0xb851: ret 
0xb858: test al,al
0xb85a: jnz 0xb898
0xb85c: mov eax,dword ptr [0xac + rsi]
0xb862: and eax,0xf000
0xb867: cmp eax,0x4000
0xb86c: jz 0xb898
0xb86e: mov eax,0xffffffff
0xb873: ret 
0xb878: mov eax,dword ptr [0xac + rsi]
0xb87e: and eax,0xf000
0xb883: cmp eax,0x4000
0xb888: jz 0xb844
0xb88a: cmp edx,0x4000
0xb890: jz 0xb86e
0xb892: nop word ptr [rax + rax*0x1]
0xb898: push r12
0xb89a: push rbp
0xb89b: push rbx
0xb89c: mov r12,qword ptr [rdi]
0xb89f: mov rbx,rsi
0xb8a2: mov esi,0x2e
0xb8a7: mov rdi,r12
0xb8aa: call 0x34a0
0xb8af: mov rbx,qword ptr [rbx]
0xb8b2: mov esi,0x2e
0xb8b7: mov rbp,rax
0xb8ba: mov rdi,rbx
0xb8bd: call 0x34a0
0xb8c2: test rax,rax
0xb8c5: jz 0xb900
0xb8c7: lea rdx,[rip+0xbfe5]
0xb8ce: test rbp,rbp
0xb8d1: cmovz rbp,rdx
0xb8d5: mov rsi,rax
0xb8d8: mov rdi,rbp
0xb8db: call 0x3590
0xb8e0: test eax,eax
0xb8e2: jnz 0xb8f8
0xb8e4: mov rsi,rbx
0xb8e7: mov rdi,r12
0xb8ea: pop rbx
0xb8eb: pop rbp
0xb8ec: pop r12
0xb8ee: jmp 0x3590
0xb8f8: pop rbx
0xb8f9: pop rbp
0xb8fa: pop r12
0xb8fc: ret 
0xb900: test rbp,rbp
0xb903: lea rax,[rip+0xbfa9]
0xb90a: jnz 0xb8d5
0xb90c: jmp 0xb8e4
0xbf90: call 0x33e0
0xbf95: lea rcx,[rip+0xdccc]
0xbf9c: lea rdx,[rip+0xba33]
0xbfa3: mov rsi,rax
0xbfa6: mov edi,0x1
0xbfab: xor eax,eax
0xbfad: call 0x3710
0xbfb2: xor esi,esi
0xbfb4: mov edi,0x5
0xbfb9: call 0x3700
0xbfbe: test rax,rax
0xbfc1: jz 0xbfdb
0xbfc3: lea rsi,[rip+0xba1a]
0xbfca: mov edx,0x3
0xbfcf: mov rdi,rax
0xbfd2: call 0x32b0
0xbfd7: test eax,eax
0xbfd9: jnz 0xc016
0xbfdb: lea rsi,[rip+0xba06]
0xbfe2: mov edx,0x5
0xbfe7: xor edi,edi
0xbfe9: mov rbx,rbp
0xbfec: call 0x33e0
0xbff1: lea rdx,[rip+0xdc70]
0xbff8: mov rcx,rbp
0xbffb: mov rsi,rax
0xbffe: mov edi,0x1
0xc003: xor eax,eax
0xc005: lea rbp,[rip+0xb970]
0xc00c: call 0x3710
0xc011: jmp 0xbf63
0xc016: mov rbx,rbp
0xc140: mov edi,0x1
0xc145: jmp 0xb910
0xc2f0: push r15
0xc2f2: push r14
0xc2f4: mov r14,rdi
0xc2f7: push r13
0xc2f9: push r12
0xc2fb: xor edi,edi
0xc2fd: push rbp
0xc2fe: push rbx
0xc2ff: mov rbp,rsi
0xc302: lea rsi,[rip+0xdc64]
0xc309: mov r12,rdx
0xc30c: mov edx,0x5
0xc311: sub rsp,0x8
0xc315: mov rbx,qword ptr [rip+0x213fa4]
0xc31c: call 0x33e0
0xc321: mov rdi,rax
0xc324: mov rsi,rbx
0xc327: call 0x3570
0xc32c: mov r15,qword ptr [r14]
0xc32f: test r15,r15
0xc332: jz 0xc3c8
0xc338: xor r13d,r13d
0xc33b: xor ebx,ebx
0xc33d: jmp 0xc378
0xc340: mov rdi,r15
0xc343: add rbx,0x1
0xc347: mov r13,rbp
0xc34a: call 0x13d60
0xc34f: mov rdi,qword ptr [rip+0x213f6a]
0xc356: lea rdx,[rip+0xdc25]
0xc35d: mov rcx,rax
0xc360: mov esi,0x1
0xc365: xor eax,eax
0xc367: add rbp,r12
0xc36a: call 0x3800
0xc36f: mov r15,qword ptr [r14 + rbx*0x8]
0xc373: test r15,r15
0xc376: jz 0xc3c8
0xc378: test rbx,rbx
0xc37b: jz 0xc340
0xc37d: mov rdx,r12
0xc380: mov rsi,rbp
0xc383: mov rdi,r13
0xc386: call 0x3550
0xc38b: test eax,eax
0xc38d: jnz 0xc340
0xc38f: mov rdi,r15
0xc392: add rbx,0x1
0xc396: add rbp,r12
0xc399: call 0x13d60
0xc39e: mov rdi,qword ptr [rip+0x213f1b]
0xc3a5: lea rdx,[rip+0xdbde]
0xc3ac: mov rcx,rax
0xc3af: mov esi,0x1
0xc3b4: xor eax,eax
0xc3b6: call 0x3800
0xc3bb: mov r15,qword ptr [r14 + rbx*0x8]
0xc3bf: test r15,r15
0xc3c2: jnz 0xc378
0xc3c4: nop dword ptr [rax]
0xc3c8: mov rdi,qword ptr [rip+0x213ef1]
0xc3cf: mov rax,qword ptr [rdi + 0x28]
0xc3d3: cmp rax,qword ptr [rdi + 0x30]
0xc3d7: jnc 0xc3f8
0xc3d9: lea rdx,[rax + 0x1]
0xc3dd: mov qword ptr [rdi + 0x28],rdx
0xc3e1: mov byte ptr [rax],0xa
0xc3e4: add rsp,0x8
0xc3e8: pop rbx
0xc3e9: pop rbp
0xc3ea: pop r12
0xc3ec: pop r13
0xc3ee: pop r14
0xc3f0: pop r15
0xc3f2: ret 
0xc3f8: add rsp,0x8
0xc3fc: mov esi,0xa
0xc401: pop rbx
0xc402: pop rbp
0xc403: pop r12
0xc405: pop r13
0xc407: pop r14
0xc409: pop r15
0xc40b: jmp 0x3490
0xc463: mov rdx,r15
0xc466: mov rsi,rbp
0xc469: mov rdi,rbx
0xc46c: call 0xc2f0
0xc471: call r13
0xc474: mov rax,-0x1
0xc47b: jmp 0xc446
0xc480: push r14
0xc482: push r13
0xc484: push r12
0xc486: push rbp
0xc487: push rbx
0xc488: mov r14,qword ptr [rsi]
0xc48b: test r14,r14
0xc48e: jz 0xc4c1
0xc490: mov r12,rcx
0xc493: mov r13,rdi
0xc496: mov rbp,rdx
0xc499: lea rbx,[rsi + 0x8]
0xc49d: jmp 0xc4af
0xc4a0: mov r14,qword ptr [rbx]
0xc4a3: add rbp,r12
0xc4a6: add rbx,0x8
0xc4aa: test r14,r14
0xc4ad: jz 0xc4c1
0xc4af: mov rdx,r12
0xc4b2: mov rsi,rbp
0xc4b5: mov rdi,r13
0xc4b8: call 0x3550
0xc4bd: test eax,eax
0xc4bf: jnz 0xc4a0
0xc4c1: pop rbx
0xc4c2: mov rax,r14
0xc4c5: pop rbp
0xc4c6: pop r12
0xc4c8: pop r13
0xc4ca: pop r14
0xc4cc: ret 
0xc653: mov r12,r13
0xc656: sub r12,r14
0xc659: cmp r12,0x1
0xc65d: jz 0xc830
0xc663: cmp r12,0x2
0xc667: jnz 0xc671
0xc669: cmp al,0x2e
0xc66b: jz 0xc900
0xc671: cmp byte ptr [r15 - 0x1],0x2f
0xc676: jz 0xc680
0xc678: mov byte ptr [r15],0x2f
0xc67c: add r15,0x1
0xc680: lea rax,[r15 + r12*0x1]
0xc684: cmp rbx,rax
0xc687: ja 0xc6ba
0xc689: sub rbx,rbp
0xc68c: sub r15,rbp
0xc68f: mov rdi,rbp
0xc692: lea rax,[r12 + rbx*0x1 + 0x1]
0xc697: add rbx,0x1000
0xc69e: cmp r12,0x1000
0xc6a5: cmovge rbx,rax
0xc6a9: mov rsi,rbx
0xc6ac: call 0x145f0
0xc6b1: mov rbp,rax
0xc6b4: add rbx,rax
0xc6b7: add r15,rax
0xc6ba: mov rdi,r15
0xc6bd: mov rdx,r12
0xc6c0: mov rsi,r14
0xc6c3: call 0x35f0
0xc6c8: cmp dword ptr [rsp + 0x4],0x2
0xc6cd: lea r15,[r15 + r12*0x1]
0xc6d1: mov byte ptr [r15],0x0
0xc6d5: jnz 0xc790
0xc6db: cmp byte ptr [rsp + 0x1b],0x0
0xc6e0: jz 0xc790
0xc6e6: mov dword ptr [rsp + 0x58],0x0
0xc6ee: cmp byte ptr [r13],0x0
0xc6f3: jz 0xc700
0xc6f5: cmp dword ptr [rsp + 0x4],0x2
0xc6fa: jnz 0xcb57
0xc700: mov r14,r13
0xc703: movzx eax,byte ptr [r14]
0xc707: test al,al
0xc709: jnz 0xc610
0xc756: mov rdi,rax
0xc759: call 0xe200
0xc75e: nop 
0xc790: mov eax,dword ptr [rsp + 0x1c]
0xc794: mov rdx,qword ptr [rsp + 0x8]
0xc799: mov rsi,rbp
0xc79c: mov edi,0x1
0xc7a1: test eax,eax
0xc7a3: jz 0xc860
0xc7a9: call 0x3640
0xc7ae: test eax,eax
0xc7b0: setnz al
0xc7b3: test al,al
0xc7b5: jz 0xc840
0xc7bb: call 0x32a0
0xc7c0: mov r14,rax
0xc7c3: mov edx,dword ptr [rax]
0xc7c5: mov eax,dword ptr [rsp + 0x4]
0xc7c9: test eax,eax
0xc7cb: jz 0xc7fe
0xc7cd: cmp eax,0x1
0xc7d0: jnz 0xc6e6
0xc7d6: lea rsi,[rip+0xb3f0]
0xc7dd: mov rdi,r13
0xc7e0: mov dword ptr [rsp + 0x38],edx
0xc7e4: call 0x3530
0xc7e9: cmp byte ptr [r13 + rax*0x1],0x0
0xc7ef: mov edx,dword ptr [rsp + 0x38]
0xc7f3: jnz 0xc7fe
0xc7f5: cmp edx,0x2
0xc7f8: jz 0xc700
0xc7fe: mov r12,r14
0xc801: mov rdi,qword ptr [rsp + 0x28]
0xc806: mov dword ptr [rsp + 0x4],edx
0xc80a: call 0x3880
0xc80f: mov rdi,rbp
0xc812: call 0x3880
0xc817: cmp qword ptr [rsp + 0x10],0x0
0xc81d: mov edx,dword ptr [rsp + 0x4]
0xc821: jz 0xc8dc
0xc827: jmp 0xc8ca
0xc830: cmp al,0x2e
0xc832: jnz 0xc671
0xc838: jmp 0xc700
0xc840: mov eax,dword ptr [rsp + 0x58]
0xc844: and eax,0xf000
0xc849: cmp eax,0xa000
0xc84e: jz 0xc870
0xc850: cmp eax,0x4000
0xc855: jz 0xc700
0xc85b: jmp 0xc6ee
0xc860: call 0x3410
0xc865: test eax,eax
0xc867: setnz al
0xc86a: jmp 0xc7b3
0xc870: cmp qword ptr [rsp + 0x10],0x0
0xc876: jz 0xca26
0xc87c: mov rdx,qword ptr [rsp + 0x8]
0xc881: mov rsi,qword ptr [rsp + 0x20]
0xc886: mov rdi,qword ptr [rsp + 0x10]
0xc88b: call 0xce60
0xc890: test al,al
0xc892: jz 0xc950
0xc898: cmp dword ptr [rsp + 0x4],0x2
0xc89d: jz 0xc700
0xc8a3: call 0x32a0
0xc8a8: mov edx,0x28
0xc8ad: mov r12,rax
0xc8b0: mov rdi,qword ptr [rsp + 0x28]
0xc8b5: mov dword ptr [rsp + 0x4],edx
0xc8b9: call 0x3880
0xc8be: mov rdi,rbp
0xc8c1: call 0x3880
0xc8c6: mov edx,dword ptr [rsp + 0x4]
0xc8ca: mov rdi,qword ptr [rsp + 0x10]
0xc8cf: mov dword ptr [rsp + 0x4],edx
0xc8d3: call 0xe200
0xc8d8: mov edx,dword ptr [rsp + 0x4]
0xc8dc: mov dword ptr [r12],edx
0xc8e0: xor ebp,ebp
0xc8e2: jmp 0xc760
0xc900: cmp byte ptr [r14 + 0x1],0x2e
0xc905: jnz 0xc671
0xc90b: lea rax,[rbp + 0x1]
0xc90f: mov r14,r13
0xc912: cmp r15,rax
0xc915: jbe 0xc5fb
0xc91b: lea rax,[r15 - 0x1]
0xc91f: cmp rbp,rax
0xc922: jnc 0xcb69
0xc928: cmp byte ptr [r15 - 0x2],0x2f
0xc92d: mov r15,rax
0xc930: jz 0xc5fb
0xc936: sub r15,0x1
0xc93a: cmp rbp,r15
0xc93d: jz 0xc700
0xc943: cmp byte ptr [r15 - 0x1],0x2f
0xc948: jz 0xc700
0xc94e: jmp 0xc936
0xc950: mov rdx,qword ptr [rsp + 0x8]
0xc955: mov rsi,qword ptr [rsp + 0x20]
0xc95a: mov rdi,qword ptr [rsp + 0x10]
0xc95f: call 0xcdd0
0xc964: mov rsi,qword ptr [rsp + 0x70]
0xc969: mov rdi,rbp
0xc96c: call 0xc050
0xc971: test rax,rax
0xc974: mov r14,rax
0xc977: jz 0xcae2
0xc97d: mov rdi,rax
0xc980: call 0x3400
0xc985: mov rdi,r13
0xc988: mov r12,rax
0xc98b: mov qword ptr [rsp + 0x20],rax
0xc990: call 0x3400
0xc995: cmp qword ptr [rsp + 0x30],0x0
0xc99b: mov rdx,rax
0xc99e: lea rcx,[r12 + rdx*0x1 + 0x1]
0xc9a3: jz 0xca9f
0xc9a9: cmp qword ptr [rsp + 0x30],rcx
0xc9ae: jnc 0xc9d1
0xc9b0: mov rdi,qword ptr [rsp + 0x28]
0xc9b5: mov rsi,rcx
0xc9b8: mov qword ptr [rsp + 0x38],rdx
0xc9bd: mov qword ptr [rsp + 0x30],rcx
0xc9c2: call 0x145f0
0xc9c7: mov rdx,qword ptr [rsp + 0x38]
0xc9cc: mov qword ptr [rsp + 0x28],rax
0xc9d1: mov r12,qword ptr [rsp + 0x28]
0xc9d6: mov rdi,qword ptr [rsp + 0x20]
0xc9db: add rdx,0x1
0xc9df: mov rsi,r13
0xc9e2: add rdi,r12
0xc9e5: mov r13,r12
0xc9e8: call 0x3750
0xc9ed: mov rdx,qword ptr [rsp + 0x20]
0xc9f2: mov rsi,r14
0xc9f5: mov rdi,r12
0xc9f8: call 0x35f0
0xc9fd: cmp byte ptr [r14],0x2f
0xca01: mov qword ptr [rsp + 0x20],r12
0xca06: lea rax,[rbp + 0x1]
0xca0a: jz 0xcb04
0xca10: cmp r15,rax
0xca13: ja 0xcb22
0xca19: mov rdi,r14
0xca1c: call 0x3880
0xca21: jmp 0xc700
0xca26: lea r8,[rip+0x20a3]
0xca2d: lea rcx,[rip+0x205c]
0xca34: xor esi,esi
0xca36: lea rdx,[rip+0x1fe3]
0xca3d: mov edi,0x7
0xca42: call 0xdfb0
0xca47: test rax,rax
0xca4a: mov qword ptr [rsp + 0x10],rax
0xca4f: jnz 0xc87c
0xca55: call 0x147e0
0xca5a: nop word ptr [rax + rax*0x1]
0xca9f: cmp rcx,0x1000
0xcaa6: mov eax,0x1000
0xcaab: mov qword ptr [rsp + 0x38],rdx
0xcab0: cmovnc rax,rcx
0xcab4: mov rdi,rax
0xcab7: mov qword ptr [rsp + 0x30],rax
0xcabc: call 0x14590
0xcac1: mov rdx,qword ptr [rsp + 0x38]
0xcac6: mov qword ptr [rsp + 0x28],rax
0xcacb: jmp 0xc9d1
0xcae2: call 0x32a0
0xcae7: cmp dword ptr [rsp + 0x4],0x2
0xcaec: mov r14,rax
0xcaef: mov edx,dword ptr [rax]
0xcaf1: jnz 0xcafc
0xcaf3: cmp edx,0xc
0xcaf6: jnz 0xc700
0xcafc: mov r12,r14
0xcaff: jmp 0xc8b0
0xcb04: mov byte ptr [rbp],0x2f
0xcb08: mov r15,rax
0xcb0b: jmp 0xca19
0xcb22: lea rax,[r15 - 0x1]
0xcb26: cmp rbp,rax
0xcb29: jnc 0xcb32
0xcb2b: cmp byte ptr [r15 - 0x2],0x2f
0xcb30: jnz 0xcb3d
0xcb32: mov r15,rax
0xcb35: jmp 0xca19
0xcb3a: mov rax,r15
0xcb3d: lea r15,[rax - 0x1]
0xcb41: cmp rbp,r15
0xcb44: jz 0xca19
0xcb4a: cmp byte ptr [r15 - 0x1],0x2f
0xcb4f: jz 0xca19
0xcb55: jmp 0xcb3a
0xcb57: call 0x32a0
0xcb5c: mov edx,0x14
0xcb61: mov r12,rax
0xcb64: jmp 0xc801
0xcb69: mov r15,rax
0xcb6c: jmp 0xc5fb
0xcb71: call 0x3420
0xcb76: nop word ptr cs:[rax + rax*0x1]
0xcb80: mov qword ptr [rip+0x214851],rdi
0xcb87: ret 
0xcb90: mov byte ptr [rip+0x214839],dil
0xcb97: ret 
0xcba0: push rbp
0xcba1: push rbx
0xcba2: sub rsp,0x8
0xcba6: mov rdi,qword ptr [rip+0x2136db]
0xcbad: call 0x15c80
0xcbb2: test eax,eax
0xcbb4: jz 0xcbcc
0xcbb6: call 0x32a0
0xcbbb: cmp byte ptr [rip+0x21480e],0x0
0xcbc2: mov rbx,rax
0xcbc5: jz 0xcbe3
0xcbc7: cmp dword ptr [rax],0x20
0xcbca: jnz 0xcbe3
0xcbcc: mov rdi,qword ptr [rip+0x2136ed]
0xcbd3: call 0x15c80
0xcbd8: test eax,eax
0xcbda: jnz 0xcc22
0xcbdc: add rsp,0x8
0xcbe0: pop rbx
0xcbe1: pop rbp
0xcbe2: ret 
0xcbe3: lea rsi,[rip+0xd3a5]
0xcbea: xor edi,edi
0xcbec: mov edx,0x5
0xcbf1: call 0x33e0
0xcbf6: mov rdi,qword ptr [rip+0x2147db]
0xcbfd: mov rbp,rax
0xcc00: test rdi,rdi
0xcc03: jz 0xcc2d
0xcc05: call 0x13b60
0xcc0a: mov esi,dword ptr [rbx]
0xcc0c: lea rdx,[rip+0xae45]
0xcc13: mov rcx,rax
0xcc16: mov r8,rbp
0xcc19: xor edi,edi
0xcc1b: xor eax,eax
0xcc1d: call 0x3760
0xcc22: mov edi,dword ptr [rip+0x2135d0]
0xcc28: call 0x32d0
0xcc2d: mov esi,dword ptr [rbx]
0xcc2f: lea rdx,[rip+0xd356]
0xcc36: mov rcx,rax
0xcc39: xor edi,edi
0xcc3b: xor eax,eax
0xcc3d: call 0x3760
0xcc42: jmp 0xcc22
0xccb0: push rbp
0xccb1: push rbx
0xccb2: mov rbp,rdi
0xccb5: sub rsp,0x8
0xccb9: call 0xcc50
0xccbe: test rax,rax
0xccc1: mov rbx,rax
0xccc4: setz al
0xccc7: movzx eax,al
0xccca: lea rdi,[rbx + rax*0x1 + 0x1]
0xcccf: call 0x3888
0xccd4: test rax,rax
0xccd7: mov rcx,rax
0xccda: jz 0xccf6
0xccdc: mov rdx,rbx
0xccdf: mov rsi,rbp
0xcce2: mov rdi,rax
0xcce5: call 0x35f0
0xccea: test rbx,rbx
0xcced: mov rcx,rax
0xccf0: jz 0xcd00
0xccf2: mov byte ptr [rcx + rbx*0x1],0x0
0xccf6: add rsp,0x8
0xccfa: mov rax,rcx
0xccfd: pop rbx
0xccfe: pop rbp
0xccff: ret 
0xcd00: mov byte ptr [rax],0x2e
0xcd03: mov ebx,0x1
0xcd08: jmp 0xccf2
0xcd70: push rbx
0xcd71: mov rbx,rdi
0xcd74: call 0x3400
0xcd79: cmp rax,0x1
0xcd7d: jbe 0xcd8a
0xcd7f: cmp byte ptr [rbx + rax*0x1 - 0x1],0x2f
0xcd84: lea rdx,[rax - 0x1]
0xcd88: jz 0xcd98
0xcd8a: pop rbx
0xcd8b: ret 
0xcd90: mov rdx,rax
0xcd93: nop dword ptr [rax + rax*0x1]
0xcd98: cmp rdx,0x1
0xcd9c: jz 0xcdb0
0xcd9e: cmp byte ptr [rbx + rdx*0x1 - 0x1],0x2f
0xcda3: lea rax,[rdx - 0x1]
0xcda7: jz 0xcd90
0xcda9: mov rax,rdx
0xcdac: pop rbx
0xcdad: ret 
0xcdb0: mov eax,0x1
0xcdb5: pop rbx
0xcdb6: ret 
0xcdd0: test rdi,rdi
0xcdd3: jz 0xce50
0xcdd5: push r13
0xcdd7: push r12
0xcdd9: mov r13,rdi
0xcddc: push rbp
0xcddd: push rbx
0xcdde: mov r12,rsi
0xcde1: mov edi,0x18
0xcde6: mov rbp,rdx
0xcde9: sub rsp,0x8
0xcded: call 0x14590
0xcdf2: mov rdi,r12
0xcdf5: mov rbx,rax
0xcdf8: call 0x147c0
0xcdfd: mov qword ptr [rbx],rax
0xce00: mov rax,qword ptr [rbp + 0x8]
0xce04: mov rsi,rbx
0xce07: mov rdi,r13
0xce0a: mov qword ptr [rbx + 0x8],rax
0xce0e: mov rax,qword ptr [rbp]
0xce12: mov qword ptr [rbx + 0x10],rax
0xce16: call 0xe7b0
0xce1b: test rax,rax
0xce1e: jz 0xce52
0xce20: cmp rbx,rax
0xce23: jz 0xce40
0xce25: add rsp,0x8
0xce29: mov rdi,rbx
0xce2c: pop rbx
0xce2d: pop rbp
0xce2e: pop r12
0xce30: pop r13
0xce32: jmp 0xead0
0xce40: add rsp,0x8
0xce44: pop rbx
0xce45: pop rbp
0xce46: pop r12
0xce48: pop r13
0xce4a: ret 
0xce50: ret 
0xce52: call 0x147e0
0xce57: nop word ptr [rax + rax*0x1]
0xce60: sub rsp,0x28
0xce64: mov rax,qword ptr fs:[rip+0xffffffffffff31bb]
0xce6d: mov qword ptr [rsp + 0x18],rax
0xce72: xor eax,eax
0xce74: test rdi,rdi
0xce77: jz 0xce9c
0xce79: mov rax,qword ptr [rdx + 0x8]
0xce7d: mov qword ptr [rsp],rsi
0xce81: mov rsi,rsp
0xce84: mov qword ptr [rsp + 0x8],rax
0xce89: mov rax,qword ptr [rdx]
0xce8c: mov qword ptr [rsp + 0x10],rax
0xce91: call 0xdd40
0xce96: test rax,rax
0xce99: setnz al
0xce9c: mov rcx,qword ptr [rsp + 0x18]
0xcea1: xor rcx,qword ptr fs:[rip+0xffffffffffff317e]
0xceaa: jnz 0xceb1
0xceac: add rsp,0x28
0xceb0: ret 
0xceb1: call 0x3420
0xceb6: nop word ptr cs:[rax + rax*0x1]
0xd060: sub rsp,0x8
0xd064: call 0xd080
0xd069: test rax,rax
0xd06c: jz 0xd073
0xd06e: add rsp,0x8
0xd072: ret 
0xd073: call 0x147e0
0xd078: nop dword ptr [rax + rax*0x1]
0xd080: push r15
0xd082: push r14
0xd084: mov r15,rdx
0xd087: push r13
0xd089: push r12
0xd08b: mov r12,rdi
0xd08e: push rbp
0xd08f: push rbx
0xd090: mov rbp,rsi
0xd093: sub rsp,0x18
0xd097: call 0xcd10
0xd09c: mov rbx,rax
0xd09f: mov rdi,rax
0xd0a2: call 0xcd70
0xd0a7: sub rbx,r12
0xd0aa: mov r13,rax
0xd0ad: mov rdi,rbp
0xd0b0: add rbx,rax
0xd0b3: call 0x3400
0xd0b8: test r13,r13
0xd0bb: mov r14,rax
0xd0be: jz 0xd0f0
0xd0c0: cmp byte ptr [r12 + rbx*0x1 - 0x1],0x2f
0xd0c6: jz 0xd170
0xd0cc: xor eax,eax
0xd0ce: cmp byte ptr [rbp],0x2f
0xd0d2: mov edx,0x0
0xd0d7: setnz al
0xd0da: mov qword ptr [rsp],rax
0xd0de: mov eax,0x2f
0xd0e3: cmovz eax,edx
0xd0e6: mov byte ptr [rsp + 0xf],al
0xd0ea: jmp 0xd10e
0xd0f0: xor eax,eax
0xd0f2: cmp byte ptr [rbp],0x2f
0xd0f6: mov edx,0x0
0xd0fb: setz al
0xd0fe: mov qword ptr [rsp],rax
0xd102: mov eax,0x2e
0xd107: cmovnz eax,edx
0xd10a: mov byte ptr [rsp + 0xf],al
0xd10e: lea rdi,[rbx + r14*0x1 + 0x1]
0xd113: add rdi,qword ptr [rsp]
0xd117: call 0x3888
0xd11c: test rax,rax
0xd11f: mov r13,rax
0xd122: jz 0xd156
0xd124: mov rdi,rax
0xd127: mov rdx,rbx
0xd12a: mov rsi,r12
0xd12d: call 0x3740
0xd132: movzx ecx,byte ptr [rsp + 0xf]
0xd137: mov rdi,qword ptr [rsp]
0xd13b: add rdi,rax
0xd13e: test r15,r15
0xd141: mov byte ptr [rax],cl
0xd143: jz 0xd148
0xd145: mov qword ptr [r15],rdi
0xd148: mov rdx,r14
0xd14b: mov rsi,rbp
0xd14e: call 0x3740
0xd153: mov byte ptr [rax],0x0
0xd156: add rsp,0x18
0xd15a: mov rax,r13
0xd15d: pop rbx
0xd15e: pop rbp
0xd15f: pop r12
0xd161: pop r13
0xd163: pop r14
0xd165: pop r15
0xd167: ret 
0xd170: mov qword ptr [rsp],0x0
0xd178: mov byte ptr [rsp + 0xf],0x0
0xd17d: jmp 0xd10e
0xd180: mov rsi,qword ptr [rdi]
0xd183: movzx edx,byte ptr [rsi]
0xd186: test dl,dl
0xd188: jz 0xd240
0xd18e: xor ecx,ecx
0xd190: xor eax,eax
0xd192: xor r8d,r8d
0xd195: mov r11d,0x1
0xd19b: mov r10,0x3ffffff03ffffff
0xd1a5: jmp 0xd1df
0xd1b0: movsx ecx,dl
0xd1b3: sub ecx,0x41
0xd1b6: cmp ecx,0x39
0xd1b9: ja 0xd1c8
0xd1bb: mov r9,r11
0xd1be: shl r9,cl
0xd1c1: xor ecx,ecx
0xd1c3: test r9,r10
0xd1c6: jnz 0xd1d1
0xd1c8: xor ecx,ecx
0xd1ca: cmp dl,0x7e
0xd1cd: cmovnz rax,r8
0xd1d1: add rsi,0x1
0xd1d5: mov qword ptr [rdi],rsi
0xd1d8: movzx edx,byte ptr [rsi]
0xd1db: test dl,dl
0xd1dd: jz 0xd211
0xd1df: test cl,cl
0xd1e1: jnz 0xd1b0
0xd1e3: cmp dl,0x2e
0xd1e6: jz 0xd218
0xd1e8: cmp dl,0x5a
0xd1eb: jg 0xd230
0xd1ed: cmp dl,0x41
0xd1f0: jge 0xd1d1
0xd1f2: lea r9d,[rdx - 0x30]
0xd1f6: cmp r9b,0x9
0xd1fa: jbe 0xd1d1
0xd1fc: cmp dl,0x7e
0xd1ff: cmovnz rax,r8
0xd203: add rsi,0x1
0xd207: mov qword ptr [rdi],rsi
0xd20a: movzx edx,byte ptr [rsi]
0xd20d: test dl,dl
0xd20f: jnz 0xd1df
0xd211: ret 
0xd218: test rax,rax
0xd21b: mov ecx,0x1
0xd220: cmovz rax,rsi
0xd224: jmp 0xd1d1
0xd230: lea r9d,[rdx - 0x61]
0xd234: cmp r9b,0x19
0xd238: ja 0xd1fc
0xd23a: jmp 0xd1d1
0xd240: xor eax,eax
0xd242: ret 
0xd250: push r15
0xd252: push r14
0xd254: push r13
0xd256: push r12
0xd258: push rbp
0xd259: push rbx
0xd25a: mov rbp,rsi
0xd25d: mov rbx,rdi
0xd260: sub rsp,0x38
0xd264: mov rax,qword ptr fs:[rip+0xffffffffffff2dbb]
0xd26d: mov qword ptr [rsp + 0x28],rax
0xd272: xor eax,eax
0xd274: call 0x3590
0xd279: test eax,eax
0xd27b: mov r12d,eax
0xd27e: jz 0xd4c8
0xd284: movzx eax,byte ptr [rbx]
0xd287: test al,al
0xd289: jz 0xd608
0xd28f: movzx r8d,byte ptr [rbp]
0xd294: test r8b,r8b
0xd297: jz 0xd4f0
0xd29d: lea r9,[rip+0xccf8]
0xd2a4: mov ecx,0x2
0xd2a9: mov rdi,rbx
0xd2ac: mov rsi,r9
0xd2af: cmpsb.repe rdi,rsi
0xd2b1: seta dl
0xd2b4: sbb dl,0x0
0xd2b7: test dl,dl
0xd2b9: jz 0xd608
0xd2bf: mov ecx,0x2
0xd2c4: mov rsi,r9
0xd2c7: mov rdi,rbp
0xd2ca: cmpsb.repe rdi,rsi
0xd2cc: seta dl
0xd2cf: sbb dl,0x0
0xd2d2: test dl,dl
0xd2d4: jz 0xd4f0
0xd2da: lea r9,[rip+0xccba]
0xd2e1: mov ecx,0x3
0xd2e6: mov rdi,rbx
0xd2e9: mov rsi,r9
0xd2ec: cmpsb.repe rdi,rsi
0xd2ee: seta dl
0xd2f1: sbb dl,0x0
0xd2f4: test dl,dl
0xd2f6: jz 0xd608
0xd2fc: mov ecx,0x3
0xd301: mov rsi,r9
0xd304: mov rdi,rbp
0xd307: cmpsb.repe rdi,rsi
0xd309: seta dl
0xd30c: sbb dl,0x0
0xd30f: test dl,dl
0xd311: jz 0xd4f0
0xd317: cmp al,0x2e
0xd319: jz 0xd5f0
0xd31f: cmp r8b,0x2e
0xd323: jz 0xd4f0
0xd329: lea rdi,[rsp + 0x18]
0xd32e: mov qword ptr [rsp + 0x18],rbx
0xd333: mov qword ptr [rsp + 0x20],rbp
0xd338: call 0xd180
0xd33d: lea rdi,[rsp + 0x20]
0xd342: mov r13,rax
0xd345: call 0xd180
0xd34a: test r13,r13
0xd34d: jz 0xd560
0xd353: sub r13,rbx
0xd356: test rax,rax
0xd359: jz 0xd673
0xd35f: sub rax,rbp
0xd362: mov r14,rax
0xd365: cmp r13,r14
0xd368: jz 0xd640
0xd36e: xor esi,esi
0xd370: xor edx,edx
0xd372: mov r10d,0x1
0xd378: mov r15,0x3ffffff03ffffff
0xd382: cmp r13,rdx
0xd385: ja 0xd390
0xd387: cmp r14,rsi
0xd38a: jbe 0xd4c8
0xd390: mov r11,rsi
0xd393: mov qword ptr [rsp],rbp
0xd397: sub r11,rdx
0xd39a: lea rax,[r13 + r11*0x1]
0xd39f: lea r9,[rbp + r11*0x1]
0xd3a4: mov qword ptr [rsp + 0x8],rax
0xd3a9: nop dword ptr [rax]
0xd3b0: cmp r13,rdx
0xd3b3: jbe 0xd3c0
0xd3b5: movzx eax,byte ptr [rbx + rdx*0x1]
0xd3b9: sub eax,0x30
0xd3bc: cmp al,0x9
0xd3be: ja 0xd3da
0xd3c0: cmp r14,rsi
0xd3c3: movsx eax,byte ptr [r9 + rdx*0x1]
0xd3c8: jbe 0xd590
0xd3ce: lea ecx,[rax - 0x30]
0xd3d1: cmp cl,0x9
0xd3d4: jbe 0xd590
0xd3da: cmp r13,rdx
0xd3dd: jz 0xd613
0xd3e3: movzx eax,byte ptr [rbx + rdx*0x1]
0xd3e7: lea ecx,[rax - 0x30]
0xd3ea: cmp cl,0x9
0xd3ed: jbe 0xd580
0xd3f3: movzx r8d,al
0xd3f7: lea ecx,[r8 - 0x41]
0xd3fb: cmp ecx,0x39
0xd3fe: ja 0xd40b
0xd400: mov rdi,r10
0xd403: shl rdi,cl
0xd406: test rdi,r15
0xd409: jnz 0xd41a
0xd40b: add r8d,0x100
0xd412: cmp al,0x7e
0xd414: jz 0xd500
0xd41a: cmp r14,rsi
0xd41d: jz 0xd430
0xd41f: movzx eax,byte ptr [r9 + rdx*0x1]
0xd424: lea ecx,[rax - 0x30]
0xd427: cmp cl,0x9
0xd42a: ja 0xd528
0xd430: xor edi,edi
0xd432: cmp edi,r8d
0xd435: jnz 0xd5c8
0xd43b: add rdx,0x1
0xd43f: add rsi,0x1
0xd443: jmp 0xd3b0
0xd450: add rsi,0x1
0xd454: movsx eax,byte ptr [rbp + rsi*0x1]
0xd459: cmp al,0x30
0xd45b: jz 0xd450
0xd45d: sub rsi,rdx
0xd460: xor r8d,r8d
0xd463: mov r9,rsi
0xd466: lea r11,[rbp + rsi*0x1]
0xd46b: jmp 0xd496
0xd470: lea esi,[rax - 0x30]
0xd473: cmp sil,0x9
0xd477: ja 0xd5e0
0xd47d: test r8d,r8d
0xd480: jnz 0xd489
0xd482: movsx r8d,cl
0xd486: sub r8d,eax
0xd489: add rdx,0x1
0xd48d: movzx ecx,byte ptr [rbx + rdx*0x1]
0xd491: movsx eax,byte ptr [r11 + rdx*0x1]
0xd496: lea edi,[rcx - 0x30]
0xd499: lea rsi,[rdx + r9*0x1]
0xd49d: cmp dil,0x9
0xd4a1: jbe 0xd470
0xd4a3: sub eax,0x30
0xd4a6: cmp al,0x9
0xd4a8: jbe 0xd663
0xd4ae: test r8d,r8d
0xd4b1: jz 0xd382
0xd4b7: nop word ptr [rax + rax*0x1]
0xd4c0: mov r12d,r8d
0xd4c3: nop dword ptr [rax + rax*0x1]
0xd4c8: mov rbx,qword ptr [rsp + 0x28]
0xd4cd: xor rbx,qword ptr fs:[rip+0xffffffffffff2b52]
0xd4d6: mov eax,r12d
0xd4d9: jnz 0xd66e
0xd4df: add rsp,0x38
0xd4e3: pop rbx
0xd4e4: pop rbp
0xd4e5: pop r12
0xd4e7: pop r13
0xd4e9: pop r14
0xd4eb: pop r15
0xd4ed: ret 
0xd4f0: mov r12d,0x1
0xd4f6: jmp 0xd4c8
0xd500: lea rax,[r11 + rdx*0x1]
0xd504: cmp r14,rax
0xd507: jz 0xd5c0
0xd50d: movzx eax,byte ptr [r9 + rdx*0x1]
0xd512: lea ecx,[rax - 0x30]
0xd515: cmp cl,0x9
0xd518: jbe 0xd5c0
0xd51e: mov r8d,0xffffffff
0xd524: nop dword ptr [rax]
0xd528: movzx edi,al
0xd52b: lea ecx,[rdi - 0x41]
0xd52e: cmp ecx,0x39
0xd531: ja 0xd542
0xd533: mov rbp,r10
0xd536: shl rbp,cl
0xd539: test rbp,r15
0xd53c: jnz 0xd432
0xd542: add edi,0x100
0xd548: cmp al,0x7e
0xd54a: mov eax,0xffffffff
0xd54f: cmovz edi,eax
0xd552: jmp 0xd432
0xd560: mov r13,qword ptr [rsp + 0x18]
0xd565: sub r13,rbx
0xd568: test rax,rax
0xd56b: jnz 0xd35f
0xd571: mov r14,qword ptr [rsp + 0x20]
0xd576: sub r14,rbp
0xd579: jmp 0xd36e
0xd580: xor r8d,r8d
0xd583: jmp 0xd41a
0xd590: movzx ecx,byte ptr [rbx + rdx*0x1]
0xd594: mov rbp,qword ptr [rsp]
0xd598: cmp cl,0x30
0xd59b: jnz 0xd459
0xd5a1: nop dword ptr [rax]
0xd5a8: add rdx,0x1
0xd5ac: movzx ecx,byte ptr [rbx + rdx*0x1]
0xd5b0: cmp cl,0x30
0xd5b3: jz 0xd5a8
0xd5b5: jmp 0xd459
0xd5c0: xor edi,edi
0xd5c2: mov r8d,0xffffffff
0xd5c8: sub r8d,edi
0xd5cb: jnz 0xd4c0
0xd5d1: jmp 0xd4c8
0xd5e0: mov r8d,0x1
0xd5e6: jmp 0xd4c0
0xd5f0: add rbx,0x1
0xd5f4: add rbp,0x1
0xd5f8: cmp r8b,0x2e
0xd5fc: jz 0xd329
0xd602: nop word ptr [rax + rax*0x1]
0xd608: mov r12d,0xffffffff
0xd60e: jmp 0xd4c8
0xd613: cmp r14,qword ptr [rsp + 0x8]
0xd618: jz 0xd43b
0xd61e: movzx eax,byte ptr [r9 + r13*0x1]
0xd623: lea ecx,[rax - 0x30]
0xd626: cmp cl,0x9
0xd629: jbe 0xd43b
0xd62f: xor r8d,r8d
0xd632: jmp 0xd528
0xd640: mov rdx,r13
0xd643: mov rsi,rbp
0xd646: mov rdi,rbx
0xd649: call 0x32b0
0xd64e: test eax,eax
0xd650: jnz 0xd36e
0xd656: mov r13,qword ptr [rsp + 0x18]
0xd65b: sub r13,rbx
0xd65e: jmp 0xd571
0xd663: mov r8d,0xffffffff
0xd669: jmp 0xd4c0
0xd66e: call 0x3420
0xd673: mov r14,qword ptr [rsp + 0x20]
0xd678: sub r14,rbp
0xd67b: jmp 0xd365
0xd690: sub rsp,0x28
0xd694: xor edi,edi
0xd696: mov rsi,rsp
0xd699: mov rax,qword ptr fs:[rip+0xffffffffffff2986]
0xd6a2: mov qword ptr [rsp + 0x18],rax
0xd6a7: xor eax,eax
0xd6a9: call 0x3370
0xd6ae: mov rcx,qword ptr [rsp + 0x18]
0xd6b3: xor rcx,qword ptr fs:[rip+0xffffffffffff296c]
0xd6bc: mov rax,qword ptr [rsp]
0xd6c0: mov rdx,qword ptr [rsp + 0x8]
0xd6c5: jnz 0xd6cc
0xd6c7: add rsp,0x28
0xd6cb: ret 
0xd6cc: call 0x3420
0xd6d1: nop word ptr cs:[rax + rax*0x1]
0xd6db: nop dword ptr [rax + rax*0x1]
0xd740: cmp rdi,0xa
0xd744: mov eax,0xa
0xd749: mov r9,-0x5555555555555555
0xd753: cmovc rdi,rax
0xd757: or rdi,0x1
0xd75b: cmp rdi,-0x1
0xd75f: jz 0xd7cf
0xd761: nop dword ptr [rax]
0xd768: mov rax,rdi
0xd76b: mov rcx,rdi
0xd76e: mul r9
0xd771: mov rax,rdx
0xd774: shr rax,1
0xd777: lea rax,[rax + rax*0x2]
0xd77b: sub rcx,rax
0xd77e: cmp rdi,0x9
0xd782: mov rax,rcx
0xd785: jbe 0xd7c0
0xd787: test rcx,rcx
0xd78a: jz 0xd7c5
0xd78c: mov r8d,0x10
0xd792: mov esi,0x9
0xd797: mov ecx,0x3
0xd79c: jmp 0xd7a9
0xd7a0: add r8,0x8
0xd7a4: test rdx,rdx
0xd7a7: jz 0xd7c5
0xd7a9: add rcx,0x2
0xd7ad: xor edx,edx
0xd7af: mov rax,rdi
0xd7b2: div rcx
0xd7b5: add rsi,r8
0xd7b8: cmp rsi,rdi
0xd7bb: mov rax,rdx
0xd7be: jc 0xd7a0
0xd7c0: test rax,rax
0xd7c3: jnz 0xd7cf
0xd7c5: add rdi,0x2
0xd7c9: cmp rdi,-0x1
0xd7cd: jnz 0xd768
0xd7cf: mov rax,rdi
0xd7d2: ret 
0xd7e0: mov rax,rdi
0xd7e3: xor edx,edx
0xd7e5: ror rax,0x3
0xd7e9: div rsi
0xd7ec: mov rax,rdx
0xd7ef: ret 
0xd7f0: cmp rdi,rsi
0xd7f3: setz al
0xd7f6: ret 
0xd80e: cmp qword ptr [rbx + 0x10],rax
0xd812: jbe 0xd81d
0xd814: shl rax,0x4
0xd818: add rax,qword ptr [rbx]
0xd81b: pop rbx
0xd81c: ret 
0xd81d: call 0x3290
0xd822: nop dword ptr [rax]
0xd826: nop word ptr cs:[rax + rax*0x1]
0xd849: mov qword ptr [r14],rax
0xd84c: mov rsi,qword ptr [rax]
0xd84f: test rsi,rsi
0xd852: jz 0xd940
0xd858: cmp rsi,rbp
0xd85b: mov rbx,rax
0xd85e: jz 0xd8f3
0xd864: mov rdi,rbp
0xd867: call qword ptr [r12 + 0x38]
0xd86c: test al,al
0xd86e: jnz 0xd8f0
0xd874: mov rax,qword ptr [rbx + 0x8]
0xd878: test rax,rax
0xd87b: jz 0xd940
0xd881: mov rsi,qword ptr [rax]
0xd884: cmp rbp,rsi
0xd887: jnz 0xd8a9
0xd889: jmp 0xd8bc
0xd890: mov rbx,qword ptr [rbx + 0x8]
0xd894: mov rax,qword ptr [rbx + 0x8]
0xd898: test rax,rax
0xd89b: jz 0xd940
0xd8a1: mov rsi,qword ptr [rax]
0xd8a4: cmp rsi,rbp
0xd8a7: jz 0xd8bc
0xd8a9: mov rdi,rbp
0xd8ac: call qword ptr [r12 + 0x38]
0xd8b1: test al,al
0xd8b3: jz 0xd890
0xd8b5: mov rax,qword ptr [rbx + 0x8]
0xd8b9: mov rsi,qword ptr [rax]
0xd8bc: test r13b,r13b
0xd8bf: jz 0xd8de
0xd8c1: mov rdx,qword ptr [rax + 0x8]
0xd8c5: mov qword ptr [rbx + 0x8],rdx
0xd8c9: mov qword ptr [rax],0x0
0xd8d0: mov rdx,qword ptr [r12 + 0x48]
0xd8d5: mov qword ptr [rax + 0x8],rdx
0xd8d9: mov qword ptr [r12 + 0x48],rax
0xd8de: pop rbx
0xd8df: mov rax,rsi
0xd8e2: pop rbp
0xd8e3: pop r12
0xd8e5: pop r13
0xd8e7: pop r14
0xd8e9: ret 
0xd8f0: mov rsi,qword ptr [rbx]
0xd8f3: test r13b,r13b
0xd8f6: jz 0xd8de
0xd8f8: mov rax,qword ptr [rbx + 0x8]
0xd8fc: test rax,rax
0xd8ff: jz 0xd930
0xd901: movdqu xmm0,xmmword ptr [rax]
0xd905: movups xmmword ptr [rbx],xmm0
0xd908: mov qword ptr [rax],0x0
0xd90f: mov rdx,qword ptr [r12 + 0x48]
0xd914: mov qword ptr [rax + 0x8],rdx
0xd918: mov qword ptr [r12 + 0x48],rax
0xd91d: mov rax,rsi
0xd920: pop rbx
0xd921: pop rbp
0xd922: pop r12
0xd924: pop r13
0xd926: pop r14
0xd928: ret 
0xd930: mov qword ptr [rbx],0x0
0xd937: jmp 0xd8de
0xd940: xor esi,esi
0xd942: pop rbx
0xd943: mov rax,rsi
0xd946: pop rbp
0xd947: pop r12
0xd949: pop r13
0xd94b: pop r14
0xd94d: ret 
0xd950: mov rdx,qword ptr [rdi]
0xd953: lea rcx,[rip+0xc6c6]
0xd95a: mov eax,0x1
0xd95f: cmp rdx,rcx
0xd962: jz 0xd9c5
0xd964: movss xmm0,dword ptr [rdx + 0x8]
0xd969: ucomiss xmm0,dword ptr [rip+0xc6c4]
0xd970: jbe 0xd9c0
0xd972: movss xmm1,dword ptr [rip+0xc6be]
0xd97a: ucomiss xmm1,xmm0
0xd97d: jbe 0xd9c0
0xd97f: movss xmm1,dword ptr [rdx + 0xc]
0xd984: ucomiss xmm1,dword ptr [rip+0xc6b1]
0xd98b: jbe 0xd9c0
0xd98d: movss xmm1,dword ptr [rdx]
0xd991: ucomiss xmm1,dword ptr [rip+0xc6a8]
0xd998: jc 0xd9c0
0xd99a: addss xmm1,dword ptr [rip+0xc692]
0xd9a2: movss xmm2,dword ptr [rdx + 0x4]
0xd9a7: ucomiss xmm2,xmm1
0xd9aa: jbe 0xd9c0
0xd9ac: movss xmm3,dword ptr [rip+0xc690]
0xd9b4: ucomiss xmm3,xmm2
0xd9b7: jc 0xd9c0
0xd9b9: ucomiss xmm0,xmm1
0xd9bc: ja 0xd9c5
0xd9be: nop 
0xd9c0: mov qword ptr [rdi],rcx
0xd9c3: xor eax,eax
0xd9c5: ret 
0xd9d0: push r15
0xd9d2: push r14
0xd9d4: push r13
0xd9d6: push r12
0xd9d8: push rbp
0xd9d9: push rbx
0xd9da: sub rsp,0x8
0xd9de: mov r12,qword ptr [rsi]
0xd9e1: cmp r12,qword ptr [rsi + 0x8]
0xd9e5: jnc 0xdac8
0xd9eb: mov rbp,rdi
0xd9ee: mov r13,rsi
0xd9f1: mov r14d,edx
0xd9f4: nop dword ptr [rax]
0xd9f8: mov r15,qword ptr [r12]
0xd9fc: test r15,r15
0xd9ff: jz 0xdaba
0xda05: mov rbx,qword ptr [r12 + 0x8]
0xda0a: test rbx,rbx
0xda0d: jnz 0xda2c
0xda0f: jmp 0xda6b
0xda18: mov rcx,qword ptr [rax + 0x8]
0xda1c: test rdx,rdx
0xda1f: mov qword ptr [rbx + 0x8],rcx
0xda23: mov qword ptr [rax + 0x8],rbx
0xda27: mov rbx,rdx
0xda2a: jz 0xda67
0xda2c: mov r15,qword ptr [rbx]
0xda2f: mov rdi,rbp
0xda32: mov rsi,r15
0xda35: call 0xd800
0xda3a: cmp qword ptr [rax],0x0
0xda3e: mov rdx,qword ptr [rbx + 0x8]
0xda42: jnz 0xda18
0xda44: mov qword ptr [rax],r15
0xda47: add qword ptr [rbp + 0x18],0x1
0xda4c: test rdx,rdx
0xda4f: mov qword ptr [rbx],0x0
0xda56: mov rax,qword ptr [rbp + 0x48]
0xda5a: mov qword ptr [rbx + 0x8],rax
0xda5e: mov qword ptr [rbp + 0x48],rbx
0xda62: mov rbx,rdx
0xda65: jnz 0xda2c
0xda67: mov r15,qword ptr [r12]
0xda6b: test r14b,r14b
0xda6e: mov qword ptr [r12 + 0x8],0x0
0xda77: jnz 0xdaba
0xda79: mov rsi,r15
0xda7c: mov rdi,rbp
0xda7f: call 0xd800
0xda84: cmp qword ptr [rax],0x0
0xda88: mov rbx,rax
0xda8b: jz 0xdae0
0xda8d: mov rax,qword ptr [rbp + 0x48]
0xda91: test rax,rax
0xda94: jz 0xdaf0
0xda96: mov rdx,qword ptr [rax + 0x8]
0xda9a: mov qword ptr [rbp + 0x48],rdx
0xda9e: mov rdx,qword ptr [rbx + 0x8]
0xdaa2: mov qword ptr [rax],r15
0xdaa5: mov qword ptr [rax + 0x8],rdx
0xdaa9: mov qword ptr [rbx + 0x8],rax
0xdaad: mov qword ptr [r12],0x0
0xdab5: sub qword ptr [r13 + 0x18],0x1
0xdaba: add r12,0x10
0xdabe: cmp qword ptr [r13 + 0x8],r12
0xdac2: ja 0xd9f8
0xdac8: add rsp,0x8
0xdacc: mov eax,0x1
0xdad1: pop rbx
0xdad2: pop rbp
0xdad3: pop r12
0xdad5: pop r13
0xdad7: pop r14
0xdad9: pop r15
0xdadb: ret 
0xdae0: mov qword ptr [rax],r15
0xdae3: add qword ptr [rbp + 0x18],0x1
0xdae8: jmp 0xdaad
0xdaf0: mov edi,0x10
0xdaf5: call 0x3888
0xdafa: test rax,rax
0xdafd: jnz 0xda9e
0xdaff: add rsp,0x8
0xdb03: xor eax,eax
0xdb05: pop rbx
0xdb06: pop rbp
0xdb07: pop r12
0xdb09: pop r13
0xdb0b: pop r14
0xdb0d: pop r15
0xdb0f: ret 
0xdb10: mov rax,qword ptr [rdi + 0x10]
0xdb14: ret 
0xdb20: mov rax,qword ptr [rdi + 0x18]
0xdb24: ret 
0xdb40: mov rsi,qword ptr [rdi]
0xdb43: mov rdi,qword ptr [rdi + 0x8]
0xdb47: xor eax,eax
0xdb49: cmp rsi,rdi
0xdb4c: jnc 0xdb87
0xdb4e: nop 
0xdb50: cmp qword ptr [rsi],0x0
0xdb54: jz 0xdb7c
0xdb56: mov rdx,qword ptr [rsi + 0x8]
0xdb5a: mov ecx,0x1
0xdb5f: test rdx,rdx
0xdb62: jz 0xdb75
0xdb64: nop dword ptr [rax]
0xdb68: mov rdx,qword ptr [rdx + 0x8]
0xdb6c: add rcx,0x1
0xdb70: test rdx,rdx
0xdb73: jnz 0xdb68
0xdb75: cmp rax,rcx
0xdb78: cmovc rax,rcx
0xdb7c: add rsi,0x10
0xdb80: cmp rsi,rdi
0xdb83: jc 0xdb50
0xdb85: ret 
0xdb87: ret 
0xdb90: mov rcx,qword ptr [rdi]
0xdb93: mov r8,qword ptr [rdi + 0x8]
0xdb97: xor edx,edx
0xdb99: xor esi,esi
0xdb9b: cmp rcx,r8
0xdb9e: jnc 0xdbd6
0xdba0: cmp qword ptr [rcx],0x0
0xdba4: jz 0xdbcd
0xdba6: mov rax,qword ptr [rcx + 0x8]
0xdbaa: add rsi,0x1
0xdbae: add rdx,0x1
0xdbb2: test rax,rax
0xdbb5: jz 0xdbcd
0xdbb7: nop word ptr [rax + rax*0x1]
0xdbc0: mov rax,qword ptr [rax + 0x8]
0xdbc4: add rdx,0x1
0xdbc8: test rax,rax
0xdbcb: jnz 0xdbc0
0xdbcd: add rcx,0x10
0xdbd1: cmp rcx,r8
0xdbd4: jc 0xdba0
0xdbd6: xor eax,eax
0xdbd8: cmp qword ptr [rdi + 0x18],rsi
0xdbdc: jz 0xdbe0
0xdbde: ret 
0xdbe0: cmp qword ptr [rdi + 0x20],rdx
0xdbe4: setz al
0xdbe7: ret 
0xdbf0: push r13
0xdbf2: push r12
0xdbf4: mov r12,rsi
0xdbf7: push rbp
0xdbf8: push rbx
0xdbf9: xor ebx,ebx
0xdbfb: sub rsp,0x8
0xdbff: mov rsi,qword ptr [rdi]
0xdc02: mov rcx,qword ptr [rdi + 0x20]
0xdc06: mov rbp,qword ptr [rdi + 0x10]
0xdc0a: mov r13,qword ptr [rdi + 0x18]
0xdc0e: mov rdi,qword ptr [rdi + 0x8]
0xdc12: cmp rsi,rdi
0xdc15: jnc 0xdc55
0xdc17: nop word ptr [rax + rax*0x1]
0xdc20: cmp qword ptr [rsi],0x0
0xdc24: jz 0xdc4c
0xdc26: mov rax,qword ptr [rsi + 0x8]
0xdc2a: mov edx,0x1
0xdc2f: test rax,rax
0xdc32: jz 0xdc45
0xdc34: nop dword ptr [rax]
0xdc38: mov rax,qword ptr [rax + 0x8]
0xdc3c: add rdx,0x1
0xdc40: test rax,rax
0xdc43: jnz 0xdc38
0xdc45: cmp rbx,rdx
0xdc48: cmovc rbx,rdx
0xdc4c: add rsi,0x10
0xdc50: cmp rsi,rdi
0xdc53: jc 0xdc20
0xdc55: lea rdx,[rip+0xc34a]
0xdc5c: mov esi,0x1
0xdc61: mov rdi,r12
0xdc64: xor eax,eax
0xdc66: call 0x3800
0xdc6b: lea rdx,[rip+0xc34c]
0xdc72: xor eax,eax
0xdc74: mov rcx,rbp
0xdc77: mov esi,0x1
0xdc7c: mov rdi,r12
0xdc7f: call 0x3800
0xdc84: test r13,r13
0xdc87: js 0xdcf0
0xdc89: pxor xmm0,xmm0
0xdc8d: test rbp,rbp
0xdc90: cvtsi2sd xmm0,r13
0xdc95: mulsd xmm0,qword ptr [rip+0xc3bb]
0xdc9d: js 0xdd19
0xdc9f: pxor xmm1,xmm1
0xdca3: cvtsi2sd xmm1,rbp
0xdca8: divsd xmm0,xmm1
0xdcac: lea rdx,[rip+0xc33d]
0xdcb3: mov rcx,r13
0xdcb6: mov rdi,r12
0xdcb9: mov esi,0x1
0xdcbe: mov eax,0x1
0xdcc3: call 0x3800
0xdcc8: add rsp,0x8
0xdccc: mov rcx,rbx
0xdccf: mov rdi,r12
0xdcd2: pop rbx
0xdcd3: pop rbp
0xdcd4: pop r12
0xdcd6: pop r13
0xdcd8: lea rdx,[rip+0xc2f7]
0xdcdf: mov esi,0x1
0xdce4: xor eax,eax
0xdce6: jmp 0x3800
0xdcf0: mov rax,r13
0xdcf3: mov rdx,r13
0xdcf6: pxor xmm0,xmm0
0xdcfa: shr rax,1
0xdcfd: and edx,0x1
0xdd00: or rax,rdx
0xdd03: test rbp,rbp
0xdd06: cvtsi2sd xmm0,rax
0xdd0b: addsd xmm0,xmm0
0xdd0f: mulsd xmm0,qword ptr [rip+0xc341]
0xdd17: jns 0xdc9f
0xdd19: mov rax,rbp
0xdd1c: pxor xmm1,xmm1
0xdd20: shr rax,1
0xdd23: and ebp,0x1
0xdd26: or rax,rbp
0xdd29: cvtsi2sd xmm1,rax
0xdd2e: addsd xmm1,xmm1
0xdd32: jmp 0xdca8
0xdd40: push r12
0xdd42: push rbp
0xdd43: mov r12,rdi
0xdd46: push rbx
0xdd47: mov rbp,rsi
0xdd4a: call 0xd800
0xdd4f: mov rsi,qword ptr [rax]
0xdd52: test rsi,rsi
0xdd55: jz 0xdd7d
0xdd57: mov rbx,rax
0xdd5a: jmp 0xdd63
0xdd60: mov rsi,qword ptr [rbx]
0xdd63: cmp rsi,rbp
0xdd66: jz 0xdd7f
0xdd68: mov rdi,rbp
0xdd6b: call qword ptr [r12 + 0x38]
0xdd70: test al,al
0xdd72: jnz 0xdd90
0xdd74: mov rbx,qword ptr [rbx + 0x8]
0xdd78: test rbx,rbx
0xdd7b: jnz 0xdd60
0xdd7d: xor esi,esi
0xdd7f: pop rbx
0xdd80: mov rax,rsi
0xdd83: pop rbp
0xdd84: pop r12
0xdd86: ret 
0xdd90: mov rsi,qword ptr [rbx]
0xdd93: pop rbx
0xdd94: pop rbp
0xdd95: mov rax,rsi
0xdd98: pop r12
0xdd9a: ret 
0xdda0: cmp qword ptr [rdi + 0x20],0x0
0xdda5: jz 0xddd3
0xdda7: mov rdx,qword ptr [rdi]
0xddaa: mov rcx,qword ptr [rdi + 0x8]
0xddae: cmp rdx,rcx
0xddb1: jnc 0xddd8
0xddb3: mov rax,qword ptr [rdx]
0xddb6: test rax,rax
0xddb9: jnz 0xddd6
0xddbb: nop dword ptr [rax + rax*0x1]
0xddc0: add rdx,0x10
0xddc4: cmp rdx,rcx
0xddc7: jnc 0xddd8
0xddc9: mov rax,qword ptr [rdx]
0xddcc: test rax,rax
0xddcf: jz 0xddc0
0xddd1: ret 
0xddd3: xor eax,eax
0xddd5: ret 
0xddd6: ret 
0xddd8: sub rsp,0x8
0xdddc: call 0x3290
0xdde1: nop dword ptr [rax + rax*0x1]
0xdde6: nop word ptr cs:[rax + rax*0x1]
0xddf0: push rbp
0xddf1: push rbx
0xddf2: mov rbp,rdi
0xddf5: mov rbx,rsi
0xddf8: sub rsp,0x8
0xddfc: call 0xd800
0xde01: mov rdx,rax
0xde04: mov rcx,rax
0xde07: mov rax,qword ptr [rdx]
0xde0a: mov rdx,qword ptr [rdx + 0x8]
0xde0e: cmp rax,rbx
0xde11: jz 0xde29
0xde13: nop dword ptr [rax + rax*0x1]
0xde18: test rdx,rdx
0xde1b: jz 0xde2e
0xde1d: mov rax,qword ptr [rdx]
0xde20: mov rdx,qword ptr [rdx + 0x8]
0xde24: cmp rax,rbx
0xde27: jnz 0xde18
0xde29: test rdx,rdx
0xde2c: jnz 0xde58
0xde2e: mov rdx,qword ptr [rbp + 0x8]
0xde32: jmp 0xde40
0xde38: mov rax,qword ptr [rcx]
0xde3b: test rax,rax
0xde3e: jnz 0xde4b
0xde40: add rcx,0x10
0xde44: cmp rdx,rcx
0xde47: ja 0xde38
0xde49: xor eax,eax
0xde4b: add rsp,0x8
0xde4f: pop rbx
0xde50: pop rbp
0xde51: ret 
0xde58: mov rax,qword ptr [rdx]
0xde5b: add rsp,0x8
0xde5f: pop rbx
0xde60: pop rbp
0xde61: ret 
0xde70: mov r9,qword ptr [rdi]
0xde73: cmp qword ptr [rdi + 0x8],r9
0xde77: jbe 0xded2
0xde79: xor r8d,r8d
0xde7c: mov rcx,qword ptr [r9]
0xde7f: test rcx,rcx
0xde82: jz 0xdebd
0xde84: cmp rdx,r8
0xde87: jbe 0xdec7
0xde89: mov qword ptr [rsi + r8*0x8],rcx
0xde8d: mov rcx,qword ptr [r9 + 0x8]
0xde91: lea rax,[r8 + 0x1]
0xde95: test rcx,rcx
0xde98: jz 0xdeba
0xde9a: nop word ptr [rax + rax*0x1]
0xdea0: cmp rdx,rax
0xdea3: jz 0xded0
0xdea5: mov r8,qword ptr [rcx]
0xdea8: add rax,0x1
0xdeac: mov qword ptr [rsi + rax*0x8 - 0x8],r8
0xdeb1: mov rcx,qword ptr [rcx + 0x8]
0xdeb5: test rcx,rcx
0xdeb8: jnz 0xdea0
0xdeba: mov r8,rax
0xdebd: add r9,0x10
0xdec1: cmp qword ptr [rdi + 0x8],r9
0xdec5: ja 0xde7c
0xdec7: mov rax,r8
0xdeca: ret 
0xded0: ret 
0xded2: xor eax,eax
0xded4: ret 
0xdee0: push r15
0xdee2: push r14
0xdee4: push r13
0xdee6: push r12
0xdee8: push rbp
0xdee9: push rbx
0xdeea: sub rsp,0x8
0xdeee: mov r14,qword ptr [rdi]
0xdef1: cmp qword ptr [rdi + 0x8],r14
0xdef5: jbe 0xdf46
0xdef7: mov r13,rdx
0xdefa: mov r12,rsi
0xdefd: mov r15,rdi
0xdf00: xor ebp,ebp
0xdf02: mov rdi,qword ptr [r14]
0xdf05: test rdi,rdi
0xdf08: jz 0xdf2a
0xdf0a: mov rbx,r14
0xdf0d: jmp 0xdf13
0xdf10: mov rdi,qword ptr [rbx]
0xdf13: mov rsi,r13
0xdf16: call r12
0xdf19: test al,al
0xdf1b: jz 0xdf34
0xdf1d: mov rbx,qword ptr [rbx + 0x8]
0xdf21: add rbp,0x1
0xdf25: test rbx,rbx
0xdf28: jnz 0xdf10
0xdf2a: add r14,0x10
0xdf2e: cmp qword ptr [r15 + 0x8],r14
0xdf32: ja 0xdf02
0xdf34: add rsp,0x8
0xdf38: mov rax,rbp
0xdf3b: pop rbx
0xdf3c: pop rbp
0xdf3d: pop r12
0xdf3f: pop r13
0xdf41: pop r14
0xdf43: pop r15
0xdf45: ret 
0xdf46: xor ebp,ebp
0xdf48: jmp 0xdf34
0xdf50: movzx ecx,byte ptr [rdi]
0xdf53: xor edx,edx
0xdf55: test cl,cl
0xdf57: jz 0xdf7d
0xdf59: nop dword ptr [rax]
0xdf60: mov rax,rdx
0xdf63: add rdi,0x1
0xdf67: shl rax,0x5
0xdf6b: sub rax,rdx
0xdf6e: xor edx,edx
0xdf70: add rax,rcx
0xdf73: movzx ecx,byte ptr [rdi]
0xdf76: div rsi
0xdf79: test cl,cl
0xdf7b: jnz 0xdf60
0xdf7d: mov rax,rdx
0xdf80: ret 
0xdf90: mov rax,0x3f80000000000000
0xdf9a: mov byte ptr [rdi + 0x10],0x0
0xdf9e: mov qword ptr [rdi],rax
0xdfa1: mov rax,0x3fb4fdf43f4ccccd
0xdfab: mov qword ptr [rdi + 0x8],rax
0xdfaf: ret 
0xdfb0: push r15
0xdfb2: push r14
0xdfb4: lea rax,[rip+0xfffffffffffff825]
0xdfbb: push r13
0xdfbd: push r12
0xdfbf: mov r12,rdx
0xdfc2: push rbp
0xdfc3: push rbx
0xdfc4: mov r13,rcx
0xdfc7: mov rbp,rdi
0xdfca: mov edi,0x50
0xdfcf: mov r15,rsi
0xdfd2: sub rsp,0x8
0xdfd6: test rdx,rdx
0xdfd9: mov r14,r8
0xdfdc: cmovz r12,rax
0xdfe0: lea rax,[rip+0xfffffffffffff809]
0xdfe7: test rcx,rcx
0xdfea: cmovz r13,rax
0xdfee: call 0x3888
0xdff3: test rax,rax
0xdff6: mov rbx,rax
0xdff9: jz 0xe0aa
0xdfff: test r15,r15
0xe002: lea rdi,[rax + 0x28]
0xe006: jz 0xe0c0
0xe00c: mov qword ptr [rax + 0x28],r15
0xe010: call 0xd950
0xe015: test al,al
0xe017: jz 0xe0a0
0xe01d: cmp byte ptr [r15 + 0x10],0x0
0xe022: jz 0xe120
0xe028: mov rdi,rbp
0xe02b: call 0xd740
0xe030: mov edx,0x8
0xe035: mov rbp,rax
0xe038: xor ecx,ecx
0xe03a: mov rax,rdx
0xe03d: mul rbp
0xe040: jo 0xe15a
0xe046: test rax,rax
0xe049: js 0xe0a0
0xe04b: test rcx,rcx
0xe04e: jnz 0xe0a0
0xe050: test rbp,rbp
0xe053: mov qword ptr [rbx + 0x10],rbp
0xe057: jz 0xe0a0
0xe059: mov esi,0x10
0xe05e: mov rdi,rbp
0xe061: call 0x3580
0xe066: test rax,rax
0xe069: mov qword ptr [rbx],rax
0xe06c: jz 0xe0a0
0xe06e: shl rbp,0x4
0xe072: mov qword ptr [rbx + 0x18],0x0
0xe07a: mov qword ptr [rbx + 0x20],0x0
0xe082: add rbp,rax
0xe085: mov qword ptr [rbx + 0x30],r12
0xe089: mov qword ptr [rbx + 0x38],r13
0xe08d: mov qword ptr [rbx + 0x8],rbp
0xe091: mov qword ptr [rbx + 0x40],r14
0xe095: mov qword ptr [rbx + 0x48],0x0
0xe09d: jmp 0xe0aa
0xe0a0: mov rdi,rbx
0xe0a3: xor ebx,ebx
0xe0a5: call 0x3880
0xe0aa: add rsp,0x8
0xe0ae: mov rax,rbx
0xe0b1: pop rbx
0xe0b2: pop rbp
0xe0b3: pop r12
0xe0b5: pop r13
0xe0b7: pop r14
0xe0b9: pop r15
0xe0bb: ret 
0xe0c0: lea rax,[rip+0xbf59]
0xe0c7: mov qword ptr [rbx + 0x28],rax
0xe0cb: call 0xd950
0xe0d0: test al,al
0xe0d2: movss xmm1,dword ptr [rip+0xbf6e]
0xe0da: jz 0xe0a0
0xe0dc: test rbp,rbp
0xe0df: js 0xe12b
0xe0e1: pxor xmm0,xmm0
0xe0e5: cvtsi2ss xmm0,rbp
0xe0ea: divss xmm0,xmm1
0xe0ee: ucomiss xmm0,dword ptr [rip+0xbf57]
0xe0f5: jnc 0xe0a0
0xe0f7: ucomiss xmm0,dword ptr [rip+0xbf52]
0xe0fe: jc 0xe150
0xe100: subss xmm0,dword ptr [rip+0xbf48]
0xe108: mov rax,-0x8000000000000000
0xe112: cvttss2si rbp,xmm0
0xe117: xor rbp,rax
0xe11a: jmp 0xe028
0xe120: test rbp,rbp
0xe123: movss xmm1,dword ptr [r15 + 0x8]
0xe129: jns 0xe0e1
0xe12b: mov rax,rbp
0xe12e: pxor xmm0,xmm0
0xe132: shr rax,1
0xe135: and ebp,0x1
0xe138: or rax,rbp
0xe13b: cvtsi2ss xmm0,rax
0xe140: addss xmm0,xmm0
0xe144: jmp 0xe0ea
0xe150: cvttss2si rbp,xmm0
0xe155: jmp 0xe028
0xe15a: mov ecx,0x1
0xe15f: jmp 0xe046
0xe170: push r12
0xe172: push rbp
0xe173: mov rbp,rdi
0xe176: push rbx
0xe177: mov r12,qword ptr [rdi]
0xe17a: cmp r12,qword ptr [rdi + 0x8]
0xe17e: jnc 0xe1eb
0xe180: cmp qword ptr [r12],0x0
0xe185: jz 0xe1e1
0xe187: mov rbx,qword ptr [r12 + 0x8]
0xe18c: mov rax,qword ptr [rbp + 0x40]
0xe190: test rbx,rbx
0xe193: jz 0xe1c5
0xe195: nop dword ptr [rax]
0xe198: test rax,rax
0xe19b: jz 0xe1a6
0xe19d: mov rdi,qword ptr [rbx]
0xe1a0: call rax
0xe1a2: mov rax,qword ptr [rbp + 0x40]
0xe1a6: mov rdx,qword ptr [rbx + 0x8]
0xe1aa: mov rcx,qword ptr [rbp + 0x48]
0xe1ae: mov qword ptr [rbx],0x0
0xe1b5: test rdx,rdx
0xe1b8: mov qword ptr [rbx + 0x8],rcx
0xe1bc: mov qword ptr [rbp + 0x48],rbx
0xe1c0: mov rbx,rdx
0xe1c3: jnz 0xe198
0xe1c5: test rax,rax
0xe1c8: jz 0xe1d0
0xe1ca: mov rdi,qword ptr [r12]
0xe1ce: call rax
0xe1d0: mov qword ptr [r12],0x0
0xe1d8: mov qword ptr [r12 + 0x8],0x0
0xe1e1: add r12,0x10
0xe1e5: cmp qword ptr [rbp + 0x8],r12
0xe1e9: ja 0xe180
0xe1eb: mov qword ptr [rbp + 0x18],0x0
0xe1f3: mov qword ptr [rbp + 0x20],0x0
0xe1fb: pop rbx
0xe1fc: pop rbp
0xe1fd: pop r12
0xe1ff: ret 
0xe240: mov rdi,qword ptr [rbx]
0xe248: mov rbx,qword ptr [rbx + 0x8]
0xe24c: test rbx,rbx
0xe24f: jnz 0xe240
0xe251: mov rax,qword ptr [r12 + 0x8]
0xe2e0: push r12
0xe2e2: push rbp
0xe2e3: mov rbp,rdi
0xe2e6: push rbx
0xe2e7: sub rsp,0x60
0xe2eb: mov r12,qword ptr [rdi + 0x28]
0xe2ef: mov rax,qword ptr fs:[rip+0xffffffffffff1d30]
0xe2f8: mov qword ptr [rsp + 0x58],rax
0xe2fd: xor eax,eax
0xe2ff: cmp byte ptr [r12 + 0x10],0x0
0xe305: jnz 0xe358
0xe307: test rsi,rsi
0xe30a: js 0xe488
0xe310: pxor xmm0,xmm0
0xe314: cvtsi2ss xmm0,rsi
0xe319: divss xmm0,dword ptr [r12 + 0x8]
0xe320: ucomiss xmm0,dword ptr [rip+0xbd25]
0xe327: jnc 0xe460
0xe32d: ucomiss xmm0,dword ptr [rip+0xbd1c]
0xe334: jc 0xe4b0
0xe33a: subss xmm0,dword ptr [rip+0xbd0e]
0xe342: mov rax,-0x8000000000000000
0xe34c: cvttss2si rsi,xmm0
0xe351: xor rsi,rax
0xe354: nop dword ptr [rax]
0xe358: mov rdi,rsi
0xe35b: call 0xd740
0xe360: mov edx,0x8
0xe365: mov rbx,rax
0xe368: xor ecx,ecx
0xe36a: mov rax,rdx
0xe36d: mul rbx
0xe370: jo 0xe50f
0xe376: test rax,rax
0xe379: mov eax,0x1
0xe37e: cmovs rcx,rax
0xe382: test rbx,rbx
0xe385: jz 0xe460
0xe38b: and ecx,0x1
0xe38e: jnz 0xe460
0xe394: cmp qword ptr [rbp + 0x10],rbx
0xe398: jz 0xe4c0
0xe39e: mov esi,0x10
0xe3a3: mov rdi,rbx
0xe3a6: call 0x3580
0xe3ab: test rax,rax
0xe3ae: mov qword ptr [rsp],rax
0xe3b2: jz 0xe460
0xe3b8: mov qword ptr [rsp + 0x10],rbx
0xe3bd: shl rbx,0x4
0xe3c1: mov qword ptr [rsp + 0x28],r12
0xe3c6: add rbx,rax
0xe3c9: mov rax,qword ptr [rbp + 0x30]
0xe3cd: mov r12,rsp
0xe3d0: xor edx,edx
0xe3d2: mov rsi,rbp
0xe3d5: mov rdi,r12
0xe3d8: mov qword ptr [rsp + 0x8],rbx
0xe3dd: mov qword ptr [rsp + 0x18],0x0
0xe3e6: mov qword ptr [rsp + 0x30],rax
0xe3eb: mov rax,qword ptr [rbp + 0x38]
0xe3ef: mov qword ptr [rsp + 0x20],0x0
0xe3f8: mov qword ptr [rsp + 0x38],rax
0xe3fd: mov rax,qword ptr [rbp + 0x40]
0xe401: mov qword ptr [rsp + 0x40],rax
0xe406: mov rax,qword ptr [rbp + 0x48]
0xe40a: mov qword ptr [rsp + 0x48],rax
0xe40f: call 0xd9d0
0xe414: test al,al
0xe416: mov ebx,eax
0xe418: jnz 0xe4d0
0xe41e: mov rax,qword ptr [rsp + 0x48]
0xe423: mov edx,0x1
0xe428: mov rsi,r12
0xe42b: mov rdi,rbp
0xe42e: mov qword ptr [rbp + 0x48],rax
0xe432: call 0xd9d0
0xe437: test al,al
0xe439: jz 0xe519
0xe43f: xor edx,edx
0xe441: mov rsi,r12
0xe444: mov rdi,rbp
0xe447: call 0xd9d0
0xe44c: test al,al
0xe44e: jz 0xe519
0xe454: mov rdi,qword ptr [rsp]
0xe458: call 0x3880
0xe45d: jmp 0xe462
0xe460: xor ebx,ebx
0xe462: mov rcx,qword ptr [rsp + 0x58]
0xe467: xor rcx,qword ptr fs:[rip+0xffffffffffff1bb8]
0xe470: mov eax,ebx
0xe472: jnz 0xe50a
0xe478: add rsp,0x60
0xe47c: pop rbx
0xe47d: pop rbp
0xe47e: pop r12
0xe480: ret 
0xe488: mov rax,rsi
0xe48b: pxor xmm0,xmm0
0xe48f: shr rax,1
0xe492: and esi,0x1
0xe495: or rax,rsi
0xe498: cvtsi2ss xmm0,rax
0xe49d: addss xmm0,xmm0
0xe4a1: jmp 0xe319
0xe4b0: cvttss2si rsi,xmm0
0xe4b5: jmp 0xe358
0xe4c0: mov ebx,0x1
0xe4c5: jmp 0xe462
0xe4d0: mov rdi,qword ptr [rbp]
0xe4d4: call 0x3880
0xe4d9: mov rax,qword ptr [rsp]
0xe4dd: mov qword ptr [rbp],rax
0xe4e1: mov rax,qword ptr [rsp + 0x8]
0xe4e6: mov qword ptr [rbp + 0x8],rax
0xe4ea: mov rax,qword ptr [rsp + 0x10]
0xe4ef: mov qword ptr [rbp + 0x10],rax
0xe4f3: mov rax,qword ptr [rsp + 0x18]
0xe4f8: mov qword ptr [rbp + 0x18],rax
0xe4fc: mov rax,qword ptr [rsp + 0x48]
0xe501: mov qword ptr [rbp + 0x48],rax
0xe505: jmp 0xe462
0xe50a: call 0x3420
0xe50f: mov ecx,0x1
0xe514: jmp 0xe376
0xe519: call 0x3290
0xe51e: nop 
0xe559: test rax,rax
0xe55c: mov rdx,rax
0xe55f: jz 0xe590
0xe561: xor eax,eax
0xe563: test r13,r13
0xe566: jz 0xe56c
0xe568: mov qword ptr [r13],rdx
0xe56c: mov rcx,qword ptr [rsp + 0x8]
0xe571: xor rcx,qword ptr fs:[rip+0xffffffffffff1aae]
0xe57a: jnz 0xe79f
0xe580: add rsp,0x18
0xe584: pop rbx
0xe585: pop rbp
0xe586: pop r12
0xe588: pop r13
0xe58a: ret 
0xe590: mov rax,qword ptr [rbx + 0x18]
0xe594: test rax,rax
0xe597: js 0xe610
0xe599: pxor xmm1,xmm1
0xe59d: mov rdx,qword ptr [rbx + 0x28]
0xe5a1: cvtsi2ss xmm1,rax
0xe5a6: mov rax,qword ptr [rbx + 0x10]
0xe5aa: test rax,rax
0xe5ad: js 0xe63a
0xe5b3: pxor xmm0,xmm0
0xe5b7: cvtsi2ss xmm0,rax
0xe5bc: mulss xmm0,dword ptr [rdx + 0x8]
0xe5c1: ucomiss xmm1,xmm0
0xe5c4: ja 0xe660
0xe5ca: mov r12,qword ptr [rsp]
0xe5ce: cmp qword ptr [r12],0x0
0xe5d3: jz 0xe708
0xe5d9: mov rax,qword ptr [rbx + 0x48]
0xe5dd: test rax,rax
0xe5e0: jz 0xe720
0xe5e6: mov rdx,qword ptr [rax + 0x8]
0xe5ea: mov qword ptr [rbx + 0x48],rdx
0xe5ee: mov rdx,qword ptr [r12 + 0x8]
0xe5f3: mov qword ptr [rax],rbp
0xe5f6: mov qword ptr [rax + 0x8],rdx
0xe5fa: mov qword ptr [r12 + 0x8],rax
0xe5ff: mov eax,0x1
0xe604: add qword ptr [rbx + 0x20],0x1
0xe609: jmp 0xe56c
0xe610: mov rdx,rax
0xe613: pxor xmm1,xmm1
0xe617: and eax,0x1
0xe61a: shr rdx,1
0xe61d: or rdx,rax
0xe620: mov rax,qword ptr [rbx + 0x10]
0xe624: cvtsi2ss xmm1,rdx
0xe629: mov rdx,qword ptr [rbx + 0x28]
0xe62d: test rax,rax
0xe630: addss xmm1,xmm1
0xe634: jns 0xe5b3
0xe63a: mov rcx,rax
0xe63d: pxor xmm0,xmm0
0xe641: shr rcx,1
0xe644: and eax,0x1
0xe647: or rcx,rax
0xe64a: cvtsi2ss xmm0,rcx
0xe64f: addss xmm0,xmm0
0xe653: jmp 0xe5bc
0xe660: lea rdi,[rbx + 0x28]
0xe664: call 0xd950
0xe669: mov rax,qword ptr [rbx + 0x10]
0xe66d: mov rdx,qword ptr [rbx + 0x28]
0xe671: test rax,rax
0xe674: movss xmm2,dword ptr [rdx + 0x8]
0xe679: js 0xe740
0xe67f: pxor xmm0,xmm0
0xe683: cvtsi2ss xmm0,rax
0xe688: mov rax,qword ptr [rbx + 0x18]
0xe68c: test rax,rax
0xe68f: js 0xe760
0xe695: pxor xmm1,xmm1
0xe699: cvtsi2ss xmm1,rax
0xe69e: movaps xmm3,xmm2
0xe6a1: mulss xmm3,xmm0
0xe6a5: ucomiss xmm1,xmm3
0xe6a8: jbe 0xe5ca
0xe6ae: cmp byte ptr [rdx + 0x10],0x0
0xe6b2: mulss xmm0,dword ptr [rdx + 0xc]
0xe6b7: jnz 0xe6bd
0xe6b9: mulss xmm0,xmm2
0xe6bd: ucomiss xmm0,dword ptr [rip+0xb988]
0xe6c4: jnc 0xe733
0xe6c6: ucomiss xmm0,dword ptr [rip+0xb983]
0xe6cd: jnc 0xe780
0xe6d3: cvttss2si rsi,xmm0
0xe6d8: mov rdi,rbx
0xe6db: call 0xe2e0
0xe6e0: test al,al
0xe6e2: jz 0xe733
0xe6e4: xor ecx,ecx
0xe6e6: mov rdx,r12
0xe6e9: mov rsi,rbp
0xe6ec: mov rdi,rbx
0xe6ef: call 0xd830
0xe6f4: test rax,rax
0xe6f7: jz 0xe5ca
0xe702: nop word ptr [rax + rax*0x1]
0xe708: mov qword ptr [r12],rbp
0xe70c: mov eax,0x1
0xe711: add qword ptr [rbx + 0x20],0x1
0xe716: add qword ptr [rbx + 0x18],0x1
0xe71b: jmp 0xe56c
0xe720: mov edi,0x10
0xe725: call 0x3888
0xe72a: test rax,rax
0xe72d: jnz 0xe5ee
0xe733: mov eax,0xffffffff
0xe738: jmp 0xe56c
0xe740: mov rcx,rax
0xe743: pxor xmm0,xmm0
0xe747: shr rcx,1
0xe74a: and eax,0x1
0xe74d: or rcx,rax
0xe750: cvtsi2ss xmm0,rcx
0xe755: addss xmm0,xmm0
0xe759: jmp 0xe688
0xe760: mov rcx,rax
0xe763: pxor xmm1,xmm1
0xe767: shr rcx,1
0xe76a: and eax,0x1
0xe76d: or rcx,rax
0xe770: cvtsi2ss xmm1,rcx
0xe775: addss xmm1,xmm1
0xe779: jmp 0xe69e
0xe780: subss xmm0,dword ptr [rip+0xb8c8]
0xe788: mov rax,-0x8000000000000000
0xe792: cvttss2si rsi,xmm0
0xe797: xor rsi,rax
0xe79a: jmp 0xe6d8
0xe79f: call 0x3420
0xe7a4: nop 
0xe7a6: nop word ptr cs:[rax + rax*0x1]
0xe7d0: cmp eax,-0x1
0xe7d3: jz 0xe800
0xe7d5: test eax,eax
0xe7d7: jnz 0xe7dd
0xe7d9: mov rbx,qword ptr [rsp]
0xe7dd: mov rcx,qword ptr [rsp + 0x8]
0xe7e2: xor rcx,qword ptr fs:[rip+0xffffffffffff183d]
0xe7eb: mov rax,rbx
0xe7ee: jnz 0xe804
0xe7f0: add rsp,0x10
0xe7f4: pop rbx
0xe7f5: ret 
0xe800: xor ebx,ebx
0xe802: jmp 0xe7dd
0xe804: call 0x3420
0xe809: nop dword ptr [rax]
0xe838: test rax,rax
0xe83b: mov rbp,rax
0xe83e: jz 0xe84f
0xe840: mov rax,qword ptr [rsp]
0xe844: sub qword ptr [rbx + 0x20],0x1
0xe849: cmp qword ptr [rax],0x0
0xe84d: jz 0xe870
0xe84f: mov rcx,qword ptr [rsp + 0x8]
0xe854: xor rcx,qword ptr fs:[rip+0xffffffffffff17cb]
0xe85d: mov rax,rbp
0xe860: jnz 0xea0e
0xe866: add rsp,0x10
0xe86a: pop rbx
0xe86b: pop rbp
0xe86c: pop r12
0xe86e: ret 
0xe870: mov rax,qword ptr [rbx + 0x18]
0xe874: sub rax,0x1
0xe878: test rax,rax
0xe87b: mov qword ptr [rbx + 0x18],rax
0xe87f: js 0xe980
0xe885: pxor xmm0,xmm0
0xe889: cvtsi2ss xmm0,rax
0xe88e: mov rax,qword ptr [rbx + 0x10]
0xe892: mov rdx,qword ptr [rbx + 0x28]
0xe896: test rax,rax
0xe899: js 0xe960
0xe89f: pxor xmm1,xmm1
0xe8a3: cvtsi2ss xmm1,rax
0xe8a8: mulss xmm1,dword ptr [rdx]
0xe8ac: ucomiss xmm1,xmm0
0xe8af: jbe 0xe84f
0xe8b1: lea rdi,[rbx + 0x28]
0xe8b5: call 0xd950
0xe8ba: mov rax,qword ptr [rbx + 0x10]
0xe8be: mov rdx,qword ptr [rbx + 0x28]
0xe8c2: test rax,rax
0xe8c5: js 0xe9f0
0xe8cb: pxor xmm0,xmm0
0xe8cf: cvtsi2ss xmm0,rax
0xe8d4: mov rax,qword ptr [rbx + 0x18]
0xe8d8: test rax,rax
0xe8db: js 0xe9d0
0xe8e1: pxor xmm1,xmm1
0xe8e5: cvtsi2ss xmm1,rax
0xe8ea: movss xmm2,dword ptr [rdx]
0xe8ee: mulss xmm2,xmm0
0xe8f2: ucomiss xmm2,xmm1
0xe8f5: jbe 0xe84f
0xe8fb: cmp byte ptr [rdx + 0x10],0x0
0xe8ff: mulss xmm0,dword ptr [rdx + 0x4]
0xe904: jz 0xe9c0
0xe90a: ucomiss xmm0,dword ptr [rip+0xb73f]
0xe911: jnc 0xe9a0
0xe917: cvttss2si rsi,xmm0
0xe91c: mov rdi,rbx
0xe91f: call 0xe2e0
0xe924: test al,al
0xe926: jnz 0xe84f
0xe92c: mov rdi,qword ptr [rbx + 0x48]
0xe930: test rdi,rdi
0xe933: jz 0xe949
0xe935: nop dword ptr [rax]
0xe938: mov r12,qword ptr [rdi + 0x8]
0xe93c: call 0x3880
0xe941: test r12,r12
0xe944: mov rdi,r12
0xe947: jnz 0xe938
0xe949: mov qword ptr [rbx + 0x48],0x0
0xe951: jmp 0xe84f
0xe960: mov rcx,rax
0xe963: pxor xmm1,xmm1
0xe967: shr rcx,1
0xe96a: and eax,0x1
0xe96d: or rcx,rax
0xe970: cvtsi2ss xmm1,rcx
0xe975: addss xmm1,xmm1
0xe979: jmp 0xe8a8
0xe980: mov rdx,rax
0xe983: pxor xmm0,xmm0
0xe987: shr rdx,1
0xe98a: and eax,0x1
0xe98d: or rdx,rax
0xe990: cvtsi2ss xmm0,rdx
0xe995: addss xmm0,xmm0
0xe999: jmp 0xe88e
0xe9a0: subss xmm0,dword ptr [rip+0xb6a8]
0xe9a8: mov rax,-0x8000000000000000
0xe9b2: cvttss2si rsi,xmm0
0xe9b7: xor rsi,rax
0xe9ba: jmp 0xe91c
0xe9c0: mulss xmm0,dword ptr [rdx + 0x8]
0xe9c5: jmp 0xe90a
0xe9d0: mov rcx,rax
0xe9d3: pxor xmm1,xmm1
0xe9d7: shr rcx,1
0xe9da: and eax,0x1
0xe9dd: or rcx,rax
0xe9e0: cvtsi2ss xmm1,rcx
0xe9e5: addss xmm1,xmm1
0xe9e9: jmp 0xe8ea
0xe9f0: mov rcx,rax
0xe9f3: pxor xmm0,xmm0
0xe9f7: shr rcx,1
0xe9fa: and eax,0x1
0xe9fd: or rcx,rax
0xea00: cvtsi2ss xmm0,rcx
0xea05: addss xmm0,xmm0
0xea09: jmp 0xe8d4
0xea0e: call 0x3420
0xea13: nop word ptr cs:[rax + rax*0x1]
0xea1d: nop dword ptr [rax]
0xea20: push rbp
0xea21: push rbx
0xea22: mov rbp,rdi
0xea25: mov rbx,rsi
0xea28: sub rsp,0x8
0xea2c: mov rdi,qword ptr [rdi]
0xea2f: call 0x15d20
0xea34: xor rax,qword ptr [rbp + 0x8]
0xea38: xor edx,edx
0xea3a: add rsp,0x8
0xea3e: div rbx
0xea41: pop rbx
0xea42: pop rbp
0xea43: mov rax,rdx
0xea46: ret 
0xea50: mov rax,qword ptr [rdi + 0x8]
0xea54: xor edx,edx
0xea56: div rsi
0xea59: mov rax,rdx
0xea5c: ret 
0xea60: xor eax,eax
0xea62: mov rdx,qword ptr [rsi + 0x8]
0xea66: cmp qword ptr [rdi + 0x8],rdx
0xea6a: jz 0xea70
0xea6c: ret 
0xea70: mov rcx,qword ptr [rsi + 0x10]
0xea74: cmp qword ptr [rdi + 0x10],rcx
0xea78: jnz 0xea6c
0xea7a: sub rsp,0x8
0xea7e: mov rsi,qword ptr [rsi]
0xea81: mov rdi,qword ptr [rdi]
0xea84: call 0x13f50
0xea89: add rsp,0x8
0xea8d: ret 
0xea90: xor eax,eax
0xea92: mov rdx,qword ptr [rsi + 0x8]
0xea96: cmp qword ptr [rdi + 0x8],rdx
0xea9a: jz 0xeaa0
0xea9c: ret 
0xeaa0: mov rcx,qword ptr [rsi + 0x10]
0xeaa4: cmp qword ptr [rdi + 0x10],rcx
0xeaa8: jnz 0xea9c
0xeaaa: sub rsp,0x8
0xeaae: mov rsi,qword ptr [rsi]
0xeab1: mov rdi,qword ptr [rdi]
0xeab4: call 0x3590
0xeab9: test eax,eax
0xeabb: setz al
0xeabe: add rsp,0x8
0xeac2: ret 
0xead0: push rbx
0xead1: mov rbx,rdi
0xead4: mov rdi,qword ptr [rdi]
0xead7: call 0x3880
0xeadc: mov rdi,rbx
0xeadf: pop rbx
0xeae0: jmp 0x3880
0xf57b: call 0x3420
0xf7b1: call 0x3420
0xf7b6: nop word ptr cs:[rax + rax*0x1]
0xf860: push r12
0xf862: push rbp
0xf863: mov r12,rdi
0xf866: push rbx
0xf867: mov rbx,qword ptr [rip+0x211b8a]
0xf86e: test rbx,rbx
0xf871: jz 0xf8b0
0xf873: movzx ebp,byte ptr [rdi]
0xf876: jmp 0xf889
0xf880: mov rbx,qword ptr [rbx + 0x8]
0xf884: test rbx,rbx
0xf887: jz 0xf8b0
0xf889: cmp byte ptr [rbx + 0x10],bpl
0xf88d: jnz 0xf880
0xf88f: lea rdi,[rbx + 0x10]
0xf893: mov rsi,r12
0xf896: call 0x3590
0xf89b: test eax,eax
0xf89d: jnz 0xf880
0xf89f: mov rax,rbx
0xf8a2: pop rbx
0xf8a3: pop rbp
0xf8a4: pop r12
0xf8a6: ret 
0xf8b0: mov rbx,qword ptr [rip+0x211b39]
0xf8b7: test rbx,rbx
0xf8ba: jz 0xf8f0
0xf8bc: movzx ebp,byte ptr [r12]
0xf8c1: jmp 0xf8d1
0xf8c8: mov rbx,qword ptr [rbx + 0x8]
0xf8cc: test rbx,rbx
0xf8cf: jz 0xf8f0
0xf8d1: cmp byte ptr [rbx + 0x10],bpl
0xf8d5: jnz 0xf8c8
0xf8d7: lea rdi,[rbx + 0x10]
0xf8db: mov rsi,r12
0xf8de: call 0x3590
0xf8e3: test eax,eax
0xf8e5: jnz 0xf8c8
0xf8e7: pop rbx
0xf8e8: xor eax,eax
0xf8ea: pop rbp
0xf8eb: pop r12
0xf8ed: ret 
0xf8f0: mov rdi,r12
0xf8f3: call 0x35c0
0xf8f8: mov rdi,r12
0xf8fb: mov rbp,rax
0xf8fe: call 0x3400
0xf903: lea rdi,[rax + 0x18]
0xf907: and rdi,-0x8
0xf90b: call 0x14590
0xf910: lea rdi,[rax + 0x10]
0xf914: mov rsi,r12
0xf917: mov rbx,rax
0xf91a: call 0x32e0
0xf91f: test rbp,rbp
0xf922: jz 0xf940
0xf924: mov eax,dword ptr [rbp + 0x10]
0xf927: mov dword ptr [rbx],eax
0xf929: mov rax,qword ptr [rip+0x211ac8]
0xf930: mov qword ptr [rip+0x211ac1],rbx
0xf937: mov qword ptr [rbx + 0x8],rax
0xf93b: jmp 0xf89f
0xf940: mov rax,qword ptr [rip+0x211aa9]
0xf947: mov qword ptr [rip+0x211aa2],rbx
0xf94e: mov qword ptr [rbx + 0x8],rax
0xf952: xor eax,eax
0xf954: jmp 0xf8a2
0xfa00: push r12
0xfa02: push rbp
0xfa03: mov r12,rdi
0xfa06: push rbx
0xfa07: mov rbx,qword ptr [rip+0x2119da]
0xfa0e: test rbx,rbx
0xfa11: jz 0xfa50
0xfa13: movzx ebp,byte ptr [rdi]
0xfa16: jmp 0xfa29
0xfa20: mov rbx,qword ptr [rbx + 0x8]
0xfa24: test rbx,rbx
0xfa27: jz 0xfa50
0xfa29: cmp byte ptr [rbx + 0x10],bpl
0xfa2d: jnz 0xfa20
0xfa2f: lea rdi,[rbx + 0x10]
0xfa33: mov rsi,r12
0xfa36: call 0x3590
0xfa3b: test eax,eax
0xfa3d: jnz 0xfa20
0xfa3f: mov rax,rbx
0xfa42: pop rbx
0xfa43: pop rbp
0xfa44: pop r12
0xfa46: ret 
0xfa50: mov rbx,qword ptr [rip+0x211989]
0xfa57: test rbx,rbx
0xfa5a: jz 0xfa90
0xfa5c: movzx ebp,byte ptr [r12]
0xfa61: jmp 0xfa71
0xfa68: mov rbx,qword ptr [rbx + 0x8]
0xfa6c: test rbx,rbx
0xfa6f: jz 0xfa90
0xfa71: cmp byte ptr [rbx + 0x10],bpl
0xfa75: jnz 0xfa68
0xfa77: lea rdi,[rbx + 0x10]
0xfa7b: mov rsi,r12
0xfa7e: call 0x3590
0xfa83: test eax,eax
0xfa85: jnz 0xfa68
0xfa87: pop rbx
0xfa88: xor eax,eax
0xfa8a: pop rbp
0xfa8b: pop r12
0xfa8d: ret 
0xfa90: mov rdi,r12
0xfa93: call 0x3600
0xfa98: mov rdi,r12
0xfa9b: mov rbp,rax
0xfa9e: call 0x3400
0xfaa3: lea rdi,[rax + 0x18]
0xfaa7: and rdi,-0x8
0xfaab: call 0x14590
0xfab0: lea rdi,[rax + 0x10]
0xfab4: mov rsi,r12
0xfab7: mov rbx,rax
0xfaba: call 0x32e0
0xfabf: test rbp,rbp
0xfac2: jz 0xfae0
0xfac4: mov eax,dword ptr [rbp + 0x10]
0xfac7: mov dword ptr [rbx],eax
0xfac9: mov rax,qword ptr [rip+0x211918]
0xfad0: mov qword ptr [rip+0x211911],rbx
0xfad7: mov qword ptr [rbx + 0x8],rax
0xfadb: jmp 0xfa3f
0xfae0: mov rax,qword ptr [rip+0x2118f9]
0xfae7: mov qword ptr [rip+0x2118f2],rbx
0xfaee: mov qword ptr [rbx + 0x8],rax
0xfaf2: xor eax,eax
0xfaf4: jmp 0xfa42
0xfc7c: mov r12,r15
0xfc7f: xor edx,edx
0xfd88: xor ebp,ebp
0xfd8a: jmp 0xfc8d
0xfe8a: mov rsi,qword ptr [rsp]
0xfe8e: xor edx,edx
0xfe90: xor edi,edi
0xfe92: call 0x37b0
0xfe97: add rax,0x1
0xfe9b: mov qword ptr [rsp + 0x20],rax
0xffc0: push r15
0xffc2: push r14
0xffc4: mov r15,rdi
0xffc7: push r13
0xffc9: push r12
0xffcb: xor r12d,r12d
0xffce: push rbp
0xffcf: push rbx
0xffd0: mov rbp,rsi
0xffd3: sub rsp,0x18
0xffd7: mov r13,qword ptr [rsi]
0xffda: mov dword ptr [rsp + 0x8],edx
0xffde: mov dword ptr [rsp + 0xc],ecx
0xffe2: mov rax,r13
0xffe5: nop dword ptr [rax]
0xffe8: lea rbx,[rax + 0x1]
0xffec: mov rdi,r12
0xffef: mov rsi,rbx
0xfff2: call 0x36e0
0xfff7: test rax,rax
0xfffa: mov r14,rax
0xfffd: jz 0x10040
0xffff: mov r9d,dword ptr [rsp + 0xc]
0x10004: mov r8d,dword ptr [rsp + 0x8]
0x10009: mov rcx,rbp
0x1000c: mov qword ptr [rbp],r13
0x10010: mov rdx,rbx
0x10013: mov rsi,rax
0x10016: mov rdi,r15
0x10019: call 0xfbf0
0x1001e: cmp rax,-0x1
0x10022: jz 0x10050
0x10024: cmp rbx,rax
0x10027: mov r12,r14
0x1002a: jbe 0xffe8
0x1002c: add rsp,0x18
0x10030: mov rax,r14
0x10033: pop rbx
0x10034: pop rbp
0x10035: pop r12
0x10037: pop r13
0x10039: pop r14
0x1003b: pop r15
0x1003d: ret 
0x10040: mov rdi,r12
0x10043: call 0x3880
0x10048: jmp 0x1002c
0x10050: mov rdi,r14
0x10053: xor r14d,r14d
0x10056: call 0x3880
0x1005b: jmp 0x1002c
0x10183: nop dword ptr [rax + rax*0x1]
0x10188: mov ebp,0xffffffff
0x1021a: call 0x3420
0x1021f: nop 
0x10284: test eax,eax
0x10286: jle 0x10290
0x10288: mov qword ptr [r13],r12
0x1028c: mov qword ptr [r13 + 0x8],rbp
0x102d1: cmp r14,0x1
0x102d5: jnz 0x103a0
0x102db: mov r14,qword ptr [r13]
0x102df: mov qword ptr [r15],r14
0x102e2: mov rax,qword ptr [rsp + 0x28]
0x102e7: mov r15,qword ptr [rsp + 0x18]
0x102ec: xor r12d,r12d
0x102ef: mov qword ptr [rsp + 0x8],0x0
0x102f8: mov rbp,qword ptr [rax]
0x102fb: nop dword ptr [rax + rax*0x1]
0x10300: mov rsi,rbp
0x10303: mov rdi,r14
0x10306: add r12,0x1
0x1030a: call rbx
0x1030c: test eax,eax
0x1030e: jle 0x10334
0x10310: add r15,0x1
0x10314: cmp qword ptr [rsp],r15
0x10318: mov qword ptr [r13 + r12*0x8 - 0x8],rbp
0x1031d: jz 0x10360
0x1031f: mov rbp,qword ptr [r13 + r15*0x8]
0x10324: mov rdi,r14
0x10327: add r12,0x1
0x1032b: mov rsi,rbp
0x1032e: call rbx
0x10330: test eax,eax
0x10332: jg 0x10310
0x10334: add qword ptr [rsp + 0x8],0x1
0x1033a: mov qword ptr [r13 + r12*0x8 - 0x8],r14
0x1033f: mov rax,qword ptr [rsp + 0x8]
0x10344: cmp qword ptr [rsp + 0x18],rax
0x10349: jz 0x10290
0x1034f: mov rdx,qword ptr [rsp + 0x10]
0x10354: mov r14,qword ptr [rdx + rax*0x8]
0x10358: jmp 0x10300
0x10360: mov rax,qword ptr [rsp + 0x8]
0x10365: lea rdi,[r13 + r12*0x8]
0x1036a: mov r12,qword ptr [rsp + 0x18]
0x1036f: mov rcx,qword ptr [rsp + 0x10]
0x10374: add rsp,0x38
0x10378: pop rbx
0x10379: sub r12,rax
0x1037c: pop rbp
0x1037d: lea rdx,[r12*0x8]
0x10385: lea rsi,[rcx + rax*0x8]
0x10389: pop r12
0x1038b: pop r13
0x1038d: pop r14
0x1038f: pop r15
0x10391: jmp 0x35f0
0x103a0: mov r14,qword ptr [rsp]
0x103a4: mov r12,qword ptr [rsp + 0x10]
0x103a9: mov rcx,rbx
0x103ac: mov rsi,qword ptr [rsp + 0x18]
0x103b1: shr r14,0x2
0x103b5: mov rdx,r12
0x103b8: lea r15,[r13 + r14*0x8]
0x103bd: sub rsi,r14
0x103c0: mov qword ptr [rsp + 0x20],r14
0x103c5: mov rbp,r14
0x103c8: mov rdi,r15
0x103cb: call 0x10250
0x103d0: mov rsi,r14
0x103d3: mov rcx,rbx
0x103d6: mov rdx,r12
0x103d9: mov rdi,r13
0x103dc: call 0x10250
0x103e1: mov r14,qword ptr [r13]
0x103e5: mov r15,qword ptr [r15]
0x103e8: mov qword ptr [rsp + 0x8],0x0
0x103f1: nop dword ptr [rax]
0x103f8: mov rsi,r15
0x103fb: mov rdi,r14
0x103fe: add r12,0x8
0x10402: call rbx
0x10404: test eax,eax
0x10406: jle 0x1042d
0x10408: add rbp,0x1
0x1040c: cmp qword ptr [rsp + 0x18],rbp
0x10411: mov qword ptr [r12 - 0x8],r15
0x10416: jz 0x1045f
0x10418: mov r15,qword ptr [r13 + rbp*0x8]
0x1041d: mov rdi,r14
0x10420: add r12,0x8
0x10424: mov rsi,r15
0x10427: call rbx
0x10429: test eax,eax
0x1042b: jg 0x10408
0x1042d: add qword ptr [rsp + 0x8],0x1
0x10433: mov qword ptr [r12 - 0x8],r14
0x10438: mov rax,qword ptr [rsp + 0x8]
0x1043d: cmp qword ptr [rsp + 0x20],rax
0x10442: jz 0x10450
0x10444: mov r14,qword ptr [r13 + rax*0x8]
0x10449: jmp 0x103f8
0x10450: mov rax,qword ptr [rsp + 0x18]
0x10455: mov qword ptr [rsp + 0x8],rbp
0x1045a: mov qword ptr [rsp + 0x20],rax
0x1045f: mov rax,qword ptr [rsp + 0x8]
0x10464: mov rdx,qword ptr [rsp + 0x20]
0x10469: mov rdi,r12
0x1046c: sub rdx,rax
0x1046f: lea rsi,[r13 + rax*0x8]
0x10474: shl rdx,0x3
0x10478: call 0x35f0
0x1047d: mov rax,qword ptr [rsp + 0x10]
0x10482: mov r14,qword ptr [rax]
0x10485: jmp 0x102e2
0x11fd5: call 0x3420
0x12049: call 0x3420
0x1204e: nop 
0x120ef: nop 
0x133d3: call 0x3420
0x13414: nop 
0x13416: nop word ptr cs:[rax + rax*0x1]
0x135cb: nop dword ptr [rax + rax*0x1]
0x13690: lea rax,[rip+0x20de89]
0x13697: test rdi,rdi
0x1369a: cmovz rdi,rax
0x1369e: mov eax,dword ptr [rdi + 0x4]
0x136a1: mov dword ptr [rdi + 0x4],esi
0x136a4: ret 
0x136b0: lea rax,[rip+0x20de69]
0x136b7: test rdi,rdi
0x136ba: cmovz rdi,rax
0x136be: test rsi,rsi
0x136c1: mov dword ptr [rdi],0xa
0x136c7: jz 0x136d7
0x136c9: test rdx,rdx
0x136cc: jz 0x136d7
0x136ce: mov qword ptr [rdi + 0x28],rsi
0x136d2: mov qword ptr [rdi + 0x30],rdx
0x136d6: ret 
0x136d7: sub rsp,0x8
0x136db: call 0x3290
0x13760: push r15
0x13762: push r14
0x13764: lea rax,[rip+0x20ddb5]
0x1376b: push r13
0x1376d: push r12
0x1376f: mov r12,rdx
0x13772: push rbp
0x13773: push rbx
0x13774: mov rbx,rcx
0x13777: mov r14,rdi
0x1377a: mov r15,rsi
0x1377d: sub rsp,0x38
0x13781: test rcx,rcx
0x13784: cmovz rbx,rax
0x13788: xor ebp,ebp
0x1378a: call 0x32a0
0x1378f: test r12,r12
0x13792: mov r13,rax
0x13795: mov eax,dword ptr [rax]
0x13797: setz bpl
0x1379b: or ebp,dword ptr [rbx + 0x4]
0x1379e: lea r10,[rbx + 0x8]
0x137a2: sub rsp,0x8
0x137a6: mov r8d,dword ptr [rbx]
0x137a9: mov rcx,r15
0x137ac: mov dword ptr [rsp + 0x14],eax
0x137b0: push qword ptr [rbx + 0x30]
0x137b3: mov rdx,r14
0x137b6: push qword ptr [rbx + 0x28]
0x137b9: push r10
0x137bb: xor esi,esi
0x137bd: mov r9d,ebp
0x137c0: xor edi,edi
0x137c2: mov qword ptr [rsp + 0x40],r10
0x137c7: call 0x121e0
0x137cc: lea rsi,[rax + 0x1]
0x137d0: mov qword ptr [rsp + 0x48],rax
0x137d5: add rsp,0x20
0x137d9: mov rdi,rsi
0x137dc: mov qword ptr [rsp + 0x18],rsi
0x137e1: call 0x14590
0x137e6: mov qword ptr [rsp + 0x10],rax
0x137eb: sub rsp,0x8
0x137ef: push qword ptr [rbx + 0x30]
0x137f2: push qword ptr [rbx + 0x28]
0x137f5: mov r10,qword ptr [rsp + 0x38]
0x137fa: mov r9d,ebp
0x137fd: mov r8d,dword ptr [rbx]
0x13800: mov rcx,r15
0x13803: mov rdx,r14
0x13806: mov rdi,rax
0x13809: push r10
0x1380b: mov rsi,qword ptr [rsp + 0x38]
0x13810: call 0x121e0
0x13815: mov eax,dword ptr [rsp + 0x2c]
0x13819: add rsp,0x20
0x1381d: test r12,r12
0x13820: mov dword ptr [r13],eax
0x13824: jz 0x1382f
0x13826: mov r11,qword ptr [rsp + 0x28]
0x1382b: mov qword ptr [r12],r11
0x1382f: mov rax,qword ptr [rsp + 0x10]
0x13834: add rsp,0x38
0x13838: pop rbx
0x13839: pop rbp
0x1383a: pop r12
0x1383c: pop r13
0x1383e: pop r14
0x13840: pop r15
0x13842: ret 
0x13850: mov rcx,rdx
0x13853: xor edx,edx
0x13855: jmp 0x13760
0x13860: mov eax,dword ptr [rip+0x20c9d2]
0x13866: push r12
0x13868: mov r12,qword ptr [rip+0x20c9d1]
0x1386f: push rbp
0x13870: push rbx
0x13871: cmp eax,0x1
0x13874: jle 0x138a1
0x13876: sub eax,0x2
0x13879: lea rbx,[r12 + 0x18]
0x1387e: shl rax,0x4
0x13882: lea rbp,[r12 + rax*0x1 + 0x28]
0x13887: nop word ptr [rax + rax*0x1]
0x13890: mov rdi,qword ptr [rbx]
0x13893: add rbx,0x10
0x13897: call 0x3880
0x1389c: cmp rbx,rbp
0x1389f: jnz 0x13890
0x138a1: mov rdi,qword ptr [r12 + 0x8]
0x138a6: lea rbx,[rip+0x20db73]
0x138ad: cmp rdi,rbx
0x138b0: jz 0x138c9
0x138b2: call 0x3880
0x138b7: mov qword ptr [rip+0x20c98e],0x100
0x138c2: mov qword ptr [rip+0x20c98f],rbx
0x138c9: lea rbx,[rip+0x20c980]
0x138d0: cmp r12,rbx
0x138d3: jz 0x138e4
0x138d5: mov rdi,r12
0x138d8: call 0x3880
0x138dd: mov qword ptr [rip+0x20c95c],rbx
0x138e4: pop rbx
0x138e5: mov dword ptr [rip+0x20c949],0x1
0x138ef: pop rbp
0x138f0: pop r12
0x138f2: ret 
0x13900: lea rcx,[rip+0x20dc19]
0x13907: mov rdx,-0x1
0x1390e: jmp 0x13420
0x13920: lea rcx,[rip+0x20dbf9]
0x13927: jmp 0x13420
0x13930: lea rcx,[rip+0x20dbe9]
0x13937: mov rsi,rdi
0x1393a: mov rdx,-0x1
0x13941: xor edi,edi
0x13943: jmp 0x13420
0x13950: lea rcx,[rip+0x20dbc9]
0x13957: mov rdx,rsi
0x1395a: mov rsi,rdi
0x1395d: xor edi,edi
0x1395f: jmp 0x13420
0x139f9: call 0x3420
0x139fe: nop 
0x13a00: sub rsp,0x48
0x13a04: mov rax,rdx
0x13a07: mov rdx,rcx
0x13a0a: mov rcx,qword ptr fs:[rip+0xfffffffffffec615]
0x13a13: mov qword ptr [rsp + 0x38],rcx
0x13a18: xor ecx,ecx
0x13a1a: cmp esi,0xa
0x13a1d: jz 0x13a80
0x13a1f: mov dword ptr [rsp],esi
0x13a22: mov rcx,rsp
0x13a25: mov rsi,rax
0x13a28: mov qword ptr [rsp + 0x4],0x0
0x13a31: mov qword ptr [rsp + 0xc],0x0
0x13a3a: mov qword ptr [rsp + 0x14],0x0
0x13a43: mov qword ptr [rsp + 0x1c],0x0
0x13a4c: mov qword ptr [rsp + 0x24],0x0
0x13a55: mov qword ptr [rsp + 0x2c],0x0
0x13a5e: mov dword ptr [rsp + 0x34],0x0
0x13a66: call 0x13420
0x13a6b: mov rdx,qword ptr [rsp + 0x38]
0x13a70: xor rdx,qword ptr fs:[rip+0xfffffffffffec5af]
0x13a79: jnz 0x13a85
0x13a7b: add rsp,0x48
0x13a7f: ret 
0x13a80: call 0x3290
0x13a85: call 0x3420
0x13a8a: nop word ptr [rax + rax*0x1]
0x13aa0: mov rcx,rdx
0x13aa3: mov rdx,rsi
0x13aa6: mov esi,edi
0x13aa8: xor edi,edi
0x13aaa: jmp 0x13a00
0x13ab0: sub rsp,0x48
0x13ab4: mov ecx,edx
0x13ab6: mov rax,qword ptr fs:[rip+0xfffffffffffec569]
0x13abf: mov qword ptr [rsp + 0x38],rax
0x13ac4: xor eax,eax
0x13ac6: mov rax,qword ptr [rip+0x20da83]
0x13acd: mov r8,rsp
0x13ad0: and ecx,0x1f
0x13ad3: movdqa xmm0,[rip+0x20da45]
0x13adb: mov qword ptr [rsp + 0x30],rax
0x13ae0: mov eax,edx
0x13ae2: movaps xmmword ptr [rsp],xmm0
0x13ae6: shr al,0x5
0x13ae9: movzx eax,al
0x13aec: lea r9,[r8 + rax*0x4 + 0x8]
0x13af1: movdqa xmm0,[rip+0x20da37]
0x13af9: movaps xmmword ptr [rsp + 0x10],xmm0
0x13afe: movdqa xmm0,[rip+0x20da3a]
0x13b06: movaps xmmword ptr [rsp + 0x20],xmm0
0x13b0b: mov edx,dword ptr [r9]
0x13b0e: mov eax,edx
0x13b10: shr eax,cl
0x13b12: not eax
0x13b14: and eax,0x1
0x13b17: shl eax,cl
0x13b19: mov rcx,r8
0x13b1c: xor eax,edx
0x13b1e: mov rdx,rsi
0x13b21: mov rsi,rdi
0x13b24: mov dword ptr [r9],eax
0x13b27: xor edi,edi
0x13b29: call 0x13420
0x13b2e: mov rsi,qword ptr [rsp + 0x38]
0x13b33: xor rsi,qword ptr fs:[rip+0xfffffffffffec4ec]
0x13b3c: jnz 0x13b43
0x13b3e: add rsp,0x48
0x13b42: ret 
0x13b43: call 0x3420
0x13b48: nop dword ptr [rax + rax*0x1]
0x13b50: movsx edx,sil
0x13b54: mov rsi,-0x1
0x13b5b: jmp 0x13ab0
0x13b60: mov edx,0x3a
0x13b65: mov rsi,-0x1
0x13b6c: jmp 0x13ab0
0x13b80: mov edx,0x3a
0x13b85: jmp 0x13ab0
0x13c14: call 0x3290
0x13c19: call 0x3420
0x13c1e: nop 
0x13c20: sub rsp,0x48
0x13c24: mov r9,rcx
0x13c27: mov rcx,qword ptr [rip+0x20d922]
0x13c2e: movdqa xmm0,[rip+0x20d8ea]
0x13c36: mov rax,qword ptr fs:[rip+0xfffffffffffec3e9]
0x13c3f: mov qword ptr [rsp + 0x38],rax
0x13c44: xor eax,eax
0x13c46: movaps xmmword ptr [rsp],xmm0
0x13c4a: test rsi,rsi
0x13c4d: mov qword ptr [rsp + 0x30],rcx
0x13c52: mov dword ptr [rsp],0xa
0x13c59: movdqa xmm0,[rip+0x20d8cf]
0x13c61: movaps xmmword ptr [rsp + 0x10],xmm0
0x13c66: movdqa xmm0,[rip+0x20d8d2]
0x13c6e: movaps xmmword ptr [rsp + 0x20],xmm0
0x13c73: jz 0x13ca7
0x13c75: test rdx,rdx
0x13c78: jz 0x13ca7
0x13c7a: mov qword ptr [rsp + 0x28],rsi
0x13c7f: mov qword ptr [rsp + 0x30],rdx
0x13c84: mov rcx,rsp
0x13c87: mov rdx,r8
0x13c8a: mov rsi,r9
0x13c8d: call 0x13420
0x13c92: mov rdi,qword ptr [rsp + 0x38]
0x13c97: xor rdi,qword ptr fs:[rip+0xfffffffffffec388]
0x13ca0: jnz 0x13cac
0x13ca2: add rsp,0x48
0x13ca6: ret 
0x13ca7: call 0x3290
0x13cac: call 0x3420
0x13cb1: nop dword ptr [rax + rax*0x1]
0x13cb6: nop word ptr cs:[rax + rax*0x1]
0x13cc0: mov r8,-0x1
0x13cc7: jmp 0x13c20
0x13cd0: mov rcx,rdx
0x13cd3: mov r8,-0x1
0x13cda: mov rdx,rsi
0x13cdd: mov rsi,rdi
0x13ce0: xor edi,edi
0x13ce2: jmp 0x13c20
0x13cf0: mov r8,rcx
0x13cf3: mov rcx,rdx
0x13cf6: mov rdx,rsi
0x13cf9: mov rsi,rdi
0x13cfc: xor edi,edi
0x13cfe: jmp 0x13c20
0x13d10: lea rcx,[rip+0x20c4e9]
0x13d17: jmp 0x13420
0x13d20: lea rcx,[rip+0x20c4d9]
0x13d27: mov rdx,rsi
0x13d2a: mov rsi,rdi
0x13d2d: xor edi,edi
0x13d2f: jmp 0x13420
0x13d80: push r13
0x13d82: push r12
0x13d84: mov r13d,edi
0x13d87: push rbp
0x13d88: push rbx
0x13d89: mov rdi,rsi
0x13d8c: mov ebp,edx
0x13d8e: mov r12,rcx
0x13d91: sub rsp,0x138
0x13d98: mov rax,qword ptr fs:[rip+0xfffffffffffec287]
0x13da1: mov qword ptr [0x128 + rsp],rax
0x13da9: xor eax,eax
0x13dab: call 0x15d00
0x13db0: mov rcx,rsp
0x13db3: mov r8d,0x100
0x13db9: mov rdx,rax
0x13dbc: mov esi,r13d
0x13dbf: mov edi,0x1
0x13dc4: mov rbx,rax
0x13dc7: call 0x3470
0x13dcc: test eax,eax
0x13dce: jnz 0x13e80
0x13dd4: mov rdi,rbx
0x13dd7: call 0x3880
0x13ddc: mov rdi,r12
0x13ddf: call 0x15d00
0x13de4: lea rcx,[0x90 + rsp]
0x13dec: mov r8d,0x100
0x13df2: mov rdx,rax
0x13df5: mov esi,ebp
0x13df7: mov edi,0x1
0x13dfc: mov rbx,rax
0x13dff: call 0x3470
0x13e04: test eax,eax
0x13e06: jnz 0x13e58
0x13e08: xor ebp,ebp
0x13e0a: mov rax,qword ptr [0x98 + rsp]
0x13e12: cmp qword ptr [rsp + 0x8],rax
0x13e17: jnz 0x13e29
0x13e19: mov rax,qword ptr [0x90 + rsp]
0x13e21: cmp qword ptr [rsp],rax
0x13e25: setz bpl
0x13e29: mov rdi,rbx
0x13e2c: call 0x3880
0x13e31: mov rdx,qword ptr [0x128 + rsp]
0x13e39: xor rdx,qword ptr fs:[rip+0xfffffffffffec1e6]
0x13e42: mov eax,ebp
0x13e44: jnz 0x13ea2
0x13e46: add rsp,0x138
0x13e4d: pop rbx
0x13e4e: pop rbp
0x13e4f: pop r12
0x13e51: pop r13
0x13e53: ret 
0x13e58: call 0x32a0
0x13e5d: mov esi,dword ptr [rax]
0x13e5f: lea rdx,[rip+0x6126]
0x13e66: mov rcx,rbx
0x13e69: mov edi,0x1
0x13e6e: xor eax,eax
0x13e70: call 0x3760
0x13e75: jmp 0x13e08
0x13e80: call 0x32a0
0x13e85: mov esi,dword ptr [rax]
0x13e87: lea rdx,[rip+0x60fe]
0x13e8e: mov rcx,rbx
0x13e91: mov edi,0x1
0x13e96: xor eax,eax
0x13e98: call 0x3760
0x13e9d: jmp 0x13dd4
0x13ea2: call 0x3420
0x13ea7: nop word ptr [rax + rax*0x1]
0x13eb0: push r15
0x13eb2: push r14
0x13eb4: mov r15d,edx
0x13eb7: push r13
0x13eb9: push r12
0x13ebb: push rbp
0x13ebc: push rbx
0x13ebd: mov rbp,rcx
0x13ec0: mov rbx,rsi
0x13ec3: sub rsp,0x18
0x13ec7: mov dword ptr [rsp + 0xc],edi
0x13ecb: mov rdi,rsi
0x13ece: call 0xcd10
0x13ed3: mov rdi,rbp
0x13ed6: mov r12,rax
0x13ed9: call 0xcd10
0x13ede: mov rdi,r12
0x13ee1: mov r13,rax
0x13ee4: call 0xcd70
0x13ee9: mov rdi,r13
0x13eec: mov r14,rax
0x13eef: call 0xcd70
0x13ef4: cmp r14,rax
0x13ef7: jz 0x13f10
0x13ef9: add rsp,0x18
0x13efd: xor eax,eax
0x13eff: pop rbx
0x13f00: pop rbp
0x13f01: pop r12
0x13f03: pop r13
0x13f05: pop r14
0x13f07: pop r15
0x13f09: ret 
0x13f10: mov rdx,r14
0x13f13: mov rsi,r13
0x13f16: mov rdi,r12
0x13f19: call 0x3550
0x13f1e: test eax,eax
0x13f20: jnz 0x13ef9
0x13f22: mov edi,dword ptr [rsp + 0xc]
0x13f26: add rsp,0x18
0x13f2a: mov rcx,rbp
0x13f2d: mov edx,r15d
0x13f30: mov rsi,rbx
0x13f33: pop rbx
0x13f34: pop rbp
0x13f35: pop r12
0x13f37: pop r13
0x13f39: pop r14
0x13f3b: pop r15
0x13f3d: jmp 0x13d80
0x13f50: mov edx,0xffffff9c
0x13f55: mov rcx,rsi
0x13f58: mov rsi,rdi
0x13f5b: mov edi,edx
0x13f5d: jmp 0x13eb0
0x14390: xor r9d,r9d
0x14393: cmp qword ptr [r8],0x0
0x14397: jz 0x143ab
0x14399: nop dword ptr [rax]
0x143a0: add r9,0x1
0x143a4: cmp qword ptr [r8 + r9*0x8],0x0
0x143a9: jnz 0x143a0
0x143ab: jmp 0x13f70
0x143b0: sub rsp,0x68
0x143b4: mov r10,r8
0x143b7: xor r9d,r9d
0x143ba: mov rax,qword ptr fs:[rip+0xfffffffffffebc65]
0x143c3: mov qword ptr [rsp + 0x58],rax
0x143c8: xor eax,eax
0x143ca: mov r8,rsp
0x143cd: nop dword ptr [rax]
0x143d0: mov eax,dword ptr [r10]
0x143d3: cmp eax,0x2f
0x143d6: ja 0x1441a
0x143d8: mov r11d,eax
0x143db: add r11,qword ptr [r10 + 0x10]
0x143df: add eax,0x8
0x143e2: mov dword ptr [r10],eax
0x143e5: mov rax,qword ptr [r11]
0x143e8: test rax,rax
0x143eb: mov qword ptr [r8 + r9*0x8],rax
0x143ef: jz 0x143fb
0x143f1: add r9,0x1
0x143f5: cmp r9,0xa
0x143f9: jnz 0x143d0
0x143fb: call 0x13f70
0x14400: mov rax,qword ptr [rsp + 0x58]
0x14405: xor rax,qword ptr fs:[rip+0xfffffffffffebc1a]
0x1440e: jnz 0x14415
0x14410: add rsp,0x68
0x14414: ret 
0x14415: call 0x3420
0x1441a: mov r11,qword ptr [r10 + 0x8]
0x1441e: lea rax,[r11 + 0x8]
0x14422: mov qword ptr [r10 + 0x8],rax
0x14426: jmp 0x143e5
0x144f0: call 0x3420
0x144fc: mov rax,rbx
0x144ff: add rbx,0x8
0x14503: jmp 0x144b6
0x14510: push rbx
0x14511: lea rsi,[rip+0x632a]
0x14518: mov edx,0x5
0x1451d: xor edi,edi
0x1451f: call 0x33e0
0x14524: lea rdx,[rip+0x632c]
0x1452b: mov rsi,rax
0x1452e: mov edi,0x1
0x14533: xor eax,eax
0x14535: call 0x3710
0x1453a: lea rsi,[rip+0x632c]
0x14541: mov edx,0x5
0x14546: xor edi,edi
0x14548: call 0x33e0
0x1454d: lea rcx,[rip+0x5714]
0x14554: lea rdx,[rip+0x347b]
0x1455b: mov rsi,rax
0x1455e: mov edi,0x1
0x14563: xor eax,eax
0x14565: call 0x3710
0x1456a: mov rbx,qword ptr [rip+0x20bd17]
0x14571: lea rsi,[rip+0x6528]
0x14578: xor edi,edi
0x1457a: mov edx,0x5
0x1457f: call 0x33e0
0x14584: mov rsi,rbx
0x14587: mov rdi,rax
0x1458a: pop rbx
0x1458b: jmp 0x3570
0x145aa: nop word ptr [rax + rax*0x1]
0x145b0: mov rax,rdi
0x145b3: mul rsi
0x145b6: mov rdi,rax
0x145b9: seto al
0x145bc: test rdi,rdi
0x145bf: js 0x145cb
0x145c1: movzx eax,al
0x145c4: test rax,rax
0x145c7: jnz 0x145cb
0x145c9: jmp 0x14590
0x145cb: sub rsp,0x8
0x145cf: call 0x147e0
0x145d4: nop 
0x145d6: nop word ptr cs:[rax + rax*0x1]
0x145e0: jmp 0x14590
0x14626: nop word ptr cs:[rax + rax*0x1]
0x14630: mov rax,rsi
0x14633: mul rdx
0x14636: mov rsi,rax
0x14639: seto al
0x1463c: test rsi,rsi
0x1463f: js 0x1464b
0x14641: movzx eax,al
0x14644: test rax,rax
0x14647: jnz 0x1464b
0x14649: jmp 0x145f0
0x1464b: sub rsp,0x8
0x1464f: call 0x147e0
0x14654: nop 
0x14656: nop word ptr cs:[rax + rax*0x1]
0x14660: test rdi,rdi
0x14663: mov r9,rdx
0x14666: mov rcx,qword ptr [rsi]
0x14669: jz 0x146a0
0x1466b: xor edx,edx
0x1466d: mov rax,0x5555555555555554
0x14677: div r9
0x1467a: cmp rax,rcx
0x1467d: jbe 0x146bb
0x1467f: mov rax,rcx
0x14682: shr rax,1
0x14685: lea rcx,[rax + rcx*0x1 + 0x1]
0x1468a: mov qword ptr [rsi],rcx
0x1468d: imul rcx,r9
0x14691: mov rsi,rcx
0x14694: jmp 0x145f0
0x146a0: test rcx,rcx
0x146a3: jz 0x146c8
0x146a5: mov rax,rcx
0x146a8: mul r9
0x146ab: seto dl
0x146ae: test rax,rax
0x146b1: movzx edx,dl
0x146b4: js 0x146bb
0x146b6: test rdx,rdx
0x146b9: jz 0x1468a
0x146bb: sub rsp,0x8
0x146bf: call 0x147e0
0x146c4: nop dword ptr [rax]
0x146c8: xor edx,edx
0x146ca: mov eax,0x80
0x146cf: xor r8d,r8d
0x146d2: div r9
0x146d5: test rax,rax
0x146d8: setz r8b
0x146dc: lea rcx,[r8 + rax*0x1]
0x146e0: jmp 0x146a5
0x14731: sub rsp,0x8
0x14735: call 0x147e0
0x1473a: nop word ptr [rax + rax*0x1]
0x14740: push rbx
0x14741: mov rbx,rdi
0x14744: call 0x14590
0x14749: mov rdx,rbx
0x1474c: xor esi,esi
0x1474e: mov rdi,rax
0x14751: pop rbx
0x14752: jmp 0x3500
0x14760: mov rax,rdi
0x14763: sub rsp,0x8
0x14767: mul rsi
0x1476a: seto dl
0x1476d: test rax,rax
0x14770: js 0x14789
0x14772: movzx edx,dl
0x14775: test rdx,rdx
0x14778: jnz 0x14789
0x1477a: call 0x3580
0x1477f: test rax,rax
0x14782: jz 0x14789
0x14784: add rsp,0x8
0x14788: ret 
0x14789: call 0x147e0
0x1478e: nop 
0x14810: call 0x3290
0x14815: nop word ptr cs:[rax + rax*0x1]
0x1481f: nop 
0x148c0: mov rbp,qword ptr [rsp]
0x1491b: call 0x3420
0x14920: sub rsp,0x10
0x14924: push r9
0x14926: mov r9,r8
0x14929: mov r8,rcx
0x1492c: mov rcx,rdx
0x1492f: mov rdx,rsi
0x14932: mov esi,0xa
0x14937: call 0x14820
0x1493c: add rsp,0x18
0x14940: ret 
0x1497f: nop 
0x14a4c: call 0x3420
0x14a51: nop word ptr cs:[rax + rax*0x1]
0x14a5b: nop dword ptr [rax + rax*0x1]
0x14b04: cmp eax,0x22
0x14b07: mov ebp,0x1
0x14b0c: jnz 0x14b38
0x14b13: movzx r12d,byte ptr [rcx]
0x14b17: test r12b,r12b
0x14b1a: jnz 0x14b97
0x14b70: movzx r12d,byte ptr [rbp]
0x14b75: test r12b,r12b
0x14b78: jz 0x14b38
0x14b7a: movsx esi,r12b
0x14b7e: mov rdi,r13
0x14b81: xor ebp,ebp
0x14b83: call 0x3450
0x14b88: test rax,rax
0x14b8b: mov ebx,0x1
0x14b90: mov rcx,qword ptr [rsp + 0x8]
0x14b95: jz 0x14b38
0x14b97: movsx esi,r12b
0x14b9b: mov rdi,r13
0x14b9e: mov qword ptr [rsp + 0x8],rcx
0x14ba3: call 0x3450
0x14ba8: test rax,rax
0x14bab: mov rcx,qword ptr [rsp + 0x8]
0x14bb0: jz 0x14c7c
0x14bb6: lea eax,[r12 - 0x45]
0x14bbb: cmp al,0x2f
0x14bbd: ja 0x14c10
0x14bbf: mov rdx,0x814400308945
0x14bc9: bt rdx,rax
0x14bcd: jnc 0x14c10
0x14bcf: mov esi,0x30
0x14bd4: mov rdi,r13
0x14bd7: mov qword ptr [rsp + 0x8],rcx
0x14bdc: call 0x3450
0x14be1: test rax,rax
0x14be4: mov rcx,qword ptr [rsp + 0x8]
0x14be9: jz 0x14c10
0x14beb: movzx eax,byte ptr [rcx + 0x1]
0x14bef: cmp al,0x44
0x14bf1: jz 0x14bff
0x14bf3: cmp al,0x69
0x14bf5: jz 0x14dc8
0x14bfb: cmp al,0x42
0x14bfd: jnz 0x14c10
0x14bff: mov edi,0x2
0x14c04: mov esi,0x3e8
0x14c09: jmp 0x14c1a
0x14c10: mov edi,0x1
0x14c15: mov esi,0x400
0x14c1a: sub r12d,0x42
0x14c1e: cmp r12b,0x35
0x14c22: ja 0x14c7c
0x14c24: lea rdx,[rip+0x5f7d]
0x14c2b: movzx r12d,r12b
0x14c2f: movsxd rax,dword ptr [rdx + r12*0x4]
0x14c33: add rax,rdx
0x14c36: jmp rax
0x14c38: mov rax,rbx
0x14c3b: mul rsi
0x14c3e: jo 0x14e31
0x14c44: xor r8d,r8d
0x14c47: mul rsi
0x14c4a: jo 0x14e22
0x14c50: mov rbx,rax
0x14c53: or ebp,r8d
0x14c56: nop word ptr cs:[rax + rax*0x1]
0x14c60: movsxd rdi,edi
0x14c63: mov eax,ebp
0x14c65: add rcx,rdi
0x14c68: or eax,0x2
0x14c6b: mov qword ptr [r15],rcx
0x14c6e: cmp byte ptr [rcx],0x0
0x14c71: mov qword ptr [r14],rbx
0x14c74: cmovnz ebp,eax
0x14c77: jmp 0x14b3d
0x14c7c: mov qword ptr [r14],rbx
0x14c7f: or ebp,0x2
0x14c82: jmp 0x14b3d
0x14c87: mov edx,0x2
0x14c8c: mov rax,rdx
0x14c8f: mul rbx
0x14c92: jo 0x14d2e
0x14c98: add rbx,rbx
0x14c9b: jmp 0x14c60
0x14c9d: mov edx,0x200
0x14ca2: mov rax,rdx
0x14ca5: mul rbx
0x14ca8: jo 0x14d2e
0x14cae: shl rbx,0x9
0x14cb2: jmp 0x14c60
0x14cb4: mov r8d,0x7
0x14cba: xor r9d,r9d
0x14cbd: nop dword ptr [rax]
0x14cc0: mov rax,rbx
0x14cc3: mul rsi
0x14cc6: mov rbx,rax
0x14cc9: jo 0x14e5e
0x14ccf: sub r8d,0x1
0x14cd3: jnz 0x14cc0
0x14cd5: or ebp,r9d
0x14cd8: jmp 0x14c60
0x14cda: mov r8d,0x8
0x14ce0: xor r9d,r9d
0x14ce3: nop dword ptr [rax + rax*0x1]
0x14ce8: mov rax,rbx
0x14ceb: mul rsi
0x14cee: mov rbx,rax
0x14cf1: jo 0x14e40
0x14cf7: sub r8d,0x1
0x14cfb: jnz 0x14ce8
0x14cfd: jmp 0x14cd5
0x14cff: mov r8d,0x4
0x14d05: xor r9d,r9d
0x14d08: mov rax,rbx
0x14d0b: mul rsi
0x14d0e: mov rbx,rax
0x14d11: jo 0x14e13
0x14d17: sub r8d,0x1
0x14d1b: jnz 0x14d08
0x14d1d: jmp 0x14cd5
0x14d1f: mov rax,rbx
0x14d22: mul rsi
0x14d25: mov rbx,rax
0x14d28: jno 0x14c60
0x14d2e: mov ebp,0x1
0x14d33: or rbx,-0x1
0x14d37: jmp 0x14c60
0x14d40: mov r8d,0x5
0x14d46: xor r9d,r9d
0x14d49: mov rax,rbx
0x14d4c: mul rsi
0x14d4f: mov rbx,rax
0x14d52: jo 0x14e4f
0x14d58: sub r8d,0x1
0x14d5c: jnz 0x14d49
0x14d5e: jmp 0x14cd5
0x14d63: mov r8d,0x6
0x14d69: xor r9d,r9d
0x14d6c: mov rax,rbx
0x14d6f: mul rsi
0x14d72: mov rbx,rax
0x14d75: jo 0x14e04
0x14d7b: sub r8d,0x1
0x14d7f: jnz 0x14d6c
0x14d81: jmp 0x14cd5
0x14d86: mov edx,0x400
0x14d8b: mov rax,rdx
0x14d8e: mul rbx
0x14d91: jo 0x14d2e
0x14d93: shl rbx,0xa
0x14d97: jmp 0x14c60
0x14d9c: mov rax,rbx
0x14d9f: mul rsi
0x14da2: jo 0x14e6d
0x14da8: xor r8d,r8d
0x14dab: mul rsi
0x14dae: jno 0x14c47
0x14db4: mov r8d,0x1
0x14dba: or rax,-0x1
0x14dbe: jmp 0x14c47
0x14dc8: xor edi,edi
0x14dca: cmp byte ptr [rcx + 0x2],0x42
0x14dce: mov esi,0x400
0x14dd3: setz dil
0x14dd7: lea edi,[rdi + rdi*0x1 + 0x1]
0x14ddb: jmp 0x14c1a
0x14de0: call 0x3420
0x14de5: lea rcx,[rip+0x5e94]
0x14dec: lea rsi,[rip+0x5d6d]
0x14df3: lea rdi,[rip+0x5d86]
0x14dfa: mov edx,0x54
0x14dff: call 0x34d0
0x14e04: mov r9d,0x1
0x14e0a: or rbx,-0x1
0x14e0e: jmp 0x14d7b
0x14e13: mov r9d,0x1
0x14e19: or rbx,-0x1
0x14e1d: jmp 0x14d17
0x14e22: mov r8d,0x1
0x14e28: or rbx,-0x1
0x14e2c: jmp 0x14c53
0x14e31: or rax,-0x1
0x14e35: mov r8d,0x1
0x14e3b: jmp 0x14c47
0x14e40: mov r9d,0x1
0x14e46: or rbx,-0x1
0x14e4a: jmp 0x14cf7
0x14e4f: mov r9d,0x1
0x14e55: or rbx,-0x1
0x14e59: jmp 0x14d58
0x14e5e: mov r9d,0x1
0x14e64: or rbx,-0x1
0x14e68: jmp 0x14ccf
0x14e6d: mov r8d,0x1
0x14e73: or rax,-0x1
0x14e77: jmp 0x14dab
0x14ec4: shl rax,0x5
0x14ec8: lea rbx,[rip+0x5df2]
0x14ecf: mov r13,qword ptr [rcx + rax*0x1]
0x14fd6: cmp eax,0x22
0x14fd9: mov ebp,0x1
0x14fde: jnz 0x15008
0x152b0: call 0x3420
0x152b5: lea rcx,[rip+0x5b0c]
0x152bc: lea rsi,[rip+0x589d]
0x152c3: lea rdi,[rip+0x58b6]
0x152ca: mov edx,0x54
0x152cf: call 0x34d0
0x153ce: call 0x3420
0x153d3: nop word ptr cs:[rax + rax*0x1]
0x153dd: nop dword ptr [rax]
0x153e0: lea rsi,[rip+0x5768]
0x153e7: sub rsp,0x8
0x153eb: mov edx,0x5
0x153f0: xor edi,edi
0x153f2: call 0x33e0
0x153f7: mov rdi,qword ptr [rip+0x20aec2]
0x153fe: lea rdx,[rip+0x53eb]
0x15405: mov rcx,rax
0x15408: mov esi,0x1
0x1540d: xor eax,eax
0x1540f: call 0x3800
0x15414: mov edi,dword ptr [rip+0x20adde]
0x1541a: call 0x37e0
0x1541f: nop 
0x15440: test byte ptr [rdi + 0x50],0x1
0x15444: mov rax,qword ptr [rdi + 0x40]
0x15448: jnz 0x15450
0x1544a: mov rdi,rsi
0x1544d: jmp rax
0x15450: mov rdi,qword ptr [rdi + 0x48]
0x15454: jmp rax
0x1546c: lea r12,[rdx - 0x1]
0x15470: mov rbp,rdx
0x1548e: test rax,rax
0x15491: mov qword ptr [rbx + 0x8],rax
0x15495: jz 0x154dd
0x15497: lea rdx,[rax + r12*0x1 + 0x10]
0x1549c: neg rbp
0x1549f: and rbp,rdx
0x154a2: mov rdx,qword ptr [rbx]
0x154a5: mov qword ptr [rbx + 0x10],rbp
0x154a9: mov qword ptr [rbx + 0x18],rbp
0x154ad: add rdx,rax
0x154b0: mov qword ptr [rax],rdx
0x154b3: mov qword ptr [rbx + 0x20],rdx
0x154b7: mov qword ptr [rax + 0x8],0x0
0x154bf: mov eax,0x1
0x154c4: and byte ptr [rbx + 0x50],0xf9
0x154c8: pop rbx
0x154c9: pop rbp
0x154ca: pop r12
0x154cc: ret 
0x154dd: call qword ptr [rip+0x20ad7d]
0x154e3: nop dword ptr [rax]
0x154e6: nop word ptr cs:[rax + rax*0x1]
0x15510: or byte ptr [rdi + 0x50],0x1
0x15514: mov qword ptr [rdi + 0x38],rcx
0x15518: mov qword ptr [rdi + 0x40],r8
0x1551c: mov qword ptr [rdi + 0x48],r9
0x15520: jmp 0x15460
0x1558d: test rax,rax
0x15590: mov r14,rax
0x15593: jz 0x15615
0x15599: lea rsi,[rax + r12*0x1]
0x1559d: mov qword ptr [r13 + 0x8],rax
0x155a1: mov qword ptr [rax + 0x8],rbp
0x155a5: mov rdx,rbx
0x155a8: mov qword ptr [r13 + 0x20],rsi
0x155ac: mov qword ptr [rax],rsi
0x155af: mov rax,qword ptr [r13 + 0x30]
0x155b3: mov rsi,qword ptr [r13 + 0x10]
0x155b7: lea r12,[r14 + rax*0x1 + 0x10]
0x155bc: not rax
0x155bf: and r12,rax
0x155c2: mov rdi,r12
0x155c5: call 0x35f0
0x155ca: test byte ptr [r13 + 0x50],0x2
0x155cf: jnz 0x155e6
0x155d1: mov rax,qword ptr [r13 + 0x30]
0x155d5: lea rdx,[rbp + rax*0x1 + 0x10]
0x155da: not rax
0x155dd: and rax,rdx
0x155e0: cmp qword ptr [r13 + 0x10],rax
0x155e4: jz 0x15600
0x155e6: and byte ptr [r13 + 0x50],0xfd
0x155eb: add rbx,r12
0x155ee: mov qword ptr [r13 + 0x10],r12
0x155f2: mov qword ptr [r13 + 0x18],rbx
0x155f6: pop rbx
0x155f7: pop rbp
0x155f8: pop r12
0x155fa: pop r13
0x155fc: pop r14
0x155fe: ret 
0x15600: mov rax,qword ptr [rbp + 0x8]
0x15604: mov rsi,rbp
0x15607: mov rdi,r13
0x1560a: mov qword ptr [r14 + 0x8],rax
0x1560e: call 0x15440
0x15613: jmp 0x155e6
0x1561b: nop dword ptr [rax + rax*0x1]
0x15620: mov rax,qword ptr [rdi + 0x8]
0x15624: test rax,rax
0x15627: jz 0x15656
0x15629: nop dword ptr [rax]
0x15630: cmp rsi,rax
0x15633: jbe 0x1563a
0x15635: cmp qword ptr [rax],rsi
0x15638: jnc 0x15650
0x1563a: mov rax,qword ptr [rax + 0x8]
0x1563e: test rax,rax
0x15641: jnz 0x15630
0x15643: xor eax,eax
0x15645: ret 
0x15650: mov eax,0x1
0x15655: ret 
0x15656: ret 
0x15660: push r12
0x15662: push rbp
0x15663: mov rbp,rsi
0x15666: push rbx
0x15667: mov rsi,qword ptr [rdi + 0x8]
0x1566b: mov rbx,rdi
0x1566e: test rsi,rsi
0x15671: jz 0x1569d
0x15673: nop dword ptr [rax + rax*0x1]
0x15678: cmp rsi,rbp
0x1567b: jnc 0x15685
0x1567d: mov rax,qword ptr [rsi]
0x15680: cmp rax,rbp
0x15683: jnc 0x156b0
0x15685: mov r12,qword ptr [rsi + 0x8]
0x15689: mov rdi,rbx
0x1568c: call 0x15440
0x15691: or byte ptr [rbx + 0x50],0x2
0x15695: test r12,r12
0x15698: mov rsi,r12
0x1569b: jnz 0x15678
0x1569d: test rbp,rbp
0x156a0: jnz 0x156c5
0x156a2: pop rbx
0x156a3: pop rbp
0x156a4: pop r12
0x156a6: ret 
0x156b0: mov qword ptr [rbx + 0x18],rbp
0x156b4: mov qword ptr [rbx + 0x10],rbp
0x156b8: mov qword ptr [rbx + 0x20],rax
0x156bc: mov qword ptr [rbx + 0x8],rsi
0x156c0: pop rbx
0x156c1: pop rbp
0x156c2: pop r12
0x156c4: ret 
0x156c5: call 0x3290
0x156ca: nop word ptr [rax + rax*0x1]
0x156d0: mov rdx,qword ptr [rdi + 0x8]
0x156d4: xor eax,eax
0x156d6: test rdx,rdx
0x156d9: jz 0x156f8
0x156db: nop dword ptr [rax + rax*0x1]
0x156e0: mov rcx,qword ptr [rdx]
0x156e3: sub rcx,rdx
0x156e6: mov rdx,qword ptr [rdx + 0x8]
0x156ea: add rax,rcx
0x156ed: test rdx,rdx
0x156f0: jnz 0x156e0
0x156f2: ret 
0x156f8: ret 
0x15a70: cmp rdi,0x1
0x15a74: jz 0x15a7b
0x15a76: jmp 0x15730
0x15a7b: ret 
0x15c6c: call 0x3420
0x15c71: nop word ptr cs:[rax + rax*0x1]
0x15c7b: nop dword ptr [rax + rax*0x1]
0x15c80: push r12
0x15c82: push rbp
0x15c83: mov rbp,rdi
0x15c86: push rbx
0x15c87: call 0x32f0
0x15c8c: mov ebx,dword ptr [rbp]
0x15c8f: mov rdi,rbp
0x15c92: mov r12,rax
0x15c95: call 0x15da0
0x15c9a: and ebx,0x20
0x15c9d: test ebx,ebx
0x15c9f: jnz 0x15cb8
0x15ca1: test eax,eax
0x15ca3: jz 0x15caf
0x15ca5: test r12,r12
0x15ca8: mov eax,0xffffffff
0x15cad: jz 0x15ce8
0x15caf: pop rbx
0x15cb0: pop rbp
0x15cb1: pop r12
0x15cb3: ret 
0x15cb8: test eax,eax
0x15cba: jnz 0x15cd8
0x15cbc: call 0x32a0
0x15cc1: mov dword ptr [rax],0x0
0x15cc7: mov eax,0xffffffff
0x15ccc: pop rbx
0x15ccd: pop rbp
0x15cce: pop r12
0x15cd0: ret 
0x15cd8: pop rbx
0x15cd9: mov eax,0xffffffff
0x15cde: pop rbp
0x15cdf: pop r12
0x15ce1: ret 
0x15ce8: call 0x32a0
0x15ced: cmp dword ptr [rax],0x9
0x15cf0: pop rbx
0x15cf1: pop rbp
0x15cf2: pop r12
0x15cf4: setnz al
0x15cf7: movzx eax,al
0x15cfa: neg eax
0x15cfc: ret 
0x15d00: sub rsp,0x8
0x15d04: call 0xccb0
0x15d09: test rax,rax
0x15d0c: jz 0x15d13
0x15d0e: add rsp,0x8
0x15d12: ret 
0x15d13: call 0x147e0
0x15d18: nop dword ptr [rax + rax*0x1]
0x15d20: movsx rcx,byte ptr [rdi]
0x15d24: test cl,cl
0x15d26: jz 0x15d50
0x15d28: xor eax,eax
0x15d2a: nop word ptr [rax + rax*0x1]
0x15d30: rol rax,0x9
0x15d34: add rdi,0x1
0x15d38: add rax,rcx
0x15d3b: movsx rcx,byte ptr [rdi]
0x15d3f: test cl,cl
0x15d41: jnz 0x15d30
0x15d43: xor edx,edx
0x15d45: div rsi
0x15d48: mov rax,rdx
0x15d4b: ret 
0x15d50: xor edx,edx
0x15d52: mov rax,rdx
0x15d55: ret 
0x15da0: push r12
0x15da2: push rbp
0x15da3: push rbx
0x15da4: mov rbx,rdi
0x15da7: call 0x3620
0x15dac: test eax,eax
0x15dae: mov rdi,rbx
0x15db1: js 0x15e07
0x15db3: call 0x36c0
0x15db8: test eax,eax
0x15dba: jnz 0x15de8
0x15dbc: mov rdi,rbx
0x15dbf: call 0x15e20
0x15dc4: test eax,eax
0x15dc6: jz 0x15e04
0x15dc8: call 0x32a0
0x15dcd: mov r12d,dword ptr [rax]
0x15dd0: mov rdi,rbx
0x15dd3: mov rbp,rax
0x15dd6: call 0x33a0
0x15ddb: test r12d,r12d
0x15dde: jnz 0x15e10
0x15de0: pop rbx
0x15de1: pop rbp
0x15de2: pop r12
0x15de4: ret 
0x15de8: mov rdi,rbx
0x15deb: call 0x3620
0x15df0: xor esi,esi
0x15df2: mov edx,0x1
0x15df7: mov edi,eax
0x15df9: call 0x34c0
0x15dfe: cmp rax,-0x1
0x15e02: jnz 0x15dbc
0x15e04: mov rdi,rbx
0x15e07: pop rbx
0x15e08: pop rbp
0x15e09: pop r12
0x15e0b: jmp 0x33a0
0x15e10: mov dword ptr [rbp],r12d
0x15e14: mov eax,0xffffffff
0x15e19: jmp 0x15de0
0x15e20: test rdi,rdi
0x15e23: push rbx
0x15e24: mov rbx,rdi
0x15e27: jz 0x15e3a
0x15e29: call 0x36c0
0x15e2e: test eax,eax
0x15e30: jz 0x15e3a
0x15e32: test dword ptr [rbx],0x100
0x15e38: jnz 0x15e48
0x15e3a: mov rdi,rbx
0x15e3d: pop rbx
0x15e3e: jmp 0x3670
0x15e48: mov rdi,rbx
0x15e4b: mov edx,0x1
0x15e50: xor esi,esi
0x15e52: call 0x15e60
0x15e57: mov rdi,rbx
0x15e5a: pop rbx
0x15e5b: jmp 0x3670
0x15e60: mov rax,qword ptr [rdi + 0x8]
0x15e64: cmp qword ptr [rdi + 0x10],rax
0x15e68: jz 0x15e70
0x15e6a: jmp 0x3770
0x15e70: mov rax,qword ptr [rdi + 0x20]
0x15e74: cmp qword ptr [rdi + 0x28],rax
0x15e78: jnz 0x15e6a
0x15e7a: cmp qword ptr [rdi + 0x48],0x0
0x15e7f: jnz 0x15e6a
0x15e81: push r12
0x15e83: push rbp
0x15e84: mov r12d,edx
0x15e87: push rbx
0x15e88: mov rbp,rsi
0x15e8b: mov rbx,rdi
0x15e8e: call 0x3620
0x15e93: mov edx,r12d
0x15e96: mov rsi,rbp
0x15e99: mov edi,eax
0x15e9b: call 0x34c0
0x15ea0: cmp rax,-0x1
0x15ea4: jz 0x15eb2
0x15ea6: and dword ptr [rbx],0xffffffef
0x15ea9: mov qword ptr [0x90 + rbx],rax
0x15eb0: xor eax,eax
0x15eb2: pop rbx
0x15eb3: pop rbp
0x15eb4: pop r12
0x15eb6: ret 
0x15ec0: push r15
0x15ec2: push r14
0x15ec4: mov r15,rdx
0x15ec7: push r13
0x15ec9: push r12
0x15ecb: lea r12,[rip+0x20917e]
0x15ed2: push rbp
0x15ed3: lea rbp,[rip+0x20917e]
0x15eda: push rbx
0x15edb: mov r13d,edi
0x15ede: mov r14,rsi
0x15ee1: sub rbp,r12
0x15ee4: sub rsp,0x8
0x15ee8: sar rbp,0x3
0x15eec: call 0x3210
0x15ef1: test rbp,rbp
0x15ef4: jz 0x15f16
0x15ef6: xor ebx,ebx
0x15ef8: nop dword ptr [rax + rax*0x1]
0x15f00: mov rdx,r15
0x15f03: mov rsi,r14
0x15f06: mov edi,r13d
0x15f09: call qword ptr [r12 + rbx*0x8]
0x15f0d: add rbx,0x1
0x15f11: cmp rbp,rbx
0x15f14: jnz 0x15f00
0x15f16: add rsp,0x8
0x15f1a: pop rbx
0x15f1b: pop rbp
0x15f1c: pop r12
0x15f1e: pop r13
0x15f20: pop r14
0x15f22: pop r15
0x15f24: ret 
0x15f30: ret 
0x15f50: sub rsp,0x8
0x15f54: add rsp,0x8
0x15f58: ret 
