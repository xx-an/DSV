0x1960: sub rsp,0x8
0x1964: mov rax,qword ptr [rip+0x20d675]
0x196b: test rax,rax
0x196e: jz 0x1972
0x1970: call rax
0x1972: add rsp,0x8
0x1976: ret 
0x1980: push qword ptr [rip+0x20d42a]
0x1986: jmp qword ptr [rip+0x20d42c]
0x1996: push 0x0
0x199b: jmp 0x1980
0x19a6: push 0x1
0x19ab: jmp 0x1980
0x19b6: push 0x2
0x19bb: jmp 0x1980
0x19c0: jmp qword ptr [rip+0x20d412]
0x19c6: push 0x3
0x19cb: jmp 0x1980
0x19d0: jmp qword ptr [rip+0x20d40a]
0x19d6: push 0x4
0x19db: jmp 0x1980
0x19e6: push 0x5
0x19eb: jmp 0x1980
0x19f6: push 0x6
0x19fb: jmp 0x1980
0x1a06: push 0x7
0x1a0b: jmp 0x1980
0x1a16: push 0x8
0x1a1b: jmp 0x1980
0x1a26: push 0x9
0x1a2b: jmp 0x1980
0x1a36: push 0xa
0x1a3b: jmp 0x1980
0x1a40: jmp qword ptr [rip+0x20d3d2]
0x1a46: push 0xb
0x1a4b: jmp 0x1980
0x1a56: push 0xc
0x1a5b: jmp 0x1980
0x1a66: push 0xd
0x1a6b: jmp 0x1980
0x1a76: push 0xe
0x1a7b: jmp 0x1980
0x1a86: push 0xf
0x1a8b: jmp 0x1980
0x1a96: push 0x10
0x1a9b: jmp 0x1980
0x1aa6: push 0x11
0x1aab: jmp 0x1980
0x1ab0: jmp qword ptr [rip+0x20d39a]
0x1ab6: push 0x12
0x1abb: jmp 0x1980
0x1ac6: push 0x13
0x1acb: jmp 0x1980
0x1ad6: push 0x14
0x1adb: jmp 0x1980
0x1ae6: push 0x15
0x1aeb: jmp 0x1980
0x1af0: jmp qword ptr [rip+0x20d37a]
0x1af6: push 0x16
0x1afb: jmp 0x1980
0x1b06: push 0x17
0x1b0b: jmp 0x1980
0x1b10: jmp qword ptr [rip+0x20d36a]
0x1b16: push 0x18
0x1b1b: jmp 0x1980
0x1b26: push 0x19
0x1b2b: jmp 0x1980
0x1b36: push 0x1a
0x1b3b: jmp 0x1980
0x1b46: push 0x1b
0x1b4b: jmp 0x1980
0x1b56: push 0x1c
0x1b5b: jmp 0x1980
0x1b66: push 0x1d
0x1b6b: jmp 0x1980
0x1b76: push 0x1e
0x1b7b: jmp 0x1980
0x1b86: push 0x1f
0x1b8b: jmp 0x1980
0x1b96: push 0x20
0x1b9b: jmp 0x1980
0x1ba6: push 0x21
0x1bab: jmp 0x1980
0x1bb6: push 0x22
0x1bbb: jmp 0x1980
0x1bc6: push 0x23
0x1bcb: jmp 0x1980
0x1bd6: push 0x24
0x1bdb: jmp 0x1980
0x1be6: push 0x25
0x1beb: jmp 0x1980
0x1bf0: jmp qword ptr [rip+0x20d2fa]
0x1bf6: push 0x26
0x1bfb: jmp 0x1980
0x1c06: push 0x27
0x1c0b: jmp 0x1980
0x1c16: push 0x28
0x1c1b: jmp 0x1980
0x1c26: push 0x29
0x1c2b: jmp 0x1980
0x1c30: jmp qword ptr [rip+0x20d2da]
0x1c36: push 0x2a
0x1c3b: jmp 0x1980
0x1c46: push 0x2b
0x1c4b: jmp 0x1980
0x1c56: push 0x2c
0x1c5b: jmp 0x1980
0x1c60: jmp qword ptr [rip+0x20d2c2]
0x1c66: push 0x2d
0x1c6b: jmp 0x1980
0x1c76: push 0x2e
0x1c7b: jmp 0x1980
0x1c86: push 0x2f
0x1c8b: jmp 0x1980
0x1c96: push 0x30
0x1c9b: jmp 0x1980
0x1ca6: push 0x31
0x1cab: jmp 0x1980
0x1cb6: push 0x32
0x1cbb: jmp 0x1980
0x1cc6: push 0x33
0x1ccb: jmp 0x1980
0x1cd6: push 0x34
0x1cdb: jmp 0x1980
0x1ce6: push 0x35
0x1ceb: jmp 0x1980
0x1cf0: jmp qword ptr [rip+0x20d27a]
0x1cf6: push 0x36
0x1cfb: jmp 0x1980
0x1d06: push 0x37
0x1d0b: jmp 0x1980
0x1d16: push 0x38
0x1d1b: jmp 0x1980
0x1d26: push 0x39
0x1d2b: jmp 0x1980
0x1d36: push 0x3a
0x1d3b: jmp 0x1980
0x1d46: push 0x3b
0x1d4b: jmp 0x1980
0x1d56: push 0x3c
0x1d5b: jmp 0x1980
0x1d66: push 0x3d
0x1d6b: jmp 0x1980
0x1d76: push 0x3e
0x1d7b: jmp 0x1980
0x1d86: push 0x3f
0x1d8b: jmp 0x1980
0x1d96: push 0x40
0x1d9b: jmp 0x1980
0x1da8: jmp qword ptr [rip+0x20d242]
0x2303: call 0x1ab0
0x2329: jmp 0x2260
0x2389: nop dword ptr [rax]
0x23ba: hlt 
0x23c0: lea rdi,[rip+0x20ccd9]
0x23c7: push rbp
0x23c8: lea rax,[rip+0x20ccd1]
0x23cf: cmp rax,rdi
0x23d2: mov rbp,rsp
0x23d5: jz 0x23f0
0x23d7: mov rax,qword ptr [rip+0x20cbf2]
0x23de: test rax,rax
0x23e1: jz 0x23f0
0x23e3: pop rbp
0x23e4: jmp rax
0x23f0: pop rbp
0x23f1: ret 
0x2400: lea rdi,[rip+0x20cc99]
0x2407: lea rsi,[rip+0x20cc92]
0x240e: push rbp
0x240f: sub rsi,rdi
0x2412: mov rbp,rsp
0x2415: sar rsi,0x3
0x2419: mov rax,rsi
0x241c: shr rax,0x3f
0x2420: add rsi,rax
0x2423: sar rsi,1
0x2426: jz 0x2440
0x2428: mov rax,qword ptr [rip+0x20cbb9]
0x242f: test rax,rax
0x2432: jz 0x2440
0x2434: pop rbp
0x2435: jmp rax
0x2440: pop rbp
0x2441: ret 
0x2450: cmp byte ptr [rip+0x20cc91],0x0
0x2457: jnz 0x2488
0x2459: cmp qword ptr [rip+0x20cb8f],0x0
0x2461: push rbp
0x2462: mov rbp,rsp
0x2465: jz 0x2473
0x2467: mov rdi,qword ptr [rip+0x20cb9a]
0x246e: call 0x1da8
0x2473: call 0x23c0
0x2478: mov byte ptr [rip+0x20cc69],0x1
0x247f: pop rbp
0x2480: ret 
0x2488: ret 
0x2490: push rbp
0x2491: mov rbp,rsp
0x2494: pop rbp
0x2495: jmp 0x2400
0x29f1: mov rax,qword ptr [rbx + 0x8]
0x29f5: cmp qword ptr [rax + 0x58],0x0
0x29fa: jns 0x2a13
0x29fc: jmp 0x2a1a
0x2a00: mov qword ptr [rax + 0x20],0x1
0x2a08: mov rax,qword ptr [rax + 0x8]
0x2a0c: cmp qword ptr [rax + 0x58],0x0
0x2a11: js 0x2a1a
0x2a13: cmp qword ptr [rax + 0x20],0x0
0x2a18: jz 0x2a00
0x2a1a: mov eax,0x4
0x2a1f: jmp 0x2945
0x2b38: call 0x1ab0
0x2b3d: nop dword ptr [rax]
0x2f3d: mov eax,0x4
0x2f42: jmp 0x2cf7
0x305c: mov eax,0x4
0x3061: jmp 0x2cf7
0x3083: call 0x1ab0
0x3088: nop dword ptr [rax + rax*0x1]
0x3169: mov rsi,r15
0x316c: mov edx,0x4
0x3171: mov rdi,rbx
0x3174: call 0x8c60
0x3179: mov rdi,rbx
0x317c: mov ebp,0x4
0x3181: call 0x84e0
0x3186: mov rdi,rbx
0x3189: call 0x84e0
0x318e: test rax,rax
0x3191: mov r15,rax
0x3194: jnz 0x3114
0x346a: mov rax,qword ptr [r15 + 0x8]
0x346e: cmp qword ptr [rax + 0x58],0x0
0x3473: jns 0x3497
0x3475: jmp 0x3169
0x3480: mov qword ptr [rax + 0x20],0x1
0x3488: mov rax,qword ptr [rax + 0x8]
0x348c: cmp qword ptr [rax + 0x58],0x0
0x3491: js 0x3169
0x3497: cmp qword ptr [rax + 0x20],0x0
0x349c: jz 0x3480
0x349e: jmp 0x3169
0x359d: jmp 0x3169
0x362a: mov rdi,r14
0x362d: call 0x1da0
0x3632: jmp 0x3169
0x368c: lea rsi,[rip+0x813d]
0x3693: mov edx,0x5
0x3698: xor edi,edi
0x369a: call 0x1a60
0x369f: xor esi,esi
0x36a1: mov rdx,rax
0x36a4: xor edi,edi
0x36a6: xor eax,eax
0x36a8: call 0x1cd0
0x36ad: jmp 0x3169
0x36e0: mov rdi,rbx
0x36e3: call 0x8350
0x36e8: test eax,eax
0x36ea: jz 0x31bc
0x3718: jmp 0x31bc
0x37a3: mov edx,0x5
0x37a8: lea rsi,[rip+0x7e81]
0x37af: jmp 0x3698
0x381c: jmp 0x3100
0x3872: jmp 0x37a3
0x38bc: call 0x1990
0x38e0: call 0x1ab0
0x38f0: mov edi,0x1
0x38f5: jmp 0x24a0
0x3a00: mov byte ptr [rsp + 0x17],0x1
0x3a05: jmp 0x3987
0x3aa0: push r15
0x3aa2: push r14
0x3aa4: mov r14,rdi
0x3aa7: push r13
0x3aa9: push r12
0x3aab: xor edi,edi
0x3aad: push rbp
0x3aae: push rbx
0x3aaf: mov rbp,rsi
0x3ab2: lea rsi,[rip+0x7db7]
0x3ab9: mov r12,rdx
0x3abc: mov edx,0x5
0x3ac1: sub rsp,0x8
0x3ac5: mov rbx,qword ptr [rip+0x20b614]
0x3acc: call 0x1a60
0x3ad1: mov rdi,rax
0x3ad4: mov rsi,rbx
0x3ad7: call 0x1b80
0x3adc: mov r15,qword ptr [r14]
0x3adf: test r15,r15
0x3ae2: jz 0x3b78
0x3ae8: xor r13d,r13d
0x3aeb: xor ebx,ebx
0x3aed: jmp 0x3b28
0x3af0: mov rdi,r15
0x3af3: add rbx,0x1
0x3af7: mov r13,rbp
0x3afa: call 0x5e40
0x3aff: mov rdi,qword ptr [rip+0x20b5da]
0x3b06: lea rdx,[rip+0x7d78]
0x3b0d: mov rcx,rax
0x3b10: mov esi,0x1
0x3b15: xor eax,eax
0x3b17: add rbp,r12
0x3b1a: call 0x1d60
0x3b1f: mov r15,qword ptr [r14 + rbx*0x8]
0x3b23: test r15,r15
0x3b26: jz 0x3b78
0x3b28: test rbx,rbx
0x3b2b: jz 0x3af0
0x3b2d: mov rdx,r12
0x3b30: mov rsi,rbp
0x3b33: mov rdi,r13
0x3b36: call 0x1b70
0x3b3b: test eax,eax
0x3b3d: jnz 0x3af0
0x3b3f: mov rdi,r15
0x3b42: add rbx,0x1
0x3b46: add rbp,r12
0x3b49: call 0x5e40
0x3b4e: mov rdi,qword ptr [rip+0x20b58b]
0x3b55: lea rdx,[rip+0x7d31]
0x3b5c: mov rcx,rax
0x3b5f: mov esi,0x1
0x3b64: xor eax,eax
0x3b66: call 0x1d60
0x3b6b: mov r15,qword ptr [r14 + rbx*0x8]
0x3b6f: test r15,r15
0x3b72: jnz 0x3b28
0x3b74: nop dword ptr [rax]
0x3b78: mov rdi,qword ptr [rip+0x20b561]
0x3b7f: mov rax,qword ptr [rdi + 0x28]
0x3b83: cmp rax,qword ptr [rdi + 0x30]
0x3b87: jnc 0x3ba8
0x3b89: lea rdx,[rax + 0x1]
0x3b8d: mov qword ptr [rdi + 0x28],rdx
0x3b91: mov byte ptr [rax],0xa
0x3b94: add rsp,0x8
0x3b98: pop rbx
0x3b99: pop rbp
0x3b9a: pop r12
0x3b9c: pop r13
0x3b9e: pop r14
0x3ba0: pop r15
0x3ba2: ret 
0x3ba8: add rsp,0x8
0x3bac: mov esi,0xa
0x3bb1: pop rbx
0x3bb2: pop rbp
0x3bb3: pop r12
0x3bb5: pop r13
0x3bb7: pop r14
0x3bb9: pop r15
0x3bbb: jmp 0x1af0
0x3c13: mov rdx,r15
0x3c16: mov rsi,rbp
0x3c19: mov rdi,rbx
0x3c1c: call 0x3aa0
0x3c21: call r13
0x3c24: mov rax,-0x1
0x3c2b: jmp 0x3bf6
0x3c30: push r14
0x3c32: push r13
0x3c34: push r12
0x3c36: push rbp
0x3c37: push rbx
0x3c38: mov r14,qword ptr [rsi]
0x3c3b: test r14,r14
0x3c3e: jz 0x3c71
0x3c40: mov r12,rcx
0x3c43: mov r13,rdi
0x3c46: mov rbp,rdx
0x3c49: lea rbx,[rsi + 0x8]
0x3c4d: jmp 0x3c5f
0x3c50: mov r14,qword ptr [rbx]
0x3c53: add rbp,r12
0x3c56: add rbx,0x8
0x3c5a: test r14,r14
0x3c5d: jz 0x3c71
0x3c5f: mov rdx,r12
0x3c62: mov rsi,rbp
0x3c65: mov rdi,r13
0x3c68: call 0x1b70
0x3c6d: test eax,eax
0x3c6f: jnz 0x3c50
0x3c71: pop rbx
0x3c72: mov rax,r14
0x3c75: pop rbp
0x3c76: pop r12
0x3c78: pop r13
0x3c7a: pop r14
0x3c7c: ret 
0x3c80: mov qword ptr [rip+0x20b479],rdi
0x3c87: ret 
0x3c90: push r12
0x3c92: push rbp
0x3c93: push rbx
0x3c94: mov rbx,qword ptr [rip+0x20b415]
0x3c9b: mov rdi,rbx
0x3c9e: call 0x6930
0x3ca3: test rax,rax
0x3ca6: jnz 0x3d48
0x3cac: mov rdi,rbx
0x3caf: call 0x8e70
0x3cb4: test eax,eax
0x3cb6: jnz 0x3ce8
0x3cb8: pop rbx
0x3cb9: pop rbp
0x3cba: pop r12
0x3cbc: jmp 0x3dc0
0x3cc8: call 0x68f0
0x3ccd: test eax,eax
0x3ccf: mov rdi,qword ptr [rip+0x20b3da]
0x3cd6: jz 0x3d66
0x3cdc: call 0x8e70
0x3ce1: nop dword ptr [rax]
0x3ce8: lea rsi,[rip+0x7ba3]
0x3cef: xor edi,edi
0x3cf1: mov edx,0x5
0x3cf6: call 0x1a60
0x3cfb: mov rbx,qword ptr [rip+0x20b3fe]
0x3d02: mov r12,rax
0x3d05: call 0x19a0
0x3d0a: mov rbp,rax
0x3d0d: test rbx,rbx
0x3d10: jz 0x3d80
0x3d12: mov rdi,rbx
0x3d15: call 0x5c40
0x3d1a: mov esi,dword ptr [rbp]
0x3d1d: lea rdx,[rip+0x7b81]
0x3d24: mov rcx,rax
0x3d27: mov r8,r12
0x3d2a: xor edi,edi
0x3d2c: xor eax,eax
0x3d2e: call 0x1cd0
0x3d33: call 0x3dc0
0x3d38: mov edi,dword ptr [rip+0x20b2e2]
0x3d3e: call 0x19c0
0x3d48: xor esi,esi
0x3d4a: mov rdi,rbx
0x3d4d: mov edx,0x1
0x3d52: call 0x6960
0x3d57: test eax,eax
0x3d59: mov rdi,qword ptr [rip+0x20b350]
0x3d60: jz 0x3cc8
0x3d66: call 0x8e70
0x3d6b: test eax,eax
0x3d6d: jnz 0x3ce8
0x3d73: pop rbx
0x3d74: pop rbp
0x3d75: pop r12
0x3d77: jmp 0x3dc0
0x3d80: mov esi,dword ptr [rax]
0x3d82: lea rdx,[rip+0x7b06]
0x3d89: mov rcx,r12
0x3d8c: xor edi,edi
0x3d8e: xor eax,eax
0x3d90: call 0x1cd0
0x3d95: jmp 0x3d33
0x3da0: mov qword ptr [rip+0x20b369],rdi
0x3da7: ret 
0x3db0: mov byte ptr [rip+0x20b351],dil
0x3db7: ret 
0x3dc0: push rbp
0x3dc1: push rbx
0x3dc2: sub rsp,0x8
0x3dc6: mov rdi,qword ptr [rip+0x20b2db]
0x3dcd: call 0x8e70
0x3dd2: test eax,eax
0x3dd4: jz 0x3dec
0x3dd6: call 0x19a0
0x3ddb: cmp byte ptr [rip+0x20b326],0x0
0x3de2: mov rbx,rax
0x3de5: jz 0x3e03
0x3de7: cmp dword ptr [rax],0x20
0x3dea: jnz 0x3e03
0x3dec: mov rdi,qword ptr [rip+0x20b2ed]
0x3df3: call 0x8e70
0x3df8: test eax,eax
0x3dfa: jnz 0x3e42
0x3dfc: add rsp,0x8
0x3e00: pop rbx
0x3e01: pop rbp
0x3e02: ret 
0x3e03: lea rsi,[rip+0x7aa2]
0x3e0a: xor edi,edi
0x3e0c: mov edx,0x5
0x3e11: call 0x1a60
0x3e16: mov rdi,qword ptr [rip+0x20b2f3]
0x3e1d: mov rbp,rax
0x3e20: test rdi,rdi
0x3e23: jz 0x3e4d
0x3e25: call 0x5c40
0x3e2a: mov esi,dword ptr [rbx]
0x3e2c: lea rdx,[rip+0x7a72]
0x3e33: mov rcx,rax
0x3e36: mov r8,rbp
0x3e39: xor edi,edi
0x3e3b: xor eax,eax
0x3e3d: call 0x1cd0
0x3e42: mov edi,dword ptr [rip+0x20b1d8]
0x3e48: call 0x19c0
0x3e4d: mov esi,dword ptr [rbx]
0x3e4f: lea rdx,[rip+0x7a39]
0x3e56: mov rcx,rax
0x3e59: xor edi,edi
0x3e5b: xor eax,eax
0x3e5d: call 0x1cd0
0x3e62: jmp 0x3e42
0x4028: nop dword ptr [rax + rax*0x1]
0x41cf: nop 
0x45fb: mov ebx,edx
0x45fd: xor r12d,r12d
0x4600: xor eax,eax
0x4b0f: lea rcx,[rbp + 0x2]
0x4b13: cmp rcx,r11
0x4b16: jnc 0x4b30
0x4b18: mov rax,qword ptr [rsp + 0x10]
0x4b1d: cmp byte ptr [rax + rbp*0x1 + 0x1],0x3f
0x4b22: jz 0x52b2
0x4b28: nop dword ptr [rax + rax*0x1]
0x52b2: movzx ebx,byte ptr [rax + rcx*0x1]
0x52b6: cmp bl,0x3e
0x52b9: ja 0x4b30
0x52bf: mov rax,0x7000a38200000000
0x52c9: bt rax,rbx
0x52cd: jnc 0x4b30
0x52d3: cmp byte ptr [rsp + 0xf],0x0
0x52d8: jnz 0x54c2
0x52de: cmp r13,r15
0x52e1: jbe 0x52e8
0x52e3: mov byte ptr [r14 + r15*0x1],0x3f
0x52e8: lea rax,[r15 + 0x1]
0x52ec: cmp r13,rax
0x52ef: jbe 0x52f7
0x52f1: mov byte ptr [r14 + r15*0x1 + 0x1],0x22
0x52f7: lea rax,[r15 + 0x2]
0x52fb: cmp r13,rax
0x52fe: jbe 0x5306
0x5300: mov byte ptr [r14 + r15*0x1 + 0x2],0x22
0x5306: lea rax,[r15 + 0x3]
0x530a: cmp r13,rax
0x530d: jbe 0x5315
0x530f: mov byte ptr [r14 + r15*0x1 + 0x3],0x3f
0x5315: add r15,0x4
0x5319: xor edx,edx
0x531b: xor r12d,r12d
0x531e: xor eax,eax
0x5320: mov rbp,rcx
0x5323: jmp 0x44e8
0x54b3: call 0x1ab0
0x54c2: mov rbp,r11
0x54c5: jmp 0x4e60
0x54f4: nop 
0x54f6: nop word ptr cs:[rax + rax*0x1]
0x56ab: nop dword ptr [rax + rax*0x1]
0x56b0: push r12
0x56b2: push rbp
0x56b3: push rbx
0x56b4: mov rbx,rdi
0x56b7: call 0x19a0
0x56bc: mov r12d,dword ptr [rax]
0x56bf: mov rbp,rax
0x56c2: lea rax,[rip+0x209b57]
0x56c9: test rbx,rbx
0x56cc: mov esi,0x38
0x56d1: cmovz rbx,rax
0x56d5: mov rdi,rbx
0x56d8: call 0x6740
0x56dd: mov dword ptr [rbp],r12d
0x56e1: pop rbx
0x56e2: pop rbp
0x56e3: pop r12
0x56e5: ret 
0x56f0: lea rax,[rip+0x209b29]
0x56f7: test rdi,rdi
0x56fa: cmovz rdi,rax
0x56fe: mov eax,dword ptr [rdi]
0x5700: ret 
0x5710: lea rax,[rip+0x209b09]
0x5717: test rdi,rdi
0x571a: cmovz rdi,rax
0x571e: mov dword ptr [rdi],esi
0x5720: ret 
0x5730: lea rax,[rip+0x209ae9]
0x5737: test rdi,rdi
0x573a: mov ecx,esi
0x573c: cmovz rdi,rax
0x5740: mov eax,esi
0x5742: and ecx,0x1f
0x5745: shr al,0x5
0x5748: movzx eax,al
0x574b: lea rdi,[rdi + rax*0x4 + 0x8]
0x5750: mov esi,dword ptr [rdi]
0x5752: mov eax,esi
0x5754: shr eax,cl
0x5756: xor edx,eax
0x5758: and eax,0x1
0x575b: and edx,0x1
0x575e: shl edx,cl
0x5760: xor edx,esi
0x5762: mov dword ptr [rdi],edx
0x5764: ret 
0x5770: lea rax,[rip+0x209aa9]
0x5777: test rdi,rdi
0x577a: cmovz rdi,rax
0x577e: mov eax,dword ptr [rdi + 0x4]
0x5781: mov dword ptr [rdi + 0x4],esi
0x5784: ret 
0x5790: lea rax,[rip+0x209a89]
0x5797: test rdi,rdi
0x579a: cmovz rdi,rax
0x579e: test rsi,rsi
0x57a1: mov dword ptr [rdi],0xa
0x57a7: jz 0x57b7
0x57a9: test rdx,rdx
0x57ac: jz 0x57b7
0x57ae: mov qword ptr [rdi + 0x28],rsi
0x57b2: mov qword ptr [rdi + 0x30],rdx
0x57b6: ret 
0x57b7: sub rsp,0x8
0x57bb: call 0x1990
0x57c0: push r15
0x57c2: push r14
0x57c4: lea rax,[rip+0x209a55]
0x57cb: push r13
0x57cd: push r12
0x57cf: mov r13,rdi
0x57d2: push rbp
0x57d3: push rbx
0x57d4: mov rbx,r8
0x57d7: mov r14,rsi
0x57da: mov r15,rdx
0x57dd: sub rsp,0x18
0x57e1: test r8,r8
0x57e4: cmovz rbx,rax
0x57e8: mov qword ptr [rsp + 0x8],rcx
0x57ed: call 0x19a0
0x57f2: mov r12d,dword ptr [rax]
0x57f5: mov rbp,rax
0x57f8: lea rax,[rbx + 0x8]
0x57fc: sub rsp,0x8
0x5800: mov r9d,dword ptr [rbx + 0x4]
0x5804: push qword ptr [rbx + 0x30]
0x5807: mov r8d,dword ptr [rbx]
0x580a: push qword ptr [rbx + 0x28]
0x580d: mov rdx,r15
0x5810: push rax
0x5811: mov rcx,qword ptr [rsp + 0x28]
0x5816: mov rsi,r14
0x5819: mov rdi,r13
0x581c: call 0x42c0
0x5821: mov dword ptr [rbp],r12d
0x5825: add rsp,0x38
0x5829: pop rbx
0x582a: pop rbp
0x582b: pop r12
0x582d: pop r13
0x582f: pop r14
0x5831: pop r15
0x5833: ret 
0x5840: push r15
0x5842: push r14
0x5844: lea rax,[rip+0x2099d5]
0x584b: push r13
0x584d: push r12
0x584f: mov r12,rdx
0x5852: push rbp
0x5853: push rbx
0x5854: mov rbx,rcx
0x5857: mov r14,rdi
0x585a: mov r15,rsi
0x585d: sub rsp,0x38
0x5861: test rcx,rcx
0x5864: cmovz rbx,rax
0x5868: xor ebp,ebp
0x586a: call 0x19a0
0x586f: test r12,r12
0x5872: mov r13,rax
0x5875: mov eax,dword ptr [rax]
0x5877: setz bpl
0x587b: or ebp,dword ptr [rbx + 0x4]
0x587e: lea r10,[rbx + 0x8]
0x5882: sub rsp,0x8
0x5886: mov r8d,dword ptr [rbx]
0x5889: mov rcx,r15
0x588c: mov dword ptr [rsp + 0x14],eax
0x5890: push qword ptr [rbx + 0x30]
0x5893: mov rdx,r14
0x5896: push qword ptr [rbx + 0x28]
0x5899: push r10
0x589b: xor esi,esi
0x589d: mov r9d,ebp
0x58a0: xor edi,edi
0x58a2: mov qword ptr [rsp + 0x40],r10
0x58a7: call 0x42c0
0x58ac: lea rsi,[rax + 0x1]
0x58b0: mov qword ptr [rsp + 0x48],rax
0x58b5: add rsp,0x20
0x58b9: mov rdi,rsi
0x58bc: mov qword ptr [rsp + 0x18],rsi
0x58c1: call 0x6540
0x58c6: mov qword ptr [rsp + 0x10],rax
0x58cb: sub rsp,0x8
0x58cf: push qword ptr [rbx + 0x30]
0x58d2: push qword ptr [rbx + 0x28]
0x58d5: mov r10,qword ptr [rsp + 0x38]
0x58da: mov r9d,ebp
0x58dd: mov r8d,dword ptr [rbx]
0x58e0: mov rcx,r15
0x58e3: mov rdx,r14
0x58e6: mov rdi,rax
0x58e9: push r10
0x58eb: mov rsi,qword ptr [rsp + 0x38]
0x58f0: call 0x42c0
0x58f5: mov eax,dword ptr [rsp + 0x2c]
0x58f9: add rsp,0x20
0x58fd: test r12,r12
0x5900: mov dword ptr [r13],eax
0x5904: jz 0x590f
0x5906: mov r11,qword ptr [rsp + 0x28]
0x590b: mov qword ptr [r12],r11
0x590f: mov rax,qword ptr [rsp + 0x10]
0x5914: add rsp,0x38
0x5918: pop rbx
0x5919: pop rbp
0x591a: pop r12
0x591c: pop r13
0x591e: pop r14
0x5920: pop r15
0x5922: ret 
0x5930: mov rcx,rdx
0x5933: xor edx,edx
0x5935: jmp 0x5840
0x5940: mov eax,dword ptr [rip+0x209732]
0x5946: push r12
0x5948: mov r12,qword ptr [rip+0x209731]
0x594f: push rbp
0x5950: push rbx
0x5951: cmp eax,0x1
0x5954: jle 0x5981
0x5956: sub eax,0x2
0x5959: lea rbx,[r12 + 0x18]
0x595e: shl rax,0x4
0x5962: lea rbp,[r12 + rax*0x1 + 0x28]
0x5967: nop word ptr [rax + rax*0x1]
0x5970: mov rdi,qword ptr [rbx]
0x5973: add rbx,0x10
0x5977: call 0x1da0
0x597c: cmp rbx,rbp
0x597f: jnz 0x5970
0x5981: mov rdi,qword ptr [r12 + 0x8]
0x5986: lea rbx,[rip+0x209793]
0x598d: cmp rdi,rbx
0x5990: jz 0x59a9
0x5992: call 0x1da0
0x5997: mov qword ptr [rip+0x2096ee],0x100
0x59a2: mov qword ptr [rip+0x2096ef],rbx
0x59a9: lea rbx,[rip+0x2096e0]
0x59b0: cmp r12,rbx
0x59b3: jz 0x59c4
0x59b5: mov rdi,r12
0x59b8: call 0x1da0
0x59bd: mov qword ptr [rip+0x2096bc],rbx
0x59c4: pop rbx
0x59c5: mov dword ptr [rip+0x2096a9],0x1
0x59cf: pop rbp
0x59d0: pop r12
0x59d2: ret 
0x59e0: lea rcx,[rip+0x209839]
0x59e7: mov rdx,-0x1
0x59ee: jmp 0x5500
0x5a00: lea rcx,[rip+0x209819]
0x5a07: jmp 0x5500
0x5a10: lea rcx,[rip+0x209809]
0x5a17: mov rsi,rdi
0x5a1a: mov rdx,-0x1
0x5a21: xor edi,edi
0x5a23: jmp 0x5500
0x5a30: lea rcx,[rip+0x2097e9]
0x5a37: mov rdx,rsi
0x5a3a: mov rsi,rdi
0x5a3d: xor edi,edi
0x5a3f: jmp 0x5500
0x5ad9: call 0x1ab0
0x5ade: nop 
0x5ae0: sub rsp,0x48
0x5ae4: mov rax,rdx
0x5ae7: mov rdx,rcx
0x5aea: mov rcx,qword ptr fs:[rip+0xffffffffffffa535]
0x5af3: mov qword ptr [rsp + 0x38],rcx
0x5af8: xor ecx,ecx
0x5afa: cmp esi,0xa
0x5afd: jz 0x5b60
0x5aff: mov dword ptr [rsp],esi
0x5b02: mov rcx,rsp
0x5b05: mov rsi,rax
0x5b08: mov qword ptr [rsp + 0x4],0x0
0x5b11: mov qword ptr [rsp + 0xc],0x0
0x5b1a: mov qword ptr [rsp + 0x14],0x0
0x5b23: mov qword ptr [rsp + 0x1c],0x0
0x5b2c: mov qword ptr [rsp + 0x24],0x0
0x5b35: mov qword ptr [rsp + 0x2c],0x0
0x5b3e: mov dword ptr [rsp + 0x34],0x0
0x5b46: call 0x5500
0x5b4b: mov rdx,qword ptr [rsp + 0x38]
0x5b50: xor rdx,qword ptr fs:[rip+0xffffffffffffa4cf]
0x5b59: jnz 0x5b65
0x5b5b: add rsp,0x48
0x5b5f: ret 
0x5b60: call 0x1990
0x5b65: call 0x1ab0
0x5b6a: nop word ptr [rax + rax*0x1]
0x5b80: mov rcx,rdx
0x5b83: mov rdx,rsi
0x5b86: mov esi,edi
0x5b88: xor edi,edi
0x5b8a: jmp 0x5ae0
0x5b90: sub rsp,0x48
0x5b94: mov ecx,edx
0x5b96: mov rax,qword ptr fs:[rip+0xffffffffffffa489]
0x5b9f: mov qword ptr [rsp + 0x38],rax
0x5ba4: xor eax,eax
0x5ba6: mov rax,qword ptr [rip+0x2096a3]
0x5bad: mov r8,rsp
0x5bb0: and ecx,0x1f
0x5bb3: movdqa xmm0,[rip+0x209665]
0x5bbb: mov qword ptr [rsp + 0x30],rax
0x5bc0: mov eax,edx
0x5bc2: movaps xmmword ptr [rsp],xmm0
0x5bc6: shr al,0x5
0x5bc9: movzx eax,al
0x5bcc: lea r9,[r8 + rax*0x4 + 0x8]
0x5bd1: movdqa xmm0,[rip+0x209657]
0x5bd9: movaps xmmword ptr [rsp + 0x10],xmm0
0x5bde: movdqa xmm0,[rip+0x20965a]
0x5be6: movaps xmmword ptr [rsp + 0x20],xmm0
0x5beb: mov edx,dword ptr [r9]
0x5bee: mov eax,edx
0x5bf0: shr eax,cl
0x5bf2: not eax
0x5bf4: and eax,0x1
0x5bf7: shl eax,cl
0x5bf9: mov rcx,r8
0x5bfc: xor eax,edx
0x5bfe: mov rdx,rsi
0x5c01: mov rsi,rdi
0x5c04: mov dword ptr [r9],eax
0x5c07: xor edi,edi
0x5c09: call 0x5500
0x5c0e: mov rsi,qword ptr [rsp + 0x38]
0x5c13: xor rsi,qword ptr fs:[rip+0xffffffffffffa40c]
0x5c1c: jnz 0x5c23
0x5c1e: add rsp,0x48
0x5c22: ret 
0x5c23: call 0x1ab0
0x5c28: nop dword ptr [rax + rax*0x1]
0x5c30: movsx edx,sil
0x5c34: mov rsi,-0x1
0x5c3b: jmp 0x5b90
0x5c40: mov edx,0x3a
0x5c45: mov rsi,-0x1
0x5c4c: jmp 0x5b90
0x5c60: mov edx,0x3a
0x5c65: jmp 0x5b90
0x5cf4: call 0x1990
0x5cf9: call 0x1ab0
0x5cfe: nop 
0x5d00: sub rsp,0x48
0x5d04: mov r9,rcx
0x5d07: mov rcx,qword ptr [rip+0x209542]
0x5d0e: movdqa xmm0,[rip+0x20950a]
0x5d16: mov rax,qword ptr fs:[rip+0xffffffffffffa309]
0x5d1f: mov qword ptr [rsp + 0x38],rax
0x5d24: xor eax,eax
0x5d26: movaps xmmword ptr [rsp],xmm0
0x5d2a: test rsi,rsi
0x5d2d: mov qword ptr [rsp + 0x30],rcx
0x5d32: mov dword ptr [rsp],0xa
0x5d39: movdqa xmm0,[rip+0x2094ef]
0x5d41: movaps xmmword ptr [rsp + 0x10],xmm0
0x5d46: movdqa xmm0,[rip+0x2094f2]
0x5d4e: movaps xmmword ptr [rsp + 0x20],xmm0
0x5d53: jz 0x5d87
0x5d55: test rdx,rdx
0x5d58: jz 0x5d87
0x5d5a: mov qword ptr [rsp + 0x28],rsi
0x5d5f: mov qword ptr [rsp + 0x30],rdx
0x5d64: mov rcx,rsp
0x5d67: mov rdx,r8
0x5d6a: mov rsi,r9
0x5d6d: call 0x5500
0x5d72: mov rdi,qword ptr [rsp + 0x38]
0x5d77: xor rdi,qword ptr fs:[rip+0xffffffffffffa2a8]
0x5d80: jnz 0x5d8c
0x5d82: add rsp,0x48
0x5d86: ret 
0x5d87: call 0x1990
0x5d8c: call 0x1ab0
0x5d91: nop dword ptr [rax + rax*0x1]
0x5d96: nop word ptr cs:[rax + rax*0x1]
0x5da0: mov r8,-0x1
0x5da7: jmp 0x5d00
0x5db0: mov rcx,rdx
0x5db3: mov r8,-0x1
0x5dba: mov rdx,rsi
0x5dbd: mov rsi,rdi
0x5dc0: xor edi,edi
0x5dc2: jmp 0x5d00
0x5dd0: mov r8,rcx
0x5dd3: mov rcx,rdx
0x5dd6: mov rdx,rsi
0x5dd9: mov rsi,rdi
0x5ddc: xor edi,edi
0x5dde: jmp 0x5d00
0x5df0: lea rcx,[rip+0x209249]
0x5df7: jmp 0x5500
0x5e00: lea rcx,[rip+0x209239]
0x5e07: mov rdx,rsi
0x5e0a: mov rsi,rdi
0x5e0d: xor edi,edi
0x5e0f: jmp 0x5500
0x5e40: lea rcx,[rip+0x2091f9]
0x5e47: mov rsi,rdi
0x5e4a: mov rdx,-0x1
0x5e51: xor edi,edi
0x5e53: jmp 0x5500
0x5ecc: call 0x1ab0
0x5ed1: nop word ptr cs:[rax + rax*0x1]
0x5edb: nop dword ptr [rax + rax*0x1]
0x6018: mov r8,rcx
0x601b: mov rcx,rdx
0x601e: lea rdx,[rip+0x5e2f]
0x6025: mov esi,0x1
0x602a: xor eax,eax
0x602c: call 0x1d60
0x6031: jmp 0x5f1c
0x6300: xor r9d,r9d
0x6303: cmp qword ptr [r8],0x0
0x6307: jz 0x631b
0x6309: nop dword ptr [rax]
0x6310: add r9,0x1
0x6314: cmp qword ptr [r8 + r9*0x8],0x0
0x6319: jnz 0x6310
0x631b: jmp 0x5ee0
0x6320: sub rsp,0x68
0x6324: mov r10,r8
0x6327: xor r9d,r9d
0x632a: mov rax,qword ptr fs:[rip+0xffffffffffff9cf5]
0x6333: mov qword ptr [rsp + 0x58],rax
0x6338: xor eax,eax
0x633a: mov r8,rsp
0x633d: nop dword ptr [rax]
0x6340: mov eax,dword ptr [r10]
0x6343: cmp eax,0x2f
0x6346: ja 0x638a
0x6348: mov r11d,eax
0x634b: add r11,qword ptr [r10 + 0x10]
0x634f: add eax,0x8
0x6352: mov dword ptr [r10],eax
0x6355: mov rax,qword ptr [r11]
0x6358: test rax,rax
0x635b: mov qword ptr [r8 + r9*0x8],rax
0x635f: jz 0x636b
0x6361: add r9,0x1
0x6365: cmp r9,0xa
0x6369: jnz 0x6340
0x636b: call 0x5ee0
0x6370: mov rax,qword ptr [rsp + 0x58]
0x6375: xor rax,qword ptr fs:[rip+0xffffffffffff9caa]
0x637e: jnz 0x6385
0x6380: add rsp,0x68
0x6384: ret 
0x6385: call 0x1ab0
0x638a: mov r11,qword ptr [r10 + 0x8]
0x638e: lea rax,[r11 + 0x8]
0x6392: mov qword ptr [r10 + 0x8],rax
0x6396: jmp 0x6355
0x6460: call 0x1ab0
0x646c: mov rax,rbx
0x646f: add rbx,0x8
0x6473: jmp 0x6426
0x6480: push rbx
0x6481: lea rsi,[rip+0x5a1a]
0x6488: mov edx,0x5
0x648d: xor edi,edi
0x648f: call 0x1a60
0x6494: lea rdx,[rip+0x503b]
0x649b: mov rsi,rax
0x649e: mov edi,0x1
0x64a3: xor eax,eax
0x64a5: call 0x1ca0
0x64aa: lea rsi,[rip+0x5a06]
0x64b1: mov edx,0x5
0x64b6: xor edi,edi
0x64b8: call 0x1a60
0x64bd: lea rcx,[rip+0x4dcc]
0x64c4: lea rdx,[rip+0x44d2]
0x64cb: mov rsi,rax
0x64ce: mov edi,0x1
0x64d3: xor eax,eax
0x64d5: call 0x1ca0
0x64da: mov rbx,qword ptr [rip+0x208bc7]
0x64e1: lea rsi,[rip+0x5c00]
0x64e8: xor edi,edi
0x64ea: mov edx,0x5
0x64ef: call 0x1a60
0x64f4: mov rsi,rbx
0x64f7: mov rdi,rax
0x64fa: pop rbx
0x64fb: jmp 0x1b80
0x655a: nop word ptr [rax + rax*0x1]
0x6560: mov rax,rdi
0x6563: mul rsi
0x6566: mov rdi,rax
0x6569: seto al
0x656c: test rdi,rdi
0x656f: js 0x657b
0x6571: movzx eax,al
0x6574: test rax,rax
0x6577: jnz 0x657b
0x6579: jmp 0x6540
0x657b: sub rsp,0x8
0x657f: call 0x6790
0x6584: nop 
0x6586: nop word ptr cs:[rax + rax*0x1]
0x6590: jmp 0x6540
0x65d6: nop word ptr cs:[rax + rax*0x1]
0x65e0: mov rax,rsi
0x65e3: mul rdx
0x65e6: mov rsi,rax
0x65e9: seto al
0x65ec: test rsi,rsi
0x65ef: js 0x65fb
0x65f1: movzx eax,al
0x65f4: test rax,rax
0x65f7: jnz 0x65fb
0x65f9: jmp 0x65a0
0x65fb: sub rsp,0x8
0x65ff: call 0x6790
0x6604: nop 
0x6606: nop word ptr cs:[rax + rax*0x1]
0x6610: test rdi,rdi
0x6613: mov r9,rdx
0x6616: mov rcx,qword ptr [rsi]
0x6619: jz 0x6650
0x661b: xor edx,edx
0x661d: mov rax,0x5555555555555554
0x6627: div r9
0x662a: cmp rax,rcx
0x662d: jbe 0x666b
0x662f: mov rax,rcx
0x6632: shr rax,1
0x6635: lea rcx,[rax + rcx*0x1 + 0x1]
0x663a: mov qword ptr [rsi],rcx
0x663d: imul rcx,r9
0x6641: mov rsi,rcx
0x6644: jmp 0x65a0
0x6650: test rcx,rcx
0x6653: jz 0x6678
0x6655: mov rax,rcx
0x6658: mul r9
0x665b: seto dl
0x665e: test rax,rax
0x6661: movzx edx,dl
0x6664: js 0x666b
0x6666: test rdx,rdx
0x6669: jz 0x663a
0x666b: sub rsp,0x8
0x666f: call 0x6790
0x6674: nop dword ptr [rax]
0x6678: xor edx,edx
0x667a: mov eax,0x80
0x667f: xor r8d,r8d
0x6682: div r9
0x6685: test rax,rax
0x6688: setz r8b
0x668c: lea rcx,[r8 + rax*0x1]
0x6690: jmp 0x6655
0x66a0: test rdi,rdi
0x66a3: mov rax,qword ptr [rsi]
0x66a6: jz 0x66d0
0x66a8: mov rdx,0x5555555555555553
0x66b2: cmp rax,rdx
0x66b5: ja 0x66e1
0x66b7: mov rdx,rax
0x66ba: shr rdx,1
0x66bd: lea rax,[rdx + rax*0x1 + 0x1]
0x66c2: mov qword ptr [rsi],rax
0x66c5: mov rsi,rax
0x66c8: jmp 0x65a0
0x66d0: test rax,rax
0x66d3: mov edx,0x80
0x66d8: cmovz rax,rdx
0x66dc: test rax,rax
0x66df: jns 0x66c2
0x66e1: sub rsp,0x8
0x66e5: call 0x6790
0x66ea: nop word ptr [rax + rax*0x1]
0x66f0: push rbx
0x66f1: mov rbx,rdi
0x66f4: call 0x6540
0x66f9: mov rdx,rbx
0x66fc: xor esi,esi
0x66fe: mov rdi,rax
0x6701: pop rbx
0x6702: jmp 0x1b30
0x6710: mov rax,rdi
0x6713: sub rsp,0x8
0x6717: mul rsi
0x671a: seto dl
0x671d: test rax,rax
0x6720: js 0x6739
0x6722: movzx edx,dl
0x6725: test rdx,rdx
0x6728: jnz 0x6739
0x672a: call 0x1b90
0x672f: test rax,rax
0x6732: jz 0x6739
0x6734: add rsp,0x8
0x6738: ret 
0x6739: call 0x6790
0x673e: nop 
0x6740: push rbp
0x6741: push rbx
0x6742: mov rbp,rdi
0x6745: mov rdi,rsi
0x6748: mov rbx,rsi
0x674b: sub rsp,0x8
0x674f: call 0x6540
0x6754: add rsp,0x8
0x6758: mov rdx,rbx
0x675b: mov rsi,rbp
0x675e: pop rbx
0x675f: pop rbp
0x6760: mov rdi,rax
0x6763: jmp 0x1be0
0x6770: push rbx
0x6771: mov rbx,rdi
0x6774: call 0x1a80
0x6779: mov rdi,rbx
0x677c: lea rsi,[rax + 0x1]
0x6780: pop rbx
0x6781: jmp 0x6740
0x67c0: call 0x1990
0x67c5: nop word ptr cs:[rax + rax*0x1]
0x67cf: nop 
0x67ff: nop 
0x681f: nop 
0x6820: mov edx,dword ptr [rdi + 0x48]
0x6823: mov eax,0x1
0x6828: and edx,0x11
0x682b: cmp edx,0x10
0x682e: jz 0x6837
0x6830: xor eax,eax
0x6832: cmp edx,0x11
0x6835: jz 0x6840
0x6837: ret 
0x6840: cmp qword ptr [rsi + 0x58],0x0
0x6845: setnz al
0x6848: ret 
0x68e2: call 0x1ab0
0x68e7: nop word ptr [rax + rax*0x1]
0x68f0: test rdi,rdi
0x68f3: push rbx
0x68f4: mov rbx,rdi
0x68f7: jz 0x690a
0x68f9: call 0x1c60
0x68fe: test eax,eax
0x6900: jz 0x690a
0x6902: test dword ptr [rbx],0x100
0x6908: jnz 0x6918
0x690a: mov rdi,rbx
0x690d: pop rbx
0x690e: jmp 0x1c30
0x6918: mov rdi,rbx
0x691b: mov edx,0x1
0x6920: xor esi,esi
0x6922: call 0x6960
0x6927: mov rdi,rbx
0x692a: pop rbx
0x692b: jmp 0x1c30
0x6930: xor eax,eax
0x6932: mov rcx,qword ptr [rdi + 0x20]
0x6936: cmp qword ptr [rdi + 0x28],rcx
0x693a: ja 0x6957
0x693c: mov rax,qword ptr [rdi + 0x10]
0x6940: sub rax,qword ptr [rdi + 0x8]
0x6944: test dword ptr [rdi],0x100
0x694a: jz 0x6957
0x694c: mov rdx,qword ptr [rdi + 0x58]
0x6950: sub rdx,qword ptr [rdi + 0x48]
0x6954: add rax,rdx
0x6957: ret 
0x6960: mov rax,qword ptr [rdi + 0x8]
0x6964: cmp qword ptr [rdi + 0x10],rax
0x6968: jz 0x6970
0x696a: jmp 0x1cf0
0x6970: mov rax,qword ptr [rdi + 0x20]
0x6974: cmp qword ptr [rdi + 0x28],rax
0x6978: jnz 0x696a
0x697a: cmp qword ptr [rdi + 0x48],0x0
0x697f: jnz 0x696a
0x6981: push r12
0x6983: push rbp
0x6984: mov r12d,edx
0x6987: push rbx
0x6988: mov rbp,rsi
0x698b: mov rbx,rdi
0x698e: call 0x1bf0
0x6993: mov edx,r12d
0x6996: mov rsi,rbp
0x6999: mov edi,eax
0x699b: call 0x1b10
0x69a0: cmp rax,-0x1
0x69a4: jz 0x69b2
0x69a6: and dword ptr [rbx],0xffffffef
0x69a9: mov qword ptr [0x90 + rbx],rax
0x69b0: xor eax,eax
0x69b2: pop rbx
0x69b3: pop rbp
0x69b4: pop r12
0x69b6: ret 
0x69c0: xor eax,eax
0x69c2: mov rdx,qword ptr [rsi + 0x8]
0x69c6: cmp qword ptr [rdi + 0x8],rdx
0x69ca: jz 0x69d0
0x69cc: ret 
0x69d0: mov rax,qword ptr [rsi]
0x69d3: cmp qword ptr [rdi],rax
0x69d6: setz al
0x69d9: ret 
0x69e0: mov rax,qword ptr [rdi + 0x8]
0x69e4: xor edx,edx
0x69e6: div rsi
0x69e9: mov rax,rdx
0x69ec: ret 
0x6a10: mov rdx,qword ptr [rdi]
0x6a13: mov rax,qword ptr [rsi]
0x6a16: mov rax,qword ptr [0x80 + rax]
0x6a1d: cmp qword ptr [0x80 + rdx],rax
0x6a24: jc 0x6a30
0x6a26: seta al
0x6a29: movzx eax,al
0x6a2c: ret 
0x6a30: mov eax,0xffffffff
0x6a35: ret 
0x6f62: call 0x1ab0
0x6f6c: nop dword ptr [rax]
0x7046: nop word ptr cs:[rax + rax*0x1]
0x7425: call 0x1ab0
0x75ae: call 0x1ab0
0x75b8: nop dword ptr [rax + rax*0x1]
0x7619: mov qword ptr [rsp + 0x38],-0x1
0x7703: test ah,0x4
0x7706: jz 0x7a08
0x793e: sub rdx,qword ptr [rax + 0x38]
0x7942: add rdx,rcx
0x7945: mov qword ptr [rax + 0x30],rdx
0x7960: mov rax,qword ptr [r13 + 0x38]
0x7964: mov rdi,qword ptr [rsp + 0x40]
0x7969: mov qword ptr [r13 + 0x30],rax
0x796d: mov rax,qword ptr [r13 + 0x60]
0x7971: lea rdx,[rax + 0x1]
0x7975: call 0x1cc0
0x797a: mov eax,dword ptr [r15 + 0x48]
0x797e: jmp 0x76fc
0x7a08: xor edx,edx
0x7a0a: mov rsi,r13
0x7a0d: mov rdi,r15
0x7a10: call 0x6a40
0x7a15: mov word ptr [r13 + 0x70],ax
0x7a1a: jmp 0x7751
0x7c7d: mov rax,qword ptr [rsp + 0x18]
0x7c82: cmp qword ptr [r15 + 0x30],rax
0x7c86: jz 0x7c8d
0x7c88: test rbx,rbx
0x7c8b: jnz 0x7c93
0x7c8d: sub qword ptr [rsp + 0x40],0x1
0x7c93: mov rax,qword ptr [rsp + 0x40]
0x7c98: mov byte ptr [rax],0x0
0x7ccc: cmp rbx,0x1
0x7cd0: jz 0x7b85
0x7cd6: mov rsi,qword ptr [rsp + 0x10]
0x7cdb: mov rdx,rbx
0x7cde: mov rdi,r15
0x7ce1: call 0x6c10
0x7ce6: mov qword ptr [rsp + 0x10],rax
0x7ceb: jmp 0x7b85
0x7d4d: test rbx,rbx
0x7d50: mov dword ptr [rbp + 0x40],eax
0x7d53: jnz 0x7e89
0x7d59: cmp qword ptr [rsp + 0x50],0x0
0x7d5f: mov eax,0x4
0x7d64: jnz 0x7e89
0x7d6a: mov word ptr [rbp + 0x70],ax
0x7e89: mov eax,0x7
0x7e8e: jmp 0x7d6a
0x7f71: call 0x1ab0
0x80b0: mov eax,dword ptr [rbx + 0x48]
0x80b3: shr eax,0xa
0x80b6: and eax,0x1
0x80b9: mov byte ptr [rsp + 0x16],al
0x81b5: cmp rbp,0x1
0x81b9: jbe 0x81cc
0x81bb: mov rsi,r12
0x81be: mov rdx,rbp
0x81c1: mov rdi,rbx
0x81c4: call 0x6c10
0x81c9: mov r12,rax
0x821d: mov edi,dword ptr [rbx + 0x2c]
0x8220: lea rdx,[rip+0x3298]
0x8227: call 0x7190
0x822c: test eax,eax
0x822e: mov dword ptr [rbx + 0x28],eax
0x8231: jns 0x8240
0x8233: or dword ptr [rbx + 0x48],0x4
0x8237: nop word ptr [rax + rax*0x1]
0x8260: mov rdi,qword ptr [r13]
0x8264: mov eax,ebp
0x8266: mov dword ptr [rbx + 0x2c],0xffffff9c
0x826d: and ah,0xfd
0x8270: or eax,0x4
0x8273: test rdi,rdi
0x8276: mov dword ptr [rbx + 0x48],eax
0x8279: jnz 0x801e
0x8338: call 0x19a0
0x833d: xor ebx,ebx
0x833f: mov dword ptr [rax],0x16
0x8345: jmp 0x824e
0x86d4: nop dword ptr [rax]
0x8c70: sub rsp,0x8
0x8c74: call 0x19a0
0x8c79: mov dword ptr [rax],0x16
0x8c7f: mov eax,0x1
0x8c84: add rsp,0x8
0x8c88: ret 
0x8c90: push r14
0x8c92: push r13
0x8c94: push r12
0x8c96: push rbp
0x8c97: mov r12d,esi
0x8c9a: push rbx
0x8c9b: mov rbx,rdi
0x8c9e: call 0x19a0
0x8ca3: test r12d,0xffffefff
0x8caa: mov r13,rax
0x8cad: jnz 0x8d98
0x8cb3: mov rbp,qword ptr [rbx]
0x8cb6: mov dword ptr [rax],0x0
0x8cbc: test byte ptr [rbx + 0x49],0x20
0x8cc0: jnz 0x8d40
0x8cc2: movzx eax,word ptr [rbp + 0x70]
0x8cc6: cmp ax,0x9
0x8cca: jz 0x8d30
0x8ccc: cmp ax,0x1
0x8cd0: jnz 0x8d40
0x8cd2: mov rdi,qword ptr [rbx + 0x8]
0x8cd6: test rdi,rdi
0x8cd9: jz 0x8ce0
0x8cdb: call 0x6db0
0x8ce0: cmp r12d,0x1000
0x8ce7: mov r14d,0x1
0x8ced: jnz 0x8cfc
0x8cef: or dword ptr [rbx + 0x48],0x1000
0x8cf6: mov r14d,0x2
0x8cfc: cmp qword ptr [rbp + 0x58],0x0
0x8d01: jnz 0x8d15
0x8d03: mov rax,qword ptr [rbp + 0x30]
0x8d07: cmp byte ptr [rax],0x2f
0x8d0a: jz 0x8d15
0x8d0c: mov esi,dword ptr [rbx + 0x48]
0x8d0f: test sil,0x4
0x8d13: jz 0x8d50
0x8d15: mov esi,r14d
0x8d18: mov rdi,rbx
0x8d1b: call 0x75c0
0x8d20: mov qword ptr [rbx + 0x8],rax
0x8d24: pop rbx
0x8d25: pop rbp
0x8d26: pop r12
0x8d28: pop r13
0x8d2a: pop r14
0x8d2c: ret 
0x8d30: pop rbx
0x8d31: mov rax,qword ptr [rbp + 0x10]
0x8d35: pop rbp
0x8d36: pop r12
0x8d38: pop r13
0x8d3a: pop r14
0x8d3c: ret 
0x8d40: pop rbx
0x8d41: xor eax,eax
0x8d43: pop rbp
0x8d44: pop r12
0x8d46: pop r13
0x8d48: pop r14
0x8d4a: ret 
0x8d50: mov edi,dword ptr [rbx + 0x2c]
0x8d53: lea rdx,[rip+0x2765]
0x8d5a: call 0x7190
0x8d5f: test eax,eax
0x8d61: mov ebp,eax
0x8d63: js 0x8db9
0x8d65: mov esi,r14d
0x8d68: mov rdi,rbx
0x8d6b: call 0x75c0
0x8d70: test byte ptr [rbx + 0x49],0x2
0x8d74: mov qword ptr [rbx + 0x8],rax
0x8d78: jnz 0x8da8
0x8d7a: mov edi,ebp
0x8d7c: call 0x1c70
0x8d81: test eax,eax
0x8d83: jnz 0x8dc8
0x8d85: mov edi,ebp
0x8d87: call 0x1b50
0x8d8c: mov rax,qword ptr [rbx + 0x8]
0x8d90: jmp 0x8d24
0x8d98: mov dword ptr [rax],0x16
0x8d9e: xor eax,eax
0x8da0: jmp 0x8d24
0x8da8: mov edx,0x1
0x8dad: mov esi,ebp
0x8daf: mov rdi,rbx
0x8db2: call 0x6fe0
0x8db7: jmp 0x8d8c
0x8db9: mov qword ptr [rbx + 0x8],0x0
0x8dc1: xor eax,eax
0x8dc3: jmp 0x8d24
0x8dc8: mov ebx,dword ptr [r13]
0x8dcc: mov edi,ebp
0x8dce: call 0x1b50
0x8dd3: xor eax,eax
0x8dd5: mov dword ptr [r13],ebx
0x8dd9: jmp 0x8d24
0x8e5e: call 0x1ab0
0x8e63: nop word ptr cs:[rax + rax*0x1]
0x8e6d: nop dword ptr [rax]
0x8e70: push r12
0x8e72: push rbp
0x8e73: mov rbp,rdi
0x8e76: push rbx
0x8e77: call 0x19d0
0x8e7c: mov ebx,dword ptr [rbp]
0x8e7f: mov rdi,rbp
0x8e82: mov r12,rax
0x8e85: call 0xa560
0x8e8a: and ebx,0x20
0x8e8d: test ebx,ebx
0x8e8f: jnz 0x8ea8
0x8e91: test eax,eax
0x8e93: jz 0x8e9f
0x8e95: test r12,r12
0x8e98: mov eax,0xffffffff
0x8e9d: jz 0x8ed8
0x8e9f: pop rbx
0x8ea0: pop rbp
0x8ea1: pop r12
0x8ea3: ret 
0x8ea8: test eax,eax
0x8eaa: jnz 0x8ec8
0x8eac: call 0x19a0
0x8eb1: mov dword ptr [rax],0x0
0x8eb7: mov eax,0xffffffff
0x8ebc: pop rbx
0x8ebd: pop rbp
0x8ebe: pop r12
0x8ec0: ret 
0x8ec8: pop rbx
0x8ec9: mov eax,0xffffffff
0x8ece: pop rbp
0x8ecf: pop r12
0x8ed1: ret 
0x8ed8: call 0x19a0
0x8edd: cmp dword ptr [rax],0x9
0x8ee0: pop rbx
0x8ee1: pop rbp
0x8ee2: pop r12
0x8ee4: setnz al
0x8ee7: movzx eax,al
0x8eea: neg eax
0x8eec: ret 
0x8f8a: nop word ptr [rax + rax*0x1]
0x8fd8: lea rax,[rsp + 0x60]
0x8fdd: mov dword ptr [rsp],0x10
0x8fe4: mov edx,dword ptr [rsp + 0x30]
0x8fe8: mov qword ptr [rsp + 0x8],rax
0x8fed: lea rax,[rsp + 0x20]
0x8ff2: mov qword ptr [rsp + 0x10],rax
0x8ff7: jmp 0x8fb1
0x8ff9: call 0x1ab0
0x8ffe: nop 
0x9100: mov rax,rdi
0x9103: xor edx,edx
0x9105: ror rax,0x3
0x9109: div rsi
0x910c: mov rax,rdx
0x910f: ret 
0x9110: cmp rdi,rsi
0x9113: setz al
0x9116: ret 
0x9142: nop dword ptr [rax]
0x9146: nop word ptr cs:[rax + rax*0x1]
0x9430: mov rax,qword ptr [rdi + 0x10]
0x9434: ret 
0x9440: mov rax,qword ptr [rdi + 0x18]
0x9444: ret 
0x9450: mov rax,qword ptr [rdi + 0x20]
0x9454: ret 
0x9460: mov rsi,qword ptr [rdi]
0x9463: mov rdi,qword ptr [rdi + 0x8]
0x9467: xor eax,eax
0x9469: cmp rsi,rdi
0x946c: jnc 0x94a7
0x946e: nop 
0x9470: cmp qword ptr [rsi],0x0
0x9474: jz 0x949c
0x9476: mov rdx,qword ptr [rsi + 0x8]
0x947a: mov ecx,0x1
0x947f: test rdx,rdx
0x9482: jz 0x9495
0x9484: nop dword ptr [rax]
0x9488: mov rdx,qword ptr [rdx + 0x8]
0x948c: add rcx,0x1
0x9490: test rdx,rdx
0x9493: jnz 0x9488
0x9495: cmp rax,rcx
0x9498: cmovc rax,rcx
0x949c: add rsi,0x10
0x94a0: cmp rsi,rdi
0x94a3: jc 0x9470
0x94a5: ret 
0x94a7: ret 
0x94b0: mov rcx,qword ptr [rdi]
0x94b3: mov r8,qword ptr [rdi + 0x8]
0x94b7: xor edx,edx
0x94b9: xor esi,esi
0x94bb: cmp rcx,r8
0x94be: jnc 0x94f6
0x94c0: cmp qword ptr [rcx],0x0
0x94c4: jz 0x94ed
0x94c6: mov rax,qword ptr [rcx + 0x8]
0x94ca: add rsi,0x1
0x94ce: add rdx,0x1
0x94d2: test rax,rax
0x94d5: jz 0x94ed
0x94d7: nop word ptr [rax + rax*0x1]
0x94e0: mov rax,qword ptr [rax + 0x8]
0x94e4: add rdx,0x1
0x94e8: test rax,rax
0x94eb: jnz 0x94e0
0x94ed: add rcx,0x10
0x94f1: cmp rcx,r8
0x94f4: jc 0x94c0
0x94f6: xor eax,eax
0x94f8: cmp qword ptr [rdi + 0x18],rsi
0x94fc: jz 0x9500
0x94fe: ret 
0x9500: cmp qword ptr [rdi + 0x20],rdx
0x9504: setz al
0x9507: ret 
0x9510: push r13
0x9512: push r12
0x9514: mov r12,rsi
0x9517: push rbp
0x9518: push rbx
0x9519: xor ebx,ebx
0x951b: sub rsp,0x8
0x951f: mov rsi,qword ptr [rdi]
0x9522: mov rcx,qword ptr [rdi + 0x20]
0x9526: mov rbp,qword ptr [rdi + 0x10]
0x952a: mov r13,qword ptr [rdi + 0x18]
0x952e: mov rdi,qword ptr [rdi + 0x8]
0x9532: cmp rsi,rdi
0x9535: jnc 0x9575
0x9537: nop word ptr [rax + rax*0x1]
0x9540: cmp qword ptr [rsi],0x0
0x9544: jz 0x956c
0x9546: mov rax,qword ptr [rsi + 0x8]
0x954a: mov edx,0x1
0x954f: test rax,rax
0x9552: jz 0x9565
0x9554: nop dword ptr [rax]
0x9558: mov rax,qword ptr [rax + 0x8]
0x955c: add rdx,0x1
0x9560: test rax,rax
0x9563: jnz 0x9558
0x9565: cmp rbx,rdx
0x9568: cmovc rbx,rdx
0x956c: add rsi,0x10
0x9570: cmp rsi,rdi
0x9573: jc 0x9540
0x9575: lea rdx,[rip+0x2ce8]
0x957c: mov esi,0x1
0x9581: mov rdi,r12
0x9584: xor eax,eax
0x9586: call 0x1d60
0x958b: lea rdx,[rip+0x2cea]
0x9592: xor eax,eax
0x9594: mov rcx,rbp
0x9597: mov esi,0x1
0x959c: mov rdi,r12
0x959f: call 0x1d60
0x95a4: test r13,r13
0x95a7: js 0x9610
0x95a9: pxor xmm0,xmm0
0x95ad: test rbp,rbp
0x95b0: cvtsi2sd xmm0,r13
0x95b5: mulsd xmm0,qword ptr [rip+0x2d5b]
0x95bd: js 0x9639
0x95bf: pxor xmm1,xmm1
0x95c3: cvtsi2sd xmm1,rbp
0x95c8: divsd xmm0,xmm1
0x95cc: lea rdx,[rip+0x2cdd]
0x95d3: mov rcx,r13
0x95d6: mov rdi,r12
0x95d9: mov esi,0x1
0x95de: mov eax,0x1
0x95e3: call 0x1d60
0x95e8: add rsp,0x8
0x95ec: mov rcx,rbx
0x95ef: mov rdi,r12
0x95f2: pop rbx
0x95f3: pop rbp
0x95f4: pop r12
0x95f6: pop r13
0x95f8: lea rdx,[rip+0x2c95]
0x95ff: mov esi,0x1
0x9604: xor eax,eax
0x9606: jmp 0x1d60
0x9610: mov rax,r13
0x9613: mov rdx,r13
0x9616: pxor xmm0,xmm0
0x961a: shr rax,1
0x961d: and edx,0x1
0x9620: or rax,rdx
0x9623: test rbp,rbp
0x9626: cvtsi2sd xmm0,rax
0x962b: addsd xmm0,xmm0
0x962f: mulsd xmm0,qword ptr [rip+0x2ce1]
0x9637: jns 0x95bf
0x9639: mov rax,rbp
0x963c: pxor xmm1,xmm1
0x9640: shr rax,1
0x9643: and ebp,0x1
0x9646: or rax,rbp
0x9649: cvtsi2sd xmm1,rax
0x964e: addsd xmm1,xmm1
0x9652: jmp 0x95c8
0x9680: mov rsi,qword ptr [rbx]
0x9690: test al,al
0x9692: jnz 0x96b0
0x9694: mov rbx,qword ptr [rbx + 0x8]
0x9698: test rbx,rbx
0x969b: jnz 0x9680
0x96b0: mov rsi,qword ptr [rbx]
0x96b3: pop rbx
0x96b4: pop rbp
0x96b5: mov rax,rsi
0x96b8: pop r12
0x96ba: ret 
0x96c0: cmp qword ptr [rdi + 0x20],0x0
0x96c5: jz 0x96f3
0x96c7: mov rdx,qword ptr [rdi]
0x96ca: mov rcx,qword ptr [rdi + 0x8]
0x96ce: cmp rdx,rcx
0x96d1: jnc 0x96f8
0x96d3: mov rax,qword ptr [rdx]
0x96d6: test rax,rax
0x96d9: jnz 0x96f6
0x96db: nop dword ptr [rax + rax*0x1]
0x96e0: add rdx,0x10
0x96e4: cmp rdx,rcx
0x96e7: jnc 0x96f8
0x96e9: mov rax,qword ptr [rdx]
0x96ec: test rax,rax
0x96ef: jz 0x96e0
0x96f1: ret 
0x96f3: xor eax,eax
0x96f5: ret 
0x96f6: ret 
0x96f8: sub rsp,0x8
0x96fc: call 0x1990
0x9701: nop dword ptr [rax + rax*0x1]
0x9706: nop word ptr cs:[rax + rax*0x1]
0x9710: push rbp
0x9711: push rbx
0x9712: mov rbp,rdi
0x9715: mov rbx,rsi
0x9718: sub rsp,0x8
0x971c: call 0x9120
0x9721: mov rdx,rax
0x9724: mov rcx,rax
0x9727: mov rax,qword ptr [rdx]
0x972a: mov rdx,qword ptr [rdx + 0x8]
0x972e: cmp rax,rbx
0x9731: jz 0x9749
0x9733: nop dword ptr [rax + rax*0x1]
0x9738: test rdx,rdx
0x973b: jz 0x974e
0x973d: mov rax,qword ptr [rdx]
0x9740: mov rdx,qword ptr [rdx + 0x8]
0x9744: cmp rax,rbx
0x9747: jnz 0x9738
0x9749: test rdx,rdx
0x974c: jnz 0x9778
0x974e: mov rdx,qword ptr [rbp + 0x8]
0x9752: jmp 0x9760
0x9758: mov rax,qword ptr [rcx]
0x975b: test rax,rax
0x975e: jnz 0x976b
0x9760: add rcx,0x10
0x9764: cmp rdx,rcx
0x9767: ja 0x9758
0x9769: xor eax,eax
0x976b: add rsp,0x8
0x976f: pop rbx
0x9770: pop rbp
0x9771: ret 
0x9778: mov rax,qword ptr [rdx]
0x977b: add rsp,0x8
0x977f: pop rbx
0x9780: pop rbp
0x9781: ret 
0x9790: mov r9,qword ptr [rdi]
0x9793: cmp qword ptr [rdi + 0x8],r9
0x9797: jbe 0x97f2
0x9799: xor r8d,r8d
0x979c: mov rcx,qword ptr [r9]
0x979f: test rcx,rcx
0x97a2: jz 0x97dd
0x97a4: cmp rdx,r8
0x97a7: jbe 0x97e7
0x97a9: mov qword ptr [rsi + r8*0x8],rcx
0x97ad: mov rcx,qword ptr [r9 + 0x8]
0x97b1: lea rax,[r8 + 0x1]
0x97b5: test rcx,rcx
0x97b8: jz 0x97da
0x97ba: nop word ptr [rax + rax*0x1]
0x97c0: cmp rdx,rax
0x97c3: jz 0x97f0
0x97c5: mov r8,qword ptr [rcx]
0x97c8: add rax,0x1
0x97cc: mov qword ptr [rsi + rax*0x8 - 0x8],r8
0x97d1: mov rcx,qword ptr [rcx + 0x8]
0x97d5: test rcx,rcx
0x97d8: jnz 0x97c0
0x97da: mov r8,rax
0x97dd: add r9,0x10
0x97e1: cmp qword ptr [rdi + 0x8],r9
0x97e5: ja 0x979c
0x97e7: mov rax,r8
0x97ea: ret 
0x97f0: ret 
0x97f2: xor eax,eax
0x97f4: ret 
0x9800: push r15
0x9802: push r14
0x9804: push r13
0x9806: push r12
0x9808: push rbp
0x9809: push rbx
0x980a: sub rsp,0x8
0x980e: mov r14,qword ptr [rdi]
0x9811: cmp qword ptr [rdi + 0x8],r14
0x9815: jbe 0x9866
0x9817: mov r13,rdx
0x981a: mov r12,rsi
0x981d: mov r15,rdi
0x9820: xor ebp,ebp
0x9822: mov rdi,qword ptr [r14]
0x9825: test rdi,rdi
0x9828: jz 0x984a
0x982a: mov rbx,r14
0x982d: jmp 0x9833
0x9830: mov rdi,qword ptr [rbx]
0x9833: mov rsi,r13
0x9836: call r12
0x9839: test al,al
0x983b: jz 0x9854
0x983d: mov rbx,qword ptr [rbx + 0x8]
0x9841: add rbp,0x1
0x9845: test rbx,rbx
0x9848: jnz 0x9830
0x984a: add r14,0x10
0x984e: cmp qword ptr [r15 + 0x8],r14
0x9852: ja 0x9822
0x9854: add rsp,0x8
0x9858: mov rax,rbp
0x985b: pop rbx
0x985c: pop rbp
0x985d: pop r12
0x985f: pop r13
0x9861: pop r14
0x9863: pop r15
0x9865: ret 
0x9866: xor ebp,ebp
0x9868: jmp 0x9854
0x9870: movzx ecx,byte ptr [rdi]
0x9873: xor edx,edx
0x9875: test cl,cl
0x9877: jz 0x989d
0x9879: nop dword ptr [rax]
0x9880: mov rax,rdx
0x9883: add rdi,0x1
0x9887: shl rax,0x5
0x988b: sub rax,rdx
0x988e: xor edx,edx
0x9890: add rax,rcx
0x9893: movzx ecx,byte ptr [rdi]
0x9896: div rsi
0x9899: test cl,cl
0x989b: jnz 0x9880
0x989d: mov rax,rdx
0x98a0: ret 
0x98b0: mov rax,0x3f80000000000000
0x98ba: mov byte ptr [rdi + 0x10],0x0
0x98be: mov qword ptr [rdi],rax
0x98c1: mov rax,0x3fb4fdf43f4ccccd
0x98cb: mov qword ptr [rdi + 0x8],rax
0x98cf: ret 
0x992c: mov qword ptr [rax + 0x28],r15
0x9930: call 0x9270
0x9935: test al,al
0x9937: jz 0x99c0
0x993d: cmp byte ptr [r15 + 0x10],0x0
0x9942: jz 0x9a40
0x9a40: test rbp,rbp
0x9a43: movss xmm1,dword ptr [r15 + 0x8]
0x9a49: jns 0x9a01
0x9a90: push r12
0x9a92: push rbp
0x9a93: mov rbp,rdi
0x9a96: push rbx
0x9a97: mov r12,qword ptr [rdi]
0x9a9a: cmp r12,qword ptr [rdi + 0x8]
0x9a9e: jnc 0x9b0b
0x9aa0: cmp qword ptr [r12],0x0
0x9aa5: jz 0x9b01
0x9aa7: mov rbx,qword ptr [r12 + 0x8]
0x9aac: mov rax,qword ptr [rbp + 0x40]
0x9ab0: test rbx,rbx
0x9ab3: jz 0x9ae5
0x9ab5: nop dword ptr [rax]
0x9ab8: test rax,rax
0x9abb: jz 0x9ac6
0x9abd: mov rdi,qword ptr [rbx]
0x9ac0: call rax
0x9ac2: mov rax,qword ptr [rbp + 0x40]
0x9ac6: mov rdx,qword ptr [rbx + 0x8]
0x9aca: mov rcx,qword ptr [rbp + 0x48]
0x9ace: mov qword ptr [rbx],0x0
0x9ad5: test rdx,rdx
0x9ad8: mov qword ptr [rbx + 0x8],rcx
0x9adc: mov qword ptr [rbp + 0x48],rbx
0x9ae0: mov rbx,rdx
0x9ae3: jnz 0x9ab8
0x9ae5: test rax,rax
0x9ae8: jz 0x9af0
0x9aea: mov rdi,qword ptr [r12]
0x9aee: call rax
0x9af0: mov qword ptr [r12],0x0
0x9af8: mov qword ptr [r12 + 0x8],0x0
0x9b01: add r12,0x10
0x9b05: cmp qword ptr [rbp + 0x8],r12
0x9b09: ja 0x9aa0
0x9b0b: mov qword ptr [rbp + 0x18],0x0
0x9b13: mov qword ptr [rbp + 0x20],0x0
0x9b1b: pop rbx
0x9b1c: pop rbp
0x9b1d: pop r12
0x9b1f: ret 
0x9b60: mov rdi,qword ptr [rbx]
0x9b68: mov rbx,qword ptr [rbx + 0x8]
0x9b6c: test rbx,rbx
0x9b6f: jnz 0x9b60
0x9b71: mov rax,qword ptr [r12 + 0x8]
0x9e2a: call 0x1ab0
0x9e3e: nop 
0xa022: nop word ptr [rax + rax*0x1]
0xa0bf: call 0x1ab0
0xa0c4: nop 
0xa0c6: nop word ptr cs:[rax + rax*0x1]
0xa124: call 0x1ab0
0xa129: nop dword ptr [rax]
0xa32e: call 0x1ab0
0xa333: nop word ptr cs:[rax + rax*0x1]
0xa33d: nop dword ptr [rax]
0xa3ee: nop 
0xa478: lea rax,[rsp + 0x60]
0xa47d: mov dword ptr [rsp],0x18
0xa484: mov ecx,dword ptr [rsp + 0x38]
0xa488: mov qword ptr [rsp + 0x8],rax
0xa48d: lea rax,[rsp + 0x20]
0xa492: mov qword ptr [rsp + 0x10],rax
0xa497: jmp 0xa450
0xa499: call 0x1ab0
0xa49e: nop 
0xa560: push r12
0xa562: push rbp
0xa563: push rbx
0xa564: mov rbx,rdi
0xa567: call 0x1bf0
0xa56c: test eax,eax
0xa56e: mov rdi,rbx
0xa571: js 0xa5c7
0xa573: call 0x1c60
0xa578: test eax,eax
0xa57a: jnz 0xa5a8
0xa57c: mov rdi,rbx
0xa57f: call 0x68f0
0xa584: test eax,eax
0xa586: jz 0xa5c4
0xa588: call 0x19a0
0xa58d: mov r12d,dword ptr [rax]
0xa590: mov rdi,rbx
0xa593: mov rbp,rax
0xa596: call 0x1a40
0xa59b: test r12d,r12d
0xa59e: jnz 0xa5d0
0xa5a0: pop rbx
0xa5a1: pop rbp
0xa5a2: pop r12
0xa5a4: ret 
0xa5a8: mov rdi,rbx
0xa5ab: call 0x1bf0
0xa5b0: xor esi,esi
0xa5b2: mov edx,0x1
0xa5b7: mov edi,eax
0xa5b9: call 0x1b10
0xa5be: cmp rax,-0x1
0xa5c2: jnz 0xa57c
0xa5c4: mov rdi,rbx
0xa5c7: pop rbx
0xa5c8: pop rbp
0xa5c9: pop r12
0xa5cb: jmp 0x1a40
0xa5d0: mov dword ptr [rbp],r12d
0xa5d4: mov eax,0xffffffff
0xa5d9: jmp 0xa5a0
0xa82d: call 0x1ab0
0xa870: push r15
0xa872: push r14
0xa874: mov r15,rdx
0xa877: push r13
0xa879: push r12
0xa87b: lea r12,[rip+0x20410e]
0xa882: push rbp
0xa883: lea rbp,[rip+0x20410e]
0xa88a: push rbx
0xa88b: mov r13d,edi
0xa88e: mov r14,rsi
0xa891: sub rbp,r12
0xa894: sub rsp,0x8
0xa898: sar rbp,0x3
0xa89c: call 0x1960
0xa8a1: test rbp,rbp
0xa8a4: jz 0xa8c6
0xa8a6: xor ebx,ebx
0xa8a8: nop dword ptr [rax + rax*0x1]
0xa8b0: mov rdx,r15
0xa8b3: mov rsi,r14
0xa8b6: mov edi,r13d
0xa8b9: call qword ptr [r12 + rbx*0x8]
0xa8bd: add rbx,0x1
0xa8c1: cmp rbp,rbx
0xa8c4: jnz 0xa8b0
0xa8c6: add rsp,0x8
0xa8ca: pop rbx
0xa8cb: pop rbp
0xa8cc: pop r12
0xa8ce: pop r13
0xa8d0: pop r14
0xa8d2: pop r15
0xa8d4: ret 
0xa8e0: ret 
0xa900: sub rsp,0x8
0xa904: add rsp,0x8
0xa908: ret 
