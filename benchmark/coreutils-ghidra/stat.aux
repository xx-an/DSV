0x1cb8: sub rsp,0x8
0x1cbc: mov rax,qword ptr [rip+0x211315]
0x1cc3: test rax,rax
0x1cc6: jz 0x1cca
0x1cc8: call rax
0x1cca: add rsp,0x8
0x1cce: ret 
0x1cd0: push qword ptr [rip+0x21103a]
0x1cd6: jmp qword ptr [rip+0x21103c]
0x1ce6: push 0x0
0x1ceb: jmp 0x1cd0
0x1cf6: push 0x1
0x1cfb: jmp 0x1cd0
0x1d06: push 0x2
0x1d0b: jmp 0x1cd0
0x1d16: push 0x3
0x1d1b: jmp 0x1cd0
0x1d26: push 0x4
0x1d2b: jmp 0x1cd0
0x1d36: push 0x5
0x1d3b: jmp 0x1cd0
0x1d46: push 0x6
0x1d4b: jmp 0x1cd0
0x1d56: push 0x7
0x1d5b: jmp 0x1cd0
0x1d66: push 0x8
0x1d6b: jmp 0x1cd0
0x1d70: jmp qword ptr [rip+0x210ff2]
0x1d76: push 0x9
0x1d7b: jmp 0x1cd0
0x1d86: push 0xa
0x1d8b: jmp 0x1cd0
0x1d90: jmp qword ptr [rip+0x210fe2]
0x1d96: push 0xb
0x1d9b: jmp 0x1cd0
0x1da6: push 0xc
0x1dab: jmp 0x1cd0
0x1db6: push 0xd
0x1dbb: jmp 0x1cd0
0x1dc6: push 0xe
0x1dcb: jmp 0x1cd0
0x1dd6: push 0xf
0x1ddb: jmp 0x1cd0
0x1de6: push 0x10
0x1deb: jmp 0x1cd0
0x1df6: push 0x11
0x1dfb: jmp 0x1cd0
0x1e06: push 0x12
0x1e0b: jmp 0x1cd0
0x1e16: push 0x13
0x1e1b: jmp 0x1cd0
0x1e26: push 0x14
0x1e2b: jmp 0x1cd0
0x1e36: push 0x15
0x1e3b: jmp 0x1cd0
0x1e46: push 0x16
0x1e4b: jmp 0x1cd0
0x1e56: push 0x17
0x1e5b: jmp 0x1cd0
0x1e66: push 0x18
0x1e6b: jmp 0x1cd0
0x1e76: push 0x19
0x1e7b: jmp 0x1cd0
0x1e80: jmp qword ptr [rip+0x210f6a]
0x1e86: push 0x1a
0x1e8b: jmp 0x1cd0
0x1e96: push 0x1b
0x1e9b: jmp 0x1cd0
0x1ea6: push 0x1c
0x1eab: jmp 0x1cd0
0x1eb6: push 0x1d
0x1ebb: jmp 0x1cd0
0x1ec6: push 0x1e
0x1ecb: jmp 0x1cd0
0x1ed6: push 0x1f
0x1edb: jmp 0x1cd0
0x1ee6: push 0x20
0x1eeb: jmp 0x1cd0
0x1ef6: push 0x21
0x1efb: jmp 0x1cd0
0x1f06: push 0x22
0x1f0b: jmp 0x1cd0
0x1f16: push 0x23
0x1f1b: jmp 0x1cd0
0x1f26: push 0x24
0x1f2b: jmp 0x1cd0
0x1f36: push 0x25
0x1f3b: jmp 0x1cd0
0x1f46: push 0x26
0x1f4b: jmp 0x1cd0
0x1f56: push 0x27
0x1f5b: jmp 0x1cd0
0x1f66: push 0x28
0x1f6b: jmp 0x1cd0
0x1f76: push 0x29
0x1f7b: jmp 0x1cd0
0x1f86: push 0x2a
0x1f8b: jmp 0x1cd0
0x1f96: push 0x2b
0x1f9b: jmp 0x1cd0
0x1fa0: jmp qword ptr [rip+0x210eda]
0x1fa6: push 0x2c
0x1fab: jmp 0x1cd0
0x1fb6: push 0x2d
0x1fbb: jmp 0x1cd0
0x1fc6: push 0x2e
0x1fcb: jmp 0x1cd0
0x1fd6: push 0x2f
0x1fdb: jmp 0x1cd0
0x1fe6: push 0x30
0x1feb: jmp 0x1cd0
0x1ff6: push 0x31
0x1ffb: jmp 0x1cd0
0x2006: push 0x32
0x200b: jmp 0x1cd0
0x2016: push 0x33
0x201b: jmp 0x1cd0
0x2026: push 0x34
0x202b: jmp 0x1cd0
0x2036: push 0x35
0x203b: jmp 0x1cd0
0x2046: push 0x36
0x204b: jmp 0x1cd0
0x2056: push 0x37
0x205b: jmp 0x1cd0
0x2066: push 0x38
0x206b: jmp 0x1cd0
0x2076: push 0x39
0x207b: jmp 0x1cd0
0x2086: push 0x3a
0x208b: jmp 0x1cd0
0x2096: push 0x3b
0x209b: jmp 0x1cd0
0x20a6: push 0x3c
0x20ab: jmp 0x1cd0
0x20b6: push 0x3d
0x20bb: jmp 0x1cd0
0x20c6: push 0x3e
0x20cb: jmp 0x1cd0
0x20d6: push 0x3f
0x20db: jmp 0x1cd0
0x20e6: push 0x40
0x20eb: jmp 0x1cd0
0x20f6: push 0x41
0x20fb: jmp 0x1cd0
0x2106: push 0x42
0x210b: jmp 0x1cd0
0x2116: push 0x43
0x211b: jmp 0x1cd0
0x2126: push 0x44
0x212b: jmp 0x1cd0
0x2136: push 0x45
0x213b: jmp 0x1cd0
0x2146: push 0x46
0x214b: jmp 0x1cd0
0x2156: push 0x47
0x215b: jmp 0x1cd0
0x2166: push 0x48
0x216b: jmp 0x1cd0
0x2176: push 0x49
0x217b: jmp 0x1cd0
0x2186: push 0x4a
0x218b: jmp 0x1cd0
0x2196: push 0x4b
0x219b: jmp 0x1cd0
0x21a6: push 0x4c
0x21ab: jmp 0x1cd0
0x21b6: push 0x4d
0x21bb: jmp 0x1cd0
0x21c6: push 0x4e
0x21cb: jmp 0x1cd0
0x21d6: push 0x4f
0x21db: jmp 0x1cd0
0x21e6: push 0x50
0x21eb: jmp 0x1cd0
0x21f6: push 0x51
0x21fb: jmp 0x1cd0
0x2206: push 0x52
0x220b: jmp 0x1cd0
0x2216: push 0x53
0x221b: jmp 0x1cd0
0x2226: push 0x54
0x222b: jmp 0x1cd0
0x2230: jmp qword ptr [rip+0x210db2]
0x2346: nop word ptr cs:[rax + rax*0x1]
0x25dc: xor eax,eax
0x25de: jmp 0x2508
0x2673: xor eax,eax
0x2675: jmp 0x2508
0x26ba: xor eax,eax
0x26bc: jmp 0x2508
0x271c: mov qword ptr [rsp + 0x10],r13
0x2721: jmp 0x249b
0x2779: call 0x1e80
0x279f: jmp 0x233c
0x27da: hlt 
0x27e0: lea rdi,[rip+0x2108b9]
0x27e7: push rbp
0x27e8: lea rax,[rip+0x2108b1]
0x27ef: cmp rax,rdi
0x27f2: mov rbp,rsp
0x27f5: jz 0x2810
0x27f7: mov rax,qword ptr [rip+0x2107ca]
0x27fe: test rax,rax
0x2801: jz 0x2810
0x2803: pop rbp
0x2804: jmp rax
0x2810: pop rbp
0x2811: ret 
0x2820: lea rdi,[rip+0x210879]
0x2827: lea rsi,[rip+0x210872]
0x282e: push rbp
0x282f: sub rsi,rdi
0x2832: mov rbp,rsp
0x2835: sar rsi,0x3
0x2839: mov rax,rsi
0x283c: shr rax,0x3f
0x2840: add rsi,rax
0x2843: sar rsi,1
0x2846: jz 0x2860
0x2848: mov rax,qword ptr [rip+0x210791]
0x284f: test rax,rax
0x2852: jz 0x2860
0x2854: pop rbp
0x2855: jmp rax
0x2860: pop rbp
0x2861: ret 
0x2870: cmp byte ptr [rip+0x210871],0x0
0x2877: jnz 0x28a8
0x2879: cmp qword ptr [rip+0x210767],0x0
0x2881: push rbp
0x2882: mov rbp,rsp
0x2885: jz 0x2893
0x2887: mov rdi,qword ptr [rip+0x21077a]
0x288e: call 0x2230
0x2893: call 0x27e0
0x2898: mov byte ptr [rip+0x210849],0x1
0x289f: pop rbp
0x28a0: ret 
0x28a8: ret 
0x28b0: push rbp
0x28b1: mov rbp,rsp
0x28b4: pop rbp
0x28b5: jmp 0x2820
0x2fea: jmp 0x2ac8
0x3a8b: jmp 0x3825
0x3ada: nop word ptr [rax + rax*0x1]
0x3b1a: jmp 0x3825
0x3b30: jmp 0x3825
0x3bb7: jmp 0x39d6
0x3bdc: jmp 0x3825
0x3c0c: jmp 0x3825
0x3c52: nop dword ptr [rax]
0x3c56: nop word ptr cs:[rax + rax*0x1]
0x3cf0: mov rdi,qword ptr [rsp]
0x3cf4: lea rsi,[rsp + 0x50]
0x3cf9: call 0x5b70
0x3cfe: lea rcx,[rip+0xa0c5]
0x3d05: lea rdi,[rip+0x20f3f4]
0x3d0c: mov r8,rax
0x3d0f: mov r9d,ebp
0x3d12: mov edx,0x3d
0x3d17: mov esi,0x1
0x3d1c: xor eax,eax
0x3d1e: call 0x2220
0x3d23: jmp 0x3cce
0x3d4b: call 0x1e80
0x3e4b: mov byte ptr [rip+0x20f2fe],0x1
0x3e52: jmp 0x3d80
0x3e87: jmp 0x3e4b
0x3e89: call 0x1e80
0x3e8e: nop 
0x4782: mov eax,0x73
0x4787: lea rdx,[rip+0x9662]
0x478e: mov rsi,rbx
0x4791: mov word ptr [rbx + rbp*0x1],ax
0x4795: mov edi,0x1
0x479a: xor eax,eax
0x479c: call 0x20f0
0x47a1: jmp 0x436e
0x48ca: jmp 0x436e
0x4911: jmp 0x436e
0x5135: jmp 0x5044
0x5177: jmp 0x5026
0x51c9: jmp 0x5044
0x51f3: call 0x1e80
0x51f8: nop dword ptr [rax + rax*0x1]
0x52f0: mov edi,0x1
0x52f5: jmp 0x4930
0x5400: mov byte ptr [rsp + 0x17],0x1
0x5405: jmp 0x5387
0x5420: cmp rdx,-0x1
0x5424: push r12
0x5426: mov edx,0x5
0x542b: push rbp
0x542c: mov r12,rsi
0x542f: push rbx
0x5430: mov rbp,rdi
0x5433: jz 0x5480
0x5435: lea rsi,[rip+0x9ef2]
0x543c: xor edi,edi
0x543e: call 0x1e20
0x5443: mov rbx,rax
0x5446: mov rsi,rbp
0x5449: mov edi,0x1
0x544e: call 0x94b0
0x5453: mov rdx,r12
0x5456: mov rbp,rax
0x5459: mov esi,0x8
0x545e: xor edi,edi
0x5460: call 0x90e0
0x5465: mov r8,rbp
0x5468: mov rdx,rbx
0x546b: mov rcx,rax
0x546e: pop rbx
0x546f: pop rbp
0x5470: pop r12
0x5472: xor esi,esi
0x5474: xor edi,edi
0x5476: xor eax,eax
0x5478: jmp 0x2120
0x5480: lea rsi,[rip+0x9e8c]
0x5487: xor edi,edi
0x5489: call 0x1e20
0x548e: mov rbx,rax
0x5491: jmp 0x5446
0x54a0: push r15
0x54a2: push r14
0x54a4: mov r14,rdi
0x54a7: push r13
0x54a9: push r12
0x54ab: xor edi,edi
0x54ad: push rbp
0x54ae: push rbx
0x54af: mov rbp,rsi
0x54b2: lea rsi,[rip+0x9e92]
0x54b9: mov r12,rdx
0x54bc: mov edx,0x5
0x54c1: sub rsp,0x8
0x54c5: mov rbx,qword ptr [rip+0x20dc14]
0x54cc: call 0x1e20
0x54d1: mov rdi,rax
0x54d4: mov rsi,rbx
0x54d7: call 0x1f90
0x54dc: mov r15,qword ptr [r14]
0x54df: test r15,r15
0x54e2: jz 0x5578
0x54e8: xor r13d,r13d
0x54eb: xor ebx,ebx
0x54ed: jmp 0x5528
0x54f0: mov rdi,r15
0x54f3: add rbx,0x1
0x54f7: mov r13,rbp
0x54fa: call 0x94d0
0x54ff: mov rdi,qword ptr [rip+0x20dbda]
0x5506: lea rdx,[rip+0x9e53]
0x550d: mov rcx,rax
0x5510: mov esi,0x1
0x5515: xor eax,eax
0x5517: add rbp,r12
0x551a: call 0x21b0
0x551f: mov r15,qword ptr [r14 + rbx*0x8]
0x5523: test r15,r15
0x5526: jz 0x5578
0x5528: test rbx,rbx
0x552b: jz 0x54f0
0x552d: mov rdx,r12
0x5530: mov rsi,rbp
0x5533: mov rdi,r13
0x5536: call 0x1f80
0x553b: test eax,eax
0x553d: jnz 0x54f0
0x553f: mov rdi,r15
0x5542: add rbx,0x1
0x5546: add rbp,r12
0x5549: call 0x94d0
0x554e: mov rdi,qword ptr [rip+0x20db8b]
0x5555: lea rdx,[rip+0x9e0c]
0x555c: mov rcx,rax
0x555f: mov esi,0x1
0x5564: xor eax,eax
0x5566: call 0x21b0
0x556b: mov r15,qword ptr [r14 + rbx*0x8]
0x556f: test r15,r15
0x5572: jnz 0x5528
0x5574: nop dword ptr [rax]
0x5578: mov rdi,qword ptr [rip+0x20db61]
0x557f: mov rax,qword ptr [rdi + 0x28]
0x5583: cmp rax,qword ptr [rdi + 0x30]
0x5587: jnc 0x55a8
0x5589: lea rdx,[rax + 0x1]
0x558d: mov qword ptr [rdi + 0x28],rdx
0x5591: mov byte ptr [rax],0xa
0x5594: add rsp,0x8
0x5598: pop rbx
0x5599: pop rbp
0x559a: pop r12
0x559c: pop r13
0x559e: pop r14
0x55a0: pop r15
0x55a2: ret 
0x55a8: add rsp,0x8
0x55ac: mov esi,0xa
0x55b1: pop rbx
0x55b2: pop rbp
0x55b3: pop r12
0x55b5: pop r13
0x55b7: pop r14
0x55b9: pop r15
0x55bb: jmp 0x1ed0
0x55c0: push r15
0x55c2: push r14
0x55c4: mov r14,rdi
0x55c7: push r13
0x55c9: push r12
0x55cb: mov r12,rsi
0x55ce: push rbp
0x55cf: push rbx
0x55d0: mov rbp,rcx
0x55d3: mov rbx,rdx
0x55d6: mov rcx,r8
0x55d9: mov rdx,rbp
0x55dc: sub rsp,0x8
0x55e0: mov rsi,rbx
0x55e3: mov rdi,r12
0x55e6: mov r15,r8
0x55e9: mov r13,r9
0x55ec: call 0x5300
0x55f1: test rax,rax
0x55f4: js 0x5605
0x55f6: add rsp,0x8
0x55fa: pop rbx
0x55fb: pop rbp
0x55fc: pop r12
0x55fe: pop r13
0x5600: pop r14
0x5602: pop r15
0x5604: ret 
0x5605: mov rdx,rax
0x5608: mov rsi,r12
0x560b: mov rdi,r14
0x560e: call 0x5420
0x5613: mov rdx,r15
0x5616: mov rsi,rbp
0x5619: mov rdi,rbx
0x561c: call 0x54a0
0x5621: call r13
0x5624: mov rax,-0x1
0x562b: jmp 0x55f6
0x5630: push r14
0x5632: push r13
0x5634: push r12
0x5636: push rbp
0x5637: push rbx
0x5638: mov r14,qword ptr [rsi]
0x563b: test r14,r14
0x563e: jz 0x5671
0x5640: mov r12,rcx
0x5643: mov r13,rdi
0x5646: mov rbp,rdx
0x5649: lea rbx,[rsi + 0x8]
0x564d: jmp 0x565f
0x5650: mov r14,qword ptr [rbx]
0x5653: add rbp,r12
0x5656: add rbx,0x8
0x565a: test r14,r14
0x565d: jz 0x5671
0x565f: mov rdx,r12
0x5662: mov rsi,rbp
0x5665: mov rdi,r13
0x5668: call 0x1f80
0x566d: test eax,eax
0x566f: jnz 0x5650
0x5671: pop rbx
0x5672: mov rax,r14
0x5675: pop rbp
0x5676: pop r12
0x5678: pop r13
0x567a: pop r14
0x567c: ret 
0x5680: mov qword ptr [rip+0x20db29],rdi
0x5687: ret 
0x5690: mov byte ptr [rip+0x20db11],dil
0x5697: ret 
0x56a0: push rbp
0x56a1: push rbx
0x56a2: sub rsp,0x8
0x56a6: mov rdi,qword ptr [rip+0x20d9fb]
0x56ad: call 0xb1c0
0x56b2: test eax,eax
0x56b4: jz 0x56cc
0x56b6: call 0x1d40
0x56bb: cmp byte ptr [rip+0x20dae6],0x0
0x56c2: mov rbx,rax
0x56c5: jz 0x56e3
0x56c7: cmp dword ptr [rax],0x20
0x56ca: jnz 0x56e3
0x56cc: mov rdi,qword ptr [rip+0x20da0d]
0x56d3: call 0xb1c0
0x56d8: test eax,eax
0x56da: jnz 0x5722
0x56dc: add rsp,0x8
0x56e0: pop rbx
0x56e1: pop rbp
0x56e2: ret 
0x56e3: lea rsi,[rip+0x9c83]
0x56ea: xor edi,edi
0x56ec: mov edx,0x5
0x56f1: call 0x1e20
0x56f6: mov rdi,qword ptr [rip+0x20dab3]
0x56fd: mov rbp,rax
0x5700: test rdi,rdi
0x5703: jz 0x572d
0x5705: call 0x92d0
0x570a: mov esi,dword ptr [rbx]
0x570c: lea rdx,[rip+0x9c66]
0x5713: mov rcx,rax
0x5716: mov r8,rbp
0x5719: xor edi,edi
0x571b: xor eax,eax
0x571d: call 0x2120
0x5722: mov edi,dword ptr [rip+0x20d900]
0x5728: call 0x1d70
0x572d: mov esi,dword ptr [rbx]
0x572f: lea rdx,[rip+0x9c34]
0x5736: mov rcx,rax
0x5739: xor edi,edi
0x573b: xor eax,eax
0x573d: call 0x2120
0x5742: jmp 0x5722
0x5768: nop dword ptr [rax + rax*0x1]
0x5890: push rbx
0x5891: mov rbx,rdi
0x5894: call 0x1e40
0x5899: cmp rax,0x1
0x589d: jbe 0x58aa
0x589f: cmp byte ptr [rbx + rax*0x1 - 0x1],0x2f
0x58a4: lea rdx,[rax - 0x1]
0x58a8: jz 0x58b8
0x58aa: pop rbx
0x58ab: ret 
0x58b0: mov rdx,rax
0x58b3: nop dword ptr [rax + rax*0x1]
0x58b8: cmp rdx,0x1
0x58bc: jz 0x58d0
0x58be: cmp byte ptr [rbx + rdx*0x1 - 0x1],0x2f
0x58c3: lea rax,[rdx - 0x1]
0x58c7: jz 0x58b0
0x58c9: mov rax,rdx
0x58cc: pop rbx
0x58cd: ret 
0x58d0: mov eax,0x1
0x58d5: pop rbx
0x58d6: ret 
0x5b70: test rdi,rdi
0x5b73: lea rcx,[rsi + 0x14]
0x5b77: mov byte ptr [rsi + 0x14],0x0
0x5b7b: mov r9,0x6666666666666667
0x5b85: mov rsi,-0x3333333333333333
0x5b8f: mov r8d,0x30
0x5b95: js 0x5bd3
0x5b97: nop word ptr [rax + rax*0x1]
0x5ba0: mov rax,rdi
0x5ba3: sub rcx,0x1
0x5ba7: mul rsi
0x5baa: shr rdx,0x3
0x5bae: lea rax,[rdx + rdx*0x4]
0x5bb2: add rax,rax
0x5bb5: sub rdi,rax
0x5bb8: add edi,0x30
0x5bbb: test rdx,rdx
0x5bbe: mov byte ptr [rcx],dil
0x5bc1: mov rdi,rdx
0x5bc4: jnz 0x5ba0
0x5bc6: mov rax,rcx
0x5bc9: ret 
0x5bd0: mov rcx,rsi
0x5bd3: mov rax,rdi
0x5bd6: lea rsi,[rcx - 0x1]
0x5bda: imul r9
0x5bdd: mov rax,rdi
0x5be0: sar rax,0x3f
0x5be4: sar rdx,0x2
0x5be8: sub rdx,rax
0x5beb: lea rax,[rdx + rdx*0x4]
0x5bef: lea eax,[r8 + rax*0x2]
0x5bf3: sub eax,edi
0x5bf5: test rdx,rdx
0x5bf8: mov rdi,rdx
0x5bfb: mov byte ptr [rcx - 0x1],al
0x5bfe: jnz 0x5bd0
0x5c00: sub rcx,0x2
0x5c04: mov byte ptr [rsi - 0x1],0x2d
0x5c08: mov rax,rcx
0x5c0b: ret 
0x6855: cmp r15d,0x2d
0x6859: jz 0x7383
0x685f: mov byte ptr [rsp + 0x38],0x2b
0x7383: mov r15d,0x2b
0x7389: jmp 0x70d7
0x73d2: movsxd r15,r10d
0x73d5: mov r12d,0x1
0x73db: test r15,r15
0x73de: cmovnz r12,r15
0x73e2: cmp r12,rdx
0x73e5: jnc 0x5d7c
0x73eb: test rbp,rbp
0x73ee: jz 0x744b
0x73f0: mov r11d,dword ptr [rsp + 0x48]
0x73f5: test r11d,r11d
0x73f8: jnz 0x743f
0x73fa: cmp r15,0x1
0x73fe: jbe 0x743f
0x7400: lea rcx,[r15 - 0x1]
0x7404: mov rdi,rbp
0x7407: mov esi,0x20
0x740c: mov dword ptr [rsp + 0x60],r10d
0x7411: mov qword ptr [rsp + 0x58],r9
0x7416: mov rdx,rcx
0x7419: mov qword ptr [rsp + 0x50],r8
0x741e: mov qword ptr [rsp + 0x40],rcx
0x7423: call 0x1f20
0x7428: mov rcx,qword ptr [rsp + 0x40]
0x742d: mov r10d,dword ptr [rsp + 0x60]
0x7432: mov r9,qword ptr [rsp + 0x58]
0x7437: mov r8,qword ptr [rsp + 0x50]
0x743c: add rbp,rcx
0x743f: movzx eax,byte ptr [rsp + 0x38]
0x7444: add rbp,0x1
0x7448: mov byte ptr [rbp - 0x1],al
0x744b: mov rdx,qword ptr [rsp + 0x8]
0x7450: add r9,0x17
0x7454: add r14,r12
0x7457: mov rcx,r9
0x745a: mov r11,r15
0x745d: mov r12,rbx
0x7460: sub rcx,r8
0x7463: mov r15d,0x5f
0x7469: sub rdx,r14
0x746c: jmp 0x6985
0x772a: mov byte ptr [rsp + 0x38],0x0
0x772f: mov edi,0x2
0x7734: jmp 0x6e30
0x7745: call 0x1e80
0x77b9: call 0x1e80
0x77be: nop 
0x785f: nop 
0x7c8b: mov ebx,edx
0x7c8d: xor r12d,r12d
0x7c90: xor eax,eax
0x8b43: call 0x1e80
0x8b84: nop 
0x8b86: nop word ptr cs:[rax + rax*0x1]
0x8d31: call 0x1d30
0x8d36: call 0x9df0
0x8d3b: nop dword ptr [rax + rax*0x1]
0x8d40: push r12
0x8d42: push rbp
0x8d43: push rbx
0x8d44: mov rbx,rdi
0x8d47: call 0x1d40
0x8d4c: mov r12d,dword ptr [rax]
0x8d4f: mov rbp,rax
0x8d52: lea rax,[rip+0x20a567]
0x8d59: test rbx,rbx
0x8d5c: mov esi,0x38
0x8d61: cmovz rbx,rax
0x8d65: mov rdi,rbx
0x8d68: call 0x9da0
0x8d6d: mov dword ptr [rbp],r12d
0x8d71: pop rbx
0x8d72: pop rbp
0x8d73: pop r12
0x8d75: ret 
0x8dc0: lea rax,[rip+0x20a4f9]
0x8dc7: test rdi,rdi
0x8dca: mov ecx,esi
0x8dcc: cmovz rdi,rax
0x8dd0: mov eax,esi
0x8dd2: and ecx,0x1f
0x8dd5: shr al,0x5
0x8dd8: movzx eax,al
0x8ddb: lea rdi,[rdi + rax*0x4 + 0x8]
0x8de0: mov esi,dword ptr [rdi]
0x8de2: mov eax,esi
0x8de4: shr eax,cl
0x8de6: xor edx,eax
0x8de8: and eax,0x1
0x8deb: and edx,0x1
0x8dee: shl edx,cl
0x8df0: xor edx,esi
0x8df2: mov dword ptr [rdi],edx
0x8df4: ret 
0x8e00: lea rax,[rip+0x20a4b9]
0x8e07: test rdi,rdi
0x8e0a: cmovz rdi,rax
0x8e0e: mov eax,dword ptr [rdi + 0x4]
0x8e11: mov dword ptr [rdi + 0x4],esi
0x8e14: ret 
0x8e20: lea rax,[rip+0x20a499]
0x8e27: test rdi,rdi
0x8e2a: cmovz rdi,rax
0x8e2e: test rsi,rsi
0x8e31: mov dword ptr [rdi],0xa
0x8e37: jz 0x8e47
0x8e39: test rdx,rdx
0x8e3c: jz 0x8e47
0x8e3e: mov qword ptr [rdi + 0x28],rsi
0x8e42: mov qword ptr [rdi + 0x30],rdx
0x8e46: ret 
0x8e47: sub rsp,0x8
0x8e4b: call 0x1d30
0x8e50: push r15
0x8e52: push r14
0x8e54: lea rax,[rip+0x20a465]
0x8e5b: push r13
0x8e5d: push r12
0x8e5f: mov r13,rdi
0x8e62: push rbp
0x8e63: push rbx
0x8e64: mov rbx,r8
0x8e67: mov r14,rsi
0x8e6a: mov r15,rdx
0x8e6d: sub rsp,0x18
0x8e71: test r8,r8
0x8e74: cmovz rbx,rax
0x8e78: mov qword ptr [rsp + 0x8],rcx
0x8e7d: call 0x1d40
0x8e82: mov r12d,dword ptr [rax]
0x8e85: mov rbp,rax
0x8e88: lea rax,[rbx + 0x8]
0x8e8c: sub rsp,0x8
0x8e90: mov r9d,dword ptr [rbx + 0x4]
0x8e94: push qword ptr [rbx + 0x30]
0x8e97: mov r8d,dword ptr [rbx]
0x8e9a: push qword ptr [rbx + 0x28]
0x8e9d: mov rdx,r15
0x8ea0: push rax
0x8ea1: mov rcx,qword ptr [rsp + 0x28]
0x8ea6: mov rsi,r14
0x8ea9: mov rdi,r13
0x8eac: call 0x7950
0x8eb1: mov dword ptr [rbp],r12d
0x8eb5: add rsp,0x38
0x8eb9: pop rbx
0x8eba: pop rbp
0x8ebb: pop r12
0x8ebd: pop r13
0x8ebf: pop r14
0x8ec1: pop r15
0x8ec3: ret 
0x8ed0: push r15
0x8ed2: push r14
0x8ed4: lea rax,[rip+0x20a3e5]
0x8edb: push r13
0x8edd: push r12
0x8edf: mov r12,rdx
0x8ee2: push rbp
0x8ee3: push rbx
0x8ee4: mov rbx,rcx
0x8ee7: mov r14,rdi
0x8eea: mov r15,rsi
0x8eed: sub rsp,0x38
0x8ef1: test rcx,rcx
0x8ef4: cmovz rbx,rax
0x8ef8: xor ebp,ebp
0x8efa: call 0x1d40
0x8eff: test r12,r12
0x8f02: mov r13,rax
0x8f05: mov eax,dword ptr [rax]
0x8f07: setz bpl
0x8f0b: or ebp,dword ptr [rbx + 0x4]
0x8f0e: lea r10,[rbx + 0x8]
0x8f12: sub rsp,0x8
0x8f16: mov r8d,dword ptr [rbx]
0x8f19: mov rcx,r15
0x8f1c: mov dword ptr [rsp + 0x14],eax
0x8f20: push qword ptr [rbx + 0x30]
0x8f23: mov rdx,r14
0x8f26: push qword ptr [rbx + 0x28]
0x8f29: push r10
0x8f2b: xor esi,esi
0x8f2d: mov r9d,ebp
0x8f30: xor edi,edi
0x8f32: mov qword ptr [rsp + 0x40],r10
0x8f37: call 0x7950
0x8f3c: lea rsi,[rax + 0x1]
0x8f40: mov qword ptr [rsp + 0x48],rax
0x8f45: add rsp,0x20
0x8f49: mov rdi,rsi
0x8f4c: mov qword ptr [rsp + 0x18],rsi
0x8f51: call 0x9ba0
0x8f56: mov qword ptr [rsp + 0x10],rax
0x8f5b: sub rsp,0x8
0x8f5f: push qword ptr [rbx + 0x30]
0x8f62: push qword ptr [rbx + 0x28]
0x8f65: mov r10,qword ptr [rsp + 0x38]
0x8f6a: mov r9d,ebp
0x8f6d: mov r8d,dword ptr [rbx]
0x8f70: mov rcx,r15
0x8f73: mov rdx,r14
0x8f76: mov rdi,rax
0x8f79: push r10
0x8f7b: mov rsi,qword ptr [rsp + 0x38]
0x8f80: call 0x7950
0x8f85: mov eax,dword ptr [rsp + 0x2c]
0x8f89: add rsp,0x20
0x8f8d: test r12,r12
0x8f90: mov dword ptr [r13],eax
0x8f94: jz 0x8f9f
0x8f96: mov r11,qword ptr [rsp + 0x28]
0x8f9b: mov qword ptr [r12],r11
0x8f9f: mov rax,qword ptr [rsp + 0x10]
0x8fa4: add rsp,0x38
0x8fa8: pop rbx
0x8fa9: pop rbp
0x8faa: pop r12
0x8fac: pop r13
0x8fae: pop r14
0x8fb0: pop r15
0x8fb2: ret 
0x8fc0: mov rcx,rdx
0x8fc3: xor edx,edx
0x8fc5: jmp 0x8ed0
0x8fd0: mov eax,dword ptr [rip+0x20a0a2]
0x8fd6: push r12
0x8fd8: mov r12,qword ptr [rip+0x20a0a1]
0x8fdf: push rbp
0x8fe0: push rbx
0x8fe1: cmp eax,0x1
0x8fe4: jle 0x9011
0x8fe6: sub eax,0x2
0x8fe9: lea rbx,[r12 + 0x18]
0x8fee: shl rax,0x4
0x8ff2: lea rbp,[r12 + rax*0x1 + 0x28]
0x8ff7: nop word ptr [rax + rax*0x1]
0x9000: mov rdi,qword ptr [rbx]
0x9003: add rbx,0x10
0x9007: call 0x1d10
0x900c: cmp rbx,rbp
0x900f: jnz 0x9000
0x9011: mov rdi,qword ptr [r12 + 0x8]
0x9016: lea rbx,[rip+0x20a1a3]
0x901d: cmp rdi,rbx
0x9020: jz 0x9039
0x9022: call 0x1d10
0x9027: mov qword ptr [rip+0x20a05e],0x100
0x9032: mov qword ptr [rip+0x20a05f],rbx
0x9039: lea rbx,[rip+0x20a050]
0x9040: cmp r12,rbx
0x9043: jz 0x9054
0x9045: mov rdi,r12
0x9048: call 0x1d10
0x904d: mov qword ptr [rip+0x20a02c],rbx
0x9054: pop rbx
0x9055: mov dword ptr [rip+0x20a019],0x1
0x905f: pop rbp
0x9060: pop r12
0x9062: ret 
0x9070: lea rcx,[rip+0x20a249]
0x9077: mov rdx,-0x1
0x907e: jmp 0x8b90
0x9090: lea rcx,[rip+0x20a229]
0x9097: jmp 0x8b90
0x90a0: lea rcx,[rip+0x20a219]
0x90a7: mov rsi,rdi
0x90aa: mov rdx,-0x1
0x90b1: xor edi,edi
0x90b3: jmp 0x8b90
0x90c0: lea rcx,[rip+0x20a1f9]
0x90c7: mov rdx,rsi
0x90ca: mov rsi,rdi
0x90cd: xor edi,edi
0x90cf: jmp 0x8b90
0x9169: call 0x1e80
0x916e: nop 
0x9170: sub rsp,0x48
0x9174: mov rax,rdx
0x9177: mov rdx,rcx
0x917a: mov rcx,qword ptr fs:[rip+0xffffffffffff6ea5]
0x9183: mov qword ptr [rsp + 0x38],rcx
0x9188: xor ecx,ecx
0x918a: cmp esi,0xa
0x918d: jz 0x91f0
0x918f: mov dword ptr [rsp],esi
0x9192: mov rcx,rsp
0x9195: mov rsi,rax
0x9198: mov qword ptr [rsp + 0x4],0x0
0x91a1: mov qword ptr [rsp + 0xc],0x0
0x91aa: mov qword ptr [rsp + 0x14],0x0
0x91b3: mov qword ptr [rsp + 0x1c],0x0
0x91bc: mov qword ptr [rsp + 0x24],0x0
0x91c5: mov qword ptr [rsp + 0x2c],0x0
0x91ce: mov dword ptr [rsp + 0x34],0x0
0x91d6: call 0x8b90
0x91db: mov rdx,qword ptr [rsp + 0x38]
0x91e0: xor rdx,qword ptr fs:[rip+0xffffffffffff6e3f]
0x91e9: jnz 0x91f5
0x91eb: add rsp,0x48
0x91ef: ret 
0x91f0: call 0x1d30
0x91f5: call 0x1e80
0x91fa: nop word ptr [rax + rax*0x1]
0x9210: mov rcx,rdx
0x9213: mov rdx,rsi
0x9216: mov esi,edi
0x9218: xor edi,edi
0x921a: jmp 0x9170
0x9220: sub rsp,0x48
0x9224: mov ecx,edx
0x9226: mov rax,qword ptr fs:[rip+0xffffffffffff6df9]
0x922f: mov qword ptr [rsp + 0x38],rax
0x9234: xor eax,eax
0x9236: mov rax,qword ptr [rip+0x20a0b3]
0x923d: mov r8,rsp
0x9240: and ecx,0x1f
0x9243: movdqa xmm0,[rip+0x20a075]
0x924b: mov qword ptr [rsp + 0x30],rax
0x9250: mov eax,edx
0x9252: movaps xmmword ptr [rsp],xmm0
0x9256: shr al,0x5
0x9259: movzx eax,al
0x925c: lea r9,[r8 + rax*0x4 + 0x8]
0x9261: movdqa xmm0,[rip+0x20a067]
0x9269: movaps xmmword ptr [rsp + 0x10],xmm0
0x926e: movdqa xmm0,[rip+0x20a06a]
0x9276: movaps xmmword ptr [rsp + 0x20],xmm0
0x927b: mov edx,dword ptr [r9]
0x927e: mov eax,edx
0x9280: shr eax,cl
0x9282: not eax
0x9284: and eax,0x1
0x9287: shl eax,cl
0x9289: mov rcx,r8
0x928c: xor eax,edx
0x928e: mov rdx,rsi
0x9291: mov rsi,rdi
0x9294: mov dword ptr [r9],eax
0x9297: xor edi,edi
0x9299: call 0x8b90
0x929e: mov rsi,qword ptr [rsp + 0x38]
0x92a3: xor rsi,qword ptr fs:[rip+0xffffffffffff6d7c]
0x92ac: jnz 0x92b3
0x92ae: add rsp,0x48
0x92b2: ret 
0x92b3: call 0x1e80
0x92b8: nop dword ptr [rax + rax*0x1]
0x92c0: movsx edx,sil
0x92c4: mov rsi,-0x1
0x92cb: jmp 0x9220
0x92d0: mov edx,0x3a
0x92d5: mov rsi,-0x1
0x92dc: jmp 0x9220
0x92f0: mov edx,0x3a
0x92f5: jmp 0x9220
0x9300: sub rsp,0x48
0x9304: mov rax,rdx
0x9307: mov rdx,qword ptr fs:[rip+0xffffffffffff6d18]
0x9310: mov qword ptr [rsp + 0x38],rdx
0x9315: xor edx,edx
0x9317: cmp esi,0xa
0x931a: jz 0x9384
0x931c: mov dword ptr [rsp],esi
0x931f: mov rcx,rsp
0x9322: mov rdx,-0x1
0x9329: mov rsi,rax
0x932c: mov qword ptr [rsp + 0x4],0x0
0x9335: mov qword ptr [rsp + 0xc],0x4000000
0x933e: mov qword ptr [rsp + 0x14],0x0
0x9347: mov qword ptr [rsp + 0x1c],0x0
0x9350: mov qword ptr [rsp + 0x24],0x0
0x9359: mov qword ptr [rsp + 0x2c],0x0
0x9362: mov dword ptr [rsp + 0x34],0x0
0x936a: call 0x8b90
0x936f: mov rcx,qword ptr [rsp + 0x38]
0x9374: xor rcx,qword ptr fs:[rip+0xffffffffffff6cab]
0x937d: jnz 0x9389
0x937f: add rsp,0x48
0x9383: ret 
0x9384: call 0x1d30
0x9389: call 0x1e80
0x938e: nop 
0x9390: sub rsp,0x48
0x9394: mov r9,rcx
0x9397: mov rcx,qword ptr [rip+0x209f52]
0x939e: movdqa xmm0,[rip+0x209f1a]
0x93a6: mov rax,qword ptr fs:[rip+0xffffffffffff6c79]
0x93af: mov qword ptr [rsp + 0x38],rax
0x93b4: xor eax,eax
0x93b6: movaps xmmword ptr [rsp],xmm0
0x93ba: test rsi,rsi
0x93bd: mov qword ptr [rsp + 0x30],rcx
0x93c2: mov dword ptr [rsp],0xa
0x93c9: movdqa xmm0,[rip+0x209eff]
0x93d1: movaps xmmword ptr [rsp + 0x10],xmm0
0x93d6: movdqa xmm0,[rip+0x209f02]
0x93de: movaps xmmword ptr [rsp + 0x20],xmm0
0x93e3: jz 0x9417
0x93e5: test rdx,rdx
0x93e8: jz 0x9417
0x93ea: mov qword ptr [rsp + 0x28],rsi
0x93ef: mov qword ptr [rsp + 0x30],rdx
0x93f4: mov rcx,rsp
0x93f7: mov rdx,r8
0x93fa: mov rsi,r9
0x93fd: call 0x8b90
0x9402: mov rdi,qword ptr [rsp + 0x38]
0x9407: xor rdi,qword ptr fs:[rip+0xffffffffffff6c18]
0x9410: jnz 0x941c
0x9412: add rsp,0x48
0x9416: ret 
0x9417: call 0x1d30
0x941c: call 0x1e80
0x9421: nop dword ptr [rax + rax*0x1]
0x9426: nop word ptr cs:[rax + rax*0x1]
0x9430: mov r8,-0x1
0x9437: jmp 0x9390
0x9440: mov rcx,rdx
0x9443: mov r8,-0x1
0x944a: mov rdx,rsi
0x944d: mov rsi,rdi
0x9450: xor edi,edi
0x9452: jmp 0x9390
0x9460: mov r8,rcx
0x9463: mov rcx,rdx
0x9466: mov rdx,rsi
0x9469: mov rsi,rdi
0x946c: xor edi,edi
0x946e: jmp 0x9390
0x9480: lea rcx,[rip+0x209bb9]
0x9487: jmp 0x8b90
0x9490: lea rcx,[rip+0x209ba9]
0x9497: mov rdx,rsi
0x949a: mov rsi,rdi
0x949d: xor edi,edi
0x949f: jmp 0x8b90
0x94b0: lea rcx,[rip+0x209b89]
0x94b7: mov rdx,-0x1
0x94be: jmp 0x8b90
0x96b8: mov r8,rcx
0x96bb: mov rcx,rdx
0x96be: lea rdx,[rip+0x646f]
0x96c5: mov esi,0x1
0x96ca: xor eax,eax
0x96cc: call 0x21b0
0x96d1: jmp 0x95bc
0x99a0: xor r9d,r9d
0x99a3: cmp qword ptr [r8],0x0
0x99a7: jz 0x99bb
0x99a9: nop dword ptr [rax]
0x99b0: add r9,0x1
0x99b4: cmp qword ptr [r8 + r9*0x8],0x0
0x99b9: jnz 0x99b0
0x99bb: jmp 0x9580
0x99c0: sub rsp,0x68
0x99c4: mov r10,r8
0x99c7: xor r9d,r9d
0x99ca: mov rax,qword ptr fs:[rip+0xffffffffffff6655]
0x99d3: mov qword ptr [rsp + 0x58],rax
0x99d8: xor eax,eax
0x99da: mov r8,rsp
0x99dd: nop dword ptr [rax]
0x99e0: mov eax,dword ptr [r10]
0x99e3: cmp eax,0x2f
0x99e6: ja 0x9a2a
0x99e8: mov r11d,eax
0x99eb: add r11,qword ptr [r10 + 0x10]
0x99ef: add eax,0x8
0x99f2: mov dword ptr [r10],eax
0x99f5: mov rax,qword ptr [r11]
0x99f8: test rax,rax
0x99fb: mov qword ptr [r8 + r9*0x8],rax
0x99ff: jz 0x9a0b
0x9a01: add r9,0x1
0x9a05: cmp r9,0xa
0x9a09: jnz 0x99e0
0x9a0b: call 0x9580
0x9a10: mov rax,qword ptr [rsp + 0x58]
0x9a15: xor rax,qword ptr fs:[rip+0xffffffffffff660a]
0x9a1e: jnz 0x9a25
0x9a20: add rsp,0x68
0x9a24: ret 
0x9a25: call 0x1e80
0x9a2a: mov r11,qword ptr [r10 + 0x8]
0x9a2e: lea rax,[r11 + 0x8]
0x9a32: mov qword ptr [r10 + 0x8],rax
0x9a36: jmp 0x99f5
0x9b00: call 0x1e80
0x9b0c: mov rax,rbx
0x9b0f: add rbx,0x8
0x9b13: jmp 0x9ac6
0x9b20: push rbx
0x9b21: lea rsi,[rip+0x605a]
0x9b28: mov edx,0x5
0x9b2d: xor edi,edi
0x9b2f: call 0x1e20
0x9b34: lea rdx,[rip+0x605c]
0x9b3b: mov rsi,rax
0x9b3e: mov edi,0x1
0x9b43: xor eax,eax
0x9b45: call 0x20f0
0x9b4a: lea rsi,[rip+0x605c]
0x9b51: mov edx,0x5
0x9b56: xor edi,edi
0x9b58: call 0x1e20
0x9b5d: lea rcx,[rip+0x55a4]
0x9b64: lea rdx,[rip+0x4341]
0x9b6b: mov rsi,rax
0x9b6e: mov edi,0x1
0x9b73: xor eax,eax
0x9b75: call 0x20f0
0x9b7a: mov rbx,qword ptr [rip+0x209527]
0x9b81: lea rsi,[rip+0x6258]
0x9b88: xor edi,edi
0x9b8a: mov edx,0x5
0x9b8f: call 0x1e20
0x9b94: mov rsi,rbx
0x9b97: mov rdi,rax
0x9b9a: pop rbx
0x9b9b: jmp 0x1f90
0x9bba: nop word ptr [rax + rax*0x1]
0x9bc0: mov rax,rdi
0x9bc3: mul rsi
0x9bc6: mov rdi,rax
0x9bc9: seto al
0x9bcc: test rdi,rdi
0x9bcf: js 0x9bdb
0x9bd1: movzx eax,al
0x9bd4: test rax,rax
0x9bd7: jnz 0x9bdb
0x9bd9: jmp 0x9ba0
0x9bdb: sub rsp,0x8
0x9bdf: call 0x9df0
0x9be4: nop 
0x9be6: nop word ptr cs:[rax + rax*0x1]
0x9bf0: jmp 0x9ba0
0x9c09: test rdi,rdi
0x9c0c: jnz 0x9c28
0x9c28: call 0x1d10
0x9c2d: xor eax,eax
0x9c2f: pop rbx
0x9c30: ret 
0x9c36: nop word ptr cs:[rax + rax*0x1]
0x9c40: mov rax,rsi
0x9c43: mul rdx
0x9c46: mov rsi,rax
0x9c49: seto al
0x9c4c: test rsi,rsi
0x9c4f: js 0x9c5b
0x9c51: movzx eax,al
0x9c54: test rax,rax
0x9c57: jnz 0x9c5b
0x9c59: jmp 0x9c00
0x9c5b: sub rsp,0x8
0x9c5f: call 0x9df0
0x9c64: nop 
0x9c66: nop word ptr cs:[rax + rax*0x1]
0x9c70: test rdi,rdi
0x9c73: mov r9,rdx
0x9c76: mov rcx,qword ptr [rsi]
0x9c79: jz 0x9cb0
0x9c7b: xor edx,edx
0x9c7d: mov rax,0x5555555555555554
0x9c87: div r9
0x9c8a: cmp rax,rcx
0x9c8d: jbe 0x9ccb
0x9c8f: mov rax,rcx
0x9c92: shr rax,1
0x9c95: lea rcx,[rax + rcx*0x1 + 0x1]
0x9c9a: mov qword ptr [rsi],rcx
0x9c9d: imul rcx,r9
0x9ca1: mov rsi,rcx
0x9ca4: jmp 0x9c00
0x9cb0: test rcx,rcx
0x9cb3: jz 0x9cd8
0x9cb5: mov rax,rcx
0x9cb8: mul r9
0x9cbb: seto dl
0x9cbe: test rax,rax
0x9cc1: movzx edx,dl
0x9cc4: js 0x9ccb
0x9cc6: test rdx,rdx
0x9cc9: jz 0x9c9a
0x9ccb: sub rsp,0x8
0x9ccf: call 0x9df0
0x9cd4: nop dword ptr [rax]
0x9cd8: xor edx,edx
0x9cda: mov eax,0x80
0x9cdf: xor r8d,r8d
0x9ce2: div r9
0x9ce5: test rax,rax
0x9ce8: setz r8b
0x9cec: lea rcx,[r8 + rax*0x1]
0x9cf0: jmp 0x9cb5
0x9d00: test rdi,rdi
0x9d03: mov rax,qword ptr [rsi]
0x9d06: jz 0x9d30
0x9d08: mov rdx,0x5555555555555553
0x9d12: cmp rax,rdx
0x9d15: ja 0x9d41
0x9d17: mov rdx,rax
0x9d1a: shr rdx,1
0x9d1d: lea rax,[rdx + rax*0x1 + 0x1]
0x9d22: mov qword ptr [rsi],rax
0x9d25: mov rsi,rax
0x9d28: jmp 0x9c00
0x9d30: test rax,rax
0x9d33: mov edx,0x80
0x9d38: cmovz rax,rdx
0x9d3c: test rax,rax
0x9d3f: jns 0x9d22
0x9d41: sub rsp,0x8
0x9d45: call 0x9df0
0x9d4a: nop word ptr [rax + rax*0x1]
0x9d50: push rbx
0x9d51: mov rbx,rdi
0x9d54: call 0x9ba0
0x9d59: mov rdx,rbx
0x9d5c: xor esi,esi
0x9d5e: mov rdi,rax
0x9d61: pop rbx
0x9d62: jmp 0x1f20
0x9d70: mov rax,rdi
0x9d73: sub rsp,0x8
0x9d77: mul rsi
0x9d7a: seto dl
0x9d7d: test rax,rax
0x9d80: js 0x9d99
0x9d82: movzx edx,dl
0x9d85: test rdx,rdx
0x9d88: jnz 0x9d99
0x9d8a: call 0x1fa0
0x9d8f: test rax,rax
0x9d92: jz 0x9d99
0x9d94: add rsp,0x8
0x9d98: ret 
0x9d99: call 0x9df0
0x9d9e: nop 
0x9e20: call 0x1d30
0x9e25: nop word ptr cs:[rax + rax*0x1]
0x9e2f: nop 
0x9e5f: nop 
0x9e84: movaps xmmword ptr [rsp + 0x50],xmm0
0x9e89: movaps xmmword ptr [rsp + 0x60],xmm1
0x9e8e: movaps xmmword ptr [rsp + 0x70],xmm2
0x9e93: movaps xmmword ptr [0x80 + rsp],xmm3
0x9e9b: movaps xmmword ptr [0x90 + rsp],xmm4
0x9ea3: movaps xmmword ptr [0xa0 + rsp],xmm5
0x9eab: movaps xmmword ptr [0xb0 + rsp],xmm6
0x9eb3: movaps xmmword ptr [0xc0 + rsp],xmm7
0x9f11: call 0x1e80
0x9f16: nop word ptr cs:[rax + rax*0x1]
0x9f61: nop dword ptr [rax + rax*0x1]
0x9f66: nop word ptr cs:[rax + rax*0x1]
0xa201: call 0x1e80
0xa282: nop word ptr cs:[rax + rax*0x1]
0xa28c: nop dword ptr [rax]
0xa30e: call 0x1e80
0xa313: nop word ptr cs:[rax + rax*0x1]
0xa31d: nop dword ptr [rax]
0xa3b0: push rbx
0xa3b1: mov rbx,rdi
0xa3b4: mov rdi,qword ptr [rdi]
0xa3b7: call 0x1d10
0xa3bc: mov rdi,qword ptr [rbx + 0x8]
0xa3c0: call 0x1d10
0xa3c5: mov rdi,qword ptr [rbx + 0x10]
0xa3c9: call 0x1d10
0xa3ce: test byte ptr [rbx + 0x28],0x4
0xa3d2: jz 0xa3dd
0xa3d4: mov rdi,qword ptr [rbx + 0x18]
0xa3d8: call 0x1d10
0xa3dd: mov rdi,rbx
0xa3e0: pop rbx
0xa3e1: jmp 0x1d10
0xab1a: nop word ptr [rax + rax*0x1]
0xab20: mov rbx,qword ptr [rdi + 0x30]
0xab24: call 0xa3b0
0xab29: test rbx,rbx
0xab2c: mov qword ptr [rsp + 0x40],rbx
0xab31: mov rdi,rbx
0xab34: jnz 0xab20
0xac33: call 0x1e80
0xac38: nop dword ptr [rax + rax*0x1]
0xafb0: cmp rdi,0x1
0xafb4: jz 0xafbb
0xafb6: jmp 0xac70
0xafbb: ret 
0xb1ac: call 0x1e80
0xb1b1: nop word ptr cs:[rax + rax*0x1]
0xb1bb: nop dword ptr [rax + rax*0x1]
0xb1c0: push r12
0xb1c2: push rbp
0xb1c3: mov rbp,rdi
0xb1c6: push rbx
0xb1c7: call 0x1d90
0xb1cc: mov ebx,dword ptr [rbp]
0xb1cf: mov rdi,rbp
0xb1d2: mov r12,rax
0xb1d5: call 0xb590
0xb1da: and ebx,0x20
0xb1dd: test ebx,ebx
0xb1df: jnz 0xb1f8
0xb1e1: test eax,eax
0xb1e3: jz 0xb1ef
0xb1e5: test r12,r12
0xb1e8: mov eax,0xffffffff
0xb1ed: jz 0xb228
0xb1ef: pop rbx
0xb1f0: pop rbp
0xb1f1: pop r12
0xb1f3: ret 
0xb1f8: test eax,eax
0xb1fa: jnz 0xb218
0xb1fc: call 0x1d40
0xb201: mov dword ptr [rax],0x0
0xb207: mov eax,0xffffffff
0xb20c: pop rbx
0xb20d: pop rbp
0xb20e: pop r12
0xb210: ret 
0xb218: pop rbx
0xb219: mov eax,0xffffffff
0xb21e: pop rbp
0xb21f: pop r12
0xb221: ret 
0xb228: call 0x1d40
0xb22d: cmp dword ptr [rax],0x9
0xb230: pop rbx
0xb231: pop rbp
0xb232: pop r12
0xb234: setnz al
0xb237: movzx eax,al
0xb23a: neg eax
0xb23c: ret 
0xb288: lea rax,[rsp + 0x60]
0xb28d: mov dword ptr [rsp],0x10
0xb294: mov edx,dword ptr [rsp + 0x30]
0xb298: mov qword ptr [rsp + 0x8],rax
0xb29d: lea rax,[rsp + 0x20]
0xb2a2: mov qword ptr [rsp + 0x10],rax
0xb2a7: jmp 0xb261
0xb2a9: call 0x1e80
0xb2ae: nop 
0xb4a5: call 0x1e80
0xb4aa: nop word ptr [rax + rax*0x1]
0xb576: xor edi,edi
0xb578: jmp 0xb52a
0xb57a: call 0x1e80
0xb584: nop word ptr cs:[rax + rax*0x1]
0xb58e: nop 
0xb729: call 0x1e80
0xb72e: nop 
0xb791: cmp esi,0x406
0xb797: jnz 0xb7e0
0xb799: mov rax,qword ptr [rsp + 0x10]
0xb79e: cmp dword ptr [rip+0x207b53],0x0
0xb7a5: mov dword ptr [rsp],0x18
0xb7ac: mov r12d,dword ptr [rax + 0x10]
0xb7b0: mov edx,r12d
0xb7b3: js 0xb8e3
0xb7b9: xor eax,eax
0xb7bb: mov esi,0x406
0xb7c0: call 0x1dc0
0xb7c5: test eax,eax
0xb7c7: mov ebx,eax
0xb7c9: js 0xb958
0xb7cf: mov dword ptr [rip+0x207b1f],0x1
0xb7d9: jmp 0xb820
0xb7e0: cmp esi,0xb
0xb7e3: jz 0xb810
0xb7e5: jg 0xb840
0xb7e7: cmp esi,0x4
0xb7ea: jz 0xb8c0
0xb7f0: jg 0xb8b0
0xb7f6: cmp esi,0x2
0xb7f9: jz 0xb8c0
0xb7ff: jg 0xb810
0xb801: cmp esi,0x1
0xb804: jnz 0xb868
0xb806: nop word ptr cs:[rax + rax*0x1]
0xb810: mov edi,ebp
0xb812: xor eax,eax
0xb814: call 0x1dc0
0xb819: mov ebx,eax
0xb81b: nop dword ptr [rax + rax*0x1]
0xb840: cmp esi,0x407
0xb846: jg 0xb890
0xb848: cmp esi,0x406
0xb84e: jge 0xb8c0
0xb850: cmp esi,0x401
0xb856: jz 0xb810
0xb858: cmp esi,0x402
0xb85e: jz 0xb8c0
0xb860: cmp esi,0x400
0xb866: jz 0xb8c0
0xb868: mov eax,dword ptr [rsp]
0xb86b: cmp eax,0x2f
0xb86e: ja 0xb9aa
0xb874: add rax,qword ptr [rsp + 0x10]
0xb879: mov rdx,qword ptr [rax]
0xb87c: mov edi,ebp
0xb87e: xor eax,eax
0xb880: call 0x1dc0
0xb885: mov ebx,eax
0xb887: jmp 0xb820
0xb890: cmp esi,0x409
0xb896: jz 0xb8c0
0xb898: jl 0xb810
0xb89e: cmp esi,0x40a
0xb8a4: jnz 0xb868
0xb8a6: jmp 0xb810
0xb8b0: cmp esi,0x9
0xb8b3: jz 0xb810
0xb8b9: jg 0xb8c0
0xb8bb: cmp esi,0x8
0xb8be: jnz 0xb868
0xb8c0: mov eax,dword ptr [rsp]
0xb8c3: cmp eax,0x2f
0xb8c6: ja 0xb9b4
0xb8cc: add rax,qword ptr [rsp + 0x10]
0xb8d1: mov edx,dword ptr [rax]
0xb8d3: mov edi,ebp
0xb8d5: xor eax,eax
0xb8d7: call 0x1dc0
0xb8dc: mov ebx,eax
0xb8de: jmp 0xb820
0xb8e3: xor esi,esi
0xb8e5: xor eax,eax
0xb8e7: call 0x1dc0
0xb8ec: test eax,eax
0xb8ee: mov ebx,eax
0xb8f0: js 0xb820
0xb8f6: cmp dword ptr [rip+0x2079fb],-0x1
0xb8fd: jnz 0xb820
0xb903: xor eax,eax
0xb905: mov esi,0x1
0xb90a: mov edi,ebx
0xb90c: call 0x1dc0
0xb911: test eax,eax
0xb913: js 0xb931
0xb915: or eax,0x1
0xb918: mov esi,0x2
0xb91d: mov edi,ebx
0xb91f: mov edx,eax
0xb921: xor eax,eax
0xb923: call 0x1dc0
0xb928: cmp eax,-0x1
0xb92b: jnz 0xb820
0xb931: call 0x1d40
0xb936: mov r12d,dword ptr [rax]
0xb939: mov rbp,rax
0xb93c: mov edi,ebx
0xb93e: call 0x1f50
0xb943: mov ebx,0xffffffff
0xb948: mov dword ptr [rbp],r12d
0xb94c: jmp 0xb820
0xb958: call 0x1d40
0xb95d: cmp dword ptr [rax],0x16
0xb960: jnz 0xb7cf
0xb966: xor esi,esi
0xb968: xor eax,eax
0xb96a: mov edx,r12d
0xb96d: mov edi,ebp
0xb96f: call 0x1dc0
0xb974: test eax,eax
0xb976: mov ebx,eax
0xb978: js 0xb820
0xb97e: mov dword ptr [rip+0x207970],0xffffffff
0xb988: jmp 0xb903
0xb98d: call 0x1e80
0xb9aa: mov rax,qword ptr [rsp + 0x8]
0xb9af: jmp 0xb879
0xb9b4: mov rax,qword ptr [rsp + 0x8]
0xb9b9: jmp 0xb8d1
0xbac2: mov rax,qword ptr [-0x418 + rbp]
0xbac9: mov r12,qword ptr [rax]
0xbf94: movsxd rdx,ecx
0xbf97: cmp rdx,r10
0xbf9a: jnc 0xbfaa
0xbf9c: add rdx,r15
0xbf9f: cmp byte ptr [rdx + r14*0x1],0x0
0xbfa4: jnz 0xc8e6
0xbfaa: cmp ecx,eax
0xbfac: jge 0xbfb6
0xc8eb: nop dword ptr [rax + rax*0x1]
0xcab7: call 0x1e80
0xcb20: mov rdx,qword ptr [rdi + 0x8]
0xcb24: add rdx,0xf
0xcb28: and rdx,-0x10
0xcb2c: lea r11,[rdx + 0x10]
0xcb30: mov qword ptr [rdi + 0x8],r11
0xcb34: fld tword ptr [rdx]
0xcb36: fstp tword ptr [rax + 0x10]
0xcb39: nop dword ptr [rax]
0xcb40: add rcx,0x1
0xcb44: add rax,0x20
0xcb48: cmp qword ptr [rsi],rcx
0xcb4b: ja 0xcb08
0xcb56: mov r11d,dword ptr [rdi]
0xcb59: cmp r11d,0x2f
0xcb5d: ja 0xcc9a
0xcb63: mov edx,r11d
0xcb66: add rdx,qword ptr [rdi + 0x10]
0xcb6a: add r11d,0x8
0xcb6e: mov dword ptr [rdi],r11d
0xcb71: mov rdx,qword ptr [rdx]
0xcb74: mov qword ptr [rax + 0x10],rdx
0xcb78: jmp 0xcb40
0xcb7a: mov r11d,dword ptr [rdi]
0xcb7d: cmp r11d,0x2f
0xcb81: ja 0xccbc
0xcb87: mov edx,r11d
0xcb8a: add rdx,qword ptr [rdi + 0x10]
0xcb8e: add r11d,0x8
0xcb92: mov dword ptr [rdi],r11d
0xcb95: mov edx,dword ptr [rdx]
0xcb97: mov dword ptr [rax + 0x10],edx
0xcb9a: jmp 0xcb40
0xcb9c: mov r11d,dword ptr [rdi]
0xcb9f: cmp r11d,0x2f
0xcba3: ja 0xccab
0xcba9: mov edx,r11d
0xcbac: add rdx,qword ptr [rdi + 0x10]
0xcbb0: add r11d,0x8
0xcbb4: mov dword ptr [rdi],r11d
0xcbb7: mov edx,dword ptr [rdx]
0xcbb9: mov byte ptr [rax + 0x10],dl
0xcbbc: jmp 0xcb40
0xcbbe: mov r11d,dword ptr [rdi]
0xcbc1: cmp r11d,0x2f
0xcbc5: ja 0xcc6a
0xcbcb: mov edx,r11d
0xcbce: add rdx,qword ptr [rdi + 0x10]
0xcbd2: add r11d,0x8
0xcbd6: mov dword ptr [rdi],r11d
0xcbd9: mov edx,dword ptr [rdx]
0xcbdb: mov word ptr [rax + 0x10],dx
0xcbdf: jmp 0xcb40
0xcbe4: mov r11d,dword ptr [rdi]
0xcbe7: cmp r11d,0x2f
0xcbeb: ja 0xcc7b
0xcbf1: mov edx,r11d
0xcbf4: add rdx,qword ptr [rdi + 0x10]
0xcbf8: add r11d,0x8
0xcbfc: mov dword ptr [rdi],r11d
0xcbff: mov rdx,qword ptr [rdx]
0xcc02: test rdx,rdx
0xcc05: cmovz rdx,r9
0xcc09: mov qword ptr [rax + 0x10],rdx
0xcc0d: jmp 0xcb40
0xcc12: mov r11d,dword ptr [rdi + 0x4]
0xcc16: cmp r11d,0xaf
0xcc1d: ja 0xcccd
0xcc23: mov edx,r11d
0xcc26: add rdx,qword ptr [rdi + 0x10]
0xcc2a: add r11d,0x10
0xcc2e: mov dword ptr [rdi + 0x4],r11d
0xcc32: movsd xmm0,qword ptr [rdx]
0xcc36: movsd qword ptr [rax + 0x10],xmm0
0xcc3b: jmp 0xcb40
0xcc40: mov r11d,dword ptr [rdi]
0xcc43: cmp r11d,0x2f
0xcc47: ja 0xcc8c
0xcc49: mov edx,r11d
0xcc4c: add rdx,qword ptr [rdi + 0x10]
0xcc50: add r11d,0x8
0xcc54: mov dword ptr [rdi],r11d
0xcc57: mov rdx,qword ptr [rdx]
0xcc5a: test rdx,rdx
0xcc5d: cmovz rdx,r10
0xcc61: mov qword ptr [rax + 0x10],rdx
0xcc65: jmp 0xcb40
0xcc6a: mov rdx,qword ptr [rdi + 0x8]
0xcc6e: lea r11,[rdx + 0x8]
0xcc72: mov qword ptr [rdi + 0x8],r11
0xcc76: jmp 0xcbd9
0xcc7b: mov rdx,qword ptr [rdi + 0x8]
0xcc7f: lea r11,[rdx + 0x8]
0xcc83: mov qword ptr [rdi + 0x8],r11
0xcc87: jmp 0xcbff
0xcc8c: mov rdx,qword ptr [rdi + 0x8]
0xcc90: lea r11,[rdx + 0x8]
0xcc94: mov qword ptr [rdi + 0x8],r11
0xcc98: jmp 0xcc57
0xcc9a: mov rdx,qword ptr [rdi + 0x8]
0xcc9e: lea r11,[rdx + 0x8]
0xcca2: mov qword ptr [rdi + 0x8],r11
0xcca6: jmp 0xcb71
0xccab: mov rdx,qword ptr [rdi + 0x8]
0xccaf: lea r11,[rdx + 0x8]
0xccb3: mov qword ptr [rdi + 0x8],r11
0xccb7: jmp 0xcbb7
0xccbc: mov rdx,qword ptr [rdi + 0x8]
0xccc0: lea r11,[rdx + 0x8]
0xccc4: mov qword ptr [rdi + 0x8],r11
0xccc8: jmp 0xcb95
0xcccd: mov rdx,qword ptr [rdi + 0x8]
0xccd1: lea r11,[rdx + 0x8]
0xccd5: mov qword ptr [rdi + 0x8],r11
0xccd9: jmp 0xcc32
0xd9d0: push r15
0xd9d2: push r14
0xd9d4: mov r15,rdx
0xd9d7: push r13
0xd9d9: push r12
0xd9db: lea r12,[rip+0x204fce]
0xd9e2: push rbp
0xd9e3: lea rbp,[rip+0x204fce]
0xd9ea: push rbx
0xd9eb: mov r13d,edi
0xd9ee: mov r14,rsi
0xd9f1: sub rbp,r12
0xd9f4: sub rsp,0x8
0xd9f8: sar rbp,0x3
0xd9fc: call 0x1cb8
0xda01: test rbp,rbp
0xda04: jz 0xda26
0xda06: xor ebx,ebx
0xda08: nop dword ptr [rax + rax*0x1]
0xda10: mov rdx,r15
0xda13: mov rsi,r14
0xda16: mov edi,r13d
0xda19: call qword ptr [r12 + rbx*0x8]
0xda1d: add rbx,0x1
0xda21: cmp rbp,rbx
0xda24: jnz 0xda10
0xda26: add rsp,0x8
0xda2a: pop rbx
0xda2b: pop rbp
0xda2c: pop r12
0xda2e: pop r13
0xda30: pop r14
0xda32: pop r15
0xda34: ret 
0xda40: ret 
0xda60: sub rsp,0x8
0xda64: add rsp,0x8
0xda68: ret 
