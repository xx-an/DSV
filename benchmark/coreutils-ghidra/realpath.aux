0x1480: sub rsp,0x8
0x1484: mov rax,qword ptr [rip+0x208b45]
0x148b: test rax,rax
0x148e: jz 0x1492
0x1490: call rax
0x1492: add rsp,0x8
0x1496: ret 
0x14a0: push qword ptr [rip+0x20898a]
0x14a6: jmp qword ptr [rip+0x20898c]
0x14b6: push 0x0
0x14bb: jmp 0x14a0
0x14c6: push 0x1
0x14cb: jmp 0x14a0
0x14d6: push 0x2
0x14db: jmp 0x14a0
0x14e6: push 0x3
0x14eb: jmp 0x14a0
0x14f0: jmp qword ptr [rip+0x20896a]
0x14f6: push 0x4
0x14fb: jmp 0x14a0
0x1500: jmp qword ptr [rip+0x208962]
0x1506: push 0x5
0x150b: jmp 0x14a0
0x1510: jmp qword ptr [rip+0x20895a]
0x1516: push 0x6
0x151b: jmp 0x14a0
0x1526: push 0x7
0x152b: jmp 0x14a0
0x1530: jmp qword ptr [rip+0x20894a]
0x1536: push 0x8
0x153b: jmp 0x14a0
0x1546: push 0x9
0x154b: jmp 0x14a0
0x1556: push 0xa
0x155b: jmp 0x14a0
0x1566: push 0xb
0x156b: jmp 0x14a0
0x1576: push 0xc
0x157b: jmp 0x14a0
0x1580: jmp qword ptr [rip+0x208922]
0x1586: push 0xd
0x158b: jmp 0x14a0
0x1590: jmp qword ptr [rip+0x20891a]
0x1596: push 0xe
0x159b: jmp 0x14a0
0x15a6: push 0xf
0x15ab: jmp 0x14a0
0x15b6: push 0x10
0x15bb: jmp 0x14a0
0x15c0: jmp qword ptr [rip+0x208902]
0x15c6: push 0x11
0x15cb: jmp 0x14a0
0x15d6: push 0x12
0x15db: jmp 0x14a0
0x15e6: push 0x13
0x15eb: jmp 0x14a0
0x15f0: jmp qword ptr [rip+0x2088ea]
0x15f6: push 0x14
0x15fb: jmp 0x14a0
0x1606: push 0x15
0x160b: jmp 0x14a0
0x1616: push 0x16
0x161b: jmp 0x14a0
0x1620: jmp qword ptr [rip+0x2088d2]
0x1626: push 0x17
0x162b: jmp 0x14a0
0x1636: push 0x18
0x163b: jmp 0x14a0
0x1646: push 0x19
0x164b: jmp 0x14a0
0x1650: jmp qword ptr [rip+0x2088ba]
0x1656: push 0x1a
0x165b: jmp 0x14a0
0x1660: jmp qword ptr [rip+0x2088b2]
0x1666: push 0x1b
0x166b: jmp 0x14a0
0x1670: jmp qword ptr [rip+0x2088aa]
0x1676: push 0x1c
0x167b: jmp 0x14a0
0x1680: jmp qword ptr [rip+0x2088a2]
0x1686: push 0x1d
0x168b: jmp 0x14a0
0x1696: push 0x1e
0x169b: jmp 0x14a0
0x16a6: push 0x1f
0x16ab: jmp 0x14a0
0x16b0: jmp qword ptr [rip+0x20888a]
0x16b6: push 0x20
0x16bb: jmp 0x14a0
0x16c6: push 0x21
0x16cb: jmp 0x14a0
0x16d0: jmp qword ptr [rip+0x20887a]
0x16d6: push 0x22
0x16db: jmp 0x14a0
0x16e6: push 0x23
0x16eb: jmp 0x14a0
0x16f6: push 0x24
0x16fb: jmp 0x14a0
0x1706: push 0x25
0x170b: jmp 0x14a0
0x1710: jmp qword ptr [rip+0x20885a]
0x1716: push 0x26
0x171b: jmp 0x14a0
0x1726: push 0x27
0x172b: jmp 0x14a0
0x1730: jmp qword ptr [rip+0x20884a]
0x1736: push 0x28
0x173b: jmp 0x14a0
0x1746: push 0x29
0x174b: jmp 0x14a0
0x1756: push 0x2a
0x175b: jmp 0x14a0
0x1766: push 0x2b
0x176b: jmp 0x14a0
0x1776: push 0x2c
0x177b: jmp 0x14a0
0x1786: push 0x2d
0x178b: jmp 0x14a0
0x1796: push 0x2e
0x179b: jmp 0x14a0
0x17a6: push 0x2f
0x17ab: jmp 0x14a0
0x17b0: jmp qword ptr [rip+0x20882a]
0x19d1: test r14,r14
0x19d4: jz 0x1a16
0x19d6: mov esi,ebx
0x19d8: mov rdi,r14
0x19db: call 0x1e30
0x19e0: test rax,rax
0x19e3: mov r15,rax
0x19e6: jz 0x1c53
0x19ec: test r13d,r13d
0x19ef: jz 0x1b92
0x19f5: mov r13,qword ptr [rip+0x2086fc]
0x19fc: mov rdi,r15
0x19ff: mov rsi,r13
0x1a02: call 0x1da0
0x1a07: test al,al
0x1a09: jz 0x1bcc
0x1a0f: mov qword ptr [rip+0x2086da],r15
0x1af7: mov r13,rax
0x1afa: call 0x14d0
0x1aff: mov esi,dword ptr [rax]
0x1b01: lea rdx,[rip+0x5a05]
0x1b08: mov rcx,r13
0x1b0b: xor edi,edi
0x1b0d: xor eax,eax
0x1b0f: xor r13d,r13d
0x1b12: call 0x1720
0x1b17: jmp 0x1aaa
0x1b40: jmp 0x1aa2
0x1b92: mov rdi,rax
0x1b95: call 0x1e80
0x1b9a: test al,al
0x1b9c: jnz 0x19f5
0x1ba2: mov rdx,r14
0x1ba5: mov esi,0x3
0x1baa: xor edi,edi
0x1bac: call 0x5c50
0x1bb1: lea rdx,[rip+0x5955]
0x1bb8: mov rcx,rax
0x1bbb: mov esi,0x14
0x1bc0: mov edi,0x1
0x1bc5: xor eax,eax
0x1bc7: call 0x1720
0x1bcc: mov rdi,r15
0x1bcf: call 0x14b0
0x1bd4: mov qword ptr [rip+0x208515],r13
0x1bdb: mov qword ptr [rip+0x208512],0x0
0x1be6: jmp 0x1a16
0x1c53: mov rdx,r14
0x1c56: mov esi,0x3
0x1c5b: xor edi,edi
0x1c5d: call 0x5c50
0x1c62: mov rbx,rax
0x1c65: call 0x14d0
0x1c6a: mov esi,dword ptr [rax]
0x1c6c: lea rdx,[rip+0x589a]
0x1c73: mov rcx,rbx
0x1c76: mov edi,0x1
0x1c7b: xor eax,eax
0x1c7d: call 0x1720
0x1c82: nop word ptr cs:[rax + rax*0x1]
0x1c8c: nop dword ptr [rax]
0x1cba: hlt 
0x1cc0: lea rdi,[rip+0x2083d9]
0x1cc7: push rbp
0x1cc8: lea rax,[rip+0x2083d1]
0x1ccf: cmp rax,rdi
0x1cd2: mov rbp,rsp
0x1cd5: jz 0x1cf0
0x1cd7: mov rax,qword ptr [rip+0x2082e2]
0x1cde: test rax,rax
0x1ce1: jz 0x1cf0
0x1ce3: pop rbp
0x1ce4: jmp rax
0x1cf0: pop rbp
0x1cf1: ret 
0x1d00: lea rdi,[rip+0x208399]
0x1d07: lea rsi,[rip+0x208392]
0x1d0e: push rbp
0x1d0f: sub rsi,rdi
0x1d12: mov rbp,rsp
0x1d15: sar rsi,0x3
0x1d19: mov rax,rsi
0x1d1c: shr rax,0x3f
0x1d20: add rsi,rax
0x1d23: sar rsi,1
0x1d26: jz 0x1d40
0x1d28: mov rax,qword ptr [rip+0x2082a9]
0x1d2f: test rax,rax
0x1d32: jz 0x1d40
0x1d34: pop rbp
0x1d35: jmp rax
0x1d40: pop rbp
0x1d41: ret 
0x1d50: cmp byte ptr [rip+0x208391],0x0
0x1d57: jnz 0x1d88
0x1d59: cmp qword ptr [rip+0x20827f],0x0
0x1d61: push rbp
0x1d62: mov rbp,rsp
0x1d65: jz 0x1d73
0x1d67: mov rdi,qword ptr [rip+0x20829a]
0x1d6e: call 0x17b0
0x1d73: call 0x1cc0
0x1d78: mov byte ptr [rip+0x208369],0x1
0x1d7f: pop rbp
0x1d80: ret 
0x1d88: ret 
0x1d90: push rbp
0x1d91: mov rbp,rsp
0x1d94: pop rbp
0x1d95: jmp 0x1d00
0x1f20: call 0x1590
0x1f25: nop 
0x1f26: nop word ptr cs:[rax + rax*0x1]
0x22b3: mov r12,rdx
0x22b6: mov rbx,rsi
0x22b9: call 0x1570
0x22be: mov rbp,rax
0x22c1: cmp qword ptr [r12],rbp
0x22c5: mov eax,0x1
0x22ca: ja 0x22d8
0x22cc: pop rbx
0x22cd: pop rbp
0x22ce: pop r12
0x22d0: pop r13
0x22d2: pop r14
0x22d4: ret 
0x22d8: lea rdx,[rbp + 0x1]
0x22dc: mov rsi,r14
0x22df: mov rdi,r13
0x22e2: call 0x1670
0x22e7: add qword ptr [rbx],rbp
0x22ea: sub qword ptr [r12],rbp
0x22ee: xor eax,eax
0x22f0: pop rbx
0x22f1: pop rbp
0x22f2: pop r12
0x22f4: pop r13
0x22f6: pop r14
0x22f8: ret 
0x252b: jmp 0x243d
0x2673: mov r12,r13
0x2676: sub r12,r14
0x2679: cmp r12,0x1
0x267d: jz 0x2850
0x2683: cmp r12,0x2
0x2687: jnz 0x2691
0x2689: cmp al,0x2e
0x268b: jz 0x2920
0x2691: cmp byte ptr [r15 - 0x1],0x2f
0x2696: jz 0x26a0
0x2698: mov byte ptr [r15],0x2f
0x269c: add r15,0x1
0x26a0: lea rax,[r15 + r12*0x1]
0x26a4: cmp rbx,rax
0x26a7: ja 0x26da
0x26a9: sub rbx,rbp
0x26ac: sub r15,rbp
0x26af: mov rdi,rbp
0x26b2: lea rax,[r12 + rbx*0x1 + 0x1]
0x26b7: add rbx,0x1000
0x26be: cmp r12,0x1000
0x26c5: cmovge rbx,rax
0x26c9: mov rsi,rbx
0x26cc: call 0x66b0
0x26d1: mov rbp,rax
0x26d4: add rbx,rax
0x26d7: add r15,rax
0x26da: mov rdi,r15
0x26dd: mov rdx,r12
0x26e0: mov rsi,r14
0x26e3: call 0x1670
0x26e8: cmp dword ptr [rsp + 0x4],0x2
0x26ed: lea r15,[r15 + r12*0x1]
0x26f1: mov byte ptr [r15],0x0
0x26f5: jnz 0x27b0
0x26fb: cmp byte ptr [rsp + 0x1b],0x0
0x2700: jz 0x27b0
0x2706: mov dword ptr [rsp + 0x58],0x0
0x270e: cmp byte ptr [r13],0x0
0x2713: jz 0x2720
0x2715: cmp dword ptr [rsp + 0x4],0x2
0x271a: jnz 0x2b77
0x2720: mov r14,r13
0x2723: movzx eax,byte ptr [r14]
0x2727: test al,al
0x2729: jnz 0x2630
0x2776: mov rdi,rax
0x2779: call 0x3820
0x277e: nop 
0x27b0: mov eax,dword ptr [rsp + 0x1c]
0x27b4: mov rdx,qword ptr [rsp + 0x8]
0x27b9: mov rsi,rbp
0x27bc: mov edi,0x1
0x27c1: test eax,eax
0x27c3: jz 0x2880
0x27c9: call 0x1690
0x27ce: test eax,eax
0x27d0: setnz al
0x27d3: test al,al
0x27d5: jz 0x2860
0x27db: call 0x14d0
0x27e0: mov r14,rax
0x27e3: mov edx,dword ptr [rax]
0x27e5: mov eax,dword ptr [rsp + 0x4]
0x27e9: test eax,eax
0x27eb: jz 0x281e
0x27ed: cmp eax,0x1
0x27f0: jnz 0x2706
0x27f6: lea rsi,[rip+0x4e01]
0x27fd: mov rdi,r13
0x2800: mov dword ptr [rsp + 0x38],edx
0x2804: call 0x1620
0x2809: cmp byte ptr [r13 + rax*0x1],0x0
0x280f: mov edx,dword ptr [rsp + 0x38]
0x2813: jnz 0x281e
0x2815: cmp edx,0x2
0x2818: jz 0x2720
0x281e: mov r12,r14
0x2821: mov rdi,qword ptr [rsp + 0x28]
0x2826: mov dword ptr [rsp + 0x4],edx
0x282a: call 0x14b0
0x282f: mov rdi,rbp
0x2832: call 0x14b0
0x2837: cmp qword ptr [rsp + 0x10],0x0
0x283d: mov edx,dword ptr [rsp + 0x4]
0x2841: jz 0x28fc
0x2847: jmp 0x28ea
0x2850: cmp al,0x2e
0x2852: jnz 0x2691
0x2858: jmp 0x2720
0x2860: mov eax,dword ptr [rsp + 0x58]
0x2864: and eax,0xf000
0x2869: cmp eax,0xa000
0x286e: jz 0x2890
0x2870: cmp eax,0x4000
0x2875: jz 0x2720
0x287b: jmp 0x270e
0x2880: call 0x1580
0x2885: test eax,eax
0x2887: setnz al
0x288a: jmp 0x27d3
0x2890: cmp qword ptr [rsp + 0x10],0x0
0x2896: jz 0x2a46
0x289c: mov rdx,qword ptr [rsp + 0x8]
0x28a1: mov rsi,qword ptr [rsp + 0x20]
0x28a6: mov rdi,qword ptr [rsp + 0x10]
0x28ab: call 0x2d00
0x28b0: test al,al
0x28b2: jz 0x2970
0x28b8: cmp dword ptr [rsp + 0x4],0x2
0x28bd: jz 0x2720
0x28c3: call 0x14d0
0x28c8: mov edx,0x28
0x28cd: mov r12,rax
0x28d0: mov rdi,qword ptr [rsp + 0x28]
0x28d5: mov dword ptr [rsp + 0x4],edx
0x28d9: call 0x14b0
0x28de: mov rdi,rbp
0x28e1: call 0x14b0
0x28e6: mov edx,dword ptr [rsp + 0x4]
0x28ea: mov rdi,qword ptr [rsp + 0x10]
0x28ef: mov dword ptr [rsp + 0x4],edx
0x28f3: call 0x3820
0x28f8: mov edx,dword ptr [rsp + 0x4]
0x28fc: mov dword ptr [r12],edx
0x2900: xor ebp,ebp
0x2902: jmp 0x2780
0x2920: cmp byte ptr [r14 + 0x1],0x2e
0x2925: jnz 0x2691
0x292b: lea rax,[rbp + 0x1]
0x292f: mov r14,r13
0x2932: cmp r15,rax
0x2935: jbe 0x261b
0x293b: lea rax,[r15 - 0x1]
0x293f: cmp rbp,rax
0x2942: jnc 0x2b89
0x2948: cmp byte ptr [r15 - 0x2],0x2f
0x294d: mov r15,rax
0x2950: jz 0x261b
0x2956: sub r15,0x1
0x295a: cmp rbp,r15
0x295d: jz 0x2720
0x2963: cmp byte ptr [r15 - 0x1],0x2f
0x2968: jz 0x2720
0x296e: jmp 0x2956
0x2970: mov rdx,qword ptr [rsp + 0x8]
0x2975: mov rsi,qword ptr [rsp + 0x20]
0x297a: mov rdi,qword ptr [rsp + 0x10]
0x297f: call 0x2c70
0x2984: mov rsi,qword ptr [rsp + 0x70]
0x2989: mov rdi,rbp
0x298c: call 0x69a0
0x2991: test rax,rax
0x2994: mov r14,rax
0x2997: jz 0x2b02
0x299d: mov rdi,rax
0x29a0: call 0x1570
0x29a5: mov rdi,r13
0x29a8: mov r12,rax
0x29ab: mov qword ptr [rsp + 0x20],rax
0x29b0: call 0x1570
0x29b5: cmp qword ptr [rsp + 0x30],0x0
0x29bb: mov rdx,rax
0x29be: lea rcx,[r12 + rdx*0x1 + 0x1]
0x29c3: jz 0x2abf
0x29c9: cmp qword ptr [rsp + 0x30],rcx
0x29ce: jnc 0x29f1
0x29d0: mov rdi,qword ptr [rsp + 0x28]
0x29d5: mov rsi,rcx
0x29d8: mov qword ptr [rsp + 0x38],rdx
0x29dd: mov qword ptr [rsp + 0x30],rcx
0x29e2: call 0x66b0
0x29e7: mov rdx,qword ptr [rsp + 0x38]
0x29ec: mov qword ptr [rsp + 0x28],rax
0x29f1: mov r12,qword ptr [rsp + 0x28]
0x29f6: mov rdi,qword ptr [rsp + 0x20]
0x29fb: add rdx,0x1
0x29ff: mov rsi,r13
0x2a02: add rdi,r12
0x2a05: mov r13,r12
0x2a08: call 0x1710
0x2a0d: mov rdx,qword ptr [rsp + 0x20]
0x2a12: mov rsi,r14
0x2a15: mov rdi,r12
0x2a18: call 0x1670
0x2a1d: cmp byte ptr [r14],0x2f
0x2a21: mov qword ptr [rsp + 0x20],r12
0x2a26: lea rax,[rbp + 0x1]
0x2a2a: jz 0x2b24
0x2a30: cmp r15,rax
0x2a33: ja 0x2b42
0x2a39: mov rdi,r14
0x2a3c: call 0x14b0
0x2a41: jmp 0x2720
0x2a46: lea r8,[rip+0x16a3]
0x2a4d: lea rcx,[rip+0x165c]
0x2a54: xor esi,esi
0x2a56: lea rdx,[rip+0x15e3]
0x2a5d: mov edi,0x7
0x2a62: call 0x35d0
0x2a67: test rax,rax
0x2a6a: mov qword ptr [rsp + 0x10],rax
0x2a6f: jnz 0x289c
0x2a75: call 0x68a0
0x2a7a: nop word ptr [rax + rax*0x1]
0x2abf: cmp rcx,0x1000
0x2ac6: mov eax,0x1000
0x2acb: mov qword ptr [rsp + 0x38],rdx
0x2ad0: cmovnc rax,rcx
0x2ad4: mov rdi,rax
0x2ad7: mov qword ptr [rsp + 0x30],rax
0x2adc: call 0x6650
0x2ae1: mov rdx,qword ptr [rsp + 0x38]
0x2ae6: mov qword ptr [rsp + 0x28],rax
0x2aeb: jmp 0x29f1
0x2b02: call 0x14d0
0x2b07: cmp dword ptr [rsp + 0x4],0x2
0x2b0c: mov r14,rax
0x2b0f: mov edx,dword ptr [rax]
0x2b11: jnz 0x2b1c
0x2b13: cmp edx,0xc
0x2b16: jnz 0x2720
0x2b1c: mov r12,r14
0x2b1f: jmp 0x28d0
0x2b24: mov byte ptr [rbp],0x2f
0x2b28: mov r15,rax
0x2b2b: jmp 0x2a39
0x2b42: lea rax,[r15 - 0x1]
0x2b46: cmp rbp,rax
0x2b49: jnc 0x2b52
0x2b4b: cmp byte ptr [r15 - 0x2],0x2f
0x2b50: jnz 0x2b5d
0x2b52: mov r15,rax
0x2b55: jmp 0x2a39
0x2b5a: mov rax,r15
0x2b5d: lea r15,[rax - 0x1]
0x2b61: cmp rbp,r15
0x2b64: jz 0x2a39
0x2b6a: cmp byte ptr [r15 - 0x1],0x2f
0x2b6f: jz 0x2a39
0x2b75: jmp 0x2b5a
0x2b77: call 0x14d0
0x2b7c: mov edx,0x14
0x2b81: mov r12,rax
0x2b84: jmp 0x2821
0x2b89: mov r15,rax
0x2b8c: jmp 0x261b
0x2b91: call 0x1590
0x2b96: nop word ptr cs:[rax + rax*0x1]
0x2ba0: mov qword ptr [rip+0x207569],rdi
0x2ba7: ret 
0x2bb0: mov byte ptr [rip+0x207551],dil
0x2bb7: ret 
0x2bc0: push rbp
0x2bc1: push rbx
0x2bc2: sub rsp,0x8
0x2bc6: mov rdi,qword ptr [rip+0x2074db]
0x2bcd: call 0x6a90
0x2bd2: test eax,eax
0x2bd4: jz 0x2bec
0x2bd6: call 0x14d0
0x2bdb: cmp byte ptr [rip+0x207526],0x0
0x2be2: mov rbx,rax
0x2be5: jz 0x2c03
0x2be7: cmp dword ptr [rax],0x20
0x2bea: jnz 0x2c03
0x2bec: mov rdi,qword ptr [rip+0x2074ed]
0x2bf3: call 0x6a90
0x2bf8: test eax,eax
0x2bfa: jnz 0x2c42
0x2bfc: add rsp,0x8
0x2c00: pop rbx
0x2c01: pop rbp
0x2c02: ret 
0x2c03: lea rsi,[rip+0x48f3]
0x2c0a: xor edi,edi
0x2c0c: mov edx,0x5
0x2c11: call 0x1550
0x2c16: mov rdi,qword ptr [rip+0x2074f3]
0x2c1d: mov rbp,rax
0x2c20: test rdi,rdi
0x2c23: jz 0x2c4d
0x2c25: call 0x5c20
0x2c2a: mov esi,dword ptr [rbx]
0x2c2c: lea rdx,[rip+0x48d6]
0x2c33: mov rcx,rax
0x2c36: mov r8,rbp
0x2c39: xor edi,edi
0x2c3b: xor eax,eax
0x2c3d: call 0x1720
0x2c42: mov edi,dword ptr [rip+0x2073d8]
0x2c48: call 0x14f0
0x2c4d: mov esi,dword ptr [rbx]
0x2c4f: lea rdx,[rip+0x48b7]
0x2c56: mov rcx,rax
0x2c59: xor edi,edi
0x2c5b: xor eax,eax
0x2c5d: call 0x1720
0x2c62: jmp 0x2c42
0x2c70: test rdi,rdi
0x2c73: jz 0x2cf0
0x2c75: push r13
0x2c77: push r12
0x2c79: mov r13,rdi
0x2c7c: push rbp
0x2c7d: push rbx
0x2c7e: mov r12,rsi
0x2c81: mov edi,0x18
0x2c86: mov rbp,rdx
0x2c89: sub rsp,0x8
0x2c8d: call 0x6650
0x2c92: mov rdi,r12
0x2c95: mov rbx,rax
0x2c98: call 0x6880
0x2c9d: mov qword ptr [rbx],rax
0x2ca0: mov rax,qword ptr [rbp + 0x8]
0x2ca4: mov rsi,rbx
0x2ca7: mov rdi,r13
0x2caa: mov qword ptr [rbx + 0x8],rax
0x2cae: mov rax,qword ptr [rbp]
0x2cb2: mov qword ptr [rbx + 0x10],rax
0x2cb6: call 0x3dd0
0x2cbb: test rax,rax
0x2cbe: jz 0x2cf2
0x2cc0: cmp rbx,rax
0x2cc3: jz 0x2ce0
0x2cc5: add rsp,0x8
0x2cc9: mov rdi,rbx
0x2ccc: pop rbx
0x2ccd: pop rbp
0x2cce: pop r12
0x2cd0: pop r13
0x2cd2: jmp 0x40f0
0x2ce0: add rsp,0x8
0x2ce4: pop rbx
0x2ce5: pop rbp
0x2ce6: pop r12
0x2ce8: pop r13
0x2cea: ret 
0x2cf0: ret 
0x2cf2: call 0x68a0
0x2cf7: nop word ptr [rax + rax*0x1]
0x2d00: sub rsp,0x28
0x2d04: mov rax,qword ptr fs:[rip+0xffffffffffffd31b]
0x2d0d: mov qword ptr [rsp + 0x18],rax
0x2d12: xor eax,eax
0x2d14: test rdi,rdi
0x2d17: jz 0x2d3c
0x2d19: mov rax,qword ptr [rdx + 0x8]
0x2d1d: mov qword ptr [rsp],rsi
0x2d21: mov rsi,rsp
0x2d24: mov qword ptr [rsp + 0x8],rax
0x2d29: mov rax,qword ptr [rdx]
0x2d2c: mov qword ptr [rsp + 0x10],rax
0x2d31: call 0x3360
0x2d36: test rax,rax
0x2d39: setnz al
0x2d3c: mov rcx,qword ptr [rsp + 0x18]
0x2d41: xor rcx,qword ptr fs:[rip+0xffffffffffffd2de]
0x2d4a: jnz 0x2d51
0x2d4c: add rsp,0x28
0x2d50: ret 
0x2d51: call 0x1590
0x2d56: nop word ptr cs:[rax + rax*0x1]
0x2d60: cmp rdi,0xa
0x2d64: mov eax,0xa
0x2d69: mov r9,-0x5555555555555555
0x2d73: cmovc rdi,rax
0x2d77: or rdi,0x1
0x2d7b: cmp rdi,-0x1
0x2d7f: jz 0x2def
0x2d81: nop dword ptr [rax]
0x2d88: mov rax,rdi
0x2d8b: mov rcx,rdi
0x2d8e: mul r9
0x2d91: mov rax,rdx
0x2d94: shr rax,1
0x2d97: lea rax,[rax + rax*0x2]
0x2d9b: sub rcx,rax
0x2d9e: cmp rdi,0x9
0x2da2: mov rax,rcx
0x2da5: jbe 0x2de0
0x2da7: test rcx,rcx
0x2daa: jz 0x2de5
0x2dac: mov r8d,0x10
0x2db2: mov esi,0x9
0x2db7: mov ecx,0x3
0x2dbc: jmp 0x2dc9
0x2dc0: add r8,0x8
0x2dc4: test rdx,rdx
0x2dc7: jz 0x2de5
0x2dc9: add rcx,0x2
0x2dcd: xor edx,edx
0x2dcf: mov rax,rdi
0x2dd2: div rcx
0x2dd5: add rsi,r8
0x2dd8: cmp rsi,rdi
0x2ddb: mov rax,rdx
0x2dde: jc 0x2dc0
0x2de0: test rax,rax
0x2de3: jnz 0x2def
0x2de5: add rdi,0x2
0x2de9: cmp rdi,-0x1
0x2ded: jnz 0x2d88
0x2def: mov rax,rdi
0x2df2: ret 
0x2e00: mov rax,rdi
0x2e03: xor edx,edx
0x2e05: ror rax,0x3
0x2e09: div rsi
0x2e0c: mov rax,rdx
0x2e0f: ret 
0x2e10: cmp rdi,rsi
0x2e13: setz al
0x2e16: ret 
0x2e20: push rbx
0x2e21: mov rbx,rdi
0x2e24: mov rdi,rsi
0x2e27: mov rsi,qword ptr [rbx + 0x10]
0x2e2b: call qword ptr [rbx + 0x30]
0x2e2e: cmp qword ptr [rbx + 0x10],rax
0x2e32: jbe 0x2e3d
0x2e34: shl rax,0x4
0x2e38: add rax,qword ptr [rbx]
0x2e3b: pop rbx
0x2e3c: ret 
0x2e3d: call 0x14c0
0x2e42: nop dword ptr [rax]
0x2e46: nop word ptr cs:[rax + rax*0x1]
0x2e50: push r14
0x2e52: push r13
0x2e54: mov r14,rdx
0x2e57: push r12
0x2e59: push rbp
0x2e5a: mov r12,rdi
0x2e5d: push rbx
0x2e5e: mov rbp,rsi
0x2e61: mov r13d,ecx
0x2e64: call 0x2e20
0x2e69: mov qword ptr [r14],rax
0x2e6c: mov rsi,qword ptr [rax]
0x2e6f: test rsi,rsi
0x2e72: jz 0x2f60
0x2e78: cmp rsi,rbp
0x2e7b: mov rbx,rax
0x2e7e: jz 0x2f13
0x2e84: mov rdi,rbp
0x2e87: call qword ptr [r12 + 0x38]
0x2e8c: test al,al
0x2e8e: jnz 0x2f10
0x2e94: mov rax,qword ptr [rbx + 0x8]
0x2e98: test rax,rax
0x2e9b: jz 0x2f60
0x2ea1: mov rsi,qword ptr [rax]
0x2ea4: cmp rbp,rsi
0x2ea7: jnz 0x2ec9
0x2ea9: jmp 0x2edc
0x2eb0: mov rbx,qword ptr [rbx + 0x8]
0x2eb4: mov rax,qword ptr [rbx + 0x8]
0x2eb8: test rax,rax
0x2ebb: jz 0x2f60
0x2ec1: mov rsi,qword ptr [rax]
0x2ec4: cmp rsi,rbp
0x2ec7: jz 0x2edc
0x2ec9: mov rdi,rbp
0x2ecc: call qword ptr [r12 + 0x38]
0x2ed1: test al,al
0x2ed3: jz 0x2eb0
0x2ed5: mov rax,qword ptr [rbx + 0x8]
0x2ed9: mov rsi,qword ptr [rax]
0x2edc: test r13b,r13b
0x2edf: jz 0x2efe
0x2ee1: mov rdx,qword ptr [rax + 0x8]
0x2ee5: mov qword ptr [rbx + 0x8],rdx
0x2ee9: mov qword ptr [rax],0x0
0x2ef0: mov rdx,qword ptr [r12 + 0x48]
0x2ef5: mov qword ptr [rax + 0x8],rdx
0x2ef9: mov qword ptr [r12 + 0x48],rax
0x2efe: pop rbx
0x2eff: mov rax,rsi
0x2f02: pop rbp
0x2f03: pop r12
0x2f05: pop r13
0x2f07: pop r14
0x2f09: ret 
0x2f10: mov rsi,qword ptr [rbx]
0x2f13: test r13b,r13b
0x2f16: jz 0x2efe
0x2f18: mov rax,qword ptr [rbx + 0x8]
0x2f1c: test rax,rax
0x2f1f: jz 0x2f50
0x2f21: movdqu xmm0,xmmword ptr [rax]
0x2f25: movups xmmword ptr [rbx],xmm0
0x2f28: mov qword ptr [rax],0x0
0x2f2f: mov rdx,qword ptr [r12 + 0x48]
0x2f34: mov qword ptr [rax + 0x8],rdx
0x2f38: mov qword ptr [r12 + 0x48],rax
0x2f3d: mov rax,rsi
0x2f40: pop rbx
0x2f41: pop rbp
0x2f42: pop r12
0x2f44: pop r13
0x2f46: pop r14
0x2f48: ret 
0x2f50: mov qword ptr [rbx],0x0
0x2f57: jmp 0x2efe
0x2f60: xor esi,esi
0x2f62: pop rbx
0x2f63: mov rax,rsi
0x2f66: pop rbp
0x2f67: pop r12
0x2f69: pop r13
0x2f6b: pop r14
0x2f6d: ret 
0x2f70: mov rdx,qword ptr [rdi]
0x2f73: lea rcx,[rip+0x4606]
0x2f7a: mov eax,0x1
0x2f7f: cmp rdx,rcx
0x2f82: jz 0x2fe5
0x2f84: movss xmm0,dword ptr [rdx + 0x8]
0x2f89: ucomiss xmm0,dword ptr [rip+0x4604]
0x2f90: jbe 0x2fe0
0x2f92: movss xmm1,dword ptr [rip+0x45fe]
0x2f9a: ucomiss xmm1,xmm0
0x2f9d: jbe 0x2fe0
0x2f9f: movss xmm1,dword ptr [rdx + 0xc]
0x2fa4: ucomiss xmm1,dword ptr [rip+0x45f1]
0x2fab: jbe 0x2fe0
0x2fad: movss xmm1,dword ptr [rdx]
0x2fb1: ucomiss xmm1,dword ptr [rip+0x45e8]
0x2fb8: jc 0x2fe0
0x2fba: addss xmm1,dword ptr [rip+0x45d2]
0x2fc2: movss xmm2,dword ptr [rdx + 0x4]
0x2fc7: ucomiss xmm2,xmm1
0x2fca: jbe 0x2fe0
0x2fcc: movss xmm3,dword ptr [rip+0x45d0]
0x2fd4: ucomiss xmm3,xmm2
0x2fd7: jc 0x2fe0
0x2fd9: ucomiss xmm0,xmm1
0x2fdc: ja 0x2fe5
0x2fde: nop 
0x2fe0: mov qword ptr [rdi],rcx
0x2fe3: xor eax,eax
0x2fe5: ret 
0x2ff0: push r15
0x2ff2: push r14
0x2ff4: push r13
0x2ff6: push r12
0x2ff8: push rbp
0x2ff9: push rbx
0x2ffa: sub rsp,0x8
0x2ffe: mov r12,qword ptr [rsi]
0x3001: cmp r12,qword ptr [rsi + 0x8]
0x3005: jnc 0x30e8
0x300b: mov rbp,rdi
0x300e: mov r13,rsi
0x3011: mov r14d,edx
0x3014: nop dword ptr [rax]
0x3018: mov r15,qword ptr [r12]
0x301c: test r15,r15
0x301f: jz 0x30da
0x3025: mov rbx,qword ptr [r12 + 0x8]
0x302a: test rbx,rbx
0x302d: jnz 0x304c
0x302f: jmp 0x308b
0x3038: mov rcx,qword ptr [rax + 0x8]
0x303c: test rdx,rdx
0x303f: mov qword ptr [rbx + 0x8],rcx
0x3043: mov qword ptr [rax + 0x8],rbx
0x3047: mov rbx,rdx
0x304a: jz 0x3087
0x304c: mov r15,qword ptr [rbx]
0x304f: mov rdi,rbp
0x3052: mov rsi,r15
0x3055: call 0x2e20
0x305a: cmp qword ptr [rax],0x0
0x305e: mov rdx,qword ptr [rbx + 0x8]
0x3062: jnz 0x3038
0x3064: mov qword ptr [rax],r15
0x3067: add qword ptr [rbp + 0x18],0x1
0x306c: test rdx,rdx
0x306f: mov qword ptr [rbx],0x0
0x3076: mov rax,qword ptr [rbp + 0x48]
0x307a: mov qword ptr [rbx + 0x8],rax
0x307e: mov qword ptr [rbp + 0x48],rbx
0x3082: mov rbx,rdx
0x3085: jnz 0x304c
0x3087: mov r15,qword ptr [r12]
0x308b: test r14b,r14b
0x308e: mov qword ptr [r12 + 0x8],0x0
0x3097: jnz 0x30da
0x3099: mov rsi,r15
0x309c: mov rdi,rbp
0x309f: call 0x2e20
0x30a4: cmp qword ptr [rax],0x0
0x30a8: mov rbx,rax
0x30ab: jz 0x3100
0x30ad: mov rax,qword ptr [rbp + 0x48]
0x30b1: test rax,rax
0x30b4: jz 0x3110
0x30b6: mov rdx,qword ptr [rax + 0x8]
0x30ba: mov qword ptr [rbp + 0x48],rdx
0x30be: mov rdx,qword ptr [rbx + 0x8]
0x30c2: mov qword ptr [rax],r15
0x30c5: mov qword ptr [rax + 0x8],rdx
0x30c9: mov qword ptr [rbx + 0x8],rax
0x30cd: mov qword ptr [r12],0x0
0x30d5: sub qword ptr [r13 + 0x18],0x1
0x30da: add r12,0x10
0x30de: cmp qword ptr [r13 + 0x8],r12
0x30e2: ja 0x3018
0x30e8: add rsp,0x8
0x30ec: mov eax,0x1
0x30f1: pop rbx
0x30f2: pop rbp
0x30f3: pop r12
0x30f5: pop r13
0x30f7: pop r14
0x30f9: pop r15
0x30fb: ret 
0x3100: mov qword ptr [rax],r15
0x3103: add qword ptr [rbp + 0x18],0x1
0x3108: jmp 0x30cd
0x3110: mov edi,0x10
0x3115: call 0x16a0
0x311a: test rax,rax
0x311d: jnz 0x30be
0x311f: add rsp,0x8
0x3123: xor eax,eax
0x3125: pop rbx
0x3126: pop rbp
0x3127: pop r12
0x3129: pop r13
0x312b: pop r14
0x312d: pop r15
0x312f: ret 
0x3130: mov rax,qword ptr [rdi + 0x10]
0x3134: ret 
0x3140: mov rax,qword ptr [rdi + 0x18]
0x3144: ret 
0x3150: mov rax,qword ptr [rdi + 0x20]
0x3154: ret 
0x3160: mov rsi,qword ptr [rdi]
0x3163: mov rdi,qword ptr [rdi + 0x8]
0x3167: xor eax,eax
0x3169: cmp rsi,rdi
0x316c: jnc 0x31a7
0x316e: nop 
0x3170: cmp qword ptr [rsi],0x0
0x3174: jz 0x319c
0x3176: mov rdx,qword ptr [rsi + 0x8]
0x317a: mov ecx,0x1
0x317f: test rdx,rdx
0x3182: jz 0x3195
0x3184: nop dword ptr [rax]
0x3188: mov rdx,qword ptr [rdx + 0x8]
0x318c: add rcx,0x1
0x3190: test rdx,rdx
0x3193: jnz 0x3188
0x3195: cmp rax,rcx
0x3198: cmovc rax,rcx
0x319c: add rsi,0x10
0x31a0: cmp rsi,rdi
0x31a3: jc 0x3170
0x31a5: ret 
0x31a7: ret 
0x31b0: mov rcx,qword ptr [rdi]
0x31b3: mov r8,qword ptr [rdi + 0x8]
0x31b7: xor edx,edx
0x31b9: xor esi,esi
0x31bb: cmp rcx,r8
0x31be: jnc 0x31f6
0x31c0: cmp qword ptr [rcx],0x0
0x31c4: jz 0x31ed
0x31c6: mov rax,qword ptr [rcx + 0x8]
0x31ca: add rsi,0x1
0x31ce: add rdx,0x1
0x31d2: test rax,rax
0x31d5: jz 0x31ed
0x31d7: nop word ptr [rax + rax*0x1]
0x31e0: mov rax,qword ptr [rax + 0x8]
0x31e4: add rdx,0x1
0x31e8: test rax,rax
0x31eb: jnz 0x31e0
0x31ed: add rcx,0x10
0x31f1: cmp rcx,r8
0x31f4: jc 0x31c0
0x31f6: xor eax,eax
0x31f8: cmp qword ptr [rdi + 0x18],rsi
0x31fc: jz 0x3200
0x31fe: ret 
0x3200: cmp qword ptr [rdi + 0x20],rdx
0x3204: setz al
0x3207: ret 
0x3210: push r13
0x3212: push r12
0x3214: mov r12,rsi
0x3217: push rbp
0x3218: push rbx
0x3219: xor ebx,ebx
0x321b: sub rsp,0x8
0x321f: mov rsi,qword ptr [rdi]
0x3222: mov rcx,qword ptr [rdi + 0x20]
0x3226: mov rbp,qword ptr [rdi + 0x10]
0x322a: mov r13,qword ptr [rdi + 0x18]
0x322e: mov rdi,qword ptr [rdi + 0x8]
0x3232: cmp rsi,rdi
0x3235: jnc 0x3275
0x3237: nop word ptr [rax + rax*0x1]
0x3240: cmp qword ptr [rsi],0x0
0x3244: jz 0x326c
0x3246: mov rax,qword ptr [rsi + 0x8]
0x324a: mov edx,0x1
0x324f: test rax,rax
0x3252: jz 0x3265
0x3254: nop dword ptr [rax]
0x3258: mov rax,qword ptr [rax + 0x8]
0x325c: add rdx,0x1
0x3260: test rax,rax
0x3263: jnz 0x3258
0x3265: cmp rbx,rdx
0x3268: cmovc rbx,rdx
0x326c: add rsi,0x10
0x3270: cmp rsi,rdi
0x3273: jc 0x3240
0x3275: lea rdx,[rip+0x4294]
0x327c: mov esi,0x1
0x3281: mov rdi,r12
0x3284: xor eax,eax
0x3286: call 0x1770
0x328b: lea rdx,[rip+0x4296]
0x3292: xor eax,eax
0x3294: mov rcx,rbp
0x3297: mov esi,0x1
0x329c: mov rdi,r12
0x329f: call 0x1770
0x32a4: test r13,r13
0x32a7: js 0x3310
0x32a9: pxor xmm0,xmm0
0x32ad: test rbp,rbp
0x32b0: cvtsi2sd xmm0,r13
0x32b5: mulsd xmm0,qword ptr [rip+0x42fb]
0x32bd: js 0x3339
0x32bf: pxor xmm1,xmm1
0x32c3: cvtsi2sd xmm1,rbp
0x32c8: divsd xmm0,xmm1
0x32cc: lea rdx,[rip+0x4285]
0x32d3: mov rcx,r13
0x32d6: mov rdi,r12
0x32d9: mov esi,0x1
0x32de: mov eax,0x1
0x32e3: call 0x1770
0x32e8: add rsp,0x8
0x32ec: mov rcx,rbx
0x32ef: mov rdi,r12
0x32f2: pop rbx
0x32f3: pop rbp
0x32f4: pop r12
0x32f6: pop r13
0x32f8: lea rdx,[rip+0x4241]
0x32ff: mov esi,0x1
0x3304: xor eax,eax
0x3306: jmp 0x1770
0x3310: mov rax,r13
0x3313: mov rdx,r13
0x3316: pxor xmm0,xmm0
0x331a: shr rax,1
0x331d: and edx,0x1
0x3320: or rax,rdx
0x3323: test rbp,rbp
0x3326: cvtsi2sd xmm0,rax
0x332b: addsd xmm0,xmm0
0x332f: mulsd xmm0,qword ptr [rip+0x4281]
0x3337: jns 0x32bf
0x3339: mov rax,rbp
0x333c: pxor xmm1,xmm1
0x3340: shr rax,1
0x3343: and ebp,0x1
0x3346: or rax,rbp
0x3349: cvtsi2sd xmm1,rax
0x334e: addsd xmm1,xmm1
0x3352: jmp 0x32c8
0x3360: push r12
0x3362: push rbp
0x3363: mov r12,rdi
0x3366: push rbx
0x3367: mov rbp,rsi
0x336a: call 0x2e20
0x336f: mov rsi,qword ptr [rax]
0x3372: test rsi,rsi
0x3375: jz 0x339d
0x3377: mov rbx,rax
0x337a: jmp 0x3383
0x3380: mov rsi,qword ptr [rbx]
0x3383: cmp rsi,rbp
0x3386: jz 0x339f
0x3388: mov rdi,rbp
0x338b: call qword ptr [r12 + 0x38]
0x3390: test al,al
0x3392: jnz 0x33b0
0x3394: mov rbx,qword ptr [rbx + 0x8]
0x3398: test rbx,rbx
0x339b: jnz 0x3380
0x339d: xor esi,esi
0x339f: pop rbx
0x33a0: mov rax,rsi
0x33a3: pop rbp
0x33a4: pop r12
0x33a6: ret 
0x33b0: mov rsi,qword ptr [rbx]
0x33b3: pop rbx
0x33b4: pop rbp
0x33b5: mov rax,rsi
0x33b8: pop r12
0x33ba: ret 
0x33c0: cmp qword ptr [rdi + 0x20],0x0
0x33c5: jz 0x33f3
0x33c7: mov rdx,qword ptr [rdi]
0x33ca: mov rcx,qword ptr [rdi + 0x8]
0x33ce: cmp rdx,rcx
0x33d1: jnc 0x33f8
0x33d3: mov rax,qword ptr [rdx]
0x33d6: test rax,rax
0x33d9: jnz 0x33f6
0x33db: nop dword ptr [rax + rax*0x1]
0x33e0: add rdx,0x10
0x33e4: cmp rdx,rcx
0x33e7: jnc 0x33f8
0x33e9: mov rax,qword ptr [rdx]
0x33ec: test rax,rax
0x33ef: jz 0x33e0
0x33f1: ret 
0x33f3: xor eax,eax
0x33f5: ret 
0x33f6: ret 
0x33f8: sub rsp,0x8
0x33fc: call 0x14c0
0x3401: nop dword ptr [rax + rax*0x1]
0x3406: nop word ptr cs:[rax + rax*0x1]
0x3410: push rbp
0x3411: push rbx
0x3412: mov rbp,rdi
0x3415: mov rbx,rsi
0x3418: sub rsp,0x8
0x341c: call 0x2e20
0x3421: mov rdx,rax
0x3424: mov rcx,rax
0x3427: mov rax,qword ptr [rdx]
0x342a: mov rdx,qword ptr [rdx + 0x8]
0x342e: cmp rax,rbx
0x3431: jz 0x3449
0x3433: nop dword ptr [rax + rax*0x1]
0x3438: test rdx,rdx
0x343b: jz 0x344e
0x343d: mov rax,qword ptr [rdx]
0x3440: mov rdx,qword ptr [rdx + 0x8]
0x3444: cmp rax,rbx
0x3447: jnz 0x3438
0x3449: test rdx,rdx
0x344c: jnz 0x3478
0x344e: mov rdx,qword ptr [rbp + 0x8]
0x3452: jmp 0x3460
0x3458: mov rax,qword ptr [rcx]
0x345b: test rax,rax
0x345e: jnz 0x346b
0x3460: add rcx,0x10
0x3464: cmp rdx,rcx
0x3467: ja 0x3458
0x3469: xor eax,eax
0x346b: add rsp,0x8
0x346f: pop rbx
0x3470: pop rbp
0x3471: ret 
0x3478: mov rax,qword ptr [rdx]
0x347b: add rsp,0x8
0x347f: pop rbx
0x3480: pop rbp
0x3481: ret 
0x3490: mov r9,qword ptr [rdi]
0x3493: cmp qword ptr [rdi + 0x8],r9
0x3497: jbe 0x34f2
0x3499: xor r8d,r8d
0x349c: mov rcx,qword ptr [r9]
0x349f: test rcx,rcx
0x34a2: jz 0x34dd
0x34a4: cmp rdx,r8
0x34a7: jbe 0x34e7
0x34a9: mov qword ptr [rsi + r8*0x8],rcx
0x34ad: mov rcx,qword ptr [r9 + 0x8]
0x34b1: lea rax,[r8 + 0x1]
0x34b5: test rcx,rcx
0x34b8: jz 0x34da
0x34ba: nop word ptr [rax + rax*0x1]
0x34c0: cmp rdx,rax
0x34c3: jz 0x34f0
0x34c5: mov r8,qword ptr [rcx]
0x34c8: add rax,0x1
0x34cc: mov qword ptr [rsi + rax*0x8 - 0x8],r8
0x34d1: mov rcx,qword ptr [rcx + 0x8]
0x34d5: test rcx,rcx
0x34d8: jnz 0x34c0
0x34da: mov r8,rax
0x34dd: add r9,0x10
0x34e1: cmp qword ptr [rdi + 0x8],r9
0x34e5: ja 0x349c
0x34e7: mov rax,r8
0x34ea: ret 
0x34f0: ret 
0x34f2: xor eax,eax
0x34f4: ret 
0x3500: push r15
0x3502: push r14
0x3504: push r13
0x3506: push r12
0x3508: push rbp
0x3509: push rbx
0x350a: sub rsp,0x8
0x350e: mov r14,qword ptr [rdi]
0x3511: cmp qword ptr [rdi + 0x8],r14
0x3515: jbe 0x3566
0x3517: mov r13,rdx
0x351a: mov r12,rsi
0x351d: mov r15,rdi
0x3520: xor ebp,ebp
0x3522: mov rdi,qword ptr [r14]
0x3525: test rdi,rdi
0x3528: jz 0x354a
0x352a: mov rbx,r14
0x352d: jmp 0x3533
0x3530: mov rdi,qword ptr [rbx]
0x3533: mov rsi,r13
0x3536: call r12
0x3539: test al,al
0x353b: jz 0x3554
0x353d: mov rbx,qword ptr [rbx + 0x8]
0x3541: add rbp,0x1
0x3545: test rbx,rbx
0x3548: jnz 0x3530
0x354a: add r14,0x10
0x354e: cmp qword ptr [r15 + 0x8],r14
0x3552: ja 0x3522
0x3554: add rsp,0x8
0x3558: mov rax,rbp
0x355b: pop rbx
0x355c: pop rbp
0x355d: pop r12
0x355f: pop r13
0x3561: pop r14
0x3563: pop r15
0x3565: ret 
0x3566: xor ebp,ebp
0x3568: jmp 0x3554
0x3570: movzx ecx,byte ptr [rdi]
0x3573: xor edx,edx
0x3575: test cl,cl
0x3577: jz 0x359d
0x3579: nop dword ptr [rax]
0x3580: mov rax,rdx
0x3583: add rdi,0x1
0x3587: shl rax,0x5
0x358b: sub rax,rdx
0x358e: xor edx,edx
0x3590: add rax,rcx
0x3593: movzx ecx,byte ptr [rdi]
0x3596: div rsi
0x3599: test cl,cl
0x359b: jnz 0x3580
0x359d: mov rax,rdx
0x35a0: ret 
0x35b0: mov rax,0x3f80000000000000
0x35ba: mov byte ptr [rdi + 0x10],0x0
0x35be: mov qword ptr [rdi],rax
0x35c1: mov rax,0x3fb4fdf43f4ccccd
0x35cb: mov qword ptr [rdi + 0x8],rax
0x35cf: ret 
0x35d0: push r15
0x35d2: push r14
0x35d4: lea rax,[rip+0xfffffffffffff825]
0x35db: push r13
0x35dd: push r12
0x35df: mov r12,rdx
0x35e2: push rbp
0x35e3: push rbx
0x35e4: mov r13,rcx
0x35e7: mov rbp,rdi
0x35ea: mov edi,0x50
0x35ef: mov r15,rsi
0x35f2: sub rsp,0x8
0x35f6: test rdx,rdx
0x35f9: mov r14,r8
0x35fc: cmovz r12,rax
0x3600: lea rax,[rip+0xfffffffffffff809]
0x3607: test rcx,rcx
0x360a: cmovz r13,rax
0x360e: call 0x16a0
0x3613: test rax,rax
0x3616: mov rbx,rax
0x3619: jz 0x36ca
0x361f: test r15,r15
0x3622: lea rdi,[rax + 0x28]
0x3626: jz 0x36e0
0x362c: mov qword ptr [rax + 0x28],r15
0x3630: call 0x2f70
0x3635: test al,al
0x3637: jz 0x36c0
0x363d: cmp byte ptr [r15 + 0x10],0x0
0x3642: jz 0x3740
0x3648: mov rdi,rbp
0x364b: call 0x2d60
0x3650: mov edx,0x8
0x3655: mov rbp,rax
0x3658: xor ecx,ecx
0x365a: mov rax,rdx
0x365d: mul rbp
0x3660: jo 0x377a
0x3666: test rax,rax
0x3669: js 0x36c0
0x366b: test rcx,rcx
0x366e: jnz 0x36c0
0x3670: test rbp,rbp
0x3673: mov qword ptr [rbx + 0x10],rbp
0x3677: jz 0x36c0
0x3679: mov esi,0x10
0x367e: mov rdi,rbp
0x3681: call 0x1650
0x3686: test rax,rax
0x3689: mov qword ptr [rbx],rax
0x368c: jz 0x36c0
0x368e: shl rbp,0x4
0x3692: mov qword ptr [rbx + 0x18],0x0
0x369a: mov qword ptr [rbx + 0x20],0x0
0x36a2: add rbp,rax
0x36a5: mov qword ptr [rbx + 0x30],r12
0x36a9: mov qword ptr [rbx + 0x38],r13
0x36ad: mov qword ptr [rbx + 0x8],rbp
0x36b1: mov qword ptr [rbx + 0x40],r14
0x36b5: mov qword ptr [rbx + 0x48],0x0
0x36bd: jmp 0x36ca
0x36c0: mov rdi,rbx
0x36c3: xor ebx,ebx
0x36c5: call 0x14b0
0x36ca: add rsp,0x8
0x36ce: mov rax,rbx
0x36d1: pop rbx
0x36d2: pop rbp
0x36d3: pop r12
0x36d5: pop r13
0x36d7: pop r14
0x36d9: pop r15
0x36db: ret 
0x36e0: lea rax,[rip+0x3e99]
0x36e7: mov qword ptr [rbx + 0x28],rax
0x36eb: call 0x2f70
0x36f0: test al,al
0x36f2: movss xmm1,dword ptr [rip+0x3eae]
0x36fa: jz 0x36c0
0x36fc: test rbp,rbp
0x36ff: js 0x374b
0x3701: pxor xmm0,xmm0
0x3705: cvtsi2ss xmm0,rbp
0x370a: divss xmm0,xmm1
0x370e: ucomiss xmm0,dword ptr [rip+0x3e97]
0x3715: jnc 0x36c0
0x3717: ucomiss xmm0,dword ptr [rip+0x3e92]
0x371e: jc 0x3770
0x3720: subss xmm0,dword ptr [rip+0x3e88]
0x3728: mov rax,-0x8000000000000000
0x3732: cvttss2si rbp,xmm0
0x3737: xor rbp,rax
0x373a: jmp 0x3648
0x3740: test rbp,rbp
0x3743: movss xmm1,dword ptr [r15 + 0x8]
0x3749: jns 0x3701
0x374b: mov rax,rbp
0x374e: pxor xmm0,xmm0
0x3752: shr rax,1
0x3755: and ebp,0x1
0x3758: or rax,rbp
0x375b: cvtsi2ss xmm0,rax
0x3760: addss xmm0,xmm0
0x3764: jmp 0x370a
0x3770: cvttss2si rbp,xmm0
0x3775: jmp 0x3648
0x377a: mov ecx,0x1
0x377f: jmp 0x3666
0x3790: push r12
0x3792: push rbp
0x3793: mov rbp,rdi
0x3796: push rbx
0x3797: mov r12,qword ptr [rdi]
0x379a: cmp r12,qword ptr [rdi + 0x8]
0x379e: jnc 0x380b
0x37a0: cmp qword ptr [r12],0x0
0x37a5: jz 0x3801
0x37a7: mov rbx,qword ptr [r12 + 0x8]
0x37ac: mov rax,qword ptr [rbp + 0x40]
0x37b0: test rbx,rbx
0x37b3: jz 0x37e5
0x37b5: nop dword ptr [rax]
0x37b8: test rax,rax
0x37bb: jz 0x37c6
0x37bd: mov rdi,qword ptr [rbx]
0x37c0: call rax
0x37c2: mov rax,qword ptr [rbp + 0x40]
0x37c6: mov rdx,qword ptr [rbx + 0x8]
0x37ca: mov rcx,qword ptr [rbp + 0x48]
0x37ce: mov qword ptr [rbx],0x0
0x37d5: test rdx,rdx
0x37d8: mov qword ptr [rbx + 0x8],rcx
0x37dc: mov qword ptr [rbp + 0x48],rbx
0x37e0: mov rbx,rdx
0x37e3: jnz 0x37b8
0x37e5: test rax,rax
0x37e8: jz 0x37f0
0x37ea: mov rdi,qword ptr [r12]
0x37ee: call rax
0x37f0: mov qword ptr [r12],0x0
0x37f8: mov qword ptr [r12 + 0x8],0x0
0x3801: add r12,0x10
0x3805: cmp qword ptr [rbp + 0x8],r12
0x3809: ja 0x37a0
0x380b: mov qword ptr [rbp + 0x18],0x0
0x3813: mov qword ptr [rbp + 0x20],0x0
0x381b: pop rbx
0x381c: pop rbp
0x381d: pop r12
0x381f: ret 
0x3820: push r12
0x3822: push rbp
0x3823: mov r12,rdi
0x3826: push rbx
0x3827: cmp qword ptr [rdi + 0x40],0x0
0x382c: mov rbp,qword ptr [rdi]
0x382f: mov rax,qword ptr [rdi + 0x8]
0x3833: jz 0x3883
0x3835: cmp qword ptr [rdi + 0x20],0x0
0x383a: jz 0x3883
0x383c: cmp rbp,rax
0x383f: jnc 0x38bc
0x3841: nop dword ptr [rax]
0x3848: mov rdi,qword ptr [rbp]
0x384c: test rdi,rdi
0x384f: jz 0x3876
0x3851: mov rbx,rbp
0x3854: jmp 0x3863
0x3860: mov rdi,qword ptr [rbx]
0x3863: call qword ptr [r12 + 0x40]
0x3868: mov rbx,qword ptr [rbx + 0x8]
0x386c: test rbx,rbx
0x386f: jnz 0x3860
0x3871: mov rax,qword ptr [r12 + 0x8]
0x3876: add rbp,0x10
0x387a: cmp rax,rbp
0x387d: ja 0x3848
0x387f: mov rbp,qword ptr [r12]
0x3883: cmp rbp,rax
0x3886: jnc 0x38bc
0x3888: nop dword ptr [rax + rax*0x1]
0x3890: mov rdi,qword ptr [rbp + 0x8]
0x3894: test rdi,rdi
0x3897: jz 0x38b1
0x3899: nop dword ptr [rax]
0x38a0: mov rbx,qword ptr [rdi + 0x8]
0x38a4: call 0x14b0
0x38a9: test rbx,rbx
0x38ac: mov rdi,rbx
0x38af: jnz 0x38a0
0x38b1: add rbp,0x10
0x38b5: cmp qword ptr [r12 + 0x8],rbp
0x38ba: ja 0x3890
0x38bc: mov rdi,qword ptr [r12 + 0x48]
0x38c1: test rdi,rdi
0x38c4: jz 0x38e1
0x38c6: nop word ptr cs:[rax + rax*0x1]
0x38d0: mov rbx,qword ptr [rdi + 0x8]
0x38d4: call 0x14b0
0x38d9: test rbx,rbx
0x38dc: mov rdi,rbx
0x38df: jnz 0x38d0
0x38e1: mov rdi,qword ptr [r12]
0x38e5: call 0x14b0
0x38ea: pop rbx
0x38eb: mov rdi,r12
0x38ee: pop rbp
0x38ef: pop r12
0x38f1: jmp 0x14b0
0x3900: push r12
0x3902: push rbp
0x3903: mov rbp,rdi
0x3906: push rbx
0x3907: sub rsp,0x60
0x390b: mov r12,qword ptr [rdi + 0x28]
0x390f: mov rax,qword ptr fs:[rip+0xffffffffffffc710]
0x3918: mov qword ptr [rsp + 0x58],rax
0x391d: xor eax,eax
0x391f: cmp byte ptr [r12 + 0x10],0x0
0x3925: jnz 0x3978
0x3927: test rsi,rsi
0x392a: js 0x3aa8
0x3930: pxor xmm0,xmm0
0x3934: cvtsi2ss xmm0,rsi
0x3939: divss xmm0,dword ptr [r12 + 0x8]
0x3940: ucomiss xmm0,dword ptr [rip+0x3c65]
0x3947: jnc 0x3a80
0x394d: ucomiss xmm0,dword ptr [rip+0x3c5c]
0x3954: jc 0x3ad0
0x395a: subss xmm0,dword ptr [rip+0x3c4e]
0x3962: mov rax,-0x8000000000000000
0x396c: cvttss2si rsi,xmm0
0x3971: xor rsi,rax
0x3974: nop dword ptr [rax]
0x3978: mov rdi,rsi
0x397b: call 0x2d60
0x3980: mov edx,0x8
0x3985: mov rbx,rax
0x3988: xor ecx,ecx
0x398a: mov rax,rdx
0x398d: mul rbx
0x3990: jo 0x3b2f
0x3996: test rax,rax
0x3999: mov eax,0x1
0x399e: cmovs rcx,rax
0x39a2: test rbx,rbx
0x39a5: jz 0x3a80
0x39ab: and ecx,0x1
0x39ae: jnz 0x3a80
0x39b4: cmp qword ptr [rbp + 0x10],rbx
0x39b8: jz 0x3ae0
0x39be: mov esi,0x10
0x39c3: mov rdi,rbx
0x39c6: call 0x1650
0x39cb: test rax,rax
0x39ce: mov qword ptr [rsp],rax
0x39d2: jz 0x3a80
0x39d8: mov qword ptr [rsp + 0x10],rbx
0x39dd: shl rbx,0x4
0x39e1: mov qword ptr [rsp + 0x28],r12
0x39e6: add rbx,rax
0x39e9: mov rax,qword ptr [rbp + 0x30]
0x39ed: mov r12,rsp
0x39f0: xor edx,edx
0x39f2: mov rsi,rbp
0x39f5: mov rdi,r12
0x39f8: mov qword ptr [rsp + 0x8],rbx
0x39fd: mov qword ptr [rsp + 0x18],0x0
0x3a06: mov qword ptr [rsp + 0x30],rax
0x3a0b: mov rax,qword ptr [rbp + 0x38]
0x3a0f: mov qword ptr [rsp + 0x20],0x0
0x3a18: mov qword ptr [rsp + 0x38],rax
0x3a1d: mov rax,qword ptr [rbp + 0x40]
0x3a21: mov qword ptr [rsp + 0x40],rax
0x3a26: mov rax,qword ptr [rbp + 0x48]
0x3a2a: mov qword ptr [rsp + 0x48],rax
0x3a2f: call 0x2ff0
0x3a34: test al,al
0x3a36: mov ebx,eax
0x3a38: jnz 0x3af0
0x3a3e: mov rax,qword ptr [rsp + 0x48]
0x3a43: mov edx,0x1
0x3a48: mov rsi,r12
0x3a4b: mov rdi,rbp
0x3a4e: mov qword ptr [rbp + 0x48],rax
0x3a52: call 0x2ff0
0x3a57: test al,al
0x3a59: jz 0x3b39
0x3a5f: xor edx,edx
0x3a61: mov rsi,r12
0x3a64: mov rdi,rbp
0x3a67: call 0x2ff0
0x3a6c: test al,al
0x3a6e: jz 0x3b39
0x3a74: mov rdi,qword ptr [rsp]
0x3a78: call 0x14b0
0x3a7d: jmp 0x3a82
0x3a80: xor ebx,ebx
0x3a82: mov rcx,qword ptr [rsp + 0x58]
0x3a87: xor rcx,qword ptr fs:[rip+0xffffffffffffc598]
0x3a90: mov eax,ebx
0x3a92: jnz 0x3b2a
0x3a98: add rsp,0x60
0x3a9c: pop rbx
0x3a9d: pop rbp
0x3a9e: pop r12
0x3aa0: ret 
0x3aa8: mov rax,rsi
0x3aab: pxor xmm0,xmm0
0x3aaf: shr rax,1
0x3ab2: and esi,0x1
0x3ab5: or rax,rsi
0x3ab8: cvtsi2ss xmm0,rax
0x3abd: addss xmm0,xmm0
0x3ac1: jmp 0x3939
0x3ad0: cvttss2si rsi,xmm0
0x3ad5: jmp 0x3978
0x3ae0: mov ebx,0x1
0x3ae5: jmp 0x3a82
0x3af0: mov rdi,qword ptr [rbp]
0x3af4: call 0x14b0
0x3af9: mov rax,qword ptr [rsp]
0x3afd: mov qword ptr [rbp],rax
0x3b01: mov rax,qword ptr [rsp + 0x8]
0x3b06: mov qword ptr [rbp + 0x8],rax
0x3b0a: mov rax,qword ptr [rsp + 0x10]
0x3b0f: mov qword ptr [rbp + 0x10],rax
0x3b13: mov rax,qword ptr [rsp + 0x18]
0x3b18: mov qword ptr [rbp + 0x18],rax
0x3b1c: mov rax,qword ptr [rsp + 0x48]
0x3b21: mov qword ptr [rbp + 0x48],rax
0x3b25: jmp 0x3a82
0x3b2a: call 0x1590
0x3b2f: mov ecx,0x1
0x3b34: jmp 0x3996
0x3b39: call 0x14c0
0x3b3e: nop 
0x3b40: push r13
0x3b42: push r12
0x3b44: push rbp
0x3b45: push rbx
0x3b46: sub rsp,0x18
0x3b4a: mov rax,qword ptr fs:[rip+0xffffffffffffc4d5]
0x3b53: mov qword ptr [rsp + 0x8],rax
0x3b58: xor eax,eax
0x3b5a: test rsi,rsi
0x3b5d: jz 0x3d1d
0x3b63: mov r12,rsp
0x3b66: xor ecx,ecx
0x3b68: mov r13,rdx
0x3b6b: mov rdx,r12
0x3b6e: mov rbx,rdi
0x3b71: mov rbp,rsi
0x3b74: call 0x2e50
0x3b79: test rax,rax
0x3b7c: mov rdx,rax
0x3b7f: jz 0x3bb0
0x3b81: xor eax,eax
0x3b83: test r13,r13
0x3b86: jz 0x3b8c
0x3b88: mov qword ptr [r13],rdx
0x3b8c: mov rcx,qword ptr [rsp + 0x8]
0x3b91: xor rcx,qword ptr fs:[rip+0xffffffffffffc48e]
0x3b9a: jnz 0x3dbf
0x3ba0: add rsp,0x18
0x3ba4: pop rbx
0x3ba5: pop rbp
0x3ba6: pop r12
0x3ba8: pop r13
0x3baa: ret 
0x3bb0: mov rax,qword ptr [rbx + 0x18]
0x3bb4: test rax,rax
0x3bb7: js 0x3c30
0x3bb9: pxor xmm1,xmm1
0x3bbd: mov rdx,qword ptr [rbx + 0x28]
0x3bc1: cvtsi2ss xmm1,rax
0x3bc6: mov rax,qword ptr [rbx + 0x10]
0x3bca: test rax,rax
0x3bcd: js 0x3c5a
0x3bd3: pxor xmm0,xmm0
0x3bd7: cvtsi2ss xmm0,rax
0x3bdc: mulss xmm0,dword ptr [rdx + 0x8]
0x3be1: ucomiss xmm1,xmm0
0x3be4: ja 0x3c80
0x3bea: mov r12,qword ptr [rsp]
0x3bee: cmp qword ptr [r12],0x0
0x3bf3: jz 0x3d28
0x3bf9: mov rax,qword ptr [rbx + 0x48]
0x3bfd: test rax,rax
0x3c00: jz 0x3d40
0x3c06: mov rdx,qword ptr [rax + 0x8]
0x3c0a: mov qword ptr [rbx + 0x48],rdx
0x3c0e: mov rdx,qword ptr [r12 + 0x8]
0x3c13: mov qword ptr [rax],rbp
0x3c16: mov qword ptr [rax + 0x8],rdx
0x3c1a: mov qword ptr [r12 + 0x8],rax
0x3c1f: mov eax,0x1
0x3c24: add qword ptr [rbx + 0x20],0x1
0x3c29: jmp 0x3b8c
0x3c30: mov rdx,rax
0x3c33: pxor xmm1,xmm1
0x3c37: and eax,0x1
0x3c3a: shr rdx,1
0x3c3d: or rdx,rax
0x3c40: mov rax,qword ptr [rbx + 0x10]
0x3c44: cvtsi2ss xmm1,rdx
0x3c49: mov rdx,qword ptr [rbx + 0x28]
0x3c4d: test rax,rax
0x3c50: addss xmm1,xmm1
0x3c54: jns 0x3bd3
0x3c5a: mov rcx,rax
0x3c5d: pxor xmm0,xmm0
0x3c61: shr rcx,1
0x3c64: and eax,0x1
0x3c67: or rcx,rax
0x3c6a: cvtsi2ss xmm0,rcx
0x3c6f: addss xmm0,xmm0
0x3c73: jmp 0x3bdc
0x3c80: lea rdi,[rbx + 0x28]
0x3c84: call 0x2f70
0x3c89: mov rax,qword ptr [rbx + 0x10]
0x3c8d: mov rdx,qword ptr [rbx + 0x28]
0x3c91: test rax,rax
0x3c94: movss xmm2,dword ptr [rdx + 0x8]
0x3c99: js 0x3d60
0x3c9f: pxor xmm0,xmm0
0x3ca3: cvtsi2ss xmm0,rax
0x3ca8: mov rax,qword ptr [rbx + 0x18]
0x3cac: test rax,rax
0x3caf: js 0x3d80
0x3cb5: pxor xmm1,xmm1
0x3cb9: cvtsi2ss xmm1,rax
0x3cbe: movaps xmm3,xmm2
0x3cc1: mulss xmm3,xmm0
0x3cc5: ucomiss xmm1,xmm3
0x3cc8: jbe 0x3bea
0x3cce: cmp byte ptr [rdx + 0x10],0x0
0x3cd2: mulss xmm0,dword ptr [rdx + 0xc]
0x3cd7: jnz 0x3cdd
0x3cd9: mulss xmm0,xmm2
0x3cdd: ucomiss xmm0,dword ptr [rip+0x38c8]
0x3ce4: jnc 0x3d53
0x3ce6: ucomiss xmm0,dword ptr [rip+0x38c3]
0x3ced: jnc 0x3da0
0x3cf3: cvttss2si rsi,xmm0
0x3cf8: mov rdi,rbx
0x3cfb: call 0x3900
0x3d00: test al,al
0x3d02: jz 0x3d53
0x3d04: xor ecx,ecx
0x3d06: mov rdx,r12
0x3d09: mov rsi,rbp
0x3d0c: mov rdi,rbx
0x3d0f: call 0x2e50
0x3d14: test rax,rax
0x3d17: jz 0x3bea
0x3d1d: call 0x14c0
0x3d22: nop word ptr [rax + rax*0x1]
0x3d28: mov qword ptr [r12],rbp
0x3d2c: mov eax,0x1
0x3d31: add qword ptr [rbx + 0x20],0x1
0x3d36: add qword ptr [rbx + 0x18],0x1
0x3d3b: jmp 0x3b8c
0x3d40: mov edi,0x10
0x3d45: call 0x16a0
0x3d4a: test rax,rax
0x3d4d: jnz 0x3c0e
0x3d53: mov eax,0xffffffff
0x3d58: jmp 0x3b8c
0x3d60: mov rcx,rax
0x3d63: pxor xmm0,xmm0
0x3d67: shr rcx,1
0x3d6a: and eax,0x1
0x3d6d: or rcx,rax
0x3d70: cvtsi2ss xmm0,rcx
0x3d75: addss xmm0,xmm0
0x3d79: jmp 0x3ca8
0x3d80: mov rcx,rax
0x3d83: pxor xmm1,xmm1
0x3d87: shr rcx,1
0x3d8a: and eax,0x1
0x3d8d: or rcx,rax
0x3d90: cvtsi2ss xmm1,rcx
0x3d95: addss xmm1,xmm1
0x3d99: jmp 0x3cbe
0x3da0: subss xmm0,dword ptr [rip+0x3808]
0x3da8: mov rax,-0x8000000000000000
0x3db2: cvttss2si rsi,xmm0
0x3db7: xor rsi,rax
0x3dba: jmp 0x3cf8
0x3dbf: call 0x1590
0x3dc4: nop 
0x3dc6: nop word ptr cs:[rax + rax*0x1]
0x3dd0: push rbx
0x3dd1: mov rbx,rsi
0x3dd4: sub rsp,0x10
0x3dd8: mov rdx,rsp
0x3ddb: mov rax,qword ptr fs:[rip+0xffffffffffffc244]
0x3de4: mov qword ptr [rsp + 0x8],rax
0x3de9: xor eax,eax
0x3deb: call 0x3b40
0x3df0: cmp eax,-0x1
0x3df3: jz 0x3e20
0x3df5: test eax,eax
0x3df7: jnz 0x3dfd
0x3df9: mov rbx,qword ptr [rsp]
0x3dfd: mov rcx,qword ptr [rsp + 0x8]
0x3e02: xor rcx,qword ptr fs:[rip+0xffffffffffffc21d]
0x3e0b: mov rax,rbx
0x3e0e: jnz 0x3e24
0x3e10: add rsp,0x10
0x3e14: pop rbx
0x3e15: ret 
0x3e20: xor ebx,ebx
0x3e22: jmp 0x3dfd
0x3e24: call 0x1590
0x3e29: nop dword ptr [rax]
0x3e30: push r12
0x3e32: push rbp
0x3e33: mov ecx,0x1
0x3e38: push rbx
0x3e39: mov rbx,rdi
0x3e3c: sub rsp,0x10
0x3e40: mov rdx,rsp
0x3e43: mov rax,qword ptr fs:[rip+0xffffffffffffc1dc]
0x3e4c: mov qword ptr [rsp + 0x8],rax
0x3e51: xor eax,eax
0x3e53: call 0x2e50
0x3e58: test rax,rax
0x3e5b: mov rbp,rax
0x3e5e: jz 0x3e6f
0x3e60: mov rax,qword ptr [rsp]
0x3e64: sub qword ptr [rbx + 0x20],0x1
0x3e69: cmp qword ptr [rax],0x0
0x3e6d: jz 0x3e90
0x3e6f: mov rcx,qword ptr [rsp + 0x8]
0x3e74: xor rcx,qword ptr fs:[rip+0xffffffffffffc1ab]
0x3e7d: mov rax,rbp
0x3e80: jnz 0x402e
0x3e86: add rsp,0x10
0x3e8a: pop rbx
0x3e8b: pop rbp
0x3e8c: pop r12
0x3e8e: ret 
0x3e90: mov rax,qword ptr [rbx + 0x18]
0x3e94: sub rax,0x1
0x3e98: test rax,rax
0x3e9b: mov qword ptr [rbx + 0x18],rax
0x3e9f: js 0x3fa0
0x3ea5: pxor xmm0,xmm0
0x3ea9: cvtsi2ss xmm0,rax
0x3eae: mov rax,qword ptr [rbx + 0x10]
0x3eb2: mov rdx,qword ptr [rbx + 0x28]
0x3eb6: test rax,rax
0x3eb9: js 0x3f80
0x3ebf: pxor xmm1,xmm1
0x3ec3: cvtsi2ss xmm1,rax
0x3ec8: mulss xmm1,dword ptr [rdx]
0x3ecc: ucomiss xmm1,xmm0
0x3ecf: jbe 0x3e6f
0x3ed1: lea rdi,[rbx + 0x28]
0x3ed5: call 0x2f70
0x3eda: mov rax,qword ptr [rbx + 0x10]
0x3ede: mov rdx,qword ptr [rbx + 0x28]
0x3ee2: test rax,rax
0x3ee5: js 0x4010
0x3eeb: pxor xmm0,xmm0
0x3eef: cvtsi2ss xmm0,rax
0x3ef4: mov rax,qword ptr [rbx + 0x18]
0x3ef8: test rax,rax
0x3efb: js 0x3ff0
0x3f01: pxor xmm1,xmm1
0x3f05: cvtsi2ss xmm1,rax
0x3f0a: movss xmm2,dword ptr [rdx]
0x3f0e: mulss xmm2,xmm0
0x3f12: ucomiss xmm2,xmm1
0x3f15: jbe 0x3e6f
0x3f1b: cmp byte ptr [rdx + 0x10],0x0
0x3f1f: mulss xmm0,dword ptr [rdx + 0x4]
0x3f24: jz 0x3fe0
0x3f2a: ucomiss xmm0,dword ptr [rip+0x367f]
0x3f31: jnc 0x3fc0
0x3f37: cvttss2si rsi,xmm0
0x3f3c: mov rdi,rbx
0x3f3f: call 0x3900
0x3f44: test al,al
0x3f46: jnz 0x3e6f
0x3f4c: mov rdi,qword ptr [rbx + 0x48]
0x3f50: test rdi,rdi
0x3f53: jz 0x3f69
0x3f55: nop dword ptr [rax]
0x3f58: mov r12,qword ptr [rdi + 0x8]
0x3f5c: call 0x14b0
0x3f61: test r12,r12
0x3f64: mov rdi,r12
0x3f67: jnz 0x3f58
0x3f69: mov qword ptr [rbx + 0x48],0x0
0x3f71: jmp 0x3e6f
0x3f80: mov rcx,rax
0x3f83: pxor xmm1,xmm1
0x3f87: shr rcx,1
0x3f8a: and eax,0x1
0x3f8d: or rcx,rax
0x3f90: cvtsi2ss xmm1,rcx
0x3f95: addss xmm1,xmm1
0x3f99: jmp 0x3ec8
0x3fa0: mov rdx,rax
0x3fa3: pxor xmm0,xmm0
0x3fa7: shr rdx,1
0x3faa: and eax,0x1
0x3fad: or rdx,rax
0x3fb0: cvtsi2ss xmm0,rdx
0x3fb5: addss xmm0,xmm0
0x3fb9: jmp 0x3eae
0x3fc0: subss xmm0,dword ptr [rip+0x35e8]
0x3fc8: mov rax,-0x8000000000000000
0x3fd2: cvttss2si rsi,xmm0
0x3fd7: xor rsi,rax
0x3fda: jmp 0x3f3c
0x3fe0: mulss xmm0,dword ptr [rdx + 0x8]
0x3fe5: jmp 0x3f2a
0x3ff0: mov rcx,rax
0x3ff3: pxor xmm1,xmm1
0x3ff7: shr rcx,1
0x3ffa: and eax,0x1
0x3ffd: or rcx,rax
0x4000: cvtsi2ss xmm1,rcx
0x4005: addss xmm1,xmm1
0x4009: jmp 0x3f0a
0x4010: mov rcx,rax
0x4013: pxor xmm0,xmm0
0x4017: shr rcx,1
0x401a: and eax,0x1
0x401d: or rcx,rax
0x4020: cvtsi2ss xmm0,rcx
0x4025: addss xmm0,xmm0
0x4029: jmp 0x3ef4
0x402e: call 0x1590
0x4033: nop word ptr cs:[rax + rax*0x1]
0x403d: nop dword ptr [rax]
0x4040: push rbp
0x4041: push rbx
0x4042: mov rbp,rdi
0x4045: mov rbx,rsi
0x4048: sub rsp,0x8
0x404c: mov rdi,qword ptr [rdi]
0x404f: call 0x6d00
0x4054: xor rax,qword ptr [rbp + 0x8]
0x4058: xor edx,edx
0x405a: add rsp,0x8
0x405e: div rbx
0x4061: pop rbx
0x4062: pop rbp
0x4063: mov rax,rdx
0x4066: ret 
0x4070: mov rax,qword ptr [rdi + 0x8]
0x4074: xor edx,edx
0x4076: div rsi
0x4079: mov rax,rdx
0x407c: ret 
0x4080: xor eax,eax
0x4082: mov rdx,qword ptr [rsi + 0x8]
0x4086: cmp qword ptr [rdi + 0x8],rdx
0x408a: jz 0x4090
0x408c: ret 
0x4090: mov rcx,qword ptr [rsi + 0x10]
0x4094: cmp qword ptr [rdi + 0x10],rcx
0x4098: jnz 0x408c
0x409a: sub rsp,0x8
0x409e: mov rsi,qword ptr [rsi]
0x40a1: mov rdi,qword ptr [rdi]
0x40a4: call 0x6010
0x40a9: add rsp,0x8
0x40ad: ret 
0x40b0: xor eax,eax
0x40b2: mov rdx,qword ptr [rsi + 0x8]
0x40b6: cmp qword ptr [rdi + 0x8],rdx
0x40ba: jz 0x40c0
0x40bc: ret 
0x40c0: mov rcx,qword ptr [rsi + 0x10]
0x40c4: cmp qword ptr [rdi + 0x10],rcx
0x40c8: jnz 0x40bc
0x40ca: sub rsp,0x8
0x40ce: mov rsi,qword ptr [rsi]
0x40d1: mov rdi,qword ptr [rdi]
0x40d4: call 0x1660
0x40d9: test eax,eax
0x40db: setz al
0x40de: add rsp,0x8
0x40e2: ret 
0x40f0: push rbx
0x40f1: mov rbx,rdi
0x40f4: mov rdi,qword ptr [rdi]
0x40f7: call 0x14b0
0x40fc: mov rdi,rbx
0x40ff: pop rbx
0x4100: jmp 0x14b0
0x41af: nop 
0x45db: mov ebx,edx
0x45dd: xor r12d,r12d
0x45e0: xor eax,eax
0x4629: cmp qword ptr [rsp + 0x18],0x0
0x462f: jnz 0x49eb
0x4635: mov ebx,0x5c
0x463a: nop word ptr [rax + rax*0x1]
0x46bb: xor edx,edx
0x46bd: test byte ptr [rsp + 0x78],0x1
0x46c2: jz 0x45db
0x46c8: add rbp,0x1
0x46cc: jmp 0x4388
0x482e: nop 
0x4aef: lea rcx,[rbp + 0x2]
0x4af3: cmp rcx,r11
0x4af6: jnc 0x4b10
0x4af8: mov rax,qword ptr [rsp + 0x10]
0x4afd: cmp byte ptr [rax + rbp*0x1 + 0x1],0x3f
0x4b02: jz 0x5292
0x4b08: nop dword ptr [rax + rax*0x1]
0x4dc0: cmp r15,0x1
0x4dc4: jz 0x4c29
0x4dca: mov rdi,qword ptr [rsp + 0x10]
0x4dcf: lea rcx,[rdi + r15*0x1]
0x4dd3: lea rdx,[rdi + r14*0x1 + 0x1]
0x4dd8: lea r8,[rcx + r14*0x1]
0x4ddc: jmp 0x4ded
0x4de0: add rdx,0x1
0x4de4: cmp r8,rdx
0x4de7: jz 0x4c29
0x4ded: movzx ecx,byte ptr [rdx]
0x4df0: sub ecx,0x5b
0x4df3: cmp cl,0x21
0x4df6: ja 0x4de0
0x4df8: mov esi,0x1
0x4dfd: shl rsi,cl
0x4e00: mov rcx,rsi
0x4e03: mov rsi,0x20000002b
0x4e0d: test rcx,rsi
0x4e10: jz 0x4de0
0x4e12: mov r14,qword ptr [rsp + 0x40]
0x4e17: mov r13,qword ptr [rsp + 0x70]
0x4e1c: mov rbp,qword ptr [rsp + 0x30]
0x4e21: mov dword ptr [rsp + 0x8],0x2
0x5170: movzx ebx,byte ptr [rsp + 0xf]
0x5175: mov rbp,r11
0x5178: mov byte ptr [rsp + 0xd],bl
0x517c: jmp 0x4e29
0x5292: movzx ebx,byte ptr [rax + rcx*0x1]
0x5296: cmp bl,0x3e
0x5299: ja 0x4b10
0x529f: mov rax,0x7000a38200000000
0x52a9: bt rax,rbx
0x52ad: jnc 0x4b10
0x52b3: cmp byte ptr [rsp + 0xf],0x0
0x52b8: jnz 0x54a2
0x52be: cmp r13,r15
0x52c1: jbe 0x52c8
0x52c3: mov byte ptr [r14 + r15*0x1],0x3f
0x52c8: lea rax,[r15 + 0x1]
0x52cc: cmp r13,rax
0x52cf: jbe 0x52d7
0x52d1: mov byte ptr [r14 + r15*0x1 + 0x1],0x22
0x52d7: lea rax,[r15 + 0x2]
0x52db: cmp r13,rax
0x52de: jbe 0x52e6
0x52e0: mov byte ptr [r14 + r15*0x1 + 0x2],0x22
0x52e6: lea rax,[r15 + 0x3]
0x52ea: cmp r13,rax
0x52ed: jbe 0x52f5
0x52ef: mov byte ptr [r14 + r15*0x1 + 0x3],0x3f
0x52f5: add r15,0x4
0x52f9: xor edx,edx
0x52fb: xor r12d,r12d
0x52fe: xor eax,eax
0x5300: mov rbp,rcx
0x5303: jmp 0x44c8
0x5310: lea rax,[rip+0x22fe]
0x5317: mov byte ptr [rsp + 0xe],0x1
0x531c: mov byte ptr [rsp + 0x7c],0x0
0x5321: xor r12d,r12d
0x5324: mov qword ptr [rsp + 0x50],0x0
0x532d: mov byte ptr [rsp + 0xf],0x1
0x5332: mov byte ptr [rsp + 0xd],0x0
0x5337: mov qword ptr [rsp + 0x18],0x1
0x5340: xor r15d,r15d
0x5343: mov qword ptr [rsp + 0x48],rax
0x5348: jmp 0x4373
0x5350: mov rbp,r11
0x5353: movzx eax,byte ptr [rsp + 0xf]
0x5358: jmp 0x4e29
0x535d: lea rax,[rip+0x22af]
0x5364: mov byte ptr [rsp + 0xe],0x1
0x5369: mov byte ptr [rsp + 0x7c],0x0
0x536e: xor r12d,r12d
0x5371: mov qword ptr [rsp + 0x50],0x0
0x537a: mov byte ptr [rsp + 0xf],0x1
0x537f: mov byte ptr [rsp + 0xd],0x1
0x5384: mov qword ptr [rsp + 0x18],0x1
0x538d: xor r15d,r15d
0x5390: mov qword ptr [rsp + 0x48],rax
0x5395: jmp 0x4373
0x53e5: cmp dword ptr [rsp + 0x8],0x2
0x53ea: movzx ebx,byte ptr [rsp + 0xf]
0x53ef: mov rbp,r11
0x53f2: setz al
0x53f5: mov byte ptr [rsp + 0xd],bl
0x53f9: jmp 0x4e29
0x542a: movzx ebx,byte ptr [rsp + 0xf]
0x542f: mov rbp,r11
0x5432: mov eax,edx
0x5434: mov byte ptr [rsp + 0xd],bl
0x5438: jmp 0x4e29
0x5470: add rsp,0x20
0x5474: mov r15,rax
0x5477: jmp 0x4e79
0x5493: call 0x1590
0x54a2: mov rbp,r11
0x54a5: jmp 0x4e40
0x54d4: nop 
0x54d6: nop word ptr cs:[rax + rax*0x1]
0x5681: call 0x14c0
0x5686: call 0x68a0
0x568b: nop dword ptr [rax + rax*0x1]
0x5690: push r12
0x5692: push rbp
0x5693: push rbx
0x5694: mov rbx,rdi
0x5697: call 0x14d0
0x569c: mov r12d,dword ptr [rax]
0x569f: mov rbp,rax
0x56a2: lea rax,[rip+0x204b77]
0x56a9: test rbx,rbx
0x56ac: mov esi,0x38
0x56b1: cmovz rbx,rax
0x56b5: mov rdi,rbx
0x56b8: call 0x6850
0x56bd: mov dword ptr [rbp],r12d
0x56c1: pop rbx
0x56c2: pop rbp
0x56c3: pop r12
0x56c5: ret 
0x56d0: lea rax,[rip+0x204b49]
0x56d7: test rdi,rdi
0x56da: cmovz rdi,rax
0x56de: mov eax,dword ptr [rdi]
0x56e0: ret 
0x56f0: lea rax,[rip+0x204b29]
0x56f7: test rdi,rdi
0x56fa: cmovz rdi,rax
0x56fe: mov dword ptr [rdi],esi
0x5700: ret 
0x5710: lea rax,[rip+0x204b09]
0x5717: test rdi,rdi
0x571a: mov ecx,esi
0x571c: cmovz rdi,rax
0x5720: mov eax,esi
0x5722: and ecx,0x1f
0x5725: shr al,0x5
0x5728: movzx eax,al
0x572b: lea rdi,[rdi + rax*0x4 + 0x8]
0x5730: mov esi,dword ptr [rdi]
0x5732: mov eax,esi
0x5734: shr eax,cl
0x5736: xor edx,eax
0x5738: and eax,0x1
0x573b: and edx,0x1
0x573e: shl edx,cl
0x5740: xor edx,esi
0x5742: mov dword ptr [rdi],edx
0x5744: ret 
0x5750: lea rax,[rip+0x204ac9]
0x5757: test rdi,rdi
0x575a: cmovz rdi,rax
0x575e: mov eax,dword ptr [rdi + 0x4]
0x5761: mov dword ptr [rdi + 0x4],esi
0x5764: ret 
0x5770: lea rax,[rip+0x204aa9]
0x5777: test rdi,rdi
0x577a: cmovz rdi,rax
0x577e: test rsi,rsi
0x5781: mov dword ptr [rdi],0xa
0x5787: jz 0x5797
0x5789: test rdx,rdx
0x578c: jz 0x5797
0x578e: mov qword ptr [rdi + 0x28],rsi
0x5792: mov qword ptr [rdi + 0x30],rdx
0x5796: ret 
0x5797: sub rsp,0x8
0x579b: call 0x14c0
0x57a0: push r15
0x57a2: push r14
0x57a4: lea rax,[rip+0x204a75]
0x57ab: push r13
0x57ad: push r12
0x57af: mov r13,rdi
0x57b2: push rbp
0x57b3: push rbx
0x57b4: mov rbx,r8
0x57b7: mov r14,rsi
0x57ba: mov r15,rdx
0x57bd: sub rsp,0x18
0x57c1: test r8,r8
0x57c4: cmovz rbx,rax
0x57c8: mov qword ptr [rsp + 0x8],rcx
0x57cd: call 0x14d0
0x57d2: mov r12d,dword ptr [rax]
0x57d5: mov rbp,rax
0x57d8: lea rax,[rbx + 0x8]
0x57dc: sub rsp,0x8
0x57e0: mov r9d,dword ptr [rbx + 0x4]
0x57e4: push qword ptr [rbx + 0x30]
0x57e7: mov r8d,dword ptr [rbx]
0x57ea: push qword ptr [rbx + 0x28]
0x57ed: mov rdx,r15
0x57f0: push rax
0x57f1: mov rcx,qword ptr [rsp + 0x28]
0x57f6: mov rsi,r14
0x57f9: mov rdi,r13
0x57fc: call 0x42a0
0x5801: mov dword ptr [rbp],r12d
0x5805: add rsp,0x38
0x5809: pop rbx
0x580a: pop rbp
0x580b: pop r12
0x580d: pop r13
0x580f: pop r14
0x5811: pop r15
0x5813: ret 
0x5820: push r15
0x5822: push r14
0x5824: lea rax,[rip+0x2049f5]
0x582b: push r13
0x582d: push r12
0x582f: mov r12,rdx
0x5832: push rbp
0x5833: push rbx
0x5834: mov rbx,rcx
0x5837: mov r14,rdi
0x583a: mov r15,rsi
0x583d: sub rsp,0x38
0x5841: test rcx,rcx
0x5844: cmovz rbx,rax
0x5848: xor ebp,ebp
0x584a: call 0x14d0
0x584f: test r12,r12
0x5852: mov r13,rax
0x5855: mov eax,dword ptr [rax]
0x5857: setz bpl
0x585b: or ebp,dword ptr [rbx + 0x4]
0x585e: lea r10,[rbx + 0x8]
0x5862: sub rsp,0x8
0x5866: mov r8d,dword ptr [rbx]
0x5869: mov rcx,r15
0x586c: mov dword ptr [rsp + 0x14],eax
0x5870: push qword ptr [rbx + 0x30]
0x5873: mov rdx,r14
0x5876: push qword ptr [rbx + 0x28]
0x5879: push r10
0x587b: xor esi,esi
0x587d: mov r9d,ebp
0x5880: xor edi,edi
0x5882: mov qword ptr [rsp + 0x40],r10
0x5887: call 0x42a0
0x588c: lea rsi,[rax + 0x1]
0x5890: mov qword ptr [rsp + 0x48],rax
0x5895: add rsp,0x20
0x5899: mov rdi,rsi
0x589c: mov qword ptr [rsp + 0x18],rsi
0x58a1: call 0x6650
0x58a6: mov qword ptr [rsp + 0x10],rax
0x58ab: sub rsp,0x8
0x58af: push qword ptr [rbx + 0x30]
0x58b2: push qword ptr [rbx + 0x28]
0x58b5: mov r10,qword ptr [rsp + 0x38]
0x58ba: mov r9d,ebp
0x58bd: mov r8d,dword ptr [rbx]
0x58c0: mov rcx,r15
0x58c3: mov rdx,r14
0x58c6: mov rdi,rax
0x58c9: push r10
0x58cb: mov rsi,qword ptr [rsp + 0x38]
0x58d0: call 0x42a0
0x58d5: mov eax,dword ptr [rsp + 0x2c]
0x58d9: add rsp,0x20
0x58dd: test r12,r12
0x58e0: mov dword ptr [r13],eax
0x58e4: jz 0x58ef
0x58e6: mov r11,qword ptr [rsp + 0x28]
0x58eb: mov qword ptr [r12],r11
0x58ef: mov rax,qword ptr [rsp + 0x10]
0x58f4: add rsp,0x38
0x58f8: pop rbx
0x58f9: pop rbp
0x58fa: pop r12
0x58fc: pop r13
0x58fe: pop r14
0x5900: pop r15
0x5902: ret 
0x5910: mov rcx,rdx
0x5913: xor edx,edx
0x5915: jmp 0x5820
0x5920: mov eax,dword ptr [rip+0x204752]
0x5926: push r12
0x5928: mov r12,qword ptr [rip+0x204751]
0x592f: push rbp
0x5930: push rbx
0x5931: cmp eax,0x1
0x5934: jle 0x5961
0x5936: sub eax,0x2
0x5939: lea rbx,[r12 + 0x18]
0x593e: shl rax,0x4
0x5942: lea rbp,[r12 + rax*0x1 + 0x28]
0x5947: nop word ptr [rax + rax*0x1]
0x5950: mov rdi,qword ptr [rbx]
0x5953: add rbx,0x10
0x5957: call 0x14b0
0x595c: cmp rbx,rbp
0x595f: jnz 0x5950
0x5961: mov rdi,qword ptr [r12 + 0x8]
0x5966: lea rbx,[rip+0x2047b3]
0x596d: cmp rdi,rbx
0x5970: jz 0x5989
0x5972: call 0x14b0
0x5977: mov qword ptr [rip+0x20470e],0x100
0x5982: mov qword ptr [rip+0x20470f],rbx
0x5989: lea rbx,[rip+0x204700]
0x5990: cmp r12,rbx
0x5993: jz 0x59a4
0x5995: mov rdi,r12
0x5998: call 0x14b0
0x599d: mov qword ptr [rip+0x2046dc],rbx
0x59a4: pop rbx
0x59a5: mov dword ptr [rip+0x2046c9],0x1
0x59af: pop rbp
0x59b0: pop r12
0x59b2: ret 
0x59c0: lea rcx,[rip+0x204859]
0x59c7: mov rdx,-0x1
0x59ce: jmp 0x54e0
0x59e0: lea rcx,[rip+0x204839]
0x59e7: jmp 0x54e0
0x59f0: lea rcx,[rip+0x204829]
0x59f7: mov rsi,rdi
0x59fa: mov rdx,-0x1
0x5a01: xor edi,edi
0x5a03: jmp 0x54e0
0x5a10: lea rcx,[rip+0x204809]
0x5a17: mov rdx,rsi
0x5a1a: mov rsi,rdi
0x5a1d: xor edi,edi
0x5a1f: jmp 0x54e0
0x5ab4: call 0x14c0
0x5ab9: call 0x1590
0x5abe: nop 
0x5ac0: sub rsp,0x48
0x5ac4: mov rax,rdx
0x5ac7: mov rdx,rcx
0x5aca: mov rcx,qword ptr fs:[rip+0xffffffffffffa555]
0x5ad3: mov qword ptr [rsp + 0x38],rcx
0x5ad8: xor ecx,ecx
0x5ada: cmp esi,0xa
0x5add: jz 0x5b40
0x5adf: mov dword ptr [rsp],esi
0x5ae2: mov rcx,rsp
0x5ae5: mov rsi,rax
0x5ae8: mov qword ptr [rsp + 0x4],0x0
0x5af1: mov qword ptr [rsp + 0xc],0x0
0x5afa: mov qword ptr [rsp + 0x14],0x0
0x5b03: mov qword ptr [rsp + 0x1c],0x0
0x5b0c: mov qword ptr [rsp + 0x24],0x0
0x5b15: mov qword ptr [rsp + 0x2c],0x0
0x5b1e: mov dword ptr [rsp + 0x34],0x0
0x5b26: call 0x54e0
0x5b2b: mov rdx,qword ptr [rsp + 0x38]
0x5b30: xor rdx,qword ptr fs:[rip+0xffffffffffffa4ef]
0x5b39: jnz 0x5b45
0x5b3b: add rsp,0x48
0x5b3f: ret 
0x5b40: call 0x14c0
0x5b45: call 0x1590
0x5b4a: nop word ptr [rax + rax*0x1]
0x5b60: mov rcx,rdx
0x5b63: mov rdx,rsi
0x5b66: mov esi,edi
0x5b68: xor edi,edi
0x5b6a: jmp 0x5ac0
0x5b70: sub rsp,0x48
0x5b74: mov ecx,edx
0x5b76: mov rax,qword ptr fs:[rip+0xffffffffffffa4a9]
0x5b7f: mov qword ptr [rsp + 0x38],rax
0x5b84: xor eax,eax
0x5b86: mov rax,qword ptr [rip+0x2046c3]
0x5b8d: mov r8,rsp
0x5b90: and ecx,0x1f
0x5b93: movdqa xmm0,[rip+0x204685]
0x5b9b: mov qword ptr [rsp + 0x30],rax
0x5ba0: mov eax,edx
0x5ba2: movaps xmmword ptr [rsp],xmm0
0x5ba6: shr al,0x5
0x5ba9: movzx eax,al
0x5bac: lea r9,[r8 + rax*0x4 + 0x8]
0x5bb1: movdqa xmm0,[rip+0x204677]
0x5bb9: movaps xmmword ptr [rsp + 0x10],xmm0
0x5bbe: movdqa xmm0,[rip+0x20467a]
0x5bc6: movaps xmmword ptr [rsp + 0x20],xmm0
0x5bcb: mov edx,dword ptr [r9]
0x5bce: mov eax,edx
0x5bd0: shr eax,cl
0x5bd2: not eax
0x5bd4: and eax,0x1
0x5bd7: shl eax,cl
0x5bd9: mov rcx,r8
0x5bdc: xor eax,edx
0x5bde: mov rdx,rsi
0x5be1: mov rsi,rdi
0x5be4: mov dword ptr [r9],eax
0x5be7: xor edi,edi
0x5be9: call 0x54e0
0x5bee: mov rsi,qword ptr [rsp + 0x38]
0x5bf3: xor rsi,qword ptr fs:[rip+0xffffffffffffa42c]
0x5bfc: jnz 0x5c03
0x5bfe: add rsp,0x48
0x5c02: ret 
0x5c03: call 0x1590
0x5c08: nop dword ptr [rax + rax*0x1]
0x5c10: movsx edx,sil
0x5c14: mov rsi,-0x1
0x5c1b: jmp 0x5b70
0x5c20: mov edx,0x3a
0x5c25: mov rsi,-0x1
0x5c2c: jmp 0x5b70
0x5c40: mov edx,0x3a
0x5c45: jmp 0x5b70
0x5cd4: call 0x14c0
0x5cd9: call 0x1590
0x5cde: nop 
0x5ce0: sub rsp,0x48
0x5ce4: mov r9,rcx
0x5ce7: mov rcx,qword ptr [rip+0x204562]
0x5cee: movdqa xmm0,[rip+0x20452a]
0x5cf6: mov rax,qword ptr fs:[rip+0xffffffffffffa329]
0x5cff: mov qword ptr [rsp + 0x38],rax
0x5d04: xor eax,eax
0x5d06: movaps xmmword ptr [rsp],xmm0
0x5d0a: test rsi,rsi
0x5d0d: mov qword ptr [rsp + 0x30],rcx
0x5d12: mov dword ptr [rsp],0xa
0x5d19: movdqa xmm0,[rip+0x20450f]
0x5d21: movaps xmmword ptr [rsp + 0x10],xmm0
0x5d26: movdqa xmm0,[rip+0x204512]
0x5d2e: movaps xmmword ptr [rsp + 0x20],xmm0
0x5d33: jz 0x5d67
0x5d35: test rdx,rdx
0x5d38: jz 0x5d67
0x5d3a: mov qword ptr [rsp + 0x28],rsi
0x5d3f: mov qword ptr [rsp + 0x30],rdx
0x5d44: mov rcx,rsp
0x5d47: mov rdx,r8
0x5d4a: mov rsi,r9
0x5d4d: call 0x54e0
0x5d52: mov rdi,qword ptr [rsp + 0x38]
0x5d57: xor rdi,qword ptr fs:[rip+0xffffffffffffa2c8]
0x5d60: jnz 0x5d6c
0x5d62: add rsp,0x48
0x5d66: ret 
0x5d67: call 0x14c0
0x5d6c: call 0x1590
0x5d71: nop dword ptr [rax + rax*0x1]
0x5d76: nop word ptr cs:[rax + rax*0x1]
0x5d80: mov r8,-0x1
0x5d87: jmp 0x5ce0
0x5d90: mov rcx,rdx
0x5d93: mov r8,-0x1
0x5d9a: mov rdx,rsi
0x5d9d: mov rsi,rdi
0x5da0: xor edi,edi
0x5da2: jmp 0x5ce0
0x5db0: mov r8,rcx
0x5db3: mov rcx,rdx
0x5db6: mov rdx,rsi
0x5db9: mov rsi,rdi
0x5dbc: xor edi,edi
0x5dbe: jmp 0x5ce0
0x5dd0: lea rcx,[rip+0x204269]
0x5dd7: jmp 0x54e0
0x5de0: lea rcx,[rip+0x204259]
0x5de7: mov rdx,rsi
0x5dea: mov rsi,rdi
0x5ded: xor edi,edi
0x5def: jmp 0x54e0
0x5e00: lea rcx,[rip+0x204239]
0x5e07: mov rdx,-0x1
0x5e0e: jmp 0x54e0
0x5e20: lea rcx,[rip+0x204219]
0x5e27: mov rsi,rdi
0x5e2a: mov rdx,-0x1
0x5e31: xor edi,edi
0x5e33: jmp 0x54e0
0x5e40: push r13
0x5e42: push r12
0x5e44: mov r13d,edi
0x5e47: push rbp
0x5e48: push rbx
0x5e49: mov rdi,rsi
0x5e4c: mov ebp,edx
0x5e4e: mov r12,rcx
0x5e51: sub rsp,0x138
0x5e58: mov rax,qword ptr fs:[rip+0xffffffffffffa1c7]
0x5e61: mov qword ptr [0x128 + rsp],rax
0x5e69: xor eax,eax
0x5e6b: call 0x6b10
0x5e70: mov rcx,rsp
0x5e73: mov r8d,0x100
0x5e79: mov rdx,rax
0x5e7c: mov esi,r13d
0x5e7f: mov edi,0x1
0x5e84: mov rbx,rax
0x5e87: call 0x15c0
0x5e8c: test eax,eax
0x5e8e: jnz 0x5f40
0x5e94: mov rdi,rbx
0x5e97: call 0x14b0
0x5e9c: mov rdi,r12
0x5e9f: call 0x6b10
0x5ea4: lea rcx,[0x90 + rsp]
0x5eac: mov r8d,0x100
0x5eb2: mov rdx,rax
0x5eb5: mov esi,ebp
0x5eb7: mov edi,0x1
0x5ebc: mov rbx,rax
0x5ebf: call 0x15c0
0x5ec4: test eax,eax
0x5ec6: jnz 0x5f18
0x5ec8: xor ebp,ebp
0x5eca: mov rax,qword ptr [0x98 + rsp]
0x5ed2: cmp qword ptr [rsp + 0x8],rax
0x5ed7: jnz 0x5ee9
0x5ed9: mov rax,qword ptr [0x90 + rsp]
0x5ee1: cmp qword ptr [rsp],rax
0x5ee5: setz bpl
0x5ee9: mov rdi,rbx
0x5eec: call 0x14b0
0x5ef1: mov rdx,qword ptr [0x128 + rsp]
0x5ef9: xor rdx,qword ptr fs:[rip+0xffffffffffffa126]
0x5f02: mov eax,ebp
0x5f04: jnz 0x5f62
0x5f06: add rsp,0x138
0x5f0d: pop rbx
0x5f0e: pop rbp
0x5f0f: pop r12
0x5f11: pop r13
0x5f13: ret 
0x5f18: call 0x14d0
0x5f1d: mov esi,dword ptr [rax]
0x5f1f: lea rdx,[rip+0x15e7]
0x5f26: mov rcx,rbx
0x5f29: mov edi,0x1
0x5f2e: xor eax,eax
0x5f30: call 0x1720
0x5f35: jmp 0x5ec8
0x5f40: call 0x14d0
0x5f45: mov esi,dword ptr [rax]
0x5f47: lea rdx,[rip+0x15bf]
0x5f4e: mov rcx,rbx
0x5f51: mov edi,0x1
0x5f56: xor eax,eax
0x5f58: call 0x1720
0x5f5d: jmp 0x5e94
0x5f62: call 0x1590
0x5f67: nop word ptr [rax + rax*0x1]
0x5f70: push r15
0x5f72: push r14
0x5f74: mov r15d,edx
0x5f77: push r13
0x5f79: push r12
0x5f7b: push rbp
0x5f7c: push rbx
0x5f7d: mov rbp,rcx
0x5f80: mov rbx,rsi
0x5f83: sub rsp,0x18
0x5f87: mov dword ptr [rsp + 0xc],edi
0x5f8b: mov rdi,rsi
0x5f8e: call 0x6bf0
0x5f93: mov rdi,rbp
0x5f96: mov r12,rax
0x5f99: call 0x6bf0
0x5f9e: mov rdi,r12
0x5fa1: mov r13,rax
0x5fa4: call 0x6c50
0x5fa9: mov rdi,r13
0x5fac: mov r14,rax
0x5faf: call 0x6c50
0x5fb4: cmp r14,rax
0x5fb7: jz 0x5fd0
0x5fb9: add rsp,0x18
0x5fbd: xor eax,eax
0x5fbf: pop rbx
0x5fc0: pop rbp
0x5fc1: pop r12
0x5fc3: pop r13
0x5fc5: pop r14
0x5fc7: pop r15
0x5fc9: ret 
0x5fd0: mov rdx,r14
0x5fd3: mov rsi,r13
0x5fd6: mov rdi,r12
0x5fd9: call 0x1630
0x5fde: test eax,eax
0x5fe0: jnz 0x5fb9
0x5fe2: mov edi,dword ptr [rsp + 0xc]
0x5fe6: add rsp,0x18
0x5fea: mov rcx,rbp
0x5fed: mov edx,r15d
0x5ff0: mov rsi,rbx
0x5ff3: pop rbx
0x5ff4: pop rbp
0x5ff5: pop r12
0x5ff7: pop r13
0x5ff9: pop r14
0x5ffb: pop r15
0x5ffd: jmp 0x5e40
0x6010: mov edx,0xffffff9c
0x6015: mov rcx,rsi
0x6018: mov rsi,rdi
0x601b: mov edi,edx
0x601d: jmp 0x5f70
0x6168: mov r8,rcx
0x616b: mov rcx,rdx
0x616e: lea rdx,[rip+0x197f]
0x6175: mov esi,0x1
0x617a: xor eax,eax
0x617c: call 0x1770
0x6181: jmp 0x606c
0x6450: xor r9d,r9d
0x6453: cmp qword ptr [r8],0x0
0x6457: jz 0x646b
0x6459: nop dword ptr [rax]
0x6460: add r9,0x1
0x6464: cmp qword ptr [r8 + r9*0x8],0x0
0x6469: jnz 0x6460
0x646b: jmp 0x6030
0x6470: sub rsp,0x68
0x6474: mov r10,r8
0x6477: xor r9d,r9d
0x647a: mov rax,qword ptr fs:[rip+0xffffffffffff9ba5]
0x6483: mov qword ptr [rsp + 0x58],rax
0x6488: xor eax,eax
0x648a: mov r8,rsp
0x648d: nop dword ptr [rax]
0x6490: mov eax,dword ptr [r10]
0x6493: cmp eax,0x2f
0x6496: ja 0x64da
0x6498: mov r11d,eax
0x649b: add r11,qword ptr [r10 + 0x10]
0x649f: add eax,0x8
0x64a2: mov dword ptr [r10],eax
0x64a5: mov rax,qword ptr [r11]
0x64a8: test rax,rax
0x64ab: mov qword ptr [r8 + r9*0x8],rax
0x64af: jz 0x64bb
0x64b1: add r9,0x1
0x64b5: cmp r9,0xa
0x64b9: jnz 0x6490
0x64bb: call 0x6030
0x64c0: mov rax,qword ptr [rsp + 0x58]
0x64c5: xor rax,qword ptr fs:[rip+0xffffffffffff9b5a]
0x64ce: jnz 0x64d5
0x64d0: add rsp,0x68
0x64d4: ret 
0x64d5: call 0x1590
0x64da: mov r11,qword ptr [r10 + 0x8]
0x64de: lea rax,[r11 + 0x8]
0x64e2: mov qword ptr [r10 + 0x8],rax
0x64e6: jmp 0x64a5
0x65b0: call 0x1590
0x65bc: mov rax,rbx
0x65bf: add rbx,0x8
0x65c3: jmp 0x6576
0x65d0: push rbx
0x65d1: lea rsi,[rip+0x156a]
0x65d8: mov edx,0x5
0x65dd: xor edi,edi
0x65df: call 0x1550
0x65e4: lea rdx,[rip+0x156c]
0x65eb: mov rsi,rax
0x65ee: mov edi,0x1
0x65f3: xor eax,eax
0x65f5: call 0x1700
0x65fa: lea rsi,[rip+0x156c]
0x6601: mov edx,0x5
0x6606: xor edi,edi
0x6608: call 0x1550
0x660d: lea rcx,[rip+0xe24]
0x6614: lea rdx,[rip+0x9b7]
0x661b: mov rsi,rax
0x661e: mov edi,0x1
0x6623: xor eax,eax
0x6625: call 0x1700
0x662a: mov rbx,qword ptr [rip+0x203a77]
0x6631: lea rsi,[rip+0x1768]
0x6638: xor edi,edi
0x663a: mov edx,0x5
0x663f: call 0x1550
0x6644: mov rsi,rbx
0x6647: mov rdi,rax
0x664a: pop rbx
0x664b: jmp 0x1640
0x666a: nop word ptr [rax + rax*0x1]
0x6670: mov rax,rdi
0x6673: mul rsi
0x6676: mov rdi,rax
0x6679: seto al
0x667c: test rdi,rdi
0x667f: js 0x668b
0x6681: movzx eax,al
0x6684: test rax,rax
0x6687: jnz 0x668b
0x6689: jmp 0x6650
0x668b: sub rsp,0x8
0x668f: call 0x68a0
0x6694: nop 
0x6696: nop word ptr cs:[rax + rax*0x1]
0x66a0: jmp 0x6650
0x66e6: nop word ptr cs:[rax + rax*0x1]
0x66f0: mov rax,rsi
0x66f3: mul rdx
0x66f6: mov rsi,rax
0x66f9: seto al
0x66fc: test rsi,rsi
0x66ff: js 0x670b
0x6701: movzx eax,al
0x6704: test rax,rax
0x6707: jnz 0x670b
0x6709: jmp 0x66b0
0x670b: sub rsp,0x8
0x670f: call 0x68a0
0x6714: nop 
0x6716: nop word ptr cs:[rax + rax*0x1]
0x6720: test rdi,rdi
0x6723: mov r9,rdx
0x6726: mov rcx,qword ptr [rsi]
0x6729: jz 0x6760
0x672b: xor edx,edx
0x672d: mov rax,0x5555555555555554
0x6737: div r9
0x673a: cmp rax,rcx
0x673d: jbe 0x677b
0x673f: mov rax,rcx
0x6742: shr rax,1
0x6745: lea rcx,[rax + rcx*0x1 + 0x1]
0x674a: mov qword ptr [rsi],rcx
0x674d: imul rcx,r9
0x6751: mov rsi,rcx
0x6754: jmp 0x66b0
0x6760: test rcx,rcx
0x6763: jz 0x6788
0x6765: mov rax,rcx
0x6768: mul r9
0x676b: seto dl
0x676e: test rax,rax
0x6771: movzx edx,dl
0x6774: js 0x677b
0x6776: test rdx,rdx
0x6779: jz 0x674a
0x677b: sub rsp,0x8
0x677f: call 0x68a0
0x6784: nop dword ptr [rax]
0x6788: xor edx,edx
0x678a: mov eax,0x80
0x678f: xor r8d,r8d
0x6792: div r9
0x6795: test rax,rax
0x6798: setz r8b
0x679c: lea rcx,[r8 + rax*0x1]
0x67a0: jmp 0x6765
0x67b0: test rdi,rdi
0x67b3: mov rax,qword ptr [rsi]
0x67b6: jz 0x67e0
0x67b8: mov rdx,0x5555555555555553
0x67c2: cmp rax,rdx
0x67c5: ja 0x67f1
0x67c7: mov rdx,rax
0x67ca: shr rdx,1
0x67cd: lea rax,[rdx + rax*0x1 + 0x1]
0x67d2: mov qword ptr [rsi],rax
0x67d5: mov rsi,rax
0x67d8: jmp 0x66b0
0x67e0: test rax,rax
0x67e3: mov edx,0x80
0x67e8: cmovz rax,rdx
0x67ec: test rax,rax
0x67ef: jns 0x67d2
0x67f1: sub rsp,0x8
0x67f5: call 0x68a0
0x67fa: nop word ptr [rax + rax*0x1]
0x6800: push rbx
0x6801: mov rbx,rdi
0x6804: call 0x6650
0x6809: mov rdx,rbx
0x680c: xor esi,esi
0x680e: mov rdi,rax
0x6811: pop rbx
0x6812: jmp 0x1600
0x6820: mov rax,rdi
0x6823: sub rsp,0x8
0x6827: mul rsi
0x682a: seto dl
0x682d: test rax,rax
0x6830: js 0x6849
0x6832: movzx edx,dl
0x6835: test rdx,rdx
0x6838: jnz 0x6849
0x683a: call 0x1650
0x683f: test rax,rax
0x6842: jz 0x6849
0x6844: add rsp,0x8
0x6848: ret 
0x6849: call 0x68a0
0x684e: nop 
0x6850: push rbp
0x6851: push rbx
0x6852: mov rbp,rdi
0x6855: mov rdi,rsi
0x6858: mov rbx,rsi
0x685b: sub rsp,0x8
0x685f: call 0x6650
0x6864: add rsp,0x8
0x6868: mov rdx,rbx
0x686b: mov rsi,rbp
0x686e: pop rbx
0x686f: pop rbp
0x6870: mov rdi,rax
0x6873: jmp 0x1670
0x6880: push rbx
0x6881: mov rbx,rdi
0x6884: call 0x1570
0x6889: mov rdi,rbx
0x688c: lea rsi,[rax + 0x1]
0x6890: pop rbx
0x6891: jmp 0x6850
0x68d0: call 0x14c0
0x68d5: nop word ptr cs:[rax + rax*0x1]
0x68df: nop 
0x690f: nop 
0x698e: call 0x1590
0x6993: nop word ptr cs:[rax + rax*0x1]
0x699d: nop dword ptr [rax]
0x69a0: push r15
0x69a2: push r14
0x69a4: mov eax,0x401
0x69a9: push r13
0x69ab: push r12
0x69ad: mov r13,rdi
0x69b0: push rbp
0x69b1: push rbx
0x69b2: lea rbx,[rsi + 0x1]
0x69b6: mov r14,0x3fffffffffffffff
0x69c0: mov r15,0x7ffffffffffffffe
0x69ca: sub rsp,0x8
0x69ce: cmp rsi,0x401
0x69d5: cmovnc rbx,rax
0x69d9: nop dword ptr [rax]
0x69e0: mov rdi,rbx
0x69e3: call 0x16a0
0x69e8: test rax,rax
0x69eb: mov rbp,rax
0x69ee: jz 0x6a2b
0x69f0: mov rdx,rbx
0x69f3: mov rsi,rax
0x69f6: mov rdi,r13
0x69f9: call 0x1510
0x69fe: test rax,rax
0x6a01: mov r12,rax
0x6a04: js 0x6a58
0x6a06: cmp rbx,r12
0x6a09: ja 0x6a70
0x6a0b: mov rdi,rbp
0x6a0e: call 0x14b0
0x6a13: cmp rbx,r14
0x6a16: ja 0x6a40
0x6a18: add rbx,rbx
0x6a1b: mov rdi,rbx
0x6a1e: call 0x16a0
0x6a23: test rax,rax
0x6a26: mov rbp,rax
0x6a29: jnz 0x69f0
0x6a2b: add rsp,0x8
0x6a2f: mov rax,rbp
0x6a32: pop rbx
0x6a33: pop rbp
0x6a34: pop r12
0x6a36: pop r13
0x6a38: pop r14
0x6a3a: pop r15
0x6a3c: ret 
0x6a40: cmp rbx,r15
0x6a43: ja 0x6a80
0x6a45: mov rbx,0x7fffffffffffffff
0x6a4f: jmp 0x69e0
0x6a58: call 0x14d0
0x6a5d: cmp dword ptr [rax],0x22
0x6a60: jz 0x6a06
0x6a62: mov rdi,rbp
0x6a65: xor ebp,ebp
0x6a67: call 0x14b0
0x6a6c: jmp 0x6a2b
0x6a70: mov byte ptr [rbp + r12*0x1],0x0
0x6a76: jmp 0x6a2b
0x6a80: call 0x14d0
0x6a85: xor ebp,ebp
0x6a87: mov dword ptr [rax],0xc
0x6a8d: jmp 0x6a2b
0x6a90: push r12
0x6a92: push rbp
0x6a93: mov rbp,rdi
0x6a96: push rbx
0x6a97: call 0x1500
0x6a9c: mov ebx,dword ptr [rbp]
0x6a9f: mov rdi,rbp
0x6aa2: mov r12,rax
0x6aa5: call 0x6d80
0x6aaa: and ebx,0x20
0x6aad: test ebx,ebx
0x6aaf: jnz 0x6ac8
0x6ab1: test eax,eax
0x6ab3: jz 0x6abf
0x6ab5: test r12,r12
0x6ab8: mov eax,0xffffffff
0x6abd: jz 0x6af8
0x6abf: pop rbx
0x6ac0: pop rbp
0x6ac1: pop r12
0x6ac3: ret 
0x6ac8: test eax,eax
0x6aca: jnz 0x6ae8
0x6acc: call 0x14d0
0x6ad1: mov dword ptr [rax],0x0
0x6ad7: mov eax,0xffffffff
0x6adc: pop rbx
0x6add: pop rbp
0x6ade: pop r12
0x6ae0: ret 
0x6ae8: pop rbx
0x6ae9: mov eax,0xffffffff
0x6aee: pop rbp
0x6aef: pop r12
0x6af1: ret 
0x6af8: call 0x14d0
0x6afd: cmp dword ptr [rax],0x9
0x6b00: pop rbx
0x6b01: pop rbp
0x6b02: pop r12
0x6b04: setnz al
0x6b07: movzx eax,al
0x6b0a: neg eax
0x6b0c: ret 
0x6b10: sub rsp,0x8
0x6b14: call 0x6b90
0x6b19: test rax,rax
0x6b1c: jz 0x6b23
0x6b1e: add rsp,0x8
0x6b22: ret 
0x6b23: call 0x68a0
0x6b28: nop dword ptr [rax + rax*0x1]
0x6b30: push rbp
0x6b31: push rbx
0x6b32: xor ebp,ebp
0x6b34: mov rbx,rdi
0x6b37: sub rsp,0x8
0x6b3b: cmp byte ptr [rdi],0x2f
0x6b3e: setz bpl
0x6b42: call 0x6bf0
0x6b47: mov rcx,rax
0x6b4a: sub rcx,rbx
0x6b4d: cmp rcx,rbp
0x6b50: jbe 0x6b80
0x6b52: cmp byte ptr [rax - 0x1],0x2f
0x6b56: lea rdx,[rcx - 0x1]
0x6b5a: jz 0x6b6e
0x6b5c: jmp 0x6b80
0x6b60: cmp byte ptr [rbx + rdx*0x1 - 0x1],0x2f
0x6b65: lea rax,[rdx - 0x1]
0x6b69: jnz 0x6b73
0x6b6b: mov rdx,rax
0x6b6e: cmp rbp,rdx
0x6b71: jnz 0x6b60
0x6b73: add rsp,0x8
0x6b77: mov rax,rdx
0x6b7a: pop rbx
0x6b7b: pop rbp
0x6b7c: ret 
0x6b80: add rsp,0x8
0x6b84: mov rdx,rcx
0x6b87: mov rax,rdx
0x6b8a: pop rbx
0x6b8b: pop rbp
0x6b8c: ret 
0x6b90: push rbp
0x6b91: push rbx
0x6b92: mov rbp,rdi
0x6b95: sub rsp,0x8
0x6b99: call 0x6b30
0x6b9e: test rax,rax
0x6ba1: mov rbx,rax
0x6ba4: setz al
0x6ba7: movzx eax,al
0x6baa: lea rdi,[rbx + rax*0x1 + 0x1]
0x6baf: call 0x16a0
0x6bb4: test rax,rax
0x6bb7: mov rcx,rax
0x6bba: jz 0x6bd6
0x6bbc: mov rdx,rbx
0x6bbf: mov rsi,rbp
0x6bc2: mov rdi,rax
0x6bc5: call 0x1670
0x6bca: test rbx,rbx
0x6bcd: mov rcx,rax
0x6bd0: jz 0x6be0
0x6bd2: mov byte ptr [rcx + rbx*0x1],0x0
0x6bd6: add rsp,0x8
0x6bda: mov rax,rcx
0x6bdd: pop rbx
0x6bde: pop rbp
0x6bdf: ret 
0x6be0: mov byte ptr [rax],0x2e
0x6be3: mov ebx,0x1
0x6be8: jmp 0x6bd2
0x6bf0: movzx edx,byte ptr [rdi]
0x6bf3: mov rax,rdi
0x6bf6: cmp dl,0x2f
0x6bf9: jnz 0x6c0c
0x6bfb: nop dword ptr [rax + rax*0x1]
0x6c00: add rax,0x1
0x6c04: movzx edx,byte ptr [rax]
0x6c07: cmp dl,0x2f
0x6c0a: jz 0x6c00
0x6c0c: test dl,dl
0x6c0e: jz 0x6c4a
0x6c10: mov rcx,rax
0x6c13: xor esi,esi
0x6c15: jmp 0x6c35
0x6c20: test sil,sil
0x6c23: jz 0x6c2a
0x6c25: mov rax,rcx
0x6c28: xor esi,esi
0x6c2a: add rcx,0x1
0x6c2e: movzx edx,byte ptr [rcx]
0x6c31: test dl,dl
0x6c33: jz 0x6c4a
0x6c35: cmp dl,0x2f
0x6c38: jnz 0x6c20
0x6c3a: add rcx,0x1
0x6c3e: movzx edx,byte ptr [rcx]
0x6c41: mov esi,0x1
0x6c46: test dl,dl
0x6c48: jnz 0x6c35
0x6c4a: ret 
0x6c50: push rbx
0x6c51: mov rbx,rdi
0x6c54: call 0x1570
0x6c59: cmp rax,0x1
0x6c5d: jbe 0x6c6a
0x6c5f: cmp byte ptr [rbx + rax*0x1 - 0x1],0x2f
0x6c64: lea rdx,[rax - 0x1]
0x6c68: jz 0x6c78
0x6c6a: pop rbx
0x6c6b: ret 
0x6c70: mov rdx,rax
0x6c73: nop dword ptr [rax + rax*0x1]
0x6c78: cmp rdx,0x1
0x6c7c: jz 0x6c90
0x6c7e: cmp byte ptr [rbx + rdx*0x1 - 0x1],0x2f
0x6c83: lea rax,[rdx - 0x1]
0x6c87: jz 0x6c70
0x6c89: mov rax,rdx
0x6c8c: pop rbx
0x6c8d: ret 
0x6c90: mov eax,0x1
0x6c95: pop rbx
0x6c96: ret 
0x6d00: movsx rcx,byte ptr [rdi]
0x6d04: test cl,cl
0x6d06: jz 0x6d30
0x6d08: xor eax,eax
0x6d0a: nop word ptr [rax + rax*0x1]
0x6d10: rol rax,0x9
0x6d14: add rdi,0x1
0x6d18: add rax,rcx
0x6d1b: movsx rcx,byte ptr [rdi]
0x6d1f: test cl,cl
0x6d21: jnz 0x6d10
0x6d23: xor edx,edx
0x6d25: div rsi
0x6d28: mov rax,rdx
0x6d2b: ret 
0x6d30: xor edx,edx
0x6d32: mov rax,rdx
0x6d35: ret 
0x6d80: push r12
0x6d82: push rbp
0x6d83: push rbx
0x6d84: mov rbx,rdi
0x6d87: call 0x1680
0x6d8c: test eax,eax
0x6d8e: mov rdi,rbx
0x6d91: js 0x6de7
0x6d93: call 0x16d0
0x6d98: test eax,eax
0x6d9a: jnz 0x6dc8
0x6d9c: mov rdi,rbx
0x6d9f: call 0x6e00
0x6da4: test eax,eax
0x6da6: jz 0x6de4
0x6da8: call 0x14d0
0x6dad: mov r12d,dword ptr [rax]
0x6db0: mov rdi,rbx
0x6db3: mov rbp,rax
0x6db6: call 0x1530
0x6dbb: test r12d,r12d
0x6dbe: jnz 0x6df0
0x6dc0: pop rbx
0x6dc1: pop rbp
0x6dc2: pop r12
0x6dc4: ret 
0x6dc8: mov rdi,rbx
0x6dcb: call 0x1680
0x6dd0: xor esi,esi
0x6dd2: mov edx,0x1
0x6dd7: mov edi,eax
0x6dd9: call 0x15f0
0x6dde: cmp rax,-0x1
0x6de2: jnz 0x6d9c
0x6de4: mov rdi,rbx
0x6de7: pop rbx
0x6de8: pop rbp
0x6de9: pop r12
0x6deb: jmp 0x1530
0x6df0: mov dword ptr [rbp],r12d
0x6df4: mov eax,0xffffffff
0x6df9: jmp 0x6dc0
0x6e00: test rdi,rdi
0x6e03: push rbx
0x6e04: mov rbx,rdi
0x6e07: jz 0x6e1a
0x6e09: call 0x16d0
0x6e0e: test eax,eax
0x6e10: jz 0x6e1a
0x6e12: test dword ptr [rbx],0x100
0x6e18: jnz 0x6e28
0x6e1a: mov rdi,rbx
0x6e1d: pop rbx
0x6e1e: jmp 0x16b0
0x6e28: mov rdi,rbx
0x6e2b: mov edx,0x1
0x6e30: xor esi,esi
0x6e32: call 0x6e40
0x6e37: mov rdi,rbx
0x6e3a: pop rbx
0x6e3b: jmp 0x16b0
0x6e40: mov rax,qword ptr [rdi + 0x8]
0x6e44: cmp qword ptr [rdi + 0x10],rax
0x6e48: jz 0x6e50
0x6e4a: jmp 0x1730
0x6e50: mov rax,qword ptr [rdi + 0x20]
0x6e54: cmp qword ptr [rdi + 0x28],rax
0x6e58: jnz 0x6e4a
0x6e5a: cmp qword ptr [rdi + 0x48],0x0
0x6e5f: jnz 0x6e4a
0x6e61: push r12
0x6e63: push rbp
0x6e64: mov r12d,edx
0x6e67: push rbx
0x6e68: mov rbp,rsi
0x6e6b: mov rbx,rdi
0x6e6e: call 0x1680
0x6e73: mov edx,r12d
0x6e76: mov rsi,rbp
0x6e79: mov edi,eax
0x6e7b: call 0x15f0
0x6e80: cmp rax,-0x1
0x6e84: jz 0x6e92
0x6e86: and dword ptr [rbx],0xffffffef
0x6e89: mov qword ptr [0x90 + rbx],rax
0x6e90: xor eax,eax
0x6e92: pop rbx
0x6e93: pop rbp
0x6e94: pop r12
0x6e96: ret 
0x6ea0: push r15
0x6ea2: push r14
0x6ea4: mov r15,rdx
0x6ea7: push r13
0x6ea9: push r12
0x6eab: lea r12,[rip+0x202b7e]
0x6eb2: push rbp
0x6eb3: lea rbp,[rip+0x202b7e]
0x6eba: push rbx
0x6ebb: mov r13d,edi
0x6ebe: mov r14,rsi
0x6ec1: sub rbp,r12
0x6ec4: sub rsp,0x8
0x6ec8: sar rbp,0x3
0x6ecc: call 0x1480
0x6ed1: test rbp,rbp
0x6ed4: jz 0x6ef6
0x6ed6: xor ebx,ebx
0x6ed8: nop dword ptr [rax + rax*0x1]
0x6ee0: mov rdx,r15
0x6ee3: mov rsi,r14
0x6ee6: mov edi,r13d
0x6ee9: call qword ptr [r12 + rbx*0x8]
0x6eed: add rbx,0x1
0x6ef1: cmp rbp,rbx
0x6ef4: jnz 0x6ee0
0x6ef6: add rsp,0x8
0x6efa: pop rbx
0x6efb: pop rbp
0x6efc: pop r12
0x6efe: pop r13
0x6f00: pop r14
0x6f02: pop r15
0x6f04: ret 
0x6f10: ret 
0x6f30: sub rsp,0x8
0x6f34: add rsp,0x8
0x6f38: ret 
