0x1218: sub rsp,0x8
0x121c: mov rax,qword ptr [rip+0x205dad]
0x1223: test rax,rax
0x1226: jz 0x122a
0x1228: call rax
0x122a: add rsp,0x8
0x122e: ret 
0x1230: push qword ptr [rip+0x205c3a]
0x1236: jmp qword ptr [rip+0x205c3c]
0x1240: jmp qword ptr [rip+0x205c3a]
0x1246: push 0x0
0x124b: jmp 0x1230
0x1256: push 0x1
0x125b: jmp 0x1230
0x1260: jmp qword ptr [rip+0x205c2a]
0x1266: push 0x2
0x126b: jmp 0x1230
0x1276: push 0x3
0x127b: jmp 0x1230
0x1280: jmp qword ptr [rip+0x205c1a]
0x1286: push 0x4
0x128b: jmp 0x1230
0x1290: jmp qword ptr [rip+0x205c12]
0x1296: push 0x5
0x129b: jmp 0x1230
0x12a6: push 0x6
0x12ab: jmp 0x1230
0x12b0: jmp qword ptr [rip+0x205c02]
0x12b6: push 0x7
0x12bb: jmp 0x1230
0x12c6: push 0x8
0x12cb: jmp 0x1230
0x12d6: push 0x9
0x12db: jmp 0x1230
0x12e0: jmp qword ptr [rip+0x205bea]
0x12e6: push 0xa
0x12eb: jmp 0x1230
0x12f0: jmp qword ptr [rip+0x205be2]
0x12f6: push 0xb
0x12fb: jmp 0x1230
0x1306: push 0xc
0x130b: jmp 0x1230
0x1316: push 0xd
0x131b: jmp 0x1230
0x1320: jmp qword ptr [rip+0x205bca]
0x1326: push 0xe
0x132b: jmp 0x1230
0x1336: push 0xf
0x133b: jmp 0x1230
0x1346: push 0x10
0x134b: jmp 0x1230
0x1350: jmp qword ptr [rip+0x205bb2]
0x1356: push 0x11
0x135b: jmp 0x1230
0x1360: jmp qword ptr [rip+0x205baa]
0x1366: push 0x12
0x136b: jmp 0x1230
0x1370: jmp qword ptr [rip+0x205ba2]
0x1376: push 0x13
0x137b: jmp 0x1230
0x1386: push 0x14
0x138b: jmp 0x1230
0x1390: jmp qword ptr [rip+0x205b92]
0x1396: push 0x15
0x139b: jmp 0x1230
0x13a0: jmp qword ptr [rip+0x205b8a]
0x13a6: push 0x16
0x13ab: jmp 0x1230
0x13b0: jmp qword ptr [rip+0x205b82]
0x13b6: push 0x17
0x13bb: jmp 0x1230
0x13c0: jmp qword ptr [rip+0x205b7a]
0x13c6: push 0x18
0x13cb: jmp 0x1230
0x13d0: jmp qword ptr [rip+0x205b72]
0x13d6: push 0x19
0x13db: jmp 0x1230
0x13e0: jmp qword ptr [rip+0x205b6a]
0x13e6: push 0x1a
0x13eb: jmp 0x1230
0x13f0: jmp qword ptr [rip+0x205b62]
0x13f6: push 0x1b
0x13fb: jmp 0x1230
0x1400: jmp qword ptr [rip+0x205b5a]
0x1406: push 0x1c
0x140b: jmp 0x1230
0x1416: push 0x1d
0x141b: jmp 0x1230
0x1426: push 0x1e
0x142b: jmp 0x1230
0x1430: jmp qword ptr [rip+0x205b42]
0x1436: push 0x1f
0x143b: jmp 0x1230
0x1440: jmp qword ptr [rip+0x205b3a]
0x1446: push 0x20
0x144b: jmp 0x1230
0x1456: push 0x21
0x145b: jmp 0x1230
0x1466: push 0x22
0x146b: jmp 0x1230
0x1476: push 0x23
0x147b: jmp 0x1230
0x1486: push 0x24
0x148b: jmp 0x1230
0x1490: jmp qword ptr [rip+0x205b12]
0x1496: push 0x25
0x149b: jmp 0x1230
0x14a0: jmp qword ptr [rip+0x205b0a]
0x14a6: push 0x26
0x14ab: jmp 0x1230
0x14b0: jmp qword ptr [rip+0x205b02]
0x14b6: push 0x27
0x14bb: jmp 0x1230
0x14c0: jmp qword ptr [rip+0x205b1a]
0x157b: nop dword ptr [rax+rax*0x1]
0x16d9: nop dword ptr [rax]
0x170a: hlt 
0x1710: lea rdi,[rip+0x205969]
0x1717: push rbp
0x1718: lea rax,[rip+0x205961]
0x171f: cmp rax,rdi
0x1722: mov rbp,rsp
0x1725: jz 0x1740
0x1727: mov rax,qword ptr [rip+0x205892]
0x172e: test rax,rax
0x1731: jz 0x1740
0x1733: pop rbp
0x1734: jmp rax
0x1740: pop rbp
0x1741: ret 
0x1750: lea rdi,[rip+0x205929]
0x1757: lea rsi,[rip+0x205922]
0x175e: push rbp
0x175f: sub rsi,rdi
0x1762: mov rbp,rsp
0x1765: sar rsi,0x3
0x1769: mov rax,rsi
0x176c: shr rax,0x3f
0x1770: add rsi,rax
0x1773: sar rsi,0x1
0x1776: jz 0x1790
0x1778: mov rax,qword ptr [rip+0x205859]
0x177f: test rax,rax
0x1782: jz 0x1790
0x1784: pop rbp
0x1785: jmp rax
0x1790: pop rbp
0x1791: ret 
0x17a0: cmp byte ptr [rip+0x205921],0x0
0x17a7: jnz 0x17d8
0x17a9: cmp qword ptr [rip+0x20582f],0x0
0x17b1: push rbp
0x17b2: mov rbp,rsp
0x17b5: jz 0x17c3
0x17b7: mov rdi,qword ptr [rip+0x20584a]
0x17be: call 0x14c0
0x17c3: call 0x1710
0x17c8: mov byte ptr [rip+0x2058f9],0x1
0x17cf: pop rbp
0x17d0: ret 
0x17d8: ret 
0x17e0: push rbp
0x17e1: mov rbp,rsp
0x17e4: pop rbp
0x17e5: jmp 0x1750
0x1b60: mov qword ptr [rip+0x205571],rdi
0x1b67: ret 
0x1b70: mov byte ptr [rip+0x205559],dil
0x1b77: ret 
0x1b80: push rbp
0x1b81: push rbx
0x1b82: sub rsp,0x8
0x1b86: mov rdi,qword ptr [rip+0x2054fb]
0x1b8d: call 0x42a0
0x1b92: test eax,eax
0x1b94: jz 0x1bac
0x1b96: call 0x1260
0x1b9b: cmp byte ptr [rip+0x20552e],0x0
0x1ba2: mov rbx,rax
0x1ba5: jz 0x1bc3
0x1ba7: cmp dword ptr [rax],0x20
0x1baa: jnz 0x1bc3
0x1bac: mov rdi,qword ptr [rip+0x20550d]
0x1bb3: call 0x42a0
0x1bb8: test eax,eax
0x1bba: jnz 0x1c02
0x1bbc: add rsp,0x8
0x1bc0: pop rbx
0x1bc1: pop rbp
0x1bc2: ret 
0x1bc3: lea rsi,[rip+0x2d9e]
0x1bca: xor edi,edi
0x1bcc: mov edx,0x5
0x1bd1: call 0x12d0
0x1bd6: mov rdi,qword ptr [rip+0x2054fb]
0x1bdd: mov rbp,rax
0x1be0: test rdi,rdi
0x1be3: jz 0x1c0d
0x1be5: call 0x3740
0x1bea: mov esi,dword ptr [rbx]
0x1bec: lea rdx,[rip+0x2d81]
0x1bf3: mov rcx,rax
0x1bf6: mov r8,rbp
0x1bf9: xor edi,edi
0x1bfb: xor eax,eax
0x1bfd: call 0x1430
0x1c02: mov edi,dword ptr [rip+0x205410]
0x1c08: call 0x1280
0x1c0d: mov esi,dword ptr [rbx]
0x1c0f: lea rdx,[rip+0x2d62]
0x1c16: mov rcx,rax
0x1c19: xor edi,edi
0x1c1b: xor eax,eax
0x1c1d: call 0x1430
0x1c22: jmp 0x1c02
0x1ccf: nop 
0x1cd0: push rbp
0x1cd1: push rbx
0x1cd2: mov rbp,rdi
0x1cd5: mov ebx,esi
0x1cd7: sub rsp,0x8
0x1cdb: call 0x4380
0x1ce0: movzx edx,byte ptr [rax]
0x1ce3: and edx,0xffffffdf
0x1ce6: cmp dl,0x55
0x1ce9: jz 0x1d60
0x1ceb: cmp dl,0x47
0x1cee: jz 0x1d10
0x1cf0: lea rax,[rip+0x2cdc]
0x1cf7: lea rdx,[rip+0x2cd7]
0x1cfe: cmp ebx,0x9
0x1d01: cmovnz rax,rdx
0x1d05: add rsp,0x8
0x1d09: pop rbx
0x1d0a: pop rbp
0x1d0b: ret 
0x1d10: movzx edx,byte ptr [rax+0x1]
0x1d14: and edx,0xffffffdf
0x1d17: cmp dl,0x42
0x1d1a: jnz 0x1cf0
0x1d1c: cmp byte ptr [rax+0x2],0x31
0x1d20: jnz 0x1cf0
0x1d22: cmp byte ptr [rax+0x3],0x38
0x1d26: jnz 0x1cf0
0x1d28: cmp byte ptr [rax+0x4],0x30
0x1d2c: jnz 0x1cf0
0x1d2e: cmp byte ptr [rax+0x5],0x33
0x1d32: jnz 0x1cf0
0x1d34: cmp byte ptr [rax+0x6],0x30
0x1d38: jnz 0x1cf0
0x1d3a: cmp byte ptr [rax+0x7],0x0
0x1d3e: jnz 0x1cf0
0x1d40: cmp byte ptr [rbp],0x60
0x1d44: lea rax,[rip+0x2c81]
0x1d4b: lea rdx,[rip+0x2c7e]
0x1d52: cmovnz rax,rdx
0x1d56: add rsp,0x8
0x1d5a: pop rbx
0x1d5b: pop rbp
0x1d5c: ret 
0x1d60: movzx edx,byte ptr [rax+0x1]
0x1d64: and edx,0xffffffdf
0x1d67: cmp dl,0x54
0x1d6a: jnz 0x1cf0
0x1d6c: movzx edx,byte ptr [rax+0x2]
0x1d70: and edx,0xffffffdf
0x1d73: cmp dl,0x46
0x1d76: jnz 0x1cf0
0x1d7c: cmp byte ptr [rax+0x3],0x2d
0x1d80: jnz 0x1cf0
0x1d86: cmp byte ptr [rax+0x4],0x38
0x1d8a: jnz 0x1cf0
0x1d90: cmp byte ptr [rax+0x5],0x0
0x1d94: jnz 0x1cf0
0x1d9a: cmp byte ptr [rbp],0x60
0x1d9e: lea rax,[rip+0x2c1f]
0x1da5: lea rdx,[rip+0x2c1c]
0x1dac: cmovnz rax,rdx
0x1db0: add rsp,0x8
0x1db4: pop rbx
0x1db5: pop rbp
0x1db6: ret 
0x1dc0: push r15
0x1dc2: push r14
0x1dc4: mov r15d,r8d
0x1dc7: push r13
0x1dc9: push r12
0x1dcb: mov r14,rdi
0x1dce: push rbp
0x1dcf: push rbx
0x1dd0: mov ebx,r9d
0x1dd3: mov r13,rsi
0x1dd6: mov rbp,rcx
0x1dd9: and ebx,0x2
0x1ddc: sub rsp,0xb8
0x1de3: mov rax,qword ptr [0xf0+rsp]
0x1deb: mov qword ptr [rsp+0x10],rdx
0x1df0: mov dword ptr [rsp+0x8],r8d
0x1df5: mov dword ptr [rsp+0x78],r9d
0x1dfa: mov qword ptr [rsp+0x20],rax
0x1dff: mov rax,qword ptr [0xf8+rsp]
0x1e07: mov qword ptr [rsp+0x68],rax
0x1e0c: mov rax,qword ptr [0x100+rsp]
0x1e14: mov qword ptr [rsp+0x60],rax
0x1e19: mov rax,qword ptr fs:[0x28]
0x1e22: mov qword ptr [0xa8+rsp],rax
0x1e2a: xor eax,eax
0x1e2c: call 0x12e0
0x1e31: cmp r15d,0xa
0x1e35: mov qword ptr [rsp+0x58],rax
0x1e3a: ja 0x2fef
0x1e40: lea rcx,[rip+0x2bf9]
0x1e47: mov edx,r15d
0x1e4a: movsxd rax,dword ptr [rcx+rdx*0x4]
0x1e4e: add rax,rcx
0x1e51: jmp rax
0x1e53: mov byte ptr [rsp+0xe],0x1
0x1e58: mov byte ptr [rsp+0x7c],0x0
0x1e5d: xor r12d,r12d
0x1e60: mov qword ptr [rsp+0x50],0x0
0x1e69: mov byte ptr [rsp+0xf],0x1
0x1e6e: mov byte ptr [rsp+0xd],0x0
0x1e73: lea rax,[rip+0x2b5b]
0x1e7a: mov qword ptr [rsp+0x18],0x1
0x1e83: xor r15d,r15d
0x1e86: mov dword ptr [rsp+0x8],0x2
0x1e8e: mov qword ptr [rsp+0x48],rax
0x1e93: xor r11d,r11d
0x1e96: mov rax,rbp
0x1e99: mov r8d,r12d
0x1e9c: mov rbp,r11
0x1e9f: mov r11,rax
0x1ea2: nop word ptr [rax+rax*0x1]
0x1ea8: cmp r11,rbp
0x1eab: setnz r12b
0x1eaf: cmp r11,-0x1
0x1eb3: jnz 0x1ec2
0x1eb5: mov rax,qword ptr [rsp+0x10]
0x1eba: cmp byte ptr [rax+rbp*0x1],0x0
0x1ebe: setnz r12b
0x1ec2: test r12b,r12b
0x1ec5: jz 0x2520
0x1ecb: cmp dword ptr [rsp+0x8],0x2
0x1ed0: mov rdi,qword ptr [rsp+0x10]
0x1ed5: lea r9,[rdi+rbp*0x1]
0x1ed9: setnz al
0x1edc: and al,byte ptr [rsp+0xd]
0x1ee0: mov r10d,eax
0x1ee3: jz 0x1f90
0x1ee9: mov rax,qword ptr [rsp+0x18]
0x1eee: test rax,rax
0x1ef1: jz 0x2320
0x1ef7: cmp r11,-0x1
0x1efb: lea rbx,[rbp+rax*0x1]
0x1f00: jnz 0x1f30
0x1f02: cmp rax,0x1
0x1f06: jbe 0x1f30
0x1f08: mov byte ptr [rsp+0x38],r8b
0x1f0d: mov byte ptr [rsp+0x30],r10b
0x1f12: mov qword ptr [rsp+0x28],r9
0x1f17: call 0x12f0
0x1f1c: movzx r8d,byte ptr [rsp+0x38]
0x1f22: movzx r10d,byte ptr [rsp+0x30]
0x1f28: mov r11,rax
0x1f2b: mov r9,qword ptr [rsp+0x28]
0x1f30: cmp rbx,r11
0x1f33: mov byte ptr [rsp+0x28],r10b
0x1f38: ja 0x24f0
0x1f3e: mov rdx,qword ptr [rsp+0x18]
0x1f43: mov rsi,qword ptr [rsp+0x48]
0x1f48: mov rdi,r9
0x1f4b: mov qword ptr [rsp+0x40],r11
0x1f50: mov byte ptr [rsp+0x38],r8b
0x1f55: mov qword ptr [rsp+0x30],r9
0x1f5a: call 0x1370
0x1f5f: test eax,eax
0x1f61: mov r9,qword ptr [rsp+0x30]
0x1f66: movzx r8d,byte ptr [rsp+0x38]
0x1f6c: mov r11,qword ptr [rsp+0x40]
0x1f71: jnz 0x24f0
0x1f77: cmp byte ptr [rsp+0xf],0x0
0x1f7c: movzx r10d,byte ptr [rsp+0x28]
0x1f82: jnz 0x2f05
0x1f88: nop dword ptr [rax+rax*0x1]
0x1f90: movzx ebx,byte ptr [r9]
0x1f94: cmp bl,0x7e
0x1f97: ja 0x22b8
0x1f9d: lea rcx,[rip+0x2ac8]
0x1fa4: movzx edx,bl
0x1fa7: movsxd rax,dword ptr [rcx+rdx*0x4]
0x1fab: add rax,rcx
0x1fae: jmp rax
0x1fb0: xor r10d,r10d
0x1fb3: cmp r11,0x1
0x1fb7: setnz al
0x1fba: cmp r11,-0x1
0x1fbe: jnz 0x1fcc
0x1fc0: mov rax,qword ptr [rsp+0x10]
0x1fc5: cmp byte ptr [rax+0x1],0x0
0x1fc9: setnz al
0x1fcc: cmp dword ptr [rsp+0x8],0x2
0x1fd1: setz dl
0x1fd4: test al,al
0x1fd6: jz 0x2228
0x1fdc: xor r12d,r12d
0x1fdf: xor eax,eax
0x1fe1: nop dword ptr [rax]
0x1fe8: cmp byte ptr [rsp+0xd],0x1
0x1fed: jnz 0x2102
0x1ff3: test dl,dl
0x1ff5: jnz 0x2102
0x1ffb: mov rsi,qword ptr [rsp+0x20]
0x2000: test rsi,rsi
0x2003: jz 0x2019
0x2005: mov edx,ebx
0x2007: shr dl,0x5
0x200a: movzx edx,dl
0x200d: mov edx,dword ptr [rsi+rdx*0x4]
0x2010: bt edx,ebx
0x2013: jc 0x2163
0x2019: test r10b,r10b
0x201c: jnz 0x2163
0x2022: xor eax,0x1
0x2025: add rbp,0x1
0x2029: and eax,r8d
0x202c: test al,al
0x202e: jz 0x2050
0x2030: cmp r13,r15
0x2033: jbe 0x203a
0x2035: mov byte ptr [r14+r15*0x1],0x27
0x203a: lea rax,[r15+0x1]
0x203e: cmp r13,rax
0x2041: jbe 0x2049
0x2043: mov byte ptr [r14+r15*0x1+0x1],0x27
0x2049: add r15,0x2
0x204d: xor r8d,r8d
0x2050: cmp r15,r13
0x2053: jnc 0x2059
0x2055: mov byte ptr [r14+r15*0x1],bl
0x2059: movzx edi,byte ptr [rsp+0xe]
0x205e: add r15,0x1
0x2062: mov eax,0x0
0x2067: test r12b,r12b
0x206a: cmovz edi,eax
0x206d: mov byte ptr [rsp+0xe],dil
0x2072: jmp 0x1ea8
0x2080: xor r10d,r10d
0x2083: mov eax,dword ptr [rsp+0x8]
0x2087: cmp eax,0x2
0x208a: jz 0x2648
0x2090: cmp eax,0x5
0x2093: jz 0x2608
0x2099: cmp eax,0x2
0x209c: mov ebx,0x3f
0x20a1: setz dl
0x20a4: xor r12d,r12d
0x20a7: xor eax,eax
0x20a9: jmp 0x1fe8
0x20b0: xor r10d,r10d
0x20b3: cmp dword ptr [rsp+0x8],0x2
0x20b8: jz 0x25c0
0x20be: mov byte ptr [rsp+0x7c],r12b
0x20c3: xor edx,edx
0x20c5: xor eax,eax
0x20c7: mov ebx,0x27
0x20cc: jmp 0x1fe8
0x20d8: mov edx,0x9
0x20dd: mov ebx,0x74
0x20e2: cmp dword ptr [rsp+0x8],0x2
0x20e7: setz al
0x20ea: and al,byte ptr [rsp+0xf]
0x20ee: jnz 0x223e
0x20f4: cmp byte ptr [rsp+0xd],0x0
0x20f9: jnz 0x2160
0x20fb: mov ebx,edx
0x20fd: xor r12d,r12d
0x2100: xor eax,eax
0x2102: cmp byte ptr [rsp+0xf],0x0
0x2107: jnz 0x1ffb
0x210d: jmp 0x2019
0x2118: mov edx,0x8
0x211d: mov ebx,0x62
0x2122: jmp 0x20f4
0x2128: cmp dword ptr [rsp+0x8],0x2
0x212d: jz 0x2500
0x2133: cmp byte ptr [rsp+0xd],0x0
0x2138: jz 0x2350
0x213e: cmp byte ptr [rsp+0xf],0x0
0x2143: jz 0x2350
0x2149: cmp qword ptr [rsp+0x18],0x0
0x214f: jnz 0x250b
0x2155: mov ebx,0x5c
0x215a: nop word ptr [rax+rax*0x1]
0x2160: xor r12d,r12d
0x2163: cmp dword ptr [rsp+0x8],0x2
0x2168: setz dl
0x216b: cmp byte ptr [rsp+0xf],0x0
0x2170: mov eax,edx
0x2172: jnz 0x29c8
0x2178: mov eax,r8d
0x217b: xor eax,0x1
0x217e: and al,dl
0x2180: jz 0x21b1
0x2182: cmp r13,r15
0x2185: jbe 0x218c
0x2187: mov byte ptr [r14+r15*0x1],0x27
0x218c: lea rdx,[r15+0x1]
0x2190: cmp r13,rdx
0x2193: jbe 0x219b
0x2195: mov byte ptr [r14+r15*0x1+0x1],0x24
0x219b: lea rdx,[r15+0x2]
0x219f: cmp r13,rdx
0x21a2: jbe 0x21aa
0x21a4: mov byte ptr [r14+r15*0x1+0x2],0x27
0x21aa: add r15,0x3
0x21ae: mov r8d,eax
0x21b1: cmp r13,r15
0x21b4: jbe 0x21bb
0x21b6: mov byte ptr [r14+r15*0x1],0x5c
0x21bb: add r15,0x1
0x21bf: add rbp,0x1
0x21c3: jmp 0x2050
0x21d0: cmp byte ptr [rsp+0xd],0x0
0x21d5: jnz 0x23a3
0x21db: xor edx,edx
0x21dd: test byte ptr [rsp+0x78],0x1
0x21e2: jz 0x20fb
0x21e8: add rbp,0x1
0x21ec: jmp 0x1ea8
0x21f8: cmp dword ptr [rsp+0x8],0x2
0x21fd: setz dl
0x2200: xor eax,eax
0x2202: jmp 0x1fe8
0x2210: mov edx,0x7
0x2215: mov ebx,0x61
0x221a: jmp 0x20f4
0x2220: cmp dword ptr [rsp+0x8],0x2
0x2225: setz dl
0x2228: test rbp,rbp
0x222b: jnz 0x1fdc
0x2231: movzx eax,byte ptr [rsp+0xf]
0x2236: and al,dl
0x2238: jz 0x1fe8
0x223e: mov rbp,r11
0x2241: mov dword ptr [rsp+0x8],0x2
0x2249: jmp 0x2949
0x2250: cmp dword ptr [rsp+0x8],0x2
0x2255: setz dl
0x2258: xor r12d,r12d
0x225b: jmp 0x2231
0x2260: cmp dword ptr [rsp+0x8],0x2
0x2265: mov ebx,0x20
0x226a: setz dl
0x226d: jmp 0x2231
0x2270: mov edx,0xd
0x2275: mov ebx,0x72
0x227a: jmp 0x20e2
0x2280: mov edx,0xc
0x2285: mov ebx,0x66
0x228a: jmp 0x20f4
0x2290: mov edx,0xb
0x2295: mov ebx,0x76
0x229a: jmp 0x20f4
0x22a0: mov edx,0xa
0x22a5: mov ebx,0x6e
0x22aa: jmp 0x20e2
0x22b0: xor r10d,r10d
0x22b3: nop dword ptr [rax+rax*0x1]
0x22b8: cmp qword ptr [rsp+0x58],0x1
0x22be: jnz 0x2668
0x22c4: mov qword ptr [rsp+0x38],r11
0x22c9: mov byte ptr [rsp+0x30],r8b
0x22ce: mov byte ptr [rsp+0x28],r10b
0x22d3: call 0x14b0
0x22d8: mov rcx,qword ptr [rax]
0x22db: movzx edx,bl
0x22de: movzx r10d,byte ptr [rsp+0x28]
0x22e4: movzx r8d,byte ptr [rsp+0x30]
0x22ea: mov r11,qword ptr [rsp+0x38]
0x22ef: mov edi,0x1
0x22f4: movzx eax,word ptr [rcx+rdx*0x2]
0x22f8: and ax,0x4000
0x22fc: setnz r12b
0x2300: setz al
0x2303: and al,byte ptr [rsp+0xd]
0x2307: test al,al
0x2309: jnz 0x2ca1
0x230f: cmp dword ptr [rsp+0x8],0x2
0x2314: setz dl
0x2317: jmp 0x1fe8
0x2320: movzx ebx,byte ptr [r9]
0x2324: cmp bl,0x7e
0x2327: ja 0x22b0
0x2329: lea rcx,[rip+0x2938]
0x2330: movzx edx,bl
0x2333: movsxd rax,dword ptr [rcx+rdx*0x4]
0x2337: add rax,rcx
0x233a: jmp rax
0x2340: xor r10d,r10d
0x2343: cmp byte ptr [rsp+0xd],0x0
0x2348: jnz 0x213e
0x234e: nop 
0x2350: mov edx,0x5c
0x2355: mov ebx,0x5c
0x235a: jmp 0x20f4
0x2360: mov edx,0xc
0x2365: xor r10d,r10d
0x2368: mov ebx,0x66
0x236d: jmp 0x20f4
0x2378: mov edx,0xa
0x237d: xor r10d,r10d
0x2380: mov ebx,0x6e
0x2385: jmp 0x20e2
0x2390: mov ebx,0x61
0x2395: jmp 0x2160
0x23a0: xor r10d,r10d
0x23a3: cmp dword ptr [rsp+0x8],0x2
0x23a8: setz dl
0x23ab: cmp byte ptr [rsp+0xf],0x0
0x23b0: jnz 0x2f4a
0x23b6: mov eax,r8d
0x23b9: mov rcx,r15
0x23bc: xor eax,0x1
0x23bf: and al,dl
0x23c1: jz 0x23f0
0x23c3: cmp r13,r15
0x23c6: jbe 0x23cd
0x23c8: mov byte ptr [r14+r15*0x1],0x27
0x23cd: lea rcx,[r15+0x1]
0x23d1: cmp r13,rcx
0x23d4: jbe 0x23dc
0x23d6: mov byte ptr [r14+r15*0x1+0x1],0x24
0x23dc: lea rcx,[r15+0x2]
0x23e0: cmp r13,rcx
0x23e3: ja 0x2a19
0x23e9: lea rcx,[r15+0x3]
0x23ed: mov r8d,eax
0x23f0: cmp r13,rcx
0x23f3: jbe 0x23fa
0x23f5: mov byte ptr [r14+rcx*0x1],0x5c
0x23fa: cmp dword ptr [rsp+0x8],0x2
0x23ff: lea r15,[rcx+0x1]
0x2403: jz 0x2a09
0x2409: lea rax,[rbp+0x1]
0x240d: cmp rax,r11
0x2410: jnc 0x242b
0x2412: mov rax,qword ptr [rsp+0x10]
0x2417: movzx eax,byte ptr [rax+rbp*0x1+0x1]
0x241c: mov byte ptr [rsp+0x28],al
0x2420: sub eax,0x30
0x2423: cmp al,0x9
0x2425: jbe 0x2c59
0x242b: mov eax,r12d
0x242e: mov ebx,0x30
0x2433: xor r12d,r12d
0x2436: jmp 0x1fe8
0x2440: cmp dword ptr [rsp+0x8],0x2
0x2445: mov r12d,r10d
0x2448: setz dl
0x244b: xor r10d,r10d
0x244e: xor eax,eax
0x2450: jmp 0x1fe8
0x2458: cmp dword ptr [rsp+0x8],0x2
0x245d: setz dl
0x2460: xor r10d,r10d
0x2463: jmp 0x2228
0x2470: cmp dword ptr [rsp+0x8],0x2
0x2475: setz dl
0x2478: xor r10d,r10d
0x247b: xor r12d,r12d
0x247e: jmp 0x2231
0x2488: cmp dword ptr [rsp+0x8],0x2
0x248d: mov r12d,r10d
0x2490: mov ebx,0x20
0x2495: setz dl
0x2498: xor r10d,r10d
0x249b: jmp 0x2231
0x24a0: mov edx,0xd
0x24a5: xor r10d,r10d
0x24a8: mov ebx,0x72
0x24ad: jmp 0x20e2
0x24b8: mov ebx,0x76
0x24bd: jmp 0x2160
0x24c8: mov edx,0x9
0x24cd: xor r10d,r10d
0x24d0: mov ebx,0x74
0x24d5: jmp 0x20e2
0x24e0: mov ebx,0x62
0x24e5: jmp 0x2160
0x24f0: xor r10d,r10d
0x24f3: jmp 0x1f90
0x2500: cmp byte ptr [rsp+0xf],0x0
0x2505: jnz 0x2e70
0x250b: add rbp,0x1
0x250f: mov eax,r8d
0x2512: xor r12d,r12d
0x2515: mov ebx,0x5c
0x251a: jmp 0x202c
0x2520: cmp dword ptr [rsp+0x8],0x2
0x2525: movzx ebx,byte ptr [rsp+0xf]
0x252a: mov r12d,r8d
0x252d: mov rbp,r11
0x2530: setz dl
0x2533: mov eax,ebx
0x2535: test r15,r15
0x2538: setz cl
0x253b: and eax,edx
0x253d: and al,cl
0x253f: jnz 0x2fa6
0x2545: mov eax,ebx
0x2547: xor eax,0x1
0x254a: and dl,al
0x254c: jz 0x2ebc
0x2552: cmp byte ptr [rsp+0x7c],0x0
0x2557: jz 0x2eba
0x255d: cmp byte ptr [rsp+0xe],0x0
0x2562: jnz 0x2f5d
0x2568: test r13,r13
0x256b: setz al
0x256e: cmp qword ptr [rsp+0x50],0x0
0x2574: setnz dl
0x2577: and al,dl
0x2579: jz 0x2f9c
0x257f: mov r13,qword ptr [rsp+0x50]
0x2584: lea rbx,[rip+0x244a]
0x258b: mov byte ptr [r14],0x27
0x258f: mov dword ptr [rsp+0x8],0x2
0x2597: mov r15d,0x1
0x259d: mov qword ptr [rsp+0x18],0x1
0x25a6: mov byte ptr [rsp+0xf],0x0
0x25ab: mov qword ptr [rsp+0x48],rbx
0x25b0: mov byte ptr [rsp+0x7c],al
0x25b4: jmp 0x1e93
0x25c0: cmp byte ptr [rsp+0xf],0x0
0x25c5: jnz 0x2e70
0x25cb: test r13,r13
0x25ce: jz 0x29d0
0x25d4: xor edx,edx
0x25d6: cmp qword ptr [rsp+0x50],0x0
0x25dc: jnz 0x29d0
0x25e2: mov qword ptr [rsp+0x50],r13
0x25e7: add r15,0x3
0x25eb: xor eax,eax
0x25ed: mov byte ptr [rsp+0x7c],r12b
0x25f2: xor r8d,r8d
0x25f5: mov r13,rdx
0x25f8: mov ebx,0x27
0x25fd: jmp 0x2019
0x2608: test byte ptr [rsp+0x78],0x4
0x260d: jz 0x2630
0x260f: lea rcx,[rbp+0x2]
0x2613: cmp rcx,r11
0x2616: jnc 0x2630
0x2618: mov rax,qword ptr [rsp+0x10]
0x261d: cmp byte ptr [rax+rbp*0x1+0x1],0x3f
0x2622: jz 0x2db2
0x2628: nop dword ptr [rax+rax*0x1]
0x2630: xor edx,edx
0x2632: xor r12d,r12d
0x2635: xor eax,eax
0x2637: mov ebx,0x3f
0x263c: jmp 0x1fe8
0x2648: cmp byte ptr [rsp+0xf],0x0
0x264d: jnz 0x2e70
0x2653: xor r12d,r12d
0x2656: xor eax,eax
0x2658: mov ebx,0x3f
0x265d: jmp 0x2019
0x2668: lea rax,[0xa0+rsp]
0x2670: cmp r11,-0x1
0x2674: mov qword ptr [0xa0+rsp],0x0
0x2680: mov qword ptr [rsp+0x28],rax
0x2685: jnz 0x26b4
0x2687: mov rdi,qword ptr [rsp+0x10]
0x268c: mov byte ptr [rsp+0x40],r8b
0x2691: mov byte ptr [rsp+0x38],r10b
0x2696: mov qword ptr [rsp+0x30],r9
0x269b: call 0x12f0
0x26a0: movzx r8d,byte ptr [rsp+0x40]
0x26a6: movzx r10d,byte ptr [rsp+0x38]
0x26ac: mov r11,rax
0x26af: mov r9,qword ptr [rsp+0x30]
0x26b4: lea rax,[0x9c+rsp]
0x26bc: xor ecx,ecx
0x26be: mov byte ptr [rsp+0x7e],bl
0x26c2: mov byte ptr [rsp+0x7d],r8b
0x26c7: mov rbx,rcx
0x26ca: mov qword ptr [0x88+rsp],r9
0x26d2: mov qword ptr [rsp+0x38],rax
0x26d7: mov byte ptr [rsp+0x7f],r10b
0x26dc: mov qword ptr [0x80+rsp],r15
0x26e4: mov qword ptr [rsp+0x40],r14
0x26e9: mov qword ptr [rsp+0x70],r13
0x26ee: mov qword ptr [rsp+0x30],r11
0x26f3: mov rax,qword ptr [rsp+0x10]
0x26f8: lea r14,[rbp+rbx*0x1]
0x26fd: mov rdx,qword ptr [rsp+0x30]
0x2702: mov rcx,qword ptr [rsp+0x28]
0x2707: mov rdi,qword ptr [rsp+0x38]
0x270c: lea r13,[rax+r14*0x1]
0x2710: sub rdx,r14
0x2713: mov rsi,r13
0x2716: call 0x4210
0x271b: test rax,rax
0x271e: mov r15,rax
0x2721: jz 0x2771
0x2723: cmp rax,-0x1
0x2727: jz 0x2d45
0x272d: cmp rax,-0x2
0x2731: jz 0x2cd1
0x2737: cmp dword ptr [rsp+0x8],0x2
0x273c: setz al
0x273f: and al,byte ptr [rsp+0xf]
0x2743: jnz 0x28e0
0x2749: mov edi,dword ptr [0x9c+rsp]
0x2750: call 0x14a0
0x2755: mov rdi,qword ptr [rsp+0x28]
0x275a: test eax,eax
0x275c: mov eax,0x0
0x2761: cmovz r12d,eax
0x2765: add rbx,r15
0x2768: call 0x1490
0x276d: test eax,eax
0x276f: jz 0x26f3
0x2771: mov edx,r12d
0x2774: mov rdi,rbx
0x2777: movzx r8d,byte ptr [rsp+0x7d]
0x277d: xor edx,0x1
0x2780: movzx ebx,byte ptr [rsp+0x7e]
0x2785: movzx r10d,byte ptr [rsp+0x7f]
0x278b: and dl,byte ptr [rsp+0xd]
0x278f: mov r15,qword ptr [0x80+rsp]
0x2797: mov r14,qword ptr [rsp+0x40]
0x279c: mov r13,qword ptr [rsp+0x70]
0x27a1: mov r11,qword ptr [rsp+0x30]
0x27a6: cmp rdi,0x1
0x27aa: jbe 0x2dab
0x27b0: mov rcx,rdi
0x27b3: xor esi,esi
0x27b5: movzx r9d,byte ptr [rsp+0xf]
0x27bb: add rcx,rbp
0x27be: mov rdi,qword ptr [rsp+0x10]
0x27c3: jmp 0x287e
0x27d0: cmp dword ptr [rsp+0x8],0x2
0x27d5: setz al
0x27d8: test r9b,r9b
0x27db: jnz 0x2c90
0x27e1: mov esi,r8d
0x27e4: xor esi,0x1
0x27e7: and al,sil
0x27ea: jz 0x281b
0x27ec: cmp r13,r15
0x27ef: jbe 0x27f6
0x27f1: mov byte ptr [r14+r15*0x1],0x27
0x27f6: lea rsi,[r15+0x1]
0x27fa: cmp r13,rsi
0x27fd: jbe 0x2805
0x27ff: mov byte ptr [r14+r15*0x1+0x1],0x24
0x2805: lea rsi,[r15+0x2]
0x2809: cmp r13,rsi
0x280c: jbe 0x2814
0x280e: mov byte ptr [r14+r15*0x1+0x2],0x27
0x2814: add r15,0x3
0x2818: mov r8d,eax
0x281b: cmp r13,r15
0x281e: jbe 0x2825
0x2820: mov byte ptr [r14+r15*0x1],0x5c
0x2825: lea rax,[r15+0x1]
0x2829: cmp r13,rax
0x282c: jbe 0x283b
0x282e: mov eax,ebx
0x2830: shr al,0x6
0x2833: add eax,0x30
0x2836: mov byte ptr [r14+r15*0x1+0x1],al
0x283b: lea rax,[r15+0x2]
0x283f: cmp r13,rax
0x2842: jbe 0x2854
0x2844: mov eax,ebx
0x2846: shr al,0x3
0x2849: and eax,0x7
0x284c: add eax,0x30
0x284f: mov byte ptr [r14+r15*0x1+0x2],al
0x2854: and ebx,0x7
0x2857: add rbp,0x1
0x285b: add r15,0x3
0x285f: add ebx,0x30
0x2862: cmp rbp,rcx
0x2865: jnc 0x2050
0x286b: mov esi,edx
0x286d: cmp r13,r15
0x2870: jbe 0x2876
0x2872: mov byte ptr [r14+r15*0x1],bl
0x2876: movzx ebx,byte ptr [rdi+rbp*0x1]
0x287a: add r15,0x1
0x287e: test dl,dl
0x2880: jnz 0x27d0
0x2886: mov eax,esi
0x2888: xor eax,0x1
0x288b: and eax,r8d
0x288e: test r10b,r10b
0x2891: jz 0x28a1
0x2893: cmp r13,r15
0x2896: jbe 0x289d
0x2898: mov byte ptr [r14+r15*0x1],0x5c
0x289d: add r15,0x1
0x28a1: add rbp,0x1
0x28a5: cmp rbp,rcx
0x28a8: jnc 0x202c
0x28ae: test al,al
0x28b0: jz 0x2cae
0x28b6: cmp r13,r15
0x28b9: jbe 0x28c0
0x28bb: mov byte ptr [r14+r15*0x1],0x27
0x28c0: lea rax,[r15+0x1]
0x28c4: cmp r13,rax
0x28c7: jbe 0x28cf
0x28c9: mov byte ptr [r14+r15*0x1+0x1],0x27
0x28cf: add r15,0x2
0x28d3: xor r10d,r10d
0x28d6: xor r8d,r8d
0x28d9: jmp 0x286d
0x28e0: cmp r15,0x1
0x28e4: jz 0x2749
0x28ea: mov rdi,qword ptr [rsp+0x10]
0x28ef: lea rcx,[rdi+r15*0x1]
0x28f3: lea rdx,[rdi+r14*0x1+0x1]
0x28f8: lea r8,[rcx+r14*0x1]
0x28fc: jmp 0x290d
0x2900: add rdx,0x1
0x2904: cmp r8,rdx
0x2907: jz 0x2749
0x290d: movzx ecx,byte ptr [rdx]
0x2910: sub ecx,0x5b
0x2913: cmp cl,0x21
0x2916: ja 0x2900
0x2918: mov esi,0x1
0x291d: shl rsi,cl
0x2920: mov rcx,rsi
0x2923: mov rsi,0x20000002b
0x292d: test rcx,rsi
0x2930: jz 0x2900
0x2932: mov r14,qword ptr [rsp+0x40]
0x2937: mov r13,qword ptr [rsp+0x70]
0x293c: mov rbp,qword ptr [rsp+0x30]
0x2941: mov dword ptr [rsp+0x8],0x2
0x2949: cmp byte ptr [rsp+0xd],0x0
0x294e: jz 0x2960
0x2950: test al,al
0x2952: mov eax,0x4
0x2957: cmovz eax,dword ptr [rsp+0x8]
0x295c: mov dword ptr [rsp+0x8],eax
0x2960: sub rsp,0x8
0x2964: mov rcx,rbp
0x2967: mov rsi,r13
0x296a: push qword ptr [rsp+0x68]
0x296e: push qword ptr [rsp+0x78]
0x2972: mov rdi,r14
0x2975: push 0x0
0x2977: mov r9d,dword ptr [0x98+rsp]
0x297f: mov r8d,dword ptr [rsp+0x28]
0x2984: mov rdx,qword ptr [rsp+0x30]
0x2989: and r9d,0xfffffffd
0x298d: call 0x1dc0
0x2992: add rsp,0x20
0x2996: mov r15,rax
0x2999: mov rbx,qword ptr [0xa8+rsp]
0x29a1: xor rbx,qword ptr fs:[0x28]
0x29aa: mov rax,r15
0x29ad: jnz 0x2fb3
0x29b3: add rsp,0xb8
0x29ba: pop rbx
0x29bb: pop rbp
0x29bc: pop r12
0x29be: pop r13
0x29c0: pop r14
0x29c2: pop r15
0x29c4: ret 
0x29c8: mov rbp,r11
0x29cb: jmp 0x2949
0x29d0: cmp r13,r15
0x29d3: jbe 0x29da
0x29d5: mov byte ptr [r14+r15*0x1],0x27
0x29da: lea rax,[r15+0x1]
0x29de: cmp r13,rax
0x29e1: jbe 0x29e9
0x29e3: mov byte ptr [r14+r15*0x1+0x1],0x5c
0x29e9: lea rax,[r15+0x2]
0x29ed: cmp r13,rax
0x29f0: jbe 0x2fe2
0x29f6: mov rdx,r13
0x29f9: mov byte ptr [r14+r15*0x1+0x2],0x27
0x29ff: mov r13,qword ptr [rsp+0x50]
0x2a04: jmp 0x25e2
0x2a09: mov eax,r12d
0x2a0c: mov ebx,0x30
0x2a11: xor r12d,r12d
0x2a14: jmp 0x2019
0x2a19: mov byte ptr [r14+r15*0x1+0x2],0x27
0x2a1f: jmp 0x23e9
0x2a24: test ebx,ebx
0x2a26: jnz 0x1e53
0x2a2c: mov byte ptr [rsp+0xd],0x1
0x2a31: test r13,r13
0x2a34: jnz 0x2fca
0x2a3a: lea rax,[rip+0x1f94]
0x2a41: mov qword ptr [rsp+0x50],0x0
0x2a4a: mov byte ptr [rsp+0xe],0x1
0x2a4f: mov byte ptr [rsp+0x7c],0x0
0x2a54: xor r12d,r12d
0x2a57: mov byte ptr [rsp+0xf],0x0
0x2a5c: mov qword ptr [rsp+0x18],0x1
0x2a65: mov qword ptr [rsp+0x48],rax
0x2a6a: mov r15d,0x1
0x2a70: mov dword ptr [rsp+0x8],0x2
0x2a78: jmp 0x1e93
0x2a80: test ebx,ebx
0x2a82: jnz 0x2e7d
0x2a88: test r13,r13
0x2a8b: jz 0x2cb6
0x2a91: mov byte ptr [r14],0x22
0x2a95: mov byte ptr [rsp+0xe],0x1
0x2a9a: xor r12d,r12d
0x2a9d: mov byte ptr [rsp+0x7c],0x0
0x2aa2: mov qword ptr [rsp+0x50],0x0
0x2aab: lea rax,[rip+0x1f21]
0x2ab2: mov byte ptr [rsp+0xf],0x0
0x2ab7: mov byte ptr [rsp+0xd],0x1
0x2abc: mov qword ptr [rsp+0x18],0x1
0x2ac5: mov r15d,0x1
0x2acb: mov qword ptr [rsp+0x48],rax
0x2ad0: jmp 0x1e93
0x2ad5: lea rax,[rip+0x1ef7]
0x2adc: mov byte ptr [rsp+0xe],0x1
0x2ae1: mov byte ptr [rsp+0x7c],0x0
0x2ae6: xor r12d,r12d
0x2ae9: mov qword ptr [rsp+0x50],0x0
0x2af2: mov byte ptr [rsp+0xf],0x1
0x2af7: mov byte ptr [rsp+0xd],0x1
0x2afc: mov qword ptr [rsp+0x18],0x1
0x2b05: xor r15d,r15d
0x2b08: mov qword ptr [rsp+0x48],rax
0x2b0d: mov dword ptr [rsp+0x8],0x5
0x2b15: jmp 0x1e93
0x2b1a: mov byte ptr [rsp+0xe],0x1
0x2b1f: mov byte ptr [rsp+0x7c],0x0
0x2b24: xor r12d,r12d
0x2b27: mov qword ptr [rsp+0x50],0x0
0x2b30: mov byte ptr [rsp+0xf],0x0
0x2b35: xor r15d,r15d
0x2b38: mov byte ptr [rsp+0xd],0x1
0x2b3d: mov qword ptr [rsp+0x18],0x0
0x2b46: mov qword ptr [rsp+0x48],0x0
0x2b4f: jmp 0x1e93
0x2b54: cmp dword ptr [rsp+0x8],0xa
0x2b59: jz 0x2bb1
0x2b5b: lea rsi,[rip+0x1e75]
0x2b62: xor edi,edi
0x2b64: mov edx,0x5
0x2b69: call 0x12d0
0x2b6e: mov rcx,rax
0x2b71: mov qword ptr [rsp+0x68],rax
0x2b76: lea rax,[rip+0x1e5a]
0x2b7d: cmp rcx,rax
0x2b80: jz 0x2f1e
0x2b86: lea rsi,[rip+0x1e48]
0x2b8d: xor edi,edi
0x2b8f: mov edx,0x5
0x2b94: call 0x12d0
0x2b99: mov rcx,rax
0x2b9c: mov qword ptr [rsp+0x60],rax
0x2ba1: lea rax,[rip+0x1e2d]
0x2ba8: cmp rcx,rax
0x2bab: jz 0x2f34
0x2bb1: xor r15d,r15d
0x2bb4: test ebx,ebx
0x2bb6: jz 0x2d7d
0x2bbc: test ebx,ebx
0x2bbe: mov rbx,qword ptr [rsp+0x60]
0x2bc3: setnz byte ptr [rsp+0xf]
0x2bc8: xor r12d,r12d
0x2bcb: mov rdi,rbx
0x2bce: call 0x12f0
0x2bd3: mov qword ptr [rsp+0x48],rbx
0x2bd8: mov qword ptr [rsp+0x18],rax
0x2bdd: mov byte ptr [rsp+0xe],0x1
0x2be2: mov byte ptr [rsp+0x7c],0x0
0x2be7: mov qword ptr [rsp+0x50],0x0
0x2bf0: mov byte ptr [rsp+0xd],0x1
0x2bf5: jmp 0x1e93
0x2bfa: mov byte ptr [rsp+0xe],0x1
0x2bff: mov byte ptr [rsp+0x7c],0x0
0x2c04: xor r12d,r12d
0x2c07: mov qword ptr [rsp+0x50],0x0
0x2c10: mov byte ptr [rsp+0xf],0x0
0x2c15: xor r15d,r15d
0x2c18: mov byte ptr [rsp+0xd],0x0
0x2c1d: mov qword ptr [rsp+0x18],0x0
0x2c26: mov qword ptr [rsp+0x48],0x0
0x2c2f: jmp 0x1e93
0x2c34: mov byte ptr [rsp+0xe],0x1
0x2c39: mov byte ptr [rsp+0x7c],0x0
0x2c3e: xor r12d,r12d
0x2c41: mov qword ptr [rsp+0x50],0x0
0x2c4a: mov byte ptr [rsp+0xf],0x1
0x2c4f: mov byte ptr [rsp+0xd],0x1
0x2c54: jmp 0x1e73
0x2c59: cmp r13,r15
0x2c5c: jbe 0x2c63
0x2c5e: mov byte ptr [r14+r15*0x1],0x30
0x2c63: lea rax,[rcx+0x2]
0x2c67: cmp r13,rax
0x2c6a: jbe 0x2c72
0x2c6c: mov byte ptr [r14+rcx*0x1+0x2],0x30
0x2c72: mov eax,r12d
0x2c75: lea r15,[rcx+0x3]
0x2c79: xor r12d,r12d
0x2c7c: mov ebx,0x30
0x2c81: jmp 0x1fe8
0x2c90: movzx ebx,byte ptr [rsp+0xf]
0x2c95: mov rbp,r11
0x2c98: mov byte ptr [rsp+0xd],bl
0x2c9c: jmp 0x2949
0x2ca1: movzx edx,byte ptr [rsp+0xd]
0x2ca6: xor r12d,r12d
0x2ca9: jmp 0x27b0
0x2cae: xor r10d,r10d
0x2cb1: jmp 0x286d
0x2cb6: mov qword ptr [rsp+0x50],0x0
0x2cbf: mov byte ptr [rsp+0xe],0x1
0x2cc4: xor r12d,r12d
0x2cc7: mov byte ptr [rsp+0x7c],0x0
0x2ccc: jmp 0x2aab
0x2cd1: mov r11,qword ptr [rsp+0x30]
0x2cd6: mov rsi,r14
0x2cd9: mov rcx,r13
0x2cdc: mov rax,rbx
0x2cdf: mov rdi,rbx
0x2ce2: movzx r8d,byte ptr [rsp+0x7d]
0x2ce8: movzx ebx,byte ptr [rsp+0x7e]
0x2ced: mov r9,qword ptr [0x88+rsp]
0x2cf5: cmp rsi,r11
0x2cf8: movzx r10d,byte ptr [rsp+0x7f]
0x2cfe: mov r15,qword ptr [0x80+rsp]
0x2d06: mov r14,qword ptr [rsp+0x40]
0x2d0b: mov r13,qword ptr [rsp+0x70]
0x2d10: jnc 0x2d38
0x2d12: cmp byte ptr [rcx],0x0
0x2d15: jnz 0x2d27
0x2d17: jmp 0x2d38
0x2d20: cmp byte ptr [r9+rax*0x1],0x0
0x2d25: jz 0x2d35
0x2d27: add rax,0x1
0x2d2b: lea rdx,[rbp+rax*0x1]
0x2d30: cmp r11,rdx
0x2d33: ja 0x2d20
0x2d35: mov rdi,rax
0x2d38: movzx edx,byte ptr [rsp+0xd]
0x2d3d: xor r12d,r12d
0x2d40: jmp 0x27a6
0x2d45: mov rdi,rbx
0x2d48: movzx r8d,byte ptr [rsp+0x7d]
0x2d4e: movzx ebx,byte ptr [rsp+0x7e]
0x2d53: movzx r10d,byte ptr [rsp+0x7f]
0x2d59: mov r15,qword ptr [0x80+rsp]
0x2d61: xor r12d,r12d
0x2d64: mov r14,qword ptr [rsp+0x40]
0x2d69: mov r13,qword ptr [rsp+0x70]
0x2d6e: mov r11,qword ptr [rsp+0x30]
0x2d73: movzx edx,byte ptr [rsp+0xd]
0x2d78: jmp 0x27a6
0x2d7d: mov rdx,qword ptr [rsp+0x68]
0x2d82: movzx eax,byte ptr [rdx]
0x2d85: test al,al
0x2d87: jz 0x2bbc
0x2d8d: nop dword ptr [rax]
0x2d90: cmp r13,r15
0x2d93: jbe 0x2d99
0x2d95: mov byte ptr [r14+r15*0x1],al
0x2d99: add r15,0x1
0x2d9d: movzx eax,byte ptr [rdx+r15*0x1]
0x2da2: test al,al
0x2da4: jnz 0x2d90
0x2da6: jmp 0x2bbc
0x2dab: mov eax,edx
0x2dad: jmp 0x2307
0x2db2: movzx ebx,byte ptr [rax+rcx*0x1]
0x2db6: cmp bl,0x3e
0x2db9: ja 0x2630
0x2dbf: mov rax,0x7000a38200000000
0x2dc9: bt rax,rbx
0x2dcd: jnc 0x2630
0x2dd3: cmp byte ptr [rsp+0xf],0x0
0x2dd8: jnz 0x2fc2
0x2dde: cmp r13,r15
0x2de1: jbe 0x2de8
0x2de3: mov byte ptr [r14+r15*0x1],0x3f
0x2de8: lea rax,[r15+0x1]
0x2dec: cmp r13,rax
0x2def: jbe 0x2df7
0x2df1: mov byte ptr [r14+r15*0x1+0x1],0x22
0x2df7: lea rax,[r15+0x2]
0x2dfb: cmp r13,rax
0x2dfe: jbe 0x2e06
0x2e00: mov byte ptr [r14+r15*0x1+0x2],0x22
0x2e06: lea rax,[r15+0x3]
0x2e0a: cmp r13,rax
0x2e0d: jbe 0x2e15
0x2e0f: mov byte ptr [r14+r15*0x1+0x3],0x3f
0x2e15: add r15,0x4
0x2e19: xor edx,edx
0x2e1b: xor r12d,r12d
0x2e1e: xor eax,eax
0x2e20: mov rbp,rcx
0x2e23: jmp 0x1fe8
0x2e28: test ebx,ebx
0x2e2a: jz 0x2fb8
0x2e30: lea rax,[rip+0x1b9e]
0x2e37: mov byte ptr [rsp+0xe],0x1
0x2e3c: mov byte ptr [rsp+0x7c],0x0
0x2e41: xor r12d,r12d
0x2e44: mov qword ptr [rsp+0x50],0x0
0x2e4d: mov byte ptr [rsp+0xf],0x1
0x2e52: mov byte ptr [rsp+0xd],0x0
0x2e57: mov qword ptr [rsp+0x18],0x1
0x2e60: xor r15d,r15d
0x2e63: mov qword ptr [rsp+0x48],rax
0x2e68: jmp 0x1e93
0x2e70: mov rbp,r11
0x2e73: movzx eax,byte ptr [rsp+0xf]
0x2e78: jmp 0x2949
0x2e7d: lea rax,[rip+0x1b4f]
0x2e84: mov byte ptr [rsp+0xe],0x1
0x2e89: mov byte ptr [rsp+0x7c],0x0
0x2e8e: xor r12d,r12d
0x2e91: mov qword ptr [rsp+0x50],0x0
0x2e9a: mov byte ptr [rsp+0xf],0x1
0x2e9f: mov byte ptr [rsp+0xd],0x1
0x2ea4: mov qword ptr [rsp+0x18],0x1
0x2ead: xor r15d,r15d
0x2eb0: mov qword ptr [rsp+0x48],rax
0x2eb5: jmp 0x1e93
0x2eba: mov eax,edx
0x2ebc: mov rbx,qword ptr [rsp+0x48]
0x2ec1: test rbx,rbx
0x2ec4: jz 0x2ef2
0x2ec6: test al,al
0x2ec8: jz 0x2ef2
0x2eca: movzx ecx,byte ptr [rbx]
0x2ecd: mov rax,rbx
0x2ed0: test cl,cl
0x2ed2: jz 0x2ef2
0x2ed4: mov rdx,r15
0x2ed7: sub rax,r15
0x2eda: cmp r13,rdx
0x2edd: jbe 0x2ee3
0x2edf: mov byte ptr [r14+rdx*0x1],cl
0x2ee3: add rdx,0x1
0x2ee7: movzx ecx,byte ptr [rax+rdx*0x1]
0x2eeb: test cl,cl
0x2eed: jnz 0x2eda
0x2eef: mov r15,rdx
0x2ef2: cmp r13,r15
0x2ef5: jbe 0x2999
0x2efb: mov byte ptr [r14+r15*0x1],0x0
0x2f00: jmp 0x2999
0x2f05: cmp dword ptr [rsp+0x8],0x2
0x2f0a: movzx ebx,byte ptr [rsp+0xf]
0x2f0f: mov rbp,r11
0x2f12: setz al
0x2f15: mov byte ptr [rsp+0xd],bl
0x2f19: jmp 0x2949
0x2f1e: mov esi,dword ptr [rsp+0x8]
0x2f22: mov rdi,rcx
0x2f25: call 0x1cd0
0x2f2a: mov qword ptr [rsp+0x68],rax
0x2f2f: jmp 0x2b86
0x2f34: mov esi,dword ptr [rsp+0x8]
0x2f38: mov rdi,rcx
0x2f3b: call 0x1cd0
0x2f40: mov qword ptr [rsp+0x60],rax
0x2f45: jmp 0x2bb1
0x2f4a: movzx ebx,byte ptr [rsp+0xf]
0x2f4f: mov rbp,r11
0x2f52: mov eax,edx
0x2f54: mov byte ptr [rsp+0xd],bl
0x2f58: jmp 0x2949
0x2f5d: sub rsp,0x8
0x2f61: mov r8d,0x5
0x2f67: mov rcx,r11
0x2f6a: push qword ptr [rsp+0x68]
0x2f6e: push qword ptr [rsp+0x78]
0x2f72: mov rdi,r14
0x2f75: push qword ptr [rsp+0x38]
0x2f79: mov r9d,dword ptr [0x98+rsp]
0x2f81: mov rdx,qword ptr [rsp+0x30]
0x2f86: mov rsi,qword ptr [rsp+0x70]
0x2f8b: call 0x1dc0
0x2f90: add rsp,0x20
0x2f94: mov r15,rax
0x2f97: jmp 0x2999
0x2f9c: movzx eax,byte ptr [rsp+0x7c]
0x2fa1: jmp 0x2ebc
0x2fa6: mov dword ptr [rsp+0x8],0x2
0x2fae: jmp 0x2949
0x2fb3: call 0x1300
0x2fb8: mov byte ptr [rsp+0xd],0x0
0x2fbd: jmp 0x2a31
0x2fc2: mov rbp,r11
0x2fc5: jmp 0x2960
0x2fca: mov byte ptr [rsp+0xe],0x1
0x2fcf: xor eax,eax
0x2fd1: xor r12d,r12d
0x2fd4: mov qword ptr [rsp+0x50],0x0
0x2fdd: jmp 0x2584
0x2fe2: mov rdx,r13
0x2fe5: mov r13,qword ptr [rsp+0x50]
0x2fea: jmp 0x25e2
0x2fef: call 0x1250
0x2ff4: nop 
0x2ff6: nop word ptr cs:[rax+rax*0x1]
0x3000: push r15
0x3002: push r14
0x3004: movsxd r15,edi
0x3007: push r13
0x3009: push r12
0x300b: mov r14,rdx
0x300e: push rbp
0x300f: push rbx
0x3010: mov rbp,rcx
0x3013: sub rsp,0x28
0x3017: mov qword ptr [rsp+0x8],rsi
0x301c: call 0x1260
0x3021: mov r13,rax
0x3024: mov eax,dword ptr [rax]
0x3026: test r15d,r15d
0x3029: mov rbx,qword ptr [rip+0x204030]
0x3030: mov dword ptr [rsp+0x18],eax
0x3034: js 0x31a1
0x303a: cmp dword ptr [rip+0x204017],r15d
0x3041: jg 0x30a5
0x3043: cmp r15d,0x7fffffff
0x304a: jz 0x31a6
0x3050: lea r12d,[r15+0x1]
0x3054: lea rax,[rip+0x204015]
0x305b: movsxd rsi,r12d
0x305e: shl rsi,0x4
0x3062: cmp rbx,rax
0x3065: jz 0x3180
0x306b: mov rdi,rbx
0x306e: call 0x3fe0
0x3073: mov rbx,rax
0x3076: mov qword ptr [rip+0x203fe3],rax
0x307d: movsxd rdi,dword ptr [rip+0x203fd4]
0x3084: mov edx,r12d
0x3087: xor esi,esi
0x3089: sub edx,edi
0x308b: shl rdi,0x4
0x308f: movsxd rdx,edx
0x3092: add rdi,rbx
0x3095: shl rdx,0x4
0x3099: call 0x1360
0x309e: mov dword ptr [rip+0x203fb3],r12d
0x30a5: mov eax,dword ptr [rbp+0x4]
0x30a8: shl r15,0x4
0x30ac: sub rsp,0x8
0x30b0: add rbx,r15
0x30b3: lea r15,[rbp+0x8]
0x30b7: mov r8d,dword ptr [rbp]
0x30bb: mov r11,qword ptr [rbx]
0x30be: mov r12,qword ptr [rbx+0x8]
0x30c2: mov rcx,r14
0x30c5: or eax,0x1
0x30c8: mov dword ptr [rsp+0x24],eax
0x30cc: push qword ptr [rbp+0x30]
0x30cf: mov r9d,eax
0x30d2: push qword ptr [rbp+0x28]
0x30d5: push r15
0x30d7: mov rsi,r11
0x30da: mov rdx,qword ptr [rsp+0x28]
0x30df: mov rdi,r12
0x30e2: mov qword ptr [rsp+0x30],r11
0x30e7: call 0x1dc0
0x30ec: add rsp,0x20
0x30f0: mov r11,qword ptr [rsp+0x10]
0x30f5: cmp r11,rax
0x30f8: ja 0x3161
0x30fa: lea rsi,[rax+0x1]
0x30fe: lea rax,[rip+0x203ffb]
0x3105: cmp r12,rax
0x3108: mov qword ptr [rbx],rsi
0x310b: jz 0x311f
0x310d: mov rdi,r12
0x3110: mov qword ptr [rsp+0x10],rsi
0x3115: call 0x1240
0x311a: mov rsi,qword ptr [rsp+0x10]
0x311f: mov rdi,rsi
0x3122: mov qword ptr [rsp+0x10],rsi
0x3127: call 0x3f80
0x312c: sub rsp,0x8
0x3130: mov qword ptr [rbx+0x8],rax
0x3134: mov r8d,dword ptr [rbp]
0x3138: push qword ptr [rbp+0x30]
0x313b: push qword ptr [rbp+0x28]
0x313e: mov rcx,r14
0x3141: push r15
0x3143: mov r9d,dword ptr [rsp+0x3c]
0x3148: mov rdi,rax
0x314b: mov rdx,qword ptr [rsp+0x28]
0x3150: mov rsi,qword ptr [rsp+0x30]
0x3155: mov r12,rax
0x3158: call 0x1dc0
0x315d: add rsp,0x20
0x3161: mov eax,dword ptr [rsp+0x18]
0x3165: mov dword ptr [r13],eax
0x3169: add rsp,0x28
0x316d: mov rax,r12
0x3170: pop rbx
0x3171: pop rbp
0x3172: pop r12
0x3174: pop r13
0x3176: pop r14
0x3178: pop r15
0x317a: ret 
0x3180: xor edi,edi
0x3182: call 0x3fe0
0x3187: movdqa xmm0,xmmword ptr [rip+0x203ee1]
0x318f: mov rbx,rax
0x3192: mov qword ptr [rip+0x203ec7],rax
0x3199: movups xmmword ptr [rax],xmm0
0x319c: jmp 0x307d
0x31a1: call 0x1250
0x31a6: call 0x41d0
0x31ab: nop dword ptr [rax+rax*0x1]
0x31b0: push r12
0x31b2: push rbp
0x31b3: push rbx
0x31b4: mov rbx,rdi
0x31b7: call 0x1260
0x31bc: mov r12d,dword ptr [rax]
0x31bf: mov rbp,rax
0x31c2: lea rax,[rip+0x204037]
0x31c9: test rbx,rbx
0x31cc: mov esi,0x38
0x31d1: cmovz rbx,rax
0x31d5: mov rdi,rbx
0x31d8: call 0x4180
0x31dd: mov dword ptr [rbp],r12d
0x31e1: pop rbx
0x31e2: pop rbp
0x31e3: pop r12
0x31e5: ret 
0x31f0: lea rax,[rip+0x204009]
0x31f7: test rdi,rdi
0x31fa: cmovz rdi,rax
0x31fe: mov eax,dword ptr [rdi]
0x3200: ret 
0x3210: lea rax,[rip+0x203fe9]
0x3217: test rdi,rdi
0x321a: cmovz rdi,rax
0x321e: mov dword ptr [rdi],esi
0x3220: ret 
0x3230: lea rax,[rip+0x203fc9]
0x3237: test rdi,rdi
0x323a: mov ecx,esi
0x323c: cmovz rdi,rax
0x3240: mov eax,esi
0x3242: and ecx,0x1f
0x3245: shr al,0x5
0x3248: movzx eax,al
0x324b: lea rdi,[rdi+rax*0x4+0x8]
0x3250: mov esi,dword ptr [rdi]
0x3252: mov eax,esi
0x3254: shr eax,cl
0x3256: xor edx,eax
0x3258: and eax,0x1
0x325b: and edx,0x1
0x325e: shl edx,cl
0x3260: xor edx,esi
0x3262: mov dword ptr [rdi],edx
0x3264: ret 
0x3270: lea rax,[rip+0x203f89]
0x3277: test rdi,rdi
0x327a: cmovz rdi,rax
0x327e: mov eax,dword ptr [rdi+0x4]
0x3281: mov dword ptr [rdi+0x4],esi
0x3284: ret 
0x3290: lea rax,[rip+0x203f69]
0x3297: test rdi,rdi
0x329a: cmovz rdi,rax
0x329e: test rsi,rsi
0x32a1: mov dword ptr [rdi],0xa
0x32a7: jz 0x32b7
0x32a9: test rdx,rdx
0x32ac: jz 0x32b7
0x32ae: mov qword ptr [rdi+0x28],rsi
0x32b2: mov qword ptr [rdi+0x30],rdx
0x32b6: ret 
0x32b7: sub rsp,0x8
0x32bb: call 0x1250
0x32c0: push r15
0x32c2: push r14
0x32c4: lea rax,[rip+0x203f35]
0x32cb: push r13
0x32cd: push r12
0x32cf: mov r13,rdi
0x32d2: push rbp
0x32d3: push rbx
0x32d4: mov rbx,r8
0x32d7: mov r14,rsi
0x32da: mov r15,rdx
0x32dd: sub rsp,0x18
0x32e1: test r8,r8
0x32e4: cmovz rbx,rax
0x32e8: mov qword ptr [rsp+0x8],rcx
0x32ed: call 0x1260
0x32f2: mov r12d,dword ptr [rax]
0x32f5: mov rbp,rax
0x32f8: lea rax,[rbx+0x8]
0x32fc: sub rsp,0x8
0x3300: mov r9d,dword ptr [rbx+0x4]
0x3304: push qword ptr [rbx+0x30]
0x3307: mov r8d,dword ptr [rbx]
0x330a: push qword ptr [rbx+0x28]
0x330d: mov rdx,r15
0x3310: push rax
0x3311: mov rcx,qword ptr [rsp+0x28]
0x3316: mov rsi,r14
0x3319: mov rdi,r13
0x331c: call 0x1dc0
0x3321: mov dword ptr [rbp],r12d
0x3325: add rsp,0x38
0x3329: pop rbx
0x332a: pop rbp
0x332b: pop r12
0x332d: pop r13
0x332f: pop r14
0x3331: pop r15
0x3333: ret 
0x3340: push r15
0x3342: push r14
0x3344: lea rax,[rip+0x203eb5]
0x334b: push r13
0x334d: push r12
0x334f: mov r12,rdx
0x3352: push rbp
0x3353: push rbx
0x3354: mov rbx,rcx
0x3357: mov r14,rdi
0x335a: mov r15,rsi
0x335d: sub rsp,0x38
0x3361: test rcx,rcx
0x3364: cmovz rbx,rax
0x3368: xor ebp,ebp
0x336a: call 0x1260
0x336f: test r12,r12
0x3372: mov r13,rax
0x3375: mov eax,dword ptr [rax]
0x3377: setz bpl
0x337b: or ebp,dword ptr [rbx+0x4]
0x337e: lea r10,[rbx+0x8]
0x3382: sub rsp,0x8
0x3386: mov r8d,dword ptr [rbx]
0x3389: mov rcx,r15
0x338c: mov dword ptr [rsp+0x14],eax
0x3390: push qword ptr [rbx+0x30]
0x3393: mov rdx,r14
0x3396: push qword ptr [rbx+0x28]
0x3399: push r10
0x339b: xor esi,esi
0x339d: mov r9d,ebp
0x33a0: xor edi,edi
0x33a2: mov qword ptr [rsp+0x40],r10
0x33a7: call 0x1dc0
0x33ac: lea rsi,[rax+0x1]
0x33b0: mov qword ptr [rsp+0x48],rax
0x33b5: add rsp,0x20
0x33b9: mov rdi,rsi
0x33bc: mov qword ptr [rsp+0x18],rsi
0x33c1: call 0x3f80
0x33c6: mov qword ptr [rsp+0x10],rax
0x33cb: sub rsp,0x8
0x33cf: push qword ptr [rbx+0x30]
0x33d2: push qword ptr [rbx+0x28]
0x33d5: mov r10,qword ptr [rsp+0x38]
0x33da: mov r9d,ebp
0x33dd: mov r8d,dword ptr [rbx]
0x33e0: mov rcx,r15
0x33e3: mov rdx,r14
0x33e6: mov rdi,rax
0x33e9: push r10
0x33eb: mov rsi,qword ptr [rsp+0x38]
0x33f0: call 0x1dc0
0x33f5: mov eax,dword ptr [rsp+0x2c]
0x33f9: add rsp,0x20
0x33fd: test r12,r12
0x3400: mov dword ptr [r13],eax
0x3404: jz 0x340f
0x3406: mov r11,qword ptr [rsp+0x28]
0x340b: mov qword ptr [r12],r11
0x340f: mov rax,qword ptr [rsp+0x10]
0x3414: add rsp,0x38
0x3418: pop rbx
0x3419: pop rbp
0x341a: pop r12
0x341c: pop r13
0x341e: pop r14
0x3420: pop r15
0x3422: ret 
0x3430: mov rcx,rdx
0x3433: xor edx,edx
0x3435: jmp 0x3340
0x3440: mov eax,dword ptr [rip+0x203c12]
0x3446: push r12
0x3448: mov r12,qword ptr [rip+0x203c11]
0x344f: push rbp
0x3450: push rbx
0x3451: cmp eax,0x1
0x3454: jle 0x3481
0x3456: sub eax,0x2
0x3459: lea rbx,[r12+0x18]
0x345e: shl rax,0x4
0x3462: lea rbp,[r12+rax*0x1+0x28]
0x3467: nop word ptr [rax+rax*0x1]
0x3470: mov rdi,qword ptr [rbx]
0x3473: add rbx,0x10
0x3477: call 0x1240
0x347c: cmp rbx,rbp
0x347f: jnz 0x3470
0x3481: mov rdi,qword ptr [r12+0x8]
0x3486: lea rbx,[rip+0x203c73]
0x348d: cmp rdi,rbx
0x3490: jz 0x34a9
0x3492: call 0x1240
0x3497: mov qword ptr [rip+0x203bce],0x100
0x34a2: mov qword ptr [rip+0x203bcf],rbx
0x34a9: lea rbx,[rip+0x203bc0]
0x34b0: cmp r12,rbx
0x34b3: jz 0x34c4
0x34b5: mov rdi,r12
0x34b8: call 0x1240
0x34bd: mov qword ptr [rip+0x203b9c],rbx
0x34c4: pop rbx
0x34c5: mov dword ptr [rip+0x203b89],0x1
0x34cf: pop rbp
0x34d0: pop r12
0x34d2: ret 
0x34e0: lea rcx,[rip+0x203d19]
0x34e7: mov rdx,-0x1
0x34ee: jmp 0x3000
0x3500: lea rcx,[rip+0x203cf9]
0x3507: jmp 0x3000
0x3510: lea rcx,[rip+0x203ce9]
0x3517: mov rsi,rdi
0x351a: mov rdx,-0x1
0x3521: xor edi,edi
0x3523: jmp 0x3000
0x3530: lea rcx,[rip+0x203cc9]
0x3537: mov rdx,rsi
0x353a: mov rsi,rdi
0x353d: xor edi,edi
0x353f: jmp 0x3000
0x3550: sub rsp,0x48
0x3554: mov rax,rdx
0x3557: mov rdx,qword ptr fs:[0x28]
0x3560: mov qword ptr [rsp+0x38],rdx
0x3565: xor edx,edx
0x3567: cmp esi,0xa
0x356a: jz 0x35d4
0x356c: mov dword ptr [rsp],esi
0x356f: mov rcx,rsp
0x3572: mov rdx,-0x1
0x3579: mov rsi,rax
0x357c: mov qword ptr [rsp+0x4],0x0
0x3585: mov qword ptr [rsp+0xc],0x0
0x358e: mov qword ptr [rsp+0x14],0x0
0x3597: mov qword ptr [rsp+0x1c],0x0
0x35a0: mov qword ptr [rsp+0x24],0x0
0x35a9: mov qword ptr [rsp+0x2c],0x0
0x35b2: mov dword ptr [rsp+0x34],0x0
0x35ba: call 0x3000
0x35bf: mov rcx,qword ptr [rsp+0x38]
0x35c4: xor rcx,qword ptr fs:[0x28]
0x35cd: jnz 0x35d9
0x35cf: add rsp,0x48
0x35d3: ret 
0x35d4: call 0x1250
0x35d9: call 0x1300
0x35de: nop 
0x35e0: sub rsp,0x48
0x35e4: mov rax,rdx
0x35e7: mov rdx,rcx
0x35ea: mov rcx,qword ptr fs:[0x28]
0x35f3: mov qword ptr [rsp+0x38],rcx
0x35f8: xor ecx,ecx
0x35fa: cmp esi,0xa
0x35fd: jz 0x3660
0x35ff: mov dword ptr [rsp],esi
0x3602: mov rcx,rsp
0x3605: mov rsi,rax
0x3608: mov qword ptr [rsp+0x4],0x0
0x3611: mov qword ptr [rsp+0xc],0x0
0x361a: mov qword ptr [rsp+0x14],0x0
0x3623: mov qword ptr [rsp+0x1c],0x0
0x362c: mov qword ptr [rsp+0x24],0x0
0x3635: mov qword ptr [rsp+0x2c],0x0
0x363e: mov dword ptr [rsp+0x34],0x0
0x3646: call 0x3000
0x364b: mov rdx,qword ptr [rsp+0x38]
0x3650: xor rdx,qword ptr fs:[0x28]
0x3659: jnz 0x3665
0x365b: add rsp,0x48
0x365f: ret 
0x3660: call 0x1250
0x3665: call 0x1300
0x366a: nop word ptr [rax+rax*0x1]
0x3670: mov rdx,rsi
0x3673: mov esi,edi
0x3675: xor edi,edi
0x3677: jmp 0x3550
0x3680: mov rcx,rdx
0x3683: mov rdx,rsi
0x3686: mov esi,edi
0x3688: xor edi,edi
0x368a: jmp 0x35e0
0x3690: sub rsp,0x48
0x3694: mov ecx,edx
0x3696: mov rax,qword ptr fs:[0x28]
0x369f: mov qword ptr [rsp+0x38],rax
0x36a4: xor eax,eax
0x36a6: mov rax,qword ptr [rip+0x203b83]
0x36ad: mov r8,rsp
0x36b0: and ecx,0x1f
0x36b3: movdqa xmm0,xmmword ptr [rip+0x203b45]
0x36bb: mov qword ptr [rsp+0x30],rax
0x36c0: mov eax,edx
0x36c2: movaps xmmword ptr [rsp],xmm0
0x36c6: shr al,0x5
0x36c9: movzx eax,al
0x36cc: lea r9,[r8+rax*0x4+0x8]
0x36d1: movdqa xmm0,xmmword ptr [rip+0x203b37]
0x36d9: movaps xmmword ptr [rsp+0x10],xmm0
0x36de: movdqa xmm0,xmmword ptr [rip+0x203b3a]
0x36e6: movaps xmmword ptr [rsp+0x20],xmm0
0x36eb: mov edx,dword ptr [r9]
0x36ee: mov eax,edx
0x36f0: shr eax,cl
0x36f2: not eax
0x36f4: and eax,0x1
0x36f7: shl eax,cl
0x36f9: mov rcx,r8
0x36fc: xor eax,edx
0x36fe: mov rdx,rsi
0x3701: mov rsi,rdi
0x3704: mov dword ptr [r9],eax
0x3707: xor edi,edi
0x3709: call 0x3000
0x370e: mov rsi,qword ptr [rsp+0x38]
0x3713: xor rsi,qword ptr fs:[0x28]
0x371c: jnz 0x3723
0x371e: add rsp,0x48
0x3722: ret 
0x3723: call 0x1300
0x3728: nop dword ptr [rax+rax*0x1]
0x3730: movsx edx,sil
0x3734: mov rsi,-0x1
0x373b: jmp 0x3690
0x3740: mov edx,0x3a
0x3745: mov rsi,-0x1
0x374c: jmp 0x3690
0x3760: mov edx,0x3a
0x3765: jmp 0x3690
0x3770: sub rsp,0x48
0x3774: mov rax,rdx
0x3777: mov rdx,qword ptr fs:[0x28]
0x3780: mov qword ptr [rsp+0x38],rdx
0x3785: xor edx,edx
0x3787: cmp esi,0xa
0x378a: jz 0x37f4
0x378c: mov dword ptr [rsp],esi
0x378f: mov rcx,rsp
0x3792: mov rdx,-0x1
0x3799: mov rsi,rax
0x379c: mov qword ptr [rsp+0x4],0x0
0x37a5: mov qword ptr [rsp+0xc],0x4000000
0x37ae: mov qword ptr [rsp+0x14],0x0
0x37b7: mov qword ptr [rsp+0x1c],0x0
0x37c0: mov qword ptr [rsp+0x24],0x0
0x37c9: mov qword ptr [rsp+0x2c],0x0
0x37d2: mov dword ptr [rsp+0x34],0x0
0x37da: call 0x3000
0x37df: mov rcx,qword ptr [rsp+0x38]
0x37e4: xor rcx,qword ptr fs:[0x28]
0x37ed: jnz 0x37f9
0x37ef: add rsp,0x48
0x37f3: ret 
0x37f4: call 0x1250
0x37f9: call 0x1300
0x37fe: nop 
0x3800: sub rsp,0x48
0x3804: mov r9,rcx
0x3807: mov rcx,qword ptr [rip+0x203a22]
0x380e: movdqa xmm0,xmmword ptr [rip+0x2039ea]
0x3816: mov rax,qword ptr fs:[0x28]
0x381f: mov qword ptr [rsp+0x38],rax
0x3824: xor eax,eax
0x3826: movaps xmmword ptr [rsp],xmm0
0x382a: test rsi,rsi
0x382d: mov qword ptr [rsp+0x30],rcx
0x3832: mov dword ptr [rsp],0xa
0x3839: movdqa xmm0,xmmword ptr [rip+0x2039cf]
0x3841: movaps xmmword ptr [rsp+0x10],xmm0
0x3846: movdqa xmm0,xmmword ptr [rip+0x2039d2]
0x384e: movaps xmmword ptr [rsp+0x20],xmm0
0x3853: jz 0x3887
0x3855: test rdx,rdx
0x3858: jz 0x3887
0x385a: mov qword ptr [rsp+0x28],rsi
0x385f: mov qword ptr [rsp+0x30],rdx
0x3864: mov rcx,rsp
0x3867: mov rdx,r8
0x386a: mov rsi,r9
0x386d: call 0x3000
0x3872: mov rdi,qword ptr [rsp+0x38]
0x3877: xor rdi,qword ptr fs:[0x28]
0x3880: jnz 0x388c
0x3882: add rsp,0x48
0x3886: ret 
0x3887: call 0x1250
0x388c: call 0x1300
0x3891: nop dword ptr [rax+rax*0x1]
0x3896: nop word ptr cs:[rax+rax*0x1]
0x38a0: mov r8,-0x1
0x38a7: jmp 0x3800
0x38b0: mov rcx,rdx
0x38b3: mov r8,-0x1
0x38ba: mov rdx,rsi
0x38bd: mov rsi,rdi
0x38c0: xor edi,edi
0x38c2: jmp 0x3800
0x38d0: mov r8,rcx
0x38d3: mov rcx,rdx
0x38d6: mov rdx,rsi
0x38d9: mov rsi,rdi
0x38dc: xor edi,edi
0x38de: jmp 0x3800
0x38f0: lea rcx,[rip+0x203729]
0x38f7: jmp 0x3000
0x3900: lea rcx,[rip+0x203719]
0x3907: mov rdx,rsi
0x390a: mov rsi,rdi
0x390d: xor edi,edi
0x390f: jmp 0x3000
0x3920: lea rcx,[rip+0x2036f9]
0x3927: mov rdx,-0x1
0x392e: jmp 0x3000
0x3940: lea rcx,[rip+0x2036d9]
0x3947: mov rsi,rdi
0x394a: mov rdx,-0x1
0x3951: xor edi,edi
0x3953: jmp 0x3000
0x3a98: mov r8,rcx
0x3a9b: mov rcx,rdx
0x3a9e: lea rdx,[rip+0x140f]
0x3aa5: mov esi,0x1
0x3aaa: xor eax,eax
0x3aac: call 0x1480
0x3ab1: jmp 0x399c
0x3d80: xor r9d,r9d
0x3d83: cmp qword ptr [r8],0x0
0x3d87: jz 0x3d9b
0x3d89: nop dword ptr [rax]
0x3d90: add r9,0x1
0x3d94: cmp qword ptr [r8+r9*0x8],0x0
0x3d99: jnz 0x3d90
0x3d9b: jmp 0x3960
0x3da0: sub rsp,0x68
0x3da4: mov r10,r8
0x3da7: xor r9d,r9d
0x3daa: mov rax,qword ptr fs:[0x28]
0x3db3: mov qword ptr [rsp+0x58],rax
0x3db8: xor eax,eax
0x3dba: mov r8,rsp
0x3dbd: nop dword ptr [rax]
0x3dc0: mov eax,dword ptr [r10]
0x3dc3: cmp eax,0x2f
0x3dc6: ja 0x3e0a
0x3dc8: mov r11d,eax
0x3dcb: add r11,qword ptr [r10+0x10]
0x3dcf: add eax,0x8
0x3dd2: mov dword ptr [r10],eax
0x3dd5: mov rax,qword ptr [r11]
0x3dd8: test rax,rax
0x3ddb: mov qword ptr [r8+r9*0x8],rax
0x3ddf: jz 0x3deb
0x3de1: add r9,0x1
0x3de5: cmp r9,0xa
0x3de9: jnz 0x3dc0
0x3deb: call 0x3960
0x3df0: mov rax,qword ptr [rsp+0x58]
0x3df5: xor rax,qword ptr fs:[0x28]
0x3dfe: jnz 0x3e05
0x3e00: add rsp,0x68
0x3e04: ret 
0x3e05: call 0x1300
0x3e0a: mov r11,qword ptr [r10+0x8]
0x3e0e: lea rax,[r11+0x8]
0x3e12: mov qword ptr [r10+0x8],rax
0x3e16: jmp 0x3dd5
0x3f00: push rbx
0x3f01: lea rsi,[rip+0xffa]
0x3f08: mov edx,0x5
0x3f0d: xor edi,edi
0x3f0f: call 0x12d0
0x3f14: lea rdx,[rip+0xffc]
0x3f1b: mov rsi,rax
0x3f1e: mov edi,0x1
0x3f23: xor eax,eax
0x3f25: call 0x1420
0x3f2a: lea rsi,[rip+0xffc]
0x3f31: mov edx,0x5
0x3f36: xor edi,edi
0x3f38: call 0x12d0
0x3f3d: lea rcx,[rip+0x97c]
0x3f44: lea rdx,[rip+0x6b8]
0x3f4b: mov rsi,rax
0x3f4e: mov edi,0x1
0x3f53: xor eax,eax
0x3f55: call 0x1420
0x3f5a: mov rbx,qword ptr [rip+0x203127]
0x3f61: lea rsi,[rip+0x11f8]
0x3f68: xor edi,edi
0x3f6a: mov edx,0x5
0x3f6f: call 0x12d0
0x3f74: mov rsi,rbx
0x3f77: mov rdi,rax
0x3f7a: pop rbx
0x3f7b: jmp 0x1380
0x3f80: push rbx
0x3f81: mov rbx,rdi
0x3f84: call 0x13c0
0x3f89: test rax,rax
0x3f8c: jnz 0x3f93
0x3f8e: test rbx,rbx
0x3f91: jnz 0x3f95
0x3f93: pop rbx
0x3f94: ret 
0x3f95: call 0x41d0
0x3f9a: nop word ptr [rax+rax*0x1]
0x3fa0: mov rax,rdi
0x3fa3: mul rsi
0x3fa6: mov rdi,rax
0x3fa9: seto al
0x3fac: test rdi,rdi
0x3faf: js 0x3fbb
0x3fb1: movzx eax,al
0x3fb4: test rax,rax
0x3fb7: jnz 0x3fbb
0x3fb9: jmp 0x3f80
0x3fbb: sub rsp,0x8
0x3fbf: call 0x41d0
0x3fc4: nop 
0x3fc6: nop word ptr cs:[rax+rax*0x1]
0x3fd0: jmp 0x3f80
0x3fe0: test rsi,rsi
0x3fe3: push rbx
0x3fe4: mov rbx,rsi
0x3fe7: jnz 0x3fee
0x3fe9: test rdi,rdi
0x3fec: jnz 0x4008
0x3fee: mov rsi,rbx
0x3ff1: call 0x1400
0x3ff6: test rax,rax
0x3ff9: jnz 0x4000
0x3ffb: test rbx,rbx
0x3ffe: jnz 0x4011
0x4000: pop rbx
0x4001: ret 
0x4008: call 0x1240
0x400d: xor eax,eax
0x400f: pop rbx
0x4010: ret 
0x4011: call 0x41d0
0x4016: nop word ptr cs:[rax+rax*0x1]
0x4020: mov rax,rsi
0x4023: mul rdx
0x4026: mov rsi,rax
0x4029: seto al
0x402c: test rsi,rsi
0x402f: js 0x403b
0x4031: movzx eax,al
0x4034: test rax,rax
0x4037: jnz 0x403b
0x4039: jmp 0x3fe0
0x403b: sub rsp,0x8
0x403f: call 0x41d0
0x4044: nop 
0x4046: nop word ptr cs:[rax+rax*0x1]
0x4050: test rdi,rdi
0x4053: mov r9,rdx
0x4056: mov rcx,qword ptr [rsi]
0x4059: jz 0x4090
0x405b: xor edx,edx
0x405d: mov rax,0x5555555555555554
0x4067: div r9
0x406a: cmp rax,rcx
0x406d: jbe 0x40ab
0x406f: mov rax,rcx
0x4072: shr rax,0x1
0x4075: lea rcx,[rax+rcx*0x1+0x1]
0x407a: mov qword ptr [rsi],rcx
0x407d: imul rcx,r9
0x4081: mov rsi,rcx
0x4084: jmp 0x3fe0
0x4090: test rcx,rcx
0x4093: jz 0x40b8
0x4095: mov rax,rcx
0x4098: mul r9
0x409b: seto dl
0x409e: test rax,rax
0x40a1: movzx edx,dl
0x40a4: js 0x40ab
0x40a6: test rdx,rdx
0x40a9: jz 0x407a
0x40ab: sub rsp,0x8
0x40af: call 0x41d0
0x40b4: nop dword ptr [rax]
0x40b8: xor edx,edx
0x40ba: mov eax,0x80
0x40bf: xor r8d,r8d
0x40c2: div r9
0x40c5: test rax,rax
0x40c8: setz r8b
0x40cc: lea rcx,[r8+rax*0x1]
0x40d0: jmp 0x4095
0x40e0: test rdi,rdi
0x40e3: mov rax,qword ptr [rsi]
0x40e6: jz 0x4110
0x40e8: mov rdx,0x5555555555555553
0x40f2: cmp rax,rdx
0x40f5: ja 0x4121
0x40f7: mov rdx,rax
0x40fa: shr rdx,0x1
0x40fd: lea rax,[rdx+rax*0x1+0x1]
0x4102: mov qword ptr [rsi],rax
0x4105: mov rsi,rax
0x4108: jmp 0x3fe0
0x4110: test rax,rax
0x4113: mov edx,0x80
0x4118: cmovz rax,rdx
0x411c: test rax,rax
0x411f: jns 0x4102
0x4121: sub rsp,0x8
0x4125: call 0x41d0
0x412a: nop word ptr [rax+rax*0x1]
0x4130: push rbx
0x4131: mov rbx,rdi
0x4134: call 0x3f80
0x4139: mov rdx,rbx
0x413c: xor esi,esi
0x413e: mov rdi,rax
0x4141: pop rbx
0x4142: jmp 0x1360
0x4150: mov rax,rdi
0x4153: sub rsp,0x8
0x4157: mul rsi
0x415a: seto dl
0x415d: test rax,rax
0x4160: js 0x4179
0x4162: movzx edx,dl
0x4165: test rdx,rdx
0x4168: jnz 0x4179
0x416a: call 0x1390
0x416f: test rax,rax
0x4172: jz 0x4179
0x4174: add rsp,0x8
0x4178: ret 
0x4179: call 0x41d0
0x417e: nop 
0x4180: push rbp
0x4181: push rbx
0x4182: mov rbp,rdi
0x4185: mov rdi,rsi
0x4188: mov rbx,rsi
0x418b: sub rsp,0x8
0x418f: call 0x3f80
0x4194: add rsp,0x8
0x4198: mov rdx,rbx
0x419b: mov rsi,rbp
0x419e: pop rbx
0x419f: pop rbp
0x41a0: mov rdi,rax
0x41a3: jmp 0x13a0
0x41b0: push rbx
0x41b1: mov rbx,rdi
0x41b4: call 0x12f0
0x41b9: mov rdi,rbx
0x41bc: lea rsi,[rax+0x1]
0x41c0: pop rbx
0x41c1: jmp 0x4180
0x41d0: lea rsi,[rip+0x1038]
0x41d7: sub rsp,0x8
0x41db: mov edx,0x5
0x41e0: xor edi,edi
0x41e2: call 0x12d0
0x41e7: mov edi,dword ptr [rip+0x202e2b]
0x41ed: lea rdx,[rip+0x784]
0x41f4: mov rcx,rax
0x41f7: xor esi,esi
0x41f9: xor eax,eax
0x41fb: call 0x1430
0x4200: call 0x1250
0x4205: nop word ptr cs:[rax+rax*0x1]
0x420f: nop 
0x4210: push r13
0x4212: push r12
0x4214: mov r13,rsi
0x4217: push rbp
0x4218: push rbx
0x4219: mov rbx,rdi
0x421c: mov r12,rdx
0x421f: sub rsp,0x18
0x4223: mov rax,qword ptr fs:[0x28]
0x422c: mov qword ptr [rsp+0x8],rax
0x4231: xor eax,eax
0x4233: lea rax,[rsp+0x4]
0x4238: test rdi,rdi
0x423b: cmovz rbx,rax
0x423f: mov rdi,rbx
0x4242: call 0x1320
0x4247: cmp rax,-0x3
0x424b: mov rbp,rax
0x424e: jbe 0x4270
0x4250: test r12,r12
0x4253: jz 0x4270
0x4255: xor edi,edi
0x4257: call 0x4320
0x425c: test al,al
0x425e: jnz 0x4270
0x4260: movzx eax,byte ptr [r13]
0x4265: mov ebp,0x1
0x426a: mov dword ptr [rbx],eax
0x426c: nop dword ptr [rax]
0x4270: mov rdx,qword ptr [rsp+0x8]
0x4275: xor rdx,qword ptr fs:[0x28]
0x427e: mov rax,rbp
0x4281: jnz 0x428e
0x4283: add rsp,0x18
0x4287: pop rbx
0x4288: pop rbp
0x4289: pop r12
0x428b: pop r13
0x428d: ret 
0x428e: call 0x1300
0x4293: nop word ptr cs:[rax+rax*0x1]
0x429d: nop dword ptr [rax]
0x42a0: push r12
0x42a2: push rbp
0x42a3: mov rbp,rdi
0x42a6: push rbx
0x42a7: call 0x1290
0x42ac: mov ebx,dword ptr [rbp]
0x42af: mov rdi,rbp
0x42b2: mov r12,rax
0x42b5: call 0x43c0
0x42ba: and ebx,0x20
0x42bd: test ebx,ebx
0x42bf: jnz 0x42d8
0x42c1: test eax,eax
0x42c3: jz 0x42cf
0x42c5: test r12,r12
0x42c8: mov eax,0xffffffff
0x42cd: jz 0x4308
0x42cf: pop rbx
0x42d0: pop rbp
0x42d1: pop r12
0x42d3: ret 
0x42d8: test eax,eax
0x42da: jnz 0x42f8
0x42dc: call 0x1260
0x42e1: mov dword ptr [rax],0x0
0x42e7: mov eax,0xffffffff
0x42ec: pop rbx
0x42ed: pop rbp
0x42ee: pop r12
0x42f0: ret 
0x42f8: pop rbx
0x42f9: mov eax,0xffffffff
0x42fe: pop rbp
0x42ff: pop r12
0x4301: ret 
0x4308: call 0x1260
0x430d: cmp dword ptr [rax],0x9
0x4310: pop rbx
0x4311: pop rbp
0x4312: pop r12
0x4314: setnz al
0x4317: movzx eax,al
0x431a: neg eax
0x431c: ret 
0x4320: sub rsp,0x8
0x4324: xor esi,esi
0x4326: call 0x1410
0x432b: mov rdx,rax
0x432e: mov eax,0x1
0x4333: test rdx,rdx
0x4336: jz 0x4355
0x4338: lea rdi,[rip+0xee1]
0x433f: mov ecx,0x2
0x4344: mov rsi,rdx
0x4347: repe cmpsb  [rsi], [rdi]
0x4349: seta cl
0x434c: sbb cl,0x0
0x434f: xor eax,eax
0x4351: test cl,cl
0x4353: jnz 0x4360
0x4355: add rsp,0x8
0x4359: ret 
0x4360: lea rdi,[rip+0xebb]
0x4367: mov ecx,0x6
0x436c: mov rsi,rdx
0x436f: repe cmpsb  [rsi], [rdi]
0x4371: seta al
0x4374: sbb al,0x0
0x4376: test al,al
0x4378: setnz al
0x437b: add rsp,0x8
0x437f: ret 
0x4380: sub rsp,0x8
0x4384: mov edi,0xe
0x4389: call 0x13e0
0x438e: test rax,rax
0x4391: jz 0x43b0
0x4393: cmp byte ptr [rax],0x0
0x4396: lea rdx,[rip+0xe8b]
0x439d: cmovz rax,rdx
0x43a1: add rsp,0x8
0x43a5: ret 
0x43b0: lea rax,[rip+0xe71]
0x43b7: add rsp,0x8
0x43bb: ret 
0x43c0: push r12
0x43c2: push rbp
0x43c3: push rbx
0x43c4: mov rbx,rdi
0x43c7: call 0x13b0
0x43cc: test eax,eax
0x43ce: mov rdi,rbx
0x43d1: js 0x4427
0x43d3: call 0x13f0
0x43d8: test eax,eax
0x43da: jnz 0x4408
0x43dc: mov rdi,rbx
0x43df: call 0x4440
0x43e4: test eax,eax
0x43e6: jz 0x4424
0x43e8: call 0x1260
0x43ed: mov r12d,dword ptr [rax]
0x43f0: mov rdi,rbx
0x43f3: mov rbp,rax
0x43f6: call 0x12b0
0x43fb: test r12d,r12d
0x43fe: jnz 0x4430
0x4400: pop rbx
0x4401: pop rbp
0x4402: pop r12
0x4404: ret 
0x4408: mov rdi,rbx
0x440b: call 0x13b0
0x4410: xor esi,esi
0x4412: mov edx,0x1
0x4417: mov edi,eax
0x4419: call 0x1350
0x441e: cmp rax,-0x1
0x4422: jnz 0x43dc
0x4424: mov rdi,rbx
0x4427: pop rbx
0x4428: pop rbp
0x4429: pop r12
0x442b: jmp 0x12b0
0x4430: mov dword ptr [rbp],r12d
0x4434: mov eax,0xffffffff
0x4439: jmp 0x4400
0x4440: test rdi,rdi
0x4443: push rbx
0x4444: mov rbx,rdi
0x4447: jz 0x445a
0x4449: call 0x13f0
0x444e: test eax,eax
0x4450: jz 0x445a
0x4452: test dword ptr [rbx],0x100
0x4458: jnz 0x4468
0x445a: mov rdi,rbx
0x445d: pop rbx
0x445e: jmp 0x13d0
0x4468: mov rdi,rbx
0x446b: mov edx,0x1
0x4470: xor esi,esi
0x4472: call 0x4480
0x4477: mov rdi,rbx
0x447a: pop rbx
0x447b: jmp 0x13d0
0x4480: mov rax,qword ptr [rdi+0x8]
0x4484: cmp qword ptr [rdi+0x10],rax
0x4488: jz 0x4490
0x448a: jmp 0x1440
0x4490: mov rax,qword ptr [rdi+0x20]
0x4494: cmp qword ptr [rdi+0x28],rax
0x4498: jnz 0x448a
0x449a: cmp qword ptr [rdi+0x48],0x0
0x449f: jnz 0x448a
0x44a1: push r12
0x44a3: push rbp
0x44a4: mov r12d,edx
0x44a7: push rbx
0x44a8: mov rbp,rsi
0x44ab: mov rbx,rdi
0x44ae: call 0x13b0
0x44b3: mov edx,r12d
0x44b6: mov rsi,rbp
0x44b9: mov edi,eax
0x44bb: call 0x1350
0x44c0: cmp rax,-0x1
0x44c4: jz 0x44d2
0x44c6: and dword ptr [rbx],0xffffffef
0x44c9: mov qword ptr [0x90+rbx],rax
0x44d0: xor eax,eax
0x44d2: pop rbx
0x44d3: pop rbp
0x44d4: pop r12
0x44d6: ret 
0x44e0: push r15
0x44e2: push r14
0x44e4: mov r15,rdx
0x44e7: push r13
0x44e9: push r12
0x44eb: lea r12,[rip+0x20269e]
0x44f2: push rbp
0x44f3: lea rbp,[rip+0x20269e]
0x44fa: push rbx
0x44fb: mov r13d,edi
0x44fe: mov r14,rsi
0x4501: sub rbp,r12
0x4504: sub rsp,0x8
0x4508: sar rbp,0x3
0x450c: call 0x1218
0x4511: test rbp,rbp
0x4514: jz 0x4536
0x4516: xor ebx,ebx
0x4518: nop dword ptr [rax+rax*0x1]
0x4520: mov rdx,r15
0x4523: mov rsi,r14
0x4526: mov edi,r13d
0x4529: call qword ptr [r12+rbx*0x8]
0x452d: add rbx,0x1
0x4531: cmp rbp,rbx
0x4534: jnz 0x4520
0x4536: add rsp,0x8
0x453a: pop rbx
0x453b: pop rbp
0x453c: pop r12
0x453e: pop r13
0x4540: pop r14
0x4542: pop r15
0x4544: ret 
0x4550: ret 
0x4570: sub rsp,0x8
0x4574: add rsp,0x8
0x4578: ret 
