0x1450: sub rsp,0x8
0x1454: mov rax,qword ptr [rip+0x206b7d]
0x145b: test rax,rax
0x145e: jz 0x1462
0x1460: call rax
0x1462: add rsp,0x8
0x1466: ret 
0x1470: push qword ptr [rip+0x2069ba]
0x1476: jmp qword ptr [rip+0x2069bc]
0x1486: push 0x0
0x148b: jmp 0x1470
0x1496: push 0x1
0x149b: jmp 0x1470
0x14a6: push 0x2
0x14ab: jmp 0x1470
0x14b6: push 0x3
0x14bb: jmp 0x1470
0x14c0: jmp qword ptr [rip+0x20699a]
0x14c6: push 0x4
0x14cb: jmp 0x1470
0x14d0: jmp qword ptr [rip+0x206992]
0x14d6: push 0x5
0x14db: jmp 0x1470
0x14e6: push 0x6
0x14eb: jmp 0x1470
0x14f6: push 0x7
0x14fb: jmp 0x1470
0x1500: jmp qword ptr [rip+0x20697a]
0x1506: push 0x8
0x150b: jmp 0x1470
0x1516: push 0x9
0x151b: jmp 0x1470
0x1526: push 0xa
0x152b: jmp 0x1470
0x1536: push 0xb
0x153b: jmp 0x1470
0x1546: push 0xc
0x154b: jmp 0x1470
0x1556: push 0xd
0x155b: jmp 0x1470
0x1560: jmp qword ptr [rip+0x20694a]
0x1566: push 0xe
0x156b: jmp 0x1470
0x1576: push 0xf
0x157b: jmp 0x1470
0x1586: push 0x10
0x158b: jmp 0x1470
0x1596: push 0x11
0x159b: jmp 0x1470
0x15a6: push 0x12
0x15ab: jmp 0x1470
0x15b6: push 0x13
0x15bb: jmp 0x1470
0x15c6: push 0x14
0x15cb: jmp 0x1470
0x15d6: push 0x15
0x15db: jmp 0x1470
0x15e6: push 0x16
0x15eb: jmp 0x1470
0x15f6: push 0x17
0x15fb: jmp 0x1470
0x1606: push 0x18
0x160b: jmp 0x1470
0x1616: push 0x19
0x161b: jmp 0x1470
0x1620: jmp qword ptr [rip+0x2068ea]
0x1626: push 0x1a
0x162b: jmp 0x1470
0x1630: jmp qword ptr [rip+0x2068e2]
0x1636: push 0x1b
0x163b: jmp 0x1470
0x1640: jmp qword ptr [rip+0x2068da]
0x1646: push 0x1c
0x164b: jmp 0x1470
0x1656: push 0x1d
0x165b: jmp 0x1470
0x1660: jmp qword ptr [rip+0x2068ca]
0x1666: push 0x1e
0x166b: jmp 0x1470
0x1676: push 0x1f
0x167b: jmp 0x1470
0x1686: push 0x20
0x168b: jmp 0x1470
0x1690: jmp qword ptr [rip+0x2068b2]
0x1696: push 0x21
0x169b: jmp 0x1470
0x16a6: push 0x22
0x16ab: jmp 0x1470
0x16b6: push 0x23
0x16bb: jmp 0x1470
0x16c6: push 0x24
0x16cb: jmp 0x1470
0x16d6: push 0x25
0x16db: jmp 0x1470
0x16e6: push 0x26
0x16eb: jmp 0x1470
0x16f6: push 0x27
0x16fb: jmp 0x1470
0x1700: jmp qword ptr [rip+0x20687a]
0x1706: push 0x28
0x170b: jmp 0x1470
0x1716: push 0x29
0x171b: jmp 0x1470
0x1726: push 0x2a
0x172b: jmp 0x1470
0x1736: push 0x2b
0x173b: jmp 0x1470
0x1746: push 0x2c
0x174b: jmp 0x1470
0x1756: push 0x2d
0x175b: jmp 0x1470
0x1766: push 0x2e
0x176b: jmp 0x1470
0x1776: push 0x2f
0x177b: jmp 0x1470
0x1786: push 0x30
0x178b: jmp 0x1470
0x1790: jmp qword ptr [rip+0x206852]
0x17cd: nop dword ptr [rax]
0x1f16: nop word ptr cs:[rax + rax*0x1]
0x1fa5: mov byte ptr [0x8c + rsp],0x0
0x2040: sub r14,qword ptr [rsp + 0x20]
0x2045: jnz 0x21a4
0x204b: mov eax,dword ptr [rsp + 0x4]
0x204f: xor r10d,r10d
0x2052: mov dword ptr [rip+0x206098],eax
0x215a: mov byte ptr [0x8c + rsp],0x0
0x2162: jmp 0x2074
0x2197: mov byte ptr [0x8c + rsp],0x0
0x219f: jmp 0x2074
0x21a4: mov rsi,qword ptr [rsp + 0x20]
0x21a9: mov rdx,r14
0x21ac: mov edi,0x1
0x21b1: call 0x2a60
0x21b6: cmp r14,rax
0x21b9: jz 0x204b
0x21bf: jmp 0x1f11
0x21c4: mov rsi,qword ptr [rsp + 0x20]
0x21c9: mov rdx,rbx
0x21cc: mov edi,0x1
0x21d1: call 0x2a60
0x21d6: cmp rbx,rax
0x21d9: jz 0x20c2
0x21df: jmp 0x1f11
0x2351: mov eax,dword ptr [rsp + 0x4]
0x2355: movzx r10d,byte ptr [rsp + 0x8]
0x235b: mov dword ptr [rip+0x205d8f],eax
0x2361: jmp 0x2058
0x23aa: call 0x1560
0x23db: nop dword ptr [rax + rax*0x1]
0x240a: hlt 
0x2410: lea rdi,[rip+0x205ca9]
0x2417: push rbp
0x2418: lea rax,[rip+0x205ca1]
0x241f: cmp rax,rdi
0x2422: mov rbp,rsp
0x2425: jz 0x2440
0x2427: mov rax,qword ptr [rip+0x205b9a]
0x242e: test rax,rax
0x2431: jz 0x2440
0x2433: pop rbp
0x2434: jmp rax
0x2440: pop rbp
0x2441: ret 
0x2450: lea rdi,[rip+0x205c69]
0x2457: lea rsi,[rip+0x205c62]
0x245e: push rbp
0x245f: sub rsi,rdi
0x2462: mov rbp,rsp
0x2465: sar rsi,0x3
0x2469: mov rax,rsi
0x246c: shr rax,0x3f
0x2470: add rsi,rax
0x2473: sar rsi,1
0x2476: jz 0x2490
0x2478: mov rax,qword ptr [rip+0x205b61]
0x247f: test rax,rax
0x2482: jz 0x2490
0x2484: pop rbp
0x2485: jmp rax
0x2490: pop rbp
0x2491: ret 
0x24a0: cmp byte ptr [rip+0x205c41],0x0
0x24a7: jnz 0x24d8
0x24a9: cmp qword ptr [rip+0x205b37],0x0
0x24b1: push rbp
0x24b2: mov rbp,rsp
0x24b5: jz 0x24c3
0x24b7: mov rdi,qword ptr [rip+0x205b4a]
0x24be: call 0x1790
0x24c3: call 0x2410
0x24c8: mov byte ptr [rip+0x205c19],0x1
0x24cf: pop rbp
0x24d0: ret 
0x24d8: ret 
0x24e0: push rbp
0x24e1: mov rbp,rsp
0x24e4: pop rbp
0x24e5: jmp 0x2450
0x2950: mov qword ptr [rip+0x2057b1],rdi
0x2957: ret 
0x2960: mov byte ptr [rip+0x205799],dil
0x2967: ret 
0x2970: push rbp
0x2971: push rbx
0x2972: sub rsp,0x8
0x2976: mov rdi,qword ptr [rip+0x20574b]
0x297d: call 0x5210
0x2982: test eax,eax
0x2984: jz 0x299c
0x2986: call 0x14a0
0x298b: cmp byte ptr [rip+0x20576e],0x0
0x2992: mov rbx,rax
0x2995: jz 0x29b3
0x2997: cmp dword ptr [rax],0x20
0x299a: jnz 0x29b3
0x299c: mov rdi,qword ptr [rip+0x20573d]
0x29a3: call 0x5210
0x29a8: test eax,eax
0x29aa: jnz 0x29f2
0x29ac: add rsp,0x8
0x29b0: pop rbx
0x29b1: pop rbp
0x29b2: ret 
0x29b3: lea rsi,[rip+0x2b4a]
0x29ba: xor edi,edi
0x29bc: mov edx,0x5
0x29c1: call 0x1530
0x29c6: mov rdi,qword ptr [rip+0x20573b]
0x29cd: mov rbp,rax
0x29d0: test rdi,rdi
0x29d3: jz 0x29fd
0x29d5: call 0x45f0
0x29da: mov esi,dword ptr [rbx]
0x29dc: lea rdx,[rip+0x315d]
0x29e3: mov rcx,rax
0x29e6: mov r8,rbp
0x29e9: xor edi,edi
0x29eb: xor eax,eax
0x29ed: call 0x16e0
0x29f2: mov edi,dword ptr [rip+0x205648]
0x29f8: call 0x14c0
0x29fd: mov esi,dword ptr [rbx]
0x29ff: lea rdx,[rip+0x313e]
0x2a06: mov rcx,rax
0x2a09: xor edi,edi
0x2a0b: xor eax,eax
0x2a0d: call 0x16e0
0x2a12: jmp 0x29f2
0x2a30: test rdi,rdi
0x2a33: jz 0x2a50
0x2a35: push rbx
0x2a36: mov ebx,esi
0x2a38: call 0x1640
0x2a3d: mov ecx,ebx
0x2a3f: xor edx,edx
0x2a41: xor esi,esi
0x2a43: pop rbx
0x2a44: mov edi,eax
0x2a46: jmp 0x15e0
0x2a50: ret 
0x2b7f: nop 
0x34bf: lea rcx,[rbp + 0x2]
0x34c3: cmp rcx,r11
0x34c6: jnc 0x34e0
0x34c8: mov rax,qword ptr [rsp + 0x10]
0x34cd: cmp byte ptr [rax + rbp*0x1 + 0x1],0x3f
0x34d2: jz 0x3c62
0x34d8: nop dword ptr [rax + rax*0x1]
0x3c62: movzx ebx,byte ptr [rax + rcx*0x1]
0x3c66: cmp bl,0x3e
0x3c69: ja 0x34e0
0x3c6f: mov rax,0x7000a38200000000
0x3c79: bt rax,rbx
0x3c7d: jnc 0x34e0
0x3c83: cmp byte ptr [rsp + 0xf],0x0
0x3c88: jnz 0x3e72
0x3c8e: cmp r13,r15
0x3c91: jbe 0x3c98
0x3c93: mov byte ptr [r14 + r15*0x1],0x3f
0x3c98: lea rax,[r15 + 0x1]
0x3c9c: cmp r13,rax
0x3c9f: jbe 0x3ca7
0x3ca1: mov byte ptr [r14 + r15*0x1 + 0x1],0x22
0x3ca7: lea rax,[r15 + 0x2]
0x3cab: cmp r13,rax
0x3cae: jbe 0x3cb6
0x3cb0: mov byte ptr [r14 + r15*0x1 + 0x2],0x22
0x3cb6: lea rax,[r15 + 0x3]
0x3cba: cmp r13,rax
0x3cbd: jbe 0x3cc5
0x3cbf: mov byte ptr [r14 + r15*0x1 + 0x3],0x3f
0x3cc5: add r15,0x4
0x3cc9: xor edx,edx
0x3ccb: xor r12d,r12d
0x3cce: xor eax,eax
0x3cd0: mov rbp,rcx
0x3cd3: jmp 0x2e98
0x3ce0: lea rax,[rip+0x1eb6]
0x3ce7: mov byte ptr [rsp + 0xe],0x1
0x3cec: mov byte ptr [rsp + 0x7c],0x0
0x3cf1: xor r12d,r12d
0x3cf4: mov qword ptr [rsp + 0x50],0x0
0x3cfd: mov byte ptr [rsp + 0xf],0x1
0x3d02: mov byte ptr [rsp + 0xd],0x0
0x3d07: mov qword ptr [rsp + 0x18],0x1
0x3d10: xor r15d,r15d
0x3d13: mov qword ptr [rsp + 0x48],rax
0x3d18: jmp 0x2d43
0x3d2d: lea rax,[rip+0x1e67]
0x3d34: mov byte ptr [rsp + 0xe],0x1
0x3d39: mov byte ptr [rsp + 0x7c],0x0
0x3d3e: xor r12d,r12d
0x3d41: mov qword ptr [rsp + 0x50],0x0
0x3d4a: mov byte ptr [rsp + 0xf],0x1
0x3d4f: mov byte ptr [rsp + 0xd],0x1
0x3d54: mov qword ptr [rsp + 0x18],0x1
0x3d5d: xor r15d,r15d
0x3d60: mov qword ptr [rsp + 0x48],rax
0x3d65: jmp 0x2d43
0x3e63: call 0x1560
0x3e72: mov rbp,r11
0x3e75: jmp 0x3810
0x3ea4: nop 
0x3ea6: nop word ptr cs:[rax + rax*0x1]
0x4051: call 0x1490
0x4056: call 0x5140
0x405b: nop dword ptr [rax + rax*0x1]
0x4060: push r12
0x4062: push rbp
0x4063: push rbx
0x4064: mov rbx,rdi
0x4067: call 0x14a0
0x406c: mov r12d,dword ptr [rax]
0x406f: mov rbp,rax
0x4072: lea rax,[rip+0x2041a7]
0x4079: test rbx,rbx
0x407c: mov esi,0x38
0x4081: cmovz rbx,rax
0x4085: mov rdi,rbx
0x4088: call 0x50f0
0x408d: mov dword ptr [rbp],r12d
0x4091: pop rbx
0x4092: pop rbp
0x4093: pop r12
0x4095: ret 
0x40a0: lea rax,[rip+0x204179]
0x40a7: test rdi,rdi
0x40aa: cmovz rdi,rax
0x40ae: mov eax,dword ptr [rdi]
0x40b0: ret 
0x40c0: lea rax,[rip+0x204159]
0x40c7: test rdi,rdi
0x40ca: cmovz rdi,rax
0x40ce: mov dword ptr [rdi],esi
0x40d0: ret 
0x40e0: lea rax,[rip+0x204139]
0x40e7: test rdi,rdi
0x40ea: mov ecx,esi
0x40ec: cmovz rdi,rax
0x40f0: mov eax,esi
0x40f2: and ecx,0x1f
0x40f5: shr al,0x5
0x40f8: movzx eax,al
0x40fb: lea rdi,[rdi + rax*0x4 + 0x8]
0x4100: mov esi,dword ptr [rdi]
0x4102: mov eax,esi
0x4104: shr eax,cl
0x4106: xor edx,eax
0x4108: and eax,0x1
0x410b: and edx,0x1
0x410e: shl edx,cl
0x4110: xor edx,esi
0x4112: mov dword ptr [rdi],edx
0x4114: ret 
0x4120: lea rax,[rip+0x2040f9]
0x4127: test rdi,rdi
0x412a: cmovz rdi,rax
0x412e: mov eax,dword ptr [rdi + 0x4]
0x4131: mov dword ptr [rdi + 0x4],esi
0x4134: ret 
0x4140: lea rax,[rip+0x2040d9]
0x4147: test rdi,rdi
0x414a: cmovz rdi,rax
0x414e: test rsi,rsi
0x4151: mov dword ptr [rdi],0xa
0x4157: jz 0x4167
0x4159: test rdx,rdx
0x415c: jz 0x4167
0x415e: mov qword ptr [rdi + 0x28],rsi
0x4162: mov qword ptr [rdi + 0x30],rdx
0x4166: ret 
0x4167: sub rsp,0x8
0x416b: call 0x1490
0x4170: push r15
0x4172: push r14
0x4174: lea rax,[rip+0x2040a5]
0x417b: push r13
0x417d: push r12
0x417f: mov r13,rdi
0x4182: push rbp
0x4183: push rbx
0x4184: mov rbx,r8
0x4187: mov r14,rsi
0x418a: mov r15,rdx
0x418d: sub rsp,0x18
0x4191: test r8,r8
0x4194: cmovz rbx,rax
0x4198: mov qword ptr [rsp + 0x8],rcx
0x419d: call 0x14a0
0x41a2: mov r12d,dword ptr [rax]
0x41a5: mov rbp,rax
0x41a8: lea rax,[rbx + 0x8]
0x41ac: sub rsp,0x8
0x41b0: mov r9d,dword ptr [rbx + 0x4]
0x41b4: push qword ptr [rbx + 0x30]
0x41b7: mov r8d,dword ptr [rbx]
0x41ba: push qword ptr [rbx + 0x28]
0x41bd: mov rdx,r15
0x41c0: push rax
0x41c1: mov rcx,qword ptr [rsp + 0x28]
0x41c6: mov rsi,r14
0x41c9: mov rdi,r13
0x41cc: call 0x2c70
0x41d1: mov dword ptr [rbp],r12d
0x41d5: add rsp,0x38
0x41d9: pop rbx
0x41da: pop rbp
0x41db: pop r12
0x41dd: pop r13
0x41df: pop r14
0x41e1: pop r15
0x41e3: ret 
0x41f0: push r15
0x41f2: push r14
0x41f4: lea rax,[rip+0x204025]
0x41fb: push r13
0x41fd: push r12
0x41ff: mov r12,rdx
0x4202: push rbp
0x4203: push rbx
0x4204: mov rbx,rcx
0x4207: mov r14,rdi
0x420a: mov r15,rsi
0x420d: sub rsp,0x38
0x4211: test rcx,rcx
0x4214: cmovz rbx,rax
0x4218: xor ebp,ebp
0x421a: call 0x14a0
0x421f: test r12,r12
0x4222: mov r13,rax
0x4225: mov eax,dword ptr [rax]
0x4227: setz bpl
0x422b: or ebp,dword ptr [rbx + 0x4]
0x422e: lea r10,[rbx + 0x8]
0x4232: sub rsp,0x8
0x4236: mov r8d,dword ptr [rbx]
0x4239: mov rcx,r15
0x423c: mov dword ptr [rsp + 0x14],eax
0x4240: push qword ptr [rbx + 0x30]
0x4243: mov rdx,r14
0x4246: push qword ptr [rbx + 0x28]
0x4249: push r10
0x424b: xor esi,esi
0x424d: mov r9d,ebp
0x4250: xor edi,edi
0x4252: mov qword ptr [rsp + 0x40],r10
0x4257: call 0x2c70
0x425c: lea rsi,[rax + 0x1]
0x4260: mov qword ptr [rsp + 0x48],rax
0x4265: add rsp,0x20
0x4269: mov rdi,rsi
0x426c: mov qword ptr [rsp + 0x18],rsi
0x4271: call 0x4ef0
0x4276: mov qword ptr [rsp + 0x10],rax
0x427b: sub rsp,0x8
0x427f: push qword ptr [rbx + 0x30]
0x4282: push qword ptr [rbx + 0x28]
0x4285: mov r10,qword ptr [rsp + 0x38]
0x428a: mov r9d,ebp
0x428d: mov r8d,dword ptr [rbx]
0x4290: mov rcx,r15
0x4293: mov rdx,r14
0x4296: mov rdi,rax
0x4299: push r10
0x429b: mov rsi,qword ptr [rsp + 0x38]
0x42a0: call 0x2c70
0x42a5: mov eax,dword ptr [rsp + 0x2c]
0x42a9: add rsp,0x20
0x42ad: test r12,r12
0x42b0: mov dword ptr [r13],eax
0x42b4: jz 0x42bf
0x42b6: mov r11,qword ptr [rsp + 0x28]
0x42bb: mov qword ptr [r12],r11
0x42bf: mov rax,qword ptr [rsp + 0x10]
0x42c4: add rsp,0x38
0x42c8: pop rbx
0x42c9: pop rbp
0x42ca: pop r12
0x42cc: pop r13
0x42ce: pop r14
0x42d0: pop r15
0x42d2: ret 
0x42e0: mov rcx,rdx
0x42e3: xor edx,edx
0x42e5: jmp 0x41f0
0x42f0: mov eax,dword ptr [rip+0x203da2]
0x42f6: push r12
0x42f8: mov r12,qword ptr [rip+0x203da1]
0x42ff: push rbp
0x4300: push rbx
0x4301: cmp eax,0x1
0x4304: jle 0x4331
0x4306: sub eax,0x2
0x4309: lea rbx,[r12 + 0x18]
0x430e: shl rax,0x4
0x4312: lea rbp,[r12 + rax*0x1 + 0x28]
0x4317: nop word ptr [rax + rax*0x1]
0x4320: mov rdi,qword ptr [rbx]
0x4323: add rbx,0x10
0x4327: call 0x1480
0x432c: cmp rbx,rbp
0x432f: jnz 0x4320
0x4331: mov rdi,qword ptr [r12 + 0x8]
0x4336: lea rbx,[rip+0x203de3]
0x433d: cmp rdi,rbx
0x4340: jz 0x4359
0x4342: call 0x1480
0x4347: mov qword ptr [rip+0x203d5e],0x100
0x4352: mov qword ptr [rip+0x203d5f],rbx
0x4359: lea rbx,[rip+0x203d50]
0x4360: cmp r12,rbx
0x4363: jz 0x4374
0x4365: mov rdi,r12
0x4368: call 0x1480
0x436d: mov qword ptr [rip+0x203d2c],rbx
0x4374: pop rbx
0x4375: mov dword ptr [rip+0x203d19],0x1
0x437f: pop rbp
0x4380: pop r12
0x4382: ret 
0x4390: lea rcx,[rip+0x203e89]
0x4397: mov rdx,-0x1
0x439e: jmp 0x3eb0
0x43b0: lea rcx,[rip+0x203e69]
0x43b7: jmp 0x3eb0
0x43c0: lea rcx,[rip+0x203e59]
0x43c7: mov rsi,rdi
0x43ca: mov rdx,-0x1
0x43d1: xor edi,edi
0x43d3: jmp 0x3eb0
0x43e0: lea rcx,[rip+0x203e39]
0x43e7: mov rdx,rsi
0x43ea: mov rsi,rdi
0x43ed: xor edi,edi
0x43ef: jmp 0x3eb0
0x4484: call 0x1490
0x4489: call 0x1560
0x448e: nop 
0x4490: sub rsp,0x48
0x4494: mov rax,rdx
0x4497: mov rdx,rcx
0x449a: mov rcx,qword ptr fs:[rip+0xffffffffffffbb85]
0x44a3: mov qword ptr [rsp + 0x38],rcx
0x44a8: xor ecx,ecx
0x44aa: cmp esi,0xa
0x44ad: jz 0x4510
0x44af: mov dword ptr [rsp],esi
0x44b2: mov rcx,rsp
0x44b5: mov rsi,rax
0x44b8: mov qword ptr [rsp + 0x4],0x0
0x44c1: mov qword ptr [rsp + 0xc],0x0
0x44ca: mov qword ptr [rsp + 0x14],0x0
0x44d3: mov qword ptr [rsp + 0x1c],0x0
0x44dc: mov qword ptr [rsp + 0x24],0x0
0x44e5: mov qword ptr [rsp + 0x2c],0x0
0x44ee: mov dword ptr [rsp + 0x34],0x0
0x44f6: call 0x3eb0
0x44fb: mov rdx,qword ptr [rsp + 0x38]
0x4500: xor rdx,qword ptr fs:[rip+0xffffffffffffbb1f]
0x4509: jnz 0x4515
0x450b: add rsp,0x48
0x450f: ret 
0x4510: call 0x1490
0x4515: call 0x1560
0x451a: nop word ptr [rax + rax*0x1]
0x4530: mov rcx,rdx
0x4533: mov rdx,rsi
0x4536: mov esi,edi
0x4538: xor edi,edi
0x453a: jmp 0x4490
0x4540: sub rsp,0x48
0x4544: mov ecx,edx
0x4546: mov rax,qword ptr fs:[rip+0xffffffffffffbad9]
0x454f: mov qword ptr [rsp + 0x38],rax
0x4554: xor eax,eax
0x4556: mov rax,qword ptr [rip+0x203cf3]
0x455d: mov r8,rsp
0x4560: and ecx,0x1f
0x4563: movdqa xmm0,[rip+0x203cb5]
0x456b: mov qword ptr [rsp + 0x30],rax
0x4570: mov eax,edx
0x4572: movaps xmmword ptr [rsp],xmm0
0x4576: shr al,0x5
0x4579: movzx eax,al
0x457c: lea r9,[r8 + rax*0x4 + 0x8]
0x4581: movdqa xmm0,[rip+0x203ca7]
0x4589: movaps xmmword ptr [rsp + 0x10],xmm0
0x458e: movdqa xmm0,[rip+0x203caa]
0x4596: movaps xmmword ptr [rsp + 0x20],xmm0
0x459b: mov edx,dword ptr [r9]
0x459e: mov eax,edx
0x45a0: shr eax,cl
0x45a2: not eax
0x45a4: and eax,0x1
0x45a7: shl eax,cl
0x45a9: mov rcx,r8
0x45ac: xor eax,edx
0x45ae: mov rdx,rsi
0x45b1: mov rsi,rdi
0x45b4: mov dword ptr [r9],eax
0x45b7: xor edi,edi
0x45b9: call 0x3eb0
0x45be: mov rsi,qword ptr [rsp + 0x38]
0x45c3: xor rsi,qword ptr fs:[rip+0xffffffffffffba5c]
0x45cc: jnz 0x45d3
0x45ce: add rsp,0x48
0x45d2: ret 
0x45d3: call 0x1560
0x45d8: nop dword ptr [rax + rax*0x1]
0x45e0: movsx edx,sil
0x45e4: mov rsi,-0x1
0x45eb: jmp 0x4540
0x45f0: mov edx,0x3a
0x45f5: mov rsi,-0x1
0x45fc: jmp 0x4540
0x4610: mov edx,0x3a
0x4615: jmp 0x4540
0x46a4: call 0x1490
0x46a9: call 0x1560
0x46ae: nop 
0x46b0: sub rsp,0x48
0x46b4: mov r9,rcx
0x46b7: mov rcx,qword ptr [rip+0x203b92]
0x46be: movdqa xmm0,[rip+0x203b5a]
0x46c6: mov rax,qword ptr fs:[rip+0xffffffffffffb959]
0x46cf: mov qword ptr [rsp + 0x38],rax
0x46d4: xor eax,eax
0x46d6: movaps xmmword ptr [rsp],xmm0
0x46da: test rsi,rsi
0x46dd: mov qword ptr [rsp + 0x30],rcx
0x46e2: mov dword ptr [rsp],0xa
0x46e9: movdqa xmm0,[rip+0x203b3f]
0x46f1: movaps xmmword ptr [rsp + 0x10],xmm0
0x46f6: movdqa xmm0,[rip+0x203b42]
0x46fe: movaps xmmword ptr [rsp + 0x20],xmm0
0x4703: jz 0x4737
0x4705: test rdx,rdx
0x4708: jz 0x4737
0x470a: mov qword ptr [rsp + 0x28],rsi
0x470f: mov qword ptr [rsp + 0x30],rdx
0x4714: mov rcx,rsp
0x4717: mov rdx,r8
0x471a: mov rsi,r9
0x471d: call 0x3eb0
0x4722: mov rdi,qword ptr [rsp + 0x38]
0x4727: xor rdi,qword ptr fs:[rip+0xffffffffffffb8f8]
0x4730: jnz 0x473c
0x4732: add rsp,0x48
0x4736: ret 
0x4737: call 0x1490
0x473c: call 0x1560
0x4741: nop dword ptr [rax + rax*0x1]
0x4746: nop word ptr cs:[rax + rax*0x1]
0x4750: mov r8,-0x1
0x4757: jmp 0x46b0
0x4760: mov rcx,rdx
0x4763: mov r8,-0x1
0x476a: mov rdx,rsi
0x476d: mov rsi,rdi
0x4770: xor edi,edi
0x4772: jmp 0x46b0
0x4780: mov r8,rcx
0x4783: mov rcx,rdx
0x4786: mov rdx,rsi
0x4789: mov rsi,rdi
0x478c: xor edi,edi
0x478e: jmp 0x46b0
0x47a0: lea rcx,[rip+0x2038b9]
0x47a7: jmp 0x3eb0
0x47b0: lea rcx,[rip+0x2038a9]
0x47b7: mov rdx,rsi
0x47ba: mov rsi,rdi
0x47bd: xor edi,edi
0x47bf: jmp 0x3eb0
0x47d0: lea rcx,[rip+0x203889]
0x47d7: mov rdx,-0x1
0x47de: jmp 0x3eb0
0x47f0: lea rcx,[rip+0x203869]
0x47f7: mov rsi,rdi
0x47fa: mov rdx,-0x1
0x4801: xor edi,edi
0x4803: jmp 0x3eb0
0x4a08: mov r8,rcx
0x4a0b: mov rcx,rdx
0x4a0e: lea rdx,[rip+0x165f]
0x4a15: mov esi,0x1
0x4a1a: xor eax,eax
0x4a1c: call 0x1750
0x4a21: jmp 0x490c
0x4cf0: xor r9d,r9d
0x4cf3: cmp qword ptr [r8],0x0
0x4cf7: jz 0x4d0b
0x4cf9: nop dword ptr [rax]
0x4d00: add r9,0x1
0x4d04: cmp qword ptr [r8 + r9*0x8],0x0
0x4d09: jnz 0x4d00
0x4d0b: jmp 0x48d0
0x4d10: sub rsp,0x68
0x4d14: mov r10,r8
0x4d17: xor r9d,r9d
0x4d1a: mov rax,qword ptr fs:[rip+0xffffffffffffb305]
0x4d23: mov qword ptr [rsp + 0x58],rax
0x4d28: xor eax,eax
0x4d2a: mov r8,rsp
0x4d2d: nop dword ptr [rax]
0x4d30: mov eax,dword ptr [r10]
0x4d33: cmp eax,0x2f
0x4d36: ja 0x4d7a
0x4d38: mov r11d,eax
0x4d3b: add r11,qword ptr [r10 + 0x10]
0x4d3f: add eax,0x8
0x4d42: mov dword ptr [r10],eax
0x4d45: mov rax,qword ptr [r11]
0x4d48: test rax,rax
0x4d4b: mov qword ptr [r8 + r9*0x8],rax
0x4d4f: jz 0x4d5b
0x4d51: add r9,0x1
0x4d55: cmp r9,0xa
0x4d59: jnz 0x4d30
0x4d5b: call 0x48d0
0x4d60: mov rax,qword ptr [rsp + 0x58]
0x4d65: xor rax,qword ptr fs:[rip+0xffffffffffffb2ba]
0x4d6e: jnz 0x4d75
0x4d70: add rsp,0x68
0x4d74: ret 
0x4d75: call 0x1560
0x4d7a: mov r11,qword ptr [r10 + 0x8]
0x4d7e: lea rax,[r11 + 0x8]
0x4d82: mov qword ptr [r10 + 0x8],rax
0x4d86: jmp 0x4d45
0x4e50: call 0x1560
0x4e5c: mov rax,rbx
0x4e5f: add rbx,0x8
0x4e63: jmp 0x4e16
0x4e70: push rbx
0x4e71: lea rsi,[rip+0x124a]
0x4e78: mov edx,0x5
0x4e7d: xor edi,edi
0x4e7f: call 0x1530
0x4e84: lea rdx,[rip+0x124c]
0x4e8b: mov rsi,rax
0x4e8e: mov edi,0x1
0x4e93: xor eax,eax
0x4e95: call 0x16c0
0x4e9a: lea rsi,[rip+0x124c]
0x4ea1: mov edx,0x5
0x4ea6: xor edi,edi
0x4ea8: call 0x1530
0x4ead: lea rcx,[rip+0xbe4]
0x4eb4: lea rdx,[rip+0x6cf]
0x4ebb: mov rsi,rax
0x4ebe: mov edi,0x1
0x4ec3: xor eax,eax
0x4ec5: call 0x16c0
0x4eca: mov rbx,qword ptr [rip+0x2031f7]
0x4ed1: lea rsi,[rip+0x1448]
0x4ed8: xor edi,edi
0x4eda: mov edx,0x5
0x4edf: call 0x1530
0x4ee4: mov rsi,rbx
0x4ee7: mov rdi,rax
0x4eea: pop rbx
0x4eeb: jmp 0x1610
0x4f0a: nop word ptr [rax + rax*0x1]
0x4f10: mov rax,rdi
0x4f13: mul rsi
0x4f16: mov rdi,rax
0x4f19: seto al
0x4f1c: test rdi,rdi
0x4f1f: js 0x4f2b
0x4f21: movzx eax,al
0x4f24: test rax,rax
0x4f27: jnz 0x4f2b
0x4f29: jmp 0x4ef0
0x4f2b: sub rsp,0x8
0x4f2f: call 0x5140
0x4f34: nop 
0x4f36: nop word ptr cs:[rax + rax*0x1]
0x4f40: jmp 0x4ef0
0x4f59: test rdi,rdi
0x4f5c: jnz 0x4f78
0x4f78: call 0x1480
0x4f7d: xor eax,eax
0x4f7f: pop rbx
0x4f80: ret 
0x4f86: nop word ptr cs:[rax + rax*0x1]
0x4f90: mov rax,rsi
0x4f93: mul rdx
0x4f96: mov rsi,rax
0x4f99: seto al
0x4f9c: test rsi,rsi
0x4f9f: js 0x4fab
0x4fa1: movzx eax,al
0x4fa4: test rax,rax
0x4fa7: jnz 0x4fab
0x4fa9: jmp 0x4f50
0x4fab: sub rsp,0x8
0x4faf: call 0x5140
0x4fb4: nop 
0x4fb6: nop word ptr cs:[rax + rax*0x1]
0x4fc0: test rdi,rdi
0x4fc3: mov r9,rdx
0x4fc6: mov rcx,qword ptr [rsi]
0x4fc9: jz 0x5000
0x4fcb: xor edx,edx
0x4fcd: mov rax,0x5555555555555554
0x4fd7: div r9
0x4fda: cmp rax,rcx
0x4fdd: jbe 0x501b
0x4fdf: mov rax,rcx
0x4fe2: shr rax,1
0x4fe5: lea rcx,[rax + rcx*0x1 + 0x1]
0x4fea: mov qword ptr [rsi],rcx
0x4fed: imul rcx,r9
0x4ff1: mov rsi,rcx
0x4ff4: jmp 0x4f50
0x5000: test rcx,rcx
0x5003: jz 0x5028
0x5005: mov rax,rcx
0x5008: mul r9
0x500b: seto dl
0x500e: test rax,rax
0x5011: movzx edx,dl
0x5014: js 0x501b
0x5016: test rdx,rdx
0x5019: jz 0x4fea
0x501b: sub rsp,0x8
0x501f: call 0x5140
0x5024: nop dword ptr [rax]
0x5028: xor edx,edx
0x502a: mov eax,0x80
0x502f: xor r8d,r8d
0x5032: div r9
0x5035: test rax,rax
0x5038: setz r8b
0x503c: lea rcx,[r8 + rax*0x1]
0x5040: jmp 0x5005
0x5050: test rdi,rdi
0x5053: mov rax,qword ptr [rsi]
0x5056: jz 0x5080
0x5058: mov rdx,0x5555555555555553
0x5062: cmp rax,rdx
0x5065: ja 0x5091
0x5067: mov rdx,rax
0x506a: shr rdx,1
0x506d: lea rax,[rdx + rax*0x1 + 0x1]
0x5072: mov qword ptr [rsi],rax
0x5075: mov rsi,rax
0x5078: jmp 0x4f50
0x5080: test rax,rax
0x5083: mov edx,0x80
0x5088: cmovz rax,rdx
0x508c: test rax,rax
0x508f: jns 0x5072
0x5091: sub rsp,0x8
0x5095: call 0x5140
0x509a: nop word ptr [rax + rax*0x1]
0x50a0: push rbx
0x50a1: mov rbx,rdi
0x50a4: call 0x4ef0
0x50a9: mov rdx,rbx
0x50ac: xor esi,esi
0x50ae: mov rdi,rax
0x50b1: pop rbx
0x50b2: jmp 0x15b0
0x50c0: mov rax,rdi
0x50c3: sub rsp,0x8
0x50c7: mul rsi
0x50ca: seto dl
0x50cd: test rax,rax
0x50d0: js 0x50e9
0x50d2: movzx edx,dl
0x50d5: test rdx,rdx
0x50d8: jnz 0x50e9
0x50da: call 0x1620
0x50df: test rax,rax
0x50e2: jz 0x50e9
0x50e4: add rsp,0x8
0x50e8: ret 
0x50e9: call 0x5140
0x50ee: nop 
0x50f0: push rbp
0x50f1: push rbx
0x50f2: mov rbp,rdi
0x50f5: mov rdi,rsi
0x50f8: mov rbx,rsi
0x50fb: sub rsp,0x8
0x50ff: call 0x4ef0
0x5104: add rsp,0x8
0x5108: mov rdx,rbx
0x510b: mov rsi,rbp
0x510e: pop rbx
0x510f: pop rbp
0x5110: mov rdi,rax
0x5113: jmp 0x1630
0x5120: push rbx
0x5121: mov rbx,rdi
0x5124: call 0x1550
0x5129: mov rdi,rbx
0x512c: lea rsi,[rax + 0x1]
0x5130: pop rbx
0x5131: jmp 0x50f0
0x5170: call 0x1490
0x5175: nop word ptr cs:[rax + rax*0x1]
0x517f: nop 
0x51fe: call 0x1560
0x5203: nop word ptr cs:[rax + rax*0x1]
0x520d: nop dword ptr [rax]
0x5210: push r12
0x5212: push rbp
0x5213: mov rbp,rdi
0x5216: push rbx
0x5217: call 0x14d0
0x521c: mov ebx,dword ptr [rbp]
0x521f: mov rdi,rbp
0x5222: mov r12,rax
0x5225: call 0x5330
0x522a: and ebx,0x20
0x522d: test ebx,ebx
0x522f: jnz 0x5248
0x5231: test eax,eax
0x5233: jz 0x523f
0x5235: test r12,r12
0x5238: mov eax,0xffffffff
0x523d: jz 0x5278
0x523f: pop rbx
0x5240: pop rbp
0x5241: pop r12
0x5243: ret 
0x5248: test eax,eax
0x524a: jnz 0x5268
0x524c: call 0x14a0
0x5251: mov dword ptr [rax],0x0
0x5257: mov eax,0xffffffff
0x525c: pop rbx
0x525d: pop rbp
0x525e: pop r12
0x5260: ret 
0x5268: pop rbx
0x5269: mov eax,0xffffffff
0x526e: pop rbp
0x526f: pop r12
0x5271: ret 
0x5278: call 0x14a0
0x527d: cmp dword ptr [rax],0x9
0x5280: pop rbx
0x5281: pop rbp
0x5282: pop r12
0x5284: setnz al
0x5287: movzx eax,al
0x528a: neg eax
0x528c: ret 
0x5330: push r12
0x5332: push rbp
0x5333: push rbx
0x5334: mov rbx,rdi
0x5337: call 0x1640
0x533c: test eax,eax
0x533e: mov rdi,rbx
0x5341: js 0x5397
0x5343: call 0x1690
0x5348: test eax,eax
0x534a: jnz 0x5378
0x534c: mov rdi,rbx
0x534f: call 0x53b0
0x5354: test eax,eax
0x5356: jz 0x5394
0x5358: call 0x14a0
0x535d: mov r12d,dword ptr [rax]
0x5360: mov rdi,rbx
0x5363: mov rbp,rax
0x5366: call 0x1500
0x536b: test r12d,r12d
0x536e: jnz 0x53a0
0x5370: pop rbx
0x5371: pop rbp
0x5372: pop r12
0x5374: ret 
0x5378: mov rdi,rbx
0x537b: call 0x1640
0x5380: xor esi,esi
0x5382: mov edx,0x1
0x5387: mov edi,eax
0x5389: call 0x15a0
0x538e: cmp rax,-0x1
0x5392: jnz 0x534c
0x5394: mov rdi,rbx
0x5397: pop rbx
0x5398: pop rbp
0x5399: pop r12
0x539b: jmp 0x1500
0x53a0: mov dword ptr [rbp],r12d
0x53a4: mov eax,0xffffffff
0x53a9: jmp 0x5370
0x53b0: test rdi,rdi
0x53b3: push rbx
0x53b4: mov rbx,rdi
0x53b7: jz 0x53ca
0x53b9: call 0x1690
0x53be: test eax,eax
0x53c0: jz 0x53ca
0x53c2: test dword ptr [rbx],0x100
0x53c8: jnz 0x53d8
0x53ca: mov rdi,rbx
0x53cd: pop rbx
0x53ce: jmp 0x1660
0x53d8: mov rdi,rbx
0x53db: mov edx,0x1
0x53e0: xor esi,esi
0x53e2: call 0x53f0
0x53e7: mov rdi,rbx
0x53ea: pop rbx
0x53eb: jmp 0x1660
0x53f0: mov rax,qword ptr [rdi + 0x8]
0x53f4: cmp qword ptr [rdi + 0x10],rax
0x53f8: jz 0x5400
0x53fa: jmp 0x1700
0x5400: mov rax,qword ptr [rdi + 0x20]
0x5404: cmp qword ptr [rdi + 0x28],rax
0x5408: jnz 0x53fa
0x540a: cmp qword ptr [rdi + 0x48],0x0
0x540f: jnz 0x53fa
0x5411: push r12
0x5413: push rbp
0x5414: mov r12d,edx
0x5417: push rbx
0x5418: mov rbp,rsi
0x541b: mov rbx,rdi
0x541e: call 0x1640
0x5423: mov edx,r12d
0x5426: mov rsi,rbp
0x5429: mov edi,eax
0x542b: call 0x15a0
0x5430: cmp rax,-0x1
0x5434: jz 0x5442
0x5436: and dword ptr [rbx],0xffffffef
0x5439: mov qword ptr [0x90 + rbx],rax
0x5440: xor eax,eax
0x5442: pop rbx
0x5443: pop rbp
0x5444: pop r12
0x5446: ret 
0x5450: push r15
0x5452: push r14
0x5454: mov r15,rdx
0x5457: push r13
0x5459: push r12
0x545b: lea r12,[rip+0x20262e]
0x5462: push rbp
0x5463: lea rbp,[rip+0x20262e]
0x546a: push rbx
0x546b: mov r13d,edi
0x546e: mov r14,rsi
0x5471: sub rbp,r12
0x5474: sub rsp,0x8
0x5478: sar rbp,0x3
0x547c: call 0x1450
0x5481: test rbp,rbp
0x5484: jz 0x54a6
0x5486: xor ebx,ebx
0x5488: nop dword ptr [rax + rax*0x1]
0x5490: mov rdx,r15
0x5493: mov rsi,r14
0x5496: mov edi,r13d
0x5499: call qword ptr [r12 + rbx*0x8]
0x549d: add rbx,0x1
0x54a1: cmp rbp,rbx
0x54a4: jnz 0x5490
0x54a6: add rsp,0x8
0x54aa: pop rbx
0x54ab: pop rbp
0x54ac: pop r12
0x54ae: pop r13
0x54b0: pop r14
0x54b2: pop r15
0x54b4: ret 
0x54c0: ret 
0x54e0: sub rsp,0x8
0x54e4: add rsp,0x8
0x54e8: ret 
