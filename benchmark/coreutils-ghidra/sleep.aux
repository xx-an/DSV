0x1270: sub rsp,0x8
0x1274: mov rax,qword ptr [rip+0x205d6d]
0x127b: test rax,rax
0x127e: jz 0x1282
0x1280: call rax
0x1282: add rsp,0x8
0x1286: ret 
0x1290: push qword ptr [rip+0x205bda]
0x1296: jmp qword ptr [rip+0x205bdc]
0x12a6: push 0x0
0x12ab: jmp 0x1290
0x12b6: push 0x1
0x12bb: jmp 0x1290
0x12c6: push 0x2
0x12cb: jmp 0x1290
0x12d6: push 0x3
0x12db: jmp 0x1290
0x12e0: jmp qword ptr [rip+0x205bba]
0x12e6: push 0x4
0x12eb: jmp 0x1290
0x12f0: jmp qword ptr [rip+0x205bb2]
0x12f6: push 0x5
0x12fb: jmp 0x1290
0x1306: push 0x6
0x130b: jmp 0x1290
0x1316: push 0x7
0x131b: jmp 0x1290
0x1326: push 0x8
0x132b: jmp 0x1290
0x1330: jmp qword ptr [rip+0x205b92]
0x1336: push 0x9
0x133b: jmp 0x1290
0x1346: push 0xa
0x134b: jmp 0x1290
0x1356: push 0xb
0x135b: jmp 0x1290
0x1366: push 0xc
0x136b: jmp 0x1290
0x1376: push 0xd
0x137b: jmp 0x1290
0x1386: push 0xe
0x138b: jmp 0x1290
0x1396: push 0xf
0x139b: jmp 0x1290
0x13a6: push 0x10
0x13ab: jmp 0x1290
0x13b6: push 0x11
0x13bb: jmp 0x1290
0x13c6: push 0x12
0x13cb: jmp 0x1290
0x13d6: push 0x13
0x13db: jmp 0x1290
0x13e0: jmp qword ptr [rip+0x205b3a]
0x13e6: push 0x14
0x13eb: jmp 0x1290
0x13f6: push 0x15
0x13fb: jmp 0x1290
0x1406: push 0x16
0x140b: jmp 0x1290
0x1416: push 0x17
0x141b: jmp 0x1290
0x1420: jmp qword ptr [rip+0x205b1a]
0x1426: push 0x18
0x142b: jmp 0x1290
0x1430: jmp qword ptr [rip+0x205b12]
0x1436: push 0x19
0x143b: jmp 0x1290
0x1440: jmp qword ptr [rip+0x205b0a]
0x1446: push 0x1a
0x144b: jmp 0x1290
0x1456: push 0x1b
0x145b: jmp 0x1290
0x1460: jmp qword ptr [rip+0x205afa]
0x1466: push 0x1c
0x146b: jmp 0x1290
0x1476: push 0x1d
0x147b: jmp 0x1290
0x1480: jmp qword ptr [rip+0x205aea]
0x1486: push 0x1e
0x148b: jmp 0x1290
0x1496: push 0x1f
0x149b: jmp 0x1290
0x14a6: push 0x20
0x14ab: jmp 0x1290
0x14b6: push 0x21
0x14bb: jmp 0x1290
0x14c6: push 0x22
0x14cb: jmp 0x1290
0x14d0: jmp qword ptr [rip+0x205ac2]
0x14d6: push 0x23
0x14db: jmp 0x1290
0x14e6: push 0x24
0x14eb: jmp 0x1290
0x14f6: push 0x25
0x14fb: jmp 0x1290
0x1506: push 0x26
0x150b: jmp 0x1290
0x1516: push 0x27
0x151b: jmp 0x1290
0x1526: push 0x28
0x152b: jmp 0x1290
0x1536: push 0x29
0x153b: jmp 0x1290
0x1546: push 0x2a
0x154b: jmp 0x1290
0x1550: jmp qword ptr [rip+0x205aa2]
0x1698: movsd xmm0,qword ptr [rsp + 0x18]
0x177e: mov edi,0x1
0x1783: call 0x1900
0x1788: call 0x1380
0x17da: mov edi,0x1
0x17df: call 0x1900
0x17e4: nop word ptr cs:[rax + rax*0x1]
0x17ee: nop 
0x181a: hlt 
0x1820: lea rdi,[rip+0x205859]
0x1827: push rbp
0x1828: lea rax,[rip+0x205851]
0x182f: cmp rax,rdi
0x1832: mov rbp,rsp
0x1835: jz 0x1850
0x1837: mov rax,qword ptr [rip+0x20579a]
0x183e: test rax,rax
0x1841: jz 0x1850
0x1843: pop rbp
0x1844: jmp rax
0x1850: pop rbp
0x1851: ret 
0x1860: lea rdi,[rip+0x205819]
0x1867: lea rsi,[rip+0x205812]
0x186e: push rbp
0x186f: sub rsi,rdi
0x1872: mov rbp,rsp
0x1875: sar rsi,0x3
0x1879: mov rax,rsi
0x187c: shr rax,0x3f
0x1880: add rsi,rax
0x1883: sar rsi,1
0x1886: jz 0x18a0
0x1888: mov rax,qword ptr [rip+0x205761]
0x188f: test rax,rax
0x1892: jz 0x18a0
0x1894: pop rbp
0x1895: jmp rax
0x18a0: pop rbp
0x18a1: ret 
0x18b0: cmp byte ptr [rip+0x205811],0x0
0x18b7: jnz 0x18e8
0x18b9: cmp qword ptr [rip+0x205737],0x0
0x18c1: push rbp
0x18c2: mov rbp,rsp
0x18c5: jz 0x18d3
0x18c7: mov rdi,qword ptr [rip+0x20573a]
0x18ce: call 0x1550
0x18d3: call 0x1820
0x18d8: mov byte ptr [rip+0x2057e9],0x1
0x18df: pop rbp
0x18e0: ret 
0x18e8: ret 
0x18f0: push rbp
0x18f1: mov rbp,rsp
0x18f4: pop rbp
0x18f5: jmp 0x1860
0x1cd3: nop word ptr cs:[rax + rax*0x1]
0x1cdd: nop dword ptr [rax]
0x1ce0: mov qword ptr [rip+0x2053f1],rdi
0x1ce7: ret 
0x1cf0: mov byte ptr [rip+0x2053d9],dil
0x1cf7: ret 
0x1d00: push rbp
0x1d01: push rbx
0x1d02: sub rsp,0x8
0x1d06: mov rdi,qword ptr [rip+0x20537b]
0x1d0d: call 0x4930
0x1d12: test eax,eax
0x1d14: jz 0x1d2c
0x1d16: call 0x12c0
0x1d1b: cmp byte ptr [rip+0x2053ae],0x0
0x1d22: mov rbx,rax
0x1d25: jz 0x1d43
0x1d27: cmp dword ptr [rax],0x20
0x1d2a: jnz 0x1d43
0x1d2c: mov rdi,qword ptr [rip+0x20538d]
0x1d33: call 0x4930
0x1d38: test eax,eax
0x1d3a: jnz 0x1d82
0x1d3c: add rsp,0x8
0x1d40: pop rbx
0x1d41: pop rbp
0x1d42: ret 
0x1d43: lea rsi,[rip+0x333b]
0x1d4a: xor edi,edi
0x1d4c: mov edx,0x5
0x1d51: call 0x1350
0x1d56: mov rdi,qword ptr [rip+0x20537b]
0x1d5d: mov rbp,rax
0x1d60: test rdi,rdi
0x1d63: jz 0x1d8d
0x1d65: call 0x3b40
0x1d6a: mov esi,dword ptr [rbx]
0x1d6c: lea rdx,[rip+0x331e]
0x1d73: mov rcx,rax
0x1d76: mov r8,rbp
0x1d79: xor edi,edi
0x1d7b: xor eax,eax
0x1d7d: call 0x14c0
0x1d82: mov edi,dword ptr [rip+0x205290]
0x1d88: call 0x12e0
0x1d8d: mov esi,dword ptr [rbx]
0x1d8f: lea rdx,[rip+0x32ff]
0x1d96: mov rcx,rax
0x1d99: xor edi,edi
0x1d9b: xor eax,eax
0x1d9d: call 0x14c0
0x1da2: jmp 0x1d82
0x1db0: push r13
0x1db2: push r12
0x1db4: mov r13,r8
0x1db7: push rbp
0x1db8: push rbx
0x1db9: mov rbp,rdx
0x1dbc: mov r12,rcx
0x1dbf: sub rsp,0xe8
0x1dc6: test al,al
0x1dc8: jz 0x1e04
0x1dca: movaps xmmword ptr [rsp + 0x60],xmm0
0x1dcf: movaps xmmword ptr [rsp + 0x70],xmm1
0x1dd4: movaps xmmword ptr [0x80 + rsp],xmm2
0x1ddc: movaps xmmword ptr [0x90 + rsp],xmm3
0x1de4: movaps xmmword ptr [0xa0 + rsp],xmm4
0x1dec: movaps xmmword ptr [0xb0 + rsp],xmm5
0x1df4: movaps xmmword ptr [0xc0 + rsp],xmm6
0x1dfc: movaps xmmword ptr [0xd0 + rsp],xmm7
0x1e04: mov rax,qword ptr fs:[rip+0xffffffffffffe21b]
0x1e0d: mov qword ptr [rsp + 0x28],rax
0x1e12: xor eax,eax
0x1e14: cmp edi,0x2
0x1e17: mov ebx,dword ptr [rip+0x205283]
0x1e1d: mov dword ptr [rip+0x205279],0x0
0x1e27: jz 0x1e60
0x1e29: mov rax,qword ptr [rsp + 0x28]
0x1e2e: xor rax,qword ptr fs:[rip+0xffffffffffffe1f1]
0x1e37: mov dword ptr [rip+0x205263],ebx
0x1e3d: mov dword ptr [rip+0x205249],0x0
0x1e47: jnz 0x1eea
0x1e4d: add rsp,0xe8
0x1e54: pop rbx
0x1e55: pop rbp
0x1e56: pop r12
0x1e58: pop r13
0x1e5a: ret 
0x1e60: lea rcx,[rip+0x204d59]
0x1e67: lea rdx,[rip+0x322a]
0x1e6e: xor r8d,r8d
0x1e71: mov qword ptr [rsp + 0x8],r9
0x1e76: call 0x1390
0x1e7b: cmp eax,-0x1
0x1e7e: jz 0x1e29
0x1e80: cmp eax,0x68
0x1e83: mov r9,qword ptr [rsp + 0x8]
0x1e88: jz 0x1ee0
0x1e8a: cmp eax,0x76
0x1e8d: jnz 0x1e29
0x1e8f: lea rax,[0x110 + rsp]
0x1e97: mov rdi,qword ptr [rip+0x2051ea]
0x1e9e: lea r8,[rsp + 0x10]
0x1ea3: mov rcx,r13
0x1ea6: mov rdx,r12
0x1ea9: mov rsi,rbp
0x1eac: mov qword ptr [rsp + 0x18],rax
0x1eb1: lea rax,[rsp + 0x30]
0x1eb6: mov dword ptr [rsp + 0x10],0x30
0x1ebe: mov dword ptr [rsp + 0x14],0x30
0x1ec6: mov qword ptr [rsp + 0x20],rax
0x1ecb: call 0x41a0
0x1ed0: xor edi,edi
0x1ed2: call 0x14f0
0x1ee0: xor edi,edi
0x1ee2: call r9
0x1ee5: jmp 0x1e29
0x1eea: call 0x1380
0x1eef: nop 
0x1f14: movaps xmmword ptr [rsp + 0x50],xmm0
0x1f19: movaps xmmword ptr [rsp + 0x60],xmm1
0x1f1e: movaps xmmword ptr [rsp + 0x70],xmm2
0x1f23: movaps xmmword ptr [0x80 + rsp],xmm3
0x1f2b: movaps xmmword ptr [0x90 + rsp],xmm4
0x1f33: movaps xmmword ptr [0xa0 + rsp],xmm5
0x1f3b: movaps xmmword ptr [0xb0 + rsp],xmm6
0x1f43: movaps xmmword ptr [0xc0 + rsp],xmm7
0x2024: jmp 0x1ff8
0x2026: call 0x1380
0x202b: nop dword ptr [rax + rax*0x1]
0x20cf: nop 
0x33b3: call 0x1380
0x33f4: nop 
0x33f6: nop word ptr cs:[rax + rax*0x1]
0x35a1: call 0x12b0
0x35a6: call 0x45d0
0x35ab: nop dword ptr [rax + rax*0x1]
0x35b0: push r12
0x35b2: push rbp
0x35b3: push rbx
0x35b4: mov rbx,rdi
0x35b7: call 0x12c0
0x35bc: mov r12d,dword ptr [rax]
0x35bf: mov rbp,rax
0x35c2: lea rax,[rip+0x203c37]
0x35c9: test rbx,rbx
0x35cc: mov esi,0x38
0x35d1: cmovz rbx,rax
0x35d5: mov rdi,rbx
0x35d8: call 0x4580
0x35dd: mov dword ptr [rbp],r12d
0x35e1: pop rbx
0x35e2: pop rbp
0x35e3: pop r12
0x35e5: ret 
0x35f0: lea rax,[rip+0x203c09]
0x35f7: test rdi,rdi
0x35fa: cmovz rdi,rax
0x35fe: mov eax,dword ptr [rdi]
0x3600: ret 
0x3610: lea rax,[rip+0x203be9]
0x3617: test rdi,rdi
0x361a: cmovz rdi,rax
0x361e: mov dword ptr [rdi],esi
0x3620: ret 
0x3630: lea rax,[rip+0x203bc9]
0x3637: test rdi,rdi
0x363a: mov ecx,esi
0x363c: cmovz rdi,rax
0x3640: mov eax,esi
0x3642: and ecx,0x1f
0x3645: shr al,0x5
0x3648: movzx eax,al
0x364b: lea rdi,[rdi + rax*0x4 + 0x8]
0x3650: mov esi,dword ptr [rdi]
0x3652: mov eax,esi
0x3654: shr eax,cl
0x3656: xor edx,eax
0x3658: and eax,0x1
0x365b: and edx,0x1
0x365e: shl edx,cl
0x3660: xor edx,esi
0x3662: mov dword ptr [rdi],edx
0x3664: ret 
0x3670: lea rax,[rip+0x203b89]
0x3677: test rdi,rdi
0x367a: cmovz rdi,rax
0x367e: mov eax,dword ptr [rdi + 0x4]
0x3681: mov dword ptr [rdi + 0x4],esi
0x3684: ret 
0x3690: lea rax,[rip+0x203b69]
0x3697: test rdi,rdi
0x369a: cmovz rdi,rax
0x369e: test rsi,rsi
0x36a1: mov dword ptr [rdi],0xa
0x36a7: jz 0x36b7
0x36a9: test rdx,rdx
0x36ac: jz 0x36b7
0x36ae: mov qword ptr [rdi + 0x28],rsi
0x36b2: mov qword ptr [rdi + 0x30],rdx
0x36b6: ret 
0x36b7: sub rsp,0x8
0x36bb: call 0x12b0
0x36c0: push r15
0x36c2: push r14
0x36c4: lea rax,[rip+0x203b35]
0x36cb: push r13
0x36cd: push r12
0x36cf: mov r13,rdi
0x36d2: push rbp
0x36d3: push rbx
0x36d4: mov rbx,r8
0x36d7: mov r14,rsi
0x36da: mov r15,rdx
0x36dd: sub rsp,0x18
0x36e1: test r8,r8
0x36e4: cmovz rbx,rax
0x36e8: mov qword ptr [rsp + 0x8],rcx
0x36ed: call 0x12c0
0x36f2: mov r12d,dword ptr [rax]
0x36f5: mov rbp,rax
0x36f8: lea rax,[rbx + 0x8]
0x36fc: sub rsp,0x8
0x3700: mov r9d,dword ptr [rbx + 0x4]
0x3704: push qword ptr [rbx + 0x30]
0x3707: mov r8d,dword ptr [rbx]
0x370a: push qword ptr [rbx + 0x28]
0x370d: mov rdx,r15
0x3710: push rax
0x3711: mov rcx,qword ptr [rsp + 0x28]
0x3716: mov rsi,r14
0x3719: mov rdi,r13
0x371c: call 0x21c0
0x3721: mov dword ptr [rbp],r12d
0x3725: add rsp,0x38
0x3729: pop rbx
0x372a: pop rbp
0x372b: pop r12
0x372d: pop r13
0x372f: pop r14
0x3731: pop r15
0x3733: ret 
0x3740: push r15
0x3742: push r14
0x3744: lea rax,[rip+0x203ab5]
0x374b: push r13
0x374d: push r12
0x374f: mov r12,rdx
0x3752: push rbp
0x3753: push rbx
0x3754: mov rbx,rcx
0x3757: mov r14,rdi
0x375a: mov r15,rsi
0x375d: sub rsp,0x38
0x3761: test rcx,rcx
0x3764: cmovz rbx,rax
0x3768: xor ebp,ebp
0x376a: call 0x12c0
0x376f: test r12,r12
0x3772: mov r13,rax
0x3775: mov eax,dword ptr [rax]
0x3777: setz bpl
0x377b: or ebp,dword ptr [rbx + 0x4]
0x377e: lea r10,[rbx + 0x8]
0x3782: sub rsp,0x8
0x3786: mov r8d,dword ptr [rbx]
0x3789: mov rcx,r15
0x378c: mov dword ptr [rsp + 0x14],eax
0x3790: push qword ptr [rbx + 0x30]
0x3793: mov rdx,r14
0x3796: push qword ptr [rbx + 0x28]
0x3799: push r10
0x379b: xor esi,esi
0x379d: mov r9d,ebp
0x37a0: xor edi,edi
0x37a2: mov qword ptr [rsp + 0x40],r10
0x37a7: call 0x21c0
0x37ac: lea rsi,[rax + 0x1]
0x37b0: mov qword ptr [rsp + 0x48],rax
0x37b5: add rsp,0x20
0x37b9: mov rdi,rsi
0x37bc: mov qword ptr [rsp + 0x18],rsi
0x37c1: call 0x4380
0x37c6: mov qword ptr [rsp + 0x10],rax
0x37cb: sub rsp,0x8
0x37cf: push qword ptr [rbx + 0x30]
0x37d2: push qword ptr [rbx + 0x28]
0x37d5: mov r10,qword ptr [rsp + 0x38]
0x37da: mov r9d,ebp
0x37dd: mov r8d,dword ptr [rbx]
0x37e0: mov rcx,r15
0x37e3: mov rdx,r14
0x37e6: mov rdi,rax
0x37e9: push r10
0x37eb: mov rsi,qword ptr [rsp + 0x38]
0x37f0: call 0x21c0
0x37f5: mov eax,dword ptr [rsp + 0x2c]
0x37f9: add rsp,0x20
0x37fd: test r12,r12
0x3800: mov dword ptr [r13],eax
0x3804: jz 0x380f
0x3806: mov r11,qword ptr [rsp + 0x28]
0x380b: mov qword ptr [r12],r11
0x380f: mov rax,qword ptr [rsp + 0x10]
0x3814: add rsp,0x38
0x3818: pop rbx
0x3819: pop rbp
0x381a: pop r12
0x381c: pop r13
0x381e: pop r14
0x3820: pop r15
0x3822: ret 
0x3830: mov rcx,rdx
0x3833: xor edx,edx
0x3835: jmp 0x3740
0x3840: mov eax,dword ptr [rip+0x203812]
0x3846: push r12
0x3848: mov r12,qword ptr [rip+0x203811]
0x384f: push rbp
0x3850: push rbx
0x3851: cmp eax,0x1
0x3854: jle 0x3881
0x3856: sub eax,0x2
0x3859: lea rbx,[r12 + 0x18]
0x385e: shl rax,0x4
0x3862: lea rbp,[r12 + rax*0x1 + 0x28]
0x3867: nop word ptr [rax + rax*0x1]
0x3870: mov rdi,qword ptr [rbx]
0x3873: add rbx,0x10
0x3877: call 0x12a0
0x387c: cmp rbx,rbp
0x387f: jnz 0x3870
0x3881: mov rdi,qword ptr [r12 + 0x8]
0x3886: lea rbx,[rip+0x203873]
0x388d: cmp rdi,rbx
0x3890: jz 0x38a9
0x3892: call 0x12a0
0x3897: mov qword ptr [rip+0x2037ce],0x100
0x38a2: mov qword ptr [rip+0x2037cf],rbx
0x38a9: lea rbx,[rip+0x2037c0]
0x38b0: cmp r12,rbx
0x38b3: jz 0x38c4
0x38b5: mov rdi,r12
0x38b8: call 0x12a0
0x38bd: mov qword ptr [rip+0x20379c],rbx
0x38c4: pop rbx
0x38c5: mov dword ptr [rip+0x203789],0x1
0x38cf: pop rbp
0x38d0: pop r12
0x38d2: ret 
0x38e0: lea rcx,[rip+0x203919]
0x38e7: mov rdx,-0x1
0x38ee: jmp 0x3400
0x3900: lea rcx,[rip+0x2038f9]
0x3907: jmp 0x3400
0x3910: lea rcx,[rip+0x2038e9]
0x3917: mov rsi,rdi
0x391a: mov rdx,-0x1
0x3921: xor edi,edi
0x3923: jmp 0x3400
0x3930: lea rcx,[rip+0x2038c9]
0x3937: mov rdx,rsi
0x393a: mov rsi,rdi
0x393d: xor edi,edi
0x393f: jmp 0x3400
0x3950: sub rsp,0x48
0x3954: mov rax,rdx
0x3957: mov rdx,qword ptr fs:[rip+0xffffffffffffc6c8]
0x3960: mov qword ptr [rsp + 0x38],rdx
0x3965: xor edx,edx
0x3967: cmp esi,0xa
0x396a: jz 0x39d4
0x396c: mov dword ptr [rsp],esi
0x396f: mov rcx,rsp
0x3972: mov rdx,-0x1
0x3979: mov rsi,rax
0x397c: mov qword ptr [rsp + 0x4],0x0
0x3985: mov qword ptr [rsp + 0xc],0x0
0x398e: mov qword ptr [rsp + 0x14],0x0
0x3997: mov qword ptr [rsp + 0x1c],0x0
0x39a0: mov qword ptr [rsp + 0x24],0x0
0x39a9: mov qword ptr [rsp + 0x2c],0x0
0x39b2: mov dword ptr [rsp + 0x34],0x0
0x39ba: call 0x3400
0x39bf: mov rcx,qword ptr [rsp + 0x38]
0x39c4: xor rcx,qword ptr fs:[rip+0xffffffffffffc65b]
0x39cd: jnz 0x39d9
0x39cf: add rsp,0x48
0x39d3: ret 
0x39d4: call 0x12b0
0x39d9: call 0x1380
0x39de: nop 
0x39e0: sub rsp,0x48
0x39e4: mov rax,rdx
0x39e7: mov rdx,rcx
0x39ea: mov rcx,qword ptr fs:[rip+0xffffffffffffc635]
0x39f3: mov qword ptr [rsp + 0x38],rcx
0x39f8: xor ecx,ecx
0x39fa: cmp esi,0xa
0x39fd: jz 0x3a60
0x39ff: mov dword ptr [rsp],esi
0x3a02: mov rcx,rsp
0x3a05: mov rsi,rax
0x3a08: mov qword ptr [rsp + 0x4],0x0
0x3a11: mov qword ptr [rsp + 0xc],0x0
0x3a1a: mov qword ptr [rsp + 0x14],0x0
0x3a23: mov qword ptr [rsp + 0x1c],0x0
0x3a2c: mov qword ptr [rsp + 0x24],0x0
0x3a35: mov qword ptr [rsp + 0x2c],0x0
0x3a3e: mov dword ptr [rsp + 0x34],0x0
0x3a46: call 0x3400
0x3a4b: mov rdx,qword ptr [rsp + 0x38]
0x3a50: xor rdx,qword ptr fs:[rip+0xffffffffffffc5cf]
0x3a59: jnz 0x3a65
0x3a5b: add rsp,0x48
0x3a5f: ret 
0x3a60: call 0x12b0
0x3a65: call 0x1380
0x3a6a: nop word ptr [rax + rax*0x1]
0x3a70: mov rdx,rsi
0x3a73: mov esi,edi
0x3a75: xor edi,edi
0x3a77: jmp 0x3950
0x3a80: mov rcx,rdx
0x3a83: mov rdx,rsi
0x3a86: mov esi,edi
0x3a88: xor edi,edi
0x3a8a: jmp 0x39e0
0x3a90: sub rsp,0x48
0x3a94: mov ecx,edx
0x3a96: mov rax,qword ptr fs:[rip+0xffffffffffffc589]
0x3a9f: mov qword ptr [rsp + 0x38],rax
0x3aa4: xor eax,eax
0x3aa6: mov rax,qword ptr [rip+0x203783]
0x3aad: mov r8,rsp
0x3ab0: and ecx,0x1f
0x3ab3: movdqa xmm0,[rip+0x203745]
0x3abb: mov qword ptr [rsp + 0x30],rax
0x3ac0: mov eax,edx
0x3ac2: movaps xmmword ptr [rsp],xmm0
0x3ac6: shr al,0x5
0x3ac9: movzx eax,al
0x3acc: lea r9,[r8 + rax*0x4 + 0x8]
0x3ad1: movdqa xmm0,[rip+0x203737]
0x3ad9: movaps xmmword ptr [rsp + 0x10],xmm0
0x3ade: movdqa xmm0,[rip+0x20373a]
0x3ae6: movaps xmmword ptr [rsp + 0x20],xmm0
0x3aeb: mov edx,dword ptr [r9]
0x3aee: mov eax,edx
0x3af0: shr eax,cl
0x3af2: not eax
0x3af4: and eax,0x1
0x3af7: shl eax,cl
0x3af9: mov rcx,r8
0x3afc: xor eax,edx
0x3afe: mov rdx,rsi
0x3b01: mov rsi,rdi
0x3b04: mov dword ptr [r9],eax
0x3b07: xor edi,edi
0x3b09: call 0x3400
0x3b0e: mov rsi,qword ptr [rsp + 0x38]
0x3b13: xor rsi,qword ptr fs:[rip+0xffffffffffffc50c]
0x3b1c: jnz 0x3b23
0x3b1e: add rsp,0x48
0x3b22: ret 
0x3b23: call 0x1380
0x3b28: nop dword ptr [rax + rax*0x1]
0x3b30: movsx edx,sil
0x3b34: mov rsi,-0x1
0x3b3b: jmp 0x3a90
0x3b40: mov edx,0x3a
0x3b45: mov rsi,-0x1
0x3b4c: jmp 0x3a90
0x3b60: mov edx,0x3a
0x3b65: jmp 0x3a90
0x3b70: sub rsp,0x48
0x3b74: mov rax,rdx
0x3b77: mov rdx,qword ptr fs:[rip+0xffffffffffffc4a8]
0x3b80: mov qword ptr [rsp + 0x38],rdx
0x3b85: xor edx,edx
0x3b87: cmp esi,0xa
0x3b8a: jz 0x3bf4
0x3b8c: mov dword ptr [rsp],esi
0x3b8f: mov rcx,rsp
0x3b92: mov rdx,-0x1
0x3b99: mov rsi,rax
0x3b9c: mov qword ptr [rsp + 0x4],0x0
0x3ba5: mov qword ptr [rsp + 0xc],0x4000000
0x3bae: mov qword ptr [rsp + 0x14],0x0
0x3bb7: mov qword ptr [rsp + 0x1c],0x0
0x3bc0: mov qword ptr [rsp + 0x24],0x0
0x3bc9: mov qword ptr [rsp + 0x2c],0x0
0x3bd2: mov dword ptr [rsp + 0x34],0x0
0x3bda: call 0x3400
0x3bdf: mov rcx,qword ptr [rsp + 0x38]
0x3be4: xor rcx,qword ptr fs:[rip+0xffffffffffffc43b]
0x3bed: jnz 0x3bf9
0x3bef: add rsp,0x48
0x3bf3: ret 
0x3bf4: call 0x12b0
0x3bf9: call 0x1380
0x3bfe: nop 
0x3c00: sub rsp,0x48
0x3c04: mov r9,rcx
0x3c07: mov rcx,qword ptr [rip+0x203622]
0x3c0e: movdqa xmm0,[rip+0x2035ea]
0x3c16: mov rax,qword ptr fs:[rip+0xffffffffffffc409]
0x3c1f: mov qword ptr [rsp + 0x38],rax
0x3c24: xor eax,eax
0x3c26: movaps xmmword ptr [rsp],xmm0
0x3c2a: test rsi,rsi
0x3c2d: mov qword ptr [rsp + 0x30],rcx
0x3c32: mov dword ptr [rsp],0xa
0x3c39: movdqa xmm0,[rip+0x2035cf]
0x3c41: movaps xmmword ptr [rsp + 0x10],xmm0
0x3c46: movdqa xmm0,[rip+0x2035d2]
0x3c4e: movaps xmmword ptr [rsp + 0x20],xmm0
0x3c53: jz 0x3c87
0x3c55: test rdx,rdx
0x3c58: jz 0x3c87
0x3c5a: mov qword ptr [rsp + 0x28],rsi
0x3c5f: mov qword ptr [rsp + 0x30],rdx
0x3c64: mov rcx,rsp
0x3c67: mov rdx,r8
0x3c6a: mov rsi,r9
0x3c6d: call 0x3400
0x3c72: mov rdi,qword ptr [rsp + 0x38]
0x3c77: xor rdi,qword ptr fs:[rip+0xffffffffffffc3a8]
0x3c80: jnz 0x3c8c
0x3c82: add rsp,0x48
0x3c86: ret 
0x3c87: call 0x12b0
0x3c8c: call 0x1380
0x3c91: nop dword ptr [rax + rax*0x1]
0x3c96: nop word ptr cs:[rax + rax*0x1]
0x3ca0: mov r8,-0x1
0x3ca7: jmp 0x3c00
0x3cb0: mov rcx,rdx
0x3cb3: mov r8,-0x1
0x3cba: mov rdx,rsi
0x3cbd: mov rsi,rdi
0x3cc0: xor edi,edi
0x3cc2: jmp 0x3c00
0x3cd0: mov r8,rcx
0x3cd3: mov rcx,rdx
0x3cd6: mov rdx,rsi
0x3cd9: mov rsi,rdi
0x3cdc: xor edi,edi
0x3cde: jmp 0x3c00
0x3cf0: lea rcx,[rip+0x203329]
0x3cf7: jmp 0x3400
0x3d00: lea rcx,[rip+0x203319]
0x3d07: mov rdx,rsi
0x3d0a: mov rsi,rdi
0x3d0d: xor edi,edi
0x3d0f: jmp 0x3400
0x3d20: lea rcx,[rip+0x2032f9]
0x3d27: mov rdx,-0x1
0x3d2e: jmp 0x3400
0x3e98: mov r8,rcx
0x3e9b: mov rcx,rdx
0x3e9e: lea rdx,[rip+0x172f]
0x3ea5: mov esi,0x1
0x3eaa: xor eax,eax
0x3eac: call 0x1510
0x3eb1: jmp 0x3d9c
0x4180: xor r9d,r9d
0x4183: cmp qword ptr [r8],0x0
0x4187: jz 0x419b
0x4189: nop dword ptr [rax]
0x4190: add r9,0x1
0x4194: cmp qword ptr [r8 + r9*0x8],0x0
0x4199: jnz 0x4190
0x419b: jmp 0x3d60
0x41c8: mov r11d,eax
0x41cb: add r11,qword ptr [r10 + 0x10]
0x41cf: add eax,0x8
0x41d2: mov dword ptr [r10],eax
0x4205: call 0x1380
0x4220: push rbp
0x4221: push rbx
0x4222: mov r10d,0x20
0x4228: xor r11d,r11d
0x422b: sub rsp,0xb8
0x4232: mov rax,qword ptr fs:[rip+0xffffffffffffbded]
0x423b: mov qword ptr [rsp + 0x78],rax
0x4240: xor eax,eax
0x4242: lea rax,[0xd0 + rsp]
0x424a: mov qword ptr [0xa0 + rsp],r8
0x4252: lea rbx,[0xd0 + rsp]
0x425a: lea r8,[rsp + 0x20]
0x425f: mov qword ptr [0xa8 + rsp],r9
0x4267: mov dword ptr [rsp + 0x8],0x20
0x426f: mov qword ptr [rsp + 0x10],rax
0x4274: lea rax,[0x80 + rsp]
0x427c: xor r9d,r9d
0x427f: mov qword ptr [rsp + 0x18],rax
0x4284: mov rbp,rax
0x4287: nop word ptr [rax + rax*0x1]
0x4290: cmp r10d,0x2f
0x4294: ja 0x42ec
0x4296: mov eax,r10d
0x4299: mov r11d,0x1
0x429f: add r10d,0x8
0x42a3: add rax,rbp
0x42a6: mov rax,qword ptr [rax]
0x42a9: test rax,rax
0x42ac: mov qword ptr [r8 + r9*0x8],rax
0x42b0: jz 0x42bc
0x42b2: add r9,0x1
0x42b6: cmp r9,0xa
0x42ba: jnz 0x4290
0x42bc: test r11b,r11b
0x42bf: jnz 0x42e5
0x42c1: call 0x3d60
0x42c6: mov rax,qword ptr [rsp + 0x78]
0x42cb: xor rax,qword ptr fs:[rip+0xffffffffffffbd54]
0x42d4: jnz 0x42e0
0x42d6: add rsp,0xb8
0x42dd: pop rbx
0x42de: pop rbp
0x42df: ret 
0x42e0: call 0x1380
0x42e5: mov dword ptr [rsp + 0x8],r10d
0x42ea: jmp 0x42c1
0x42ec: mov rax,rbx
0x42ef: add rbx,0x8
0x42f3: jmp 0x42a6
0x4300: push rbx
0x4301: lea rsi,[rip+0x131a]
0x4308: mov edx,0x5
0x430d: xor edi,edi
0x430f: call 0x1350
0x4314: lea rdx,[rip+0x131c]
0x431b: mov rsi,rax
0x431e: mov edi,0x1
0x4323: xor eax,eax
0x4325: call 0x14b0
0x432a: lea rsi,[rip+0x131c]
0x4331: mov edx,0x5
0x4336: xor edi,edi
0x4338: call 0x1350
0x433d: lea rcx,[rip+0xc7c]
0x4344: lea rdx,[rip+0xa15]
0x434b: mov rsi,rax
0x434e: mov edi,0x1
0x4353: xor eax,eax
0x4355: call 0x14b0
0x435a: mov rbx,qword ptr [rip+0x202d27]
0x4361: lea rsi,[rip+0x1518]
0x4368: xor edi,edi
0x436a: mov edx,0x5
0x436f: call 0x1350
0x4374: mov rsi,rbx
0x4377: mov rdi,rax
0x437a: pop rbx
0x437b: jmp 0x1410
0x439a: nop word ptr [rax + rax*0x1]
0x43a0: mov rax,rdi
0x43a3: mul rsi
0x43a6: mov rdi,rax
0x43a9: seto al
0x43ac: test rdi,rdi
0x43af: js 0x43bb
0x43b1: movzx eax,al
0x43b4: test rax,rax
0x43b7: jnz 0x43bb
0x43b9: jmp 0x4380
0x43bb: sub rsp,0x8
0x43bf: call 0x45d0
0x43c4: nop 
0x43c6: nop word ptr cs:[rax + rax*0x1]
0x43d0: jmp 0x4380
0x43e9: test rdi,rdi
0x43ec: jnz 0x4408
0x4408: call 0x12a0
0x440d: xor eax,eax
0x440f: pop rbx
0x4410: ret 
0x4416: nop word ptr cs:[rax + rax*0x1]
0x4420: mov rax,rsi
0x4423: mul rdx
0x4426: mov rsi,rax
0x4429: seto al
0x442c: test rsi,rsi
0x442f: js 0x443b
0x4431: movzx eax,al
0x4434: test rax,rax
0x4437: jnz 0x443b
0x4439: jmp 0x43e0
0x443b: sub rsp,0x8
0x443f: call 0x45d0
0x4444: nop 
0x4446: nop word ptr cs:[rax + rax*0x1]
0x4450: test rdi,rdi
0x4453: mov r9,rdx
0x4456: mov rcx,qword ptr [rsi]
0x4459: jz 0x4490
0x445b: xor edx,edx
0x445d: mov rax,0x5555555555555554
0x4467: div r9
0x446a: cmp rax,rcx
0x446d: jbe 0x44ab
0x446f: mov rax,rcx
0x4472: shr rax,1
0x4475: lea rcx,[rax + rcx*0x1 + 0x1]
0x447a: mov qword ptr [rsi],rcx
0x447d: imul rcx,r9
0x4481: mov rsi,rcx
0x4484: jmp 0x43e0
0x4490: test rcx,rcx
0x4493: jz 0x44b8
0x4495: mov rax,rcx
0x4498: mul r9
0x449b: seto dl
0x449e: test rax,rax
0x44a1: movzx edx,dl
0x44a4: js 0x44ab
0x44a6: test rdx,rdx
0x44a9: jz 0x447a
0x44ab: sub rsp,0x8
0x44af: call 0x45d0
0x44b4: nop dword ptr [rax]
0x44b8: xor edx,edx
0x44ba: mov eax,0x80
0x44bf: xor r8d,r8d
0x44c2: div r9
0x44c5: test rax,rax
0x44c8: setz r8b
0x44cc: lea rcx,[r8 + rax*0x1]
0x44d0: jmp 0x4495
0x44e0: test rdi,rdi
0x44e3: mov rax,qword ptr [rsi]
0x44e6: jz 0x4510
0x44e8: mov rdx,0x5555555555555553
0x44f2: cmp rax,rdx
0x44f5: ja 0x4521
0x44f7: mov rdx,rax
0x44fa: shr rdx,1
0x44fd: lea rax,[rdx + rax*0x1 + 0x1]
0x4502: mov qword ptr [rsi],rax
0x4505: mov rsi,rax
0x4508: jmp 0x43e0
0x4510: test rax,rax
0x4513: mov edx,0x80
0x4518: cmovz rax,rdx
0x451c: test rax,rax
0x451f: jns 0x4502
0x4521: sub rsp,0x8
0x4525: call 0x45d0
0x452a: nop word ptr [rax + rax*0x1]
0x4530: push rbx
0x4531: mov rbx,rdi
0x4534: call 0x4380
0x4539: mov rdx,rbx
0x453c: xor esi,esi
0x453e: mov rdi,rax
0x4541: pop rbx
0x4542: jmp 0x13f0
0x4550: mov rax,rdi
0x4553: sub rsp,0x8
0x4557: mul rsi
0x455a: seto dl
0x455d: test rax,rax
0x4560: js 0x4579
0x4562: movzx edx,dl
0x4565: test rdx,rdx
0x4568: jnz 0x4579
0x456a: call 0x1420
0x456f: test rax,rax
0x4572: jz 0x4579
0x4574: add rsp,0x8
0x4578: ret 
0x4579: call 0x45d0
0x457e: nop 
0x4580: push rbp
0x4581: push rbx
0x4582: mov rbp,rdi
0x4585: mov rdi,rsi
0x4588: mov rbx,rsi
0x458b: sub rsp,0x8
0x458f: call 0x4380
0x4594: add rsp,0x8
0x4598: mov rdx,rbx
0x459b: mov rsi,rbp
0x459e: pop rbx
0x459f: pop rbp
0x45a0: mov rdi,rax
0x45a3: jmp 0x1430
0x45b0: push rbx
0x45b1: mov rbx,rdi
0x45b4: call 0x1370
0x45b9: mov rdi,rbx
0x45bc: lea rsi,[rax + 0x1]
0x45c0: pop rbx
0x45c1: jmp 0x4580
0x4600: call 0x12b0
0x4605: nop word ptr cs:[rax + rax*0x1]
0x460f: nop 
0x4680: mov eax,0xffffffff
0x4685: jmp 0x4664
0x4687: call 0x1380
0x468c: nop dword ptr [rax]
0x4728: xor eax,eax
0x472a: cmp byte ptr [rcx],0x0
0x472d: jnz 0x46fe
0x472f: ucomisd xmm0,qword ptr [rip+0x1209]
0x4737: jp 0x46ee
0x4739: jnz 0x46ee
0x473b: mov eax,0x1
0x4740: jmp 0x46fe
0x4751: nop word ptr cs:[rax + rax*0x1]
0x475b: nop dword ptr [rax + rax*0x1]
0x47de: call 0x1380
0x47e3: nop word ptr cs:[rax + rax*0x1]
0x47ed: nop dword ptr [rax]
0x486d: add qword ptr [rbp],rbx
0x4871: jmp 0x4887
0x48b2: call 0x1380
0x48b7: nop word ptr [rax + rax*0x1]
0x4930: push r12
0x4932: push rbp
0x4933: mov rbp,rdi
0x4936: push rbx
0x4937: call 0x12f0
0x493c: mov ebx,dword ptr [rbp]
0x493f: mov rdi,rbp
0x4942: mov r12,rax
0x4945: call 0x4b10
0x494a: and ebx,0x20
0x494d: test ebx,ebx
0x494f: jnz 0x4968
0x4951: test eax,eax
0x4953: jz 0x495f
0x4955: test r12,r12
0x4958: mov eax,0xffffffff
0x495d: jz 0x4998
0x495f: pop rbx
0x4960: pop rbp
0x4961: pop r12
0x4963: ret 
0x4968: test eax,eax
0x496a: jnz 0x4988
0x496c: call 0x12c0
0x4971: mov dword ptr [rax],0x0
0x4977: mov eax,0xffffffff
0x497c: pop rbx
0x497d: pop rbp
0x497e: pop r12
0x4980: ret 
0x4988: pop rbx
0x4989: mov eax,0xffffffff
0x498e: pop rbp
0x498f: pop r12
0x4991: ret 
0x4998: call 0x12c0
0x499d: cmp dword ptr [rax],0x9
0x49a0: pop rbx
0x49a1: pop rbp
0x49a2: pop r12
0x49a4: setnz al
0x49a7: movzx eax,al
0x49aa: neg eax
0x49ac: ret 
0x4b10: push r12
0x4b12: push rbp
0x4b13: push rbx
0x4b14: mov rbx,rdi
0x4b17: call 0x1440
0x4b1c: test eax,eax
0x4b1e: mov rdi,rbx
0x4b21: js 0x4b77
0x4b23: call 0x1480
0x4b28: test eax,eax
0x4b2a: jnz 0x4b58
0x4b2c: mov rdi,rbx
0x4b2f: call 0x4b90
0x4b34: test eax,eax
0x4b36: jz 0x4b74
0x4b38: call 0x12c0
0x4b3d: mov r12d,dword ptr [rax]
0x4b40: mov rdi,rbx
0x4b43: mov rbp,rax
0x4b46: call 0x1330
0x4b4b: test r12d,r12d
0x4b4e: jnz 0x4b80
0x4b50: pop rbx
0x4b51: pop rbp
0x4b52: pop r12
0x4b54: ret 
0x4b58: mov rdi,rbx
0x4b5b: call 0x1440
0x4b60: xor esi,esi
0x4b62: mov edx,0x1
0x4b67: mov edi,eax
0x4b69: call 0x13e0
0x4b6e: cmp rax,-0x1
0x4b72: jnz 0x4b2c
0x4b74: mov rdi,rbx
0x4b77: pop rbx
0x4b78: pop rbp
0x4b79: pop r12
0x4b7b: jmp 0x1330
0x4b80: mov dword ptr [rbp],r12d
0x4b84: mov eax,0xffffffff
0x4b89: jmp 0x4b50
0x4b90: test rdi,rdi
0x4b93: push rbx
0x4b94: mov rbx,rdi
0x4b97: jz 0x4baa
0x4b99: call 0x1480
0x4b9e: test eax,eax
0x4ba0: jz 0x4baa
0x4ba2: test dword ptr [rbx],0x100
0x4ba8: jnz 0x4bb8
0x4baa: mov rdi,rbx
0x4bad: pop rbx
0x4bae: jmp 0x1460
0x4bb8: mov rdi,rbx
0x4bbb: mov edx,0x1
0x4bc0: xor esi,esi
0x4bc2: call 0x4bd0
0x4bc7: mov rdi,rbx
0x4bca: pop rbx
0x4bcb: jmp 0x1460
0x4bd0: mov rax,qword ptr [rdi + 0x8]
0x4bd4: cmp qword ptr [rdi + 0x10],rax
0x4bd8: jz 0x4be0
0x4bda: jmp 0x14d0
0x4be0: mov rax,qword ptr [rdi + 0x20]
0x4be4: cmp qword ptr [rdi + 0x28],rax
0x4be8: jnz 0x4bda
0x4bea: cmp qword ptr [rdi + 0x48],0x0
0x4bef: jnz 0x4bda
0x4bf1: push r12
0x4bf3: push rbp
0x4bf4: mov r12d,edx
0x4bf7: push rbx
0x4bf8: mov rbp,rsi
0x4bfb: mov rbx,rdi
0x4bfe: call 0x1440
0x4c03: mov edx,r12d
0x4c06: mov rsi,rbp
0x4c09: mov edi,eax
0x4c0b: call 0x13e0
0x4c10: cmp rax,-0x1
0x4c14: jz 0x4c22
0x4c16: and dword ptr [rbx],0xffffffef
0x4c19: mov qword ptr [0x90 + rbx],rax
0x4c20: xor eax,eax
0x4c22: pop rbx
0x4c23: pop rbp
0x4c24: pop r12
0x4c26: ret 
0x4c30: push r15
0x4c32: push r14
0x4c34: mov r15,rdx
0x4c37: push r13
0x4c39: push r12
0x4c3b: lea r12,[rip+0x201f6e]
0x4c42: push rbp
0x4c43: lea rbp,[rip+0x201f6e]
0x4c4a: push rbx
0x4c4b: mov r13d,edi
0x4c4e: mov r14,rsi
0x4c51: sub rbp,r12
0x4c54: sub rsp,0x8
0x4c58: sar rbp,0x3
0x4c5c: call 0x1270
0x4c61: test rbp,rbp
0x4c64: jz 0x4c86
0x4c66: xor ebx,ebx
0x4c68: nop dword ptr [rax + rax*0x1]
0x4c70: mov rdx,r15
0x4c73: mov rsi,r14
0x4c76: mov edi,r13d
0x4c79: call qword ptr [r12 + rbx*0x8]
0x4c7d: add rbx,0x1
0x4c81: cmp rbp,rbx
0x4c84: jnz 0x4c70
0x4c86: add rsp,0x8
0x4c8a: pop rbx
0x4c8b: pop rbp
0x4c8c: pop r12
0x4c8e: pop r13
0x4c90: pop r14
0x4c92: pop r15
0x4c94: ret 
0x4ca0: ret 
0x4cc0: sub rsp,0x8
0x4cc4: add rsp,0x8
0x4cc8: ret 
