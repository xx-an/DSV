0x1528: sub rsp,0x8
0x152c: mov rax,qword ptr [rip+0x209aa5]
0x1533: test rax,rax
0x1536: jz 0x153a
0x1538: call rax
0x153a: add rsp,0x8
0x153e: ret 
0x1540: push qword ptr [rip+0x2098d2]
0x1546: jmp qword ptr [rip+0x2098d4]
0x1556: push 0x0
0x155b: jmp 0x1540
0x1566: push 0x1
0x156b: jmp 0x1540
0x1576: push 0x2
0x157b: jmp 0x1540
0x1586: push 0x3
0x158b: jmp 0x1540
0x1596: push 0x4
0x159b: jmp 0x1540
0x15a6: push 0x5
0x15ab: jmp 0x1540
0x15b6: push 0x6
0x15bb: jmp 0x1540
0x15c0: jmp qword ptr [rip+0x20989a]
0x15c6: push 0x7
0x15cb: jmp 0x1540
0x15d0: jmp qword ptr [rip+0x209892]
0x15d6: push 0x8
0x15db: jmp 0x1540
0x15e6: push 0x9
0x15eb: jmp 0x1540
0x15f6: push 0xa
0x15fb: jmp 0x1540
0x1600: jmp qword ptr [rip+0x20987a]
0x1606: push 0xb
0x160b: jmp 0x1540
0x1616: push 0xc
0x161b: jmp 0x1540
0x1626: push 0xd
0x162b: jmp 0x1540
0x1636: push 0xe
0x163b: jmp 0x1540
0x1646: push 0xf
0x164b: jmp 0x1540
0x1656: push 0x10
0x165b: jmp 0x1540
0x1666: push 0x11
0x166b: jmp 0x1540
0x1676: push 0x12
0x167b: jmp 0x1540
0x1686: push 0x13
0x168b: jmp 0x1540
0x1696: push 0x14
0x169b: jmp 0x1540
0x16a0: jmp qword ptr [rip+0x20982a]
0x16a6: push 0x15
0x16ab: jmp 0x1540
0x16b6: push 0x16
0x16bb: jmp 0x1540
0x16c6: push 0x17
0x16cb: jmp 0x1540
0x16d6: push 0x18
0x16db: jmp 0x1540
0x16e6: push 0x19
0x16eb: jmp 0x1540
0x16f6: push 0x1a
0x16fb: jmp 0x1540
0x1700: jmp qword ptr [rip+0x2097fa]
0x1706: push 0x1b
0x170b: jmp 0x1540
0x1716: push 0x1c
0x171b: jmp 0x1540
0x1726: push 0x1d
0x172b: jmp 0x1540
0x1730: jmp qword ptr [rip+0x2097e2]
0x1736: push 0x1e
0x173b: jmp 0x1540
0x1746: push 0x1f
0x174b: jmp 0x1540
0x1756: push 0x20
0x175b: jmp 0x1540
0x1760: jmp qword ptr [rip+0x2097ca]
0x1766: push 0x21
0x176b: jmp 0x1540
0x1776: push 0x22
0x177b: jmp 0x1540
0x1780: jmp qword ptr [rip+0x2097ba]
0x1786: push 0x23
0x178b: jmp 0x1540
0x1796: push 0x24
0x179b: jmp 0x1540
0x17a6: push 0x25
0x17ab: jmp 0x1540
0x17b6: push 0x26
0x17bb: jmp 0x1540
0x17c6: push 0x27
0x17cb: jmp 0x1540
0x17d6: push 0x28
0x17db: jmp 0x1540
0x17e6: push 0x29
0x17eb: jmp 0x1540
0x17f0: jmp qword ptr [rip+0x209782]
0x17f6: push 0x2a
0x17fb: jmp 0x1540
0x1806: push 0x2b
0x180b: jmp 0x1540
0x1816: push 0x2c
0x181b: jmp 0x1540
0x1826: push 0x2d
0x182b: jmp 0x1540
0x1836: push 0x2e
0x183b: jmp 0x1540
0x1846: push 0x2f
0x184b: jmp 0x1540
0x1856: push 0x30
0x185b: jmp 0x1540
0x1866: push 0x31
0x186b: jmp 0x1540
0x1876: push 0x32
0x187b: jmp 0x1540
0x1886: push 0x33
0x188b: jmp 0x1540
0x1890: jmp qword ptr [rip+0x209752]
0x1cfa: mov eax,ebx
0x1cfc: mov rbx,qword ptr [0xe8+rsp]
0x1d04: xor rbx,qword ptr fs:[0x28]
0x1d0d: jnz 0x1e5f
0x1d13: add rsp,0xf8
0x1d1a: pop rbx
0x1d1b: pop rbp
0x1d1c: pop r12
0x1d1e: pop r13
0x1d20: pop r14
0x1d22: pop r15
0x1d24: ret 
0x1e5f: call 0x1650
0x1e9d: lea rsi,[rip+0x5bea]
0x1ea4: mov edx,0x5
0x1ea9: xor edi,edi
0x1eab: mov rbx,rax
0x1eae: call 0x1620
0x1eb3: mov r8,qword ptr [rsp]
0x1eb7: mov rdx,rax
0x1eba: mov rcx,rbx
0x1ebd: mov edi,0x7d
0x1ec2: xor eax,eax
0x1ec4: mov esi,dword ptr [r8]
0x1ec7: call 0x17d0
0x1fa1: nop word ptr cs:[rax+rax*0x1]
0x1fab: nop dword ptr [rax+rax*0x1]
0x1fda: hlt 
0x1fe0: lea rdi,[rip+0x209099]
0x1fe7: push rbp
0x1fe8: lea rax,[rip+0x209091]
0x1fef: cmp rax,rdi
0x1ff2: mov rbp,rsp
0x1ff5: jz 0x2010
0x1ff7: mov rax,qword ptr [rip+0x208fca]
0x1ffe: test rax,rax
0x2001: jz 0x2010
0x2003: pop rbp
0x2004: jmp rax
0x2010: pop rbp
0x2011: ret 
0x2020: lea rdi,[rip+0x209059]
0x2027: lea rsi,[rip+0x209052]
0x202e: push rbp
0x202f: sub rsi,rdi
0x2032: mov rbp,rsp
0x2035: sar rsi,0x3
0x2039: mov rax,rsi
0x203c: shr rax,0x3f
0x2040: add rsi,rax
0x2043: sar rsi,0x1
0x2046: jz 0x2060
0x2048: mov rax,qword ptr [rip+0x208f91]
0x204f: test rax,rax
0x2052: jz 0x2060
0x2054: pop rbp
0x2055: jmp rax
0x2060: pop rbp
0x2061: ret 
0x2070: cmp byte ptr [rip+0x209051],0x0
0x2077: jnz 0x20a8
0x2079: cmp qword ptr [rip+0x208f67],0x0
0x2081: push rbp
0x2082: mov rbp,rsp
0x2085: jz 0x2093
0x2087: mov rdi,qword ptr [rip+0x208f7a]
0x208e: call 0x1890
0x2093: call 0x1fe0
0x2098: mov byte ptr [rip+0x209029],0x1
0x209f: pop rbp
0x20a0: ret 
0x20a8: ret 
0x20b0: push rbp
0x20b1: mov rbp,rsp
0x20b4: pop rbp
0x20b5: jmp 0x2020
0x24e0: mov qword ptr [rip+0x208c51],rdi
0x24e7: ret 
0x24f0: mov byte ptr [rip+0x208c39],dil
0x24f7: ret 
0x2500: push rbp
0x2501: push rbx
0x2502: sub rsp,0x8
0x2506: mov rdi,qword ptr [rip+0x208b7b]
0x250d: call 0x56b0
0x2512: test eax,eax
0x2514: jz 0x252c
0x2516: call 0x15a0
0x251b: cmp byte ptr [rip+0x208c0e],0x0
0x2522: mov rbx,rax
0x2525: jz 0x2543
0x2527: cmp dword ptr [rax],0x20
0x252a: jnz 0x2543
0x252c: mov rdi,qword ptr [rip+0x208b8d]
0x2533: call 0x56b0
0x2538: test eax,eax
0x253a: jnz 0x2582
0x253c: add rsp,0x8
0x2540: pop rbx
0x2541: pop rbp
0x2542: ret 
0x2543: lea rsi,[rip+0x5d0c]
0x254a: xor edi,edi
0x254c: mov edx,0x5
0x2551: call 0x1620
0x2556: mov rdi,qword ptr [rip+0x208bdb]
0x255d: mov rbp,rax
0x2560: test rdi,rdi
0x2563: jz 0x258d
0x2565: call 0x4370
0x256a: mov esi,dword ptr [rbx]
0x256c: lea rdx,[rip+0x5cef]
0x2573: mov rcx,rax
0x2576: mov r8,rbp
0x2579: xor edi,edi
0x257b: xor eax,eax
0x257d: call 0x17d0
0x2582: mov edi,dword ptr [rip+0x208a90]
0x2588: call 0x15c0
0x258d: mov esi,dword ptr [rbx]
0x258f: lea rdx,[rip+0x5cd0]
0x2596: mov rcx,rax
0x2599: xor edi,edi
0x259b: xor eax,eax
0x259d: call 0x17d0
0x25a2: jmp 0x2582
0x25c8: nop dword ptr [rax+rax*0x1]
0x2758: nop dword ptr [rax+rax*0x1]
0x2825: mov qword ptr [r15],rdi
0x28ff: nop 
0x3c24: nop 
0x3c26: nop word ptr cs:[rax+rax*0x1]
0x3dd1: call 0x1590
0x3dd6: call 0x4e00
0x3ddb: nop dword ptr [rax+rax*0x1]
0x3de0: push r12
0x3de2: push rbp
0x3de3: push rbx
0x3de4: mov rbx,rdi
0x3de7: call 0x15a0
0x3dec: mov r12d,dword ptr [rax]
0x3def: mov rbp,rax
0x3df2: lea rax,[rip+0x207467]
0x3df9: test rbx,rbx
0x3dfc: mov esi,0x38
0x3e01: cmovz rbx,rax
0x3e05: mov rdi,rbx
0x3e08: call 0x4db0
0x3e0d: mov dword ptr [rbp],r12d
0x3e11: pop rbx
0x3e12: pop rbp
0x3e13: pop r12
0x3e15: ret 
0x3e20: lea rax,[rip+0x207439]
0x3e27: test rdi,rdi
0x3e2a: cmovz rdi,rax
0x3e2e: mov eax,dword ptr [rdi]
0x3e30: ret 
0x3e40: lea rax,[rip+0x207419]
0x3e47: test rdi,rdi
0x3e4a: cmovz rdi,rax
0x3e4e: mov dword ptr [rdi],esi
0x3e50: ret 
0x3e60: lea rax,[rip+0x2073f9]
0x3e67: test rdi,rdi
0x3e6a: mov ecx,esi
0x3e6c: cmovz rdi,rax
0x3e70: mov eax,esi
0x3e72: and ecx,0x1f
0x3e75: shr al,0x5
0x3e78: movzx eax,al
0x3e7b: lea rdi,[rdi+rax*0x4+0x8]
0x3e80: mov esi,dword ptr [rdi]
0x3e82: mov eax,esi
0x3e84: shr eax,cl
0x3e86: xor edx,eax
0x3e88: and eax,0x1
0x3e8b: and edx,0x1
0x3e8e: shl edx,cl
0x3e90: xor edx,esi
0x3e92: mov dword ptr [rdi],edx
0x3e94: ret 
0x3ea0: lea rax,[rip+0x2073b9]
0x3ea7: test rdi,rdi
0x3eaa: cmovz rdi,rax
0x3eae: mov eax,dword ptr [rdi+0x4]
0x3eb1: mov dword ptr [rdi+0x4],esi
0x3eb4: ret 
0x3ec0: lea rax,[rip+0x207399]
0x3ec7: test rdi,rdi
0x3eca: cmovz rdi,rax
0x3ece: test rsi,rsi
0x3ed1: mov dword ptr [rdi],0xa
0x3ed7: jz 0x3ee7
0x3ed9: test rdx,rdx
0x3edc: jz 0x3ee7
0x3ede: mov qword ptr [rdi+0x28],rsi
0x3ee2: mov qword ptr [rdi+0x30],rdx
0x3ee6: ret 
0x3ee7: sub rsp,0x8
0x3eeb: call 0x1590
0x3ef0: push r15
0x3ef2: push r14
0x3ef4: lea rax,[rip+0x207365]
0x3efb: push r13
0x3efd: push r12
0x3eff: mov r13,rdi
0x3f02: push rbp
0x3f03: push rbx
0x3f04: mov rbx,r8
0x3f07: mov r14,rsi
0x3f0a: mov r15,rdx
0x3f0d: sub rsp,0x18
0x3f11: test r8,r8
0x3f14: cmovz rbx,rax
0x3f18: mov qword ptr [rsp+0x8],rcx
0x3f1d: call 0x15a0
0x3f22: mov r12d,dword ptr [rax]
0x3f25: mov rbp,rax
0x3f28: lea rax,[rbx+0x8]
0x3f2c: sub rsp,0x8
0x3f30: mov r9d,dword ptr [rbx+0x4]
0x3f34: push qword ptr [rbx+0x30]
0x3f37: mov r8d,dword ptr [rbx]
0x3f3a: push qword ptr [rbx+0x28]
0x3f3d: mov rdx,r15
0x3f40: push rax
0x3f41: mov rcx,qword ptr [rsp+0x28]
0x3f46: mov rsi,r14
0x3f49: mov rdi,r13
0x3f4c: call 0x29f0
0x3f51: mov dword ptr [rbp],r12d
0x3f55: add rsp,0x38
0x3f59: pop rbx
0x3f5a: pop rbp
0x3f5b: pop r12
0x3f5d: pop r13
0x3f5f: pop r14
0x3f61: pop r15
0x3f63: ret 
0x3f70: push r15
0x3f72: push r14
0x3f74: lea rax,[rip+0x2072e5]
0x3f7b: push r13
0x3f7d: push r12
0x3f7f: mov r12,rdx
0x3f82: push rbp
0x3f83: push rbx
0x3f84: mov rbx,rcx
0x3f87: mov r14,rdi
0x3f8a: mov r15,rsi
0x3f8d: sub rsp,0x38
0x3f91: test rcx,rcx
0x3f94: cmovz rbx,rax
0x3f98: xor ebp,ebp
0x3f9a: call 0x15a0
0x3f9f: test r12,r12
0x3fa2: mov r13,rax
0x3fa5: mov eax,dword ptr [rax]
0x3fa7: setz bpl
0x3fab: or ebp,dword ptr [rbx+0x4]
0x3fae: lea r10,[rbx+0x8]
0x3fb2: sub rsp,0x8
0x3fb6: mov r8d,dword ptr [rbx]
0x3fb9: mov rcx,r15
0x3fbc: mov dword ptr [rsp+0x14],eax
0x3fc0: push qword ptr [rbx+0x30]
0x3fc3: mov rdx,r14
0x3fc6: push qword ptr [rbx+0x28]
0x3fc9: push r10
0x3fcb: xor esi,esi
0x3fcd: mov r9d,ebp
0x3fd0: xor edi,edi
0x3fd2: mov qword ptr [rsp+0x40],r10
0x3fd7: call 0x29f0
0x3fdc: lea rsi,[rax+0x1]
0x3fe0: mov qword ptr [rsp+0x48],rax
0x3fe5: add rsp,0x20
0x3fe9: mov rdi,rsi
0x3fec: mov qword ptr [rsp+0x18],rsi
0x3ff1: call 0x4bb0
0x3ff6: mov qword ptr [rsp+0x10],rax
0x3ffb: sub rsp,0x8
0x3fff: push qword ptr [rbx+0x30]
0x4002: push qword ptr [rbx+0x28]
0x4005: mov r10,qword ptr [rsp+0x38]
0x400a: mov r9d,ebp
0x400d: mov r8d,dword ptr [rbx]
0x4010: mov rcx,r15
0x4013: mov rdx,r14
0x4016: mov rdi,rax
0x4019: push r10
0x401b: mov rsi,qword ptr [rsp+0x38]
0x4020: call 0x29f0
0x4025: mov eax,dword ptr [rsp+0x2c]
0x4029: add rsp,0x20
0x402d: test r12,r12
0x4030: mov dword ptr [r13],eax
0x4034: jz 0x403f
0x4036: mov r11,qword ptr [rsp+0x28]
0x403b: mov qword ptr [r12],r11
0x403f: mov rax,qword ptr [rsp+0x10]
0x4044: add rsp,0x38
0x4048: pop rbx
0x4049: pop rbp
0x404a: pop r12
0x404c: pop r13
0x404e: pop r14
0x4050: pop r15
0x4052: ret 
0x4060: mov rcx,rdx
0x4063: xor edx,edx
0x4065: jmp 0x3f70
0x4070: mov eax,dword ptr [rip+0x206fe2]
0x4076: push r12
0x4078: mov r12,qword ptr [rip+0x206fe1]
0x407f: push rbp
0x4080: push rbx
0x4081: cmp eax,0x1
0x4084: jle 0x40b1
0x4086: sub eax,0x2
0x4089: lea rbx,[r12+0x18]
0x408e: shl rax,0x4
0x4092: lea rbp,[r12+rax*0x1+0x28]
0x4097: nop word ptr [rax+rax*0x1]
0x40a0: mov rdi,qword ptr [rbx]
0x40a3: add rbx,0x10
0x40a7: call 0x1580
0x40ac: cmp rbx,rbp
0x40af: jnz 0x40a0
0x40b1: mov rdi,qword ptr [r12+0x8]
0x40b6: lea rbx,[rip+0x2070a3]
0x40bd: cmp rdi,rbx
0x40c0: jz 0x40d9
0x40c2: call 0x1580
0x40c7: mov qword ptr [rip+0x206f9e],0x100
0x40d2: mov qword ptr [rip+0x206f9f],rbx
0x40d9: lea rbx,[rip+0x206f90]
0x40e0: cmp r12,rbx
0x40e3: jz 0x40f4
0x40e5: mov rdi,r12
0x40e8: call 0x1580
0x40ed: mov qword ptr [rip+0x206f6c],rbx
0x40f4: pop rbx
0x40f5: mov dword ptr [rip+0x206f59],0x1
0x40ff: pop rbp
0x4100: pop r12
0x4102: ret 
0x4110: lea rcx,[rip+0x207149]
0x4117: mov rdx,-0x1
0x411e: jmp 0x3c30
0x4130: lea rcx,[rip+0x207129]
0x4137: jmp 0x3c30
0x4140: lea rcx,[rip+0x207119]
0x4147: mov rsi,rdi
0x414a: mov rdx,-0x1
0x4151: xor edi,edi
0x4153: jmp 0x3c30
0x4160: lea rcx,[rip+0x2070f9]
0x4167: mov rdx,rsi
0x416a: mov rsi,rdi
0x416d: xor edi,edi
0x416f: jmp 0x3c30
0x4180: sub rsp,0x48
0x4184: mov rax,rdx
0x4187: mov rdx,qword ptr fs:[0x28]
0x4190: mov qword ptr [rsp+0x38],rdx
0x4195: xor edx,edx
0x4197: cmp esi,0xa
0x419a: jz 0x4204
0x419c: mov dword ptr [rsp],esi
0x419f: mov rcx,rsp
0x41a2: mov rdx,-0x1
0x41a9: mov rsi,rax
0x41ac: mov qword ptr [rsp+0x4],0x0
0x41b5: mov qword ptr [rsp+0xc],0x0
0x41be: mov qword ptr [rsp+0x14],0x0
0x41c7: mov qword ptr [rsp+0x1c],0x0
0x41d0: mov qword ptr [rsp+0x24],0x0
0x41d9: mov qword ptr [rsp+0x2c],0x0
0x41e2: mov dword ptr [rsp+0x34],0x0
0x41ea: call 0x3c30
0x41ef: mov rcx,qword ptr [rsp+0x38]
0x41f4: xor rcx,qword ptr fs:[0x28]
0x41fd: jnz 0x4209
0x41ff: add rsp,0x48
0x4203: ret 
0x4204: call 0x1590
0x4209: call 0x1650
0x420e: nop 
0x4210: sub rsp,0x48
0x4214: mov rax,rdx
0x4217: mov rdx,rcx
0x421a: mov rcx,qword ptr fs:[0x28]
0x4223: mov qword ptr [rsp+0x38],rcx
0x4228: xor ecx,ecx
0x422a: cmp esi,0xa
0x422d: jz 0x4290
0x422f: mov dword ptr [rsp],esi
0x4232: mov rcx,rsp
0x4235: mov rsi,rax
0x4238: mov qword ptr [rsp+0x4],0x0
0x4241: mov qword ptr [rsp+0xc],0x0
0x424a: mov qword ptr [rsp+0x14],0x0
0x4253: mov qword ptr [rsp+0x1c],0x0
0x425c: mov qword ptr [rsp+0x24],0x0
0x4265: mov qword ptr [rsp+0x2c],0x0
0x426e: mov dword ptr [rsp+0x34],0x0
0x4276: call 0x3c30
0x427b: mov rdx,qword ptr [rsp+0x38]
0x4280: xor rdx,qword ptr fs:[0x28]
0x4289: jnz 0x4295
0x428b: add rsp,0x48
0x428f: ret 
0x4290: call 0x1590
0x4295: call 0x1650
0x429a: nop word ptr [rax+rax*0x1]
0x42a0: mov rdx,rsi
0x42a3: mov esi,edi
0x42a5: xor edi,edi
0x42a7: jmp 0x4180
0x42b0: mov rcx,rdx
0x42b3: mov rdx,rsi
0x42b6: mov esi,edi
0x42b8: xor edi,edi
0x42ba: jmp 0x4210
0x42c0: sub rsp,0x48
0x42c4: mov ecx,edx
0x42c6: mov rax,qword ptr fs:[0x28]
0x42cf: mov qword ptr [rsp+0x38],rax
0x42d4: xor eax,eax
0x42d6: mov rax,qword ptr [rip+0x206fb3]
0x42dd: mov r8,rsp
0x42e0: and ecx,0x1f
0x42e3: movdqa xmm0,xmmword ptr [rip+0x206f75]
0x42eb: mov qword ptr [rsp+0x30],rax
0x42f0: mov eax,edx
0x42f2: movaps xmmword ptr [rsp],xmm0
0x42f6: shr al,0x5
0x42f9: movzx eax,al
0x42fc: lea r9,[r8+rax*0x4+0x8]
0x4301: movdqa xmm0,xmmword ptr [rip+0x206f67]
0x4309: movaps xmmword ptr [rsp+0x10],xmm0
0x430e: movdqa xmm0,xmmword ptr [rip+0x206f6a]
0x4316: movaps xmmword ptr [rsp+0x20],xmm0
0x431b: mov edx,dword ptr [r9]
0x431e: mov eax,edx
0x4320: shr eax,cl
0x4322: not eax
0x4324: and eax,0x1
0x4327: shl eax,cl
0x4329: mov rcx,r8
0x432c: xor eax,edx
0x432e: mov rdx,rsi
0x4331: mov rsi,rdi
0x4334: mov dword ptr [r9],eax
0x4337: xor edi,edi
0x4339: call 0x3c30
0x433e: mov rsi,qword ptr [rsp+0x38]
0x4343: xor rsi,qword ptr fs:[0x28]
0x434c: jnz 0x4353
0x434e: add rsp,0x48
0x4352: ret 
0x4353: call 0x1650
0x4358: nop dword ptr [rax+rax*0x1]
0x4360: movsx edx,sil
0x4364: mov rsi,-0x1
0x436b: jmp 0x42c0
0x4370: mov edx,0x3a
0x4375: mov rsi,-0x1
0x437c: jmp 0x42c0
0x4390: mov edx,0x3a
0x4395: jmp 0x42c0
0x43a0: sub rsp,0x48
0x43a4: mov rax,rdx
0x43a7: mov rdx,qword ptr fs:[0x28]
0x43b0: mov qword ptr [rsp+0x38],rdx
0x43b5: xor edx,edx
0x43b7: cmp esi,0xa
0x43ba: jz 0x4424
0x43bc: mov dword ptr [rsp],esi
0x43bf: mov rcx,rsp
0x43c2: mov rdx,-0x1
0x43c9: mov rsi,rax
0x43cc: mov qword ptr [rsp+0x4],0x0
0x43d5: mov qword ptr [rsp+0xc],0x4000000
0x43de: mov qword ptr [rsp+0x14],0x0
0x43e7: mov qword ptr [rsp+0x1c],0x0
0x43f0: mov qword ptr [rsp+0x24],0x0
0x43f9: mov qword ptr [rsp+0x2c],0x0
0x4402: mov dword ptr [rsp+0x34],0x0
0x440a: call 0x3c30
0x440f: mov rcx,qword ptr [rsp+0x38]
0x4414: xor rcx,qword ptr fs:[0x28]
0x441d: jnz 0x4429
0x441f: add rsp,0x48
0x4423: ret 
0x4424: call 0x1590
0x4429: call 0x1650
0x442e: nop 
0x4430: sub rsp,0x48
0x4434: mov r9,rcx
0x4437: mov rcx,qword ptr [rip+0x206e52]
0x443e: movdqa xmm0,xmmword ptr [rip+0x206e1a]
0x4446: mov rax,qword ptr fs:[0x28]
0x444f: mov qword ptr [rsp+0x38],rax
0x4454: xor eax,eax
0x4456: movaps xmmword ptr [rsp],xmm0
0x445a: test rsi,rsi
0x445d: mov qword ptr [rsp+0x30],rcx
0x4462: mov dword ptr [rsp],0xa
0x4469: movdqa xmm0,xmmword ptr [rip+0x206dff]
0x4471: movaps xmmword ptr [rsp+0x10],xmm0
0x4476: movdqa xmm0,xmmword ptr [rip+0x206e02]
0x447e: movaps xmmword ptr [rsp+0x20],xmm0
0x4483: jz 0x44b7
0x4485: test rdx,rdx
0x4488: jz 0x44b7
0x448a: mov qword ptr [rsp+0x28],rsi
0x448f: mov qword ptr [rsp+0x30],rdx
0x4494: mov rcx,rsp
0x4497: mov rdx,r8
0x449a: mov rsi,r9
0x449d: call 0x3c30
0x44a2: mov rdi,qword ptr [rsp+0x38]
0x44a7: xor rdi,qword ptr fs:[0x28]
0x44b0: jnz 0x44bc
0x44b2: add rsp,0x48
0x44b6: ret 
0x44b7: call 0x1590
0x44bc: call 0x1650
0x44c1: nop dword ptr [rax+rax*0x1]
0x44c6: nop word ptr cs:[rax+rax*0x1]
0x44d0: mov r8,-0x1
0x44d7: jmp 0x4430
0x44e0: mov rcx,rdx
0x44e3: mov r8,-0x1
0x44ea: mov rdx,rsi
0x44ed: mov rsi,rdi
0x44f0: xor edi,edi
0x44f2: jmp 0x4430
0x4500: mov r8,rcx
0x4503: mov rcx,rdx
0x4506: mov rdx,rsi
0x4509: mov rsi,rdi
0x450c: xor edi,edi
0x450e: jmp 0x4430
0x4520: lea rcx,[rip+0x206af9]
0x4527: jmp 0x3c30
0x4530: lea rcx,[rip+0x206ae9]
0x4537: mov rdx,rsi
0x453a: mov rsi,rdi
0x453d: xor edi,edi
0x453f: jmp 0x3c30
0x4550: lea rcx,[rip+0x206ac9]
0x4557: mov rdx,-0x1
0x455e: jmp 0x3c30
0x46c8: mov r8,rcx
0x46cb: mov rcx,rdx
0x46ce: lea rdx,[rip+0x40bf]
0x46d5: mov esi,0x1
0x46da: xor eax,eax
0x46dc: call 0x1850
0x46e1: jmp 0x45cc
0x49b0: xor r9d,r9d
0x49b3: cmp qword ptr [r8],0x0
0x49b7: jz 0x49cb
0x49b9: nop dword ptr [rax]
0x49c0: add r9,0x1
0x49c4: cmp qword ptr [r8+r9*0x8],0x0
0x49c9: jnz 0x49c0
0x49cb: jmp 0x4590
0x49d0: sub rsp,0x68
0x49d4: mov r10,r8
0x49d7: xor r9d,r9d
0x49da: mov rax,qword ptr fs:[0x28]
0x49e3: mov qword ptr [rsp+0x58],rax
0x49e8: xor eax,eax
0x49ea: mov r8,rsp
0x49ed: nop dword ptr [rax]
0x49f0: mov eax,dword ptr [r10]
0x49f3: cmp eax,0x2f
0x49f6: ja 0x4a3a
0x49f8: mov r11d,eax
0x49fb: add r11,qword ptr [r10+0x10]
0x49ff: add eax,0x8
0x4a02: mov dword ptr [r10],eax
0x4a05: mov rax,qword ptr [r11]
0x4a08: test rax,rax
0x4a0b: mov qword ptr [r8+r9*0x8],rax
0x4a0f: jz 0x4a1b
0x4a11: add r9,0x1
0x4a15: cmp r9,0xa
0x4a19: jnz 0x49f0
0x4a1b: call 0x4590
0x4a20: mov rax,qword ptr [rsp+0x58]
0x4a25: xor rax,qword ptr fs:[0x28]
0x4a2e: jnz 0x4a35
0x4a30: add rsp,0x68
0x4a34: ret 
0x4a35: call 0x1650
0x4a3a: mov r11,qword ptr [r10+0x8]
0x4a3e: lea rax,[r11+0x8]
0x4a42: mov qword ptr [r10+0x8],rax
0x4a46: jmp 0x4a05
0x4b30: push rbx
0x4b31: lea rsi,[rip+0x3caa]
0x4b38: mov edx,0x5
0x4b3d: xor edi,edi
0x4b3f: call 0x1620
0x4b44: lea rdx,[rip+0x3cac]
0x4b4b: mov rsi,rax
0x4b4e: mov edi,0x1
0x4b53: xor eax,eax
0x4b55: call 0x17b0
0x4b5a: lea rsi,[rip+0x3cac]
0x4b61: mov edx,0x5
0x4b66: xor edi,edi
0x4b68: call 0x1620
0x4b6d: lea rcx,[rip+0x350c]
0x4b74: lea rdx,[rip+0x2ec3]
0x4b7b: mov rsi,rax
0x4b7e: mov edi,0x1
0x4b83: xor eax,eax
0x4b85: call 0x17b0
0x4b8a: mov rbx,qword ptr [rip+0x2064f7]
0x4b91: lea rsi,[rip+0x3ea8]
0x4b98: xor edi,edi
0x4b9a: mov edx,0x5
0x4b9f: call 0x1620
0x4ba4: mov rsi,rbx
0x4ba7: mov rdi,rax
0x4baa: pop rbx
0x4bab: jmp 0x16f0
0x4bbe: test rbx,rbx
0x4bc1: jnz 0x4bc5
0x4bc5: call 0x4e00
0x4bca: nop word ptr [rax+rax*0x1]
0x4bd0: mov rax,rdi
0x4bd3: mul rsi
0x4bd6: mov rdi,rax
0x4bd9: seto al
0x4bdc: test rdi,rdi
0x4bdf: js 0x4beb
0x4be1: movzx eax,al
0x4be4: test rax,rax
0x4be7: jnz 0x4beb
0x4be9: jmp 0x4bb0
0x4beb: sub rsp,0x8
0x4bef: call 0x4e00
0x4bf4: nop 
0x4bf6: nop word ptr cs:[rax+rax*0x1]
0x4c00: jmp 0x4bb0
0x4c19: test rdi,rdi
0x4c1c: jnz 0x4c38
0x4c2b: test rbx,rbx
0x4c2e: jnz 0x4c41
0x4c38: call 0x1580
0x4c3d: xor eax,eax
0x4c3f: pop rbx
0x4c40: ret 
0x4c41: call 0x4e00
0x4c46: nop word ptr cs:[rax+rax*0x1]
0x4c50: mov rax,rsi
0x4c53: mul rdx
0x4c56: mov rsi,rax
0x4c59: seto al
0x4c5c: test rsi,rsi
0x4c5f: js 0x4c6b
0x4c61: movzx eax,al
0x4c64: test rax,rax
0x4c67: jnz 0x4c6b
0x4c69: jmp 0x4c10
0x4c6b: sub rsp,0x8
0x4c6f: call 0x4e00
0x4c74: nop 
0x4c76: nop word ptr cs:[rax+rax*0x1]
0x4c80: test rdi,rdi
0x4c83: mov r9,rdx
0x4c86: mov rcx,qword ptr [rsi]
0x4c89: jz 0x4cc0
0x4c8b: xor edx,edx
0x4c8d: mov rax,0x5555555555555554
0x4c97: div r9
0x4c9a: cmp rax,rcx
0x4c9d: jbe 0x4cdb
0x4c9f: mov rax,rcx
0x4ca2: shr rax,0x1
0x4ca5: lea rcx,[rax+rcx*0x1+0x1]
0x4caa: mov qword ptr [rsi],rcx
0x4cad: imul rcx,r9
0x4cb1: mov rsi,rcx
0x4cb4: jmp 0x4c10
0x4cc0: test rcx,rcx
0x4cc3: jz 0x4ce8
0x4cc5: mov rax,rcx
0x4cc8: mul r9
0x4ccb: seto dl
0x4cce: test rax,rax
0x4cd1: movzx edx,dl
0x4cd4: js 0x4cdb
0x4cd6: test rdx,rdx
0x4cd9: jz 0x4caa
0x4cdb: sub rsp,0x8
0x4cdf: call 0x4e00
0x4ce4: nop dword ptr [rax]
0x4ce8: xor edx,edx
0x4cea: mov eax,0x80
0x4cef: xor r8d,r8d
0x4cf2: div r9
0x4cf5: test rax,rax
0x4cf8: setz r8b
0x4cfc: lea rcx,[r8+rax*0x1]
0x4d00: jmp 0x4cc5
0x4d10: test rdi,rdi
0x4d13: mov rax,qword ptr [rsi]
0x4d16: jz 0x4d40
0x4d18: mov rdx,0x5555555555555553
0x4d22: cmp rax,rdx
0x4d25: ja 0x4d51
0x4d27: mov rdx,rax
0x4d2a: shr rdx,0x1
0x4d2d: lea rax,[rdx+rax*0x1+0x1]
0x4d32: mov qword ptr [rsi],rax
0x4d35: mov rsi,rax
0x4d38: jmp 0x4c10
0x4d40: test rax,rax
0x4d43: mov edx,0x80
0x4d48: cmovz rax,rdx
0x4d4c: test rax,rax
0x4d4f: jns 0x4d32
0x4d51: sub rsp,0x8
0x4d55: call 0x4e00
0x4d5a: nop word ptr [rax+rax*0x1]
0x4d60: push rbx
0x4d61: mov rbx,rdi
0x4d64: call 0x4bb0
0x4d69: mov rdx,rbx
0x4d6c: xor esi,esi
0x4d6e: mov rdi,rax
0x4d71: pop rbx
0x4d72: jmp 0x16d0
0x4d80: mov rax,rdi
0x4d83: sub rsp,0x8
0x4d87: mul rsi
0x4d8a: seto dl
0x4d8d: test rax,rax
0x4d90: js 0x4da9
0x4d92: movzx edx,dl
0x4d95: test rdx,rdx
0x4d98: jnz 0x4da9
0x4d9a: call 0x1700
0x4d9f: test rax,rax
0x4da2: jz 0x4da9
0x4da4: add rsp,0x8
0x4da8: ret 
0x4da9: call 0x4e00
0x4dae: nop 
0x4e30: call 0x1590
0x4e35: nop word ptr cs:[rax+rax*0x1]
0x4e3f: nop 
0x4e67: nop word ptr [rax+rax*0x1]
0x4f16: cmp eax,0x22
0x4f19: mov ebp,0x1
0x4f1e: jnz 0x4f48
0x4f42: nop word ptr [rax+rax*0x1]
0x51f5: lea rcx,[rip+0x3a24]
0x51fc: lea rsi,[rip+0x38fd]
0x5203: lea rdi,[rip+0x3916]
0x520a: mov edx,0x54
0x520f: call 0x16b0
0x52af: movaps xmmword ptr [rsp+0x50],xmm0
0x52b4: movaps xmmword ptr [rsp+0x60],xmm1
0x52b9: movaps xmmword ptr [rsp+0x70],xmm2
0x52be: movaps xmmword ptr [0x80+rsp],xmm3
0x52c6: movaps xmmword ptr [0x90+rsp],xmm4
0x52ce: movaps xmmword ptr [0xa0+rsp],xmm5
0x52d6: movaps xmmword ptr [0xb0+rsp],xmm6
0x52de: movaps xmmword ptr [0xc0+rsp],xmm7
0x5341: nop word ptr cs:[rax+rax*0x1]
0x534b: nop dword ptr [rax+rax*0x1]
0x53d3: nop word ptr cs:[rax+rax*0x1]
0x53dd: nop dword ptr [rax]
0x545e: nop 
0x5476: sub rsp,0x8
0x547a: call 0x1590
0x547f: nop 
0x5600: mov r12,rdx
0x5603: mov rbx,rcx
0x5606: jmp 0x54f2
0x56a8: nop dword ptr [rax+rax*0x1]
0x56b0: push r12
0x56b2: push rbp
0x56b3: mov rbp,rdi
0x56b6: push rbx
0x56b7: call 0x15d0
0x56bc: mov ebx,dword ptr [rbp]
0x56bf: mov rdi,rbp
0x56c2: mov r12,rax
0x56c5: call 0x57d0
0x56ca: and ebx,0x20
0x56cd: test ebx,ebx
0x56cf: jnz 0x56e8
0x56d1: test eax,eax
0x56d3: jz 0x56df
0x56d5: test r12,r12
0x56d8: mov eax,0xffffffff
0x56dd: jz 0x5718
0x56df: pop rbx
0x56e0: pop rbp
0x56e1: pop r12
0x56e3: ret 
0x56e8: test eax,eax
0x56ea: jnz 0x5708
0x56ec: call 0x15a0
0x56f1: mov dword ptr [rax],0x0
0x56f7: mov eax,0xffffffff
0x56fc: pop rbx
0x56fd: pop rbp
0x56fe: pop r12
0x5700: ret 
0x5708: pop rbx
0x5709: mov eax,0xffffffff
0x570e: pop rbp
0x570f: pop r12
0x5711: ret 
0x5718: call 0x15a0
0x571d: cmp dword ptr [rax],0x9
0x5720: pop rbx
0x5721: pop rbp
0x5722: pop r12
0x5724: setnz al
0x5727: movzx eax,al
0x572a: neg eax
0x572c: ret 
0x57d0: push r12
0x57d2: push rbp
0x57d3: push rbx
0x57d4: mov rbx,rdi
0x57d7: call 0x1730
0x57dc: test eax,eax
0x57de: mov rdi,rbx
0x57e1: js 0x5837
0x57e3: call 0x1780
0x57e8: test eax,eax
0x57ea: jnz 0x5818
0x57ec: mov rdi,rbx
0x57ef: call 0x5850
0x57f4: test eax,eax
0x57f6: jz 0x5834
0x57f8: call 0x15a0
0x57fd: mov r12d,dword ptr [rax]
0x5800: mov rdi,rbx
0x5803: mov rbp,rax
0x5806: call 0x1600
0x580b: test r12d,r12d
0x580e: jnz 0x5840
0x5810: pop rbx
0x5811: pop rbp
0x5812: pop r12
0x5814: ret 
0x5818: mov rdi,rbx
0x581b: call 0x1730
0x5820: xor esi,esi
0x5822: mov edx,0x1
0x5827: mov edi,eax
0x5829: call 0x16a0
0x582e: cmp rax,-0x1
0x5832: jnz 0x57ec
0x5834: mov rdi,rbx
0x5837: pop rbx
0x5838: pop rbp
0x5839: pop r12
0x583b: jmp 0x1600
0x5840: mov dword ptr [rbp],r12d
0x5844: mov eax,0xffffffff
0x5849: jmp 0x5810
0x5850: test rdi,rdi
0x5853: push rbx
0x5854: mov rbx,rdi
0x5857: jz 0x586a
0x5859: call 0x1780
0x585e: test eax,eax
0x5860: jz 0x586a
0x5862: test dword ptr [rbx],0x100
0x5868: jnz 0x5878
0x586a: mov rdi,rbx
0x586d: pop rbx
0x586e: jmp 0x1760
0x5878: mov rdi,rbx
0x587b: mov edx,0x1
0x5880: xor esi,esi
0x5882: call 0x5890
0x5887: mov rdi,rbx
0x588a: pop rbx
0x588b: jmp 0x1760
0x5890: mov rax,qword ptr [rdi+0x8]
0x5894: cmp qword ptr [rdi+0x10],rax
0x5898: jz 0x58a0
0x589a: jmp 0x17f0
0x58a0: mov rax,qword ptr [rdi+0x20]
0x58a4: cmp qword ptr [rdi+0x28],rax
0x58a8: jnz 0x589a
0x58aa: cmp qword ptr [rdi+0x48],0x0
0x58af: jnz 0x589a
0x58b1: push r12
0x58b3: push rbp
0x58b4: mov r12d,edx
0x58b7: push rbx
0x58b8: mov rbp,rsi
0x58bb: mov rbx,rdi
0x58be: call 0x1730
0x58c3: mov edx,r12d
0x58c6: mov rsi,rbp
0x58c9: mov edi,eax
0x58cb: call 0x16a0
0x58d0: cmp rax,-0x1
0x58d4: jz 0x58e2
0x58d6: and dword ptr [rbx],0xffffffef
0x58d9: mov qword ptr [0x90+rbx],rax
0x58e0: xor eax,eax
0x58e2: pop rbx
0x58e3: pop rbp
0x58e4: pop r12
0x58e6: ret 
0x59f2: mov rax,qword ptr [rbp-0x418]
0x59f9: mov r12,qword ptr [rax]
0x5ec4: movsxd rdx,ecx
0x5ec7: cmp rdx,r10
0x5eca: jnc 0x5eda
0x5ecc: add rdx,r15
0x5ecf: cmp byte ptr [rdx+r14*0x1],0x0
0x5ed4: jnz 0x6816
0x5eda: cmp ecx,eax
0x5edc: jge 0x5ee6
0x6348: mov byte ptr [rdi+0x1],0x0
0x634c: jmp 0x5e00
0x653b: call 0x15a0
0x6540: mov qword ptr [rbp-0x3c8],rax
0x6547: nop word ptr [rax+rax*0x1]
0x681b: nop dword ptr [rax+rax*0x1]
0x6a50: mov rdx,qword ptr [rdi+0x8]
0x6a54: add rdx,0xf
0x6a58: and rdx,-0x10
0x6a5c: lea r11,[rdx+0x10]
0x6a60: mov qword ptr [rdi+0x8],r11
0x6a64: fld tbyte ptr [rdx]
0x6a66: fstp tbyte ptr [rax+0x10]
0x6a69: nop dword ptr [rax]
0x6a70: add rcx,0x1
0x6a74: add rax,0x20
0x6a78: cmp qword ptr [rsi],rcx
0x6a7b: ja 0x6a38
0x6a86: mov r11d,dword ptr [rdi]
0x6a89: cmp r11d,0x2f
0x6a8d: ja 0x6bca
0x6a93: mov edx,r11d
0x6a96: add rdx,qword ptr [rdi+0x10]
0x6a9a: add r11d,0x8
0x6a9e: mov dword ptr [rdi],r11d
0x6aa1: mov rdx,qword ptr [rdx]
0x6aa4: mov qword ptr [rax+0x10],rdx
0x6aa8: jmp 0x6a70
0x6aaa: mov r11d,dword ptr [rdi]
0x6aad: cmp r11d,0x2f
0x6ab1: ja 0x6bec
0x6ab7: mov edx,r11d
0x6aba: add rdx,qword ptr [rdi+0x10]
0x6abe: add r11d,0x8
0x6ac2: mov dword ptr [rdi],r11d
0x6ac5: mov edx,dword ptr [rdx]
0x6ac7: mov dword ptr [rax+0x10],edx
0x6aca: jmp 0x6a70
0x6acc: mov r11d,dword ptr [rdi]
0x6acf: cmp r11d,0x2f
0x6ad3: ja 0x6bdb
0x6ad9: mov edx,r11d
0x6adc: add rdx,qword ptr [rdi+0x10]
0x6ae0: add r11d,0x8
0x6ae4: mov dword ptr [rdi],r11d
0x6ae7: mov edx,dword ptr [rdx]
0x6ae9: mov byte ptr [rax+0x10],dl
0x6aec: jmp 0x6a70
0x6aee: mov r11d,dword ptr [rdi]
0x6af1: cmp r11d,0x2f
0x6af5: ja 0x6b9a
0x6afb: mov edx,r11d
0x6afe: add rdx,qword ptr [rdi+0x10]
0x6b02: add r11d,0x8
0x6b06: mov dword ptr [rdi],r11d
0x6b09: mov edx,dword ptr [rdx]
0x6b0b: mov word ptr [rax+0x10],dx
0x6b0f: jmp 0x6a70
0x6b14: mov r11d,dword ptr [rdi]
0x6b17: cmp r11d,0x2f
0x6b1b: ja 0x6bab
0x6b21: mov edx,r11d
0x6b24: add rdx,qword ptr [rdi+0x10]
0x6b28: add r11d,0x8
0x6b2c: mov dword ptr [rdi],r11d
0x6b2f: mov rdx,qword ptr [rdx]
0x6b32: test rdx,rdx
0x6b35: cmovz rdx,r9
0x6b39: mov qword ptr [rax+0x10],rdx
0x6b3d: jmp 0x6a70
0x6b42: mov r11d,dword ptr [rdi+0x4]
0x6b46: cmp r11d,0xaf
0x6b4d: ja 0x6bfd
0x6b53: mov edx,r11d
0x6b56: add rdx,qword ptr [rdi+0x10]
0x6b5a: add r11d,0x10
0x6b5e: mov dword ptr [rdi+0x4],r11d
0x6b62: movsd xmm0,qword ptr [rdx]
0x6b66: movsd qword ptr [rax+0x10],xmm0
0x6b6b: jmp 0x6a70
0x6b70: mov r11d,dword ptr [rdi]
0x6b73: cmp r11d,0x2f
0x6b77: ja 0x6bbc
0x6b79: mov edx,r11d
0x6b7c: add rdx,qword ptr [rdi+0x10]
0x6b80: add r11d,0x8
0x6b84: mov dword ptr [rdi],r11d
0x6b87: mov rdx,qword ptr [rdx]
0x6b8a: test rdx,rdx
0x6b8d: cmovz rdx,r10
0x6b91: mov qword ptr [rax+0x10],rdx
0x6b95: jmp 0x6a70
0x6b9a: mov rdx,qword ptr [rdi+0x8]
0x6b9e: lea r11,[rdx+0x8]
0x6ba2: mov qword ptr [rdi+0x8],r11
0x6ba6: jmp 0x6b09
0x6bab: mov rdx,qword ptr [rdi+0x8]
0x6baf: lea r11,[rdx+0x8]
0x6bb3: mov qword ptr [rdi+0x8],r11
0x6bb7: jmp 0x6b2f
0x6bbc: mov rdx,qword ptr [rdi+0x8]
0x6bc0: lea r11,[rdx+0x8]
0x6bc4: mov qword ptr [rdi+0x8],r11
0x6bc8: jmp 0x6b87
0x6bca: mov rdx,qword ptr [rdi+0x8]
0x6bce: lea r11,[rdx+0x8]
0x6bd2: mov qword ptr [rdi+0x8],r11
0x6bd6: jmp 0x6aa1
0x6bdb: mov rdx,qword ptr [rdi+0x8]
0x6bdf: lea r11,[rdx+0x8]
0x6be3: mov qword ptr [rdi+0x8],r11
0x6be7: jmp 0x6ae7
0x6bec: mov rdx,qword ptr [rdi+0x8]
0x6bf0: lea r11,[rdx+0x8]
0x6bf4: mov qword ptr [rdi+0x8],r11
0x6bf8: jmp 0x6ac5
0x6bfd: mov rdx,qword ptr [rdi+0x8]
0x6c01: lea r11,[rdx+0x8]
0x6c05: mov qword ptr [rdi+0x8],r11
0x6c09: jmp 0x6b62
0x76f9: mov rcx,qword ptr [r15+0x8]
0x76fd: cmp qword ptr [rsp+0x8],rcx
0x7702: jz 0x771c
0x7900: push r15
0x7902: push r14
0x7904: mov r15,rdx
0x7907: push r13
0x7909: push r12
0x790b: lea r12,[rip+0x2031be]
0x7912: push rbp
0x7913: lea rbp,[rip+0x2031be]
0x791a: push rbx
0x791b: mov r13d,edi
0x791e: mov r14,rsi
0x7921: sub rbp,r12
0x7924: sub rsp,0x8
0x7928: sar rbp,0x3
0x792c: call 0x1528
0x7931: test rbp,rbp
0x7934: jz 0x7956
0x7936: xor ebx,ebx
0x7938: nop dword ptr [rax+rax*0x1]
0x7940: mov rdx,r15
0x7943: mov rsi,r14
0x7946: mov edi,r13d
0x7949: call qword ptr [r12+rbx*0x8]
0x794d: add rbx,0x1
0x7951: cmp rbp,rbx
0x7954: jnz 0x7940
0x7956: add rsp,0x8
0x795a: pop rbx
0x795b: pop rbp
0x795c: pop r12
0x795e: pop r13
0x7960: pop r14
0x7962: pop r15
0x7964: ret 
0x7970: ret 
0x7990: sub rsp,0x8
0x7994: add rsp,0x8
0x7998: ret 
