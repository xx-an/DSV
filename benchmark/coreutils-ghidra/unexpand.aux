0x1448: sub rsp,0x8
0x144c: mov rax,qword ptr [rip+0x206b7d]
0x1453: test rax,rax
0x1456: jz 0x145a
0x1458: call rax
0x145a: add rsp,0x8
0x145e: ret 
0x1460: push qword ptr [rip+0x2069ca]
0x1466: jmp qword ptr [rip+0x2069cc]
0x1476: push 0x0
0x147b: jmp 0x1460
0x1486: push 0x1
0x148b: jmp 0x1460
0x1496: push 0x2
0x149b: jmp 0x1460
0x14a6: push 0x3
0x14ab: jmp 0x1460
0x14b6: push 0x4
0x14bb: jmp 0x1460
0x14c0: jmp qword ptr [rip+0x2069a2]
0x14c6: push 0x5
0x14cb: jmp 0x1460
0x14d0: jmp qword ptr [rip+0x20699a]
0x14d6: push 0x6
0x14db: jmp 0x1460
0x14e6: push 0x7
0x14eb: jmp 0x1460
0x14f6: push 0x8
0x14fb: jmp 0x1460
0x1506: push 0x9
0x150b: jmp 0x1460
0x1516: push 0xa
0x151b: jmp 0x1460
0x1526: push 0xb
0x152b: jmp 0x1460
0x1536: push 0xc
0x153b: jmp 0x1460
0x1546: push 0xd
0x154b: jmp 0x1460
0x1550: jmp qword ptr [rip+0x20695a]
0x1556: push 0xe
0x155b: jmp 0x1460
0x1566: push 0xf
0x156b: jmp 0x1460
0x1576: push 0x10
0x157b: jmp 0x1460
0x1586: push 0x11
0x158b: jmp 0x1460
0x1596: push 0x12
0x159b: jmp 0x1460
0x15a6: push 0x13
0x15ab: jmp 0x1460
0x15b6: push 0x14
0x15bb: jmp 0x1460
0x15c6: push 0x15
0x15cb: jmp 0x1460
0x15d6: push 0x16
0x15db: jmp 0x1460
0x15e6: push 0x17
0x15eb: jmp 0x1460
0x15f6: push 0x18
0x15fb: jmp 0x1460
0x1606: push 0x19
0x160b: jmp 0x1460
0x1616: push 0x1a
0x161b: jmp 0x1460
0x1620: jmp qword ptr [rip+0x2068f2]
0x1626: push 0x1b
0x162b: jmp 0x1460
0x1630: jmp qword ptr [rip+0x2068ea]
0x1636: push 0x1c
0x163b: jmp 0x1460
0x1646: push 0x1d
0x164b: jmp 0x1460
0x1656: push 0x1e
0x165b: jmp 0x1460
0x1666: push 0x1f
0x166b: jmp 0x1460
0x1676: push 0x20
0x167b: jmp 0x1460
0x1686: push 0x21
0x168b: jmp 0x1460
0x1696: push 0x22
0x169b: jmp 0x1460
0x16a6: push 0x23
0x16ab: jmp 0x1460
0x16b6: push 0x24
0x16bb: jmp 0x1460
0x16c6: push 0x25
0x16cb: jmp 0x1460
0x16d6: push 0x26
0x16db: jmp 0x1460
0x16e6: push 0x27
0x16eb: jmp 0x1460
0x16f6: push 0x28
0x16fb: jmp 0x1460
0x1706: push 0x29
0x170b: jmp 0x1460
0x1716: push 0x2a
0x171b: jmp 0x1460
0x1726: push 0x2b
0x172b: jmp 0x1460
0x1736: push 0x2c
0x173b: jmp 0x1460
0x1746: push 0x2d
0x174b: jmp 0x1460
0x1756: push 0x2e
0x175b: jmp 0x1460
0x1766: push 0x2f
0x176b: jmp 0x1460
0x1770: jmp qword ptr [rip+0x20686a]
0x18cb: nop dword ptr [rax + rax*0x1]
0x1b6f: test eax,eax
0x1b71: jns 0x1a60
0x1b77: lea rsi,[rip+0x3b9c]
0x1b7e: mov edx,0x5
0x1b83: xor edi,edi
0x1b85: call 0x1520
0x1b8a: mov rbx,rax
0x1b8d: call 0x14a0
0x1b92: mov esi,dword ptr [rax]
0x1b94: mov rdx,rbx
0x1b97: mov edi,0x1
0x1b9c: xor eax,eax
0x1b9e: call 0x16d0
0x1c5c: call 0x1550
0x1cd5: nop word ptr cs:[rax + rax*0x1]
0x1cdf: nop 
0x1d0a: hlt 
0x1d10: lea rdi,[rip+0x206389]
0x1d17: push rbp
0x1d18: lea rax,[rip+0x206381]
0x1d1f: cmp rax,rdi
0x1d22: mov rbp,rsp
0x1d25: jz 0x1d40
0x1d27: mov rax,qword ptr [rip+0x206292]
0x1d2e: test rax,rax
0x1d31: jz 0x1d40
0x1d33: pop rbp
0x1d34: jmp rax
0x1d40: pop rbp
0x1d41: ret 
0x1d50: lea rdi,[rip+0x206349]
0x1d57: lea rsi,[rip+0x206342]
0x1d5e: push rbp
0x1d5f: sub rsi,rdi
0x1d62: mov rbp,rsp
0x1d65: sar rsi,0x3
0x1d69: mov rax,rsi
0x1d6c: shr rax,0x3f
0x1d70: add rsi,rax
0x1d73: sar rsi,1
0x1d76: jz 0x1d90
0x1d78: mov rax,qword ptr [rip+0x206259]
0x1d7f: test rax,rax
0x1d82: jz 0x1d90
0x1d84: pop rbp
0x1d85: jmp rax
0x1d90: pop rbp
0x1d91: ret 
0x1da0: cmp byte ptr [rip+0x206341],0x0
0x1da7: jnz 0x1dd8
0x1da9: cmp qword ptr [rip+0x20622f],0x0
0x1db1: push rbp
0x1db2: mov rbp,rsp
0x1db5: jz 0x1dc3
0x1db7: mov rdi,qword ptr [rip+0x20624a]
0x1dbe: call 0x1770
0x1dc3: call 0x1d10
0x1dc8: mov byte ptr [rip+0x206319],0x1
0x1dcf: pop rbp
0x1dd0: ret 
0x1dd8: ret 
0x1de0: push rbp
0x1de1: mov rbp,rsp
0x1de4: pop rbp
0x1de5: jmp 0x1d50
0x26a9: nop dword ptr [rax]
0x27ec: nop dword ptr [rax]
0x2ac1: nop dword ptr [rax + rax*0x1]
0x2ac6: nop word ptr cs:[rax + rax*0x1]
0x2b13: nop dword ptr [rax]
0x2b16: nop word ptr cs:[rax + rax*0x1]
0x2b70: mov qword ptr [rip+0x2055d1],rdi
0x2b77: ret 
0x2b80: mov byte ptr [rip+0x2055b9],dil
0x2b87: ret 
0x2b90: push rbp
0x2b91: push rbx
0x2b92: sub rsp,0x8
0x2b96: mov rdi,qword ptr [rip+0x20550b]
0x2b9d: call 0x5430
0x2ba2: test eax,eax
0x2ba4: jz 0x2bbc
0x2ba6: call 0x14a0
0x2bab: cmp byte ptr [rip+0x20558e],0x0
0x2bb2: mov rbx,rax
0x2bb5: jz 0x2bd3
0x2bb7: cmp dword ptr [rax],0x20
0x2bba: jnz 0x2bd3
0x2bbc: mov rdi,qword ptr [rip+0x20551d]
0x2bc3: call 0x5430
0x2bc8: test eax,eax
0x2bca: jnz 0x2c12
0x2bcc: add rsp,0x8
0x2bd0: pop rbx
0x2bd1: pop rbp
0x2bd2: ret 
0x2bd3: lea rsi,[rip+0x2b40]
0x2bda: xor edi,edi
0x2bdc: mov edx,0x5
0x2be1: call 0x1520
0x2be6: mov rdi,qword ptr [rip+0x20555b]
0x2bed: mov rbp,rax
0x2bf0: test rdi,rdi
0x2bf3: jz 0x2c1d
0x2bf5: call 0x4790
0x2bfa: mov esi,dword ptr [rbx]
0x2bfc: lea rdx,[rip+0x31bc]
0x2c03: mov rcx,rax
0x2c06: mov r8,rbp
0x2c09: xor edi,edi
0x2c0b: xor eax,eax
0x2c0d: call 0x16d0
0x2c12: mov edi,dword ptr [rip+0x205410]
0x2c18: call 0x14c0
0x2c1d: mov esi,dword ptr [rbx]
0x2c1f: lea rdx,[rip+0x319d]
0x2c26: mov rcx,rax
0x2c29: xor edi,edi
0x2c2b: xor eax,eax
0x2c2d: call 0x16d0
0x2c40: jmp 0x15e0
0x2d1f: nop 
0x4003: call 0x1550
0x4044: nop 
0x4046: nop word ptr cs:[rax + rax*0x1]
0x41f1: call 0x1490
0x41f6: call 0x5220
0x41fb: nop dword ptr [rax + rax*0x1]
0x4200: push r12
0x4202: push rbp
0x4203: push rbx
0x4204: mov rbx,rdi
0x4207: call 0x14a0
0x420c: mov r12d,dword ptr [rax]
0x420f: mov rbp,rax
0x4212: lea rax,[rip+0x204047]
0x4219: test rbx,rbx
0x421c: mov esi,0x38
0x4221: cmovz rbx,rax
0x4225: mov rdi,rbx
0x4228: call 0x51d0
0x422d: mov dword ptr [rbp],r12d
0x4231: pop rbx
0x4232: pop rbp
0x4233: pop r12
0x4235: ret 
0x4240: lea rax,[rip+0x204019]
0x4247: test rdi,rdi
0x424a: cmovz rdi,rax
0x424e: mov eax,dword ptr [rdi]
0x4250: ret 
0x4260: lea rax,[rip+0x203ff9]
0x4267: test rdi,rdi
0x426a: cmovz rdi,rax
0x426e: mov dword ptr [rdi],esi
0x4270: ret 
0x4280: lea rax,[rip+0x203fd9]
0x4287: test rdi,rdi
0x428a: mov ecx,esi
0x428c: cmovz rdi,rax
0x4290: mov eax,esi
0x4292: and ecx,0x1f
0x4295: shr al,0x5
0x4298: movzx eax,al
0x429b: lea rdi,[rdi + rax*0x4 + 0x8]
0x42a0: mov esi,dword ptr [rdi]
0x42a2: mov eax,esi
0x42a4: shr eax,cl
0x42a6: xor edx,eax
0x42a8: and eax,0x1
0x42ab: and edx,0x1
0x42ae: shl edx,cl
0x42b0: xor edx,esi
0x42b2: mov dword ptr [rdi],edx
0x42b4: ret 
0x42c0: lea rax,[rip+0x203f99]
0x42c7: test rdi,rdi
0x42ca: cmovz rdi,rax
0x42ce: mov eax,dword ptr [rdi + 0x4]
0x42d1: mov dword ptr [rdi + 0x4],esi
0x42d4: ret 
0x42e0: lea rax,[rip+0x203f79]
0x42e7: test rdi,rdi
0x42ea: cmovz rdi,rax
0x42ee: test rsi,rsi
0x42f1: mov dword ptr [rdi],0xa
0x42f7: jz 0x4307
0x42f9: test rdx,rdx
0x42fc: jz 0x4307
0x42fe: mov qword ptr [rdi + 0x28],rsi
0x4302: mov qword ptr [rdi + 0x30],rdx
0x4306: ret 
0x4307: sub rsp,0x8
0x430b: call 0x1490
0x4310: push r15
0x4312: push r14
0x4314: lea rax,[rip+0x203f45]
0x431b: push r13
0x431d: push r12
0x431f: mov r13,rdi
0x4322: push rbp
0x4323: push rbx
0x4324: mov rbx,r8
0x4327: mov r14,rsi
0x432a: mov r15,rdx
0x432d: sub rsp,0x18
0x4331: test r8,r8
0x4334: cmovz rbx,rax
0x4338: mov qword ptr [rsp + 0x8],rcx
0x433d: call 0x14a0
0x4342: mov r12d,dword ptr [rax]
0x4345: mov rbp,rax
0x4348: lea rax,[rbx + 0x8]
0x434c: sub rsp,0x8
0x4350: mov r9d,dword ptr [rbx + 0x4]
0x4354: push qword ptr [rbx + 0x30]
0x4357: mov r8d,dword ptr [rbx]
0x435a: push qword ptr [rbx + 0x28]
0x435d: mov rdx,r15
0x4360: push rax
0x4361: mov rcx,qword ptr [rsp + 0x28]
0x4366: mov rsi,r14
0x4369: mov rdi,r13
0x436c: call 0x2e10
0x4371: mov dword ptr [rbp],r12d
0x4375: add rsp,0x38
0x4379: pop rbx
0x437a: pop rbp
0x437b: pop r12
0x437d: pop r13
0x437f: pop r14
0x4381: pop r15
0x4383: ret 
0x4390: push r15
0x4392: push r14
0x4394: lea rax,[rip+0x203ec5]
0x439b: push r13
0x439d: push r12
0x439f: mov r12,rdx
0x43a2: push rbp
0x43a3: push rbx
0x43a4: mov rbx,rcx
0x43a7: mov r14,rdi
0x43aa: mov r15,rsi
0x43ad: sub rsp,0x38
0x43b1: test rcx,rcx
0x43b4: cmovz rbx,rax
0x43b8: xor ebp,ebp
0x43ba: call 0x14a0
0x43bf: test r12,r12
0x43c2: mov r13,rax
0x43c5: mov eax,dword ptr [rax]
0x43c7: setz bpl
0x43cb: or ebp,dword ptr [rbx + 0x4]
0x43ce: lea r10,[rbx + 0x8]
0x43d2: sub rsp,0x8
0x43d6: mov r8d,dword ptr [rbx]
0x43d9: mov rcx,r15
0x43dc: mov dword ptr [rsp + 0x14],eax
0x43e0: push qword ptr [rbx + 0x30]
0x43e3: mov rdx,r14
0x43e6: push qword ptr [rbx + 0x28]
0x43e9: push r10
0x43eb: xor esi,esi
0x43ed: mov r9d,ebp
0x43f0: xor edi,edi
0x43f2: mov qword ptr [rsp + 0x40],r10
0x43f7: call 0x2e10
0x43fc: lea rsi,[rax + 0x1]
0x4400: mov qword ptr [rsp + 0x48],rax
0x4405: add rsp,0x20
0x4409: mov rdi,rsi
0x440c: mov qword ptr [rsp + 0x18],rsi
0x4411: call 0x4fd0
0x4416: mov qword ptr [rsp + 0x10],rax
0x441b: sub rsp,0x8
0x441f: push qword ptr [rbx + 0x30]
0x4422: push qword ptr [rbx + 0x28]
0x4425: mov r10,qword ptr [rsp + 0x38]
0x442a: mov r9d,ebp
0x442d: mov r8d,dword ptr [rbx]
0x4430: mov rcx,r15
0x4433: mov rdx,r14
0x4436: mov rdi,rax
0x4439: push r10
0x443b: mov rsi,qword ptr [rsp + 0x38]
0x4440: call 0x2e10
0x4445: mov eax,dword ptr [rsp + 0x2c]
0x4449: add rsp,0x20
0x444d: test r12,r12
0x4450: mov dword ptr [r13],eax
0x4454: jz 0x445f
0x4456: mov r11,qword ptr [rsp + 0x28]
0x445b: mov qword ptr [r12],r11
0x445f: mov rax,qword ptr [rsp + 0x10]
0x4464: add rsp,0x38
0x4468: pop rbx
0x4469: pop rbp
0x446a: pop r12
0x446c: pop r13
0x446e: pop r14
0x4470: pop r15
0x4472: ret 
0x4480: mov rcx,rdx
0x4483: xor edx,edx
0x4485: jmp 0x4390
0x4490: mov eax,dword ptr [rip+0x203be2]
0x4496: push r12
0x4498: mov r12,qword ptr [rip+0x203be1]
0x449f: push rbp
0x44a0: push rbx
0x44a1: cmp eax,0x1
0x44a4: jle 0x44d1
0x44a6: sub eax,0x2
0x44a9: lea rbx,[r12 + 0x18]
0x44ae: shl rax,0x4
0x44b2: lea rbp,[r12 + rax*0x1 + 0x28]
0x44b7: nop word ptr [rax + rax*0x1]
0x44c0: mov rdi,qword ptr [rbx]
0x44c3: add rbx,0x10
0x44c7: call 0x1480
0x44cc: cmp rbx,rbp
0x44cf: jnz 0x44c0
0x44d1: mov rdi,qword ptr [r12 + 0x8]
0x44d6: lea rbx,[rip+0x203c83]
0x44dd: cmp rdi,rbx
0x44e0: jz 0x44f9
0x44e2: call 0x1480
0x44e7: mov qword ptr [rip+0x203b9e],0x100
0x44f2: mov qword ptr [rip+0x203b9f],rbx
0x44f9: lea rbx,[rip+0x203b90]
0x4500: cmp r12,rbx
0x4503: jz 0x4514
0x4505: mov rdi,r12
0x4508: call 0x1480
0x450d: mov qword ptr [rip+0x203b6c],rbx
0x4514: pop rbx
0x4515: mov dword ptr [rip+0x203b59],0x1
0x451f: pop rbp
0x4520: pop r12
0x4522: ret 
0x4530: lea rcx,[rip+0x203d29]
0x4537: mov rdx,-0x1
0x453e: jmp 0x4050
0x4550: lea rcx,[rip+0x203d09]
0x4557: jmp 0x4050
0x4560: lea rcx,[rip+0x203cf9]
0x4567: mov rsi,rdi
0x456a: mov rdx,-0x1
0x4571: xor edi,edi
0x4573: jmp 0x4050
0x4580: lea rcx,[rip+0x203cd9]
0x4587: mov rdx,rsi
0x458a: mov rsi,rdi
0x458d: xor edi,edi
0x458f: jmp 0x4050
0x45a0: sub rsp,0x48
0x45a4: mov rax,rdx
0x45a7: mov rdx,qword ptr fs:[rip+0xffffffffffffba78]
0x45b0: mov qword ptr [rsp + 0x38],rdx
0x45b5: xor edx,edx
0x45b7: cmp esi,0xa
0x45ba: jz 0x4624
0x45bc: mov dword ptr [rsp],esi
0x45bf: mov rcx,rsp
0x45c2: mov rdx,-0x1
0x45c9: mov rsi,rax
0x45cc: mov qword ptr [rsp + 0x4],0x0
0x45d5: mov qword ptr [rsp + 0xc],0x0
0x45de: mov qword ptr [rsp + 0x14],0x0
0x45e7: mov qword ptr [rsp + 0x1c],0x0
0x45f0: mov qword ptr [rsp + 0x24],0x0
0x45f9: mov qword ptr [rsp + 0x2c],0x0
0x4602: mov dword ptr [rsp + 0x34],0x0
0x460a: call 0x4050
0x460f: mov rcx,qword ptr [rsp + 0x38]
0x4614: xor rcx,qword ptr fs:[rip+0xffffffffffffba0b]
0x461d: jnz 0x4629
0x461f: add rsp,0x48
0x4623: ret 
0x4624: call 0x1490
0x4629: call 0x1550
0x462e: nop 
0x4630: sub rsp,0x48
0x4634: mov rax,rdx
0x4637: mov rdx,rcx
0x463a: mov rcx,qword ptr fs:[rip+0xffffffffffffb9e5]
0x4643: mov qword ptr [rsp + 0x38],rcx
0x4648: xor ecx,ecx
0x464a: cmp esi,0xa
0x464d: jz 0x46b0
0x464f: mov dword ptr [rsp],esi
0x4652: mov rcx,rsp
0x4655: mov rsi,rax
0x4658: mov qword ptr [rsp + 0x4],0x0
0x4661: mov qword ptr [rsp + 0xc],0x0
0x466a: mov qword ptr [rsp + 0x14],0x0
0x4673: mov qword ptr [rsp + 0x1c],0x0
0x467c: mov qword ptr [rsp + 0x24],0x0
0x4685: mov qword ptr [rsp + 0x2c],0x0
0x468e: mov dword ptr [rsp + 0x34],0x0
0x4696: call 0x4050
0x469b: mov rdx,qword ptr [rsp + 0x38]
0x46a0: xor rdx,qword ptr fs:[rip+0xffffffffffffb97f]
0x46a9: jnz 0x46b5
0x46ab: add rsp,0x48
0x46af: ret 
0x46b0: call 0x1490
0x46b5: call 0x1550
0x46ba: nop word ptr [rax + rax*0x1]
0x46c0: mov rdx,rsi
0x46c3: mov esi,edi
0x46c5: xor edi,edi
0x46c7: jmp 0x45a0
0x46d0: mov rcx,rdx
0x46d3: mov rdx,rsi
0x46d6: mov esi,edi
0x46d8: xor edi,edi
0x46da: jmp 0x4630
0x46e0: sub rsp,0x48
0x46e4: mov ecx,edx
0x46e6: mov rax,qword ptr fs:[rip+0xffffffffffffb939]
0x46ef: mov qword ptr [rsp + 0x38],rax
0x46f4: xor eax,eax
0x46f6: mov rax,qword ptr [rip+0x203b93]
0x46fd: mov r8,rsp
0x4700: and ecx,0x1f
0x4703: movdqa xmm0,[rip+0x203b55]
0x470b: mov qword ptr [rsp + 0x30],rax
0x4710: mov eax,edx
0x4712: movaps xmmword ptr [rsp],xmm0
0x4716: shr al,0x5
0x4719: movzx eax,al
0x471c: lea r9,[r8 + rax*0x4 + 0x8]
0x4721: movdqa xmm0,[rip+0x203b47]
0x4729: movaps xmmword ptr [rsp + 0x10],xmm0
0x472e: movdqa xmm0,[rip+0x203b4a]
0x4736: movaps xmmword ptr [rsp + 0x20],xmm0
0x473b: mov edx,dword ptr [r9]
0x473e: mov eax,edx
0x4740: shr eax,cl
0x4742: not eax
0x4744: and eax,0x1
0x4747: shl eax,cl
0x4749: mov rcx,r8
0x474c: xor eax,edx
0x474e: mov rdx,rsi
0x4751: mov rsi,rdi
0x4754: mov dword ptr [r9],eax
0x4757: xor edi,edi
0x4759: call 0x4050
0x475e: mov rsi,qword ptr [rsp + 0x38]
0x4763: xor rsi,qword ptr fs:[rip+0xffffffffffffb8bc]
0x476c: jnz 0x4773
0x476e: add rsp,0x48
0x4772: ret 
0x4773: call 0x1550
0x4778: nop dword ptr [rax + rax*0x1]
0x4780: movsx edx,sil
0x4784: mov rsi,-0x1
0x478b: jmp 0x46e0
0x4790: mov edx,0x3a
0x4795: mov rsi,-0x1
0x479c: jmp 0x46e0
0x47b0: mov edx,0x3a
0x47b5: jmp 0x46e0
0x4844: call 0x1490
0x4849: call 0x1550
0x484e: nop 
0x4850: sub rsp,0x48
0x4854: mov r9,rcx
0x4857: mov rcx,qword ptr [rip+0x203a32]
0x485e: movdqa xmm0,[rip+0x2039fa]
0x4866: mov rax,qword ptr fs:[rip+0xffffffffffffb7b9]
0x486f: mov qword ptr [rsp + 0x38],rax
0x4874: xor eax,eax
0x4876: movaps xmmword ptr [rsp],xmm0
0x487a: test rsi,rsi
0x487d: mov qword ptr [rsp + 0x30],rcx
0x4882: mov dword ptr [rsp],0xa
0x4889: movdqa xmm0,[rip+0x2039df]
0x4891: movaps xmmword ptr [rsp + 0x10],xmm0
0x4896: movdqa xmm0,[rip+0x2039e2]
0x489e: movaps xmmword ptr [rsp + 0x20],xmm0
0x48a3: jz 0x48d7
0x48a5: test rdx,rdx
0x48a8: jz 0x48d7
0x48aa: mov qword ptr [rsp + 0x28],rsi
0x48af: mov qword ptr [rsp + 0x30],rdx
0x48b4: mov rcx,rsp
0x48b7: mov rdx,r8
0x48ba: mov rsi,r9
0x48bd: call 0x4050
0x48c2: mov rdi,qword ptr [rsp + 0x38]
0x48c7: xor rdi,qword ptr fs:[rip+0xffffffffffffb758]
0x48d0: jnz 0x48dc
0x48d2: add rsp,0x48
0x48d6: ret 
0x48d7: call 0x1490
0x48dc: call 0x1550
0x48e1: nop dword ptr [rax + rax*0x1]
0x48e6: nop word ptr cs:[rax + rax*0x1]
0x48f0: mov r8,-0x1
0x48f7: jmp 0x4850
0x4900: mov rcx,rdx
0x4903: mov r8,-0x1
0x490a: mov rdx,rsi
0x490d: mov rsi,rdi
0x4910: xor edi,edi
0x4912: jmp 0x4850
0x4920: mov r8,rcx
0x4923: mov rcx,rdx
0x4926: mov rdx,rsi
0x4929: mov rsi,rdi
0x492c: xor edi,edi
0x492e: jmp 0x4850
0x4940: lea rcx,[rip+0x2036f9]
0x4947: jmp 0x4050
0x4950: lea rcx,[rip+0x2036e9]
0x4957: mov rdx,rsi
0x495a: mov rsi,rdi
0x495d: xor edi,edi
0x495f: jmp 0x4050
0x4970: lea rcx,[rip+0x2036c9]
0x4977: mov rdx,-0x1
0x497e: jmp 0x4050
0x4ae8: mov r8,rcx
0x4aeb: mov rcx,rdx
0x4aee: lea rdx,[rip+0x17ff]
0x4af5: mov esi,0x1
0x4afa: xor eax,eax
0x4afc: call 0x1730
0x4b01: jmp 0x49ec
0x4dd0: xor r9d,r9d
0x4dd3: cmp qword ptr [r8],0x0
0x4dd7: jz 0x4deb
0x4dd9: nop dword ptr [rax]
0x4de0: add r9,0x1
0x4de4: cmp qword ptr [r8 + r9*0x8],0x0
0x4de9: jnz 0x4de0
0x4deb: jmp 0x49b0
0x4df0: sub rsp,0x68
0x4df4: mov r10,r8
0x4df7: xor r9d,r9d
0x4dfa: mov rax,qword ptr fs:[rip+0xffffffffffffb225]
0x4e03: mov qword ptr [rsp + 0x58],rax
0x4e08: xor eax,eax
0x4e0a: mov r8,rsp
0x4e0d: nop dword ptr [rax]
0x4e10: mov eax,dword ptr [r10]
0x4e13: cmp eax,0x2f
0x4e16: ja 0x4e5a
0x4e18: mov r11d,eax
0x4e1b: add r11,qword ptr [r10 + 0x10]
0x4e1f: add eax,0x8
0x4e22: mov dword ptr [r10],eax
0x4e25: mov rax,qword ptr [r11]
0x4e28: test rax,rax
0x4e2b: mov qword ptr [r8 + r9*0x8],rax
0x4e2f: jz 0x4e3b
0x4e31: add r9,0x1
0x4e35: cmp r9,0xa
0x4e39: jnz 0x4e10
0x4e3b: call 0x49b0
0x4e40: mov rax,qword ptr [rsp + 0x58]
0x4e45: xor rax,qword ptr fs:[rip+0xffffffffffffb1da]
0x4e4e: jnz 0x4e55
0x4e50: add rsp,0x68
0x4e54: ret 
0x4e55: call 0x1550
0x4e5a: mov r11,qword ptr [r10 + 0x8]
0x4e5e: lea rax,[r11 + 0x8]
0x4e62: mov qword ptr [r10 + 0x8],rax
0x4e66: jmp 0x4e25
0x4f30: call 0x1550
0x4f3c: mov rax,rbx
0x4f3f: add rbx,0x8
0x4f43: jmp 0x4ef6
0x4f50: push rbx
0x4f51: lea rsi,[rip+0x13ea]
0x4f58: mov edx,0x5
0x4f5d: xor edi,edi
0x4f5f: call 0x1520
0x4f64: lea rdx,[rip+0x13ec]
0x4f6b: mov rsi,rax
0x4f6e: mov edi,0x1
0x4f73: xor eax,eax
0x4f75: call 0x16c0
0x4f7a: lea rsi,[rip+0x13ec]
0x4f81: mov edx,0x5
0x4f86: xor edi,edi
0x4f88: call 0x1520
0x4f8d: lea rcx,[rip+0xa1c]
0x4f94: lea rdx,[rip+0x6e8]
0x4f9b: mov rsi,rax
0x4f9e: mov edi,0x1
0x4fa3: xor eax,eax
0x4fa5: call 0x16c0
0x4faa: mov rbx,qword ptr [rip+0x2030f7]
0x4fb1: lea rsi,[rip+0x15e8]
0x4fb8: xor edi,edi
0x4fba: mov edx,0x5
0x4fbf: call 0x1520
0x4fc4: mov rsi,rbx
0x4fc7: mov rdi,rax
0x4fca: pop rbx
0x4fcb: jmp 0x1610
0x4fea: nop word ptr [rax + rax*0x1]
0x4ff0: mov rax,rdi
0x4ff3: mul rsi
0x4ff6: mov rdi,rax
0x4ff9: seto al
0x4ffc: test rdi,rdi
0x4fff: js 0x500b
0x5001: movzx eax,al
0x5004: test rax,rax
0x5007: jnz 0x500b
0x5009: jmp 0x4fd0
0x500b: sub rsp,0x8
0x500f: call 0x5220
0x5014: nop 
0x5016: nop word ptr cs:[rax + rax*0x1]
0x5020: jmp 0x4fd0
0x5066: nop word ptr cs:[rax + rax*0x1]
0x5070: mov rax,rsi
0x5073: mul rdx
0x5076: mov rsi,rax
0x5079: seto al
0x507c: test rsi,rsi
0x507f: js 0x508b
0x5081: movzx eax,al
0x5084: test rax,rax
0x5087: jnz 0x508b
0x5089: jmp 0x5030
0x508b: sub rsp,0x8
0x508f: call 0x5220
0x5094: nop 
0x5096: nop word ptr cs:[rax + rax*0x1]
0x50a0: test rdi,rdi
0x50a3: mov r9,rdx
0x50a6: mov rcx,qword ptr [rsi]
0x50a9: jz 0x50e0
0x50ab: xor edx,edx
0x50ad: mov rax,0x5555555555555554
0x50b7: div r9
0x50ba: cmp rax,rcx
0x50bd: jbe 0x50fb
0x50bf: mov rax,rcx
0x50c2: shr rax,1
0x50c5: lea rcx,[rax + rcx*0x1 + 0x1]
0x50ca: mov qword ptr [rsi],rcx
0x50cd: imul rcx,r9
0x50d1: mov rsi,rcx
0x50d4: jmp 0x5030
0x50e0: test rcx,rcx
0x50e3: jz 0x5108
0x50e5: mov rax,rcx
0x50e8: mul r9
0x50eb: seto dl
0x50ee: test rax,rax
0x50f1: movzx edx,dl
0x50f4: js 0x50fb
0x50f6: test rdx,rdx
0x50f9: jz 0x50ca
0x50fb: sub rsp,0x8
0x50ff: call 0x5220
0x5104: nop dword ptr [rax]
0x5108: xor edx,edx
0x510a: mov eax,0x80
0x510f: xor r8d,r8d
0x5112: div r9
0x5115: test rax,rax
0x5118: setz r8b
0x511c: lea rcx,[r8 + rax*0x1]
0x5120: jmp 0x50e5
0x5130: test rdi,rdi
0x5133: mov rax,qword ptr [rsi]
0x5136: jz 0x5160
0x5138: mov rdx,0x5555555555555553
0x5142: cmp rax,rdx
0x5145: ja 0x5171
0x5147: mov rdx,rax
0x514a: shr rdx,1
0x514d: lea rax,[rdx + rax*0x1 + 0x1]
0x5152: mov qword ptr [rsi],rax
0x5155: mov rsi,rax
0x5158: jmp 0x5030
0x5160: test rax,rax
0x5163: mov edx,0x80
0x5168: cmovz rax,rdx
0x516c: test rax,rax
0x516f: jns 0x5152
0x5171: sub rsp,0x8
0x5175: call 0x5220
0x517a: nop word ptr [rax + rax*0x1]
0x5180: push rbx
0x5181: mov rbx,rdi
0x5184: call 0x4fd0
0x5189: mov rdx,rbx
0x518c: xor esi,esi
0x518e: mov rdi,rax
0x5191: pop rbx
0x5192: jmp 0x15c0
0x51a0: mov rax,rdi
0x51a3: sub rsp,0x8
0x51a7: mul rsi
0x51aa: seto dl
0x51ad: test rax,rax
0x51b0: js 0x51c9
0x51b2: movzx edx,dl
0x51b5: test rdx,rdx
0x51b8: jnz 0x51c9
0x51ba: call 0x1620
0x51bf: test rax,rax
0x51c2: jz 0x51c9
0x51c4: add rsp,0x8
0x51c8: ret 
0x51c9: call 0x5220
0x51ce: nop 
0x51d0: push rbp
0x51d1: push rbx
0x51d2: mov rbp,rdi
0x51d5: mov rdi,rsi
0x51d8: mov rbx,rsi
0x51db: sub rsp,0x8
0x51df: call 0x4fd0
0x51e4: add rsp,0x8
0x51e8: mov rdx,rbx
0x51eb: mov rsi,rbp
0x51ee: pop rbx
0x51ef: pop rbp
0x51f0: mov rdi,rax
0x51f3: jmp 0x1630
0x5200: push rbx
0x5201: mov rbx,rdi
0x5204: call 0x1540
0x5209: mov rdi,rbx
0x520c: lea rsi,[rax + 0x1]
0x5210: pop rbx
0x5211: jmp 0x51d0
0x5255: nop word ptr cs:[rax + rax*0x1]
0x525f: nop 
0x5278: nop dword ptr [rax + rax*0x1]
0x541e: call 0x1550
0x5423: nop word ptr cs:[rax + rax*0x1]
0x542d: nop dword ptr [rax]
0x5430: push r12
0x5432: push rbp
0x5433: mov rbp,rdi
0x5436: push rbx
0x5437: call 0x14d0
0x543c: mov ebx,dword ptr [rbp]
0x543f: mov rdi,rbp
0x5442: mov r12,rax
0x5445: call 0x5280
0x544a: and ebx,0x20
0x544d: test ebx,ebx
0x544f: jnz 0x5468
0x5451: test eax,eax
0x5453: jz 0x545f
0x5455: test r12,r12
0x5458: mov eax,0xffffffff
0x545d: jz 0x5498
0x545f: pop rbx
0x5460: pop rbp
0x5461: pop r12
0x5463: ret 
0x5468: test eax,eax
0x546a: jnz 0x5488
0x546c: call 0x14a0
0x5471: mov dword ptr [rax],0x0
0x5477: mov eax,0xffffffff
0x547c: pop rbx
0x547d: pop rbp
0x547e: pop r12
0x5480: ret 
0x5488: pop rbx
0x5489: mov eax,0xffffffff
0x548e: pop rbp
0x548f: pop r12
0x5491: ret 
0x5498: call 0x14a0
0x549d: cmp dword ptr [rax],0x9
0x54a0: pop rbx
0x54a1: pop rbp
0x54a2: pop r12
0x54a4: setnz al
0x54a7: movzx eax,al
0x54aa: neg eax
0x54ac: ret 
0x5550: push r15
0x5552: push r14
0x5554: mov r15,rdx
0x5557: push r13
0x5559: push r12
0x555b: lea r12,[rip+0x2025ae]
0x5562: push rbp
0x5563: lea rbp,[rip+0x2025ae]
0x556a: push rbx
0x556b: mov r13d,edi
0x556e: mov r14,rsi
0x5571: sub rbp,r12
0x5574: sub rsp,0x8
0x5578: sar rbp,0x3
0x557c: call 0x1448
0x5581: test rbp,rbp
0x5584: jz 0x55a6
0x5586: xor ebx,ebx
0x5588: nop dword ptr [rax + rax*0x1]
0x5590: mov rdx,r15
0x5593: mov rsi,r14
0x5596: mov edi,r13d
0x5599: call qword ptr [r12 + rbx*0x8]
0x559d: add rbx,0x1
0x55a1: cmp rbp,rbx
0x55a4: jnz 0x5590
0x55a6: add rsp,0x8
0x55aa: pop rbx
0x55ab: pop rbp
0x55ac: pop r12
0x55ae: pop r13
0x55b0: pop r14
0x55b2: pop r15
0x55b4: ret 
0x55c0: ret 
0x55e0: sub rsp,0x8
0x55e4: add rsp,0x8
0x55e8: ret 
