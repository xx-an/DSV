0x1d88: sub rsp,0x8
0x1d8c: mov rax,qword ptr [rip+0x211255]
0x1d93: test rax,rax
0x1d96: jz 0x1d9a
0x1d98: call rax
0x1d9a: add rsp,0x8
0x1d9e: ret 
0x1da0: push qword ptr [rip+0x210f7a]
0x1da6: jmp qword ptr [rip+0x210f7c]
0x1db6: push 0x0
0x1dbb: jmp 0x1da0
0x1dc6: push 0x1
0x1dcb: jmp 0x1da0
0x1dd6: push 0x2
0x1ddb: jmp 0x1da0
0x1de6: push 0x3
0x1deb: jmp 0x1da0
0x1df6: push 0x4
0x1dfb: jmp 0x1da0
0x1e06: push 0x5
0x1e0b: jmp 0x1da0
0x1e10: jmp qword ptr [rip+0x210f4a]
0x1e16: push 0x6
0x1e1b: jmp 0x1da0
0x1e20: jmp qword ptr [rip+0x210f42]
0x1e26: push 0x7
0x1e2b: jmp 0x1da0
0x1e36: push 0x8
0x1e3b: jmp 0x1da0
0x1e46: push 0x9
0x1e4b: jmp 0x1da0
0x1e56: push 0xa
0x1e5b: jmp 0x1da0
0x1e66: push 0xb
0x1e6b: jmp 0x1da0
0x1e76: push 0xc
0x1e7b: jmp 0x1da0
0x1e80: jmp qword ptr [rip+0x210f12]
0x1e86: push 0xd
0x1e8b: jmp 0x1da0
0x1e96: push 0xe
0x1e9b: jmp 0x1da0
0x1ea6: push 0xf
0x1eab: jmp 0x1da0
0x1eb6: push 0x10
0x1ebb: jmp 0x1da0
0x1ec0: jmp qword ptr [rip+0x210ef2]
0x1ec6: push 0x11
0x1ecb: jmp 0x1da0
0x1ed6: push 0x12
0x1edb: jmp 0x1da0
0x1ee6: push 0x13
0x1eeb: jmp 0x1da0
0x1ef6: push 0x14
0x1efb: jmp 0x1da0
0x1f06: push 0x15
0x1f0b: jmp 0x1da0
0x1f16: push 0x16
0x1f1b: jmp 0x1da0
0x1f20: jmp qword ptr [rip+0x210ec2]
0x1f26: push 0x17
0x1f2b: jmp 0x1da0
0x1f36: push 0x18
0x1f3b: jmp 0x1da0
0x1f46: push 0x19
0x1f4b: jmp 0x1da0
0x1f56: push 0x1a
0x1f5b: jmp 0x1da0
0x1f66: push 0x1b
0x1f6b: jmp 0x1da0
0x1f76: push 0x1c
0x1f7b: jmp 0x1da0
0x1f86: push 0x1d
0x1f8b: jmp 0x1da0
0x1f96: push 0x1e
0x1f9b: jmp 0x1da0
0x1fa6: push 0x1f
0x1fab: jmp 0x1da0
0x1fb6: push 0x20
0x1fbb: jmp 0x1da0
0x1fc6: push 0x21
0x1fcb: jmp 0x1da0
0x1fd0: jmp qword ptr [rip+0x210e6a]
0x1fd6: push 0x22
0x1fdb: jmp 0x1da0
0x1fe6: push 0x23
0x1feb: jmp 0x1da0
0x1ff6: push 0x24
0x1ffb: jmp 0x1da0
0x2006: push 0x25
0x200b: jmp 0x1da0
0x2016: push 0x26
0x201b: jmp 0x1da0
0x2026: push 0x27
0x202b: jmp 0x1da0
0x2036: push 0x28
0x203b: jmp 0x1da0
0x2046: push 0x29
0x204b: jmp 0x1da0
0x2056: push 0x2a
0x205b: jmp 0x1da0
0x2060: jmp qword ptr [rip+0x210e22]
0x2066: push 0x2b
0x206b: jmp 0x1da0
0x2076: push 0x2c
0x207b: jmp 0x1da0
0x2086: push 0x2d
0x208b: jmp 0x1da0
0x2096: push 0x2e
0x209b: jmp 0x1da0
0x20a6: push 0x2f
0x20ab: jmp 0x1da0
0x20b0: jmp qword ptr [rip+0x210dfa]
0x20b6: push 0x30
0x20bb: jmp 0x1da0
0x20c6: push 0x31
0x20cb: jmp 0x1da0
0x20d0: jmp qword ptr [rip+0x210dea]
0x20d6: push 0x32
0x20db: jmp 0x1da0
0x20e6: push 0x33
0x20eb: jmp 0x1da0
0x20f6: push 0x34
0x20fb: jmp 0x1da0
0x2100: jmp qword ptr [rip+0x210dd2]
0x2106: push 0x35
0x210b: jmp 0x1da0
0x2116: push 0x36
0x211b: jmp 0x1da0
0x2126: push 0x37
0x212b: jmp 0x1da0
0x2136: push 0x38
0x213b: jmp 0x1da0
0x2140: jmp qword ptr [rip+0x210db2]
0x2146: push 0x39
0x214b: jmp 0x1da0
0x2156: push 0x3a
0x215b: jmp 0x1da0
0x2166: push 0x3b
0x216b: jmp 0x1da0
0x2176: push 0x3c
0x217b: jmp 0x1da0
0x2186: push 0x3d
0x218b: jmp 0x1da0
0x2196: push 0x3e
0x219b: jmp 0x1da0
0x21a6: push 0x3f
0x21ab: jmp 0x1da0
0x21b6: push 0x40
0x21bb: jmp 0x1da0
0x21c6: push 0x41
0x21cb: jmp 0x1da0
0x21d6: push 0x42
0x21db: jmp 0x1da0
0x21e6: push 0x43
0x21eb: jmp 0x1da0
0x21f0: jmp qword ptr [rip+0x210d5a]
0x21f6: push 0x44
0x21fb: jmp 0x1da0
0x2206: push 0x45
0x220b: jmp 0x1da0
0x2216: push 0x46
0x221b: jmp 0x1da0
0x2226: push 0x47
0x222b: jmp 0x1da0
0x2236: push 0x48
0x223b: jmp 0x1da0
0x2246: push 0x49
0x224b: jmp 0x1da0
0x2256: push 0x4a
0x225b: jmp 0x1da0
0x2266: push 0x4b
0x226b: jmp 0x1da0
0x2276: push 0x4c
0x227b: jmp 0x1da0
0x2286: push 0x4d
0x228b: jmp 0x1da0
0x2296: push 0x4e
0x229b: jmp 0x1da0
0x22a6: push 0x4f
0x22ab: jmp 0x1da0
0x22b6: push 0x50
0x22bb: jmp 0x1da0
0x22c6: push 0x51
0x22cb: jmp 0x1da0
0x22d6: push 0x52
0x22db: jmp 0x1da0
0x22e6: push 0x53
0x22eb: jmp 0x1da0
0x22f6: push 0x54
0x22fb: jmp 0x1da0
0x2300: jmp qword ptr [rip+0x210cf2]
0x2379: nop dword ptr [rax]
0x2449: nop dword ptr [rax]
0x257d: call 0x1f20
0x2582: nop word ptr cs:[rax + rax*0x1]
0x258c: nop dword ptr [rax]
0x25ba: hlt 
0x25c0: lea rdi,[rip+0x210ad9]
0x25c7: push rbp
0x25c8: lea rax,[rip+0x210ad1]
0x25cf: cmp rax,rdi
0x25d2: mov rbp,rsp
0x25d5: jz 0x25f0
0x25d7: mov rax,qword ptr [rip+0x2109fa]
0x25de: test rax,rax
0x25e1: jz 0x25f0
0x25e3: pop rbp
0x25e4: jmp rax
0x25f0: pop rbp
0x25f1: ret 
0x2600: lea rdi,[rip+0x210a99]
0x2607: lea rsi,[rip+0x210a92]
0x260e: push rbp
0x260f: sub rsi,rdi
0x2612: mov rbp,rsp
0x2615: sar rsi,0x3
0x2619: mov rax,rsi
0x261c: shr rax,0x3f
0x2620: add rsi,rax
0x2623: sar rsi,1
0x2626: jz 0x2640
0x2628: mov rax,qword ptr [rip+0x2109c1]
0x262f: test rax,rax
0x2632: jz 0x2640
0x2634: pop rbp
0x2635: jmp rax
0x2640: pop rbp
0x2641: ret 
0x2650: cmp byte ptr [rip+0x210a91],0x0
0x2657: jnz 0x2688
0x2659: cmp qword ptr [rip+0x210997],0x0
0x2661: push rbp
0x2662: mov rbp,rsp
0x2665: jz 0x2673
0x2667: mov rdi,qword ptr [rip+0x21099a]
0x266e: call 0x2300
0x2673: call 0x25c0
0x2678: mov byte ptr [rip+0x210a69],0x1
0x267f: pop rbp
0x2680: ret 
0x2688: ret 
0x2690: push rbp
0x2691: mov rbp,rsp
0x2694: pop rbp
0x2695: jmp 0x2600
0x2ad6: nop word ptr cs:[rax + rax*0x1]
0x2cbb: mov r9,qword ptr [r14 + 0x8]
0x2cbf: mov rdx,qword ptr [r14]
0x2cc2: mov r12,r9
0x2cc5: mov rbp,rdx
0x2cc8: sub rbp,rcx
0x2ccb: sbb r12,rdi
0x2cce: cmp rax,rbp
0x2cd1: setz dil
0x2cd5: cmp rsi,r12
0x2cd8: setz cl
0x2cdb: and dil,cl
0x2cde: mov byte ptr [rsp + 0xf],dil
0x2ce3: jnz 0x2d50
0x2ce5: cmp dword ptr [rsp + 0x8],0x1
0x2cea: mov r15d,0x1
0x2cf0: ja 0x2d0a
0x2cf2: jmp 0x2d55
0x2cf8: add r15d,0x1
0x2cfc: cmp dword ptr [rsp + 0x8],r15d
0x2d01: jz 0x2d55
0x2d03: mov rdx,qword ptr [r14]
0x2d06: mov r9,qword ptr [r14 + 0x8]
0x2d0a: push r13
0x2d0c: push rdx
0x2d0d: mov rcx,rsi
0x2d10: mov rdi,qword ptr [rsp + 0x10]
0x2d15: mov rdx,rax
0x2d18: mov r8,rax
0x2d1b: call 0x2960
0x2d20: cmp rbp,rax
0x2d23: mov rsi,qword ptr [rsp + 0x20]
0x2d28: pop rdx
0x2d29: pop rcx
0x2d2a: jnz 0x2d31
0x2d2c: cmp r12,rsi
0x2d2f: jz 0x2d50
0x2d31: cmp qword ptr [rbx],rax
0x2d34: jnz 0x2cf8
0x2d36: cmp qword ptr [rbx + 0x8],rsi
0x2d3a: jnz 0x2cf8
0x2d3c: jmp 0x2d55
0x2d79: call 0x1f20
0x2d7e: nop 
0x2e12: call 0x1f20
0x2e17: nop word ptr [rax + rax*0x1]
0x3097: nop word ptr [rax + rax*0x1]
0x31f1: nop dword ptr [rax + rax*0x1]
0x31f6: nop word ptr cs:[rax + rax*0x1]
0x3248: xor edx,edx
0x324a: nop word ptr [rax + rax*0x1]
0x3250: cmp r9,rsi
0x3253: jc 0x325c
0x3255: jnz 0x3262
0x3257: cmp rax,r8
0x325a: jc 0x3262
0x325c: sub rax,r8
0x325f: sbb rsi,r9
0x3262: mov rcx,r9
0x3265: shr r8,1
0x3268: add edx,0x1
0x326b: shl rcx,0x3f
0x326f: shr r9,1
0x3272: or r8,rcx
0x3275: cmp r10d,edx
0x3278: jnz 0x3250
0x32ab: nop dword ptr [rax + rax*0x1]
0x3712: call 0x1f20
0x3717: nop word ptr [rax + rax*0x1]
0x382c: xor r15d,r15d
0x382f: mov rdx,r15
0x3832: mov rsi,r13
0x3835: mov rdi,rbx
0x3838: shl rdx,0x4
0x383c: add rdx,qword ptr [rsp + 0x20]
0x3841: add r15,0x1
0x3845: call 0x1f40
0x384a: mov rcx,r12
0x384d: mov rdx,rbx
0x3850: mov rsi,rbp
0x3853: mov rdi,rbx
0x3856: call 0x1f10
0x385b: mov esi,0x1
0x3860: mov rdi,rbx
0x3863: call 0x2260
0x3868: cmp r15,qword ptr [rsp + 0x30]
0x386d: jnc 0x3920
0x3873: test eax,eax
0x3875: jnz 0x382f
0x3877: nop word ptr [rax + rax*0x1]
0x3880: movzx edx,byte ptr [r14]
0x3884: mov rsi,rbp
0x3887: mov rdi,rbp
0x388a: call 0x2090
0x388f: mov r9,qword ptr [rsp + 0x8]
0x3894: mov r8,qword ptr [rsp]
0x3898: mov rcx,rbx
0x389b: mov rdx,rbp
0x389e: mov rsi,r13
0x38a1: mov rdi,r12
0x38a4: call 0x3440
0x38a9: test al,al
0x38ab: jz 0x3960
0x38b1: lea rax,[rip+0xc744]
0x38b8: add r14,0x1
0x38bc: cmp r14,rax
0x38bf: jnz 0x3820
0x38c5: lea rsi,[rip+0x91fc]
0x38cc: mov edx,0x5
0x38d1: xor edi,edi
0x38d3: call 0x1ee0
0x38d8: xor esi,esi
0x38da: mov rdx,rax
0x38dd: xor edi,edi
0x38df: xor eax,eax
0x38e1: call 0x21e0
0x38e6: call 0x1de0
0x38eb: nop dword ptr [rax + rax*0x1]
0x3920: test eax,eax
0x3922: jz 0x3880
0x3928: nop dword ptr [rax + rax*0x1]
0x3960: mov byte ptr [rsp + 0x17],0x0
0x3965: jmp 0x3930
0x3967: call 0x1f20
0x396c: nop dword ptr [rax]
0x3d60: call 0x1f20
0x3d65: nop 
0x3d66: nop word ptr cs:[rax + rax*0x1]
0x40ca: nop word ptr [rax + rax*0x1]
0x4856: call 0x1f20
0x485b: nop dword ptr [rax + rax*0x1]
0x51cc: call 0x1de0
0x51d1: nop dword ptr [rax]
0x527d: call 0x1f20
0x52a1: nop dword ptr [rax + rax*0x1]
0x52a6: nop word ptr cs:[rax + rax*0x1]
0x5729: call 0x1de0
0x572e: nop 
0x58e5: call 0x1f20
0x58ea: nop word ptr [rax + rax*0x1]
0x59d5: xor eax,eax
0x5c9c: jmp 0x5b64
0x5cab: call 0x1f20
0x6010: mov qword ptr [rip+0x20d0f9],rdi
0x6017: ret 
0x6020: mov byte ptr [rip+0x20d0e1],dil
0x6027: ret 
0x6030: push rbp
0x6031: push rbx
0x6032: sub rsp,0x8
0x6036: mov rdi,qword ptr [rip+0x20d06b]
0x603d: call 0xa0d0
0x6042: test eax,eax
0x6044: jz 0x605c
0x6046: call 0x1df0
0x604b: cmp byte ptr [rip+0x20d0b6],0x0
0x6052: mov rbx,rax
0x6055: jz 0x6073
0x6057: cmp dword ptr [rax],0x20
0x605a: jnz 0x6073
0x605c: mov rdi,qword ptr [rip+0x20d07d]
0x6063: call 0xa0d0
0x6068: test eax,eax
0x606a: jnz 0x60b2
0x606c: add rsp,0x8
0x6070: pop rbx
0x6071: pop rbp
0x6072: ret 
0x6073: lea rsi,[rip+0x6d11]
0x607a: xor edi,edi
0x607c: mov edx,0x5
0x6081: call 0x1ee0
0x6086: mov rdi,qword ptr [rip+0x20d083]
0x608d: mov rbp,rax
0x6090: test rdi,rdi
0x6093: jz 0x60bd
0x6095: call 0x89b0
0x609a: mov esi,dword ptr [rbx]
0x609c: lea rdx,[rip+0x9f65]
0x60a3: mov rcx,rax
0x60a6: mov r8,rbp
0x60a9: xor edi,edi
0x60ab: xor eax,eax
0x60ad: call 0x21e0
0x60b2: mov edi,dword ptr [rip+0x20cf68]
0x60b8: call 0x1e10
0x60bd: mov esi,dword ptr [rbx]
0x60bf: lea rdx,[rip+0x9f46]
0x60c6: mov rcx,rax
0x60c9: xor edi,edi
0x60cb: xor eax,eax
0x60cd: call 0x21e0
0x60d2: jmp 0x60b2
0x6151: xor r12d,r12d
0x6154: jmp 0x6124
0x624f: nop 
0x6b21: nop dword ptr [rax]
0x6b96: call 0x1f20
0x6bba: nop word ptr [rax + rax*0x1]
0x6bc0: push r12
0x6bc2: push rbp
0x6bc3: mov rsi,rdi
0x6bc6: push rbx
0x6bc7: mov rbp,rdi
0x6bca: mov edx,0x5
0x6bcf: xor edi,edi
0x6bd1: call 0x1ee0
0x6bd6: cmp rbp,rax
0x6bd9: mov rbx,rax
0x6bdc: jz 0x6bed
0x6bde: mov rsi,rbp
0x6be1: mov rdi,rax
0x6be4: call 0x6250
0x6be9: test al,al
0x6beb: jz 0x6bf8
0x6bed: mov rax,rbx
0x6bf0: pop rbx
0x6bf1: pop rbp
0x6bf2: pop r12
0x6bf4: ret 
0x6bf8: mov rdi,rbx
0x6bfb: call 0x1f00
0x6c00: mov rdi,rbp
0x6c03: mov r12,rax
0x6c06: call 0x1f00
0x6c0b: lea rdi,[r12 + rax*0x1 + 0x4]
0x6c10: call 0x9ce0
0x6c15: lea rcx,[rip+0x949c]
0x6c1c: mov r12,rax
0x6c1f: mov r9,rbp
0x6c22: mov r8,rbx
0x6c25: mov rdi,rax
0x6c28: mov rbx,r12
0x6c2b: mov rdx,-0x1
0x6c32: mov esi,0x1
0x6c37: xor eax,eax
0x6c39: call 0x22f0
0x6c3e: mov rax,rbx
0x6c41: pop rbx
0x6c42: pop rbp
0x6c43: pop r12
0x6c45: ret 
0x736b: mov ebx,edx
0x736d: xor r12d,r12d
0x7370: xor eax,eax
0x744b: xor edx,edx
0x744d: test byte ptr [rsp + 0x78],0x1
0x7452: jz 0x736b
0x7458: add rbp,0x1
0x745c: jmp 0x7118
0x75be: nop 
0x8200: add rsp,0x20
0x8204: mov r15,rax
0x8207: jmp 0x7c09
0x8223: call 0x1f20
0x8264: nop 
0x8266: nop word ptr cs:[rax + rax*0x1]
0x8411: call 0x1de0
0x8416: call 0x9f30
0x841b: nop dword ptr [rax + rax*0x1]
0x8420: push r12
0x8422: push rbp
0x8423: push rbx
0x8424: mov rbx,rdi
0x8427: call 0x1df0
0x842c: mov r12d,dword ptr [rax]
0x842f: mov rbp,rax
0x8432: lea rax,[rip+0x20ade7]
0x8439: test rbx,rbx
0x843c: mov esi,0x38
0x8441: cmovz rbx,rax
0x8445: mov rdi,rbx
0x8448: call 0x9ee0
0x844d: mov dword ptr [rbp],r12d
0x8451: pop rbx
0x8452: pop rbp
0x8453: pop r12
0x8455: ret 
0x8460: lea rax,[rip+0x20adb9]
0x8467: test rdi,rdi
0x846a: cmovz rdi,rax
0x846e: mov eax,dword ptr [rdi]
0x8470: ret 
0x8480: lea rax,[rip+0x20ad99]
0x8487: test rdi,rdi
0x848a: cmovz rdi,rax
0x848e: mov dword ptr [rdi],esi
0x8490: ret 
0x84a0: lea rax,[rip+0x20ad79]
0x84a7: test rdi,rdi
0x84aa: mov ecx,esi
0x84ac: cmovz rdi,rax
0x84b0: mov eax,esi
0x84b2: and ecx,0x1f
0x84b5: shr al,0x5
0x84b8: movzx eax,al
0x84bb: lea rdi,[rdi + rax*0x4 + 0x8]
0x84c0: mov esi,dword ptr [rdi]
0x84c2: mov eax,esi
0x84c4: shr eax,cl
0x84c6: xor edx,eax
0x84c8: and eax,0x1
0x84cb: and edx,0x1
0x84ce: shl edx,cl
0x84d0: xor edx,esi
0x84d2: mov dword ptr [rdi],edx
0x84d4: ret 
0x84e0: lea rax,[rip+0x20ad39]
0x84e7: test rdi,rdi
0x84ea: cmovz rdi,rax
0x84ee: mov eax,dword ptr [rdi + 0x4]
0x84f1: mov dword ptr [rdi + 0x4],esi
0x84f4: ret 
0x8500: lea rax,[rip+0x20ad19]
0x8507: test rdi,rdi
0x850a: cmovz rdi,rax
0x850e: test rsi,rsi
0x8511: mov dword ptr [rdi],0xa
0x8517: jz 0x8527
0x8519: test rdx,rdx
0x851c: jz 0x8527
0x851e: mov qword ptr [rdi + 0x28],rsi
0x8522: mov qword ptr [rdi + 0x30],rdx
0x8526: ret 
0x8527: sub rsp,0x8
0x852b: call 0x1de0
0x8530: push r15
0x8532: push r14
0x8534: lea rax,[rip+0x20ace5]
0x853b: push r13
0x853d: push r12
0x853f: mov r13,rdi
0x8542: push rbp
0x8543: push rbx
0x8544: mov rbx,r8
0x8547: mov r14,rsi
0x854a: mov r15,rdx
0x854d: sub rsp,0x18
0x8551: test r8,r8
0x8554: cmovz rbx,rax
0x8558: mov qword ptr [rsp + 0x8],rcx
0x855d: call 0x1df0
0x8562: mov r12d,dword ptr [rax]
0x8565: mov rbp,rax
0x8568: lea rax,[rbx + 0x8]
0x856c: sub rsp,0x8
0x8570: mov r9d,dword ptr [rbx + 0x4]
0x8574: push qword ptr [rbx + 0x30]
0x8577: mov r8d,dword ptr [rbx]
0x857a: push qword ptr [rbx + 0x28]
0x857d: mov rdx,r15
0x8580: push rax
0x8581: mov rcx,qword ptr [rsp + 0x28]
0x8586: mov rsi,r14
0x8589: mov rdi,r13
0x858c: call 0x7030
0x8591: mov dword ptr [rbp],r12d
0x8595: add rsp,0x38
0x8599: pop rbx
0x859a: pop rbp
0x859b: pop r12
0x859d: pop r13
0x859f: pop r14
0x85a1: pop r15
0x85a3: ret 
0x85b0: push r15
0x85b2: push r14
0x85b4: lea rax,[rip+0x20ac65]
0x85bb: push r13
0x85bd: push r12
0x85bf: mov r12,rdx
0x85c2: push rbp
0x85c3: push rbx
0x85c4: mov rbx,rcx
0x85c7: mov r14,rdi
0x85ca: mov r15,rsi
0x85cd: sub rsp,0x38
0x85d1: test rcx,rcx
0x85d4: cmovz rbx,rax
0x85d8: xor ebp,ebp
0x85da: call 0x1df0
0x85df: test r12,r12
0x85e2: mov r13,rax
0x85e5: mov eax,dword ptr [rax]
0x85e7: setz bpl
0x85eb: or ebp,dword ptr [rbx + 0x4]
0x85ee: lea r10,[rbx + 0x8]
0x85f2: sub rsp,0x8
0x85f6: mov r8d,dword ptr [rbx]
0x85f9: mov rcx,r15
0x85fc: mov dword ptr [rsp + 0x14],eax
0x8600: push qword ptr [rbx + 0x30]
0x8603: mov rdx,r14
0x8606: push qword ptr [rbx + 0x28]
0x8609: push r10
0x860b: xor esi,esi
0x860d: mov r9d,ebp
0x8610: xor edi,edi
0x8612: mov qword ptr [rsp + 0x40],r10
0x8617: call 0x7030
0x861c: lea rsi,[rax + 0x1]
0x8620: mov qword ptr [rsp + 0x48],rax
0x8625: add rsp,0x20
0x8629: mov rdi,rsi
0x862c: mov qword ptr [rsp + 0x18],rsi
0x8631: call 0x9ce0
0x8636: mov qword ptr [rsp + 0x10],rax
0x863b: sub rsp,0x8
0x863f: push qword ptr [rbx + 0x30]
0x8642: push qword ptr [rbx + 0x28]
0x8645: mov r10,qword ptr [rsp + 0x38]
0x864a: mov r9d,ebp
0x864d: mov r8d,dword ptr [rbx]
0x8650: mov rcx,r15
0x8653: mov rdx,r14
0x8656: mov rdi,rax
0x8659: push r10
0x865b: mov rsi,qword ptr [rsp + 0x38]
0x8660: call 0x7030
0x8665: mov eax,dword ptr [rsp + 0x2c]
0x8669: add rsp,0x20
0x866d: test r12,r12
0x8670: mov dword ptr [r13],eax
0x8674: jz 0x867f
0x8676: mov r11,qword ptr [rsp + 0x28]
0x867b: mov qword ptr [r12],r11
0x867f: mov rax,qword ptr [rsp + 0x10]
0x8684: add rsp,0x38
0x8688: pop rbx
0x8689: pop rbp
0x868a: pop r12
0x868c: pop r13
0x868e: pop r14
0x8690: pop r15
0x8692: ret 
0x86a0: mov rcx,rdx
0x86a3: xor edx,edx
0x86a5: jmp 0x85b0
0x86b0: mov eax,dword ptr [rip+0x20a9c2]
0x86b6: push r12
0x86b8: mov r12,qword ptr [rip+0x20a9c1]
0x86bf: push rbp
0x86c0: push rbx
0x86c1: cmp eax,0x1
0x86c4: jle 0x86f1
0x86c6: sub eax,0x2
0x86c9: lea rbx,[r12 + 0x18]
0x86ce: shl rax,0x4
0x86d2: lea rbp,[r12 + rax*0x1 + 0x28]
0x86d7: nop word ptr [rax + rax*0x1]
0x86e0: mov rdi,qword ptr [rbx]
0x86e3: add rbx,0x10
0x86e7: call 0x1dd0
0x86ec: cmp rbx,rbp
0x86ef: jnz 0x86e0
0x86f1: mov rdi,qword ptr [r12 + 0x8]
0x86f6: lea rbx,[rip+0x20aa23]
0x86fd: cmp rdi,rbx
0x8700: jz 0x8719
0x8702: call 0x1dd0
0x8707: mov qword ptr [rip+0x20a97e],0x100
0x8712: mov qword ptr [rip+0x20a97f],rbx
0x8719: lea rbx,[rip+0x20a970]
0x8720: cmp r12,rbx
0x8723: jz 0x8734
0x8725: mov rdi,r12
0x8728: call 0x1dd0
0x872d: mov qword ptr [rip+0x20a94c],rbx
0x8734: pop rbx
0x8735: mov dword ptr [rip+0x20a939],0x1
0x873f: pop rbp
0x8740: pop r12
0x8742: ret 
0x8750: lea rcx,[rip+0x20aac9]
0x8757: mov rdx,-0x1
0x875e: jmp 0x8270
0x8770: lea rcx,[rip+0x20aaa9]
0x8777: jmp 0x8270
0x8780: lea rcx,[rip+0x20aa99]
0x8787: mov rsi,rdi
0x878a: mov rdx,-0x1
0x8791: xor edi,edi
0x8793: jmp 0x8270
0x87a0: lea rcx,[rip+0x20aa79]
0x87a7: mov rdx,rsi
0x87aa: mov rsi,rdi
0x87ad: xor edi,edi
0x87af: jmp 0x8270
0x87c0: sub rsp,0x48
0x87c4: mov rax,rdx
0x87c7: mov rdx,qword ptr fs:[rip+0xffffffffffff7858]
0x87d0: mov qword ptr [rsp + 0x38],rdx
0x87d5: xor edx,edx
0x87d7: cmp esi,0xa
0x87da: jz 0x8844
0x87dc: mov dword ptr [rsp],esi
0x87df: mov rcx,rsp
0x87e2: mov rdx,-0x1
0x87e9: mov rsi,rax
0x87ec: mov qword ptr [rsp + 0x4],0x0
0x87f5: mov qword ptr [rsp + 0xc],0x0
0x87fe: mov qword ptr [rsp + 0x14],0x0
0x8807: mov qword ptr [rsp + 0x1c],0x0
0x8810: mov qword ptr [rsp + 0x24],0x0
0x8819: mov qword ptr [rsp + 0x2c],0x0
0x8822: mov dword ptr [rsp + 0x34],0x0
0x882a: call 0x8270
0x882f: mov rcx,qword ptr [rsp + 0x38]
0x8834: xor rcx,qword ptr fs:[rip+0xffffffffffff77eb]
0x883d: jnz 0x8849
0x883f: add rsp,0x48
0x8843: ret 
0x8844: call 0x1de0
0x8849: call 0x1f20
0x884e: nop 
0x8850: sub rsp,0x48
0x8854: mov rax,rdx
0x8857: mov rdx,rcx
0x885a: mov rcx,qword ptr fs:[rip+0xffffffffffff77c5]
0x8863: mov qword ptr [rsp + 0x38],rcx
0x8868: xor ecx,ecx
0x886a: cmp esi,0xa
0x886d: jz 0x88d0
0x886f: mov dword ptr [rsp],esi
0x8872: mov rcx,rsp
0x8875: mov rsi,rax
0x8878: mov qword ptr [rsp + 0x4],0x0
0x8881: mov qword ptr [rsp + 0xc],0x0
0x888a: mov qword ptr [rsp + 0x14],0x0
0x8893: mov qword ptr [rsp + 0x1c],0x0
0x889c: mov qword ptr [rsp + 0x24],0x0
0x88a5: mov qword ptr [rsp + 0x2c],0x0
0x88ae: mov dword ptr [rsp + 0x34],0x0
0x88b6: call 0x8270
0x88bb: mov rdx,qword ptr [rsp + 0x38]
0x88c0: xor rdx,qword ptr fs:[rip+0xffffffffffff775f]
0x88c9: jnz 0x88d5
0x88cb: add rsp,0x48
0x88cf: ret 
0x88d0: call 0x1de0
0x88d5: call 0x1f20
0x88da: nop word ptr [rax + rax*0x1]
0x88e0: mov rdx,rsi
0x88e3: mov esi,edi
0x88e5: xor edi,edi
0x88e7: jmp 0x87c0
0x88f0: mov rcx,rdx
0x88f3: mov rdx,rsi
0x88f6: mov esi,edi
0x88f8: xor edi,edi
0x88fa: jmp 0x8850
0x8900: sub rsp,0x48
0x8904: mov ecx,edx
0x8906: mov rax,qword ptr fs:[rip+0xffffffffffff7719]
0x890f: mov qword ptr [rsp + 0x38],rax
0x8914: xor eax,eax
0x8916: mov rax,qword ptr [rip+0x20a933]
0x891d: mov r8,rsp
0x8920: and ecx,0x1f
0x8923: movdqa xmm0,[rip+0x20a8f5]
0x892b: mov qword ptr [rsp + 0x30],rax
0x8930: mov eax,edx
0x8932: movaps xmmword ptr [rsp],xmm0
0x8936: shr al,0x5
0x8939: movzx eax,al
0x893c: lea r9,[r8 + rax*0x4 + 0x8]
0x8941: movdqa xmm0,[rip+0x20a8e7]
0x8949: movaps xmmword ptr [rsp + 0x10],xmm0
0x894e: movdqa xmm0,[rip+0x20a8ea]
0x8956: movaps xmmword ptr [rsp + 0x20],xmm0
0x895b: mov edx,dword ptr [r9]
0x895e: mov eax,edx
0x8960: shr eax,cl
0x8962: not eax
0x8964: and eax,0x1
0x8967: shl eax,cl
0x8969: mov rcx,r8
0x896c: xor eax,edx
0x896e: mov rdx,rsi
0x8971: mov rsi,rdi
0x8974: mov dword ptr [r9],eax
0x8977: xor edi,edi
0x8979: call 0x8270
0x897e: mov rsi,qword ptr [rsp + 0x38]
0x8983: xor rsi,qword ptr fs:[rip+0xffffffffffff769c]
0x898c: jnz 0x8993
0x898e: add rsp,0x48
0x8992: ret 
0x8993: call 0x1f20
0x8998: nop dword ptr [rax + rax*0x1]
0x89a0: movsx edx,sil
0x89a4: mov rsi,-0x1
0x89ab: jmp 0x8900
0x89b0: mov edx,0x3a
0x89b5: mov rsi,-0x1
0x89bc: jmp 0x8900
0x89d0: mov edx,0x3a
0x89d5: jmp 0x8900
0x89e0: sub rsp,0x48
0x89e4: mov rax,rdx
0x89e7: mov rdx,qword ptr fs:[rip+0xffffffffffff7638]
0x89f0: mov qword ptr [rsp + 0x38],rdx
0x89f5: xor edx,edx
0x89f7: cmp esi,0xa
0x89fa: jz 0x8a64
0x89fc: mov dword ptr [rsp],esi
0x89ff: mov rcx,rsp
0x8a02: mov rdx,-0x1
0x8a09: mov rsi,rax
0x8a0c: mov qword ptr [rsp + 0x4],0x0
0x8a15: mov qword ptr [rsp + 0xc],0x4000000
0x8a1e: mov qword ptr [rsp + 0x14],0x0
0x8a27: mov qword ptr [rsp + 0x1c],0x0
0x8a30: mov qword ptr [rsp + 0x24],0x0
0x8a39: mov qword ptr [rsp + 0x2c],0x0
0x8a42: mov dword ptr [rsp + 0x34],0x0
0x8a4a: call 0x8270
0x8a4f: mov rcx,qword ptr [rsp + 0x38]
0x8a54: xor rcx,qword ptr fs:[rip+0xffffffffffff75cb]
0x8a5d: jnz 0x8a69
0x8a5f: add rsp,0x48
0x8a63: ret 
0x8a64: call 0x1de0
0x8a69: call 0x1f20
0x8a6e: nop 
0x8a70: sub rsp,0x48
0x8a74: mov r9,rcx
0x8a77: mov rcx,qword ptr [rip+0x20a7d2]
0x8a7e: movdqa xmm0,[rip+0x20a79a]
0x8a86: mov rax,qword ptr fs:[rip+0xffffffffffff7599]
0x8a8f: mov qword ptr [rsp + 0x38],rax
0x8a94: xor eax,eax
0x8a96: movaps xmmword ptr [rsp],xmm0
0x8a9a: test rsi,rsi
0x8a9d: mov qword ptr [rsp + 0x30],rcx
0x8aa2: mov dword ptr [rsp],0xa
0x8aa9: movdqa xmm0,[rip+0x20a77f]
0x8ab1: movaps xmmword ptr [rsp + 0x10],xmm0
0x8ab6: movdqa xmm0,[rip+0x20a782]
0x8abe: movaps xmmword ptr [rsp + 0x20],xmm0
0x8ac3: jz 0x8af7
0x8ac5: test rdx,rdx
0x8ac8: jz 0x8af7
0x8aca: mov qword ptr [rsp + 0x28],rsi
0x8acf: mov qword ptr [rsp + 0x30],rdx
0x8ad4: mov rcx,rsp
0x8ad7: mov rdx,r8
0x8ada: mov rsi,r9
0x8add: call 0x8270
0x8ae2: mov rdi,qword ptr [rsp + 0x38]
0x8ae7: xor rdi,qword ptr fs:[rip+0xffffffffffff7538]
0x8af0: jnz 0x8afc
0x8af2: add rsp,0x48
0x8af6: ret 
0x8af7: call 0x1de0
0x8afc: call 0x1f20
0x8b01: nop dword ptr [rax + rax*0x1]
0x8b06: nop word ptr cs:[rax + rax*0x1]
0x8b10: mov r8,-0x1
0x8b17: jmp 0x8a70
0x8b20: mov rcx,rdx
0x8b23: mov r8,-0x1
0x8b2a: mov rdx,rsi
0x8b2d: mov rsi,rdi
0x8b30: xor edi,edi
0x8b32: jmp 0x8a70
0x8b40: mov r8,rcx
0x8b43: mov rcx,rdx
0x8b46: mov rdx,rsi
0x8b49: mov rsi,rdi
0x8b4c: xor edi,edi
0x8b4e: jmp 0x8a70
0x8b60: lea rcx,[rip+0x20a4d9]
0x8b67: jmp 0x8270
0x8b70: lea rcx,[rip+0x20a4c9]
0x8b77: mov rdx,rsi
0x8b7a: mov rsi,rdi
0x8b7d: xor edi,edi
0x8b7f: jmp 0x8270
0x8b90: lea rcx,[rip+0x20a4a9]
0x8b97: mov rdx,-0x1
0x8b9e: jmp 0x8270
0x8cf5: test r12,r12
0x8cf8: jnz 0x8cb0
0x8da9: call 0x1f20
0x8dae: nop 
0x8db0: push r15
0x8db2: push r14
0x8db4: push r13
0x8db6: push r12
0x8db8: push rbp
0x8db9: push rbx
0x8dba: lea rbp,[rsi + 0x1]
0x8dbe: sub rsp,0x68
0x8dc2: mov rax,qword ptr fs:[rip+0xffffffffffff725d]
0x8dcb: mov qword ptr [rsp + 0x58],rax
0x8dd0: xor eax,eax
0x8dd2: mov qword ptr [rsp + 0x10],rdx
0x8dd7: test rsi,rsi
0x8dda: mov eax,0x40
0x8ddf: mov edx,0x8
0x8de4: cmovz rbp,rax
0x8de8: mov qword ptr [rsp + 0x8],rdi
0x8ded: mov rax,rdx
0x8df0: mov qword ptr [rsp + 0x18],rcx
0x8df5: mov qword ptr [rsp + 0x38],r8
0x8dfa: mul rbp
0x8dfd: mov qword ptr [rsp + 0x30],r9
0x8e02: jo 0x8fd0
0x8e08: xor ecx,ecx
0x8e0a: test rax,rax
0x8e0d: js 0x8fcb
0x8e13: test rcx,rcx
0x8e16: jnz 0x8fcb
0x8e1c: lea rbx,[rbp*0x8]
0x8e24: mov rdi,rbx
0x8e27: call 0x9ce0
0x8e2c: mov rdi,rbx
0x8e2f: mov r12,rax
0x8e32: xor ebx,ebx
0x8e34: call 0x9ce0
0x8e39: mov r13,rax
0x8e3c: lea rax,[rsp + 0x40]
0x8e41: mov qword ptr [rsp + 0x40],0x0
0x8e4a: mov qword ptr [rsp + 0x48],0x0
0x8e53: mov qword ptr [rsp + 0x20],rax
0x8e58: jmp 0x8e9c
0x8e60: cmp r14,-0x1
0x8e64: jz 0x8f1c
0x8e6a: mov r15,r14
0x8e6d: add r15,0x1
0x8e71: js 0x8fcb
0x8e77: mov rdi,r15
0x8e7a: call 0x9ce0
0x8e7f: mov rsi,qword ptr [rsp + 0x48]
0x8e84: mov qword ptr [r13 + rbx*0x8],r14
0x8e89: mov rdx,r15
0x8e8c: mov rdi,rax
0x8e8f: call 0x20a0
0x8e94: mov qword ptr [r12 + rbx*0x8],rax
0x8e98: add rbx,0x1
0x8e9c: mov rcx,qword ptr [rsp + 0x20]
0x8ea1: mov rdx,qword ptr [rsp + 0x18]
0x8ea6: mov rsi,qword ptr [rsp + 0x10]
0x8eab: mov rdi,qword ptr [rsp + 0x8]
0x8eb0: call 0x8be0
0x8eb5: cmp rbx,rbp
0x8eb8: mov r14,rax
0x8ebb: jc 0x8e60
0x8ebd: test r12,r12
0x8ec0: jz 0x8f78
0x8ec6: mov rax,0xaaaaaaaaaaaaaa9
0x8ed0: cmp rbp,rax
0x8ed3: ja 0x8fcb
0x8ed9: mov rax,rbp
0x8edc: mov rdi,r12
0x8edf: shr rax,1
0x8ee2: lea rbp,[rbp + rax*0x1 + 0x1]
0x8ee7: lea rdx,[rbp*0x8]
0x8eef: mov rsi,rdx
0x8ef2: mov qword ptr [rsp + 0x28],rdx
0x8ef7: call 0x9d40
0x8efc: mov rdx,qword ptr [rsp + 0x28]
0x8f01: mov r12,rax
0x8f04: mov rdi,r13
0x8f07: mov rsi,rdx
0x8f0a: call 0x9d40
0x8f0f: cmp r14,-0x1
0x8f13: mov r13,rax
0x8f16: jnz 0x8e6a
0x8f1c: mov qword ptr [r12 + rbx*0x8],0x0
0x8f24: mov rdi,qword ptr [rsp + 0x48]
0x8f29: mov qword ptr [r13 + rbx*0x8],0x0
0x8f32: call 0x1dd0
0x8f37: cmp qword ptr [rsp + 0x30],0x0
0x8f3d: mov rax,qword ptr [rsp + 0x38]
0x8f42: mov qword ptr [rax],r12
0x8f45: jz 0x8fc1
0x8f47: mov rax,qword ptr [rsp + 0x30]
0x8f4c: mov qword ptr [rax],r13
0x8f4f: mov rcx,qword ptr [rsp + 0x58]
0x8f54: xor rcx,qword ptr fs:[rip+0xffffffffffff70cb]
0x8f5d: mov rax,rbx
0x8f60: jnz 0x8fda
0x8f62: add rsp,0x68
0x8f66: pop rbx
0x8f67: pop rbp
0x8f68: pop r12
0x8f6a: pop r13
0x8f6c: pop r14
0x8f6e: pop r15
0x8f70: ret 
0x8f78: test rbp,rbp
0x8f7b: mov eax,0x10
0x8f80: mov edx,0x8
0x8f85: cmovz rbp,rax
0x8f89: mov rax,rdx
0x8f8c: xor esi,esi
0x8f8e: mul rbp
0x8f91: jo 0x8fdf
0x8f93: test rax,rax
0x8f96: js 0x8fcb
0x8f98: test rsi,rsi
0x8f9b: jnz 0x8fcb
0x8f9d: lea rdx,[rbp*0x8]
0x8fa5: xor edi,edi
0x8fa7: mov rsi,rdx
0x8faa: mov qword ptr [rsp + 0x28],rdx
0x8faf: call 0x9d40
0x8fb4: mov rdx,qword ptr [rsp + 0x28]
0x8fb9: mov r12,rax
0x8fbc: jmp 0x8f04
0x8fc1: mov rdi,r13
0x8fc4: call 0x1dd0
0x8fc9: jmp 0x8f4f
0x8fcb: call 0x9f30
0x8fd0: mov ecx,0x1
0x8fd5: jmp 0x8e0a
0x8fda: call 0x1f20
0x8fdf: mov esi,0x1
0x8fe4: jmp 0x8f93
0x9672: call 0x1f20
0x96bf: nop 
0x97f8: mov r8,rcx
0x97fb: mov rcx,rdx
0x97fe: lea rdx,[rip+0x6e09]
0x9805: mov esi,0x1
0x980a: xor eax,eax
0x980c: call 0x2250
0x9811: jmp 0x96fc
0x9ae0: xor r9d,r9d
0x9ae3: cmp qword ptr [r8],0x0
0x9ae7: jz 0x9afb
0x9ae9: nop dword ptr [rax]
0x9af0: add r9,0x1
0x9af4: cmp qword ptr [r8 + r9*0x8],0x0
0x9af9: jnz 0x9af0
0x9afb: jmp 0x96c0
0x9b00: sub rsp,0x68
0x9b04: mov r10,r8
0x9b07: xor r9d,r9d
0x9b0a: mov rax,qword ptr fs:[rip+0xffffffffffff6515]
0x9b13: mov qword ptr [rsp + 0x58],rax
0x9b18: xor eax,eax
0x9b1a: mov r8,rsp
0x9b1d: nop dword ptr [rax]
0x9b20: mov eax,dword ptr [r10]
0x9b23: cmp eax,0x2f
0x9b26: ja 0x9b6a
0x9b28: mov r11d,eax
0x9b2b: add r11,qword ptr [r10 + 0x10]
0x9b2f: add eax,0x8
0x9b32: mov dword ptr [r10],eax
0x9b35: mov rax,qword ptr [r11]
0x9b38: test rax,rax
0x9b3b: mov qword ptr [r8 + r9*0x8],rax
0x9b3f: jz 0x9b4b
0x9b41: add r9,0x1
0x9b45: cmp r9,0xa
0x9b49: jnz 0x9b20
0x9b4b: call 0x96c0
0x9b50: mov rax,qword ptr [rsp + 0x58]
0x9b55: xor rax,qword ptr fs:[rip+0xffffffffffff64ca]
0x9b5e: jnz 0x9b65
0x9b60: add rsp,0x68
0x9b64: ret 
0x9b65: call 0x1f20
0x9b6a: mov r11,qword ptr [r10 + 0x8]
0x9b6e: lea rax,[r11 + 0x8]
0x9b72: mov qword ptr [r10 + 0x8],rax
0x9b76: jmp 0x9b35
0x9c40: call 0x1f20
0x9c4c: mov rax,rbx
0x9c4f: add rbx,0x8
0x9c53: jmp 0x9c06
0x9c60: push rbx
0x9c61: lea rsi,[rip+0x69f4]
0x9c68: mov edx,0x5
0x9c6d: xor edi,edi
0x9c6f: call 0x1ee0
0x9c74: lea rdx,[rip+0x69f6]
0x9c7b: mov rsi,rax
0x9c7e: mov edi,0x1
0x9c83: xor eax,eax
0x9c85: call 0x2170
0x9c8a: lea rsi,[rip+0x69f6]
0x9c91: mov edx,0x5
0x9c96: xor edi,edi
0x9c98: call 0x1ee0
0x9c9d: lea rcx,[rip+0x3044]
0x9ca4: lea rdx,[rip+0x31f0]
0x9cab: mov rsi,rax
0x9cae: mov edi,0x1
0x9cb3: xor eax,eax
0x9cb5: call 0x2170
0x9cba: mov rbx,qword ptr [rip+0x2093e7]
0x9cc1: lea rsi,[rip+0x6bf0]
0x9cc8: xor edi,edi
0x9cca: mov edx,0x5
0x9ccf: call 0x1ee0
0x9cd4: mov rsi,rbx
0x9cd7: mov rdi,rax
0x9cda: pop rbx
0x9cdb: jmp 0x2050
0x9cfa: nop word ptr [rax + rax*0x1]
0x9d00: mov rax,rdi
0x9d03: mul rsi
0x9d06: mov rdi,rax
0x9d09: seto al
0x9d0c: test rdi,rdi
0x9d0f: js 0x9d1b
0x9d11: movzx eax,al
0x9d14: test rax,rax
0x9d17: jnz 0x9d1b
0x9d19: jmp 0x9ce0
0x9d1b: sub rsp,0x8
0x9d1f: call 0x9f30
0x9d24: nop 
0x9d26: nop word ptr cs:[rax + rax*0x1]
0x9d30: jmp 0x9ce0
0x9d76: nop word ptr cs:[rax + rax*0x1]
0x9d80: mov rax,rsi
0x9d83: mul rdx
0x9d86: mov rsi,rax
0x9d89: seto al
0x9d8c: test rsi,rsi
0x9d8f: js 0x9d9b
0x9d91: movzx eax,al
0x9d94: test rax,rax
0x9d97: jnz 0x9d9b
0x9d99: jmp 0x9d40
0x9d9b: sub rsp,0x8
0x9d9f: call 0x9f30
0x9da4: nop 
0x9da6: nop word ptr cs:[rax + rax*0x1]
0x9db0: test rdi,rdi
0x9db3: mov r9,rdx
0x9db6: mov rcx,qword ptr [rsi]
0x9db9: jz 0x9df0
0x9dbb: xor edx,edx
0x9dbd: mov rax,0x5555555555555554
0x9dc7: div r9
0x9dca: cmp rax,rcx
0x9dcd: jbe 0x9e0b
0x9dcf: mov rax,rcx
0x9dd2: shr rax,1
0x9dd5: lea rcx,[rax + rcx*0x1 + 0x1]
0x9dda: mov qword ptr [rsi],rcx
0x9ddd: imul rcx,r9
0x9de1: mov rsi,rcx
0x9de4: jmp 0x9d40
0x9df0: test rcx,rcx
0x9df3: jz 0x9e18
0x9df5: mov rax,rcx
0x9df8: mul r9
0x9dfb: seto dl
0x9dfe: test rax,rax
0x9e01: movzx edx,dl
0x9e04: js 0x9e0b
0x9e06: test rdx,rdx
0x9e09: jz 0x9dda
0x9e0b: sub rsp,0x8
0x9e0f: call 0x9f30
0x9e14: nop dword ptr [rax]
0x9e18: xor edx,edx
0x9e1a: mov eax,0x80
0x9e1f: xor r8d,r8d
0x9e22: div r9
0x9e25: test rax,rax
0x9e28: setz r8b
0x9e2c: lea rcx,[r8 + rax*0x1]
0x9e30: jmp 0x9df5
0x9e40: test rdi,rdi
0x9e43: mov rax,qword ptr [rsi]
0x9e46: jz 0x9e70
0x9e48: mov rdx,0x5555555555555553
0x9e52: cmp rax,rdx
0x9e55: ja 0x9e81
0x9e57: mov rdx,rax
0x9e5a: shr rdx,1
0x9e5d: lea rax,[rdx + rax*0x1 + 0x1]
0x9e62: mov qword ptr [rsi],rax
0x9e65: mov rsi,rax
0x9e68: jmp 0x9d40
0x9e70: test rax,rax
0x9e73: mov edx,0x80
0x9e78: cmovz rax,rdx
0x9e7c: test rax,rax
0x9e7f: jns 0x9e62
0x9e81: sub rsp,0x8
0x9e85: call 0x9f30
0x9e8a: nop word ptr [rax + rax*0x1]
0x9e90: push rbx
0x9e91: mov rbx,rdi
0x9e94: call 0x9ce0
0x9e99: mov rdx,rbx
0x9e9c: xor esi,esi
0x9e9e: mov rdi,rax
0x9ea1: pop rbx
0x9ea2: jmp 0x1ff0
0x9eb0: mov rax,rdi
0x9eb3: sub rsp,0x8
0x9eb7: mul rsi
0x9eba: seto dl
0x9ebd: test rax,rax
0x9ec0: js 0x9ed9
0x9ec2: movzx edx,dl
0x9ec5: test rdx,rdx
0x9ec8: jnz 0x9ed9
0x9eca: call 0x2060
0x9ecf: test rax,rax
0x9ed2: jz 0x9ed9
0x9ed4: add rsp,0x8
0x9ed8: ret 
0x9ed9: call 0x9f30
0x9ede: nop 
0x9ee0: push rbp
0x9ee1: push rbx
0x9ee2: mov rbp,rdi
0x9ee5: mov rdi,rsi
0x9ee8: mov rbx,rsi
0x9eeb: sub rsp,0x8
0x9eef: call 0x9ce0
0x9ef4: add rsp,0x8
0x9ef8: mov rdx,rbx
0x9efb: mov rsi,rbp
0x9efe: pop rbx
0x9eff: pop rbp
0x9f00: mov rdi,rax
0x9f03: jmp 0x20a0
0x9f10: push rbx
0x9f11: mov rbx,rdi
0x9f14: call 0x1f00
0x9f19: mov rdi,rbx
0x9f1c: lea rsi,[rax + 0x1]
0x9f20: pop rbx
0x9f21: jmp 0x9ee0
0x9f60: call 0x1de0
0x9f65: nop word ptr cs:[rax + rax*0x1]
0x9f6f: nop 
0x9f70: push rbx
0x9f71: call 0xbfe0
0x9f76: test eax,eax
0x9f78: mov ebx,eax
0x9f7a: js 0x9f80
0x9f7c: mov eax,ebx
0x9f7e: pop rbx
0x9f7f: ret 
0x9f80: call 0x1df0
0x9f85: cmp dword ptr [rax],0xc
0x9f88: jnz 0x9f7c
0x9f8a: call 0x9f30
0x9f8f: nop 
0x9f90: push rbx
0x9f91: call 0xc2a0
0x9f96: test rax,rax
0x9f99: mov rbx,rax
0x9f9c: jz 0x9fa8
0x9f9e: mov rax,rbx
0x9fa1: pop rbx
0x9fa2: ret 
0x9fa8: call 0x1df0
0x9fad: cmp dword ptr [rax],0xc
0x9fb0: jnz 0x9f9e
0x9fb2: call 0x9f30
0x9fb7: nop word ptr [rax + rax*0x1]
0x9fe7: nop word ptr [rax + rax*0x1]
0xa06e: call 0x1f20
0xa073: nop word ptr cs:[rax + rax*0x1]
0xa07d: nop dword ptr [rax]
0xa0d0: push r12
0xa0d2: push rbp
0xa0d3: mov rbp,rdi
0xa0d6: push rbx
0xa0d7: call 0x1e20
0xa0dc: mov ebx,dword ptr [rbp]
0xa0df: mov rdi,rbp
0xa0e2: mov r12,rax
0xa0e5: call 0xc5e0
0xa0ea: and ebx,0x20
0xa0ed: test ebx,ebx
0xa0ef: jnz 0xa108
0xa0f1: test eax,eax
0xa0f3: jz 0xa0ff
0xa0f5: test r12,r12
0xa0f8: mov eax,0xffffffff
0xa0fd: jz 0xa138
0xa0ff: pop rbx
0xa100: pop rbp
0xa101: pop r12
0xa103: ret 
0xa108: test eax,eax
0xa10a: jnz 0xa128
0xa10c: call 0x1df0
0xa111: mov dword ptr [rax],0x0
0xa117: mov eax,0xffffffff
0xa11c: pop rbx
0xa11d: pop rbp
0xa11e: pop r12
0xa120: ret 
0xa128: pop rbx
0xa129: mov eax,0xffffffff
0xa12e: pop rbp
0xa12f: pop r12
0xa131: ret 
0xa138: call 0x1df0
0xa13d: cmp dword ptr [rax],0x9
0xa140: pop rbx
0xa141: pop rbp
0xa142: pop r12
0xa144: setnz al
0xa147: movzx eax,al
0xa14a: neg eax
0xa14c: ret 
0xa1f0: push rbx
0xa1f1: mov ebx,edi
0xa1f3: call 0x20d0
0xa1f8: test eax,eax
0xa1fa: js 0xa200
0xa1fc: pop rbx
0xa1fd: ret 
0xa200: mov edi,ebx
0xa202: call 0x1e80
0xa207: test eax,eax
0xa209: setz al
0xa20c: movzx eax,al
0xa20f: pop rbx
0xa210: ret 
0xa220: push rbp
0xa221: push rbx
0xa222: mov rbx,rsi
0xa225: lea rax,[rbx + 0x18]
0xa229: mov rbp,rdi
0xa22c: sub rsp,0x8
0xa230: mov rsi,qword ptr [rsi]
0xa233: mov rdx,qword ptr [rbx + 0x8]
0xa237: cmp rsi,rax
0xa23a: jz 0xa260
0xa23c: mov qword ptr [rdi],rsi
0xa23f: movzx eax,byte ptr [rbx + 0x10]
0xa243: mov qword ptr [rbp + 0x8],rdx
0xa247: test al,al
0xa249: mov byte ptr [rbp + 0x10],al
0xa24c: jz 0xa254
0xa24e: mov eax,dword ptr [rbx + 0x14]
0xa251: mov dword ptr [rbp + 0x14],eax
0xa254: add rsp,0x8
0xa258: pop rbx
0xa259: pop rbp
0xa25a: ret 
0xa260: lea rcx,[rdi + 0x18]
0xa264: mov rdi,rcx
0xa267: call 0x20a0
0xa26c: mov rdx,qword ptr [rbx + 0x8]
0xa270: mov qword ptr [rbp],rax
0xa274: jmp 0xa23f
0xa280: mov eax,edi
0xa282: lea rdx,[rip+0x6717]
0xa289: mov ecx,edi
0xa28b: shr al,0x5
0xa28e: and ecx,0x1f
0xa291: and eax,0x7
0xa294: mov eax,dword ptr [rdx + rax*0x4]
0xa297: shr eax,cl
0xa299: and eax,0x1
0xa29c: ret 
0xa447: call 0x1f20
0xa44c: nop dword ptr [rax]
0xa840: cmp byte ptr [-0xa0 + rbp],0x0
0xa847: jnz 0xa8bc
0xa8cb: nop dword ptr [rax + rax*0x1]
0xacb8: cmp byte ptr [-0xa0 + rbp],0x0
0xacbf: jz 0xac5f
0xacc1: jmp 0xac51
0xae8e: call 0x1f20
0xb3f5: cmp byte ptr [0x120 + rsp],0x0
0xb3fd: jnz 0xb31d
0xbc97: nop word ptr [rax + rax*0x1]
0xbfb0: call 0x1f20
0xbfd9: nop dword ptr [rax]
0xbfe0: push r15
0xbfe2: push r14
0xbfe4: mov r15,rdi
0xbfe7: push r13
0xbfe9: push r12
0xbfeb: mov r13,rsi
0xbfee: push rbp
0xbfef: push rbx
0xbff0: mov rbx,rdx
0xbff3: xor esi,esi
0xbff5: xor edx,edx
0xbff7: sub rsp,0x1068
0xbffe: mov qword ptr [rsp + 0x28],rdi
0xc003: mov qword ptr [rsp + 0x18],rcx
0xc008: mov rdi,rbx
0xc00b: mov qword ptr [rsp + 0x10],r8
0xc010: xor ecx,ecx
0xc012: xor r8d,r8d
0xc015: mov rax,qword ptr fs:[rip+0xffffffffffff400a]
0xc01e: mov qword ptr [0x1058 + rsp],rax
0xc026: xor eax,eax
0xc028: call 0x1e30
0xc02d: mov qword ptr [rsp + 0x30],r15
0xc032: xor r15d,r15d
0xc035: test r13,r13
0xc038: mov qword ptr [rsp + 0x38],r13
0xc03d: lea r14,[rsp + 0x50]
0xc042: lea r12,[rsp + 0x48]
0xc047: lea rbp,[rsp + 0x40]
0xc04c: jz 0xc0cb
0xc04e: lea rax,[rsp + 0x38]
0xc053: lea rsi,[rsp + 0x30]
0xc058: mov qword ptr [rsp + 0x20],r13
0xc05d: mov qword ptr [rsp + 0x8],rsi
0xc062: mov r13,rax
0xc065: jmp 0xc087
0xc070: mov rax,qword ptr [rsp + 0x40]
0xc075: sub rax,r14
0xc078: add r15,rax
0xc07b: cmp qword ptr [rsp + 0x38],0x0
0xc081: jz 0xc220
0xc087: mov rsi,qword ptr [rsp + 0x8]
0xc08c: mov r8,r12
0xc08f: mov rcx,rbp
0xc092: mov rdx,r13
0xc095: mov rdi,rbx
0xc098: mov qword ptr [rsp + 0x40],r14
0xc09d: mov qword ptr [rsp + 0x48],0x1000
0xc0a6: call 0x1e30
0xc0ab: cmp rax,-0x1
0xc0af: jnz 0xc070
0xc0b1: call 0x1df0
0xc0b6: mov eax,dword ptr [rax]
0xc0b8: cmp eax,0x7
0xc0bb: jz 0xc070
0xc0bd: cmp eax,0x16
0xc0c0: mov r13,qword ptr [rsp + 0x20]
0xc0c5: jnz 0xc289
0xc0cb: xor edx,edx
0xc0cd: xor esi,esi
0xc0cf: mov r8,r12
0xc0d2: mov rcx,rbp
0xc0d5: mov rdi,rbx
0xc0d8: mov qword ptr [rsp + 0x40],r14
0xc0dd: mov qword ptr [rsp + 0x48],0x1000
0xc0e6: call 0x1e30
0xc0eb: cmp rax,-0x1
0xc0ef: jz 0xc289
0xc0f5: mov rax,qword ptr [rsp + 0x40]
0xc0fa: sub rax,r14
0xc0fd: add rax,r15
0xc100: mov qword ptr [rsp + 0x8],rax
0xc105: jz 0xc230
0xc10b: mov rax,qword ptr [rsp + 0x18]
0xc110: mov rax,qword ptr [rax]
0xc113: test rax,rax
0xc116: mov qword ptr [rsp + 0x20],rax
0xc11b: jz 0xc12c
0xc11d: mov rax,qword ptr [rsp + 0x10]
0xc122: mov rcx,qword ptr [rsp + 0x8]
0xc127: cmp qword ptr [rax],rcx
0xc12a: jnc 0xc144
0xc12c: mov rdi,qword ptr [rsp + 0x8]
0xc131: call 0x20f0
0xc136: test rax,rax
0xc139: mov qword ptr [rsp + 0x20],rax
0xc13e: jz 0xc27e
0xc144: xor r8d,r8d
0xc147: xor ecx,ecx
0xc149: xor edx,edx
0xc14b: xor esi,esi
0xc14d: mov rdi,rbx
0xc150: lea r15,[rsp + 0x38]
0xc155: call 0x1e30
0xc15a: mov rax,qword ptr [rsp + 0x28]
0xc15f: mov qword ptr [rsp + 0x38],r13
0xc164: lea r14,[rsp + 0x30]
0xc169: mov qword ptr [rsp + 0x30],rax
0xc16e: mov rax,qword ptr [rsp + 0x20]
0xc173: mov qword ptr [rsp + 0x40],rax
0xc178: mov rax,qword ptr [rsp + 0x8]
0xc17d: mov qword ptr [rsp + 0x48],rax
0xc182: jmp 0xc1ab
0xc188: mov r8,r12
0xc18b: mov rcx,rbp
0xc18e: mov rdx,r15
0xc191: mov rsi,r14
0xc194: mov rdi,rbx
0xc197: call 0x1e30
0xc19c: cmp rax,-0x1
0xc1a0: jz 0xc240
0xc1a6: mov r13,qword ptr [rsp + 0x38]
0xc1ab: test r13,r13
0xc1ae: jnz 0xc188
0xc1b0: xor edx,edx
0xc1b2: xor esi,esi
0xc1b4: mov r8,r12
0xc1b7: mov rcx,rbp
0xc1ba: mov rdi,rbx
0xc1bd: call 0x1e30
0xc1c2: cmp rax,-0x1
0xc1c6: jz 0xc24e
0xc1cc: cmp qword ptr [rsp + 0x48],0x0
0xc1d2: jnz 0xc293
0xc1d8: mov rax,qword ptr [rsp + 0x18]
0xc1dd: mov rsi,qword ptr [rsp + 0x20]
0xc1e2: xor ebx,ebx
0xc1e4: mov rdi,qword ptr [rsp + 0x8]
0xc1e9: mov qword ptr [rax],rsi
0xc1ec: mov rax,qword ptr [rsp + 0x10]
0xc1f1: mov qword ptr [rax],rdi
0xc1f4: mov rdx,qword ptr [0x1058 + rsp]
0xc1fc: xor rdx,qword ptr fs:[rip+0xffffffffffff3e23]
0xc205: mov eax,ebx
0xc207: jnz 0xc298
0xc20d: add rsp,0x1068
0xc214: pop rbx
0xc215: pop rbp
0xc216: pop r12
0xc218: pop r13
0xc21a: pop r14
0xc21c: pop r15
0xc21e: ret 
0xc220: mov r13,qword ptr [rsp + 0x20]
0xc225: jmp 0xc0cb
0xc230: mov rax,qword ptr [rsp + 0x10]
0xc235: xor ebx,ebx
0xc237: mov qword ptr [rax],0x0
0xc23e: jmp 0xc1f4
0xc240: call 0x1df0
0xc245: cmp dword ptr [rax],0x16
0xc248: jz 0xc1b0
0xc24e: mov rax,qword ptr [rsp + 0x18]
0xc253: mov r15,qword ptr [rsp + 0x20]
0xc258: mov ebx,0xffffffff
0xc25d: cmp qword ptr [rax],r15
0xc260: jz 0xc1f4
0xc262: call 0x1df0
0xc267: mov r12d,dword ptr [rax]
0xc26a: mov rbp,rax
0xc26d: mov rdi,r15
0xc270: call 0x1dd0
0xc275: mov dword ptr [rbp],r12d
0xc279: jmp 0xc1f4
0xc27e: call 0x1df0
0xc283: mov dword ptr [rax],0xc
0xc289: mov ebx,0xffffffff
0xc28e: jmp 0xc1f4
0xc293: call 0x1de0
0xc298: call 0x1f20
0xc29d: nop dword ptr [rax]
0xc4dd: call 0x1f20
0xc4e2: nop dword ptr [rax]
0xc4e6: nop word ptr cs:[rax + rax*0x1]
0xc5e0: push r12
0xc5e2: push rbp
0xc5e3: push rbx
0xc5e4: mov rbx,rdi
0xc5e7: call 0x20b0
0xc5ec: test eax,eax
0xc5ee: mov rdi,rbx
0xc5f1: js 0xc647
0xc5f3: call 0x2140
0xc5f8: test eax,eax
0xc5fa: jnz 0xc628
0xc5fc: mov rdi,rbx
0xc5ff: call 0xc660
0xc604: test eax,eax
0xc606: jz 0xc644
0xc608: call 0x1df0
0xc60d: mov r12d,dword ptr [rax]
0xc610: mov rdi,rbx
0xc613: mov rbp,rax
0xc616: call 0x1ec0
0xc61b: test r12d,r12d
0xc61e: jnz 0xc650
0xc620: pop rbx
0xc621: pop rbp
0xc622: pop r12
0xc624: ret 
0xc628: mov rdi,rbx
0xc62b: call 0x20b0
0xc630: xor esi,esi
0xc632: mov edx,0x1
0xc637: mov edi,eax
0xc639: call 0x1fd0
0xc63e: cmp rax,-0x1
0xc642: jnz 0xc5fc
0xc644: mov rdi,rbx
0xc647: pop rbx
0xc648: pop rbp
0xc649: pop r12
0xc64b: jmp 0x1ec0
0xc650: mov dword ptr [rbp],r12d
0xc654: mov eax,0xffffffff
0xc659: jmp 0xc620
0xc660: test rdi,rdi
0xc663: push rbx
0xc664: mov rbx,rdi
0xc667: jz 0xc67a
0xc669: call 0x2140
0xc66e: test eax,eax
0xc670: jz 0xc67a
0xc672: test dword ptr [rbx],0x100
0xc678: jnz 0xc688
0xc67a: mov rdi,rbx
0xc67d: pop rbx
0xc67e: jmp 0x2100
0xc688: mov rdi,rbx
0xc68b: mov edx,0x1
0xc690: xor esi,esi
0xc692: call 0xc6a0
0xc697: mov rdi,rbx
0xc69a: pop rbx
0xc69b: jmp 0x2100
0xc6a0: mov rax,qword ptr [rdi + 0x8]
0xc6a4: cmp qword ptr [rdi + 0x10],rax
0xc6a8: jz 0xc6b0
0xc6aa: jmp 0x21f0
0xc6b0: mov rax,qword ptr [rdi + 0x20]
0xc6b4: cmp qword ptr [rdi + 0x28],rax
0xc6b8: jnz 0xc6aa
0xc6ba: cmp qword ptr [rdi + 0x48],0x0
0xc6bf: jnz 0xc6aa
0xc6c1: push r12
0xc6c3: push rbp
0xc6c4: mov r12d,edx
0xc6c7: push rbx
0xc6c8: mov rbp,rsi
0xc6cb: mov rbx,rdi
0xc6ce: call 0x20b0
0xc6d3: mov edx,r12d
0xc6d6: mov rsi,rbp
0xc6d9: mov edi,eax
0xc6db: call 0x1fd0
0xc6e0: cmp rax,-0x1
0xc6e4: jz 0xc6f2
0xc6e6: and dword ptr [rbx],0xffffffef
0xc6e9: mov qword ptr [0x90 + rbx],rax
0xc6f0: xor eax,eax
0xc6f2: pop rbx
0xc6f3: pop rbp
0xc6f4: pop r12
0xc6f6: ret 
0xc750: movzx eax,byte ptr [rdi - 0x1]
0xc754: sub rdi,rax
0xc757: jmp 0x1dd0
0xc75c: sub rsp,0x8
0xc760: call 0x1de0
0xc765: nop word ptr cs:[rax + rax*0x1]
0xc76f: nop 
0xc959: call 0x1f20
0xc99c: nop dword ptr [rax]
0xc9a0: push r15
0xc9a2: push r14
0xc9a4: mov r15,rdx
0xc9a7: push r13
0xc9a9: push r12
0xc9ab: lea r12,[rip+0x20607e]
0xc9b2: push rbp
0xc9b3: lea rbp,[rip+0x20607e]
0xc9ba: push rbx
0xc9bb: mov r13d,edi
0xc9be: mov r14,rsi
0xc9c1: sub rbp,r12
0xc9c4: sub rsp,0x8
0xc9c8: sar rbp,0x3
0xc9cc: call 0x1d88
0xc9d1: test rbp,rbp
0xc9d4: jz 0xc9f6
0xc9d6: xor ebx,ebx
0xc9d8: nop dword ptr [rax + rax*0x1]
0xc9e0: mov rdx,r15
0xc9e3: mov rsi,r14
0xc9e6: mov edi,r13d
0xc9e9: call qword ptr [r12 + rbx*0x8]
0xc9ed: add rbx,0x1
0xc9f1: cmp rbp,rbx
0xc9f4: jnz 0xc9e0
0xc9f6: add rsp,0x8
0xc9fa: pop rbx
0xc9fb: pop rbp
0xc9fc: pop r12
0xc9fe: pop r13
0xca00: pop r14
0xca02: pop r15
0xca04: ret 
0xca10: ret 
0xca30: sub rsp,0x8
0xca34: add rsp,0x8
0xca38: ret 
