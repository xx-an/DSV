0x14a8: sub rsp,0x8
0x14ac: mov rax,qword ptr [rip+0x207b2d]
0x14b3: test rax,rax
0x14b6: jz 0x14ba
0x14b8: call rax
0x14ba: add rsp,0x8
0x14be: ret 
0x14c0: push qword ptr [rip+0x20796a]
0x14c6: jmp qword ptr [rip+0x20796c]
0x14d6: push 0x0
0x14db: jmp 0x14c0
0x14e6: push 0x1
0x14eb: jmp 0x14c0
0x14f6: push 0x2
0x14fb: jmp 0x14c0
0x1506: push 0x3
0x150b: jmp 0x14c0
0x1510: jmp qword ptr [rip+0x20794a]
0x1516: push 0x4
0x151b: jmp 0x14c0
0x1520: jmp qword ptr [rip+0x207942]
0x1526: push 0x5
0x152b: jmp 0x14c0
0x1536: push 0x6
0x153b: jmp 0x14c0
0x1546: push 0x7
0x154b: jmp 0x14c0
0x1556: push 0x8
0x155b: jmp 0x14c0
0x1566: push 0x9
0x156b: jmp 0x14c0
0x1576: push 0xa
0x157b: jmp 0x14c0
0x1586: push 0xb
0x158b: jmp 0x14c0
0x1596: push 0xc
0x159b: jmp 0x14c0
0x15a0: jmp qword ptr [rip+0x207902]
0x15a6: push 0xd
0x15ab: jmp 0x14c0
0x15b6: push 0xe
0x15bb: jmp 0x14c0
0x15c6: push 0xf
0x15cb: jmp 0x14c0
0x15d6: push 0x10
0x15db: jmp 0x14c0
0x15e6: push 0x11
0x15eb: jmp 0x14c0
0x15f6: push 0x12
0x15fb: jmp 0x14c0
0x1606: push 0x13
0x160b: jmp 0x14c0
0x1610: jmp qword ptr [rip+0x2078ca]
0x1616: push 0x14
0x161b: jmp 0x14c0
0x1626: push 0x15
0x162b: jmp 0x14c0
0x1636: push 0x16
0x163b: jmp 0x14c0
0x1646: push 0x17
0x164b: jmp 0x14c0
0x1656: push 0x18
0x165b: jmp 0x14c0
0x1666: push 0x19
0x166b: jmp 0x14c0
0x1676: push 0x1a
0x167b: jmp 0x14c0
0x1680: jmp qword ptr [rip+0x207892]
0x1686: push 0x1b
0x168b: jmp 0x14c0
0x1696: push 0x1c
0x169b: jmp 0x14c0
0x16a0: jmp qword ptr [rip+0x207882]
0x16a6: push 0x1d
0x16ab: jmp 0x14c0
0x16b6: push 0x1e
0x16bb: jmp 0x14c0
0x16c6: push 0x1f
0x16cb: jmp 0x14c0
0x16d6: push 0x20
0x16db: jmp 0x14c0
0x16e6: push 0x21
0x16eb: jmp 0x14c0
0x16f6: push 0x22
0x16fb: jmp 0x14c0
0x1706: push 0x23
0x170b: jmp 0x14c0
0x1716: push 0x24
0x171b: jmp 0x14c0
0x1726: push 0x25
0x172b: jmp 0x14c0
0x1736: push 0x26
0x173b: jmp 0x14c0
0x1746: push 0x27
0x174b: jmp 0x14c0
0x1756: push 0x28
0x175b: jmp 0x14c0
0x1766: push 0x29
0x176b: jmp 0x14c0
0x1776: push 0x2a
0x177b: jmp 0x14c0
0x1786: push 0x2b
0x178b: jmp 0x14c0
0x1796: push 0x2c
0x179b: jmp 0x14c0
0x17a6: push 0x2d
0x17ab: jmp 0x14c0
0x17b6: push 0x2e
0x17bb: jmp 0x14c0
0x17c6: push 0x2f
0x17cb: jmp 0x14c0
0x17d6: push 0x30
0x17db: jmp 0x14c0
0x17e6: push 0x31
0x17eb: jmp 0x14c0
0x17f0: jmp qword ptr [rip+0x2077fa]
0x1e20: add eax,0x1
0x1e23: jnz 0x1d49
0x1e29: lea rsi,[rip+0x3e9a]
0x1e30: mov edx,0x5
0x1e35: xor edi,edi
0x1e37: call 0x1570
0x1e3c: mov rbx,rax
0x1e3f: call 0x14f0
0x1e44: mov esi,dword ptr [rax]
0x1e46: mov rdx,rbx
0x1e49: mov edi,0x1
0x1e4e: xor eax,eax
0x1e50: call 0x1750
0x1f3d: call 0x15a0
0x1fc4: add eax,0x1
0x1fc7: jnz 0x1c97
0x1fcd: lea rsi,[rip+0x3cf6]
0x1fd4: mov edx,0x5
0x1fd9: xor edi,edi
0x1fdb: call 0x1570
0x1fe0: mov rbx,rax
0x1fe3: call 0x14f0
0x1fe8: mov esi,dword ptr [rax]
0x1fea: mov rdx,rbx
0x1fed: mov edi,0x1
0x1ff2: xor eax,eax
0x1ff4: call 0x1750
0x1ff9: nop dword ptr [rax]
0x202a: hlt 
0x2030: lea rdi,[rip+0x207049]
0x2037: push rbp
0x2038: lea rax,[rip+0x207041]
0x203f: cmp rax,rdi
0x2042: mov rbp,rsp
0x2045: jz 0x2060
0x2047: mov rax,qword ptr [rip+0x206f82]
0x204e: test rax,rax
0x2051: jz 0x2060
0x2053: pop rbp
0x2054: jmp rax
0x2060: pop rbp
0x2061: ret 
0x2070: lea rdi,[rip+0x207009]
0x2077: lea rsi,[rip+0x207002]
0x207e: push rbp
0x207f: sub rsi,rdi
0x2082: mov rbp,rsp
0x2085: sar rsi,0x3
0x2089: mov rax,rsi
0x208c: shr rax,0x3f
0x2090: add rsi,rax
0x2093: sar rsi,1
0x2096: jz 0x20b0
0x2098: mov rax,qword ptr [rip+0x206f49]
0x209f: test rax,rax
0x20a2: jz 0x20b0
0x20a4: pop rbp
0x20a5: jmp rax
0x20b0: pop rbp
0x20b1: ret 
0x20c0: cmp byte ptr [rip+0x207001],0x0
0x20c7: jnz 0x20f8
0x20c9: cmp qword ptr [rip+0x206f1f],0x0
0x20d1: push rbp
0x20d2: mov rbp,rsp
0x20d5: jz 0x20e3
0x20d7: mov rdi,qword ptr [rip+0x206f2a]
0x20de: call 0x17f0
0x20e3: call 0x2030
0x20e8: mov byte ptr [rip+0x206fd9],0x1
0x20ef: pop rbp
0x20f0: ret 
0x20f8: ret 
0x2100: push rbp
0x2101: mov rbp,rsp
0x2104: pop rbp
0x2105: jmp 0x2070
0x27c0: push r14
0x27c2: push r13
0x27c4: mov r13,rdx
0x27c7: lea rdx,[rsi + 0x2]
0x27cb: push r12
0x27cd: push rbp
0x27ce: push rbx
0x27cf: mov rbx,-0x5555555555555555
0x27d9: mov rax,rdx
0x27dc: mul rbx
0x27df: shr rdx,1
0x27e2: lea rbx,[rdx*0x4]
0x27ea: lea rbp,[rbx + 0x1]
0x27ee: cmp rsi,rbp
0x27f1: jbe 0x2810
0x27f3: mov qword ptr [r13],0x0
0x27fb: xor ebp,ebp
0x27fd: pop rbx
0x27fe: mov rax,rbp
0x2801: pop rbp
0x2802: pop r12
0x2804: pop r13
0x2806: pop r14
0x2808: ret 
0x2810: mov r14,rdi
0x2813: mov rdi,rbp
0x2816: mov r12,rsi
0x2819: call 0x16c0
0x281e: test rax,rax
0x2821: mov qword ptr [r13],rax
0x2825: jz 0x27fd
0x2827: mov rcx,rbp
0x282a: mov rdx,rax
0x282d: mov rbp,rbx
0x2830: mov rsi,r12
0x2833: mov rdi,r14
0x2836: call 0x2600
0x283b: pop rbx
0x283c: mov rax,rbp
0x283f: pop rbp
0x2840: pop r12
0x2842: pop r13
0x2844: pop r14
0x2846: ret 
0x2940: mov rdi,r12
0x2ab6: jmp 0x2a5f
0x2ad8: sub rdx,r15
0x2adb: mov qword ptr [rsp + 0x20],r15
0x2ae0: add qword ptr [rsp + 0x18],rdx
0x2ae5: lea r15,[r12 + r13*0x1]
0x2ae9: jmp 0x2940
0x2af0: mov byte ptr [rsp + 0x6],0x1
0x2af5: mov byte ptr [rsp + 0x5],0x1
0x2afa: jmp 0x28e1
0x2aff: mov rdx,r15
0x2b02: mov eax,0x1
0x2b07: jmp 0x2998
0x2b28: call 0x15a0
0x2b2d: nop dword ptr [rax]
0x2b30: push r14
0x2b32: push r13
0x2b34: mov r14,rdx
0x2b37: push r12
0x2b39: push rbp
0x2b3a: mov r12,rdi
0x2b3d: push rbx
0x2b3e: mov r13,rsi
0x2b41: mov rbx,rcx
0x2b44: mov rbp,r8
0x2b47: sub rsp,0x20
0x2b4b: mov rax,qword ptr fs:[rip+0xffffffffffffd4d4]
0x2b54: mov qword ptr [rsp + 0x18],rax
0x2b59: xor eax,eax
0x2b5b: mov rax,rdx
0x2b5e: shr rax,0x2
0x2b62: lea rdi,[rax + rax*0x2 + 0x3]
0x2b67: mov qword ptr [rsp + 0x10],rdi
0x2b6c: call 0x16c0
0x2b71: test rax,rax
0x2b74: mov qword ptr [rbx],rax
0x2b77: jz 0x2ba8
0x2b79: lea r8,[rsp + 0x10]
0x2b7e: mov rcx,rax
0x2b81: mov rdx,r14
0x2b84: mov rsi,r13
0x2b87: mov rdi,r12
0x2b8a: call 0x2880
0x2b8f: test al,al
0x2b91: jz 0x2bd0
0x2b93: test rbp,rbp
0x2b96: jz 0x2ba8
0x2b98: mov rdx,qword ptr [rsp + 0x10]
0x2b9d: mov qword ptr [rbp],rdx
0x2ba1: jmp 0x2bad
0x2ba8: mov eax,0x1
0x2bad: mov rcx,qword ptr [rsp + 0x18]
0x2bb2: xor rcx,qword ptr fs:[rip+0xffffffffffffd46d]
0x2bbb: jnz 0x2bea
0x2bbd: add rsp,0x20
0x2bc1: pop rbx
0x2bc2: pop rbp
0x2bc3: pop r12
0x2bc5: pop r13
0x2bc7: pop r14
0x2bc9: ret 
0x2bd0: mov rdi,qword ptr [rbx]
0x2bd3: mov byte ptr [rsp + 0xf],al
0x2bd7: call 0x14d0
0x2bdc: mov qword ptr [rbx],0x0
0x2be3: movzx eax,byte ptr [rsp + 0xf]
0x2be8: jmp 0x2bad
0x2bea: call 0x15a0
0x2bef: nop 
0x2bf0: mov qword ptr [rip+0x2064e1],rdi
0x2bf7: ret 
0x2c00: mov byte ptr [rip+0x2064c9],dil
0x2c07: ret 
0x2c10: push rbp
0x2c11: push rbx
0x2c12: sub rsp,0x8
0x2c16: mov rdi,qword ptr [rip+0x20646b]
0x2c1d: call 0x59e0
0x2c22: test eax,eax
0x2c24: jz 0x2c3c
0x2c26: call 0x14f0
0x2c2b: cmp byte ptr [rip+0x20649e],0x0
0x2c32: mov rbx,rax
0x2c35: jz 0x2c53
0x2c37: cmp dword ptr [rax],0x20
0x2c3a: jnz 0x2c53
0x2c3c: mov rdi,qword ptr [rip+0x20647d]
0x2c43: call 0x59e0
0x2c48: test eax,eax
0x2c4a: jnz 0x2c92
0x2c4c: add rsp,0x8
0x2c50: pop rbx
0x2c51: pop rbp
0x2c52: ret 
0x2c53: lea rsi,[rip+0x3070]
0x2c5a: xor edi,edi
0x2c5c: mov edx,0x5
0x2c61: call 0x1570
0x2c66: mov rdi,qword ptr [rip+0x20646b]
0x2c6d: mov rbp,rax
0x2c70: test rdi,rdi
0x2c73: jz 0x2c9d
0x2c75: call 0x4810
0x2c7a: mov esi,dword ptr [rbx]
0x2c7c: lea rdx,[rip+0x35fd]
0x2c83: mov rcx,rax
0x2c86: mov r8,rbp
0x2c89: xor edi,edi
0x2c8b: xor eax,eax
0x2c8d: call 0x1750
0x2c92: mov edi,dword ptr [rip+0x206380]
0x2c98: call 0x1510
0x2c9d: mov esi,dword ptr [rbx]
0x2c9f: lea rdx,[rip+0x35de]
0x2ca6: mov rcx,rax
0x2ca9: xor edi,edi
0x2cab: xor eax,eax
0x2cad: call 0x1750
0x2cb2: jmp 0x2c92
0x2cc0: jmp 0x1640
0x2d9f: nop 
0x4083: call 0x15a0
0x40c4: nop 
0x40c6: nop word ptr cs:[rax + rax*0x1]
0x4271: call 0x14e0
0x4276: call 0x52a0
0x427b: nop dword ptr [rax + rax*0x1]
0x4280: push r12
0x4282: push rbp
0x4283: push rbx
0x4284: mov rbx,rdi
0x4287: call 0x14f0
0x428c: mov r12d,dword ptr [rax]
0x428f: mov rbp,rax
0x4292: lea rax,[rip+0x204f67]
0x4299: test rbx,rbx
0x429c: mov esi,0x38
0x42a1: cmovz rbx,rax
0x42a5: mov rdi,rbx
0x42a8: call 0x5250
0x42ad: mov dword ptr [rbp],r12d
0x42b1: pop rbx
0x42b2: pop rbp
0x42b3: pop r12
0x42b5: ret 
0x42c0: lea rax,[rip+0x204f39]
0x42c7: test rdi,rdi
0x42ca: cmovz rdi,rax
0x42ce: mov eax,dword ptr [rdi]
0x42d0: ret 
0x42e0: lea rax,[rip+0x204f19]
0x42e7: test rdi,rdi
0x42ea: cmovz rdi,rax
0x42ee: mov dword ptr [rdi],esi
0x42f0: ret 
0x4300: lea rax,[rip+0x204ef9]
0x4307: test rdi,rdi
0x430a: mov ecx,esi
0x430c: cmovz rdi,rax
0x4310: mov eax,esi
0x4312: and ecx,0x1f
0x4315: shr al,0x5
0x4318: movzx eax,al
0x431b: lea rdi,[rdi + rax*0x4 + 0x8]
0x4320: mov esi,dword ptr [rdi]
0x4322: mov eax,esi
0x4324: shr eax,cl
0x4326: xor edx,eax
0x4328: and eax,0x1
0x432b: and edx,0x1
0x432e: shl edx,cl
0x4330: xor edx,esi
0x4332: mov dword ptr [rdi],edx
0x4334: ret 
0x4340: lea rax,[rip+0x204eb9]
0x4347: test rdi,rdi
0x434a: cmovz rdi,rax
0x434e: mov eax,dword ptr [rdi + 0x4]
0x4351: mov dword ptr [rdi + 0x4],esi
0x4354: ret 
0x4360: lea rax,[rip+0x204e99]
0x4367: test rdi,rdi
0x436a: cmovz rdi,rax
0x436e: test rsi,rsi
0x4371: mov dword ptr [rdi],0xa
0x4377: jz 0x4387
0x4379: test rdx,rdx
0x437c: jz 0x4387
0x437e: mov qword ptr [rdi + 0x28],rsi
0x4382: mov qword ptr [rdi + 0x30],rdx
0x4386: ret 
0x4387: sub rsp,0x8
0x438b: call 0x14e0
0x4390: push r15
0x4392: push r14
0x4394: lea rax,[rip+0x204e65]
0x439b: push r13
0x439d: push r12
0x439f: mov r13,rdi
0x43a2: push rbp
0x43a3: push rbx
0x43a4: mov rbx,r8
0x43a7: mov r14,rsi
0x43aa: mov r15,rdx
0x43ad: sub rsp,0x18
0x43b1: test r8,r8
0x43b4: cmovz rbx,rax
0x43b8: mov qword ptr [rsp + 0x8],rcx
0x43bd: call 0x14f0
0x43c2: mov r12d,dword ptr [rax]
0x43c5: mov rbp,rax
0x43c8: lea rax,[rbx + 0x8]
0x43cc: sub rsp,0x8
0x43d0: mov r9d,dword ptr [rbx + 0x4]
0x43d4: push qword ptr [rbx + 0x30]
0x43d7: mov r8d,dword ptr [rbx]
0x43da: push qword ptr [rbx + 0x28]
0x43dd: mov rdx,r15
0x43e0: push rax
0x43e1: mov rcx,qword ptr [rsp + 0x28]
0x43e6: mov rsi,r14
0x43e9: mov rdi,r13
0x43ec: call 0x2e90
0x43f1: mov dword ptr [rbp],r12d
0x43f5: add rsp,0x38
0x43f9: pop rbx
0x43fa: pop rbp
0x43fb: pop r12
0x43fd: pop r13
0x43ff: pop r14
0x4401: pop r15
0x4403: ret 
0x4410: push r15
0x4412: push r14
0x4414: lea rax,[rip+0x204de5]
0x441b: push r13
0x441d: push r12
0x441f: mov r12,rdx
0x4422: push rbp
0x4423: push rbx
0x4424: mov rbx,rcx
0x4427: mov r14,rdi
0x442a: mov r15,rsi
0x442d: sub rsp,0x38
0x4431: test rcx,rcx
0x4434: cmovz rbx,rax
0x4438: xor ebp,ebp
0x443a: call 0x14f0
0x443f: test r12,r12
0x4442: mov r13,rax
0x4445: mov eax,dword ptr [rax]
0x4447: setz bpl
0x444b: or ebp,dword ptr [rbx + 0x4]
0x444e: lea r10,[rbx + 0x8]
0x4452: sub rsp,0x8
0x4456: mov r8d,dword ptr [rbx]
0x4459: mov rcx,r15
0x445c: mov dword ptr [rsp + 0x14],eax
0x4460: push qword ptr [rbx + 0x30]
0x4463: mov rdx,r14
0x4466: push qword ptr [rbx + 0x28]
0x4469: push r10
0x446b: xor esi,esi
0x446d: mov r9d,ebp
0x4470: xor edi,edi
0x4472: mov qword ptr [rsp + 0x40],r10
0x4477: call 0x2e90
0x447c: lea rsi,[rax + 0x1]
0x4480: mov qword ptr [rsp + 0x48],rax
0x4485: add rsp,0x20
0x4489: mov rdi,rsi
0x448c: mov qword ptr [rsp + 0x18],rsi
0x4491: call 0x5050
0x4496: mov qword ptr [rsp + 0x10],rax
0x449b: sub rsp,0x8
0x449f: push qword ptr [rbx + 0x30]
0x44a2: push qword ptr [rbx + 0x28]
0x44a5: mov r10,qword ptr [rsp + 0x38]
0x44aa: mov r9d,ebp
0x44ad: mov r8d,dword ptr [rbx]
0x44b0: mov rcx,r15
0x44b3: mov rdx,r14
0x44b6: mov rdi,rax
0x44b9: push r10
0x44bb: mov rsi,qword ptr [rsp + 0x38]
0x44c0: call 0x2e90
0x44c5: mov eax,dword ptr [rsp + 0x2c]
0x44c9: add rsp,0x20
0x44cd: test r12,r12
0x44d0: mov dword ptr [r13],eax
0x44d4: jz 0x44df
0x44d6: mov r11,qword ptr [rsp + 0x28]
0x44db: mov qword ptr [r12],r11
0x44df: mov rax,qword ptr [rsp + 0x10]
0x44e4: add rsp,0x38
0x44e8: pop rbx
0x44e9: pop rbp
0x44ea: pop r12
0x44ec: pop r13
0x44ee: pop r14
0x44f0: pop r15
0x44f2: ret 
0x4500: mov rcx,rdx
0x4503: xor edx,edx
0x4505: jmp 0x4410
0x4510: mov eax,dword ptr [rip+0x204b42]
0x4516: push r12
0x4518: mov r12,qword ptr [rip+0x204b41]
0x451f: push rbp
0x4520: push rbx
0x4521: cmp eax,0x1
0x4524: jle 0x4551
0x4526: sub eax,0x2
0x4529: lea rbx,[r12 + 0x18]
0x452e: shl rax,0x4
0x4532: lea rbp,[r12 + rax*0x1 + 0x28]
0x4537: nop word ptr [rax + rax*0x1]
0x4540: mov rdi,qword ptr [rbx]
0x4543: add rbx,0x10
0x4547: call 0x14d0
0x454c: cmp rbx,rbp
0x454f: jnz 0x4540
0x4551: mov rdi,qword ptr [r12 + 0x8]
0x4556: lea rbx,[rip+0x204ba3]
0x455d: cmp rdi,rbx
0x4560: jz 0x4579
0x4562: call 0x14d0
0x4567: mov qword ptr [rip+0x204afe],0x100
0x4572: mov qword ptr [rip+0x204aff],rbx
0x4579: lea rbx,[rip+0x204af0]
0x4580: cmp r12,rbx
0x4583: jz 0x4594
0x4585: mov rdi,r12
0x4588: call 0x14d0
0x458d: mov qword ptr [rip+0x204acc],rbx
0x4594: pop rbx
0x4595: mov dword ptr [rip+0x204ab9],0x1
0x459f: pop rbp
0x45a0: pop r12
0x45a2: ret 
0x45b0: lea rcx,[rip+0x204c49]
0x45b7: mov rdx,-0x1
0x45be: jmp 0x40d0
0x45d0: lea rcx,[rip+0x204c29]
0x45d7: jmp 0x40d0
0x45e0: lea rcx,[rip+0x204c19]
0x45e7: mov rsi,rdi
0x45ea: mov rdx,-0x1
0x45f1: xor edi,edi
0x45f3: jmp 0x40d0
0x4600: lea rcx,[rip+0x204bf9]
0x4607: mov rdx,rsi
0x460a: mov rsi,rdi
0x460d: xor edi,edi
0x460f: jmp 0x40d0
0x4620: sub rsp,0x48
0x4624: mov rax,rdx
0x4627: mov rdx,qword ptr fs:[rip+0xffffffffffffb9f8]
0x4630: mov qword ptr [rsp + 0x38],rdx
0x4635: xor edx,edx
0x4637: cmp esi,0xa
0x463a: jz 0x46a4
0x463c: mov dword ptr [rsp],esi
0x463f: mov rcx,rsp
0x4642: mov rdx,-0x1
0x4649: mov rsi,rax
0x464c: mov qword ptr [rsp + 0x4],0x0
0x4655: mov qword ptr [rsp + 0xc],0x0
0x465e: mov qword ptr [rsp + 0x14],0x0
0x4667: mov qword ptr [rsp + 0x1c],0x0
0x4670: mov qword ptr [rsp + 0x24],0x0
0x4679: mov qword ptr [rsp + 0x2c],0x0
0x4682: mov dword ptr [rsp + 0x34],0x0
0x468a: call 0x40d0
0x468f: mov rcx,qword ptr [rsp + 0x38]
0x4694: xor rcx,qword ptr fs:[rip+0xffffffffffffb98b]
0x469d: jnz 0x46a9
0x469f: add rsp,0x48
0x46a3: ret 
0x46a4: call 0x14e0
0x46a9: call 0x15a0
0x46ae: nop 
0x46b0: sub rsp,0x48
0x46b4: mov rax,rdx
0x46b7: mov rdx,rcx
0x46ba: mov rcx,qword ptr fs:[rip+0xffffffffffffb965]
0x46c3: mov qword ptr [rsp + 0x38],rcx
0x46c8: xor ecx,ecx
0x46ca: cmp esi,0xa
0x46cd: jz 0x4730
0x46cf: mov dword ptr [rsp],esi
0x46d2: mov rcx,rsp
0x46d5: mov rsi,rax
0x46d8: mov qword ptr [rsp + 0x4],0x0
0x46e1: mov qword ptr [rsp + 0xc],0x0
0x46ea: mov qword ptr [rsp + 0x14],0x0
0x46f3: mov qword ptr [rsp + 0x1c],0x0
0x46fc: mov qword ptr [rsp + 0x24],0x0
0x4705: mov qword ptr [rsp + 0x2c],0x0
0x470e: mov dword ptr [rsp + 0x34],0x0
0x4716: call 0x40d0
0x471b: mov rdx,qword ptr [rsp + 0x38]
0x4720: xor rdx,qword ptr fs:[rip+0xffffffffffffb8ff]
0x4729: jnz 0x4735
0x472b: add rsp,0x48
0x472f: ret 
0x4730: call 0x14e0
0x4735: call 0x15a0
0x473a: nop word ptr [rax + rax*0x1]
0x4740: mov rdx,rsi
0x4743: mov esi,edi
0x4745: xor edi,edi
0x4747: jmp 0x4620
0x4750: mov rcx,rdx
0x4753: mov rdx,rsi
0x4756: mov esi,edi
0x4758: xor edi,edi
0x475a: jmp 0x46b0
0x4760: sub rsp,0x48
0x4764: mov ecx,edx
0x4766: mov rax,qword ptr fs:[rip+0xffffffffffffb8b9]
0x476f: mov qword ptr [rsp + 0x38],rax
0x4774: xor eax,eax
0x4776: mov rax,qword ptr [rip+0x204ab3]
0x477d: mov r8,rsp
0x4780: and ecx,0x1f
0x4783: movdqa xmm0,[rip+0x204a75]
0x478b: mov qword ptr [rsp + 0x30],rax
0x4790: mov eax,edx
0x4792: movaps xmmword ptr [rsp],xmm0
0x4796: shr al,0x5
0x4799: movzx eax,al
0x479c: lea r9,[r8 + rax*0x4 + 0x8]
0x47a1: movdqa xmm0,[rip+0x204a67]
0x47a9: movaps xmmword ptr [rsp + 0x10],xmm0
0x47ae: movdqa xmm0,[rip+0x204a6a]
0x47b6: movaps xmmword ptr [rsp + 0x20],xmm0
0x47bb: mov edx,dword ptr [r9]
0x47be: mov eax,edx
0x47c0: shr eax,cl
0x47c2: not eax
0x47c4: and eax,0x1
0x47c7: shl eax,cl
0x47c9: mov rcx,r8
0x47cc: xor eax,edx
0x47ce: mov rdx,rsi
0x47d1: mov rsi,rdi
0x47d4: mov dword ptr [r9],eax
0x47d7: xor edi,edi
0x47d9: call 0x40d0
0x47de: mov rsi,qword ptr [rsp + 0x38]
0x47e3: xor rsi,qword ptr fs:[rip+0xffffffffffffb83c]
0x47ec: jnz 0x47f3
0x47ee: add rsp,0x48
0x47f2: ret 
0x47f3: call 0x15a0
0x47f8: nop dword ptr [rax + rax*0x1]
0x4800: movsx edx,sil
0x4804: mov rsi,-0x1
0x480b: jmp 0x4760
0x4810: mov edx,0x3a
0x4815: mov rsi,-0x1
0x481c: jmp 0x4760
0x4830: mov edx,0x3a
0x4835: jmp 0x4760
0x48c4: call 0x14e0
0x48c9: call 0x15a0
0x48ce: nop 
0x48d0: sub rsp,0x48
0x48d4: mov r9,rcx
0x48d7: mov rcx,qword ptr [rip+0x204952]
0x48de: movdqa xmm0,[rip+0x20491a]
0x48e6: mov rax,qword ptr fs:[rip+0xffffffffffffb739]
0x48ef: mov qword ptr [rsp + 0x38],rax
0x48f4: xor eax,eax
0x48f6: movaps xmmword ptr [rsp],xmm0
0x48fa: test rsi,rsi
0x48fd: mov qword ptr [rsp + 0x30],rcx
0x4902: mov dword ptr [rsp],0xa
0x4909: movdqa xmm0,[rip+0x2048ff]
0x4911: movaps xmmword ptr [rsp + 0x10],xmm0
0x4916: movdqa xmm0,[rip+0x204902]
0x491e: movaps xmmword ptr [rsp + 0x20],xmm0
0x4923: jz 0x4957
0x4925: test rdx,rdx
0x4928: jz 0x4957
0x492a: mov qword ptr [rsp + 0x28],rsi
0x492f: mov qword ptr [rsp + 0x30],rdx
0x4934: mov rcx,rsp
0x4937: mov rdx,r8
0x493a: mov rsi,r9
0x493d: call 0x40d0
0x4942: mov rdi,qword ptr [rsp + 0x38]
0x4947: xor rdi,qword ptr fs:[rip+0xffffffffffffb6d8]
0x4950: jnz 0x495c
0x4952: add rsp,0x48
0x4956: ret 
0x4957: call 0x14e0
0x495c: call 0x15a0
0x4961: nop dword ptr [rax + rax*0x1]
0x4966: nop word ptr cs:[rax + rax*0x1]
0x4970: mov r8,-0x1
0x4977: jmp 0x48d0
0x4980: mov rcx,rdx
0x4983: mov r8,-0x1
0x498a: mov rdx,rsi
0x498d: mov rsi,rdi
0x4990: xor edi,edi
0x4992: jmp 0x48d0
0x49a0: mov r8,rcx
0x49a3: mov rcx,rdx
0x49a6: mov rdx,rsi
0x49a9: mov rsi,rdi
0x49ac: xor edi,edi
0x49ae: jmp 0x48d0
0x49c0: lea rcx,[rip+0x204659]
0x49c7: jmp 0x40d0
0x49d0: lea rcx,[rip+0x204649]
0x49d7: mov rdx,rsi
0x49da: mov rsi,rdi
0x49dd: xor edi,edi
0x49df: jmp 0x40d0
0x49f0: lea rcx,[rip+0x204629]
0x49f7: mov rdx,-0x1
0x49fe: jmp 0x40d0
0x4b68: mov r8,rcx
0x4b6b: mov rcx,rdx
0x4b6e: lea rdx,[rip+0x1c3f]
0x4b75: mov esi,0x1
0x4b7a: xor eax,eax
0x4b7c: call 0x17b0
0x4b81: jmp 0x4a6c
0x4e50: xor r9d,r9d
0x4e53: cmp qword ptr [r8],0x0
0x4e57: jz 0x4e6b
0x4e59: nop dword ptr [rax]
0x4e60: add r9,0x1
0x4e64: cmp qword ptr [r8 + r9*0x8],0x0
0x4e69: jnz 0x4e60
0x4e6b: jmp 0x4a30
0x4e70: sub rsp,0x68
0x4e74: mov r10,r8
0x4e77: xor r9d,r9d
0x4e7a: mov rax,qword ptr fs:[rip+0xffffffffffffb1a5]
0x4e83: mov qword ptr [rsp + 0x58],rax
0x4e88: xor eax,eax
0x4e8a: mov r8,rsp
0x4e8d: nop dword ptr [rax]
0x4e90: mov eax,dword ptr [r10]
0x4e93: cmp eax,0x2f
0x4e96: ja 0x4eda
0x4e98: mov r11d,eax
0x4e9b: add r11,qword ptr [r10 + 0x10]
0x4e9f: add eax,0x8
0x4ea2: mov dword ptr [r10],eax
0x4ea5: mov rax,qword ptr [r11]
0x4ea8: test rax,rax
0x4eab: mov qword ptr [r8 + r9*0x8],rax
0x4eaf: jz 0x4ebb
0x4eb1: add r9,0x1
0x4eb5: cmp r9,0xa
0x4eb9: jnz 0x4e90
0x4ebb: call 0x4a30
0x4ec0: mov rax,qword ptr [rsp + 0x58]
0x4ec5: xor rax,qword ptr fs:[rip+0xffffffffffffb15a]
0x4ece: jnz 0x4ed5
0x4ed0: add rsp,0x68
0x4ed4: ret 
0x4ed5: call 0x15a0
0x4eda: mov r11,qword ptr [r10 + 0x8]
0x4ede: lea rax,[r11 + 0x8]
0x4ee2: mov qword ptr [r10 + 0x8],rax
0x4ee6: jmp 0x4ea5
0x4fb0: call 0x15a0
0x4fbc: mov rax,rbx
0x4fbf: add rbx,0x8
0x4fc3: jmp 0x4f76
0x4fd0: push rbx
0x4fd1: lea rsi,[rip+0x182a]
0x4fd8: mov edx,0x5
0x4fdd: xor edi,edi
0x4fdf: call 0x1570
0x4fe4: lea rdx,[rip+0x182c]
0x4feb: mov rsi,rax
0x4fee: mov edi,0x1
0x4ff3: xor eax,eax
0x4ff5: call 0x1730
0x4ffa: lea rsi,[rip+0x182c]
0x5001: mov edx,0x5
0x5006: xor edi,edi
0x5008: call 0x1570
0x500d: lea rcx,[rip+0x107c]
0x5014: lea rdx,[rip+0xc24]
0x501b: mov rsi,rax
0x501e: mov edi,0x1
0x5023: xor eax,eax
0x5025: call 0x1730
0x502a: mov rbx,qword ptr [rip+0x204057]
0x5031: lea rsi,[rip+0x1a28]
0x5038: xor edi,edi
0x503a: mov edx,0x5
0x503f: call 0x1570
0x5044: mov rsi,rbx
0x5047: mov rdi,rax
0x504a: pop rbx
0x504b: jmp 0x1670
0x506a: nop word ptr [rax + rax*0x1]
0x5070: mov rax,rdi
0x5073: mul rsi
0x5076: mov rdi,rax
0x5079: seto al
0x507c: test rdi,rdi
0x507f: js 0x508b
0x5081: movzx eax,al
0x5084: test rax,rax
0x5087: jnz 0x508b
0x5089: jmp 0x5050
0x508b: sub rsp,0x8
0x508f: call 0x52a0
0x5094: nop 
0x5096: nop word ptr cs:[rax + rax*0x1]
0x50a0: jmp 0x5050
0x50b9: test rdi,rdi
0x50bc: jnz 0x50d8
0x50d8: call 0x14d0
0x50dd: xor eax,eax
0x50df: pop rbx
0x50e0: ret 
0x50e6: nop word ptr cs:[rax + rax*0x1]
0x50f0: mov rax,rsi
0x50f3: mul rdx
0x50f6: mov rsi,rax
0x50f9: seto al
0x50fc: test rsi,rsi
0x50ff: js 0x510b
0x5101: movzx eax,al
0x5104: test rax,rax
0x5107: jnz 0x510b
0x5109: jmp 0x50b0
0x510b: sub rsp,0x8
0x510f: call 0x52a0
0x5114: nop 
0x5116: nop word ptr cs:[rax + rax*0x1]
0x5120: test rdi,rdi
0x5123: mov r9,rdx
0x5126: mov rcx,qword ptr [rsi]
0x5129: jz 0x5160
0x512b: xor edx,edx
0x512d: mov rax,0x5555555555555554
0x5137: div r9
0x513a: cmp rax,rcx
0x513d: jbe 0x517b
0x513f: mov rax,rcx
0x5142: shr rax,1
0x5145: lea rcx,[rax + rcx*0x1 + 0x1]
0x514a: mov qword ptr [rsi],rcx
0x514d: imul rcx,r9
0x5151: mov rsi,rcx
0x5154: jmp 0x50b0
0x5160: test rcx,rcx
0x5163: jz 0x5188
0x5165: mov rax,rcx
0x5168: mul r9
0x516b: seto dl
0x516e: test rax,rax
0x5171: movzx edx,dl
0x5174: js 0x517b
0x5176: test rdx,rdx
0x5179: jz 0x514a
0x517b: sub rsp,0x8
0x517f: call 0x52a0
0x5184: nop dword ptr [rax]
0x5188: xor edx,edx
0x518a: mov eax,0x80
0x518f: xor r8d,r8d
0x5192: div r9
0x5195: test rax,rax
0x5198: setz r8b
0x519c: lea rcx,[r8 + rax*0x1]
0x51a0: jmp 0x5165
0x51b0: test rdi,rdi
0x51b3: mov rax,qword ptr [rsi]
0x51b6: jz 0x51e0
0x51b8: mov rdx,0x5555555555555553
0x51c2: cmp rax,rdx
0x51c5: ja 0x51f1
0x51c7: mov rdx,rax
0x51ca: shr rdx,1
0x51cd: lea rax,[rdx + rax*0x1 + 0x1]
0x51d2: mov qword ptr [rsi],rax
0x51d5: mov rsi,rax
0x51d8: jmp 0x50b0
0x51e0: test rax,rax
0x51e3: mov edx,0x80
0x51e8: cmovz rax,rdx
0x51ec: test rax,rax
0x51ef: jns 0x51d2
0x51f1: sub rsp,0x8
0x51f5: call 0x52a0
0x51fa: nop word ptr [rax + rax*0x1]
0x5200: push rbx
0x5201: mov rbx,rdi
0x5204: call 0x5050
0x5209: mov rdx,rbx
0x520c: xor esi,esi
0x520e: mov rdi,rax
0x5211: pop rbx
0x5212: jmp 0x1630
0x5220: mov rax,rdi
0x5223: sub rsp,0x8
0x5227: mul rsi
0x522a: seto dl
0x522d: test rax,rax
0x5230: js 0x5249
0x5232: movzx edx,dl
0x5235: test rdx,rdx
0x5238: jnz 0x5249
0x523a: call 0x1680
0x523f: test rax,rax
0x5242: jz 0x5249
0x5244: add rsp,0x8
0x5248: ret 
0x5249: call 0x52a0
0x524e: nop 
0x5250: push rbp
0x5251: push rbx
0x5252: mov rbp,rdi
0x5255: mov rdi,rsi
0x5258: mov rbx,rsi
0x525b: sub rsp,0x8
0x525f: call 0x5050
0x5264: add rsp,0x8
0x5268: mov rdx,rbx
0x526b: mov rsi,rbp
0x526e: pop rbx
0x526f: pop rbp
0x5270: mov rdi,rax
0x5273: jmp 0x16a0
0x5280: push rbx
0x5281: mov rbx,rdi
0x5284: call 0x1590
0x5289: mov rdi,rbx
0x528c: lea rsi,[rax + 0x1]
0x5290: pop rbx
0x5291: jmp 0x5250
0x52d0: call 0x14e0
0x52d5: nop word ptr cs:[rax + rax*0x1]
0x52df: nop 
0x5380: mov rbp,qword ptr [rsp]
0x53db: call 0x15a0
0x54b6: cmp eax,0x22
0x54b9: mov ebp,0x1
0x54be: jnz 0x54e8
0x54e2: nop word ptr [rax + rax*0x1]
0x5790: call 0x15a0
0x5795: lea rcx,[rip+0x14a4]
0x579c: lea rsi,[rip+0x137d]
0x57a3: lea rdi,[rip+0x1396]
0x57aa: mov edx,0x54
0x57af: call 0x1610
0x59ce: call 0x15a0
0x59d3: nop word ptr cs:[rax + rax*0x1]
0x59dd: nop dword ptr [rax]
0x59e0: push r12
0x59e2: push rbp
0x59e3: mov rbp,rdi
0x59e6: push rbx
0x59e7: call 0x1520
0x59ec: mov ebx,dword ptr [rbp]
0x59ef: mov rdi,rbp
0x59f2: mov r12,rax
0x59f5: call 0x5830
0x59fa: and ebx,0x20
0x59fd: test ebx,ebx
0x59ff: jnz 0x5a18
0x5a01: test eax,eax
0x5a03: jz 0x5a0f
0x5a05: test r12,r12
0x5a08: mov eax,0xffffffff
0x5a0d: jz 0x5a48
0x5a0f: pop rbx
0x5a10: pop rbp
0x5a11: pop r12
0x5a13: ret 
0x5a18: test eax,eax
0x5a1a: jnz 0x5a38
0x5a1c: call 0x14f0
0x5a21: mov dword ptr [rax],0x0
0x5a27: mov eax,0xffffffff
0x5a2c: pop rbx
0x5a2d: pop rbp
0x5a2e: pop r12
0x5a30: ret 
0x5a38: pop rbx
0x5a39: mov eax,0xffffffff
0x5a3e: pop rbp
0x5a3f: pop r12
0x5a41: ret 
0x5a48: call 0x14f0
0x5a4d: cmp dword ptr [rax],0x9
0x5a50: pop rbx
0x5a51: pop rbp
0x5a52: pop r12
0x5a54: setnz al
0x5a57: movzx eax,al
0x5a5a: neg eax
0x5a5c: ret 
0x5b00: push r15
0x5b02: push r14
0x5b04: mov r15,rdx
0x5b07: push r13
0x5b09: push r12
0x5b0b: lea r12,[rip+0x202ffe]
0x5b12: push rbp
0x5b13: lea rbp,[rip+0x202ffe]
0x5b1a: push rbx
0x5b1b: mov r13d,edi
0x5b1e: mov r14,rsi
0x5b21: sub rbp,r12
0x5b24: sub rsp,0x8
0x5b28: sar rbp,0x3
0x5b2c: call 0x14a8
0x5b31: test rbp,rbp
0x5b34: jz 0x5b56
0x5b36: xor ebx,ebx
0x5b38: nop dword ptr [rax + rax*0x1]
0x5b40: mov rdx,r15
0x5b43: mov rsi,r14
0x5b46: mov edi,r13d
0x5b49: call qword ptr [r12 + rbx*0x8]
0x5b4d: add rbx,0x1
0x5b51: cmp rbp,rbx
0x5b54: jnz 0x5b40
0x5b56: add rsp,0x8
0x5b5a: pop rbx
0x5b5b: pop rbp
0x5b5c: pop r12
0x5b5e: pop r13
0x5b60: pop r14
0x5b62: pop r15
0x5b64: ret 
0x5b70: ret 
0x5b90: sub rsp,0x8
0x5b94: add rsp,0x8
0x5b98: ret 
