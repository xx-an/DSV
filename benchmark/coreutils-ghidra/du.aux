0x2390: sub rsp,0x8
0x2394: mov rax,qword ptr [rip+0x225c4d]
0x239b: test rax,rax
0x239e: jz 0x23a2
0x23a0: call rax
0x23a2: add rsp,0x8
0x23a6: ret 
0x23b0: push qword ptr [rip+0x2258da]
0x23b6: jmp qword ptr [rip+0x2258dc]
0x23c6: push 0x0
0x23cb: jmp 0x23b0
0x23d6: push 0x1
0x23db: jmp 0x23b0
0x23e6: push 0x2
0x23eb: jmp 0x23b0
0x23f6: push 0x3
0x23fb: jmp 0x23b0
0x2406: push 0x4
0x240b: jmp 0x23b0
0x2416: push 0x5
0x241b: jmp 0x23b0
0x2426: push 0x6
0x242b: jmp 0x23b0
0x2436: push 0x7
0x243b: jmp 0x23b0
0x2440: jmp qword ptr [rip+0x22589a]
0x2446: push 0x8
0x244b: jmp 0x23b0
0x2456: push 0x9
0x245b: jmp 0x23b0
0x2460: jmp qword ptr [rip+0x22588a]
0x2466: push 0xa
0x246b: jmp 0x23b0
0x2476: push 0xb
0x247b: jmp 0x23b0
0x2480: jmp qword ptr [rip+0x22587a]
0x2486: push 0xc
0x248b: jmp 0x23b0
0x2496: push 0xd
0x249b: jmp 0x23b0
0x24a6: push 0xe
0x24ab: jmp 0x23b0
0x24b6: push 0xf
0x24bb: jmp 0x23b0
0x24c6: push 0x10
0x24cb: jmp 0x23b0
0x24d6: push 0x11
0x24db: jmp 0x23b0
0x24e6: push 0x12
0x24eb: jmp 0x23b0
0x24f6: push 0x13
0x24fb: jmp 0x23b0
0x2506: push 0x14
0x250b: jmp 0x23b0
0x2516: push 0x15
0x251b: jmp 0x23b0
0x2526: push 0x16
0x252b: jmp 0x23b0
0x2536: push 0x17
0x253b: jmp 0x23b0
0x2546: push 0x18
0x254b: jmp 0x23b0
0x2556: push 0x19
0x255b: jmp 0x23b0
0x2566: push 0x1a
0x256b: jmp 0x23b0
0x2576: push 0x1b
0x257b: jmp 0x23b0
0x2586: push 0x1c
0x258b: jmp 0x23b0
0x2596: push 0x1d
0x259b: jmp 0x23b0
0x25a6: push 0x1e
0x25ab: jmp 0x23b0
0x25b6: push 0x1f
0x25bb: jmp 0x23b0
0x25c6: push 0x20
0x25cb: jmp 0x23b0
0x25d6: push 0x21
0x25db: jmp 0x23b0
0x25e6: push 0x22
0x25eb: jmp 0x23b0
0x25f6: push 0x23
0x25fb: jmp 0x23b0
0x2606: push 0x24
0x260b: jmp 0x23b0
0x2616: push 0x25
0x261b: jmp 0x23b0
0x2626: push 0x26
0x262b: jmp 0x23b0
0x2636: push 0x27
0x263b: jmp 0x23b0
0x2646: push 0x28
0x264b: jmp 0x23b0
0x2656: push 0x29
0x265b: jmp 0x23b0
0x2666: push 0x2a
0x266b: jmp 0x23b0
0x2670: jmp qword ptr [rip+0x225782]
0x2676: push 0x2b
0x267b: jmp 0x23b0
0x2686: push 0x2c
0x268b: jmp 0x23b0
0x2696: push 0x2d
0x269b: jmp 0x23b0
0x26a6: push 0x2e
0x26ab: jmp 0x23b0
0x26b6: push 0x2f
0x26bb: jmp 0x23b0
0x26c6: push 0x30
0x26cb: jmp 0x23b0
0x26d6: push 0x31
0x26db: jmp 0x23b0
0x26e6: push 0x32
0x26eb: jmp 0x23b0
0x26f6: push 0x33
0x26fb: jmp 0x23b0
0x2706: push 0x34
0x270b: jmp 0x23b0
0x2716: push 0x35
0x271b: jmp 0x23b0
0x2726: push 0x36
0x272b: jmp 0x23b0
0x2736: push 0x37
0x273b: jmp 0x23b0
0x2746: push 0x38
0x274b: jmp 0x23b0
0x2756: push 0x39
0x275b: jmp 0x23b0
0x2760: jmp qword ptr [rip+0x22570a]
0x2766: push 0x3a
0x276b: jmp 0x23b0
0x2776: push 0x3b
0x277b: jmp 0x23b0
0x2786: push 0x3c
0x278b: jmp 0x23b0
0x2796: push 0x3d
0x279b: jmp 0x23b0
0x27a6: push 0x3e
0x27ab: jmp 0x23b0
0x27b6: push 0x3f
0x27bb: jmp 0x23b0
0x27c6: push 0x40
0x27cb: jmp 0x23b0
0x27d6: push 0x41
0x27db: jmp 0x23b0
0x27e6: push 0x42
0x27eb: jmp 0x23b0
0x27f6: push 0x43
0x27fb: jmp 0x23b0
0x2806: push 0x44
0x280b: jmp 0x23b0
0x2816: push 0x45
0x281b: jmp 0x23b0
0x2826: push 0x46
0x282b: jmp 0x23b0
0x2836: push 0x47
0x283b: jmp 0x23b0
0x2846: push 0x48
0x284b: jmp 0x23b0
0x2856: push 0x49
0x285b: jmp 0x23b0
0x2866: push 0x4a
0x286b: jmp 0x23b0
0x2876: push 0x4b
0x287b: jmp 0x23b0
0x2886: push 0x4c
0x288b: jmp 0x23b0
0x2896: push 0x4d
0x289b: jmp 0x23b0
0x28a6: push 0x4e
0x28ab: jmp 0x23b0
0x28b6: push 0x4f
0x28bb: jmp 0x23b0
0x28c6: push 0x50
0x28cb: jmp 0x23b0
0x28d6: push 0x51
0x28db: jmp 0x23b0
0x28e6: push 0x52
0x28eb: jmp 0x23b0
0x28f6: push 0x53
0x28fb: jmp 0x23b0
0x2906: push 0x54
0x290b: jmp 0x23b0
0x2916: push 0x55
0x291b: jmp 0x23b0
0x2926: push 0x56
0x292b: jmp 0x23b0
0x2936: push 0x57
0x293b: jmp 0x23b0
0x2946: push 0x58
0x294b: jmp 0x23b0
0x2956: push 0x59
0x295b: jmp 0x23b0
0x2966: push 0x5a
0x296b: jmp 0x23b0
0x2976: push 0x5b
0x297b: jmp 0x23b0
0x2986: push 0x5c
0x298b: jmp 0x23b0
0x2996: push 0x5d
0x299b: jmp 0x23b0
0x29a6: push 0x5e
0x29ab: jmp 0x23b0
0x29b6: push 0x5f
0x29bb: jmp 0x23b0
0x29c6: push 0x60
0x29cb: jmp 0x23b0
0x29d6: push 0x61
0x29db: jmp 0x23b0
0x29e6: push 0x62
0x29eb: jmp 0x23b0
0x29f6: push 0x63
0x29fb: jmp 0x23b0
0x2a06: push 0x64
0x2a0b: jmp 0x23b0
0x2a18: jmp qword ptr [rip+0x2255da]
0x2a20: lea rcx,[rip+0x1f039]
0x2a27: lea rsi,[rip+0x1ea7a]
0x2a2e: lea rdi,[rip+0x1eac1]
0x2a35: sub rsp,0x8
0x2a39: mov edx,0xb3
0x2a3e: call 0x2600
0x2a43: nop word ptr cs:[rax+rax*0x1]
0x2a4d: nop dword ptr [rax]
0x2d27: mov byte ptr [rsp+0x8],0x0
0x2d2c: jmp 0x2b48
0x344c: cmp byte ptr [rbx],0x0
0x344f: jnz 0x34e1
0x3455: nop dword ptr [rax]
0x34a3: mov byte ptr [rsp+0x18],0x0
0x34a8: jmp 0x3000
0x34e1: mov byte ptr [rsp+0x18],0x0
0x34e6: jmp 0x3000
0x359d: mov byte ptr [rsp+0x18],0x0
0x36c1: jmp 0x31b0
0x3768: mov edi,0x1
0x376d: call 0x4240
0x37a9: mov byte ptr [rsp+0x8],0x0
0x37ae: jmp 0x2b48
0x3951: jmp 0x3706
0x3995: jmp 0x36e9
0x39d3: jmp 0x3400
0x39f9: mov rbx,qword ptr [rip+0x224610]
0x3a00: test rbx,rbx
0x3a03: jnz 0x3744
0x3a3a: jmp 0x2f1f
0x3c88: jmp 0x31b0
0x3d20: jmp 0x3400
0x3de4: call 0x2560
0x3e1a: lea rsi,[rip+0x1d03f]
0x3e21: mov edx,0x5
0x3e26: xor edi,edi
0x3e28: call 0x2510
0x3e2d: mov rdi,qword ptr [rip+0x2242ac]
0x3e34: lea rdx,[rip+0x1e155]
0x3e3b: mov rcx,rax
0x3e3e: mov esi,0x1
0x3e43: xor eax,eax
0x3e45: call 0x2970
0x3e4a: mov edi,0x1
0x3e4f: call 0x4240
0x3f2c: mov edi,0x1
0x3f31: call 0x4240
0x3f36: nop word ptr cs:[rax+rax*0x1]
0x3f6a: hlt 
0x3f70: lea rdi,[rip+0x224129]
0x3f77: push rbp
0x3f78: lea rax,[rip+0x224121]
0x3f7f: cmp rax,rdi
0x3f82: mov rbp,rsp
0x3f85: jz 0x3fa0
0x3f87: mov rax,qword ptr [rip+0x224042]
0x3f8e: test rax,rax
0x3f91: jz 0x3fa0
0x3f93: pop rbp
0x3f94: jmp rax
0x3fa0: pop rbp
0x3fa1: ret 
0x3fb0: lea rdi,[rip+0x2240e9]
0x3fb7: lea rsi,[rip+0x2240e2]
0x3fbe: push rbp
0x3fbf: sub rsi,rdi
0x3fc2: mov rbp,rsp
0x3fc5: sar rsi,0x3
0x3fc9: mov rax,rsi
0x3fcc: shr rax,0x3f
0x3fd0: add rsi,rax
0x3fd3: sar rsi,0x1
0x3fd6: jz 0x3ff0
0x3fd8: mov rax,qword ptr [rip+0x224011]
0x3fdf: test rax,rax
0x3fe2: jz 0x3ff0
0x3fe4: pop rbp
0x3fe5: jmp rax
0x3ff0: pop rbp
0x3ff1: ret 
0x4000: cmp byte ptr [rip+0x2240e1],0x0
0x4007: jnz 0x4038
0x4009: cmp qword ptr [rip+0x223fe7],0x0
0x4011: push rbp
0x4012: mov rbp,rsp
0x4015: jz 0x4023
0x4017: mov rdi,qword ptr [rip+0x223fea]
0x401e: call 0x2a18
0x4023: call 0x3f70
0x4028: mov byte ptr [rip+0x2240b9],0x1
0x402f: pop rbp
0x4030: ret 
0x4038: ret 
0x4040: push rbp
0x4041: mov rbp,rsp
0x4044: pop rbp
0x4045: jmp 0x3fb0
0x40d5: call 0x2560
0x40da: nop word ptr [rax+rax*0x1]
0x41da: jmp 0x413d
0x4220: mov rsi,qword ptr [rip+0x223e81]
0x4227: mov rdi,rbx
0x422a: call 0x26a0
0x422f: jmp 0x4186
0x4234: call 0x2560
0x4239: nop dword ptr [rax]
0x426f: lea rsi,[rip+0x1bbc2]
0x4276: xor edi,edi
0x4278: call 0x2510
0x427d: mov rdi,qword ptr [rip+0x223e5c]
0x4284: mov rdx,rax
0x4287: mov rcx,rbx
0x428a: mov esi,0x1
0x428f: xor eax,eax
0x4291: call 0x2970
0x4700: mov edi,0x1
0x4705: jmp 0x4240
0x48b0: push r15
0x48b2: push r14
0x48b4: mov r14,rdi
0x48b7: push r13
0x48b9: push r12
0x48bb: xor edi,edi
0x48bd: push rbp
0x48be: push rbx
0x48bf: mov rbp,rsi
0x48c2: lea rsi,[rip+0x1cba8]
0x48c9: mov r12,rdx
0x48cc: mov edx,0x5
0x48d1: sub rsp,0x8
0x48d5: mov rbx,qword ptr [rip+0x223804]
0x48dc: call 0x2510
0x48e1: mov rdi,rax
0x48e4: mov rsi,rbx
0x48e7: call 0x26a0
0x48ec: mov r15,qword ptr [r14]
0x48ef: test r15,r15
0x48f2: jz 0x4988
0x48f8: xor r13d,r13d
0x48fb: xor ebx,ebx
0x48fd: jmp 0x4938
0x4900: mov rdi,r15
0x4903: add rbx,0x1
0x4907: mov r13,rbp
0x490a: call 0xc360
0x490f: mov rdi,qword ptr [rip+0x2237ca]
0x4916: lea rdx,[rip+0x1cb69]
0x491d: mov rcx,rax
0x4920: mov esi,0x1
0x4925: xor eax,eax
0x4927: add rbp,r12
0x492a: call 0x2970
0x492f: mov r15,qword ptr [r14+rbx*0x8]
0x4933: test r15,r15
0x4936: jz 0x4988
0x4938: test rbx,rbx
0x493b: jz 0x4900
0x493d: mov rdx,r12
0x4940: mov rsi,rbp
0x4943: mov rdi,r13
0x4946: call 0x2680
0x494b: test eax,eax
0x494d: jnz 0x4900
0x494f: mov rdi,r15
0x4952: add rbx,0x1
0x4956: add rbp,r12
0x4959: call 0xc360
0x495e: mov rdi,qword ptr [rip+0x22377b]
0x4965: lea rdx,[rip+0x1cb22]
0x496c: mov rcx,rax
0x496f: mov esi,0x1
0x4974: xor eax,eax
0x4976: call 0x2970
0x497b: mov r15,qword ptr [r14+rbx*0x8]
0x497f: test r15,r15
0x4982: jnz 0x4938
0x4984: nop dword ptr [rax]
0x4988: mov rdi,qword ptr [rip+0x223751]
0x498f: mov rax,qword ptr [rdi+0x28]
0x4993: cmp rax,qword ptr [rdi+0x30]
0x4997: jnc 0x49b8
0x4999: lea rdx,[rax+0x1]
0x499d: mov qword ptr [rdi+0x28],rdx
0x49a1: mov byte ptr [rax],0xa
0x49a4: add rsp,0x8
0x49a8: pop rbx
0x49a9: pop rbp
0x49aa: pop r12
0x49ac: pop r13
0x49ae: pop r14
0x49b0: pop r15
0x49b2: ret 
0x49b8: add rsp,0x8
0x49bc: mov esi,0xa
0x49c1: pop rbx
0x49c2: pop rbp
0x49c3: pop r12
0x49c5: pop r13
0x49c7: pop r14
0x49c9: pop r15
0x49cb: jmp 0x25c0
0x4a23: mov rdx,r15
0x4a26: mov rsi,rbp
0x4a29: mov rdi,rbx
0x4a2c: call 0x48b0
0x4a31: call r13
0x4a34: mov rax,-0x1
0x4a3b: jmp 0x4a06
0x4a40: push r14
0x4a42: push r13
0x4a44: push r12
0x4a46: push rbp
0x4a47: push rbx
0x4a48: mov r14,qword ptr [rsi]
0x4a4b: test r14,r14
0x4a4e: jz 0x4a81
0x4a50: mov r12,rcx
0x4a53: mov r13,rdi
0x4a56: mov rbp,rdx
0x4a59: lea rbx,[rsi+0x8]
0x4a5d: jmp 0x4a6f
0x4a60: mov r14,qword ptr [rbx]
0x4a63: add rbp,r12
0x4a66: add rbx,0x8
0x4a6a: test r14,r14
0x4a6d: jz 0x4a81
0x4a6f: mov rdx,r12
0x4a72: mov rsi,rbp
0x4a75: mov rdi,r13
0x4a78: call 0x2680
0x4a7d: test eax,eax
0x4a7f: jnz 0x4a60
0x4a81: pop rbx
0x4a82: mov rax,r14
0x4a85: pop rbp
0x4a86: pop r12
0x4a88: pop r13
0x4a8a: pop r14
0x4a8c: ret 
0x4bd0: mov qword ptr [rip+0x2235d1],rdi
0x4bd7: ret 
0x4be0: mov byte ptr [rip+0x2235b9],dil
0x4be7: ret 
0x4bf0: push rbp
0x4bf1: push rbx
0x4bf2: sub rsp,0x8
0x4bf6: mov rdi,qword ptr [rip+0x2234ab]
0x4bfd: call 0x1f320
0x4c02: test eax,eax
0x4c04: jz 0x4c1c
0x4c06: call 0x2410
0x4c0b: cmp byte ptr [rip+0x22358e],0x0
0x4c12: mov rbx,rax
0x4c15: jz 0x4c33
0x4c17: cmp dword ptr [rax],0x20
0x4c1a: jnz 0x4c33
0x4c1c: mov rdi,qword ptr [rip+0x2234bd]
0x4c23: call 0x1f320
0x4c28: test eax,eax
0x4c2a: jnz 0x4c72
0x4c2c: add rsp,0x8
0x4c30: pop rbx
0x4c31: pop rbp
0x4c32: ret 
0x4c33: lea rsi,[rip+0x1c859]
0x4c3a: xor edi,edi
0x4c3c: mov edx,0x5
0x4c41: call 0x2510
0x4c46: mov rdi,qword ptr [rip+0x22355b]
0x4c4d: mov rbp,rax
0x4c50: test rdi,rdi
0x4c53: jz 0x4c7d
0x4c55: call 0xc160
0x4c5a: mov esi,dword ptr [rbx]
0x4c5c: lea rdx,[rip+0x1c83c]
0x4c63: mov rcx,rax
0x4c66: mov r8,rbp
0x4c69: xor edi,edi
0x4c6b: xor eax,eax
0x4c6d: call 0x28a0
0x4c72: mov edi,dword ptr [rip+0x2233b0]
0x4c78: call 0x2440
0x4c7d: mov esi,dword ptr [rbx]
0x4c7f: lea rdx,[rip+0x1c80a]
0x4c86: mov rcx,rax
0x4c89: xor edi,edi
0x4c8b: xor eax,eax
0x4c8d: call 0x28a0
0x4c92: jmp 0x4c72
0x4ca0: mov rax,qword ptr [rdi]
0x4ca3: xor edx,edx
0x4ca5: div rsi
0x4ca8: mov rax,rdx
0x4cab: ret 
0x4cb0: mov rax,qword ptr [rsi]
0x4cb3: cmp qword ptr [rdi],rax
0x4cb6: setz al
0x4cb9: ret 
0x4cc0: mov rax,rdi
0x4cc3: xor edx,edx
0x4cc5: div rsi
0x4cc8: mov rax,rdx
0x4ccb: ret 
0x4cd0: push rbx
0x4cd1: mov rbx,rdi
0x4cd4: mov rdi,qword ptr [rdi+0x8]
0x4cd8: call 0x87b0
0x4cdd: mov rdi,rbx
0x4ce0: pop rbx
0x4ce1: jmp 0x2a10
0x4d06: cmp qword ptr [rbx],rdx
0x4d09: jz 0x4d38
0x4d23: mov rax,qword ptr [rax+0x8]
0x4d27: mov qword ptr [rbx+0x8],rax
0x4d38: mov rax,qword ptr [rbx+0x8]
0x4d3c: add rsp,0x10
0x4d40: pop rbx
0x4d41: pop rbp
0x4d42: pop r12
0x4d44: ret 
0x4f90: jmp 0x2a10
0x4fa0: sub rsp,0x8
0x4fa4: call 0x9f40
0x4fa9: test eax,eax
0x4fab: setz al
0x4fae: add rsp,0x8
0x4fb2: ret 
0x4ff0: mov eax,edx
0x4ff2: and eax,0x10
0x4ff5: and edx,0x8
0x4ff8: jnz 0x5008
0x4ffa: test eax,eax
0x4ffc: jz 0x5050
0x4ffe: jmp 0x9f40
0x5008: push r12
0x500a: push rbp
0x500b: mov rbp,rdi
0x500e: push rbx
0x500f: mov rbx,rsi
0x5012: sub rsp,0x10
0x5016: test eax,eax
0x5018: jnz 0x5058
0x501a: call 0x2530
0x501f: mov rsi,rbx
0x5022: mov rdx,rax
0x5025: mov rdi,rbp
0x5028: mov r12,rax
0x502b: call 0x2420
0x5030: test eax,eax
0x5032: jnz 0x503f
0x5034: movsx edx,byte ptr [rbx+r12*0x1]
0x5039: cmp edx,0x2f
0x503c: cmovnz eax,edx
0x503f: add rsp,0x10
0x5043: pop rbx
0x5044: pop rbp
0x5045: pop r12
0x5047: ret 
0x5050: jmp 0x26d0
0x5058: mov rdi,rsi
0x505b: call 0xcc10
0x5060: mov r12,rax
0x5063: mov rdi,rax
0x5066: jmp 0x5089
0x5070: mov byte ptr [rax],0x0
0x5073: mov rsi,r12
0x5076: mov rdi,rbp
0x5079: call 0x9f40
0x507e: test eax,eax
0x5080: jle 0x50a6
0x5082: lea rdi,[rbx+0x1]
0x5086: mov byte ptr [rbx],0x2f
0x5089: mov esi,0x2f
0x508e: call 0x25a0
0x5093: test rax,rax
0x5096: mov rbx,rax
0x5099: jnz 0x5070
0x509b: mov rsi,r12
0x509e: mov rdi,rbp
0x50a1: call 0x9f40
0x50a6: mov rdi,r12
0x50a9: mov dword ptr [rsp+0xc],eax
0x50ad: call 0x2a10
0x50b2: mov eax,dword ptr [rsp+0xc]
0x50b6: add rsp,0x10
0x50ba: pop rbx
0x50bb: pop rbp
0x50bc: pop r12
0x50be: ret 
0x50c0: push r15
0x50c2: push r14
0x50c4: xor r14d,r14d
0x50c7: push r13
0x50c9: push r12
0x50cb: lea r12,[rip+0x1c96e]
0x50d2: push rbp
0x50d3: push rbx
0x50d4: mov rbx,rsi
0x50d7: sub rsp,0x68
0x50db: lea rbp,[rsp+0x10]
0x50e0: mov qword ptr [rsp+0x20],rdi
0x50e5: mov byte ptr [rsp+0x10],0x0
0x50ea: mov rax,qword ptr fs:[0x28]
0x50f3: mov qword ptr [rsp+0x58],rax
0x50f8: xor eax,eax
0x50fa: lea rax,[rbp+0x4]
0x50fe: mov qword ptr [rsp+0x14],0x0
0x5107: mov byte ptr [rsp+0x1c],0x0
0x510c: mov qword ptr [rsp+0x8],rax
0x5111: jmp 0x5146
0x5118: mov edi,r13d
0x511b: call 0x28e0
0x5120: mov rdx,r14
0x5123: cdqe 
0x5125: add r15,qword ptr [rsp+0x28]
0x512a: shl rdx,0x5
0x512e: mov byte ptr [rsp+0x1c],0x0
0x5133: sub rdx,r14
0x5136: add rax,rdx
0x5139: xor edx,edx
0x513b: div rbx
0x513e: mov qword ptr [rsp+0x20],r15
0x5143: mov r14,rdx
0x5146: cmp byte ptr [rsp+0x10],0x0
0x514b: jnz 0x51b7
0x514d: mov rcx,qword ptr [rsp+0x20]
0x5152: movzx edx,byte ptr [rcx]
0x5155: mov eax,edx
0x5157: shr al,0x5
0x515a: and eax,0x7
0x515d: mov eax,dword ptr [r12+rax*0x4]
0x5161: bt eax,edx
0x5164: jnc 0x51a0
0x5166: mov qword ptr [rsp+0x28],0x1
0x516f: movsx r13d,byte ptr [rcx]
0x5173: mov byte ptr [rsp+0x30],0x1
0x5178: mov byte ptr [rsp+0x1c],0x1
0x517d: mov dword ptr [rsp+0x34],r13d
0x5182: test r13d,r13d
0x5185: jz 0x5250
0x518b: cmp byte ptr [rsp+0x30],0x0
0x5190: mov r15,qword ptr [rsp+0x20]
0x5195: jnz 0x5118
0x5197: movsx eax,byte ptr [r15]
0x519b: jmp 0x5120
0x51a0: mov rdi,qword ptr [rsp+0x8]
0x51a5: call 0x2990
0x51aa: test eax,eax
0x51ac: jz 0x52e2
0x51b2: mov byte ptr [rsp+0x10],0x1
0x51b7: call 0x2520
0x51bc: mov r15,qword ptr [rsp+0x20]
0x51c1: mov rsi,rax
0x51c4: mov rdi,r15
0x51c7: call 0xc380
0x51cc: lea rcx,[rbp+0x4]
0x51d0: lea rdi,[rbp+0x24]
0x51d4: mov rdx,rax
0x51d7: mov rsi,r15
0x51da: call 0x101e0
0x51df: cmp rax,-0x1
0x51e3: mov qword ptr [rsp+0x28],rax
0x51e8: jz 0x5280
0x51ee: cmp rax,-0x2
0x51f2: jz 0x52a0
0x51f8: test rax,rax
0x51fb: jnz 0x52d8
0x5201: mov rax,qword ptr [rsp+0x20]
0x5206: mov qword ptr [rsp+0x28],0x1
0x520f: cmp byte ptr [rax],0x0
0x5212: jnz 0x5320
0x5218: mov r13d,dword ptr [rsp+0x34]
0x521d: test r13d,r13d
0x5220: jnz 0x5301
0x5226: lea rdi,[rbp+0x4]
0x522a: mov byte ptr [rsp+0x30],0x1
0x522f: call 0x2990
0x5234: test eax,eax
0x5236: jz 0x52c8
0x523c: test r13d,r13d
0x523f: mov byte ptr [rsp+0x10],0x0
0x5244: mov byte ptr [rsp+0x1c],0x1
0x5249: jnz 0x518b
0x524f: nop 
0x5250: mov rsi,qword ptr [rsp+0x58]
0x5255: xor rsi,qword ptr fs:[0x28]
0x525e: mov rax,r14
0x5261: jnz 0x533f
0x5267: add rsp,0x68
0x526b: pop rbx
0x526c: pop rbp
0x526d: pop r12
0x526f: pop r13
0x5271: pop r14
0x5273: pop r15
0x5275: ret 
0x5280: mov qword ptr [rsp+0x28],0x1
0x5289: mov byte ptr [rsp+0x30],0x0
0x528e: mov r13d,dword ptr [rsp+0x34]
0x5293: mov byte ptr [rsp+0x1c],0x1
0x5298: jmp 0x518b
0x52a0: mov rdi,qword ptr [rsp+0x20]
0x52a5: call 0x2530
0x52aa: mov byte ptr [rsp+0x30],0x0
0x52af: mov qword ptr [rsp+0x28],rax
0x52b4: mov r13d,dword ptr [rsp+0x34]
0x52b9: mov byte ptr [rsp+0x1c],0x1
0x52be: jmp 0x518b
0x52c8: mov byte ptr [rsp+0x1c],0x1
0x52cd: jmp 0x5182
0x52d8: mov r13d,dword ptr [rsp+0x34]
0x52dd: jmp 0x5226
0x52e2: lea rcx,[rip+0x1c427]
0x52e9: lea rsi,[rip+0x1c1b8]
0x52f0: lea rdi,[rip+0x1c1d1]
0x52f7: mov edx,0x96
0x52fc: call 0x2600
0x5301: lea rcx,[rip+0x1c408]
0x5308: lea rsi,[rip+0x1c199]
0x530f: lea rdi,[rip+0x1c1e0]
0x5316: mov edx,0xb3
0x531b: call 0x2600
0x5320: lea rcx,[rip+0x1c3e9]
0x5327: lea rsi,[rip+0x1c17a]
0x532e: lea rdi,[rip+0x1c1aa]
0x5335: mov edx,0xb2
0x533a: call 0x2600
0x533f: call 0x2560
0x5344: nop 
0x5346: nop word ptr cs:[rax+rax*0x1]
0x5350: push rbp
0x5351: push rbx
0x5352: mov rbx,rdi
0x5355: mov edi,0x10
0x535a: mov rbp,rsi
0x535d: sub rsp,0x8
0x5361: call 0xc9e0
0x5366: mov rdx,qword ptr [rbx+0x8]
0x536a: mov qword ptr [rax+0x8],rbp
0x536e: mov qword ptr [rbx+0x8],rax
0x5372: mov qword ptr [rax],rdx
0x5375: add rsp,0x8
0x5379: pop rbx
0x537a: pop rbp
0x537b: ret 
0x5420: push r14
0x5422: push r13
0x5424: mov r14,rdi
0x5427: push r12
0x5429: push rbp
0x542a: push rbx
0x542b: mov rbx,qword ptr [rdi]
0x542e: test rbx,rbx
0x5431: jz 0x54aa
0x5433: nop dword ptr [rax+rax*0x1]
0x5438: mov eax,dword ptr [rbx+0x8]
0x543b: mov r13,qword ptr [rbx]
0x543e: test eax,eax
0x5440: jz 0x54e8
0x5446: cmp eax,0x1
0x5449: jnz 0x549a
0x544b: cmp qword ptr [rbx+0x20],0x0
0x5450: mov rdi,qword ptr [rbx+0x10]
0x5454: jz 0x5495
0x5456: xor r12d,r12d
0x5459: xor ebp,ebp
0x545b: jmp 0x546e
0x5460: add rbp,0x1
0x5464: add r12,0x48
0x5468: cmp rbp,qword ptr [rbx+0x20]
0x546c: jnc 0x5495
0x546e: lea rax,[rdi+r12*0x1]
0x5472: test dword ptr [rax],0x8000000
0x5478: jz 0x5460
0x547a: lea rdi,[rax+0x8]
0x547e: add rbp,0x1
0x5482: add r12,0x48
0x5486: call 0x1ebe0
0x548b: cmp rbp,qword ptr [rbx+0x20]
0x548f: mov rdi,qword ptr [rbx+0x10]
0x5493: jc 0x546e
0x5495: call 0x2a10
0x549a: mov rdi,rbx
0x549d: mov rbx,r13
0x54a0: call 0x2a10
0x54a5: test r13,r13
0x54a8: jnz 0x5438
0x54aa: mov rbx,qword ptr [r14+0x8]
0x54ae: test rbx,rbx
0x54b1: jz 0x54d4
0x54b3: nop dword ptr [rax+rax*0x1]
0x54b8: mov rdi,qword ptr [rbx+0x8]
0x54bc: mov rbp,qword ptr [rbx]
0x54bf: call 0x2a10
0x54c4: mov rdi,rbx
0x54c7: mov rbx,rbp
0x54ca: call 0x2a10
0x54cf: test rbp,rbp
0x54d2: jnz 0x54b8
0x54d4: pop rbx
0x54d5: mov rdi,r14
0x54d8: pop rbp
0x54d9: pop r12
0x54db: pop r13
0x54dd: pop r14
0x54df: jmp 0x2a10
0x54e8: mov rdi,qword ptr [rbx+0x10]
0x54ec: call 0x87b0
0x54f1: mov rdi,rbx
0x54f4: mov rbx,r13
0x54f7: call 0x2a10
0x54fc: test r13,r13
0x54ff: jnz 0x5438
0x5505: jmp 0x54aa
0x560f: nop 
0x5a6e: nop 
0x5cc5: movzx ecx,byte ptr [r14-0x2]
0x5cca: test byte ptr [rax+rcx*0x2+0x1],0x20
0x5ccf: jnz 0x5cf0
0x5cd1: jmp 0x5c4d
0x5ce0: movzx ecx,byte ptr [r15-0x1]
0x5ce5: test byte ptr [rax+rcx*0x2+0x1],0x20
0x5cea: jz 0x5c4d
0x5cf0: sub r15,0x1
0x5cf4: cmp r15,rsi
0x5cf7: jnz 0x5ce0
0x5cf9: jmp 0x5c64
0x5cfe: call 0x2560
0x5d03: nop dword ptr [rax]
0x5d06: nop word ptr cs:[rax+rax*0x1]
0x7a78: call 0x2560
0x7aeb: call 0x2560
0x7d90: mov rax,rdi
0x7d93: xor edx,edx
0x7d95: ror rax,0x3
0x7d99: div rsi
0x7d9c: mov rax,rdx
0x7d9f: ret 
0x7da0: cmp rdi,rsi
0x7da3: setz al
0x7da6: ret 
0x7dd2: nop dword ptr [rax]
0x7dd6: nop word ptr cs:[rax+rax*0x1]
0x80c0: mov rax,qword ptr [rdi+0x10]
0x80c4: ret 
0x80d0: mov rax,qword ptr [rdi+0x18]
0x80d4: ret 
0x80e0: mov rax,qword ptr [rdi+0x20]
0x80e4: ret 
0x80f0: mov rsi,qword ptr [rdi]
0x80f3: mov rdi,qword ptr [rdi+0x8]
0x80f7: xor eax,eax
0x80f9: cmp rsi,rdi
0x80fc: jnc 0x8137
0x80fe: nop 
0x8100: cmp qword ptr [rsi],0x0
0x8104: jz 0x812c
0x8106: mov rdx,qword ptr [rsi+0x8]
0x810a: mov ecx,0x1
0x810f: test rdx,rdx
0x8112: jz 0x8125
0x8114: nop dword ptr [rax]
0x8118: mov rdx,qword ptr [rdx+0x8]
0x811c: add rcx,0x1
0x8120: test rdx,rdx
0x8123: jnz 0x8118
0x8125: cmp rax,rcx
0x8128: cmovc rax,rcx
0x812c: add rsi,0x10
0x8130: cmp rsi,rdi
0x8133: jc 0x8100
0x8135: ret 
0x8137: ret 
0x8140: mov rcx,qword ptr [rdi]
0x8143: mov r8,qword ptr [rdi+0x8]
0x8147: xor edx,edx
0x8149: xor esi,esi
0x814b: cmp rcx,r8
0x814e: jnc 0x8186
0x8150: cmp qword ptr [rcx],0x0
0x8154: jz 0x817d
0x8156: mov rax,qword ptr [rcx+0x8]
0x815a: add rsi,0x1
0x815e: add rdx,0x1
0x8162: test rax,rax
0x8165: jz 0x817d
0x8167: nop word ptr [rax+rax*0x1]
0x8170: mov rax,qword ptr [rax+0x8]
0x8174: add rdx,0x1
0x8178: test rax,rax
0x817b: jnz 0x8170
0x817d: add rcx,0x10
0x8181: cmp rcx,r8
0x8184: jc 0x8150
0x8186: xor eax,eax
0x8188: cmp qword ptr [rdi+0x18],rsi
0x818c: jz 0x8190
0x818e: ret 
0x8190: cmp qword ptr [rdi+0x20],rdx
0x8194: setz al
0x8197: ret 
0x81a0: push r13
0x81a2: push r12
0x81a4: mov r12,rsi
0x81a7: push rbp
0x81a8: push rbx
0x81a9: xor ebx,ebx
0x81ab: sub rsp,0x8
0x81af: mov rsi,qword ptr [rdi]
0x81b2: mov rcx,qword ptr [rdi+0x20]
0x81b6: mov rbp,qword ptr [rdi+0x10]
0x81ba: mov r13,qword ptr [rdi+0x18]
0x81be: mov rdi,qword ptr [rdi+0x8]
0x81c2: cmp rsi,rdi
0x81c5: jnc 0x8205
0x81c7: nop word ptr [rax+rax*0x1]
0x81d0: cmp qword ptr [rsi],0x0
0x81d4: jz 0x81fc
0x81d6: mov rax,qword ptr [rsi+0x8]
0x81da: mov edx,0x1
0x81df: test rax,rax
0x81e2: jz 0x81f5
0x81e4: nop dword ptr [rax]
0x81e8: mov rax,qword ptr [rax+0x8]
0x81ec: add rdx,0x1
0x81f0: test rax,rax
0x81f3: jnz 0x81e8
0x81f5: cmp rbx,rdx
0x81f8: cmovc rbx,rdx
0x81fc: add rsi,0x10
0x8200: cmp rsi,rdi
0x8203: jc 0x81d0
0x8205: lea rdx,[rip+0x19722]
0x820c: mov esi,0x1
0x8211: mov rdi,r12
0x8214: xor eax,eax
0x8216: call 0x2970
0x821b: lea rdx,[rip+0x19724]
0x8222: xor eax,eax
0x8224: mov rcx,rbp
0x8227: mov esi,0x1
0x822c: mov rdi,r12
0x822f: call 0x2970
0x8234: test r13,r13
0x8237: js 0x82a0
0x8239: pxor xmm0,xmm0
0x823d: test rbp,rbp
0x8240: cvtsi2sd xmm0,r13
0x8245: mulsd xmm0,qword ptr [rip+0x1978b]
0x824d: js 0x82c9
0x824f: pxor xmm1,xmm1
0x8253: cvtsi2sd xmm1,rbp
0x8258: divsd xmm0,xmm1
0x825c: lea rdx,[rip+0x19715]
0x8263: mov rcx,r13
0x8266: mov rdi,r12
0x8269: mov esi,0x1
0x826e: mov eax,0x1
0x8273: call 0x2970
0x8278: add rsp,0x8
0x827c: mov rcx,rbx
0x827f: mov rdi,r12
0x8282: pop rbx
0x8283: pop rbp
0x8284: pop r12
0x8286: pop r13
0x8288: lea rdx,[rip+0x196cf]
0x828f: mov esi,0x1
0x8294: xor eax,eax
0x8296: jmp 0x2970
0x82a0: mov rax,r13
0x82a3: mov rdx,r13
0x82a6: pxor xmm0,xmm0
0x82aa: shr rax,0x1
0x82ad: and edx,0x1
0x82b0: or rax,rdx
0x82b3: test rbp,rbp
0x82b6: cvtsi2sd xmm0,rax
0x82bb: addsd xmm0,xmm0
0x82bf: mulsd xmm0,qword ptr [rip+0x19711]
0x82c7: jns 0x824f
0x82c9: mov rax,rbp
0x82cc: pxor xmm1,xmm1
0x82d0: shr rax,0x1
0x82d3: and ebp,0x1
0x82d6: or rax,rbp
0x82d9: cvtsi2sd xmm1,rax
0x82de: addsd xmm1,xmm1
0x82e2: jmp 0x8258
0x8310: mov rsi,qword ptr [rbx]
0x8320: test al,al
0x8322: jnz 0x8340
0x8324: mov rbx,qword ptr [rbx+0x8]
0x8328: test rbx,rbx
0x832b: jnz 0x8310
0x8340: mov rsi,qword ptr [rbx]
0x8343: pop rbx
0x8344: pop rbp
0x8345: mov rax,rsi
0x8348: pop r12
0x834a: ret 
0x8350: cmp qword ptr [rdi+0x20],0x0
0x8355: jz 0x8383
0x8357: mov rdx,qword ptr [rdi]
0x835a: mov rcx,qword ptr [rdi+0x8]
0x835e: cmp rdx,rcx
0x8361: jnc 0x8388
0x8363: mov rax,qword ptr [rdx]
0x8366: test rax,rax
0x8369: jnz 0x8386
0x836b: nop dword ptr [rax+rax*0x1]
0x8370: add rdx,0x10
0x8374: cmp rdx,rcx
0x8377: jnc 0x8388
0x8379: mov rax,qword ptr [rdx]
0x837c: test rax,rax
0x837f: jz 0x8370
0x8381: ret 
0x8383: xor eax,eax
0x8385: ret 
0x8386: ret 
0x8388: sub rsp,0x8
0x838c: call 0x2400
0x8391: nop dword ptr [rax+rax*0x1]
0x8396: nop word ptr cs:[rax+rax*0x1]
0x83a0: push rbp
0x83a1: push rbx
0x83a2: mov rbp,rdi
0x83a5: mov rbx,rsi
0x83a8: sub rsp,0x8
0x83ac: call 0x7db0
0x83b1: mov rdx,rax
0x83b4: mov rcx,rax
0x83b7: mov rax,qword ptr [rdx]
0x83ba: mov rdx,qword ptr [rdx+0x8]
0x83be: cmp rax,rbx
0x83c1: jz 0x83d9
0x83c3: nop dword ptr [rax+rax*0x1]
0x83c8: test rdx,rdx
0x83cb: jz 0x83de
0x83cd: mov rax,qword ptr [rdx]
0x83d0: mov rdx,qword ptr [rdx+0x8]
0x83d4: cmp rax,rbx
0x83d7: jnz 0x83c8
0x83d9: test rdx,rdx
0x83dc: jnz 0x8408
0x83de: mov rdx,qword ptr [rbp+0x8]
0x83e2: jmp 0x83f0
0x83e8: mov rax,qword ptr [rcx]
0x83eb: test rax,rax
0x83ee: jnz 0x83fb
0x83f0: add rcx,0x10
0x83f4: cmp rdx,rcx
0x83f7: ja 0x83e8
0x83f9: xor eax,eax
0x83fb: add rsp,0x8
0x83ff: pop rbx
0x8400: pop rbp
0x8401: ret 
0x8408: mov rax,qword ptr [rdx]
0x840b: add rsp,0x8
0x840f: pop rbx
0x8410: pop rbp
0x8411: ret 
0x8420: mov r9,qword ptr [rdi]
0x8423: cmp qword ptr [rdi+0x8],r9
0x8427: jbe 0x8482
0x8429: xor r8d,r8d
0x842c: mov rcx,qword ptr [r9]
0x842f: test rcx,rcx
0x8432: jz 0x846d
0x8434: cmp rdx,r8
0x8437: jbe 0x8477
0x8439: mov qword ptr [rsi+r8*0x8],rcx
0x843d: mov rcx,qword ptr [r9+0x8]
0x8441: lea rax,[r8+0x1]
0x8445: test rcx,rcx
0x8448: jz 0x846a
0x844a: nop word ptr [rax+rax*0x1]
0x8450: cmp rdx,rax
0x8453: jz 0x8480
0x8455: mov r8,qword ptr [rcx]
0x8458: add rax,0x1
0x845c: mov qword ptr [rsi+rax*0x8-0x8],r8
0x8461: mov rcx,qword ptr [rcx+0x8]
0x8465: test rcx,rcx
0x8468: jnz 0x8450
0x846a: mov r8,rax
0x846d: add r9,0x10
0x8471: cmp qword ptr [rdi+0x8],r9
0x8475: ja 0x842c
0x8477: mov rax,r8
0x847a: ret 
0x8480: ret 
0x8482: xor eax,eax
0x8484: ret 
0x8490: push r15
0x8492: push r14
0x8494: push r13
0x8496: push r12
0x8498: push rbp
0x8499: push rbx
0x849a: sub rsp,0x8
0x849e: mov r14,qword ptr [rdi]
0x84a1: cmp qword ptr [rdi+0x8],r14
0x84a5: jbe 0x84f6
0x84a7: mov r13,rdx
0x84aa: mov r12,rsi
0x84ad: mov r15,rdi
0x84b0: xor ebp,ebp
0x84b2: mov rdi,qword ptr [r14]
0x84b5: test rdi,rdi
0x84b8: jz 0x84da
0x84ba: mov rbx,r14
0x84bd: jmp 0x84c3
0x84c0: mov rdi,qword ptr [rbx]
0x84c3: mov rsi,r13
0x84c6: call r12
0x84c9: test al,al
0x84cb: jz 0x84e4
0x84cd: mov rbx,qword ptr [rbx+0x8]
0x84d1: add rbp,0x1
0x84d5: test rbx,rbx
0x84d8: jnz 0x84c0
0x84da: add r14,0x10
0x84de: cmp qword ptr [r15+0x8],r14
0x84e2: ja 0x84b2
0x84e4: add rsp,0x8
0x84e8: mov rax,rbp
0x84eb: pop rbx
0x84ec: pop rbp
0x84ed: pop r12
0x84ef: pop r13
0x84f1: pop r14
0x84f3: pop r15
0x84f5: ret 
0x84f6: xor ebp,ebp
0x84f8: jmp 0x84e4
0x8540: mov rax,0x3f80000000000000
0x854a: mov byte ptr [rdi+0x10],0x0
0x854e: mov qword ptr [rdi],rax
0x8551: mov rax,0x3fb4fdf43f4ccccd
0x855b: mov qword ptr [rdi+0x8],rax
0x855f: ret 
0x85bc: mov qword ptr [rax+0x28],r15
0x85c0: call 0x7f00
0x85c5: test al,al
0x85c7: jz 0x8650
0x85cd: cmp byte ptr [r15+0x10],0x0
0x85d2: jz 0x86d0
0x86d0: test rbp,rbp
0x86d3: movss xmm1,dword ptr [r15+0x8]
0x86d9: jns 0x8691
0x8720: push r12
0x8722: push rbp
0x8723: mov rbp,rdi
0x8726: push rbx
0x8727: mov r12,qword ptr [rdi]
0x872a: cmp r12,qword ptr [rdi+0x8]
0x872e: jnc 0x879b
0x8730: cmp qword ptr [r12],0x0
0x8735: jz 0x8791
0x8737: mov rbx,qword ptr [r12+0x8]
0x873c: mov rax,qword ptr [rbp+0x40]
0x8740: test rbx,rbx
0x8743: jz 0x8775
0x8745: nop dword ptr [rax]
0x8748: test rax,rax
0x874b: jz 0x8756
0x874d: mov rdi,qword ptr [rbx]
0x8750: call rax
0x8752: mov rax,qword ptr [rbp+0x40]
0x8756: mov rdx,qword ptr [rbx+0x8]
0x875a: mov rcx,qword ptr [rbp+0x48]
0x875e: mov qword ptr [rbx],0x0
0x8765: test rdx,rdx
0x8768: mov qword ptr [rbx+0x8],rcx
0x876c: mov qword ptr [rbp+0x48],rbx
0x8770: mov rbx,rdx
0x8773: jnz 0x8748
0x8775: test rax,rax
0x8778: jz 0x8780
0x877a: mov rdi,qword ptr [r12]
0x877e: call rax
0x8780: mov qword ptr [r12],0x0
0x8788: mov qword ptr [r12+0x8],0x0
0x8791: add r12,0x10
0x8795: cmp qword ptr [rbp+0x8],r12
0x8799: ja 0x8730
0x879b: mov qword ptr [rbp+0x18],0x0
0x87a3: mov qword ptr [rbp+0x20],0x0
0x87ab: pop rbx
0x87ac: pop rbp
0x87ad: pop r12
0x87af: ret 
0x87f0: mov rdi,qword ptr [rbx]
0x87f8: mov rbx,qword ptr [rbx+0x8]
0x87fc: test rbx,rbx
0x87ff: jnz 0x87f0
0x8801: mov rax,qword ptr [r12+0x8]
0x8aba: call 0x2560
0x8ace: nop 
0x8cb2: nop word ptr [rax+rax*0x1]
0x8d4f: call 0x2560
0x8d54: nop 
0x8d56: nop word ptr cs:[rax+rax*0x1]
0x8db4: call 0x2560
0x8db9: nop dword ptr [rax]
0x8fbe: call 0x2560
0x8fc3: nop word ptr cs:[rax+rax*0x1]
0x8fcd: nop dword ptr [rax]
0x961d: pop rax
0x961e: pop rdx
0x961f: fld tbyte ptr [rsp+0x20]
0x9623: jmp 0x9239
0x963f: pop r8
0x9641: pop r9
0x9643: jmp 0x93ac
0x984d: pop rbp
0x984e: pop r14
0x9850: fld dword ptr [rsp+0x18]
0x9854: jmp 0x97e3
0x9a5b: call 0x2560
0x9c91: call 0x2560
0x9c96: nop word ptr cs:[rax+rax*0x1]
0x9ca0: mov rax,qword ptr [rdi]
0x9ca3: xor edx,edx
0x9ca5: div rsi
0x9ca8: mov rax,rdx
0x9cab: ret 
0x9cb0: mov rax,qword ptr [rsi]
0x9cb3: cmp qword ptr [rdi],rax
0x9cb6: setz al
0x9cb9: ret 
0x9d30: push rbx
0x9d31: mov rbx,rdi
0x9d34: mov rdi,qword ptr [rdi]
0x9d37: call 0x87b0
0x9d3c: mov rdi,qword ptr [rbx+0x10]
0x9d40: call 0x2a10
0x9d45: mov rdi,rbx
0x9d48: pop rbx
0x9d49: jmp 0x2a10
0x9d62: cmp qword ptr [rbx],rsi
0x9d65: jz 0x9d90
0x9d90: mov rax,qword ptr [rbx+0x8]
0x9d94: add rsp,0x18
0x9d98: pop rbx
0x9d99: pop rbp
0x9d9a: ret 
0x9e90: push rbx
0x9e91: mov ebx,edi
0x9e93: call 0x2760
0x9e98: test eax,eax
0x9e9a: js 0x9ea0
0x9e9c: pop rbx
0x9e9d: ret 
0x9ea0: mov edi,ebx
0x9ea2: call 0x2480
0x9ea7: test eax,eax
0x9ea9: setz al
0x9eac: movzx eax,al
0x9eaf: pop rbx
0x9eb0: ret 
0x9ec0: push rbp
0x9ec1: push rbx
0x9ec2: mov rbx,rsi
0x9ec5: lea rax,[rbx+0x18]
0x9ec9: mov rbp,rdi
0x9ecc: sub rsp,0x8
0x9ed0: mov rsi,qword ptr [rsi]
0x9ed3: mov rdx,qword ptr [rbx+0x8]
0x9ed7: cmp rsi,rax
0x9eda: jz 0x9f00
0x9edc: mov qword ptr [rdi],rsi
0x9edf: movzx eax,byte ptr [rbx+0x10]
0x9ee3: mov qword ptr [rbp+0x8],rdx
0x9ee7: test al,al
0x9ee9: mov byte ptr [rbp+0x10],al
0x9eec: jz 0x9ef4
0x9eee: mov eax,dword ptr [rbx+0x14]
0x9ef1: mov dword ptr [rbp+0x14],eax
0x9ef4: add rsp,0x8
0x9ef8: pop rbx
0x9ef9: pop rbp
0x9efa: ret 
0x9f00: lea rcx,[rdi+0x18]
0x9f04: mov rdi,rcx
0x9f07: call 0x2710
0x9f0c: mov rdx,qword ptr [rbx+0x8]
0x9f10: mov qword ptr [rbp],rax
0x9f14: jmp 0x9edf
0x9f20: mov eax,edi
0x9f22: lea rdx,[rip+0x17b17]
0x9f29: mov ecx,edi
0x9f2b: shr al,0x5
0x9f2e: and ecx,0x1f
0x9f31: and eax,0x7
0x9f34: mov eax,dword ptr [rdx+rax*0x4]
0x9f37: shr eax,cl
0x9f39: and eax,0x1
0x9f3c: ret 
0x9f40: push r15
0x9f42: push r14
0x9f44: push r13
0x9f46: push r12
0x9f48: push rbp
0x9f49: push rbx
0x9f4a: sub rsp,0x98
0x9f51: mov rax,qword ptr fs:[0x28]
0x9f5a: mov qword ptr [0x88+rsp],rax
0x9f62: xor eax,eax
0x9f64: cmp rdi,rsi
0x9f67: jz 0xa2f0
0x9f6d: mov rbp,rdi
0x9f70: mov r12,rsi
0x9f73: call 0x2520
0x9f78: cmp rax,0x1
0x9f7c: ja 0xa018
0x9f82: call 0x29f0
0x9f87: mov r14,qword ptr [rax]
0x9f8a: jmp 0x9fa0
0x9f90: add rbp,0x1
0x9f94: add r12,0x1
0x9f98: cmp bl,dl
0x9f9a: jnz 0xa3a0
0x9fa0: movzx r13d,byte ptr [rbp]
0x9fa5: test byte ptr [r14+r13*0x2+0x1],0x1
0x9fab: mov rbx,r13
0x9fae: jz 0x9fbd
0x9fb0: call 0x29e0
0x9fb5: mov rax,qword ptr [rax]
0x9fb8: movzx ebx,byte ptr [rax+r13*0x4]
0x9fbd: movzx r13d,byte ptr [r12]
0x9fc2: test byte ptr [r14+r13*0x2+0x1],0x1
0x9fc8: mov rdx,r13
0x9fcb: jz 0x9fda
0x9fcd: call 0x29e0
0x9fd2: mov rax,qword ptr [rax]
0x9fd5: movzx edx,byte ptr [rax+r13*0x4]
0x9fda: test bl,bl
0x9fdc: jnz 0x9f90
0x9fde: xor eax,eax
0x9fe0: sub eax,edx
0x9fe2: nop word ptr [rax+rax*0x1]
0x9fe8: mov rsi,qword ptr [0x88+rsp]
0x9ff0: xor rsi,qword ptr fs:[0x28]
0x9ff9: jnz 0xa61f
0x9fff: add rsp,0x98
0xa006: pop rbx
0xa007: pop rbp
0xa008: pop r12
0xa00a: pop r13
0xa00c: pop r14
0xa00e: pop r15
0xa010: ret 
0xa018: mov qword ptr [rsp+0x50],r12
0xa01d: mov r12,rsp
0xa020: mov qword ptr [rsp+0x10],rbp
0xa025: mov byte ptr [rsp],0x0
0xa029: mov qword ptr [rsp+0x4],0x0
0xa032: lea r13,[rip+0x17a07]
0xa039: mov byte ptr [rsp+0xc],0x0
0xa03e: mov byte ptr [rsp+0x40],0x0
0xa043: lea r14,[r12+0x4]
0xa048: mov qword ptr [rsp+0x44],0x0
0xa051: mov byte ptr [rsp+0x4c],0x0
0xa056: lea rbp,[rsp+0x40]
0xa05b: jmp 0xa0f9
0xa060: cmp byte ptr [rsp+0x40],0x0
0xa065: jnz 0xa256
0xa06b: mov rcx,qword ptr [rsp+0x50]
0xa070: movzx edx,byte ptr [rcx]
0xa073: mov eax,edx
0xa075: shr al,0x5
0xa078: and eax,0x7
0xa07b: mov eax,dword ptr [r13+rax*0x4]
0xa080: bt eax,edx
0xa083: jnc 0xa240
0xa089: mov qword ptr [rsp+0x58],0x1
0xa092: movsx eax,byte ptr [rcx]
0xa095: mov byte ptr [rsp+0x60],0x1
0xa09a: mov byte ptr [rsp+0x4c],0x1
0xa09f: mov dword ptr [rsp+0x64],eax
0xa0a3: mov r15d,dword ptr [rsp+0x64]
0xa0a8: test r15d,r15d
0xa0ab: jz 0xa3b0
0xa0b1: cmp byte ptr [rsp+0x20],0x0
0xa0b6: jz 0xa3c0
0xa0bc: mov edi,dword ptr [rsp+0x24]
0xa0c0: call 0x28e0
0xa0c5: mov edi,r15d
0xa0c8: mov ebx,eax
0xa0ca: call 0x28e0
0xa0cf: sub ebx,eax
0xa0d1: mov eax,ebx
0xa0d3: test eax,eax
0xa0d5: jnz 0x9fe8
0xa0db: mov rax,qword ptr [rsp+0x18]
0xa0e0: add qword ptr [rsp+0x10],rax
0xa0e5: mov rax,qword ptr [rsp+0x58]
0xa0ea: add qword ptr [rsp+0x50],rax
0xa0ef: mov byte ptr [rsp+0xc],0x0
0xa0f4: mov byte ptr [rsp+0x4c],0x0
0xa0f9: cmp byte ptr [rsp],0x0
0xa0fd: jnz 0xa1a4
0xa103: mov rcx,qword ptr [rsp+0x10]
0xa108: movzx edx,byte ptr [rcx]
0xa10b: mov eax,edx
0xa10d: shr al,0x5
0xa110: and eax,0x7
0xa113: mov eax,dword ptr [r13+rax*0x4]
0xa118: bt eax,edx
0xa11b: jnc 0xa190
0xa11d: mov qword ptr [rsp+0x18],0x1
0xa126: movsx eax,byte ptr [rcx]
0xa129: mov byte ptr [rsp+0x20],0x1
0xa12e: mov byte ptr [rsp+0xc],0x1
0xa133: mov dword ptr [rsp+0x24],eax
0xa137: mov r9d,dword ptr [rsp+0x24]
0xa13c: test r9d,r9d
0xa13f: jz 0xa3e8
0xa145: cmp byte ptr [rsp+0x4c],0x0
0xa14a: jz 0xa060
0xa150: cmp byte ptr [rsp+0x60],0x0
0xa155: jnz 0xa0a3
0xa15b: cmp byte ptr [rsp+0x20],0x0
0xa160: jnz 0xa3d8
0xa166: mov rdx,qword ptr [rsp+0x18]
0xa16b: mov rax,qword ptr [rsp+0x58]
0xa170: mov rdi,qword ptr [rsp+0x10]
0xa175: mov rsi,qword ptr [rsp+0x50]
0xa17a: cmp rdx,rax
0xa17d: jnz 0xa4a8
0xa183: call 0x2680
0xa188: jmp 0xa0d3
0xa190: mov rdi,r14
0xa193: call 0x2990
0xa198: test eax,eax
0xa19a: jz 0xa600
0xa1a0: mov byte ptr [rsp],0x1
0xa1a4: call 0x2520
0xa1a9: mov rbx,qword ptr [rsp+0x10]
0xa1ae: mov rsi,rax
0xa1b1: mov rdi,rbx
0xa1b4: call 0xc380
0xa1b9: lea rcx,[r12+0x4]
0xa1be: lea rdi,[r12+0x24]
0xa1c3: mov rdx,rax
0xa1c6: mov rsi,rbx
0xa1c9: call 0x101e0
0xa1ce: cmp rax,-0x1
0xa1d2: mov qword ptr [rsp+0x18],rax
0xa1d7: jz 0xa300
0xa1dd: cmp rax,-0x2
0xa1e1: jz 0xa340
0xa1e7: test rax,rax
0xa1ea: jnz 0xa211
0xa1ec: mov rax,qword ptr [rsp+0x10]
0xa1f1: mov qword ptr [rsp+0x18],0x1
0xa1fa: cmp byte ptr [rax],0x0
0xa1fd: jnz 0xa624
0xa203: mov r10d,dword ptr [rsp+0x24]
0xa208: test r10d,r10d
0xa20b: jnz 0xa5fb
0xa211: lea rdi,[r12+0x4]
0xa216: mov byte ptr [rsp+0x20],0x1
0xa21b: call 0x2990
0xa220: test eax,eax
0xa222: jz 0xa380
0xa228: mov byte ptr [rsp],0x0
0xa22c: mov byte ptr [rsp+0xc],0x1
0xa231: jmp 0xa137
0xa240: lea rdi,[rbp+0x4]
0xa244: call 0x2990
0xa249: test eax,eax
0xa24b: jz 0xa600
0xa251: mov byte ptr [rsp+0x40],0x1
0xa256: call 0x2520
0xa25b: mov rbx,qword ptr [rsp+0x50]
0xa260: mov rsi,rax
0xa263: mov rdi,rbx
0xa266: call 0xc380
0xa26b: lea rcx,[rbp+0x4]
0xa26f: lea rdi,[rbp+0x24]
0xa273: mov rdx,rax
0xa276: mov rsi,rbx
0xa279: call 0x101e0
0xa27e: cmp rax,-0x1
0xa282: mov qword ptr [rsp+0x58],rax
0xa287: jz 0xa320
0xa28d: cmp rax,-0x2
0xa291: jz 0xa360
0xa297: test rax,rax
0xa29a: jnz 0xa2c1
0xa29c: mov rax,qword ptr [rsp+0x50]
0xa2a1: mov qword ptr [rsp+0x58],0x1
0xa2aa: cmp byte ptr [rax],0x0
0xa2ad: jnz 0xa624
0xa2b3: mov r8d,dword ptr [rsp+0x64]
0xa2b8: test r8d,r8d
0xa2bb: jnz 0xa5fb
0xa2c1: lea rdi,[rbp+0x4]
0xa2c5: mov byte ptr [rsp+0x60],0x1
0xa2ca: call 0x2990
0xa2cf: test eax,eax
0xa2d1: jz 0xa390
0xa2d7: mov byte ptr [rsp+0x40],0x0
0xa2dc: mov byte ptr [rsp+0x4c],0x1
0xa2e1: jmp 0xa0a3
0xa2f0: xor eax,eax
0xa2f2: jmp 0x9fe8
0xa300: mov qword ptr [rsp+0x18],0x1
0xa309: mov byte ptr [rsp+0x20],0x0
0xa30e: mov byte ptr [rsp+0xc],0x1
0xa313: jmp 0xa145
0xa320: mov qword ptr [rsp+0x58],0x1
0xa329: mov byte ptr [rsp+0x60],0x0
0xa32e: mov byte ptr [rsp+0x4c],0x1
0xa333: jmp 0xa15b
0xa340: mov rdi,qword ptr [rsp+0x10]
0xa345: call 0x2530
0xa34a: mov byte ptr [rsp+0x20],0x0
0xa34f: mov qword ptr [rsp+0x18],rax
0xa354: mov byte ptr [rsp+0xc],0x1
0xa359: jmp 0xa145
0xa360: mov rdi,qword ptr [rsp+0x50]
0xa365: call 0x2530
0xa36a: mov byte ptr [rsp+0x60],0x0
0xa36f: mov qword ptr [rsp+0x58],rax
0xa374: mov byte ptr [rsp+0x4c],0x1
0xa379: jmp 0xa15b
0xa380: mov byte ptr [rsp+0xc],0x1
0xa385: jmp 0xa137
0xa390: mov byte ptr [rsp+0x4c],0x1
0xa395: jmp 0xa0a3
0xa3a0: movzx eax,bl
0xa3a3: sub eax,edx
0xa3a5: jmp 0x9fe8
0xa3b0: cmp byte ptr [rsp+0xc],0x0
0xa3b5: jz 0xa3ef
0xa3b7: cmp byte ptr [rsp+0x20],0x0
0xa3bc: jnz 0xa439
0xa3be: nop 
0xa3c0: mov eax,0x1
0xa3c5: jmp 0x9fe8
0xa3ca: cmp byte ptr [rsp+0x60],0x0
0xa3cf: jnz 0xa493
0xa3d5: nop dword ptr [rax]
0xa3d8: mov eax,0xffffffff
0xa3dd: jmp 0x9fe8
0xa3e8: cmp byte ptr [rsp+0xc],0x0
0xa3ed: jnz 0xa445
0xa3ef: cmp byte ptr [rsp],0x0
0xa3f3: mov rbx,rsp
0xa3f6: jnz 0xa4d8
0xa3fc: mov rcx,qword ptr [rsp+0x10]
0xa401: lea rsi,[rip+0x17638]
0xa408: movzx edx,byte ptr [rcx]
0xa40b: mov eax,edx
0xa40d: shr al,0x5
0xa410: and eax,0x7
0xa413: mov eax,dword ptr [rsi+rax*0x4]
0xa416: bt eax,edx
0xa419: jnc 0xa4c0
0xa41f: mov qword ptr [rsp+0x18],0x1
0xa428: movsx eax,byte ptr [rcx]
0xa42b: mov byte ptr [rsp+0x20],0x1
0xa430: mov byte ptr [rsp+0xc],0x1
0xa435: mov dword ptr [rsp+0x24],eax
0xa439: mov esi,dword ptr [rsp+0x24]
0xa43d: test esi,esi
0xa43f: jnz 0xa3c0
0xa445: cmp byte ptr [rsp+0x4c],0x0
0xa44a: jnz 0xa3ca
0xa450: cmp byte ptr [rsp+0x40],0x0
0xa455: lea rbx,[rsp+0x40]
0xa45a: jnz 0xa598
0xa460: mov rcx,qword ptr [rsp+0x50]
0xa465: lea rsi,[rip+0x175d4]
0xa46c: movzx edx,byte ptr [rcx]
0xa46f: mov eax,edx
0xa471: shr al,0x5
0xa474: and eax,0x7
0xa477: mov eax,dword ptr [rsi+rax*0x4]
0xa47a: bt eax,edx
0xa47d: jnc 0xa580
0xa483: mov qword ptr [rsp+0x58],0x1
0xa48c: movsx eax,byte ptr [rcx]
0xa48f: mov dword ptr [rsp+0x64],eax
0xa493: mov edx,dword ptr [rsp+0x64]
0xa497: xor eax,eax
0xa499: test edx,edx
0xa49b: setnz al
0xa49e: neg eax
0xa4a0: jmp 0x9fe8
0xa4a8: jnc 0xa561
0xa4ae: call 0x2680
0xa4b3: test eax,eax
0xa4b5: jg 0xa3c0
0xa4bb: jmp 0xa3d8
0xa4c0: mov rbx,rsp
0xa4c3: lea rdi,[rbx+0x4]
0xa4c7: call 0x2990
0xa4cc: test eax,eax
0xa4ce: jz 0xa600
0xa4d4: mov byte ptr [rsp],0x1
0xa4d8: call 0x2520
0xa4dd: mov rbp,qword ptr [rsp+0x10]
0xa4e2: mov rsi,rax
0xa4e5: mov rdi,rbp
0xa4e8: call 0xc380
0xa4ed: lea rcx,[rbx+0x4]
0xa4f1: lea rdi,[rbx+0x24]
0xa4f5: mov rdx,rax
0xa4f8: mov rsi,rbp
0xa4fb: call 0x101e0
0xa500: cmp rax,-0x1
0xa504: mov qword ptr [rsp+0x18],rax
0xa509: jz 0xa3c0
0xa50f: cmp rax,-0x2
0xa513: jz 0xa3c0
0xa519: test rax,rax
0xa51c: jnz 0xa541
0xa51e: mov rax,qword ptr [rsp+0x10]
0xa523: mov qword ptr [rsp+0x18],0x1
0xa52c: cmp byte ptr [rax],0x0
0xa52f: jnz 0xa624
0xa535: mov edi,dword ptr [rsp+0x24]
0xa539: test edi,edi
0xa53b: jnz 0xa5fb
0xa541: lea rdi,[rbx+0x4]
0xa545: mov byte ptr [rsp+0x20],0x1
0xa54a: call 0x2990
0xa54f: test eax,eax
0xa551: jz 0xa576
0xa553: mov byte ptr [rsp],0x0
0xa557: mov byte ptr [rsp+0xc],0x1
0xa55c: jmp 0xa439
0xa561: mov rdx,rax
0xa564: call 0x2680
0xa569: test eax,eax
0xa56b: jns 0xa3c0
0xa571: jmp 0xa3d8
0xa576: mov byte ptr [rsp+0xc],0x1
0xa57b: jmp 0xa439
0xa580: lea rdi,[rsp+0x44]
0xa585: lea rbx,[rsp+0x40]
0xa58a: call 0x2990
0xa58f: test eax,eax
0xa591: jz 0xa600
0xa593: mov byte ptr [rsp+0x40],0x1
0xa598: call 0x2520
0xa59d: mov rbp,qword ptr [rsp+0x50]
0xa5a2: mov rsi,rax
0xa5a5: mov rdi,rbp
0xa5a8: call 0xc380
0xa5ad: lea rcx,[rbx+0x4]
0xa5b1: lea rdi,[rbx+0x24]
0xa5b5: mov rdx,rax
0xa5b8: mov rsi,rbp
0xa5bb: call 0x101e0
0xa5c0: lea rdx,[rax+0x2]
0xa5c4: mov qword ptr [rsp+0x58],rax
0xa5c9: cmp rdx,0x1
0xa5cd: jbe 0xa3d8
0xa5d3: test rax,rax
0xa5d6: jnz 0xa493
0xa5dc: mov rax,qword ptr [rsp+0x50]
0xa5e1: mov qword ptr [rsp+0x58],0x1
0xa5ea: cmp byte ptr [rax],0x0
0xa5ed: jnz 0xa624
0xa5ef: mov ecx,dword ptr [rsp+0x64]
0xa5f3: test ecx,ecx
0xa5f5: jz 0xa493
0xa5fb: call 0x2a20
0xa600: lea rcx,[rip+0x17459]
0xa607: lea rsi,[rip+0x16e9a]
0xa60e: lea rdi,[rip+0x16eb3]
0xa615: mov edx,0x96
0xa61a: call 0x2600
0xa61f: call 0x2560
0xa624: lea rcx,[rip+0x17435]
0xa62b: lea rsi,[rip+0x16e76]
0xa632: lea rdi,[rip+0x16ea6]
0xa639: mov edx,0xb2
0xa63e: call 0x2600
0xa643: nop word ptr cs:[rax+rax*0x1]
0xa64d: nop dword ptr [rax]
0xa6ef: nop 
0xb9d3: call 0x2560
0xba14: nop 
0xba16: nop word ptr cs:[rax+rax*0x1]
0xbbcb: nop dword ptr [rax+rax*0x1]
0xbbd0: push r12
0xbbd2: push rbp
0xbbd3: push rbx
0xbbd4: mov rbx,rdi
0xbbd7: call 0x2410
0xbbdc: mov r12d,dword ptr [rax]
0xbbdf: mov rbp,rax
0xbbe2: lea rax,[rip+0x21c6d7]
0xbbe9: test rbx,rbx
0xbbec: mov esi,0x38
0xbbf1: cmovz rbx,rax
0xbbf5: mov rdi,rbx
0xbbf8: call 0xcbe0
0xbbfd: mov dword ptr [rbp],r12d
0xbc01: pop rbx
0xbc02: pop rbp
0xbc03: pop r12
0xbc05: ret 
0xbc10: lea rax,[rip+0x21c6a9]
0xbc17: test rdi,rdi
0xbc1a: cmovz rdi,rax
0xbc1e: mov eax,dword ptr [rdi]
0xbc20: ret 
0xbc30: lea rax,[rip+0x21c689]
0xbc37: test rdi,rdi
0xbc3a: cmovz rdi,rax
0xbc3e: mov dword ptr [rdi],esi
0xbc40: ret 
0xbc50: lea rax,[rip+0x21c669]
0xbc57: test rdi,rdi
0xbc5a: mov ecx,esi
0xbc5c: cmovz rdi,rax
0xbc60: mov eax,esi
0xbc62: and ecx,0x1f
0xbc65: shr al,0x5
0xbc68: movzx eax,al
0xbc6b: lea rdi,[rdi+rax*0x4+0x8]
0xbc70: mov esi,dword ptr [rdi]
0xbc72: mov eax,esi
0xbc74: shr eax,cl
0xbc76: xor edx,eax
0xbc78: and eax,0x1
0xbc7b: and edx,0x1
0xbc7e: shl edx,cl
0xbc80: xor edx,esi
0xbc82: mov dword ptr [rdi],edx
0xbc84: ret 
0xbc90: lea rax,[rip+0x21c629]
0xbc97: test rdi,rdi
0xbc9a: cmovz rdi,rax
0xbc9e: mov eax,dword ptr [rdi+0x4]
0xbca1: mov dword ptr [rdi+0x4],esi
0xbca4: ret 
0xbcb0: lea rax,[rip+0x21c609]
0xbcb7: test rdi,rdi
0xbcba: cmovz rdi,rax
0xbcbe: test rsi,rsi
0xbcc1: mov dword ptr [rdi],0xa
0xbcc7: jz 0xbcd7
0xbcc9: test rdx,rdx
0xbccc: jz 0xbcd7
0xbcce: mov qword ptr [rdi+0x28],rsi
0xbcd2: mov qword ptr [rdi+0x30],rdx
0xbcd6: ret 
0xbcd7: sub rsp,0x8
0xbcdb: call 0x2400
0xbce0: push r15
0xbce2: push r14
0xbce4: lea rax,[rip+0x21c5d5]
0xbceb: push r13
0xbced: push r12
0xbcef: mov r13,rdi
0xbcf2: push rbp
0xbcf3: push rbx
0xbcf4: mov rbx,r8
0xbcf7: mov r14,rsi
0xbcfa: mov r15,rdx
0xbcfd: sub rsp,0x18
0xbd01: test r8,r8
0xbd04: cmovz rbx,rax
0xbd08: mov qword ptr [rsp+0x8],rcx
0xbd0d: call 0x2410
0xbd12: mov r12d,dword ptr [rax]
0xbd15: mov rbp,rax
0xbd18: lea rax,[rbx+0x8]
0xbd1c: sub rsp,0x8
0xbd20: mov r9d,dword ptr [rbx+0x4]
0xbd24: push qword ptr [rbx+0x30]
0xbd27: mov r8d,dword ptr [rbx]
0xbd2a: push qword ptr [rbx+0x28]
0xbd2d: mov rdx,r15
0xbd30: push rax
0xbd31: mov rcx,qword ptr [rsp+0x28]
0xbd36: mov rsi,r14
0xbd39: mov rdi,r13
0xbd3c: call 0xa7e0
0xbd41: mov dword ptr [rbp],r12d
0xbd45: add rsp,0x38
0xbd49: pop rbx
0xbd4a: pop rbp
0xbd4b: pop r12
0xbd4d: pop r13
0xbd4f: pop r14
0xbd51: pop r15
0xbd53: ret 
0xbd60: push r15
0xbd62: push r14
0xbd64: lea rax,[rip+0x21c555]
0xbd6b: push r13
0xbd6d: push r12
0xbd6f: mov r12,rdx
0xbd72: push rbp
0xbd73: push rbx
0xbd74: mov rbx,rcx
0xbd77: mov r14,rdi
0xbd7a: mov r15,rsi
0xbd7d: sub rsp,0x38
0xbd81: test rcx,rcx
0xbd84: cmovz rbx,rax
0xbd88: xor ebp,ebp
0xbd8a: call 0x2410
0xbd8f: test r12,r12
0xbd92: mov r13,rax
0xbd95: mov eax,dword ptr [rax]
0xbd97: setz bpl
0xbd9b: or ebp,dword ptr [rbx+0x4]
0xbd9e: lea r10,[rbx+0x8]
0xbda2: sub rsp,0x8
0xbda6: mov r8d,dword ptr [rbx]
0xbda9: mov rcx,r15
0xbdac: mov dword ptr [rsp+0x14],eax
0xbdb0: push qword ptr [rbx+0x30]
0xbdb3: mov rdx,r14
0xbdb6: push qword ptr [rbx+0x28]
0xbdb9: push r10
0xbdbb: xor esi,esi
0xbdbd: mov r9d,ebp
0xbdc0: xor edi,edi
0xbdc2: mov qword ptr [rsp+0x40],r10
0xbdc7: call 0xa7e0
0xbdcc: lea rsi,[rax+0x1]
0xbdd0: mov qword ptr [rsp+0x48],rax
0xbdd5: add rsp,0x20
0xbdd9: mov rdi,rsi
0xbddc: mov qword ptr [rsp+0x18],rsi
0xbde1: call 0xc9e0
0xbde6: mov qword ptr [rsp+0x10],rax
0xbdeb: sub rsp,0x8
0xbdef: push qword ptr [rbx+0x30]
0xbdf2: push qword ptr [rbx+0x28]
0xbdf5: mov r10,qword ptr [rsp+0x38]
0xbdfa: mov r9d,ebp
0xbdfd: mov r8d,dword ptr [rbx]
0xbe00: mov rcx,r15
0xbe03: mov rdx,r14
0xbe06: mov rdi,rax
0xbe09: push r10
0xbe0b: mov rsi,qword ptr [rsp+0x38]
0xbe10: call 0xa7e0
0xbe15: mov eax,dword ptr [rsp+0x2c]
0xbe19: add rsp,0x20
0xbe1d: test r12,r12
0xbe20: mov dword ptr [r13],eax
0xbe24: jz 0xbe2f
0xbe26: mov r11,qword ptr [rsp+0x28]
0xbe2b: mov qword ptr [r12],r11
0xbe2f: mov rax,qword ptr [rsp+0x10]
0xbe34: add rsp,0x38
0xbe38: pop rbx
0xbe39: pop rbp
0xbe3a: pop r12
0xbe3c: pop r13
0xbe3e: pop r14
0xbe40: pop r15
0xbe42: ret 
0xbe50: mov rcx,rdx
0xbe53: xor edx,edx
0xbe55: jmp 0xbd60
0xbe60: mov eax,dword ptr [rip+0x21c212]
0xbe66: push r12
0xbe68: mov r12,qword ptr [rip+0x21c211]
0xbe6f: push rbp
0xbe70: push rbx
0xbe71: cmp eax,0x1
0xbe74: jle 0xbea1
0xbe76: sub eax,0x2
0xbe79: lea rbx,[r12+0x18]
0xbe7e: shl rax,0x4
0xbe82: lea rbp,[r12+rax*0x1+0x28]
0xbe87: nop word ptr [rax+rax*0x1]
0xbe90: mov rdi,qword ptr [rbx]
0xbe93: add rbx,0x10
0xbe97: call 0x2a10
0xbe9c: cmp rbx,rbp
0xbe9f: jnz 0xbe90
0xbea1: mov rdi,qword ptr [r12+0x8]
0xbea6: lea rbx,[rip+0x21c313]
0xbead: cmp rdi,rbx
0xbeb0: jz 0xbec9
0xbeb2: call 0x2a10
0xbeb7: mov qword ptr [rip+0x21c1ce],0x100
0xbec2: mov qword ptr [rip+0x21c1cf],rbx
0xbec9: lea rbx,[rip+0x21c1c0]
0xbed0: cmp r12,rbx
0xbed3: jz 0xbee4
0xbed5: mov rdi,r12
0xbed8: call 0x2a10
0xbedd: mov qword ptr [rip+0x21c19c],rbx
0xbee4: pop rbx
0xbee5: mov dword ptr [rip+0x21c189],0x1
0xbeef: pop rbp
0xbef0: pop r12
0xbef2: ret 
0xbf00: lea rcx,[rip+0x21c3b9]
0xbf07: mov rdx,-0x1
0xbf0e: jmp 0xba20
0xbf20: lea rcx,[rip+0x21c399]
0xbf27: jmp 0xba20
0xbf30: lea rcx,[rip+0x21c389]
0xbf37: mov rsi,rdi
0xbf3a: mov rdx,-0x1
0xbf41: xor edi,edi
0xbf43: jmp 0xba20
0xbf50: lea rcx,[rip+0x21c369]
0xbf57: mov rdx,rsi
0xbf5a: mov rsi,rdi
0xbf5d: xor edi,edi
0xbf5f: jmp 0xba20
0xbff9: call 0x2560
0xbffe: nop 
0xc000: sub rsp,0x48
0xc004: mov rax,rdx
0xc007: mov rdx,rcx
0xc00a: mov rcx,qword ptr fs:[0x28]
0xc013: mov qword ptr [rsp+0x38],rcx
0xc018: xor ecx,ecx
0xc01a: cmp esi,0xa
0xc01d: jz 0xc080
0xc01f: mov dword ptr [rsp],esi
0xc022: mov rcx,rsp
0xc025: mov rsi,rax
0xc028: mov qword ptr [rsp+0x4],0x0
0xc031: mov qword ptr [rsp+0xc],0x0
0xc03a: mov qword ptr [rsp+0x14],0x0
0xc043: mov qword ptr [rsp+0x1c],0x0
0xc04c: mov qword ptr [rsp+0x24],0x0
0xc055: mov qword ptr [rsp+0x2c],0x0
0xc05e: mov dword ptr [rsp+0x34],0x0
0xc066: call 0xba20
0xc06b: mov rdx,qword ptr [rsp+0x38]
0xc070: xor rdx,qword ptr fs:[0x28]
0xc079: jnz 0xc085
0xc07b: add rsp,0x48
0xc07f: ret 
0xc080: call 0x2400
0xc085: call 0x2560
0xc08a: nop word ptr [rax+rax*0x1]
0xc0a0: mov rcx,rdx
0xc0a3: mov rdx,rsi
0xc0a6: mov esi,edi
0xc0a8: xor edi,edi
0xc0aa: jmp 0xc000
0xc0b0: sub rsp,0x48
0xc0b4: mov ecx,edx
0xc0b6: mov rax,qword ptr fs:[0x28]
0xc0bf: mov qword ptr [rsp+0x38],rax
0xc0c4: xor eax,eax
0xc0c6: mov rax,qword ptr [rip+0x21c223]
0xc0cd: mov r8,rsp
0xc0d0: and ecx,0x1f
0xc0d3: movdqa xmm0,xmmword ptr [rip+0x21c1e5]
0xc0db: mov qword ptr [rsp+0x30],rax
0xc0e0: mov eax,edx
0xc0e2: movaps xmmword ptr [rsp],xmm0
0xc0e6: shr al,0x5
0xc0e9: movzx eax,al
0xc0ec: lea r9,[r8+rax*0x4+0x8]
0xc0f1: movdqa xmm0,xmmword ptr [rip+0x21c1d7]
0xc0f9: movaps xmmword ptr [rsp+0x10],xmm0
0xc0fe: movdqa xmm0,xmmword ptr [rip+0x21c1da]
0xc106: movaps xmmword ptr [rsp+0x20],xmm0
0xc10b: mov edx,dword ptr [r9]
0xc10e: mov eax,edx
0xc110: shr eax,cl
0xc112: not eax
0xc114: and eax,0x1
0xc117: shl eax,cl
0xc119: mov rcx,r8
0xc11c: xor eax,edx
0xc11e: mov rdx,rsi
0xc121: mov rsi,rdi
0xc124: mov dword ptr [r9],eax
0xc127: xor edi,edi
0xc129: call 0xba20
0xc12e: mov rsi,qword ptr [rsp+0x38]
0xc133: xor rsi,qword ptr fs:[0x28]
0xc13c: jnz 0xc143
0xc13e: add rsp,0x48
0xc142: ret 
0xc143: call 0x2560
0xc148: nop dword ptr [rax+rax*0x1]
0xc150: movsx edx,sil
0xc154: mov rsi,-0x1
0xc15b: jmp 0xc0b0
0xc160: mov edx,0x3a
0xc165: mov rsi,-0x1
0xc16c: jmp 0xc0b0
0xc180: mov edx,0x3a
0xc185: jmp 0xc0b0
0xc214: call 0x2400
0xc219: call 0x2560
0xc21e: nop 
0xc220: sub rsp,0x48
0xc224: mov r9,rcx
0xc227: mov rcx,qword ptr [rip+0x21c0c2]
0xc22e: movdqa xmm0,xmmword ptr [rip+0x21c08a]
0xc236: mov rax,qword ptr fs:[0x28]
0xc23f: mov qword ptr [rsp+0x38],rax
0xc244: xor eax,eax
0xc246: movaps xmmword ptr [rsp],xmm0
0xc24a: test rsi,rsi
0xc24d: mov qword ptr [rsp+0x30],rcx
0xc252: mov dword ptr [rsp],0xa
0xc259: movdqa xmm0,xmmword ptr [rip+0x21c06f]
0xc261: movaps xmmword ptr [rsp+0x10],xmm0
0xc266: movdqa xmm0,xmmword ptr [rip+0x21c072]
0xc26e: movaps xmmword ptr [rsp+0x20],xmm0
0xc273: jz 0xc2a7
0xc275: test rdx,rdx
0xc278: jz 0xc2a7
0xc27a: mov qword ptr [rsp+0x28],rsi
0xc27f: mov qword ptr [rsp+0x30],rdx
0xc284: mov rcx,rsp
0xc287: mov rdx,r8
0xc28a: mov rsi,r9
0xc28d: call 0xba20
0xc292: mov rdi,qword ptr [rsp+0x38]
0xc297: xor rdi,qword ptr fs:[0x28]
0xc2a0: jnz 0xc2ac
0xc2a2: add rsp,0x48
0xc2a6: ret 
0xc2a7: call 0x2400
0xc2ac: call 0x2560
0xc2b1: nop dword ptr [rax+rax*0x1]
0xc2b6: nop word ptr cs:[rax+rax*0x1]
0xc2c0: mov r8,-0x1
0xc2c7: jmp 0xc220
0xc2d0: mov rcx,rdx
0xc2d3: mov r8,-0x1
0xc2da: mov rdx,rsi
0xc2dd: mov rsi,rdi
0xc2e0: xor edi,edi
0xc2e2: jmp 0xc220
0xc2f0: mov r8,rcx
0xc2f3: mov rcx,rdx
0xc2f6: mov rdx,rsi
0xc2f9: mov rsi,rdi
0xc2fc: xor edi,edi
0xc2fe: jmp 0xc220
0xc310: lea rcx,[rip+0x21bd29]
0xc317: jmp 0xba20
0xc320: lea rcx,[rip+0x21bd19]
0xc327: mov rdx,rsi
0xc32a: mov rsi,rdi
0xc32d: xor edi,edi
0xc32f: jmp 0xba20
0xc380: push rbp
0xc381: push rbx
0xc382: mov rdx,rsi
0xc385: mov rbx,rsi
0xc388: xor esi,esi
0xc38a: mov rbp,rdi
0xc38d: sub rsp,0x8
0xc391: call 0x2670
0xc396: mov rdx,rax
0xc399: sub rdx,rbp
0xc39c: add rdx,0x1
0xc3a0: test rax,rax
0xc3a3: mov rax,rbx
0xc3a6: cmovnz rax,rdx
0xc3aa: add rsp,0x8
0xc3ae: pop rbx
0xc3af: pop rbp
0xc3b0: ret 
0xc4f8: mov r8,rcx
0xc4fb: mov rcx,rdx
0xc4fe: lea rdx,[rip+0x15a8f]
0xc505: mov esi,0x1
0xc50a: xor eax,eax
0xc50c: call 0x2970
0xc511: jmp 0xc3fc
0xc7e0: xor r9d,r9d
0xc7e3: cmp qword ptr [r8],0x0
0xc7e7: jz 0xc7fb
0xc7e9: nop dword ptr [rax]
0xc7f0: add r9,0x1
0xc7f4: cmp qword ptr [r8+r9*0x8],0x0
0xc7f9: jnz 0xc7f0
0xc7fb: jmp 0xc3c0
0xc800: sub rsp,0x68
0xc804: mov r10,r8
0xc807: xor r9d,r9d
0xc80a: mov rax,qword ptr fs:[0x28]
0xc813: mov qword ptr [rsp+0x58],rax
0xc818: xor eax,eax
0xc81a: mov r8,rsp
0xc81d: nop dword ptr [rax]
0xc820: mov eax,dword ptr [r10]
0xc823: cmp eax,0x2f
0xc826: ja 0xc86a
0xc828: mov r11d,eax
0xc82b: add r11,qword ptr [r10+0x10]
0xc82f: add eax,0x8
0xc832: mov dword ptr [r10],eax
0xc835: mov rax,qword ptr [r11]
0xc838: test rax,rax
0xc83b: mov qword ptr [r8+r9*0x8],rax
0xc83f: jz 0xc84b
0xc841: add r9,0x1
0xc845: cmp r9,0xa
0xc849: jnz 0xc820
0xc84b: call 0xc3c0
0xc850: mov rax,qword ptr [rsp+0x58]
0xc855: xor rax,qword ptr fs:[0x28]
0xc85e: jnz 0xc865
0xc860: add rsp,0x68
0xc864: ret 
0xc865: call 0x2560
0xc86a: mov r11,qword ptr [r10+0x8]
0xc86e: lea rax,[r11+0x8]
0xc872: mov qword ptr [r10+0x8],rax
0xc876: jmp 0xc835
0xc940: call 0x2560
0xc94c: mov rax,rbx
0xc94f: add rbx,0x8
0xc953: jmp 0xc906
0xc960: push rbx
0xc961: lea rsi,[rip+0x1567a]
0xc968: mov edx,0x5
0xc96d: xor edi,edi
0xc96f: call 0x2510
0xc974: lea rdx,[rip+0x1567c]
0xc97b: mov rsi,rax
0xc97e: mov edi,0x1
0xc983: xor eax,eax
0xc985: call 0x2850
0xc98a: lea rsi,[rip+0x1567c]
0xc991: mov edx,0x5
0xc996: xor edi,edi
0xc998: call 0x2510
0xc99d: lea rcx,[rip+0x14304]
0xc9a4: lea rdx,[rip+0x1315c]
0xc9ab: mov rsi,rax
0xc9ae: mov edi,0x1
0xc9b3: xor eax,eax
0xc9b5: call 0x2850
0xc9ba: mov rbx,qword ptr [rip+0x21b6e7]
0xc9c1: lea rsi,[rip+0x15878]
0xc9c8: xor edi,edi
0xc9ca: mov edx,0x5
0xc9cf: call 0x2510
0xc9d4: mov rsi,rbx
0xc9d7: mov rdi,rax
0xc9da: pop rbx
0xc9db: jmp 0x26a0
0xc9fa: nop word ptr [rax+rax*0x1]
0xca00: mov rax,rdi
0xca03: mul rsi
0xca06: mov rdi,rax
0xca09: seto al
0xca0c: test rdi,rdi
0xca0f: js 0xca1b
0xca11: movzx eax,al
0xca14: test rax,rax
0xca17: jnz 0xca1b
0xca19: jmp 0xc9e0
0xca1b: sub rsp,0x8
0xca1f: call 0xcc30
0xca24: nop 
0xca26: nop word ptr cs:[rax+rax*0x1]
0xca30: jmp 0xc9e0
0xca76: nop word ptr cs:[rax+rax*0x1]
0xca80: mov rax,rsi
0xca83: mul rdx
0xca86: mov rsi,rax
0xca89: seto al
0xca8c: test rsi,rsi
0xca8f: js 0xca9b
0xca91: movzx eax,al
0xca94: test rax,rax
0xca97: jnz 0xca9b
0xca99: jmp 0xca40
0xca9b: sub rsp,0x8
0xca9f: call 0xcc30
0xcaa4: nop 
0xcaa6: nop word ptr cs:[rax+rax*0x1]
0xcab0: test rdi,rdi
0xcab3: mov r9,rdx
0xcab6: mov rcx,qword ptr [rsi]
0xcab9: jz 0xcaf0
0xcabb: xor edx,edx
0xcabd: mov rax,0x5555555555555554
0xcac7: div r9
0xcaca: cmp rax,rcx
0xcacd: jbe 0xcb0b
0xcacf: mov rax,rcx
0xcad2: shr rax,0x1
0xcad5: lea rcx,[rax+rcx*0x1+0x1]
0xcada: mov qword ptr [rsi],rcx
0xcadd: imul rcx,r9
0xcae1: mov rsi,rcx
0xcae4: jmp 0xca40
0xcaf0: test rcx,rcx
0xcaf3: jz 0xcb18
0xcaf5: mov rax,rcx
0xcaf8: mul r9
0xcafb: seto dl
0xcafe: test rax,rax
0xcb01: movzx edx,dl
0xcb04: js 0xcb0b
0xcb06: test rdx,rdx
0xcb09: jz 0xcada
0xcb0b: sub rsp,0x8
0xcb0f: call 0xcc30
0xcb14: nop dword ptr [rax]
0xcb18: xor edx,edx
0xcb1a: mov eax,0x80
0xcb1f: xor r8d,r8d
0xcb22: div r9
0xcb25: test rax,rax
0xcb28: setz r8b
0xcb2c: lea rcx,[r8+rax*0x1]
0xcb30: jmp 0xcaf5
0xcb8a: nop word ptr [rax+rax*0x1]
0xcbde: nop 
0xcc60: call 0x2400
0xcc65: nop word ptr cs:[rax+rax*0x1]
0xcc6f: nop 
0xcc9f: nop 
0xccbf: nop 
0xcda0: cmp eax,0x22
0xcda3: mov r12d,0x4
0xcda9: jnz 0xcd79
0xcdab: mov r12d,0x1
0xcdb1: jmp 0xcd64
0xd250: mov r12d,0x4
0xd256: jmp 0xcd79
0xd37f: lea rcx,[rip+0x150da]
0xd386: lea rsi,[rip+0x14fb3]
0xd38d: lea rdi,[rip+0x14fcc]
0xd394: mov edx,0x54
0xd399: call 0x2600
0xd39e: call 0x2560
0xd3a3: nop word ptr cs:[rax+rax*0x1]
0xd3ad: nop dword ptr [rax]
0xd454: cmp eax,0x22
0xd457: mov ebp,0x1
0xd45c: jnz 0xd488
0xd463: movzx r12d,byte ptr [rcx]
0xd467: test r12b,r12b
0xd46a: jnz 0xd4e7
0xd4c0: movzx r12d,byte ptr [rbp]
0xd4c5: test r12b,r12b
0xd4c8: jz 0xd488
0xd4ca: movsx esi,r12b
0xd4ce: mov rdi,r13
0xd4d1: xor ebp,ebp
0xd4d3: call 0x25a0
0xd4d8: test rax,rax
0xd4db: mov ebx,0x1
0xd4e0: mov rcx,qword ptr [rsp+0x8]
0xd4e5: jz 0xd488
0xd4e7: movsx esi,r12b
0xd4eb: mov rdi,r13
0xd4ee: mov qword ptr [rsp+0x8],rcx
0xd4f3: call 0x25a0
0xd4f8: test rax,rax
0xd4fb: mov rcx,qword ptr [rsp+0x8]
0xd500: jz 0xd5cc
0xd506: lea eax,[r12-0x45]
0xd50b: cmp al,0x2f
0xd50d: ja 0xd560
0xd50f: mov rdx,0x814400308945
0xd519: bt rdx,rax
0xd51d: jnc 0xd560
0xd51f: mov esi,0x30
0xd524: mov rdi,r13
0xd527: mov qword ptr [rsp+0x8],rcx
0xd52c: call 0x25a0
0xd531: test rax,rax
0xd534: mov rcx,qword ptr [rsp+0x8]
0xd539: jz 0xd560
0xd53b: movzx eax,byte ptr [rcx+0x1]
0xd53f: cmp al,0x44
0xd541: jz 0xd54f
0xd543: cmp al,0x69
0xd545: jz 0xd718
0xd54b: cmp al,0x42
0xd54d: jnz 0xd560
0xd54f: mov edi,0x2
0xd554: mov esi,0x3e8
0xd559: jmp 0xd56a
0xd560: mov edi,0x1
0xd565: mov esi,0x400
0xd56a: sub r12d,0x42
0xd56e: cmp r12b,0x35
0xd572: ja 0xd5cc
0xd574: lea rdx,[rip+0x14ef5]
0xd57b: movzx r12d,r12b
0xd57f: movsxd rax,dword ptr [rdx+r12*0x4]
0xd583: add rax,rdx
0xd586: jmp rax
0xd588: mov rax,rbx
0xd58b: mul rsi
0xd58e: jo 0xd781
0xd594: xor r8d,r8d
0xd597: mul rsi
0xd59a: jo 0xd772
0xd5a0: mov rbx,rax
0xd5a3: or ebp,r8d
0xd5a6: nop word ptr cs:[rax+rax*0x1]
0xd5b0: movsxd rdi,edi
0xd5b3: mov eax,ebp
0xd5b5: add rcx,rdi
0xd5b8: or eax,0x2
0xd5bb: mov qword ptr [r15],rcx
0xd5be: cmp byte ptr [rcx],0x0
0xd5c1: mov qword ptr [r14],rbx
0xd5c4: cmovnz ebp,eax
0xd5c7: jmp 0xd48d
0xd5cc: mov qword ptr [r14],rbx
0xd5cf: or ebp,0x2
0xd5d2: jmp 0xd48d
0xd5d7: mov edx,0x2
0xd5dc: mov rax,rdx
0xd5df: mul rbx
0xd5e2: jo 0xd67e
0xd5e8: add rbx,rbx
0xd5eb: jmp 0xd5b0
0xd5ed: mov edx,0x200
0xd5f2: mov rax,rdx
0xd5f5: mul rbx
0xd5f8: jo 0xd67e
0xd5fe: shl rbx,0x9
0xd602: jmp 0xd5b0
0xd604: mov r8d,0x7
0xd60a: xor r9d,r9d
0xd60d: nop dword ptr [rax]
0xd610: mov rax,rbx
0xd613: mul rsi
0xd616: mov rbx,rax
0xd619: jo 0xd7ae
0xd61f: sub r8d,0x1
0xd623: jnz 0xd610
0xd625: or ebp,r9d
0xd628: jmp 0xd5b0
0xd62a: mov r8d,0x8
0xd630: xor r9d,r9d
0xd633: nop dword ptr [rax+rax*0x1]
0xd638: mov rax,rbx
0xd63b: mul rsi
0xd63e: mov rbx,rax
0xd641: jo 0xd790
0xd647: sub r8d,0x1
0xd64b: jnz 0xd638
0xd64d: jmp 0xd625
0xd64f: mov r8d,0x4
0xd655: xor r9d,r9d
0xd658: mov rax,rbx
0xd65b: mul rsi
0xd65e: mov rbx,rax
0xd661: jo 0xd763
0xd667: sub r8d,0x1
0xd66b: jnz 0xd658
0xd66d: jmp 0xd625
0xd66f: mov rax,rbx
0xd672: mul rsi
0xd675: mov rbx,rax
0xd678: jno 0xd5b0
0xd67e: mov ebp,0x1
0xd683: or rbx,-0x1
0xd687: jmp 0xd5b0
0xd690: mov r8d,0x5
0xd696: xor r9d,r9d
0xd699: mov rax,rbx
0xd69c: mul rsi
0xd69f: mov rbx,rax
0xd6a2: jo 0xd79f
0xd6a8: sub r8d,0x1
0xd6ac: jnz 0xd699
0xd6ae: jmp 0xd625
0xd6b3: mov r8d,0x6
0xd6b9: xor r9d,r9d
0xd6bc: mov rax,rbx
0xd6bf: mul rsi
0xd6c2: mov rbx,rax
0xd6c5: jo 0xd754
0xd6cb: sub r8d,0x1
0xd6cf: jnz 0xd6bc
0xd6d1: jmp 0xd625
0xd6d6: mov edx,0x400
0xd6db: mov rax,rdx
0xd6de: mul rbx
0xd6e1: jo 0xd67e
0xd6e3: shl rbx,0xa
0xd6e7: jmp 0xd5b0
0xd6ec: mov rax,rbx
0xd6ef: mul rsi
0xd6f2: jo 0xd7bd
0xd6f8: xor r8d,r8d
0xd6fb: mul rsi
0xd6fe: jno 0xd597
0xd704: mov r8d,0x1
0xd70a: or rax,-0x1
0xd70e: jmp 0xd597
0xd718: xor edi,edi
0xd71a: cmp byte ptr [rcx+0x2],0x42
0xd71e: mov esi,0x400
0xd723: setz dil
0xd727: lea edi,[rdi+rdi*0x1+0x1]
0xd72b: jmp 0xd56a
0xd730: call 0x2560
0xd735: lea rcx,[rip+0x14e0c]
0xd73c: lea rsi,[rip+0x14bfd]
0xd743: lea rdi,[rip+0x14c16]
0xd74a: mov edx,0x54
0xd74f: call 0x2600
0xd754: mov r9d,0x1
0xd75a: or rbx,-0x1
0xd75e: jmp 0xd6cb
0xd763: mov r9d,0x1
0xd769: or rbx,-0x1
0xd76d: jmp 0xd667
0xd772: mov r8d,0x1
0xd778: or rbx,-0x1
0xd77c: jmp 0xd5a3
0xd781: or rax,-0x1
0xd785: mov r8d,0x1
0xd78b: jmp 0xd597
0xd790: mov r9d,0x1
0xd796: or rbx,-0x1
0xd79a: jmp 0xd647
0xd79f: mov r9d,0x1
0xd7a5: or rbx,-0x1
0xd7a9: jmp 0xd6a8
0xd7ae: mov r9d,0x1
0xd7b4: or rbx,-0x1
0xd7b8: jmp 0xd61f
0xd7bd: mov r8d,0x1
0xd7c3: or rax,-0x1
0xd7c7: jmp 0xd6fb
0xd814: shl rax,0x5
0xd818: lea rbx,[rip+0x14d6a]
0xd81f: mov r13,qword ptr [rcx+rax*0x1]
0xd926: cmp eax,0x22
0xd929: mov ebp,0x1
0xd92e: jnz 0xd958
0xd952: nop word ptr [rax+rax*0x1]
0xdc00: call 0x2560
0xdc05: lea rcx,[rip+0x14a84]
0xdc0c: lea rsi,[rip+0x1472d]
0xdc13: lea rdi,[rip+0x14746]
0xdc1a: mov edx,0x54
0xdc1f: call 0x2600
0xddc0: xor eax,eax
0xddc2: mov rdx,qword ptr [rsi+0x8]
0xddc6: cmp qword ptr [rdi+0x8],rdx
0xddca: jz 0xddd0
0xddcc: ret 
0xddd0: mov rax,qword ptr [rsi]
0xddd3: cmp qword ptr [rdi],rax
0xddd6: setz al
0xddd9: ret 
0xdde0: mov rax,qword ptr [rdi+0x8]
0xdde4: xor edx,edx
0xdde6: div rsi
0xdde9: mov rax,rdx
0xddec: ret 
0xddf0: mov rax,qword ptr [rdi]
0xddf3: xor edx,edx
0xddf5: div rsi
0xddf8: mov rax,rdx
0xddfb: ret 
0xde00: mov rax,qword ptr [rsi]
0xde03: cmp qword ptr [rdi],rax
0xde06: setz al
0xde09: ret 
0xde10: mov rdx,qword ptr [rdi]
0xde13: mov rax,qword ptr [rsi]
0xde16: mov rax,qword ptr [0x80+rax]
0xde1d: cmp qword ptr [0x80+rdx],rax
0xde24: jc 0xde30
0xde26: seta al
0xde29: movzx eax,al
0xde2c: ret 
0xde30: mov eax,0xffffffff
0xde35: ret 
0xe362: call 0x2560
0xe36c: nop dword ptr [rax]
0xe446: nop word ptr cs:[rax+rax*0x1]
0xe825: call 0x2560
0xe9ae: call 0x2560
0xe9b8: nop dword ptr [rax+rax*0x1]
0xed3e: sub rdx,qword ptr [rax+0x38]
0xed42: add rdx,rcx
0xed45: mov qword ptr [rax+0x30],rdx
0xf14d: test rbx,rbx
0xf150: mov dword ptr [rbp+0x40],eax
0xf153: jnz 0xf289
0xf159: cmp qword ptr [rsp+0x50],0x0
0xf15f: mov eax,0x4
0xf164: jnz 0xf289
0xf16a: mov word ptr [rbp+0x70],ax
0xf289: mov eax,0x7
0xf28e: jmp 0xf16a
0xf371: call 0x2560
0xf4b0: mov eax,dword ptr [rbx+0x48]
0xf4b3: shr eax,0xa
0xf4b6: and eax,0x1
0xf4b9: mov byte ptr [rsp+0x16],al
0xf5b5: cmp rbp,0x1
0xf5b9: jbe 0xf5cc
0xf5bb: mov rsi,r12
0xf5be: mov rdx,rbp
0xf5c1: mov rdi,rbx
0xf5c4: call 0xe010
0xf5c9: mov r12,rax
0xf61d: mov edi,dword ptr [rbx+0x2c]
0xf620: lea rdx,[rip+0x13075]
0xf627: call 0xe590
0xf62c: test eax,eax
0xf62e: mov dword ptr [rbx+0x28],eax
0xf631: jns 0xf640
0xf633: or dword ptr [rbx+0x48],0x4
0xf637: nop word ptr [rax+rax*0x1]
0xfad4: nop dword ptr [rax]
0xfff3: movzx eax,word ptr [rbp+0x70]
0xfff7: jmp 0xfc3c
0x10070: sub rsp,0x8
0x10074: call 0x2410
0x10079: mov dword ptr [rax],0x16
0x1007f: mov eax,0x1
0x10084: add rsp,0x8
0x10088: ret 
0x10090: push r14
0x10092: push r13
0x10094: push r12
0x10096: push rbp
0x10097: mov r12d,esi
0x1009a: push rbx
0x1009b: mov rbx,rdi
0x1009e: call 0x2410
0x100a3: test r12d,0xffffefff
0x100aa: mov r13,rax
0x100ad: jnz 0x10198
0x100b3: mov rbp,qword ptr [rbx]
0x100b6: mov dword ptr [rax],0x0
0x100bc: test byte ptr [rbx+0x49],0x20
0x100c0: jnz 0x10140
0x100c2: movzx eax,word ptr [rbp+0x70]
0x100c6: cmp ax,0x9
0x100ca: jz 0x10130
0x100cc: cmp ax,0x1
0x100d0: jnz 0x10140
0x100d2: mov rdi,qword ptr [rbx+0x8]
0x100d6: test rdi,rdi
0x100d9: jz 0x100e0
0x100db: call 0xe1b0
0x100e0: cmp r12d,0x1000
0x100e7: mov r14d,0x1
0x100ed: jnz 0x100fc
0x100ef: or dword ptr [rbx+0x48],0x1000
0x100f6: mov r14d,0x2
0x100fc: cmp qword ptr [rbp+0x58],0x0
0x10101: jnz 0x10115
0x10103: mov rax,qword ptr [rbp+0x30]
0x10107: cmp byte ptr [rax],0x2f
0x1010a: jz 0x10115
0x1010c: mov esi,dword ptr [rbx+0x48]
0x1010f: test sil,0x4
0x10113: jz 0x10150
0x10115: mov esi,r14d
0x10118: mov rdi,rbx
0x1011b: call 0xe9c0
0x10120: mov qword ptr [rbx+0x8],rax
0x10124: pop rbx
0x10125: pop rbp
0x10126: pop r12
0x10128: pop r13
0x1012a: pop r14
0x1012c: ret 
0x10130: pop rbx
0x10131: mov rax,qword ptr [rbp+0x10]
0x10135: pop rbp
0x10136: pop r12
0x10138: pop r13
0x1013a: pop r14
0x1013c: ret 
0x10140: pop rbx
0x10141: xor eax,eax
0x10143: pop rbp
0x10144: pop r12
0x10146: pop r13
0x10148: pop r14
0x1014a: ret 
0x10150: mov edi,dword ptr [rbx+0x2c]
0x10153: lea rdx,[rip+0x12542]
0x1015a: call 0xe590
0x1015f: test eax,eax
0x10161: mov ebp,eax
0x10163: js 0x101b9
0x10165: mov esi,r14d
0x10168: mov rdi,rbx
0x1016b: call 0xe9c0
0x10170: test byte ptr [rbx+0x49],0x2
0x10174: mov qword ptr [rbx+0x8],rax
0x10178: jnz 0x101a8
0x1017a: mov edi,ebp
0x1017c: call 0x2820
0x10181: test eax,eax
0x10183: jnz 0x101c8
0x10185: mov edi,ebp
0x10187: call 0x2640
0x1018c: mov rax,qword ptr [rbx+0x8]
0x10190: jmp 0x10124
0x10198: mov dword ptr [rax],0x16
0x1019e: xor eax,eax
0x101a0: jmp 0x10124
0x101a8: mov edx,0x1
0x101ad: mov esi,ebp
0x101af: mov rdi,rbx
0x101b2: call 0xe3e0
0x101b7: jmp 0x1018c
0x101b9: mov qword ptr [rbx+0x8],0x0
0x101c1: xor eax,eax
0x101c3: jmp 0x10124
0x101c8: mov ebx,dword ptr [r13]
0x101cc: mov edi,ebp
0x101ce: call 0x2640
0x101d3: xor eax,eax
0x101d5: mov dword ptr [r13],ebx
0x101d9: jmp 0x10124
0x1025e: call 0x2560
0x10263: nop word ptr cs:[rax+rax*0x1]
0x1026d: nop dword ptr [rax]
0x10b83: call 0x2560
0x10b88: nop dword ptr [rax+rax*0x1]
0x10c35: lea rdx,[rax+0x1]
0x10c39: cmp rdx,qword ptr [rsi+0x58]
0x10c3d: jl 0x10c80
0x10c80: mov qword ptr [rsi+0x48],rdx
0x10c84: movzx eax,byte ptr [r8+rax*0x1+0x1]
0x10c8a: mov byte ptr [rdi+0x8],0x1
0x10c8e: mov byte ptr [rdi],al
0x10c90: mov eax,0x1
0x10c95: ret 
0x10e42: cmp eax,-0x1
0x10e45: jz 0x10dae
0x10e4b: test eax,eax
0x10e4d: jnz 0x10e57
0x10e4f: mov esi,dword ptr [rsp+0x8]
0x10e53: test esi,esi
0x10e55: jnz 0x10ed5
0x10e57: cmp r15,0x3f
0x10e5b: jg 0x10e70
0x10e5d: movzx eax,word ptr [rsp+0x26]
0x10e62: and word ptr [r13+0x22],ax
0x10e67: nop word ptr [rax+rax*0x1]
0x115ae: call 0x2560
0x115b3: nop dword ptr [rax]
0x115b6: nop word ptr cs:[rax+rax*0x1]
0x11bba: call 0x2560
0x1230c: mov rsi,r15
0x1230f: call 0x11160
0x12314: mov edx,eax
0x12316: xor eax,eax
0x12318: test dl,dl
0x1231a: jnz 0x121e0
0x12320: jmp 0x121db
0x1304a: call 0x2560
0x1304f: nop 
0x131a4: call 0x2560
0x131a9: nop dword ptr [rax]
0x132b7: test rax,rax
0x132ba: js 0x132fd
0x132bc: nop dword ptr [rax]
0x132c0: mov r8,qword ptr [rdi+r9*0x8]
0x132c4: mov rcx,qword ptr [rdi+rax*0x8]
0x132c8: lea r10,[rax+rdx*0x1]
0x132cc: lea r10,[rdi+r10*0x8]
0x132d0: cmp r8,rcx
0x132d3: jle 0x132f0
0x132d5: sub r9,0x1
0x132d9: sub rdx,0x1
0x132dd: mov qword ptr [r10],r8
0x132e0: jnz 0x132c0
0x132e2: xor edx,edx
0x132e4: jmp 0x13301
0x132f0: sub rax,0x1
0x132f4: mov qword ptr [r10],rcx
0x132f7: cmp rax,-0x1
0x132fb: jnz 0x132c0
0x1350c: call 0x2560
0x13511: nop dword ptr [rax+rax*0x1]
0x13516: nop word ptr cs:[rax+rax*0x1]
0x136c8: lea rax,[rbx+0x70]
0x136cc: lea r14,[rsp+0x20]
0x136d1: sub rbx,-0x80
0x136d5: xor ecx,ecx
0x136d7: xor edx,edx
0x136d9: mov rsi,rbx
0x136dc: mov r15,rax
0x136df: mov r8,r14
0x136e2: mov rdi,rax
0x136e5: mov byte ptr [rsp+0x28],0x8
0x136ea: mov qword ptr [rsp+0x8],rax
0x136ef: call 0x13360
0x136f4: xor ecx,ecx
0x136f6: xor edx,edx
0x136f8: mov rdi,r15
0x136fb: mov r8,r14
0x136fe: mov rsi,rbx
0x13701: mov r12,rax
0x13704: mov byte ptr [rsp+0x28],0x9
0x13709: call 0x13360
0x1370e: test rbp,rbp
0x13711: mov r15,rax
0x13714: mov r11,rax
0x13717: jz 0x1361c
0x13752: call 0x2560
0x13757: nop word ptr [rax+rax*0x1]
0x137fb: call 0x2560
0x13f87: call 0x2560
0x13f8c: nop dword ptr [rax]
0x14329: call 0x2560
0x1432e: nop 
0x14cf0: mov r15,qword ptr [rbx+0x28]
0x14cf4: mov rcx,qword ptr [rbx+0x78]
0x14cf8: mov rsi,qword ptr [rbx]
0x14cfb: add rsi,rdx
0x14cfe: movzx esi,byte ptr [rsi+r15*0x1]
0x14d03: movzx esi,byte ptr [rcx+rsi*0x1]
0x14d07: mov rcx,qword ptr [rbx+0x8]
0x14d0b: mov byte ptr [rcx+rdx*0x1],sil
0x14d0f: add rdx,0x1
0x14d13: cmp rax,rdx
0x14d16: jnz 0x14cf0
0x14eea: call 0x2560
0x14eef: nop 
0x15126: call 0x2560
0x1512b: nop dword ptr [rax+rax*0x1]
0x15ca4: call 0x2560
0x15e44: nop 
0x15e46: nop word ptr cs:[rax+rax*0x1]
0x16915: call 0x2560
0x1691a: nop word ptr [rax+rax*0x1]
0x16e42: call 0x2560
0x16e47: nop word ptr [rax+rax*0x1]
0x177fc: call 0x2560
0x17801: nop dword ptr [rax+rax*0x1]
0x17806: nop word ptr cs:[rax+rax*0x1]
0x17d88: test rcx,rcx
0x17d8b: jz 0x17e40
0x18008: jmp 0x17f27
0x1805c: mov rdi,qword ptr [rbp-0x60]
0x18060: call 0x2a10
0x18065: cmp byte ptr [-0xc9+rbp],0x0
0x1806c: jz 0x17f27
0x18072: mov rdi,qword ptr [-0xc0+rbp]
0x18079: call 0x2a10
0x1807e: xor eax,eax
0x18080: jmp 0x17f29
0x180ac: mov rdi,qword ptr [rbp-0x60]
0x180b0: call 0x2a10
0x180b5: cmp byte ptr [-0xc9+rbp],0x0
0x180bc: mov eax,0x1
0x180c1: jz 0x17f29
0x180c7: mov rdi,qword ptr [-0xc0+rbp]
0x180ce: mov dword ptr [-0x88+rbp],eax
0x180d4: call 0x2a10
0x180d9: mov eax,dword ptr [-0x88+rbp]
0x180df: jmp 0x17f29
0x180fa: nop word ptr [rax+rax*0x1]
0x18b7c: call 0x2560
0x18b81: nop dword ptr [rax+rax*0x1]
0x18b86: nop word ptr cs:[rax+rax*0x1]
0x18d77: call 0x2560
0x18d7c: nop dword ptr [rax]
0x190bb: call 0x2560
0x1920b: test r12,r12
0x1920e: mov dword ptr [rsp+0x5c],0x1
0x19216: jnz 0x19c39
0x195ee: cmp qword ptr [rsp+0x70],rbp
0x195f3: jle 0x1964f
0x195f5: mov rax,qword ptr [rsp+0x78]
0x195fa: mov rdi,qword ptr [rsp+0x68]
0x195ff: movzx edx,byte ptr [rax+rbp*0x1]
0x19603: lea rax,[rbp+0x1]
0x19607: cmp byte ptr [rdi+rdx*0x1],0x0
0x1960b: jnz 0x19698
0x19611: mov rsi,qword ptr [rsp+0x68]
0x19616: mov rcx,qword ptr [rsp+0x70]
0x1961b: mov rdi,qword ptr [rsp+0x78]
0x19620: jmp 0x1963a
0x19628: movzx edx,byte ptr [rdi+rax*0x1]
0x1962c: lea rax,[rax+0x1]
0x19630: cmp byte ptr [rsi+rdx*0x1],0x0
0x19634: jnz 0x1a7d1
0x1963a: cmp rcx,rax
0x1963d: mov rbp,rax
0x19640: jnz 0x19628
0x19642: mov rax,qword ptr [rsp+0x70]
0x19647: mov qword ptr [0xd8+rsp],rax
0x1964f: cmp qword ptr [rsp+0x70],rbp
0x19654: jnz 0x19698
0x19656: xor eax,eax
0x19658: mov rsi,qword ptr [rsp+0x70]
0x1965d: cmp qword ptr [0x88+rsp],rsi
0x19665: jle 0x19670
0x19667: mov rax,qword ptr [rsp+0x78]
0x1966c: movzx eax,byte ptr [rax+rsi*0x1]
0x19670: mov rsi,qword ptr [0xb0+rsp]
0x19678: test rsi,rsi
0x1967b: jz 0x19681
0x1967d: movzx eax,byte ptr [rsi+rax*0x1]
0x19681: mov rdi,qword ptr [rsp+0x68]
0x19686: cmp byte ptr [rdi+rax*0x1],0x0
0x1968a: jz 0x1a029
0x19690: mov rbp,qword ptr [rsp+0x70]
0x19695: nop dword ptr [rax]
0x19b12: cmp qword ptr [rsp+0x70],rbp
0x19b17: jle 0x1964f
0x19b1d: mov rax,qword ptr [rsp+0x78]
0x19b22: mov rdi,qword ptr [0xb0+rsp]
0x19b2a: mov rsi,qword ptr [rsp+0x68]
0x19b2f: movzx eax,byte ptr [rax+rbp*0x1]
0x19b33: movzx edx,byte ptr [rdi+rax*0x1]
0x19b37: lea rax,[rbp+0x1]
0x19b3b: cmp byte ptr [rsi+rdx*0x1],0x0
0x19b3f: jnz 0x19698
0x19b45: mov rsi,qword ptr [rsp+0x68]
0x19b4a: mov rdi,qword ptr [0xb0+rsp]
0x19b52: mov rcx,qword ptr [rsp+0x70]
0x19b57: mov r8,qword ptr [rsp+0x78]
0x19b5c: jmp 0x19b77
0x19b60: movzx eax,byte ptr [r8+rax*0x1]
0x19b65: movzx edx,byte ptr [rdi+rax*0x1]
0x19b69: lea rax,[rbp+0x1]
0x19b6d: cmp byte ptr [rsi+rdx*0x1],0x0
0x19b71: jnz 0x1a7d1
0x19b77: cmp rcx,rax
0x19b7a: mov rbp,rax
0x19b7d: jnz 0x19b60
0x19b7f: jmp 0x19642
0x19b84: cmp qword ptr [0x90+rsp],rbp
0x19b8c: jg 0x1a029
0x19b92: xor ecx,ecx
0x19b94: mov rax,rbp
0x19b97: mov rdi,qword ptr [rsp+0x68]
0x19b9c: mov rsi,qword ptr [0xb0+rsp]
0x19ba4: mov r9,qword ptr [0x90+rsp]
0x19bac: mov r10,qword ptr [rsp+0x78]
0x19bb1: mov r8,qword ptr [0x88+rsp]
0x19bb9: jmp 0x19bd2
0x19bc0: sub rax,0x1
0x19bc4: mov ecx,0x1
0x19bc9: cmp rax,r9
0x19bcc: jl 0x1a5b0
0x19bd2: xor edx,edx
0x19bd4: cmp r8,rax
0x19bd7: jle 0x19bde
0x19bd9: movzx edx,byte ptr [r10+rax*0x1]
0x19bde: test rsi,rsi
0x19be1: jz 0x19be7
0x19be3: movzx edx,byte ptr [rsi+rdx*0x1]
0x19be7: cmp byte ptr [rdi+rdx*0x1],0x0
0x19beb: jz 0x19bc0
0x19bed: test cl,cl
0x19bef: jz 0x19698
0x19bf5: mov qword ptr [0xd8+rsp],rax
0x19bfd: mov rbp,rax
0x19c00: jmp 0x19698
0x1a10c: nop dword ptr [rax]
0x1a416: test eax,eax
0x1a418: jnz 0x1a6ed
0x1a41e: mov rax,qword ptr [rbx]
0x1a5b0: mov qword ptr [0xd8+rsp],rax
0x1a5b8: mov rdi,qword ptr [0x1d8+rsp]
0x1a5c0: mov dword ptr [rsp+0x5c],0x1
0x1a5c8: jmp 0x19c18
0x1a7d1: mov qword ptr [0xd8+rsp],rbp
0x1a7d9: jmp 0x19698
0x1a7eb: call 0x2560
0x1b03b: call 0x2560
0x1b298: call 0x2560
0x1b29d: nop dword ptr [rax]
0x1b551: test r14,r14
0x1b554: jnz 0x1b91a
0x1b646: add r14,0x1
0x1b64a: cmp r14,qword ptr [rbx+0x58]
0x1b64e: jnz 0x1b94b
0x1b67b: mov byte ptr [rbp+0x8],0xa
0x1b67f: jmp 0x1b364
0x1b69d: jmp 0x1b539
0x1b6f1: jmp 0x1b4e9
0x1b7a8: jmp 0x1b592
0x1b830: jmp 0x1b5c2
0x1b847: jmp 0x1b612
0x1b85e: jmp 0x1b632
0x1b91a: cmp byte ptr [rdx+r14*0x1-0x1],0xa
0x1b920: jnz 0x1b50c
0x1b926: test r15d,0x800
0x1b92d: jz 0x1b50c
0x1b933: jmp 0x1b55a
0x1b94b: lea rdi,[rsp+0x10]
0x1b950: mov rdx,r15
0x1b953: mov qword ptr [rbx+0x48],r14
0x1b957: mov rsi,rbx
0x1b95a: call 0x1b2a0
0x1b95f: movzx eax,byte ptr [rsp+0x18]
0x1b964: sub qword ptr [rbx+0x48],0x1
0x1b969: lea edx,[rax-0x9]
0x1b96c: mov eax,0x1
0x1b971: cmp dl,0x1
0x1b974: ja 0x1b364
0x1b97a: jmp 0x1b654
0x1b998: call 0x2560
0x1b99d: nop dword ptr [rax]
0x1bbba: test al,0x10
0x1bbbc: jnz 0x1ca25
0x1bbc2: cmp cl,0x9
0x1bbc5: jz 0x1c5d8
0x1bdd6: cmp al,0xb
0x1bdd8: jz 0x1bde2
0x1bdda: cmp al,0x17
0x1bddc: jnz 0x1bc28
0x1bde2: mov rax,qword ptr [rsp+0x28]
0x1bde7: test rax,rax
0x1bdea: jz 0x1bdfd
0x1bdec: lea rsi,[rip+0xffffffffffff602d]
0x1bdf3: xor edx,edx
0x1bdf5: mov rdi,rax
0x1bdf8: call 0x10f80
0x1bfcc: mov rax,qword ptr [rsp+0x18]
0x1bfd1: mov qword ptr [r14+0x48],rbp
0x1bfd5: movaps xmmword ptr [rax],xmm0
0x1bfd8: mov byte ptr [rax+0x8],0x1
0x1bfdc: mov rax,qword ptr [rsp+0x28]
0x1bfe1: jmp 0x1bda5
0x1c5e7: mov rax,qword ptr [rsp+0x40]
0x1c5ec: mov qword ptr [rsp+0x28],0x0
0x1c5f5: mov dword ptr [rax],0x10
0x1c5fb: jmp 0x1bb70
0x1c7aa: or qword ptr [r12],0x400
0x1ca25: mov rbx,qword ptr [rsp+0x18]
0x1ca2a: mov rdx,rax
0x1ca2d: mov rsi,r14
0x1ca30: mov qword ptr [rsp],r8
0x1ca34: mov r15,rax
0x1ca37: mov rdi,rbx
0x1ca3a: call 0x1b2a0
0x1ca3f: cdqe 
0x1ca41: add qword ptr [r14+0x48],rax
0x1ca45: mov r9,qword ptr [rsp+0x40]
0x1ca4a: mov r8,qword ptr [rsp]
0x1ca4e: mov rcx,r15
0x1ca51: mov rdx,rbx
0x1ca54: mov rsi,rbp
0x1ca57: mov rdi,r14
0x1ca5a: call 0x1ba60
0x1ca5f: mov qword ptr [rsp+0x28],rax
0x1ca64: jmp 0x1bb70
0x1cd53: xor ebx,ebx
0x1cd55: xor r12d,r12d
0x1cd58: jmp 0x1cce3
0x1cde1: jmp 0x1cdad
0x1cefe: call 0x2560
0x1d0bd: call 0x2560
0x1d0c2: nop dword ptr [rax]
0x1d0c6: nop word ptr cs:[rax+rax*0x1]
0x1d24a: call 0x2560
0x1d24f: nop 
0x1dcd0: test byte ptr [0xb0+r13],0x1
0x1dcd8: jnz 0x1dce8
0x1e340: call 0x2560
0x1e345: nop 
0x1e346: nop word ptr cs:[rax+rax*0x1]
0x1e350: sub rsp,0x8
0x1e354: mov rcx,qword ptr [rip+0x209fa5]
0x1e35b: mov r8,rdi
0x1e35e: mov rdi,rdx
0x1e361: mov rax,rcx
0x1e364: shr rax,0x19
0x1e368: and eax,0x1
0x1e36b: shl eax,0x4
0x1e36e: mov edx,eax
0x1e370: movzx eax,byte ptr [rdi+0x38]
0x1e374: and eax,0xffffffef
0x1e377: or eax,edx
0x1e379: mov rdx,rsi
0x1e37c: mov rsi,r8
0x1e37f: or eax,0xffffff80
0x1e382: mov byte ptr [rdi+0x38],al
0x1e385: call 0x1d250
0x1e38a: test eax,eax
0x1e38c: jz 0x1e3b8
0x1e38e: lea rdx,[rip+0x4a4b]
0x1e395: cdqe 
0x1e397: lea rsi,[rip+0x4ae2]
0x1e39e: xor edi,edi
0x1e3a0: add rsi,qword ptr [rdx+rax*0x8]
0x1e3a4: mov edx,0x5
0x1e3a9: add rsp,0x8
0x1e3ad: jmp 0x2510
0x1e3b8: xor eax,eax
0x1e3ba: add rsp,0x8
0x1e3be: ret 
0x1e3c0: mov rax,qword ptr [rip+0x209f39]
0x1e3c7: mov qword ptr [rip+0x209f32],rdi
0x1e3ce: ret 
0x1e4a0: push r15
0x1e4a2: push r14
0x1e4a4: mov rax,r8
0x1e4a7: push r13
0x1e4a9: push r12
0x1e4ab: add r8,rcx
0x1e4ae: push rbp
0x1e4af: push rbx
0x1e4b0: sub rsp,0x38
0x1e4b4: test rcx,rcx
0x1e4b7: mov ebx,dword ptr [rsp+0x78]
0x1e4bb: mov r12,qword ptr [rsp+0x70]
0x1e4c0: mov dword ptr [rsp+0x28],ebx
0x1e4c4: js 0x1e800
0x1e4ca: cmp rcx,rdx
0x1e4cd: jg 0x1e800
0x1e4d3: cmp r8,rdx
0x1e4d6: mov rbx,rcx
0x1e4d9: mov r15,rdi
0x1e4dc: jg 0x1e760
0x1e4e2: test rax,rax
0x1e4e5: js 0x1e4f0
0x1e4e7: cmp rcx,r8
0x1e4ea: jg 0x1e760
0x1e4f0: test r8,r8
0x1e4f3: js 0x1e7d8
0x1e4f9: test rax,rax
0x1e4fc: jns 0x1e507
0x1e4fe: cmp rbx,r8
0x1e501: jle 0x1e7d8
0x1e507: movzx eax,byte ptr [r15+0x38]
0x1e50c: mov r13d,eax
0x1e50f: shr r13b,0x5
0x1e513: mov edi,r13d
0x1e516: and edi,0x3
0x1e519: cmp r8,rbx
0x1e51c: mov dword ptr [rsp+0x2c],edi
0x1e520: jle 0x1e531
0x1e522: cmp qword ptr [r15+0x20],0x0
0x1e527: jz 0x1e531
0x1e529: test al,0x8
0x1e52b: jz 0x1e720
0x1e531: test al,0x10
0x1e533: jnz 0x1e700
0x1e539: test r12,r12
0x1e53c: jz 0x1e700
0x1e542: and eax,0x6
0x1e545: mov rcx,qword ptr [r15+0x30]
0x1e549: cmp al,0x4
0x1e54b: jz 0x1e6e0
0x1e551: lea r14,[rcx+0x1]
0x1e555: mov r13,r14
0x1e558: mov rdi,r14
0x1e55b: shl rdi,0x4
0x1e55f: mov qword ptr [rsp+0x20],r9
0x1e564: mov qword ptr [rsp+0x18],rdx
0x1e569: mov qword ptr [rsp+0x10],rsi
0x1e56e: mov qword ptr [rsp+0x8],r8
0x1e573: call 0x2780
0x1e578: test rax,rax
0x1e57b: mov rbp,rax
0x1e57e: jz 0x1e810
0x1e584: sub rsp,0x8
0x1e588: mov rcx,rbx
0x1e58b: mov rdi,r15
0x1e58e: mov eax,dword ptr [rsp+0x34]
0x1e592: push rax
0x1e593: push rbp
0x1e594: push r14
0x1e596: mov r9,qword ptr [rsp+0x40]
0x1e59b: mov r8,qword ptr [rsp+0x28]
0x1e5a0: mov rdx,qword ptr [rsp+0x38]
0x1e5a5: mov rsi,qword ptr [rsp+0x30]
0x1e5aa: call 0x190c0
0x1e5af: add rsp,0x20
0x1e5b3: test eax,eax
0x1e5b5: jz 0x1e5e8
0x1e5b7: cmp eax,0x1
0x1e5ba: mov r12,-0x1
0x1e5c1: jz 0x1e5ca
0x1e5c3: mov r12,-0x2
0x1e5ca: mov rdi,rbp
0x1e5cd: call 0x2a10
0x1e5d2: add rsp,0x38
0x1e5d6: mov rax,r12
0x1e5d9: pop rbx
0x1e5da: pop rbp
0x1e5db: pop r12
0x1e5dd: pop r13
0x1e5df: pop r14
0x1e5e1: pop r15
0x1e5e3: ret 
0x1e5e8: test r12,r12
0x1e5eb: jz 0x1e6b8
0x1e5f1: movzx eax,byte ptr [r15+0x38]
0x1e5f6: lea rdx,[r13+0x1]
0x1e5fa: shr al,0x1
0x1e5fc: and eax,0x3
0x1e5ff: jz 0x1e770
0x1e605: cmp eax,0x1
0x1e608: jz 0x1e820
0x1e60e: cmp eax,0x2
0x1e611: jnz 0x1e900
0x1e617: cmp r14,qword ptr [r12]
0x1e61b: ja 0x1e8e1
0x1e621: mov r9d,0x2
0x1e627: test r13,r13
0x1e62a: jle 0x1e898
0x1e630: mov r8,qword ptr [r12+0x8]
0x1e635: mov rdi,qword ptr [r12+0x10]
0x1e63a: lea rsi,[r13*0x8]
0x1e642: mov rdx,r13
0x1e645: xor eax,eax
0x1e647: nop word ptr [rax+rax*0x1]
0x1e650: mov rcx,qword ptr [rbp+rax*0x2]
0x1e655: mov qword ptr [r8+rax*0x1],rcx
0x1e659: mov rcx,qword ptr [rbp+rax*0x2+0x8]
0x1e65e: mov qword ptr [rdi+rax*0x1],rcx
0x1e662: add rax,0x8
0x1e666: cmp rsi,rax
0x1e669: jnz 0x1e650
0x1e66b: cmp qword ptr [r12],rdx
0x1e66f: jbe 0x1e69d
0x1e671: mov rsi,qword ptr [r12+0x10]
0x1e676: mov rcx,qword ptr [r12+0x8]
0x1e67b: mov rax,-0x1
0x1e682: nop word ptr [rax+rax*0x1]
0x1e688: mov qword ptr [rsi+rdx*0x8],rax
0x1e68c: add r13,0x1
0x1e690: mov qword ptr [rcx+rdx*0x8],rax
0x1e694: cmp r13,qword ptr [r12]
0x1e698: mov rdx,r13
0x1e69b: jc 0x1e688
0x1e69d: movzx eax,byte ptr [r15+0x38]
0x1e6a2: lea r13d,[r9+r9*0x1]
0x1e6a6: and eax,0xfffffff9
0x1e6a9: or eax,r13d
0x1e6ac: test al,0x6
0x1e6ae: mov byte ptr [r15+0x38],al
0x1e6b2: jz 0x1e5c3
0x1e6b8: cmp byte ptr [rsp+0x28],0x0
0x1e6bd: mov r12,qword ptr [rbp]
0x1e6c1: jz 0x1e5ca
0x1e6c7: cmp r12,rbx
0x1e6ca: jnz 0x1e8c2
0x1e6d0: mov r12,qword ptr [rbp+0x8]
0x1e6d4: sub r12,rbx
0x1e6d7: jmp 0x1e5ca
0x1e6e0: mov r14,qword ptr [r12]
0x1e6e4: cmp r14,rcx
0x1e6e7: ja 0x1e551
0x1e6ed: test r14,r14
0x1e6f0: mov r13,r14
0x1e6f3: jg 0x1e558
0x1e6f9: nop dword ptr [rax]
0x1e700: mov edi,0x10
0x1e705: mov r14d,0x1
0x1e70b: mov r13d,0x1
0x1e711: xor r12d,r12d
0x1e714: jmp 0x1e55f
0x1e720: mov rdi,r15
0x1e723: mov qword ptr [rsp+0x20],r9
0x1e728: mov qword ptr [rsp+0x18],rdx
0x1e72d: mov qword ptr [rsp+0x10],rsi
0x1e732: mov qword ptr [rsp+0x8],r8
0x1e737: call 0x1e3d0
0x1e73c: movzx eax,byte ptr [r15+0x38]
0x1e741: mov r9,qword ptr [rsp+0x20]
0x1e746: mov rdx,qword ptr [rsp+0x18]
0x1e74b: mov rsi,qword ptr [rsp+0x10]
0x1e750: mov r8,qword ptr [rsp+0x8]
0x1e755: jmp 0x1e531
0x1e760: mov r8,rdx
0x1e763: jmp 0x1e507
0x1e770: lea r14,[rdx*0x8]
0x1e778: mov qword ptr [rsp+0x8],rdx
0x1e77d: mov rdi,r14
0x1e780: call 0x2780
0x1e785: test rax,rax
0x1e788: mov qword ptr [r12+0x8],rax
0x1e78d: mov rdx,qword ptr [rsp+0x8]
0x1e792: jz 0x1e8aa
0x1e798: mov rdi,r14
0x1e79b: mov qword ptr [rsp+0x8],rdx
0x1e7a0: mov qword ptr [rsp+0x10],rax
0x1e7a5: call 0x2780
0x1e7aa: test rax,rax
0x1e7ad: mov qword ptr [r12+0x10],rax
0x1e7b2: mov rdx,qword ptr [rsp+0x8]
0x1e7b7: mov rcx,qword ptr [rsp+0x10]
0x1e7bc: jz 0x1e8a2
0x1e7c2: mov qword ptr [r12],rdx
0x1e7c6: mov r9d,0x1
0x1e7cc: jmp 0x1e627
0x1e7d8: movzx eax,byte ptr [r15+0x38]
0x1e7dd: xor r8d,r8d
0x1e7e0: mov r13d,eax
0x1e7e3: shr r13b,0x5
0x1e7e7: mov edi,r13d
0x1e7ea: and edi,0x3
0x1e7ed: mov dword ptr [rsp+0x2c],edi
0x1e7f1: jmp 0x1e531
0x1e800: mov r12,-0x1
0x1e807: jmp 0x1e5d2
0x1e810: mov r12,-0x2
0x1e817: jmp 0x1e5d2
0x1e820: cmp qword ptr [r12],rdx
0x1e824: mov r9d,0x1
0x1e82a: jnc 0x1e627
0x1e830: lea rcx,[rdx*0x8]
0x1e838: mov rdi,qword ptr [r12+0x8]
0x1e83d: mov byte ptr [rsp+0x18],r9b
0x1e842: mov qword ptr [rsp+0x10],rdx
0x1e847: mov rsi,rcx
0x1e84a: mov qword ptr [rsp+0x8],rcx
0x1e84f: call 0x2830
0x1e854: test rax,rax
0x1e857: mov r14,rax
0x1e85a: jz 0x1e8aa
0x1e85c: mov rcx,qword ptr [rsp+0x8]
0x1e861: mov rdi,qword ptr [r12+0x10]
0x1e866: mov rsi,rcx
0x1e869: call 0x2830
0x1e86e: test rax,rax
0x1e871: mov rdx,qword ptr [rsp+0x10]
0x1e876: movzx r9d,byte ptr [rsp+0x18]
0x1e87c: jz 0x1e8b2
0x1e87e: mov qword ptr [r12+0x8],r14
0x1e883: mov qword ptr [r12+0x10],rax
0x1e888: mov qword ptr [r12],rdx
0x1e88c: jmp 0x1e627
0x1e898: xor edx,edx
0x1e89a: xor r13d,r13d
0x1e89d: jmp 0x1e66b
0x1e8a2: mov rdi,rcx
0x1e8a5: call 0x2a10
0x1e8aa: xor r9d,r9d
0x1e8ad: jmp 0x1e69d
0x1e8b2: mov rdi,r14
0x1e8b5: call 0x2a10
0x1e8ba: xor r9d,r9d
0x1e8bd: jmp 0x1e69d
0x1e8c2: lea rcx,[rip+0x4487]
0x1e8c9: lea rsi,[rip+0x3ed0]
0x1e8d0: lea rdi,[rip+0x3fea]
0x1e8d7: mov edx,0x1be
0x1e8dc: call 0x2600
0x1e8e1: lea rcx,[rip+0x4458]
0x1e8e8: lea rsi,[rip+0x3eb1]
0x1e8ef: lea rdi,[rip+0x3fb3]
0x1e8f6: mov edx,0x1fb
0x1e8fb: call 0x2600
0x1e900: lea rcx,[rip+0x4439]
0x1e907: lea rsi,[rip+0x3e92]
0x1e90e: lea rdi,[rip+0x3f77]
0x1e915: mov edx,0x1f9
0x1e91a: call 0x2600
0x1e91f: nop 
0x1e920: push r15
0x1e922: push r14
0x1e924: push r13
0x1e926: push r12
0x1e928: mov r12,rdi
0x1e92b: push rbp
0x1e92c: push rbx
0x1e92d: mov rbp,r8
0x1e930: mov rbx,rdx
0x1e933: mov rdx,rbp
0x1e936: sub rsp,0x28
0x1e93a: shr rdx,0x3f
0x1e93e: mov rax,qword ptr [rsp+0x70]
0x1e943: mov edi,edx
0x1e945: mov r8d,dword ptr [rsp+0x78]
0x1e94a: shr rax,0x3f
0x1e94e: or dil,al
0x1e951: jnz 0x1ea20
0x1e957: test rbx,rbx
0x1e95a: js 0x1ea20
0x1e960: mov r15,rbx
0x1e963: add r15,rbp
0x1e966: jo 0x1ea20
0x1e96c: test rbp,rbp
0x1e96f: mov r14,rcx
0x1e972: mov rcx,r9
0x1e975: jz 0x1ea30
0x1e97b: xor r13d,r13d
0x1e97e: test rbx,rbx
0x1e981: mov qword ptr [rsp+0x8],rsi
0x1e986: jnz 0x1e9d0
0x1e988: movzx r8d,r8b
0x1e98c: mov rdx,r15
0x1e98f: mov rsi,r14
0x1e992: push r8
0x1e994: push qword ptr [rsp+0x70]
0x1e998: mov rdi,r12
0x1e99b: mov r9,qword ptr [0x80+rsp]
0x1e9a3: mov r8,qword ptr [rsp+0x70]
0x1e9a8: call 0x1e4a0
0x1e9ad: mov rdi,r13
0x1e9b0: mov rbx,rax
0x1e9b3: call 0x2a10
0x1e9b8: pop rax
0x1e9b9: pop rdx
0x1e9ba: add rsp,0x28
0x1e9be: mov rax,rbx
0x1e9c1: pop rbx
0x1e9c2: pop rbp
0x1e9c3: pop r12
0x1e9c5: pop r13
0x1e9c7: pop r14
0x1e9c9: pop r15
0x1e9cb: ret 
0x1e9d0: mov rdi,r15
0x1e9d3: mov dword ptr [rsp+0x1c],r8d
0x1e9d8: mov qword ptr [rsp+0x10],r9
0x1e9dd: call 0x2780
0x1e9e2: test rax,rax
0x1e9e5: mov r13,rax
0x1e9e8: jz 0x1ea20
0x1e9ea: mov rsi,qword ptr [rsp+0x8]
0x1e9ef: mov rdx,rbx
0x1e9f2: mov rdi,rax
0x1e9f5: call 0x2710
0x1e9fa: lea rdi,[r13+rbx*0x1]
0x1e9ff: mov rsi,r14
0x1ea02: mov rdx,rbp
0x1ea05: mov r14,r13
0x1ea08: call 0x2710
0x1ea0d: mov rcx,qword ptr [rsp+0x10]
0x1ea12: mov r8d,dword ptr [rsp+0x1c]
0x1ea17: jmp 0x1e988
0x1ea20: mov rbx,-0x2
0x1ea27: jmp 0x1e9ba
0x1ea30: mov r14,rsi
0x1ea33: xor r13d,r13d
0x1ea36: jmp 0x1e988
0x1eb10: and r13,-0x41
0x1eb14: or byte ptr [rbx+0x38],0x80
0x1eb18: or r13,0x100
0x1eb1f: jmp 0x1eab2
0x1eb50: push r13
0x1eb52: push r12
0x1eb54: push rbp
0x1eb55: push rbx
0x1eb56: sub rsp,0x8
0x1eb5a: cmp edi,0x10
0x1eb5d: ja 0x1ebc0
0x1eb5f: lea rax,[rip+0x427a]
0x1eb66: movsxd rdi,edi
0x1eb69: lea rsi,[rip+0x4310]
0x1eb70: mov rbp,rdx
0x1eb73: mov edx,0x5
0x1eb78: mov r12,rcx
0x1eb7b: add rsi,qword ptr [rax+rdi*0x8]
0x1eb7f: xor edi,edi
0x1eb81: call 0x2510
0x1eb86: mov rdi,rax
0x1eb89: mov r13,rax
0x1eb8c: call 0x2530
0x1eb91: test r12,r12
0x1eb94: lea rbx,[rax+0x1]
0x1eb98: jz 0x1ebad
0x1eb9a: cmp rbx,r12
0x1eb9d: mov rdx,rbx
0x1eba0: ja 0x1ebc8
0x1eba2: mov rsi,r13
0x1eba5: mov rdi,rbp
0x1eba8: call 0x2710
0x1ebad: add rsp,0x8
0x1ebb1: mov rax,rbx
0x1ebb4: pop rbx
0x1ebb5: pop rbp
0x1ebb6: pop r12
0x1ebb8: pop r13
0x1ebba: ret 
0x1ebc0: call 0x2400
0x1ebc5: nop dword ptr [rax]
0x1ebc8: lea rdx,[r12-0x1]
0x1ebcd: mov byte ptr [rbp+r12*0x1-0x1],0x0
0x1ebd3: jmp 0x1eba2
0x1ebe0: push rbx
0x1ebe1: mov rbx,rdi
0x1ebe4: mov rdi,qword ptr [rdi]
0x1ebe7: test rdi,rdi
0x1ebea: jz 0x1ebf1
0x1ebec: call 0x123d0
0x1ebf1: mov rdi,qword ptr [rbx+0x20]
0x1ebf5: mov qword ptr [rbx],0x0
0x1ebfc: mov qword ptr [rbx+0x8],0x0
0x1ec04: call 0x2a10
0x1ec09: mov rdi,qword ptr [rbx+0x28]
0x1ec0d: mov qword ptr [rbx+0x20],0x0
0x1ec15: call 0x2a10
0x1ec1a: mov qword ptr [rbx+0x28],0x0
0x1ec22: pop rbx
0x1ec23: ret 
0x1eca8: test byte ptr [rbp+0x38],0x10
0x1ecac: mov rcx,qword ptr [rcx]
0x1ecaf: mov rdx,qword ptr [r12+0x8]
0x1ecb4: jnz 0x1ec76
0x1ecc8: mov eax,0x2
0x1eccd: ret 
0x1ecd0: sub rsp,0x8
0x1ecd4: mov r9,rdx
0x1ecd7: push 0x1
0x1ecd9: push r8
0x1ecdb: xor r8d,r8d
0x1ecde: call 0x1e4a0
0x1ece3: add rsp,0x18
0x1ece7: ret 
0x1ecf0: sub rsp,0x8
0x1ecf4: push 0x0
0x1ecf6: push r9
0x1ecf8: mov r9,rdx
0x1ecfb: call 0x1e4a0
0x1ed00: add rsp,0x18
0x1ed04: ret 
0x1ed10: sub rsp,0x8
0x1ed14: push 0x1
0x1ed16: push qword ptr [rsp+0x20]
0x1ed1a: push qword ptr [rsp+0x20]
0x1ed1e: push 0x0
0x1ed20: call 0x1e920
0x1ed25: add rsp,0x28
0x1ed29: ret 
0x1ed30: sub rsp,0x8
0x1ed34: push 0x0
0x1ed36: push qword ptr [rsp+0x28]
0x1ed3a: push qword ptr [rsp+0x28]
0x1ed3e: push qword ptr [rsp+0x28]
0x1ed42: call 0x1e920
0x1ed47: add rsp,0x28
0x1ed4b: ret 
0x1ed50: test rdx,rdx
0x1ed53: jnz 0x1ed78
0x1ed55: and byte ptr [rdi+0x38],0xf9
0x1ed59: mov qword ptr [rsi],0x0
0x1ed60: mov qword ptr [rsi+0x10],0x0
0x1ed68: mov qword ptr [rsi+0x8],0x0
0x1ed70: ret 
0x1ed78: movzx eax,byte ptr [rdi+0x38]
0x1ed7c: and eax,0xfffffff9
0x1ed7f: or eax,0x2
0x1ed82: mov byte ptr [rdi+0x38],al
0x1ed85: mov qword ptr [rsi],rdx
0x1ed88: mov qword ptr [rsi+0x8],rcx
0x1ed8c: mov qword ptr [rsi+0x10],r8
0x1ed90: ret 
0x1f110: cmp rdi,0x1
0x1f114: jz 0x1f11b
0x1f116: jmp 0x1edd0
0x1f11b: ret 
0x1f30c: call 0x2560
0x1f311: nop word ptr cs:[rax+rax*0x1]
0x1f31b: nop dword ptr [rax+rax*0x1]
0x1f320: push r12
0x1f322: push rbp
0x1f323: mov rbp,rdi
0x1f326: push rbx
0x1f327: call 0x2460
0x1f32c: mov ebx,dword ptr [rbp]
0x1f32f: mov rdi,rbp
0x1f332: mov r12,rax
0x1f335: call 0xdca0
0x1f33a: and ebx,0x20
0x1f33d: test ebx,ebx
0x1f33f: jnz 0x1f358
0x1f341: test eax,eax
0x1f343: jz 0x1f34f
0x1f345: test r12,r12
0x1f348: mov eax,0xffffffff
0x1f34d: jz 0x1f388
0x1f34f: pop rbx
0x1f350: pop rbp
0x1f351: pop r12
0x1f353: ret 
0x1f358: test eax,eax
0x1f35a: jnz 0x1f378
0x1f35c: call 0x2410
0x1f361: mov dword ptr [rax],0x0
0x1f367: mov eax,0xffffffff
0x1f36c: pop rbx
0x1f36d: pop rbp
0x1f36e: pop r12
0x1f370: ret 
0x1f378: pop rbx
0x1f379: mov eax,0xffffffff
0x1f37e: pop rbp
0x1f37f: pop r12
0x1f381: ret 
0x1f388: call 0x2410
0x1f38d: cmp dword ptr [rax],0x9
0x1f390: pop rbx
0x1f391: pop rbp
0x1f392: pop r12
0x1f394: setnz al
0x1f397: movzx eax,al
0x1f39a: neg eax
0x1f39c: ret 
0x1f43a: nop word ptr [rax+rax*0x1]
0x1f488: lea rax,[rsp+0x60]
0x1f48d: mov dword ptr [rsp],0x10
0x1f494: mov edx,dword ptr [rsp+0x30]
0x1f498: mov qword ptr [rsp+0x8],rax
0x1f49d: lea rax,[rsp+0x20]
0x1f4a2: mov qword ptr [rsp+0x10],rax
0x1f4a7: jmp 0x1f461
0x1f4a9: call 0x2560
0x1f4ae: nop 
0x1f5be: nop 
0x1f648: lea rax,[rsp+0x60]
0x1f64d: mov dword ptr [rsp],0x18
0x1f654: mov ecx,dword ptr [rsp+0x38]
0x1f658: mov qword ptr [rsp+0x8],rax
0x1f65d: lea rax,[rsp+0x20]
0x1f662: mov qword ptr [rsp+0x10],rax
0x1f667: jmp 0x1f620
0x1f669: call 0x2560
0x1f66e: nop 
0x1f99a: mov rax,qword ptr [rsp+0x8]
0x1f99f: jmp 0x1f869
0x1f9a4: mov rax,qword ptr [rsp+0x8]
0x1f9a9: jmp 0x1f8c1
0x1f9c0: push r15
0x1f9c2: push r14
0x1f9c4: mov r15,rdx
0x1f9c7: push r13
0x1f9c9: push r12
0x1f9cb: lea r12,[rip+0x207c9e]
0x1f9d2: push rbp
0x1f9d3: lea rbp,[rip+0x207c9e]
0x1f9da: push rbx
0x1f9db: mov r13d,edi
0x1f9de: mov r14,rsi
0x1f9e1: sub rbp,r12
0x1f9e4: sub rsp,0x8
0x1f9e8: sar rbp,0x3
0x1f9ec: call 0x2390
0x1f9f1: test rbp,rbp
0x1f9f4: jz 0x1fa16
0x1f9f6: xor ebx,ebx
0x1f9f8: nop dword ptr [rax+rax*0x1]
0x1fa00: mov rdx,r15
0x1fa03: mov rsi,r14
0x1fa06: mov edi,r13d
0x1fa09: call qword ptr [r12+rbx*0x8]
0x1fa0d: add rbx,0x1
0x1fa11: cmp rbp,rbx
0x1fa14: jnz 0x1fa00
0x1fa16: add rsp,0x8
0x1fa1a: pop rbx
0x1fa1b: pop rbp
0x1fa1c: pop r12
0x1fa1e: pop r13
0x1fa20: pop r14
0x1fa22: pop r15
0x1fa24: ret 
0x1fa30: ret 
0x1fa50: sub rsp,0x8
0x1fa54: add rsp,0x8
0x1fa58: ret 
