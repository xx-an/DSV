0x14d8: sub rsp,0x8
0x14dc: mov rax,qword ptr [rip+0x208afd]
0x14e3: test rax,rax
0x14e6: jz 0x14ea
0x14e8: call rax
0x14ea: add rsp,0x8
0x14ee: ret 
0x14f0: push qword ptr [rip+0x20893a]
0x14f6: jmp qword ptr [rip+0x20893c]
0x1506: push 0x0
0x150b: jmp 0x14f0
0x1516: push 0x1
0x151b: jmp 0x14f0
0x1526: push 0x2
0x152b: jmp 0x14f0
0x1536: push 0x3
0x153b: jmp 0x14f0
0x1540: jmp qword ptr [rip+0x20891a]
0x1546: push 0x4
0x154b: jmp 0x14f0
0x1550: jmp qword ptr [rip+0x208912]
0x1556: push 0x5
0x155b: jmp 0x14f0
0x1566: push 0x6
0x156b: jmp 0x14f0
0x1576: push 0x7
0x157b: jmp 0x14f0
0x1580: jmp qword ptr [rip+0x2088fa]
0x1586: push 0x8
0x158b: jmp 0x14f0
0x1596: push 0x9
0x159b: jmp 0x14f0
0x15a6: push 0xa
0x15ab: jmp 0x14f0
0x15b6: push 0xb
0x15bb: jmp 0x14f0
0x15c6: push 0xc
0x15cb: jmp 0x14f0
0x15d0: jmp qword ptr [rip+0x2088d2]
0x15d6: push 0xd
0x15db: jmp 0x14f0
0x15e6: push 0xe
0x15eb: jmp 0x14f0
0x15f6: push 0xf
0x15fb: jmp 0x14f0
0x1606: push 0x10
0x160b: jmp 0x14f0
0x1616: push 0x11
0x161b: jmp 0x14f0
0x1626: push 0x12
0x162b: jmp 0x14f0
0x1630: jmp qword ptr [rip+0x2088a2]
0x1636: push 0x13
0x163b: jmp 0x14f0
0x1646: push 0x14
0x164b: jmp 0x14f0
0x1656: push 0x15
0x165b: jmp 0x14f0
0x1666: push 0x16
0x166b: jmp 0x14f0
0x1676: push 0x17
0x167b: jmp 0x14f0
0x1686: push 0x18
0x168b: jmp 0x14f0
0x1696: push 0x19
0x169b: jmp 0x14f0
0x16a6: push 0x1a
0x16ab: jmp 0x14f0
0x16b0: jmp qword ptr [rip+0x208862]
0x16b6: push 0x1b
0x16bb: jmp 0x14f0
0x16c6: push 0x1c
0x16cb: jmp 0x14f0
0x16d0: jmp qword ptr [rip+0x208852]
0x16d6: push 0x1d
0x16db: jmp 0x14f0
0x16e6: push 0x1e
0x16eb: jmp 0x14f0
0x16f0: jmp qword ptr [rip+0x208842]
0x16f6: push 0x1f
0x16fb: jmp 0x14f0
0x1706: push 0x20
0x170b: jmp 0x14f0
0x1716: push 0x21
0x171b: jmp 0x14f0
0x1720: jmp qword ptr [rip+0x20882a]
0x1726: push 0x22
0x172b: jmp 0x14f0
0x1736: push 0x23
0x173b: jmp 0x14f0
0x1746: push 0x24
0x174b: jmp 0x14f0
0x1756: push 0x25
0x175b: jmp 0x14f0
0x1766: push 0x26
0x176b: jmp 0x14f0
0x1776: push 0x27
0x177b: jmp 0x14f0
0x1786: push 0x28
0x178b: jmp 0x14f0
0x1796: push 0x29
0x179b: jmp 0x14f0
0x17a0: jmp qword ptr [rip+0x2087ea]
0x17a6: push 0x2a
0x17ab: jmp 0x14f0
0x17b6: push 0x2b
0x17bb: jmp 0x14f0
0x17c6: push 0x2c
0x17cb: jmp 0x14f0
0x17d6: push 0x2d
0x17db: jmp 0x14f0
0x17e6: push 0x2e
0x17eb: jmp 0x14f0
0x17f6: push 0x2f
0x17fb: jmp 0x14f0
0x1806: push 0x30
0x180b: jmp 0x14f0
0x1816: push 0x31
0x181b: jmp 0x14f0
0x1820: jmp qword ptr [rip+0x2087ca]
0x1979: nop dword ptr [rax]
0x1cf4: jmp 0x1c5c
0x2017: jmp 0x1c53
0x2720: jmp 0x24e9
0x2764: mov rdi,rbp
0x2767: jmp 0x2373
0x27ef: jmp 0x25f8
0x2826: call 0x15d0
0x284f: jmp 0x196f
0x2947: jmp 0x1c53
0x298a: hlt 
0x2990: lea rdi,[rip+0x207709]
0x2997: push rbp
0x2998: lea rax,[rip+0x207701]
0x299f: cmp rax,rdi
0x29a2: mov rbp,rsp
0x29a5: jz 0x29c0
0x29a7: mov rax,qword ptr [rip+0x207622]
0x29ae: test rax,rax
0x29b1: jz 0x29c0
0x29b3: pop rbp
0x29b4: jmp rax
0x29c0: pop rbp
0x29c1: ret 
0x29d0: lea rdi,[rip+0x2076c9]
0x29d7: lea rsi,[rip+0x2076c2]
0x29de: push rbp
0x29df: sub rsi,rdi
0x29e2: mov rbp,rsp
0x29e5: sar rsi,0x3
0x29e9: mov rax,rsi
0x29ec: shr rax,0x3f
0x29f0: add rsi,rax
0x29f3: sar rsi,1
0x29f6: jz 0x2a10
0x29f8: mov rax,qword ptr [rip+0x2075e9]
0x29ff: test rax,rax
0x2a02: jz 0x2a10
0x2a04: pop rbp
0x2a05: jmp rax
0x2a10: pop rbp
0x2a11: ret 
0x2a20: cmp byte ptr [rip+0x2076c1],0x0
0x2a27: jnz 0x2a58
0x2a29: cmp qword ptr [rip+0x2075bf],0x0
0x2a31: push rbp
0x2a32: mov rbp,rsp
0x2a35: jz 0x2a43
0x2a37: mov rdi,qword ptr [rip+0x2075ca]
0x2a3e: call 0x1820
0x2a43: call 0x2990
0x2a48: mov byte ptr [rip+0x207699],0x1
0x2a4f: pop rbp
0x2a50: ret 
0x2a58: ret 
0x2a60: push rbp
0x2a61: mov rbp,rsp
0x2a64: pop rbp
0x2a65: jmp 0x29d0
0x2b7c: jmp 0x2aff
0x2b7e: call 0x15d0
0x2b83: nop dword ptr [rax]
0x2b86: nop word ptr cs:[rax + rax*0x1]
0x2c08: nop dword ptr [rax + rax*0x1]
0x2cd7: call 0x15d0
0x2cdc: nop dword ptr [rax]
0x2e14: xor eax,eax
0x2e16: jmp 0x2d9c
0x2e62: call 0x15d0
0x2e67: nop word ptr [rax + rax*0x1]
0x2f27: xor eax,eax
0x2f29: jmp 0x2f35
0x2f5a: call 0x15d0
0x2f5f: nop 
0x2fd8: nop dword ptr [rax + rax*0x1]
0x321e: xor eax,eax
0x3220: jmp 0x313a
0x3274: xor eax,eax
0x3276: jmp 0x313a
0x327b: call 0x15d0
0x36b0: mov qword ptr [rip+0x206a41],rdi
0x36b7: ret 
0x36c0: mov byte ptr [rip+0x206a29],dil
0x36c7: ret 
0x36d0: push rbp
0x36d1: push rbx
0x36d2: sub rsp,0x8
0x36d6: mov rdi,qword ptr [rip+0x2069cb]
0x36dd: call 0x6510
0x36e2: test eax,eax
0x36e4: jz 0x36fc
0x36e6: call 0x1520
0x36eb: cmp byte ptr [rip+0x2069fe],0x0
0x36f2: mov rbx,rax
0x36f5: jz 0x3713
0x36f7: cmp dword ptr [rax],0x20
0x36fa: jnz 0x3713
0x36fc: mov rdi,qword ptr [rip+0x2069dd]
0x3703: call 0x6510
0x3708: test eax,eax
0x370a: jnz 0x3752
0x370c: add rsp,0x8
0x3710: pop rbx
0x3711: pop rbp
0x3712: ret 
0x3713: lea rsi,[rip+0x397b]
0x371a: xor edi,edi
0x371c: mov edx,0x5
0x3721: call 0x15a0
0x3726: mov rdi,qword ptr [rip+0x2069cb]
0x372d: mov rbp,rax
0x3730: test rdi,rdi
0x3733: jz 0x375d
0x3735: call 0x5400
0x373a: mov esi,dword ptr [rbx]
0x373c: lea rdx,[rip+0x3277]
0x3743: mov rcx,rax
0x3746: mov r8,rbp
0x3749: xor edi,edi
0x374b: xor eax,eax
0x374d: call 0x1770
0x3752: mov edi,dword ptr [rip+0x2068c8]
0x3758: call 0x1540
0x375d: mov esi,dword ptr [rbx]
0x375f: lea rdx,[rip+0x3258]
0x3766: mov rcx,rax
0x3769: xor edi,edi
0x376b: xor eax,eax
0x376d: call 0x1770
0x3772: jmp 0x3752
0x398f: nop 
0x4c73: call 0x15d0
0x4cb4: nop 
0x4cb6: nop word ptr cs:[rax + rax*0x1]
0x4e61: call 0x1510
0x4e66: call 0x5ef0
0x4e6b: nop dword ptr [rax + rax*0x1]
0x4e70: push r12
0x4e72: push rbp
0x4e73: push rbx
0x4e74: mov rbx,rdi
0x4e77: call 0x1520
0x4e7c: mov r12d,dword ptr [rax]
0x4e7f: mov rbp,rax
0x4e82: lea rax,[rip+0x205397]
0x4e89: test rbx,rbx
0x4e8c: mov esi,0x38
0x4e91: cmovz rbx,rax
0x4e95: mov rdi,rbx
0x4e98: call 0x5ea0
0x4e9d: mov dword ptr [rbp],r12d
0x4ea1: pop rbx
0x4ea2: pop rbp
0x4ea3: pop r12
0x4ea5: ret 
0x4eb0: lea rax,[rip+0x205369]
0x4eb7: test rdi,rdi
0x4eba: cmovz rdi,rax
0x4ebe: mov eax,dword ptr [rdi]
0x4ec0: ret 
0x4ed0: lea rax,[rip+0x205349]
0x4ed7: test rdi,rdi
0x4eda: cmovz rdi,rax
0x4ede: mov dword ptr [rdi],esi
0x4ee0: ret 
0x4ef0: lea rax,[rip+0x205329]
0x4ef7: test rdi,rdi
0x4efa: mov ecx,esi
0x4efc: cmovz rdi,rax
0x4f00: mov eax,esi
0x4f02: and ecx,0x1f
0x4f05: shr al,0x5
0x4f08: movzx eax,al
0x4f0b: lea rdi,[rdi + rax*0x4 + 0x8]
0x4f10: mov esi,dword ptr [rdi]
0x4f12: mov eax,esi
0x4f14: shr eax,cl
0x4f16: xor edx,eax
0x4f18: and eax,0x1
0x4f1b: and edx,0x1
0x4f1e: shl edx,cl
0x4f20: xor edx,esi
0x4f22: mov dword ptr [rdi],edx
0x4f24: ret 
0x4f30: lea rax,[rip+0x2052e9]
0x4f37: test rdi,rdi
0x4f3a: cmovz rdi,rax
0x4f3e: mov eax,dword ptr [rdi + 0x4]
0x4f41: mov dword ptr [rdi + 0x4],esi
0x4f44: ret 
0x4f50: lea rax,[rip+0x2052c9]
0x4f57: test rdi,rdi
0x4f5a: cmovz rdi,rax
0x4f5e: test rsi,rsi
0x4f61: mov dword ptr [rdi],0xa
0x4f67: jz 0x4f77
0x4f69: test rdx,rdx
0x4f6c: jz 0x4f77
0x4f6e: mov qword ptr [rdi + 0x28],rsi
0x4f72: mov qword ptr [rdi + 0x30],rdx
0x4f76: ret 
0x4f77: sub rsp,0x8
0x4f7b: call 0x1510
0x4f80: push r15
0x4f82: push r14
0x4f84: lea rax,[rip+0x205295]
0x4f8b: push r13
0x4f8d: push r12
0x4f8f: mov r13,rdi
0x4f92: push rbp
0x4f93: push rbx
0x4f94: mov rbx,r8
0x4f97: mov r14,rsi
0x4f9a: mov r15,rdx
0x4f9d: sub rsp,0x18
0x4fa1: test r8,r8
0x4fa4: cmovz rbx,rax
0x4fa8: mov qword ptr [rsp + 0x8],rcx
0x4fad: call 0x1520
0x4fb2: mov r12d,dword ptr [rax]
0x4fb5: mov rbp,rax
0x4fb8: lea rax,[rbx + 0x8]
0x4fbc: sub rsp,0x8
0x4fc0: mov r9d,dword ptr [rbx + 0x4]
0x4fc4: push qword ptr [rbx + 0x30]
0x4fc7: mov r8d,dword ptr [rbx]
0x4fca: push qword ptr [rbx + 0x28]
0x4fcd: mov rdx,r15
0x4fd0: push rax
0x4fd1: mov rcx,qword ptr [rsp + 0x28]
0x4fd6: mov rsi,r14
0x4fd9: mov rdi,r13
0x4fdc: call 0x3a80
0x4fe1: mov dword ptr [rbp],r12d
0x4fe5: add rsp,0x38
0x4fe9: pop rbx
0x4fea: pop rbp
0x4feb: pop r12
0x4fed: pop r13
0x4fef: pop r14
0x4ff1: pop r15
0x4ff3: ret 
0x5000: push r15
0x5002: push r14
0x5004: lea rax,[rip+0x205215]
0x500b: push r13
0x500d: push r12
0x500f: mov r12,rdx
0x5012: push rbp
0x5013: push rbx
0x5014: mov rbx,rcx
0x5017: mov r14,rdi
0x501a: mov r15,rsi
0x501d: sub rsp,0x38
0x5021: test rcx,rcx
0x5024: cmovz rbx,rax
0x5028: xor ebp,ebp
0x502a: call 0x1520
0x502f: test r12,r12
0x5032: mov r13,rax
0x5035: mov eax,dword ptr [rax]
0x5037: setz bpl
0x503b: or ebp,dword ptr [rbx + 0x4]
0x503e: lea r10,[rbx + 0x8]
0x5042: sub rsp,0x8
0x5046: mov r8d,dword ptr [rbx]
0x5049: mov rcx,r15
0x504c: mov dword ptr [rsp + 0x14],eax
0x5050: push qword ptr [rbx + 0x30]
0x5053: mov rdx,r14
0x5056: push qword ptr [rbx + 0x28]
0x5059: push r10
0x505b: xor esi,esi
0x505d: mov r9d,ebp
0x5060: xor edi,edi
0x5062: mov qword ptr [rsp + 0x40],r10
0x5067: call 0x3a80
0x506c: lea rsi,[rax + 0x1]
0x5070: mov qword ptr [rsp + 0x48],rax
0x5075: add rsp,0x20
0x5079: mov rdi,rsi
0x507c: mov qword ptr [rsp + 0x18],rsi
0x5081: call 0x5ca0
0x5086: mov qword ptr [rsp + 0x10],rax
0x508b: sub rsp,0x8
0x508f: push qword ptr [rbx + 0x30]
0x5092: push qword ptr [rbx + 0x28]
0x5095: mov r10,qword ptr [rsp + 0x38]
0x509a: mov r9d,ebp
0x509d: mov r8d,dword ptr [rbx]
0x50a0: mov rcx,r15
0x50a3: mov rdx,r14
0x50a6: mov rdi,rax
0x50a9: push r10
0x50ab: mov rsi,qword ptr [rsp + 0x38]
0x50b0: call 0x3a80
0x50b5: mov eax,dword ptr [rsp + 0x2c]
0x50b9: add rsp,0x20
0x50bd: test r12,r12
0x50c0: mov dword ptr [r13],eax
0x50c4: jz 0x50cf
0x50c6: mov r11,qword ptr [rsp + 0x28]
0x50cb: mov qword ptr [r12],r11
0x50cf: mov rax,qword ptr [rsp + 0x10]
0x50d4: add rsp,0x38
0x50d8: pop rbx
0x50d9: pop rbp
0x50da: pop r12
0x50dc: pop r13
0x50de: pop r14
0x50e0: pop r15
0x50e2: ret 
0x50f0: mov rcx,rdx
0x50f3: xor edx,edx
0x50f5: jmp 0x5000
0x5100: mov eax,dword ptr [rip+0x204f72]
0x5106: push r12
0x5108: mov r12,qword ptr [rip+0x204f71]
0x510f: push rbp
0x5110: push rbx
0x5111: cmp eax,0x1
0x5114: jle 0x5141
0x5116: sub eax,0x2
0x5119: lea rbx,[r12 + 0x18]
0x511e: shl rax,0x4
0x5122: lea rbp,[r12 + rax*0x1 + 0x28]
0x5127: nop word ptr [rax + rax*0x1]
0x5130: mov rdi,qword ptr [rbx]
0x5133: add rbx,0x10
0x5137: call 0x1500
0x513c: cmp rbx,rbp
0x513f: jnz 0x5130
0x5141: mov rdi,qword ptr [r12 + 0x8]
0x5146: lea rbx,[rip+0x204fd3]
0x514d: cmp rdi,rbx
0x5150: jz 0x5169
0x5152: call 0x1500
0x5157: mov qword ptr [rip+0x204f2e],0x100
0x5162: mov qword ptr [rip+0x204f2f],rbx
0x5169: lea rbx,[rip+0x204f20]
0x5170: cmp r12,rbx
0x5173: jz 0x5184
0x5175: mov rdi,r12
0x5178: call 0x1500
0x517d: mov qword ptr [rip+0x204efc],rbx
0x5184: pop rbx
0x5185: mov dword ptr [rip+0x204ee9],0x1
0x518f: pop rbp
0x5190: pop r12
0x5192: ret 
0x51a0: lea rcx,[rip+0x205079]
0x51a7: mov rdx,-0x1
0x51ae: jmp 0x4cc0
0x51c0: lea rcx,[rip+0x205059]
0x51c7: jmp 0x4cc0
0x51d0: lea rcx,[rip+0x205049]
0x51d7: mov rsi,rdi
0x51da: mov rdx,-0x1
0x51e1: xor edi,edi
0x51e3: jmp 0x4cc0
0x51f0: lea rcx,[rip+0x205029]
0x51f7: mov rdx,rsi
0x51fa: mov rsi,rdi
0x51fd: xor edi,edi
0x51ff: jmp 0x4cc0
0x5294: call 0x1510
0x5299: call 0x15d0
0x529e: nop 
0x52a0: sub rsp,0x48
0x52a4: mov rax,rdx
0x52a7: mov rdx,rcx
0x52aa: mov rcx,qword ptr fs:[rip+0xffffffffffffad75]
0x52b3: mov qword ptr [rsp + 0x38],rcx
0x52b8: xor ecx,ecx
0x52ba: cmp esi,0xa
0x52bd: jz 0x5320
0x52bf: mov dword ptr [rsp],esi
0x52c2: mov rcx,rsp
0x52c5: mov rsi,rax
0x52c8: mov qword ptr [rsp + 0x4],0x0
0x52d1: mov qword ptr [rsp + 0xc],0x0
0x52da: mov qword ptr [rsp + 0x14],0x0
0x52e3: mov qword ptr [rsp + 0x1c],0x0
0x52ec: mov qword ptr [rsp + 0x24],0x0
0x52f5: mov qword ptr [rsp + 0x2c],0x0
0x52fe: mov dword ptr [rsp + 0x34],0x0
0x5306: call 0x4cc0
0x530b: mov rdx,qword ptr [rsp + 0x38]
0x5310: xor rdx,qword ptr fs:[rip+0xffffffffffffad0f]
0x5319: jnz 0x5325
0x531b: add rsp,0x48
0x531f: ret 
0x5320: call 0x1510
0x5325: call 0x15d0
0x532a: nop word ptr [rax + rax*0x1]
0x5340: mov rcx,rdx
0x5343: mov rdx,rsi
0x5346: mov esi,edi
0x5348: xor edi,edi
0x534a: jmp 0x52a0
0x5350: sub rsp,0x48
0x5354: mov ecx,edx
0x5356: mov rax,qword ptr fs:[rip+0xffffffffffffacc9]
0x535f: mov qword ptr [rsp + 0x38],rax
0x5364: xor eax,eax
0x5366: mov rax,qword ptr [rip+0x204ee3]
0x536d: mov r8,rsp
0x5370: and ecx,0x1f
0x5373: movdqa xmm0,[rip+0x204ea5]
0x537b: mov qword ptr [rsp + 0x30],rax
0x5380: mov eax,edx
0x5382: movaps xmmword ptr [rsp],xmm0
0x5386: shr al,0x5
0x5389: movzx eax,al
0x538c: lea r9,[r8 + rax*0x4 + 0x8]
0x5391: movdqa xmm0,[rip+0x204e97]
0x5399: movaps xmmword ptr [rsp + 0x10],xmm0
0x539e: movdqa xmm0,[rip+0x204e9a]
0x53a6: movaps xmmword ptr [rsp + 0x20],xmm0
0x53ab: mov edx,dword ptr [r9]
0x53ae: mov eax,edx
0x53b0: shr eax,cl
0x53b2: not eax
0x53b4: and eax,0x1
0x53b7: shl eax,cl
0x53b9: mov rcx,r8
0x53bc: xor eax,edx
0x53be: mov rdx,rsi
0x53c1: mov rsi,rdi
0x53c4: mov dword ptr [r9],eax
0x53c7: xor edi,edi
0x53c9: call 0x4cc0
0x53ce: mov rsi,qword ptr [rsp + 0x38]
0x53d3: xor rsi,qword ptr fs:[rip+0xffffffffffffac4c]
0x53dc: jnz 0x53e3
0x53de: add rsp,0x48
0x53e2: ret 
0x53e3: call 0x15d0
0x53e8: nop dword ptr [rax + rax*0x1]
0x53f0: movsx edx,sil
0x53f4: mov rsi,-0x1
0x53fb: jmp 0x5350
0x5400: mov edx,0x3a
0x5405: mov rsi,-0x1
0x540c: jmp 0x5350
0x5420: mov edx,0x3a
0x5425: jmp 0x5350
0x54b4: call 0x1510
0x54b9: call 0x15d0
0x54be: nop 
0x54c0: sub rsp,0x48
0x54c4: mov r9,rcx
0x54c7: mov rcx,qword ptr [rip+0x204d82]
0x54ce: movdqa xmm0,[rip+0x204d4a]
0x54d6: mov rax,qword ptr fs:[rip+0xffffffffffffab49]
0x54df: mov qword ptr [rsp + 0x38],rax
0x54e4: xor eax,eax
0x54e6: movaps xmmword ptr [rsp],xmm0
0x54ea: test rsi,rsi
0x54ed: mov qword ptr [rsp + 0x30],rcx
0x54f2: mov dword ptr [rsp],0xa
0x54f9: movdqa xmm0,[rip+0x204d2f]
0x5501: movaps xmmword ptr [rsp + 0x10],xmm0
0x5506: movdqa xmm0,[rip+0x204d32]
0x550e: movaps xmmword ptr [rsp + 0x20],xmm0
0x5513: jz 0x5547
0x5515: test rdx,rdx
0x5518: jz 0x5547
0x551a: mov qword ptr [rsp + 0x28],rsi
0x551f: mov qword ptr [rsp + 0x30],rdx
0x5524: mov rcx,rsp
0x5527: mov rdx,r8
0x552a: mov rsi,r9
0x552d: call 0x4cc0
0x5532: mov rdi,qword ptr [rsp + 0x38]
0x5537: xor rdi,qword ptr fs:[rip+0xffffffffffffaae8]
0x5540: jnz 0x554c
0x5542: add rsp,0x48
0x5546: ret 
0x5547: call 0x1510
0x554c: call 0x15d0
0x5551: nop dword ptr [rax + rax*0x1]
0x5556: nop word ptr cs:[rax + rax*0x1]
0x5560: mov r8,-0x1
0x5567: jmp 0x54c0
0x5570: mov rcx,rdx
0x5573: mov r8,-0x1
0x557a: mov rdx,rsi
0x557d: mov rsi,rdi
0x5580: xor edi,edi
0x5582: jmp 0x54c0
0x5590: mov r8,rcx
0x5593: mov rcx,rdx
0x5596: mov rdx,rsi
0x5599: mov rsi,rdi
0x559c: xor edi,edi
0x559e: jmp 0x54c0
0x55b0: lea rcx,[rip+0x204a89]
0x55b7: jmp 0x4cc0
0x55c0: lea rcx,[rip+0x204a79]
0x55c7: mov rdx,rsi
0x55ca: mov rsi,rdi
0x55cd: xor edi,edi
0x55cf: jmp 0x4cc0
0x55e0: lea rcx,[rip+0x204a59]
0x55e7: mov rdx,-0x1
0x55ee: jmp 0x4cc0
0x57b8: mov r8,rcx
0x57bb: mov rcx,rdx
0x57be: lea rdx,[rip+0x1e0f]
0x57c5: mov esi,0x1
0x57ca: xor eax,eax
0x57cc: call 0x17e0
0x57d1: jmp 0x56bc
0x5aa0: xor r9d,r9d
0x5aa3: cmp qword ptr [r8],0x0
0x5aa7: jz 0x5abb
0x5aa9: nop dword ptr [rax]
0x5ab0: add r9,0x1
0x5ab4: cmp qword ptr [r8 + r9*0x8],0x0
0x5ab9: jnz 0x5ab0
0x5abb: jmp 0x5680
0x5ac0: sub rsp,0x68
0x5ac4: mov r10,r8
0x5ac7: xor r9d,r9d
0x5aca: mov rax,qword ptr fs:[rip+0xffffffffffffa555]
0x5ad3: mov qword ptr [rsp + 0x58],rax
0x5ad8: xor eax,eax
0x5ada: mov r8,rsp
0x5add: nop dword ptr [rax]
0x5ae0: mov eax,dword ptr [r10]
0x5ae3: cmp eax,0x2f
0x5ae6: ja 0x5b2a
0x5ae8: mov r11d,eax
0x5aeb: add r11,qword ptr [r10 + 0x10]
0x5aef: add eax,0x8
0x5af2: mov dword ptr [r10],eax
0x5af5: mov rax,qword ptr [r11]
0x5af8: test rax,rax
0x5afb: mov qword ptr [r8 + r9*0x8],rax
0x5aff: jz 0x5b0b
0x5b01: add r9,0x1
0x5b05: cmp r9,0xa
0x5b09: jnz 0x5ae0
0x5b0b: call 0x5680
0x5b10: mov rax,qword ptr [rsp + 0x58]
0x5b15: xor rax,qword ptr fs:[rip+0xffffffffffffa50a]
0x5b1e: jnz 0x5b25
0x5b20: add rsp,0x68
0x5b24: ret 
0x5b25: call 0x15d0
0x5b2a: mov r11,qword ptr [r10 + 0x8]
0x5b2e: lea rax,[r11 + 0x8]
0x5b32: mov qword ptr [r10 + 0x8],rax
0x5b36: jmp 0x5af5
0x5c00: call 0x15d0
0x5c0c: mov rax,rbx
0x5c0f: add rbx,0x8
0x5c13: jmp 0x5bc6
0x5c20: push rbx
0x5c21: lea rsi,[rip+0x19fa]
0x5c28: mov edx,0x5
0x5c2d: xor edi,edi
0x5c2f: call 0x15a0
0x5c34: lea rdx,[rip+0x19fc]
0x5c3b: mov rsi,rax
0x5c3e: mov edi,0x1
0x5c43: xor eax,eax
0x5c45: call 0x1760
0x5c4a: lea rsi,[rip+0x19fc]
0x5c51: mov edx,0x5
0x5c56: xor edi,edi
0x5c58: call 0x15a0
0x5c5d: lea rcx,[rip+0x1324]
0x5c64: lea rdx,[rip+0xcbd]
0x5c6b: mov rsi,rax
0x5c6e: mov edi,0x1
0x5c73: xor eax,eax
0x5c75: call 0x1760
0x5c7a: mov rbx,qword ptr [rip+0x204427]
0x5c81: lea rsi,[rip+0x1bf8]
0x5c88: xor edi,edi
0x5c8a: mov edx,0x5
0x5c8f: call 0x15a0
0x5c94: mov rsi,rbx
0x5c97: mov rdi,rax
0x5c9a: pop rbx
0x5c9b: jmp 0x16a0
0x5cba: nop word ptr [rax + rax*0x1]
0x5cc0: mov rax,rdi
0x5cc3: mul rsi
0x5cc6: mov rdi,rax
0x5cc9: seto al
0x5ccc: test rdi,rdi
0x5ccf: js 0x5cdb
0x5cd1: movzx eax,al
0x5cd4: test rax,rax
0x5cd7: jnz 0x5cdb
0x5cd9: jmp 0x5ca0
0x5cdb: sub rsp,0x8
0x5cdf: call 0x5ef0
0x5ce4: nop 
0x5ce6: nop word ptr cs:[rax + rax*0x1]
0x5cf0: jmp 0x5ca0
0x5d09: test rdi,rdi
0x5d0c: jnz 0x5d28
0x5d28: call 0x1500
0x5d2d: xor eax,eax
0x5d2f: pop rbx
0x5d30: ret 
0x5d36: nop word ptr cs:[rax + rax*0x1]
0x5d40: mov rax,rsi
0x5d43: mul rdx
0x5d46: mov rsi,rax
0x5d49: seto al
0x5d4c: test rsi,rsi
0x5d4f: js 0x5d5b
0x5d51: movzx eax,al
0x5d54: test rax,rax
0x5d57: jnz 0x5d5b
0x5d59: jmp 0x5d00
0x5d5b: sub rsp,0x8
0x5d5f: call 0x5ef0
0x5d64: nop 
0x5d66: nop word ptr cs:[rax + rax*0x1]
0x5d70: test rdi,rdi
0x5d73: mov r9,rdx
0x5d76: mov rcx,qword ptr [rsi]
0x5d79: jz 0x5db0
0x5d7b: xor edx,edx
0x5d7d: mov rax,0x5555555555555554
0x5d87: div r9
0x5d8a: cmp rax,rcx
0x5d8d: jbe 0x5dcb
0x5d8f: mov rax,rcx
0x5d92: shr rax,1
0x5d95: lea rcx,[rax + rcx*0x1 + 0x1]
0x5d9a: mov qword ptr [rsi],rcx
0x5d9d: imul rcx,r9
0x5da1: mov rsi,rcx
0x5da4: jmp 0x5d00
0x5db0: test rcx,rcx
0x5db3: jz 0x5dd8
0x5db5: mov rax,rcx
0x5db8: mul r9
0x5dbb: seto dl
0x5dbe: test rax,rax
0x5dc1: movzx edx,dl
0x5dc4: js 0x5dcb
0x5dc6: test rdx,rdx
0x5dc9: jz 0x5d9a
0x5dcb: sub rsp,0x8
0x5dcf: call 0x5ef0
0x5dd4: nop dword ptr [rax]
0x5dd8: xor edx,edx
0x5dda: mov eax,0x80
0x5ddf: xor r8d,r8d
0x5de2: div r9
0x5de5: test rax,rax
0x5de8: setz r8b
0x5dec: lea rcx,[r8 + rax*0x1]
0x5df0: jmp 0x5db5
0x5e00: test rdi,rdi
0x5e03: mov rax,qword ptr [rsi]
0x5e06: jz 0x5e30
0x5e08: mov rdx,0x5555555555555553
0x5e12: cmp rax,rdx
0x5e15: ja 0x5e41
0x5e17: mov rdx,rax
0x5e1a: shr rdx,1
0x5e1d: lea rax,[rdx + rax*0x1 + 0x1]
0x5e22: mov qword ptr [rsi],rax
0x5e25: mov rsi,rax
0x5e28: jmp 0x5d00
0x5e30: test rax,rax
0x5e33: mov edx,0x80
0x5e38: cmovz rax,rdx
0x5e3c: test rax,rax
0x5e3f: jns 0x5e22
0x5e41: sub rsp,0x8
0x5e45: call 0x5ef0
0x5e4a: nop word ptr [rax + rax*0x1]
0x5e50: push rbx
0x5e51: mov rbx,rdi
0x5e54: call 0x5ca0
0x5e59: mov rdx,rbx
0x5e5c: xor esi,esi
0x5e5e: mov rdi,rax
0x5e61: pop rbx
0x5e62: jmp 0x1650
0x5e70: mov rax,rdi
0x5e73: sub rsp,0x8
0x5e77: mul rsi
0x5e7a: seto dl
0x5e7d: test rax,rax
0x5e80: js 0x5e99
0x5e82: movzx edx,dl
0x5e85: test rdx,rdx
0x5e88: jnz 0x5e99
0x5e8a: call 0x16b0
0x5e8f: test rax,rax
0x5e92: jz 0x5e99
0x5e94: add rsp,0x8
0x5e98: ret 
0x5e99: call 0x5ef0
0x5e9e: nop 
0x5ea0: push rbp
0x5ea1: push rbx
0x5ea2: mov rbp,rdi
0x5ea5: mov rdi,rsi
0x5ea8: mov rbx,rsi
0x5eab: sub rsp,0x8
0x5eaf: call 0x5ca0
0x5eb4: add rsp,0x8
0x5eb8: mov rdx,rbx
0x5ebb: mov rsi,rbp
0x5ebe: pop rbx
0x5ebf: pop rbp
0x5ec0: mov rdi,rax
0x5ec3: jmp 0x16c0
0x5ed0: push rbx
0x5ed1: mov rbx,rdi
0x5ed4: call 0x15c0
0x5ed9: mov rdi,rbx
0x5edc: lea rsi,[rax + 0x1]
0x5ee0: pop rbx
0x5ee1: jmp 0x5ea0
0x5f20: call 0x1510
0x5f25: nop word ptr cs:[rax + rax*0x1]
0x5f2f: nop 
0x5fd0: mov rbp,qword ptr [rsp]
0x602b: call 0x15d0
0x6106: cmp eax,0x22
0x6109: mov ebp,0x1
0x610e: jnz 0x6138
0x6132: nop word ptr [rax + rax*0x1]
0x63e0: call 0x15d0
0x63e5: lea rcx,[rip+0x1674]
0x63ec: lea rsi,[rip+0x154d]
0x63f3: lea rdi,[rip+0x1566]
0x63fa: mov edx,0x54
0x63ff: call 0x1630
0x64fe: call 0x15d0
0x6503: nop word ptr cs:[rax + rax*0x1]
0x650d: nop dword ptr [rax]
0x6510: push r12
0x6512: push rbp
0x6513: mov rbp,rdi
0x6516: push rbx
0x6517: call 0x1550
0x651c: mov ebx,dword ptr [rbp]
0x651f: mov rdi,rbp
0x6522: mov r12,rax
0x6525: call 0x6630
0x652a: and ebx,0x20
0x652d: test ebx,ebx
0x652f: jnz 0x6548
0x6531: test eax,eax
0x6533: jz 0x653f
0x6535: test r12,r12
0x6538: mov eax,0xffffffff
0x653d: jz 0x6578
0x653f: pop rbx
0x6540: pop rbp
0x6541: pop r12
0x6543: ret 
0x6548: test eax,eax
0x654a: jnz 0x6568
0x654c: call 0x1520
0x6551: mov dword ptr [rax],0x0
0x6557: mov eax,0xffffffff
0x655c: pop rbx
0x655d: pop rbp
0x655e: pop r12
0x6560: ret 
0x6568: pop rbx
0x6569: mov eax,0xffffffff
0x656e: pop rbp
0x656f: pop r12
0x6571: ret 
0x6578: call 0x1520
0x657d: cmp dword ptr [rax],0x9
0x6580: pop rbx
0x6581: pop rbp
0x6582: pop r12
0x6584: setnz al
0x6587: movzx eax,al
0x658a: neg eax
0x658c: ret 
0x6630: push r12
0x6632: push rbp
0x6633: push rbx
0x6634: mov rbx,rdi
0x6637: call 0x16d0
0x663c: test eax,eax
0x663e: mov rdi,rbx
0x6641: js 0x6697
0x6643: call 0x1720
0x6648: test eax,eax
0x664a: jnz 0x6678
0x664c: mov rdi,rbx
0x664f: call 0x66b0
0x6654: test eax,eax
0x6656: jz 0x6694
0x6658: call 0x1520
0x665d: mov r12d,dword ptr [rax]
0x6660: mov rdi,rbx
0x6663: mov rbp,rax
0x6666: call 0x1580
0x666b: test r12d,r12d
0x666e: jnz 0x66a0
0x6670: pop rbx
0x6671: pop rbp
0x6672: pop r12
0x6674: ret 
0x6678: mov rdi,rbx
0x667b: call 0x16d0
0x6680: xor esi,esi
0x6682: mov edx,0x1
0x6687: mov edi,eax
0x6689: call 0x1620
0x668e: cmp rax,-0x1
0x6692: jnz 0x664c
0x6694: mov rdi,rbx
0x6697: pop rbx
0x6698: pop rbp
0x6699: pop r12
0x669b: jmp 0x1580
0x66a0: mov dword ptr [rbp],r12d
0x66a4: mov eax,0xffffffff
0x66a9: jmp 0x6670
0x66b0: test rdi,rdi
0x66b3: push rbx
0x66b4: mov rbx,rdi
0x66b7: jz 0x66ca
0x66b9: call 0x1720
0x66be: test eax,eax
0x66c0: jz 0x66ca
0x66c2: test dword ptr [rbx],0x100
0x66c8: jnz 0x66d8
0x66ca: mov rdi,rbx
0x66cd: pop rbx
0x66ce: jmp 0x16f0
0x66d8: mov rdi,rbx
0x66db: mov edx,0x1
0x66e0: xor esi,esi
0x66e2: call 0x66f0
0x66e7: mov rdi,rbx
0x66ea: pop rbx
0x66eb: jmp 0x16f0
0x66f0: mov rax,qword ptr [rdi + 0x8]
0x66f4: cmp qword ptr [rdi + 0x10],rax
0x66f8: jz 0x6700
0x66fa: jmp 0x17a0
0x6700: mov rax,qword ptr [rdi + 0x20]
0x6704: cmp qword ptr [rdi + 0x28],rax
0x6708: jnz 0x66fa
0x670a: cmp qword ptr [rdi + 0x48],0x0
0x670f: jnz 0x66fa
0x6711: push r12
0x6713: push rbp
0x6714: mov r12d,edx
0x6717: push rbx
0x6718: mov rbp,rsi
0x671b: mov rbx,rdi
0x671e: call 0x16d0
0x6723: mov edx,r12d
0x6726: mov rsi,rbp
0x6729: mov edi,eax
0x672b: call 0x1620
0x6730: cmp rax,-0x1
0x6734: jz 0x6742
0x6736: and dword ptr [rbx],0xffffffef
0x6739: mov qword ptr [0x90 + rbx],rax
0x6740: xor eax,eax
0x6742: pop rbx
0x6743: pop rbp
0x6744: pop r12
0x6746: ret 
0x6750: push r15
0x6752: push r14
0x6754: mov r15,rdx
0x6757: push r13
0x6759: push r12
0x675b: lea r12,[rip+0x20330e]
0x6762: push rbp
0x6763: lea rbp,[rip+0x20330e]
0x676a: push rbx
0x676b: mov r13d,edi
0x676e: mov r14,rsi
0x6771: sub rbp,r12
0x6774: sub rsp,0x8
0x6778: sar rbp,0x3
0x677c: call 0x14d8
0x6781: test rbp,rbp
0x6784: jz 0x67a6
0x6786: xor ebx,ebx
0x6788: nop dword ptr [rax + rax*0x1]
0x6790: mov rdx,r15
0x6793: mov rsi,r14
0x6796: mov edi,r13d
0x6799: call qword ptr [r12 + rbx*0x8]
0x679d: add rbx,0x1
0x67a1: cmp rbp,rbx
0x67a4: jnz 0x6790
0x67a6: add rsp,0x8
0x67aa: pop rbx
0x67ab: pop rbp
0x67ac: pop r12
0x67ae: pop r13
0x67b0: pop r14
0x67b2: pop r15
0x67b4: ret 
0x67c0: ret 
0x67e0: sub rsp,0x8
0x67e4: add rsp,0x8
0x67e8: ret 
