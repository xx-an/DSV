
switch_input:     file format elf64-x86-64


Disassembly of section .init:

0000000000000658 <_init>:
 658:	48 83 ec 08          	sub    rsp,0x8
 65c:	48 8b 05 7d 09 20 00 	mov    rax,QWORD PTR [rip+0x20097d]        # 200fe0 <__gmon_start__>
 663:	48 85 c0             	test   rax,rax
 666:	74 02                	je     66a <_init+0x12>
 668:	ff d0                	call   rax
 66a:	48 83 c4 08          	add    rsp,0x8
 66e:	c3                   	ret    

Disassembly of section .plt:

0000000000000670 <.plt>:
 670:	ff 35 22 09 20 00    	push   QWORD PTR [rip+0x200922]        # 200f98 <_GLOBAL_OFFSET_TABLE_+0x8>
 676:	ff 25 24 09 20 00    	jmp    QWORD PTR [rip+0x200924]        # 200fa0 <_GLOBAL_OFFSET_TABLE_+0x10>
 67c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000000680 <puts@plt>:
 680:	ff 25 22 09 20 00    	jmp    QWORD PTR [rip+0x200922]        # 200fa8 <puts@GLIBC_2.2.5>
 686:	68 00 00 00 00       	push   0x0
 68b:	e9 e0 ff ff ff       	jmp    670 <.plt>

0000000000000690 <getopt_long@plt>:
 690:	ff 25 1a 09 20 00    	jmp    QWORD PTR [rip+0x20091a]        # 200fb0 <getopt_long@GLIBC_2.2.5>
 696:	68 01 00 00 00       	push   0x1
 69b:	e9 d0 ff ff ff       	jmp    670 <.plt>

00000000000006a0 <printf@plt>:
 6a0:	ff 25 12 09 20 00    	jmp    QWORD PTR [rip+0x200912]        # 200fb8 <printf@GLIBC_2.2.5>
 6a6:	68 02 00 00 00       	push   0x2
 6ab:	e9 c0 ff ff ff       	jmp    670 <.plt>

00000000000006b0 <exit@plt>:
 6b0:	ff 25 0a 09 20 00    	jmp    QWORD PTR [rip+0x20090a]        # 200fc0 <exit@GLIBC_2.2.5>
 6b6:	68 03 00 00 00       	push   0x3
 6bb:	e9 b0 ff ff ff       	jmp    670 <.plt>

00000000000006c0 <sleep@plt>:
 6c0:	ff 25 02 09 20 00    	jmp    QWORD PTR [rip+0x200902]        # 200fc8 <sleep@GLIBC_2.2.5>
 6c6:	68 04 00 00 00       	push   0x4
 6cb:	e9 a0 ff ff ff       	jmp    670 <.plt>

Disassembly of section .plt.got:

00000000000006d0 <__cxa_finalize@plt>:
 6d0:	ff 25 1a 09 20 00    	jmp    QWORD PTR [rip+0x20091a]        # 200ff0 <__cxa_finalize@GLIBC_2.2.5>
 6d6:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000000000006e0 <_start>:
 6e0:	31 ed                	xor    ebp,ebp
 6e2:	49 89 d1             	mov    r9,rdx
 6e5:	5e                   	pop    rsi
 6e6:	48 89 e2             	mov    rdx,rsp
 6e9:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
 6ed:	50                   	push   rax
 6ee:	54                   	push   rsp
 6ef:	4c 8d 05 ea 02 00 00 	lea    r8,[rip+0x2ea]        # 9e0 <__libc_csu_fini>
 6f6:	48 8d 0d 73 02 00 00 	lea    rcx,[rip+0x273]        # 970 <__libc_csu_init>
 6fd:	48 8d 3d 5c 01 00 00 	lea    rdi,[rip+0x15c]        # 860 <main>
 704:	ff 15 ce 08 20 00    	call   QWORD PTR [rip+0x2008ce]        # 200fd8 <__libc_start_main@GLIBC_2.2.5>
 70a:	f4                   	hlt    
 70b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000000710 <deregister_tm_clones>:
 710:	48 8d 3d f9 08 20 00 	lea    rdi,[rip+0x2008f9]        # 201010 <optind@@GLIBC_2.2.5>
 717:	55                   	push   rbp
 718:	48 8d 05 f1 08 20 00 	lea    rax,[rip+0x2008f1]        # 201010 <optind@@GLIBC_2.2.5>
 71f:	48 39 f8             	cmp    rax,rdi
 722:	48 89 e5             	mov    rbp,rsp
 725:	74 19                	je     740 <deregister_tm_clones+0x30>
 727:	48 8b 05 a2 08 20 00 	mov    rax,QWORD PTR [rip+0x2008a2]        # 200fd0 <_ITM_deregisterTMCloneTable>
 72e:	48 85 c0             	test   rax,rax
 731:	74 0d                	je     740 <deregister_tm_clones+0x30>
 733:	5d                   	pop    rbp
 734:	ff e0                	jmp    rax
 736:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 73d:	00 00 00 
 740:	5d                   	pop    rbp
 741:	c3                   	ret    
 742:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 746:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 74d:	00 00 00 

0000000000000750 <register_tm_clones>:
 750:	48 8d 3d b9 08 20 00 	lea    rdi,[rip+0x2008b9]        # 201010 <optind@@GLIBC_2.2.5>
 757:	48 8d 35 b2 08 20 00 	lea    rsi,[rip+0x2008b2]        # 201010 <optind@@GLIBC_2.2.5>
 75e:	55                   	push   rbp
 75f:	48 29 fe             	sub    rsi,rdi
 762:	48 89 e5             	mov    rbp,rsp
 765:	48 c1 fe 03          	sar    rsi,0x3
 769:	48 89 f0             	mov    rax,rsi
 76c:	48 c1 e8 3f          	shr    rax,0x3f
 770:	48 01 c6             	add    rsi,rax
 773:	48 d1 fe             	sar    rsi,1
 776:	74 18                	je     790 <register_tm_clones+0x40>
 778:	48 8b 05 69 08 20 00 	mov    rax,QWORD PTR [rip+0x200869]        # 200fe8 <_ITM_registerTMCloneTable>
 77f:	48 85 c0             	test   rax,rax
 782:	74 0c                	je     790 <register_tm_clones+0x40>
 784:	5d                   	pop    rbp
 785:	ff e0                	jmp    rax
 787:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
 78e:	00 00 
 790:	5d                   	pop    rbp
 791:	c3                   	ret    
 792:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 796:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 79d:	00 00 00 

00000000000007a0 <__do_global_dtors_aux>:
 7a0:	80 3d 6d 08 20 00 00 	cmp    BYTE PTR [rip+0x20086d],0x0        # 201014 <completed.7698>
 7a7:	75 2f                	jne    7d8 <__do_global_dtors_aux+0x38>
 7a9:	48 83 3d 3f 08 20 00 	cmp    QWORD PTR [rip+0x20083f],0x0        # 200ff0 <__cxa_finalize@GLIBC_2.2.5>
 7b0:	00 
 7b1:	55                   	push   rbp
 7b2:	48 89 e5             	mov    rbp,rsp
 7b5:	74 0c                	je     7c3 <__do_global_dtors_aux+0x23>
 7b7:	48 8b 3d 4a 08 20 00 	mov    rdi,QWORD PTR [rip+0x20084a]        # 201008 <__dso_handle>
 7be:	e8 0d ff ff ff       	call   6d0 <__cxa_finalize@plt>
 7c3:	e8 48 ff ff ff       	call   710 <deregister_tm_clones>
 7c8:	c6 05 45 08 20 00 01 	mov    BYTE PTR [rip+0x200845],0x1        # 201014 <completed.7698>
 7cf:	5d                   	pop    rbp
 7d0:	c3                   	ret    
 7d1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
 7d8:	f3 c3                	repz ret 
 7da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000007e0 <frame_dummy>:
 7e0:	55                   	push   rbp
 7e1:	48 89 e5             	mov    rbp,rsp
 7e4:	5d                   	pop    rbp
 7e5:	e9 66 ff ff ff       	jmp    750 <register_tm_clones>

00000000000007ea <missing_argument>:
 7ea:	55                   	push   rbp
 7eb:	48 89 e5             	mov    rbp,rsp
 7ee:	48 83 ec 10          	sub    rsp,0x10
 7f2:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 7f6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 7fa:	48 89 c6             	mov    rsi,rax
 7fd:	48 8d 3d f4 01 00 00 	lea    rdi,[rip+0x1f4]        # 9f8 <_IO_stdin_used+0x8>
 804:	b8 00 00 00 00       	mov    eax,0x0
 809:	e8 92 fe ff ff       	call   6a0 <printf@plt>
 80e:	bf 01 00 00 00       	mov    edi,0x1
 813:	e8 98 fe ff ff       	call   6b0 <exit@plt>

0000000000000818 <unrecognized_option>:
 818:	55                   	push   rbp
 819:	48 89 e5             	mov    rbp,rsp
 81c:	48 83 ec 10          	sub    rsp,0x10
 820:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 824:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 828:	48 89 c6             	mov    rsi,rax
 82b:	48 8d 3d e8 01 00 00 	lea    rdi,[rip+0x1e8]        # a1a <_IO_stdin_used+0x2a>
 832:	b8 00 00 00 00       	mov    eax,0x0
 837:	e8 64 fe ff ff       	call   6a0 <printf@plt>
 83c:	bf 01 00 00 00       	mov    edi,0x1
 841:	e8 6a fe ff ff       	call   6b0 <exit@plt>

0000000000000846 <help>:
 846:	55                   	push   rbp
 847:	48 89 e5             	mov    rbp,rsp
 84a:	48 8d 3d e3 01 00 00 	lea    rdi,[rip+0x1e3]        # a34 <_IO_stdin_used+0x44>
 851:	e8 2a fe ff ff       	call   680 <puts@plt>
 856:	bf 00 00 00 00       	mov    edi,0x0
 85b:	e8 50 fe ff ff       	call   6b0 <exit@plt>

0000000000000860 <main>:
 860:	55                   	push   rbp
 861:	48 89 e5             	mov    rbp,rsp
 864:	48 83 ec 20          	sub    rsp,0x20
 868:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
 86b:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
 86f:	83 7d ec 01          	cmp    DWORD PTR [rbp-0x14],0x1
 873:	7f 0a                	jg     87f <main+0x1f>
 875:	bf 01 00 00 00       	mov    edi,0x1
 87a:	e8 31 fe ff ff       	call   6b0 <exit@plt>
 87f:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
 883:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
 886:	41 b8 00 00 00 00    	mov    r8d,0x0
 88c:	48 8d 0d 8d 04 20 00 	lea    rcx,[rip+0x20048d]        # 200d20 <long_options.3393>
 893:	48 8d 15 ac 01 00 00 	lea    rdx,[rip+0x1ac]        # a46 <_IO_stdin_used+0x56>
 89a:	89 c7                	mov    edi,eax
 89c:	e8 ef fd ff ff       	call   690 <getopt_long@plt>
 8a1:	89 45 f8             	mov    DWORD PTR [rbp-0x8],eax
 8a4:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
 8a7:	83 e8 3a             	sub    eax,0x3a
 8aa:	83 f8 2e             	cmp    eax,0x2e
 8ad:	0f 87 a4 00 00 00    	ja     957 <main+0xf7>
 8b3:	89 c0                	mov    eax,eax
 8b5:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
 8bc:	00 
 8bd:	48 8d 05 98 01 00 00 	lea    rax,[rip+0x198]        # a5c <_IO_stdin_used+0x6c>
 8c4:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
 8c7:	48 63 d0             	movsxd rdx,eax
 8ca:	48 8d 05 8b 01 00 00 	lea    rax,[rip+0x18b]        # a5c <_IO_stdin_used+0x6c>
 8d1:	48 01 d0             	add    rax,rdx
 8d4:	ff e0                	jmp    rax
 8d6:	8b 05 34 07 20 00    	mov    eax,DWORD PTR [rip+0x200734]        # 201010 <optind@@GLIBC_2.2.5>
 8dc:	48 98                	cdqe   
 8de:	48 c1 e0 03          	shl    rax,0x3
 8e2:	48 8d 50 f8          	lea    rdx,[rax-0x8]
 8e6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 8ea:	48 01 d0             	add    rax,rdx
 8ed:	48 8b 00             	mov    rax,QWORD PTR [rax]
 8f0:	48 89 c7             	mov    rdi,rax
 8f3:	e8 f2 fe ff ff       	call   7ea <missing_argument>
 8f8:	b8 00 00 00 00       	mov    eax,0x0
 8fd:	eb 62                	jmp    961 <main+0x101>
 8ff:	8b 05 0b 07 20 00    	mov    eax,DWORD PTR [rip+0x20070b]        # 201010 <optind@@GLIBC_2.2.5>
 905:	48 98                	cdqe   
 907:	48 c1 e0 03          	shl    rax,0x3
 90b:	48 8d 50 f8          	lea    rdx,[rax-0x8]
 90f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 913:	48 01 d0             	add    rax,rdx
 916:	48 8b 00             	mov    rax,QWORD PTR [rax]
 919:	48 89 c7             	mov    rdi,rax
 91c:	e8 f7 fe ff ff       	call   818 <unrecognized_option>
 921:	b8 00 00 00 00       	mov    eax,0x0
 926:	eb 39                	jmp    961 <main+0x101>
 928:	b8 00 00 00 00       	mov    eax,0x0
 92d:	e8 14 ff ff ff       	call   846 <help>
 932:	b8 00 00 00 00       	mov    eax,0x0
 937:	eb 28                	jmp    961 <main+0x101>
 939:	48 8d 3d 0d 01 00 00 	lea    rdi,[rip+0x10d]        # a4d <_IO_stdin_used+0x5d>
 940:	e8 3b fd ff ff       	call   680 <puts@plt>
 945:	b8 00 00 00 00       	mov    eax,0x0
 94a:	eb 15                	jmp    961 <main+0x101>
 94c:	bf 0a 00 00 00       	mov    edi,0xa
 951:	e8 6a fd ff ff       	call   6c0 <sleep@plt>
 956:	90                   	nop
 957:	c7 45 fc 2a 00 00 00 	mov    DWORD PTR [rbp-0x4],0x2a
 95e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 961:	c9                   	leave  
 962:	c3                   	ret    
 963:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 96a:	00 00 00 
 96d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000000970 <__libc_csu_init>:
 970:	41 57                	push   r15
 972:	41 56                	push   r14
 974:	49 89 d7             	mov    r15,rdx
 977:	41 55                	push   r13
 979:	41 54                	push   r12
 97b:	4c 8d 25 8e 03 20 00 	lea    r12,[rip+0x20038e]        # 200d10 <__frame_dummy_init_array_entry>
 982:	55                   	push   rbp
 983:	48 8d 2d 8e 03 20 00 	lea    rbp,[rip+0x20038e]        # 200d18 <__init_array_end>
 98a:	53                   	push   rbx
 98b:	41 89 fd             	mov    r13d,edi
 98e:	49 89 f6             	mov    r14,rsi
 991:	4c 29 e5             	sub    rbp,r12
 994:	48 83 ec 08          	sub    rsp,0x8
 998:	48 c1 fd 03          	sar    rbp,0x3
 99c:	e8 b7 fc ff ff       	call   658 <_init>
 9a1:	48 85 ed             	test   rbp,rbp
 9a4:	74 20                	je     9c6 <__libc_csu_init+0x56>
 9a6:	31 db                	xor    ebx,ebx
 9a8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
 9af:	00 
 9b0:	4c 89 fa             	mov    rdx,r15
 9b3:	4c 89 f6             	mov    rsi,r14
 9b6:	44 89 ef             	mov    edi,r13d
 9b9:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
 9bd:	48 83 c3 01          	add    rbx,0x1
 9c1:	48 39 dd             	cmp    rbp,rbx
 9c4:	75 ea                	jne    9b0 <__libc_csu_init+0x40>
 9c6:	48 83 c4 08          	add    rsp,0x8
 9ca:	5b                   	pop    rbx
 9cb:	5d                   	pop    rbp
 9cc:	41 5c                	pop    r12
 9ce:	41 5d                	pop    r13
 9d0:	41 5e                	pop    r14
 9d2:	41 5f                	pop    r15
 9d4:	c3                   	ret    
 9d5:	90                   	nop
 9d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 9dd:	00 00 00 

00000000000009e0 <__libc_csu_fini>:
 9e0:	f3 c3                	repz ret 

Disassembly of section .fini:

00000000000009e4 <_fini>:
 9e4:	48 83 ec 08          	sub    rsp,0x8
 9e8:	48 83 c4 08          	add    rsp,0x8
 9ec:	c3                   	ret    
