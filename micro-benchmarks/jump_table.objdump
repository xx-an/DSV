
jump_table:     file format elf64-x86-64


Disassembly of section .init:

0000000000000580 <_init>:
 580:	48 83 ec 08          	sub    rsp,0x8
 584:	48 8b 05 5d 0a 20 00 	mov    rax,QWORD PTR [rip+0x200a5d]        # 200fe8 <__gmon_start__>
 58b:	48 85 c0             	test   rax,rax
 58e:	74 02                	je     592 <_init+0x12>
 590:	ff d0                	call   rax
 592:	48 83 c4 08          	add    rsp,0x8
 596:	c3                   	ret    

Disassembly of section .plt:

00000000000005a0 <.plt>:
 5a0:	ff 35 12 0a 20 00    	push   QWORD PTR [rip+0x200a12]        # 200fb8 <_GLOBAL_OFFSET_TABLE_+0x8>
 5a6:	ff 25 14 0a 20 00    	jmp    QWORD PTR [rip+0x200a14]        # 200fc0 <_GLOBAL_OFFSET_TABLE_+0x10>
 5ac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000005b0 <puts@plt>:
 5b0:	ff 25 12 0a 20 00    	jmp    QWORD PTR [rip+0x200a12]        # 200fc8 <puts@GLIBC_2.2.5>
 5b6:	68 00 00 00 00       	push   0x0
 5bb:	e9 e0 ff ff ff       	jmp    5a0 <.plt>

00000000000005c0 <atoi@plt>:
 5c0:	ff 25 0a 0a 20 00    	jmp    QWORD PTR [rip+0x200a0a]        # 200fd0 <atoi@GLIBC_2.2.5>
 5c6:	68 01 00 00 00       	push   0x1
 5cb:	e9 d0 ff ff ff       	jmp    5a0 <.plt>

Disassembly of section .plt.got:

00000000000005d0 <__cxa_finalize@plt>:
 5d0:	ff 25 22 0a 20 00    	jmp    QWORD PTR [rip+0x200a22]        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 5d6:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000000000005e0 <_start>:
 5e0:	31 ed                	xor    ebp,ebp
 5e2:	49 89 d1             	mov    r9,rdx
 5e5:	5e                   	pop    rsi
 5e6:	48 89 e2             	mov    rdx,rsp
 5e9:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
 5ed:	50                   	push   rax
 5ee:	54                   	push   rsp
 5ef:	4c 8d 05 4a 02 00 00 	lea    r8,[rip+0x24a]        # 840 <__libc_csu_fini>
 5f6:	48 8d 0d d3 01 00 00 	lea    rcx,[rip+0x1d3]        # 7d0 <__libc_csu_init>
 5fd:	48 8d 3d 32 01 00 00 	lea    rdi,[rip+0x132]        # 736 <main>
 604:	ff 15 d6 09 20 00    	call   QWORD PTR [rip+0x2009d6]        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 60a:	f4                   	hlt    
 60b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000000610 <deregister_tm_clones>:
 610:	48 8d 3d 29 0a 20 00 	lea    rdi,[rip+0x200a29]        # 201040 <__TMC_END__>
 617:	55                   	push   rbp
 618:	48 8d 05 21 0a 20 00 	lea    rax,[rip+0x200a21]        # 201040 <__TMC_END__>
 61f:	48 39 f8             	cmp    rax,rdi
 622:	48 89 e5             	mov    rbp,rsp
 625:	74 19                	je     640 <deregister_tm_clones+0x30>
 627:	48 8b 05 aa 09 20 00 	mov    rax,QWORD PTR [rip+0x2009aa]        # 200fd8 <_ITM_deregisterTMCloneTable>
 62e:	48 85 c0             	test   rax,rax
 631:	74 0d                	je     640 <deregister_tm_clones+0x30>
 633:	5d                   	pop    rbp
 634:	ff e0                	jmp    rax
 636:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 63d:	00 00 00 
 640:	5d                   	pop    rbp
 641:	c3                   	ret    
 642:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 646:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 64d:	00 00 00 

0000000000000650 <register_tm_clones>:
 650:	48 8d 3d e9 09 20 00 	lea    rdi,[rip+0x2009e9]        # 201040 <__TMC_END__>
 657:	48 8d 35 e2 09 20 00 	lea    rsi,[rip+0x2009e2]        # 201040 <__TMC_END__>
 65e:	55                   	push   rbp
 65f:	48 29 fe             	sub    rsi,rdi
 662:	48 89 e5             	mov    rbp,rsp
 665:	48 c1 fe 03          	sar    rsi,0x3
 669:	48 89 f0             	mov    rax,rsi
 66c:	48 c1 e8 3f          	shr    rax,0x3f
 670:	48 01 c6             	add    rsi,rax
 673:	48 d1 fe             	sar    rsi,1
 676:	74 18                	je     690 <register_tm_clones+0x40>
 678:	48 8b 05 71 09 20 00 	mov    rax,QWORD PTR [rip+0x200971]        # 200ff0 <_ITM_registerTMCloneTable>
 67f:	48 85 c0             	test   rax,rax
 682:	74 0c                	je     690 <register_tm_clones+0x40>
 684:	5d                   	pop    rbp
 685:	ff e0                	jmp    rax
 687:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
 68e:	00 00 
 690:	5d                   	pop    rbp
 691:	c3                   	ret    
 692:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 696:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 69d:	00 00 00 

00000000000006a0 <__do_global_dtors_aux>:
 6a0:	80 3d 99 09 20 00 00 	cmp    BYTE PTR [rip+0x200999],0x0        # 201040 <__TMC_END__>
 6a7:	75 2f                	jne    6d8 <__do_global_dtors_aux+0x38>
 6a9:	48 83 3d 47 09 20 00 	cmp    QWORD PTR [rip+0x200947],0x0        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 6b0:	00 
 6b1:	55                   	push   rbp
 6b2:	48 89 e5             	mov    rbp,rsp
 6b5:	74 0c                	je     6c3 <__do_global_dtors_aux+0x23>
 6b7:	48 8b 3d 4a 09 20 00 	mov    rdi,QWORD PTR [rip+0x20094a]        # 201008 <__dso_handle>
 6be:	e8 0d ff ff ff       	call   5d0 <__cxa_finalize@plt>
 6c3:	e8 48 ff ff ff       	call   610 <deregister_tm_clones>
 6c8:	c6 05 71 09 20 00 01 	mov    BYTE PTR [rip+0x200971],0x1        # 201040 <__TMC_END__>
 6cf:	5d                   	pop    rbp
 6d0:	c3                   	ret    
 6d1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
 6d8:	f3 c3                	repz ret 
 6da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000006e0 <frame_dummy>:
 6e0:	55                   	push   rbp
 6e1:	48 89 e5             	mov    rbp,rsp
 6e4:	5d                   	pop    rbp
 6e5:	e9 66 ff ff ff       	jmp    650 <register_tm_clones>

00000000000006ea <func3>:
 6ea:	55                   	push   rbp
 6eb:	48 89 e5             	mov    rbp,rsp
 6ee:	48 8d 3d 5f 01 00 00 	lea    rdi,[rip+0x15f]        # 854 <_IO_stdin_used+0x4>
 6f5:	e8 b6 fe ff ff       	call   5b0 <puts@plt>
 6fa:	90                   	nop
 6fb:	5d                   	pop    rbp
 6fc:	c3                   	ret    

00000000000006fd <func2>:
 6fd:	55                   	push   rbp
 6fe:	48 89 e5             	mov    rbp,rsp
 701:	48 8d 3d 4e 01 00 00 	lea    rdi,[rip+0x14e]        # 856 <_IO_stdin_used+0x6>
 708:	e8 a3 fe ff ff       	call   5b0 <puts@plt>
 70d:	90                   	nop
 70e:	5d                   	pop    rbp
 70f:	c3                   	ret    

0000000000000710 <func1>:
 710:	55                   	push   rbp
 711:	48 89 e5             	mov    rbp,rsp
 714:	48 8d 3d 3d 01 00 00 	lea    rdi,[rip+0x13d]        # 858 <_IO_stdin_used+0x8>
 71b:	e8 90 fe ff ff       	call   5b0 <puts@plt>
 720:	90                   	nop
 721:	5d                   	pop    rbp
 722:	c3                   	ret    

0000000000000723 <func0>:
 723:	55                   	push   rbp
 724:	48 89 e5             	mov    rbp,rsp
 727:	48 8d 3d 2c 01 00 00 	lea    rdi,[rip+0x12c]        # 85a <_IO_stdin_used+0xa>
 72e:	e8 7d fe ff ff       	call   5b0 <puts@plt>
 733:	90                   	nop
 734:	5d                   	pop    rbp
 735:	c3                   	ret    

0000000000000736 <main>:
 736:	55                   	push   rbp
 737:	48 89 e5             	mov    rbp,rsp
 73a:	48 83 ec 20          	sub    rsp,0x20
 73e:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
 741:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
 745:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
 74c:	eb 1e                	jmp    76c <main+0x36>
 74e:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
 751:	48 98                	cdqe   
 753:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
 75a:	00 
 75b:	48 8d 05 be 08 20 00 	lea    rax,[rip+0x2008be]        # 201020 <jump_table>
 762:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
 766:	ff d0                	call   rax
 768:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
 76c:	83 7d f8 03          	cmp    DWORD PTR [rbp-0x8],0x3
 770:	7e dc                	jle    74e <main+0x18>
 772:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 776:	48 83 c0 08          	add    rax,0x8
 77a:	48 8b 00             	mov    rax,QWORD PTR [rax]
 77d:	48 89 c7             	mov    rdi,rax
 780:	e8 3b fe ff ff       	call   5c0 <atoi@plt>
 785:	89 c2                	mov    edx,eax
 787:	89 d0                	mov    eax,edx
 789:	c1 f8 1f             	sar    eax,0x1f
 78c:	c1 e8 1e             	shr    eax,0x1e
 78f:	01 c2                	add    edx,eax
 791:	83 e2 03             	and    edx,0x3
 794:	29 c2                	sub    edx,eax
 796:	89 d0                	mov    eax,edx
 798:	8d 50 04             	lea    edx,[rax+0x4]
 79b:	89 d0                	mov    eax,edx
 79d:	c1 f8 1f             	sar    eax,0x1f
 7a0:	c1 e8 1e             	shr    eax,0x1e
 7a3:	01 c2                	add    edx,eax
 7a5:	83 e2 03             	and    edx,0x3
 7a8:	29 c2                	sub    edx,eax
 7aa:	89 d0                	mov    eax,edx
 7ac:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
 7af:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 7b2:	48 98                	cdqe   
 7b4:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
 7bb:	00 
 7bc:	48 8d 05 5d 08 20 00 	lea    rax,[rip+0x20085d]        # 201020 <jump_table>
 7c3:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
 7c7:	ff d0                	call   rax
 7c9:	b8 00 00 00 00       	mov    eax,0x0
 7ce:	c9                   	leave  
 7cf:	c3                   	ret    

00000000000007d0 <__libc_csu_init>:
 7d0:	41 57                	push   r15
 7d2:	41 56                	push   r14
 7d4:	49 89 d7             	mov    r15,rdx
 7d7:	41 55                	push   r13
 7d9:	41 54                	push   r12
 7db:	4c 8d 25 ce 05 20 00 	lea    r12,[rip+0x2005ce]        # 200db0 <__frame_dummy_init_array_entry>
 7e2:	55                   	push   rbp
 7e3:	48 8d 2d ce 05 20 00 	lea    rbp,[rip+0x2005ce]        # 200db8 <__init_array_end>
 7ea:	53                   	push   rbx
 7eb:	41 89 fd             	mov    r13d,edi
 7ee:	49 89 f6             	mov    r14,rsi
 7f1:	4c 29 e5             	sub    rbp,r12
 7f4:	48 83 ec 08          	sub    rsp,0x8
 7f8:	48 c1 fd 03          	sar    rbp,0x3
 7fc:	e8 7f fd ff ff       	call   580 <_init>
 801:	48 85 ed             	test   rbp,rbp
 804:	74 20                	je     826 <__libc_csu_init+0x56>
 806:	31 db                	xor    ebx,ebx
 808:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
 80f:	00 
 810:	4c 89 fa             	mov    rdx,r15
 813:	4c 89 f6             	mov    rsi,r14
 816:	44 89 ef             	mov    edi,r13d
 819:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
 81d:	48 83 c3 01          	add    rbx,0x1
 821:	48 39 dd             	cmp    rbp,rbx
 824:	75 ea                	jne    810 <__libc_csu_init+0x40>
 826:	48 83 c4 08          	add    rsp,0x8
 82a:	5b                   	pop    rbx
 82b:	5d                   	pop    rbp
 82c:	41 5c                	pop    r12
 82e:	41 5d                	pop    r13
 830:	41 5e                	pop    r14
 832:	41 5f                	pop    r15
 834:	c3                   	ret    
 835:	90                   	nop
 836:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 83d:	00 00 00 

0000000000000840 <__libc_csu_fini>:
 840:	f3 c3                	repz ret 

Disassembly of section .fini:

0000000000000844 <_fini>:
 844:	48 83 ec 08          	sub    rsp,0x8
 848:	48 83 c4 08          	add    rsp,0x8
 84c:	c3                   	ret    
