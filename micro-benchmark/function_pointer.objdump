
/home/cindy/Documents/Projects/DSV/micro-benchmark/function_pointer:     file format elf64-x86-64


Disassembly of section .init:

0000000000000618 <_init>:
 618:	48 83 ec 08          	sub    rsp,0x8
 61c:	48 8b 05 b5 09 20 00 	mov    rax,QWORD PTR [rip+0x2009b5]        # 200fd8 <__gmon_start__>
 623:	48 85 c0             	test   rax,rax
 626:	74 02                	je     62a <_init+0x12>
 628:	ff d0                	call   rax
 62a:	48 83 c4 08          	add    rsp,0x8
 62e:	c3                   	ret    

Disassembly of section .plt:

0000000000000630 <.plt>:
 630:	ff 35 6a 09 20 00    	push   QWORD PTR [rip+0x20096a]        # 200fa0 <_GLOBAL_OFFSET_TABLE_+0x8>
 636:	ff 25 6c 09 20 00    	jmp    QWORD PTR [rip+0x20096c]        # 200fa8 <_GLOBAL_OFFSET_TABLE_+0x10>
 63c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000000640 <__stack_chk_fail@plt>:
 640:	ff 25 6a 09 20 00    	jmp    QWORD PTR [rip+0x20096a]        # 200fb0 <__stack_chk_fail@GLIBC_2.4>
 646:	68 00 00 00 00       	push   0x0
 64b:	e9 e0 ff ff ff       	jmp    630 <.plt>

0000000000000650 <printf@plt>:
 650:	ff 25 62 09 20 00    	jmp    QWORD PTR [rip+0x200962]        # 200fb8 <printf@GLIBC_2.2.5>
 656:	68 01 00 00 00       	push   0x1
 65b:	e9 d0 ff ff ff       	jmp    630 <.plt>

Disassembly of section .plt.got:

0000000000000660 <__cxa_finalize@plt>:
 660:	ff 25 92 09 20 00    	jmp    QWORD PTR [rip+0x200992]        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 666:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000000670 <_start>:
 670:	31 ed                	xor    ebp,ebp
 672:	49 89 d1             	mov    r9,rdx
 675:	5e                   	pop    rsi
 676:	48 89 e2             	mov    rdx,rsp
 679:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
 67d:	50                   	push   rax
 67e:	54                   	push   rsp
 67f:	4c 8d 05 4a 03 00 00 	lea    r8,[rip+0x34a]        # 9d0 <__libc_csu_fini>
 686:	48 8d 0d d3 02 00 00 	lea    rcx,[rip+0x2d3]        # 960 <__libc_csu_init>
 68d:	48 8d 3d 1b 01 00 00 	lea    rdi,[rip+0x11b]        # 7af <main>
 694:	ff 15 36 09 20 00    	call   QWORD PTR [rip+0x200936]        # 200fd0 <__libc_start_main@GLIBC_2.2.5>
 69a:	f4                   	hlt    
 69b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000006a0 <deregister_tm_clones>:
 6a0:	48 8d 3d 69 09 20 00 	lea    rdi,[rip+0x200969]        # 201010 <__TMC_END__>
 6a7:	55                   	push   rbp
 6a8:	48 8d 05 61 09 20 00 	lea    rax,[rip+0x200961]        # 201010 <__TMC_END__>
 6af:	48 39 f8             	cmp    rax,rdi
 6b2:	48 89 e5             	mov    rbp,rsp
 6b5:	74 19                	je     6d0 <deregister_tm_clones+0x30>
 6b7:	48 8b 05 02 09 20 00 	mov    rax,QWORD PTR [rip+0x200902]        # 200fc0 <_ITM_deregisterTMCloneTable>
 6be:	48 85 c0             	test   rax,rax
 6c1:	74 0d                	je     6d0 <deregister_tm_clones+0x30>
 6c3:	5d                   	pop    rbp
 6c4:	ff e0                	jmp    rax
 6c6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 6cd:	00 00 00 
 6d0:	5d                   	pop    rbp
 6d1:	c3                   	ret    
 6d2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 6d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 6dd:	00 00 00 

00000000000006e0 <register_tm_clones>:
 6e0:	48 8d 3d 29 09 20 00 	lea    rdi,[rip+0x200929]        # 201010 <__TMC_END__>
 6e7:	48 8d 35 22 09 20 00 	lea    rsi,[rip+0x200922]        # 201010 <__TMC_END__>
 6ee:	55                   	push   rbp
 6ef:	48 29 fe             	sub    rsi,rdi
 6f2:	48 89 e5             	mov    rbp,rsp
 6f5:	48 c1 fe 03          	sar    rsi,0x3
 6f9:	48 89 f0             	mov    rax,rsi
 6fc:	48 c1 e8 3f          	shr    rax,0x3f
 700:	48 01 c6             	add    rsi,rax
 703:	48 d1 fe             	sar    rsi,1
 706:	74 18                	je     720 <register_tm_clones+0x40>
 708:	48 8b 05 e1 08 20 00 	mov    rax,QWORD PTR [rip+0x2008e1]        # 200ff0 <_ITM_registerTMCloneTable>
 70f:	48 85 c0             	test   rax,rax
 712:	74 0c                	je     720 <register_tm_clones+0x40>
 714:	5d                   	pop    rbp
 715:	ff e0                	jmp    rax
 717:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
 71e:	00 00 
 720:	5d                   	pop    rbp
 721:	c3                   	ret    
 722:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 726:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 72d:	00 00 00 

0000000000000730 <__do_global_dtors_aux>:
 730:	80 3d d9 08 20 00 00 	cmp    BYTE PTR [rip+0x2008d9],0x0        # 201010 <__TMC_END__>
 737:	75 2f                	jne    768 <__do_global_dtors_aux+0x38>
 739:	48 83 3d b7 08 20 00 	cmp    QWORD PTR [rip+0x2008b7],0x0        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 740:	00 
 741:	55                   	push   rbp
 742:	48 89 e5             	mov    rbp,rsp
 745:	74 0c                	je     753 <__do_global_dtors_aux+0x23>
 747:	48 8b 3d ba 08 20 00 	mov    rdi,QWORD PTR [rip+0x2008ba]        # 201008 <__dso_handle>
 74e:	e8 0d ff ff ff       	call   660 <__cxa_finalize@plt>
 753:	e8 48 ff ff ff       	call   6a0 <deregister_tm_clones>
 758:	c6 05 b1 08 20 00 01 	mov    BYTE PTR [rip+0x2008b1],0x1        # 201010 <__TMC_END__>
 75f:	5d                   	pop    rbp
 760:	c3                   	ret    
 761:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
 768:	f3 c3                	repz ret 
 76a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000000770 <frame_dummy>:
 770:	55                   	push   rbp
 771:	48 89 e5             	mov    rbp,rsp
 774:	5d                   	pop    rbp
 775:	e9 66 ff ff ff       	jmp    6e0 <register_tm_clones>

000000000000077a <pick_function>:
 77a:	55                   	push   rbp
 77b:	48 89 e5             	mov    rbp,rsp
 77e:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
 781:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 784:	83 f8 01             	cmp    eax,0x1
 787:	74 12                	je     79b <pick_function+0x21>
 789:	83 f8 02             	cmp    eax,0x2
 78c:	74 16                	je     7a4 <pick_function+0x2a>
 78e:	85 c0                	test   eax,eax
 790:	75 1b                	jne    7ad <pick_function+0x33>
 792:	48 8b 05 4f 08 20 00 	mov    rax,QWORD PTR [rip+0x20084f]        # 200fe8 <sin@GLIBC_2.2.5>
 799:	eb 12                	jmp    7ad <pick_function+0x33>
 79b:	48 8b 05 26 08 20 00 	mov    rax,QWORD PTR [rip+0x200826]        # 200fc8 <cos@GLIBC_2.2.5>
 7a2:	eb 09                	jmp    7ad <pick_function+0x33>
 7a4:	48 8b 05 35 08 20 00 	mov    rax,QWORD PTR [rip+0x200835]        # 200fe0 <tan@GLIBC_2.2.5>
 7ab:	eb 00                	jmp    7ad <pick_function+0x33>
 7ad:	5d                   	pop    rbp
 7ae:	c3                   	ret    

00000000000007af <main>:
 7af:	55                   	push   rbp
 7b0:	48 89 e5             	mov    rbp,rsp
 7b3:	48 83 ec 40          	sub    rsp,0x40
 7b7:	89 7d cc             	mov    DWORD PTR [rbp-0x34],edi
 7ba:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
 7c1:	00 00 
 7c3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 7c7:	31 c0                	xor    eax,eax
 7c9:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x0
 7d0:	eb 1b                	jmp    7ed <main+0x3e>
 7d2:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
 7d5:	89 c7                	mov    edi,eax
 7d7:	e8 9e ff ff ff       	call   77a <pick_function>
 7dc:	48 89 c2             	mov    rdx,rax
 7df:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
 7e2:	48 98                	cdqe   
 7e4:	48 89 54 c5 e0       	mov    QWORD PTR [rbp+rax*8-0x20],rdx
 7e9:	83 45 d4 01          	add    DWORD PTR [rbp-0x2c],0x1
 7ed:	83 7d d4 02          	cmp    DWORD PTR [rbp-0x2c],0x2
 7f1:	7e df                	jle    7d2 <main+0x23>
 7f3:	f2 0f 10 05 f5 01 00 	movsd  xmm0,QWORD PTR [rip+0x1f5]        # 9f0 <_IO_stdin_used+0x10>
 7fa:	00 
 7fb:	f2 0f 11 45 d8       	movsd  QWORD PTR [rbp-0x28],xmm0
 800:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 804:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
 808:	f2 0f 10 45 c0       	movsd  xmm0,QWORD PTR [rbp-0x40]
 80d:	48 8d 3d d4 01 00 00 	lea    rdi,[rip+0x1d4]        # 9e8 <_IO_stdin_used+0x8>
 814:	b8 01 00 00 00       	mov    eax,0x1
 819:	e8 32 fe ff ff       	call   650 <printf@plt>
 81e:	8b 4d cc             	mov    ecx,DWORD PTR [rbp-0x34]
 821:	ba 56 55 55 55       	mov    edx,0x55555556
 826:	89 c8                	mov    eax,ecx
 828:	f7 ea                	imul   edx
 82a:	89 c8                	mov    eax,ecx
 82c:	c1 f8 1f             	sar    eax,0x1f
 82f:	29 c2                	sub    edx,eax
 831:	89 d0                	mov    eax,edx
 833:	01 c0                	add    eax,eax
 835:	01 d0                	add    eax,edx
 837:	29 c1                	sub    ecx,eax
 839:	89 ca                	mov    edx,ecx
 83b:	48 63 c2             	movsxd rax,edx
 83e:	48 8b 44 c5 e0       	mov    rax,QWORD PTR [rbp+rax*8-0x20]
 843:	48 89 c2             	mov    rdx,rax
 846:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 84a:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
 84e:	f2 0f 10 45 c0       	movsd  xmm0,QWORD PTR [rbp-0x40]
 853:	ff d2                	call   rdx
 855:	66 48 0f 7e c0       	movq   rax,xmm0
 85a:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
 85e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 862:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
 866:	f2 0f 10 45 c0       	movsd  xmm0,QWORD PTR [rbp-0x40]
 86b:	48 8d 3d 76 01 00 00 	lea    rdi,[rip+0x176]        # 9e8 <_IO_stdin_used+0x8>
 872:	b8 01 00 00 00       	mov    eax,0x1
 877:	e8 d4 fd ff ff       	call   650 <printf@plt>
 87c:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
 87f:	8d 48 01             	lea    ecx,[rax+0x1]
 882:	ba 56 55 55 55       	mov    edx,0x55555556
 887:	89 c8                	mov    eax,ecx
 889:	f7 ea                	imul   edx
 88b:	89 c8                	mov    eax,ecx
 88d:	c1 f8 1f             	sar    eax,0x1f
 890:	29 c2                	sub    edx,eax
 892:	89 d0                	mov    eax,edx
 894:	01 c0                	add    eax,eax
 896:	01 d0                	add    eax,edx
 898:	29 c1                	sub    ecx,eax
 89a:	89 ca                	mov    edx,ecx
 89c:	48 63 c2             	movsxd rax,edx
 89f:	48 8b 44 c5 e0       	mov    rax,QWORD PTR [rbp+rax*8-0x20]
 8a4:	48 89 c2             	mov    rdx,rax
 8a7:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 8ab:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
 8af:	f2 0f 10 45 c0       	movsd  xmm0,QWORD PTR [rbp-0x40]
 8b4:	ff d2                	call   rdx
 8b6:	66 48 0f 7e c0       	movq   rax,xmm0
 8bb:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
 8bf:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 8c3:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
 8c7:	f2 0f 10 45 c0       	movsd  xmm0,QWORD PTR [rbp-0x40]
 8cc:	48 8d 3d 15 01 00 00 	lea    rdi,[rip+0x115]        # 9e8 <_IO_stdin_used+0x8>
 8d3:	b8 01 00 00 00       	mov    eax,0x1
 8d8:	e8 73 fd ff ff       	call   650 <printf@plt>
 8dd:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
 8e0:	8d 48 02             	lea    ecx,[rax+0x2]
 8e3:	ba 56 55 55 55       	mov    edx,0x55555556
 8e8:	89 c8                	mov    eax,ecx
 8ea:	f7 ea                	imul   edx
 8ec:	89 c8                	mov    eax,ecx
 8ee:	c1 f8 1f             	sar    eax,0x1f
 8f1:	29 c2                	sub    edx,eax
 8f3:	89 d0                	mov    eax,edx
 8f5:	01 c0                	add    eax,eax
 8f7:	01 d0                	add    eax,edx
 8f9:	29 c1                	sub    ecx,eax
 8fb:	89 ca                	mov    edx,ecx
 8fd:	48 63 c2             	movsxd rax,edx
 900:	48 8b 44 c5 e0       	mov    rax,QWORD PTR [rbp+rax*8-0x20]
 905:	48 89 c2             	mov    rdx,rax
 908:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 90c:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
 910:	f2 0f 10 45 c0       	movsd  xmm0,QWORD PTR [rbp-0x40]
 915:	ff d2                	call   rdx
 917:	66 48 0f 7e c0       	movq   rax,xmm0
 91c:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
 920:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 924:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
 928:	f2 0f 10 45 c0       	movsd  xmm0,QWORD PTR [rbp-0x40]
 92d:	48 8d 3d b4 00 00 00 	lea    rdi,[rip+0xb4]        # 9e8 <_IO_stdin_used+0x8>
 934:	b8 01 00 00 00       	mov    eax,0x1
 939:	e8 12 fd ff ff       	call   650 <printf@plt>
 93e:	b8 00 00 00 00       	mov    eax,0x0
 943:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
 947:	64 48 33 34 25 28 00 	xor    rsi,QWORD PTR fs:0x28
 94e:	00 00 
 950:	74 05                	je     957 <main+0x1a8>
 952:	e8 e9 fc ff ff       	call   640 <__stack_chk_fail@plt>
 957:	c9                   	leave  
 958:	c3                   	ret    
 959:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000000960 <__libc_csu_init>:
 960:	41 57                	push   r15
 962:	41 56                	push   r14
 964:	49 89 d7             	mov    r15,rdx
 967:	41 55                	push   r13
 969:	41 54                	push   r12
 96b:	4c 8d 25 16 04 20 00 	lea    r12,[rip+0x200416]        # 200d88 <__frame_dummy_init_array_entry>
 972:	55                   	push   rbp
 973:	48 8d 2d 16 04 20 00 	lea    rbp,[rip+0x200416]        # 200d90 <__init_array_end>
 97a:	53                   	push   rbx
 97b:	41 89 fd             	mov    r13d,edi
 97e:	49 89 f6             	mov    r14,rsi
 981:	4c 29 e5             	sub    rbp,r12
 984:	48 83 ec 08          	sub    rsp,0x8
 988:	48 c1 fd 03          	sar    rbp,0x3
 98c:	e8 87 fc ff ff       	call   618 <_init>
 991:	48 85 ed             	test   rbp,rbp
 994:	74 20                	je     9b6 <__libc_csu_init+0x56>
 996:	31 db                	xor    ebx,ebx
 998:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
 99f:	00 
 9a0:	4c 89 fa             	mov    rdx,r15
 9a3:	4c 89 f6             	mov    rsi,r14
 9a6:	44 89 ef             	mov    edi,r13d
 9a9:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
 9ad:	48 83 c3 01          	add    rbx,0x1
 9b1:	48 39 dd             	cmp    rbp,rbx
 9b4:	75 ea                	jne    9a0 <__libc_csu_init+0x40>
 9b6:	48 83 c4 08          	add    rsp,0x8
 9ba:	5b                   	pop    rbx
 9bb:	5d                   	pop    rbp
 9bc:	41 5c                	pop    r12
 9be:	41 5d                	pop    r13
 9c0:	41 5e                	pop    r14
 9c2:	41 5f                	pop    r15
 9c4:	c3                   	ret    
 9c5:	90                   	nop
 9c6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 9cd:	00 00 00 

00000000000009d0 <__libc_csu_fini>:
 9d0:	f3 c3                	repz ret 

Disassembly of section .fini:

00000000000009d4 <_fini>:
 9d4:	48 83 ec 08          	sub    rsp,0x8
 9d8:	48 83 c4 08          	add    rsp,0x8
 9dc:	c3                   	ret    
