
/home/cindy/Documents/Projects/DSV/micro-benchmark/callback:     file format elf64-x86-64


Disassembly of section .init:

00000000000005e8 <_init>:
 5e8:	48 83 ec 08          	sub    rsp,0x8
 5ec:	48 8b 05 f5 09 20 00 	mov    rax,QWORD PTR [rip+0x2009f5]        # 200fe8 <__gmon_start__>
 5f3:	48 85 c0             	test   rax,rax
 5f6:	74 02                	je     5fa <_init+0x12>
 5f8:	ff d0                	call   rax
 5fa:	48 83 c4 08          	add    rsp,0x8
 5fe:	c3                   	ret    

Disassembly of section .plt:

0000000000000600 <.plt>:
 600:	ff 35 9a 09 20 00    	push   QWORD PTR [rip+0x20099a]        # 200fa0 <_GLOBAL_OFFSET_TABLE_+0x8>
 606:	ff 25 9c 09 20 00    	jmp    QWORD PTR [rip+0x20099c]        # 200fa8 <_GLOBAL_OFFSET_TABLE_+0x10>
 60c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000000610 <puts@plt>:
 610:	ff 25 9a 09 20 00    	jmp    QWORD PTR [rip+0x20099a]        # 200fb0 <puts@GLIBC_2.2.5>
 616:	68 00 00 00 00       	push   0x0
 61b:	e9 e0 ff ff ff       	jmp    600 <.plt>

0000000000000620 <__stack_chk_fail@plt>:
 620:	ff 25 92 09 20 00    	jmp    QWORD PTR [rip+0x200992]        # 200fb8 <__stack_chk_fail@GLIBC_2.4>
 626:	68 01 00 00 00       	push   0x1
 62b:	e9 d0 ff ff ff       	jmp    600 <.plt>

0000000000000630 <srand@plt>:
 630:	ff 25 8a 09 20 00    	jmp    QWORD PTR [rip+0x20098a]        # 200fc0 <srand@GLIBC_2.2.5>
 636:	68 02 00 00 00       	push   0x2
 63b:	e9 c0 ff ff ff       	jmp    600 <.plt>

0000000000000640 <time@plt>:
 640:	ff 25 82 09 20 00    	jmp    QWORD PTR [rip+0x200982]        # 200fc8 <time@GLIBC_2.2.5>
 646:	68 03 00 00 00       	push   0x3
 64b:	e9 b0 ff ff ff       	jmp    600 <.plt>

0000000000000650 <rand@plt>:
 650:	ff 25 7a 09 20 00    	jmp    QWORD PTR [rip+0x20097a]        # 200fd0 <rand@GLIBC_2.2.5>
 656:	68 04 00 00 00       	push   0x4
 65b:	e9 a0 ff ff ff       	jmp    600 <.plt>

Disassembly of section .plt.got:

0000000000000660 <__cxa_finalize@plt>:
 660:	ff 25 92 09 20 00    	jmp    QWORD PTR [rip+0x200992]        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 666:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000000670 <_start>:
 670:	31 ed                	xor    ebp,ebp
 672:	49 89 d1             	mov    r9,rdx
 675:	5e                   	pop    rsi
 676:	48 89 e2             	mov    rdx,rsp
 679:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
 67d:	50                   	push   rax
 67e:	54                   	push   rsp
 67f:	4c 8d 05 ca 02 00 00 	lea    r8,[rip+0x2ca]        # 950 <__libc_csu_fini>
 686:	48 8d 0d 53 02 00 00 	lea    rcx,[rip+0x253]        # 8e0 <__libc_csu_init>
 68d:	48 8d 3d a8 01 00 00 	lea    rdi,[rip+0x1a8]        # 83c <main>
 694:	ff 15 46 09 20 00    	call   QWORD PTR [rip+0x200946]        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 69a:	f4                   	hlt    
 69b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000006a0 <deregister_tm_clones>:
 6a0:	48 8d 3d 69 09 20 00 	lea    rdi,[rip+0x200969]        # 201010 <__TMC_END__>
 6a7:	55                   	push   rbp
 6a8:	48 8d 05 61 09 20 00 	lea    rax,[rip+0x200961]        # 201010 <__TMC_END__>
 6af:	48 39 f8             	cmp    rax,rdi
 6b2:	48 89 e5             	mov    rbp,rsp
 6b5:	74 19                	je     6d0 <deregister_tm_clones+0x30>
 6b7:	48 8b 05 1a 09 20 00 	mov    rax,QWORD PTR [rip+0x20091a]        # 200fd8 <_ITM_deregisterTMCloneTable>
 6be:	48 85 c0             	test   rax,rax
 6c1:	74 0d                	je     6d0 <deregister_tm_clones+0x30>
 6c3:	5d                   	pop    rbp
 6c4:	ff e0                	jmp    rax
 6c6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 6cd:	00 00 00 
 6d0:	5d                   	pop    rbp
 6d1:	c3                   	ret    
 6d2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 6d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 6dd:	00 00 00 

00000000000006e0 <register_tm_clones>:
 6e0:	48 8d 3d 29 09 20 00 	lea    rdi,[rip+0x200929]        # 201010 <__TMC_END__>
 6e7:	48 8d 35 22 09 20 00 	lea    rsi,[rip+0x200922]        # 201010 <__TMC_END__>
 6ee:	55                   	push   rbp
 6ef:	48 29 fe             	sub    rsi,rdi
 6f2:	48 89 e5             	mov    rbp,rsp
 6f5:	48 c1 fe 03          	sar    rsi,0x3
 6f9:	48 89 f0             	mov    rax,rsi
 6fc:	48 c1 e8 3f          	shr    rax,0x3f
 700:	48 01 c6             	add    rsi,rax
 703:	48 d1 fe             	sar    rsi,1
 706:	74 18                	je     720 <register_tm_clones+0x40>
 708:	48 8b 05 e1 08 20 00 	mov    rax,QWORD PTR [rip+0x2008e1]        # 200ff0 <_ITM_registerTMCloneTable>
 70f:	48 85 c0             	test   rax,rax
 712:	74 0c                	je     720 <register_tm_clones+0x40>
 714:	5d                   	pop    rbp
 715:	ff e0                	jmp    rax
 717:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
 71e:	00 00 
 720:	5d                   	pop    rbp
 721:	c3                   	ret    
 722:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 726:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 72d:	00 00 00 

0000000000000730 <__do_global_dtors_aux>:
 730:	80 3d d9 08 20 00 00 	cmp    BYTE PTR [rip+0x2008d9],0x0        # 201010 <__TMC_END__>
 737:	75 2f                	jne    768 <__do_global_dtors_aux+0x38>
 739:	48 83 3d b7 08 20 00 	cmp    QWORD PTR [rip+0x2008b7],0x0        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 740:	00 
 741:	55                   	push   rbp
 742:	48 89 e5             	mov    rbp,rsp
 745:	74 0c                	je     753 <__do_global_dtors_aux+0x23>
 747:	48 8b 3d ba 08 20 00 	mov    rdi,QWORD PTR [rip+0x2008ba]        # 201008 <__dso_handle>
 74e:	e8 0d ff ff ff       	call   660 <__cxa_finalize@plt>
 753:	e8 48 ff ff ff       	call   6a0 <deregister_tm_clones>
 758:	c6 05 b1 08 20 00 01 	mov    BYTE PTR [rip+0x2008b1],0x1        # 201010 <__TMC_END__>
 75f:	5d                   	pop    rbp
 760:	c3                   	ret    
 761:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
 768:	f3 c3                	repz ret 
 76a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000000770 <frame_dummy>:
 770:	55                   	push   rbp
 771:	48 89 e5             	mov    rbp,rsp
 774:	5d                   	pop    rbp
 775:	e9 66 ff ff ff       	jmp    6e0 <register_tm_clones>

000000000000077a <A>:
 77a:	55                   	push   rbp
 77b:	48 89 e5             	mov    rbp,rsp
 77e:	48 8d 3d df 01 00 00 	lea    rdi,[rip+0x1df]        # 964 <_IO_stdin_used+0x4>
 785:	e8 86 fe ff ff       	call   610 <puts@plt>
 78a:	90                   	nop
 78b:	5d                   	pop    rbp
 78c:	c3                   	ret    

000000000000078d <B>:
 78d:	55                   	push   rbp
 78e:	48 89 e5             	mov    rbp,rsp
 791:	48 8d 3d dc 01 00 00 	lea    rdi,[rip+0x1dc]        # 974 <_IO_stdin_used+0x14>
 798:	e8 73 fe ff ff       	call   610 <puts@plt>
 79d:	90                   	nop
 79e:	5d                   	pop    rbp
 79f:	c3                   	ret    

00000000000007a0 <C>:
 7a0:	55                   	push   rbp
 7a1:	48 89 e5             	mov    rbp,rsp
 7a4:	48 8d 3d d9 01 00 00 	lea    rdi,[rip+0x1d9]        # 984 <_IO_stdin_used+0x24>
 7ab:	e8 60 fe ff ff       	call   610 <puts@plt>
 7b0:	90                   	nop
 7b1:	5d                   	pop    rbp
 7b2:	c3                   	ret    

00000000000007b3 <pick_function>:
 7b3:	55                   	push   rbp
 7b4:	48 89 e5             	mov    rbp,rsp
 7b7:	48 83 ec 10          	sub    rsp,0x10
 7bb:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
 7be:	e8 8d fe ff ff       	call   650 <rand@plt>
 7c3:	89 c1                	mov    ecx,eax
 7c5:	ba 56 55 55 55       	mov    edx,0x55555556
 7ca:	89 c8                	mov    eax,ecx
 7cc:	f7 ea                	imul   edx
 7ce:	89 c8                	mov    eax,ecx
 7d0:	c1 f8 1f             	sar    eax,0x1f
 7d3:	29 c2                	sub    edx,eax
 7d5:	89 d0                	mov    eax,edx
 7d7:	89 c2                	mov    edx,eax
 7d9:	01 d2                	add    edx,edx
 7db:	01 c2                	add    edx,eax
 7dd:	89 c8                	mov    eax,ecx
 7df:	29 d0                	sub    eax,edx
 7e1:	83 f8 01             	cmp    eax,0x1
 7e4:	74 12                	je     7f8 <pick_function+0x45>
 7e6:	83 f8 02             	cmp    eax,0x2
 7e9:	74 16                	je     801 <pick_function+0x4e>
 7eb:	85 c0                	test   eax,eax
 7ed:	75 1b                	jne    80a <pick_function+0x57>
 7ef:	48 8d 05 84 ff ff ff 	lea    rax,[rip+0xffffffffffffff84]        # 77a <A>
 7f6:	eb 12                	jmp    80a <pick_function+0x57>
 7f8:	48 8d 05 8e ff ff ff 	lea    rax,[rip+0xffffffffffffff8e]        # 78d <B>
 7ff:	eb 09                	jmp    80a <pick_function+0x57>
 801:	48 8d 05 98 ff ff ff 	lea    rax,[rip+0xffffffffffffff98]        # 7a0 <C>
 808:	eb 00                	jmp    80a <pick_function+0x57>
 80a:	c9                   	leave  
 80b:	c3                   	ret    

000000000000080c <callback>:
 80c:	55                   	push   rbp
 80d:	48 89 e5             	mov    rbp,rsp
 810:	48 83 ec 10          	sub    rsp,0x10
 814:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 818:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 81c:	b8 00 00 00 00       	mov    eax,0x0
 821:	ff d2                	call   rdx
 823:	90                   	nop
 824:	c9                   	leave  
 825:	c3                   	ret    

0000000000000826 <min>:
 826:	55                   	push   rbp
 827:	48 89 e5             	mov    rbp,rsp
 82a:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
 82d:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
 830:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 833:	39 45 f8             	cmp    DWORD PTR [rbp-0x8],eax
 836:	0f 4e 45 f8          	cmovle eax,DWORD PTR [rbp-0x8]
 83a:	5d                   	pop    rbp
 83b:	c3                   	ret    

000000000000083c <main>:
 83c:	55                   	push   rbp
 83d:	48 89 e5             	mov    rbp,rsp
 840:	48 83 ec 40          	sub    rsp,0x40
 844:	89 7d cc             	mov    DWORD PTR [rbp-0x34],edi
 847:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
 84e:	00 00 
 850:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 854:	31 c0                	xor    eax,eax
 856:	bf 00 00 00 00       	mov    edi,0x0
 85b:	e8 e0 fd ff ff       	call   640 <time@plt>
 860:	89 c7                	mov    edi,eax
 862:	e8 c9 fd ff ff       	call   630 <srand@plt>
 867:	c7 45 d8 00 00 00 00 	mov    DWORD PTR [rbp-0x28],0x0
 86e:	eb 1b                	jmp    88b <main+0x4f>
 870:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
 873:	89 c7                	mov    edi,eax
 875:	e8 39 ff ff ff       	call   7b3 <pick_function>
 87a:	48 89 c2             	mov    rdx,rax
 87d:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
 880:	48 98                	cdqe   
 882:	48 89 54 c5 e0       	mov    QWORD PTR [rbp+rax*8-0x20],rdx
 887:	83 45 d8 01          	add    DWORD PTR [rbp-0x28],0x1
 88b:	83 7d d8 02          	cmp    DWORD PTR [rbp-0x28],0x2
 88f:	7e df                	jle    870 <main+0x34>
 891:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [rbp-0x24],0x0
 898:	eb 16                	jmp    8b0 <main+0x74>
 89a:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
 89d:	48 98                	cdqe   
 89f:	48 8b 44 c5 e0       	mov    rax,QWORD PTR [rbp+rax*8-0x20]
 8a4:	48 89 c7             	mov    rdi,rax
 8a7:	e8 60 ff ff ff       	call   80c <callback>
 8ac:	83 45 dc 01          	add    DWORD PTR [rbp-0x24],0x1
 8b0:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
 8b3:	89 c6                	mov    esi,eax
 8b5:	bf 03 00 00 00       	mov    edi,0x3
 8ba:	e8 67 ff ff ff       	call   826 <min>
 8bf:	39 45 dc             	cmp    DWORD PTR [rbp-0x24],eax
 8c2:	7c d6                	jl     89a <main+0x5e>
 8c4:	b8 00 00 00 00       	mov    eax,0x0
 8c9:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
 8cd:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
 8d4:	00 00 
 8d6:	74 05                	je     8dd <main+0xa1>
 8d8:	e8 43 fd ff ff       	call   620 <__stack_chk_fail@plt>
 8dd:	c9                   	leave  
 8de:	c3                   	ret    
 8df:	90                   	nop

00000000000008e0 <__libc_csu_init>:
 8e0:	41 57                	push   r15
 8e2:	41 56                	push   r14
 8e4:	49 89 d7             	mov    r15,rdx
 8e7:	41 55                	push   r13
 8e9:	41 54                	push   r12
 8eb:	4c 8d 25 a6 04 20 00 	lea    r12,[rip+0x2004a6]        # 200d98 <__frame_dummy_init_array_entry>
 8f2:	55                   	push   rbp
 8f3:	48 8d 2d a6 04 20 00 	lea    rbp,[rip+0x2004a6]        # 200da0 <__init_array_end>
 8fa:	53                   	push   rbx
 8fb:	41 89 fd             	mov    r13d,edi
 8fe:	49 89 f6             	mov    r14,rsi
 901:	4c 29 e5             	sub    rbp,r12
 904:	48 83 ec 08          	sub    rsp,0x8
 908:	48 c1 fd 03          	sar    rbp,0x3
 90c:	e8 d7 fc ff ff       	call   5e8 <_init>
 911:	48 85 ed             	test   rbp,rbp
 914:	74 20                	je     936 <__libc_csu_init+0x56>
 916:	31 db                	xor    ebx,ebx
 918:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
 91f:	00 
 920:	4c 89 fa             	mov    rdx,r15
 923:	4c 89 f6             	mov    rsi,r14
 926:	44 89 ef             	mov    edi,r13d
 929:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
 92d:	48 83 c3 01          	add    rbx,0x1
 931:	48 39 dd             	cmp    rbp,rbx
 934:	75 ea                	jne    920 <__libc_csu_init+0x40>
 936:	48 83 c4 08          	add    rsp,0x8
 93a:	5b                   	pop    rbx
 93b:	5d                   	pop    rbp
 93c:	41 5c                	pop    r12
 93e:	41 5d                	pop    r13
 940:	41 5e                	pop    r14
 942:	41 5f                	pop    r15
 944:	c3                   	ret    
 945:	90                   	nop
 946:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 94d:	00 00 00 

0000000000000950 <__libc_csu_fini>:
 950:	f3 c3                	repz ret 

Disassembly of section .fini:

0000000000000954 <_fini>:
 954:	48 83 ec 08          	sub    rsp,0x8
 958:	48 83 c4 08          	add    rsp,0x8
 95c:	c3                   	ret    
