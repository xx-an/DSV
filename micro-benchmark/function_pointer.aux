0x630: push qword ptr [rip+0x20096a]
0x636: jmp qword ptr [rip+0x20096c]
0x63c: nop dword ptr [rax+0x0]
0x640: jmp qword ptr [rip+0x20096a]
0x646: push 0x0
0x64b: jmp 0x630
0x656: push 0x1
0x65b: jmp 0x630
0x660: jmp qword ptr [rip+0x200992]
0x666: xchg ax,ax
0x69a: hlt 
0x69b: nop dword ptr [rax+rax*1+0x0]
0x6a0: lea rdi,[rip+0x200969]
0x6a7: push rbp
0x6a8: lea rax,[rip+0x200961]
0x6af: cmp rax,rdi
0x6b2: mov rbp,rsp
0x6b5: je 0x6d0
0x6b7: mov rax,qword ptr [rip+0x200902]
0x6be: test rax,rax
0x6c1: je 0x6d0
0x6c3: pop rbp
0x6c4: jmp rax
0x6c6: nop word ptr cs:[rax+rax*1+0x0]
0x6d0: pop rbp
0x6d1: ret 
0x6d2: nop dword ptr [rax+0x0]
0x6d6: nop word ptr cs:[rax+rax*1+0x0]
0x6e0: lea rdi,[rip+0x200929]
0x6e7: lea rsi,[rip+0x200922]
0x6ee: push rbp
0x6ef: sub rsi,rdi
0x6f2: mov rbp,rsp
0x6f5: sar rsi,0x3
0x6f9: mov rax,rsi
0x6fc: shr rax,0x3f
0x700: add rsi,rax
0x703: sar rsi,0x1
0x706: je 0x720
0x708: mov rax,qword ptr [rip+0x2008e1]
0x70f: test rax,rax
0x712: je 0x720
0x714: pop rbp
0x715: jmp rax
0x717: nop word ptr [rax+rax*1+0x0]
0x720: pop rbp
0x721: ret 
0x722: nop dword ptr [rax+0x0]
0x726: nop word ptr cs:[rax+rax*1+0x0]
0x730: cmp byte ptr [rip+0x2008d9],0x0
0x737: jne 0x768
0x739: cmp qword ptr [rip+0x2008b7],0x0
0x741: push rbp
0x742: mov rbp,rsp
0x745: je 0x753
0x747: mov rdi,qword ptr [rip+0x2008ba]
0x74e: call 0x660
0x753: call 0x6a0
0x758: mov byte ptr [rip+0x2008b1],0x1
0x75f: pop rbp
0x760: ret 
0x761: nop dword ptr [rax+0x0]
0x768: repz ret
0x76a: nop word ptr [rax+rax*1+0x0]
0x770: push rbp
0x771: mov rbp,rsp
0x774: pop rbp
0x775: jmp 0x6e0
0x855: movq rax,xmm0
0x85a: mov qword ptr [rbp-0x28],rax
0x85e: mov rax,qword ptr [rbp-0x28]
0x862: mov qword ptr [rbp-0x40],rax
0x866: movsd xmm0,qword ptr [rbp-0x40]
0x86b: lea rdi,[rip+0x176]
0x872: mov eax,0x1
0x877: call 0x650
0x87c: mov eax,dword ptr [rbp-0x34]
0x87f: lea ecx,[rax+0x1]
0x882: mov edx,0x55555556
0x887: mov eax,ecx
0x889: imul edx
0x88b: mov eax,ecx
0x88d: sar eax,0x1f
0x890: sub edx,eax
0x892: mov eax,edx
0x894: add eax,eax
0x896: add eax,edx
0x898: sub ecx,eax
0x89a: mov edx,ecx
0x89c: movsxd rax,edx
0x89f: mov rax,qword ptr [rbp+rax*8-0x20]
0x8a4: mov rdx,rax
0x8a7: mov rax,qword ptr [rbp-0x28]
0x8ab: mov qword ptr [rbp-0x40],rax
0x8af: movsd xmm0,qword ptr [rbp-0x40]
0x8b4: call rdx
0x8b6: movq rax,xmm0
0x8bb: mov qword ptr [rbp-0x28],rax
0x8bf: mov rax,qword ptr [rbp-0x28]
0x8c3: mov qword ptr [rbp-0x40],rax
0x8c7: movsd xmm0,qword ptr [rbp-0x40]
0x8cc: lea rdi,[rip+0x115]
0x8d3: mov eax,0x1
0x8d8: call 0x650
0x8dd: mov eax,dword ptr [rbp-0x34]
0x8e0: lea ecx,[rax+0x2]
0x8e3: mov edx,0x55555556
0x8e8: mov eax,ecx
0x8ea: imul edx
0x8ec: mov eax,ecx
0x8ee: sar eax,0x1f
0x8f1: sub edx,eax
0x8f3: mov eax,edx
0x8f5: add eax,eax
0x8f7: add eax,edx
0x8f9: sub ecx,eax
0x8fb: mov edx,ecx
0x8fd: movsxd rax,edx
0x900: mov rax,qword ptr [rbp+rax*8-0x20]
0x905: mov rdx,rax
0x908: mov rax,qword ptr [rbp-0x28]
0x90c: mov qword ptr [rbp-0x40],rax
0x910: movsd xmm0,qword ptr [rbp-0x40]
0x915: call rdx
0x917: movq rax,xmm0
0x91c: mov qword ptr [rbp-0x28],rax
0x920: mov rax,qword ptr [rbp-0x28]
0x924: mov qword ptr [rbp-0x40],rax
0x928: movsd xmm0,qword ptr [rbp-0x40]
0x92d: lea rdi,[rip+0xb4]
0x934: mov eax,0x1
0x939: call 0x650
0x93e: mov eax,0x0
0x943: mov rsi,qword ptr [rbp-0x8]
0x947: xor rsi,qword ptr fs:0x28
0x950: je 0x957
0x952: call 0x640
0x957: leave 
0x958: ret 
0x959: nop dword ptr [rax+0x0]
0x9c5: nop 
0x9c6: nop word ptr cs:[rax+rax*1+0x0]
0x9d0: repz ret
0x9d4: sub rsp,0x8
0x9d8: add rsp,0x8
0x9dc: ret 
