
Disassembly of section .symtab

620: <__cxa_finalize>
620:
620: ff 25 d2 09 20 00                            jmpq *0x2009d2(%rip)

5f0: <__stack_chk_fail>
5f0:
5f0: ff 25 ca 09 20 00                            jmpq *0x2009ca(%rip)

5b8: <_init>
5b8:
5b8: 48 83 ec 08                                  subq $0x8, %rsp
5bc: 48 8b 05 25 0a 20 00                         movq 0x200a25(%rip), %rax
5c3: 48 85 c0                                     testq %rax, %rax
5c6: 74 02                                        je 0x2
5c8:
5c8: ff d0                                        callq *%rax
5ca:
5ca: 48 83 c4 08                                  addq $0x8, %rsp
5ce: c3                                           retq

630: <_start>
630:
630: 31 ed                                        xorl %ebp, %ebp
632: 49 89 d1                                     movq %rdx, %r9
635: 5e                                           popq %rsi
636: 48 89 e2                                     movq %rsp, %rdx
639: 48 83 e4 f0                                  andq $-0x10, %rsp
63d: 50                                           pushq %rax
63e: 54                                           pushq %rsp
63f: 4c 8d 05 aa 02 00 00                         leaq 0x2aa(%rip), %r8
646: 48 8d 0d 33 02 00 00                         leaq 0x233(%rip), %rcx
64d: 48 8d 3d 84 01 00 00                         leaq 0x184(%rip), %rdi
654: ff 15 86 09 20 00                            callq *0x200986(%rip)
65a:
65a: f4                                           hlt
65b: 0f 1f 44 00 00                               nopl (%rax,%rax)

660: <deregister_tm_clones>
660:
660: 48 8d 3d a9 09 20 00                         leaq 0x2009a9(%rip), %rdi
667: 55                                           pushq %rbp
668: 48 8d 05 a1 09 20 00                         leaq 0x2009a1(%rip), %rax
66f: 48 39 f8                                     cmpq %rdi, %rax
672: 48 89 e5                                     movq %rsp, %rbp
675: 74 19                                        je 0x19
677:
677: 48 8b 05 5a 09 20 00                         movq 0x20095a(%rip), %rax
67e: 48 85 c0                                     testq %rax, %rax
681: 74 0d                                        je 0xd
690:
690: 5d                                           popq %rbp
691: c3                                           retq
683:
683: 5d                                           popq %rbp
684: ff e0                                        jmpq *%rax

730: <frame_dummy>
730:
730: 55                                           pushq %rbp
731: 48 89 e5                                     movq %rsp, %rbp
734: 5d                                           popq %rbp
735: e9 66 ff ff ff                               jmp -0x9a
6a0:
6a0: 48 8d 3d 69 09 20 00                         leaq 0x200969(%rip), %rdi
6a7: 48 8d 35 62 09 20 00                         leaq 0x200962(%rip), %rsi
6ae: 55                                           pushq %rbp
6af: 48 29 fe                                     subq %rdi, %rsi
6b2: 48 89 e5                                     movq %rsp, %rbp
6b5: 48 c1 fe 03                                  sarq $0x3, %rsi
6b9: 48 89 f0                                     movq %rsi, %rax
6bc: 48 c1 e8 3f                                  shrq $0x3f, %rax
6c0: 48 01 c6                                     addq %rax, %rsi
6c3: 48 d1 fe                                     sarq %rsi
6c6: 74 18                                        je 0x18
6c8:
6c8: 48 8b 05 21 09 20 00                         movq 0x200921(%rip), %rax
6cf: 48 85 c0                                     testq %rax, %rax
6d2: 74 0c                                        je 0xc
6e0:
6e0: 5d                                           popq %rbp
6e1: c3                                           retq
6d4:
6d4: 5d                                           popq %rbp
6d5: ff e0                                        jmpq *%rax

5e0: <puts>
5e0:
5e0: ff 25 d2 09 20 00                            jmpq *0x2009d2(%rip)

600: <srand>
600:
600: ff 25 c2 09 20 00                            jmpq *0x2009c2(%rip)

5d6: <sub_5d6>
5d6:
5d6: ff 25 d4 09 20 00                            jmpq *0x2009d4(%rip)

610: <time>
610:
610: ff 25 ba 09 20 00                            jmpq *0x2009ba(%rip)

Disassembly of section .init

5b8: <_init>
5b8:
5b8: 48 83 ec 08                                  subq $0x8, %rsp
5bc: 48 8b 05 25 0a 20 00                         movq 0x200a25(%rip), %rax
5c3: 48 85 c0                                     testq %rax, %rax
5c6: 74 02                                        je 0x2
5c8:
5c8: ff d0                                        callq *%rax
5ca:
5ca: 48 83 c4 08                                  addq $0x8, %rsp
5ce: c3                                           retq

Disassembly of section .plt

5f0: <__stack_chk_fail>
5f0:
5f0: ff 25 ca 09 20 00                            jmpq *0x2009ca(%rip)

5e0: <puts>
5e0:
5e0: ff 25 d2 09 20 00                            jmpq *0x2009d2(%rip)

600: <srand>
600:
600: ff 25 c2 09 20 00                            jmpq *0x2009c2(%rip)

5d6: <sub_5d6>
5d6:
5d6: ff 25 d4 09 20 00                            jmpq *0x2009d4(%rip)

610: <time>
610:
610: ff 25 ba 09 20 00                            jmpq *0x2009ba(%rip)

Disassembly of section .plt.got

620: <__cxa_finalize>
620:
620: ff 25 d2 09 20 00                            jmpq *0x2009d2(%rip)

Disassembly of section .text

73a: <A>
73a:
73a: 55                                           pushq %rbp
73b: 48 89 e5                                     movq %rsp, %rbp
73e: 48 8d 3d bf 01 00 00                         leaq 0x1bf(%rip), %rdi
745: e8 96 fe ff ff                               callq -0x16a
74a:
74a: 90                                           nop
74b: 5d                                           popq %rbp
74c: c3                                           retq

74d: <B>
74d:
74d: 55                                           pushq %rbp
74e: 48 89 e5                                     movq %rsp, %rbp
751: 48 8d 3d bc 01 00 00                         leaq 0x1bc(%rip), %rdi
758: e8 83 fe ff ff                               callq -0x17d
75d:
75d: 90                                           nop
75e: 5d                                           popq %rbp
75f: c3                                           retq

760: <C>
760:
760: 55                                           pushq %rbp
761: 48 89 e5                                     movq %rsp, %rbp
764: 48 8d 3d b9 01 00 00                         leaq 0x1b9(%rip), %rdi
76b: e8 70 fe ff ff                               callq -0x190
770:
770: 90                                           nop
771: 5d                                           popq %rbp
772: c3                                           retq

8f0: <__libc_csu_fini>
8f0:
8f0: f3 c3                                        rep  retq

880: <__libc_csu_init>
880:
880: 41 57                                        pushq %r15
882: 41 56                                        pushq %r14
884: 49 89 d7                                     movq %rdx, %r15
887: 41 55                                        pushq %r13
889: 41 54                                        pushq %r12
88b: 4c 8d 25 0e 05 20 00                         leaq 0x20050e(%rip), %r12
892: 55                                           pushq %rbp
893: 48 8d 2d 0e 05 20 00                         leaq 0x20050e(%rip), %rbp
89a: 53                                           pushq %rbx
89b: 41 89 fd                                     movl %edi, %r13d
89e: 49 89 f6                                     movq %rsi, %r14
8a1: 4c 29 e5                                     subq %r12, %rbp
8a4: 48 83 ec 08                                  subq $0x8, %rsp
8a8: 48 c1 fd 03                                  sarq $0x3, %rbp
8ac: e8 07 fd ff ff                               callq -0x2f9
8b1:
8b1: 48 85 ed                                     testq %rbp, %rbp
8b4: 74 20                                        je 0x20
8b6:
8b6: 31 db                                        xorl %ebx, %ebx
8b8: 0f 1f 84 00 00 00 00 00                      nopl (%rax,%rax)
8c0:
8c0: 4c 89 fa                                     movq %r15, %rdx
8c3: 4c 89 f6                                     movq %r14, %rsi
8c6: 44 89 ef                                     movl %r13d, %edi
8c9: 41 ff 14 dc                                  callq *(%r12,%rbx,8)
8cd:
8cd: 48 83 c3 01                                  addq $0x1, %rbx
8d1: 48 39 dd                                     cmpq %rbx, %rbp
8d4: 75 ea                                        jne -0x16
8d6:
8d6: 48 83 c4 08                                  addq $0x8, %rsp
8da: 5b                                           popq %rbx
8db: 5d                                           popq %rbp
8dc: 41 5c                                        popq %r12
8de: 41 5d                                        popq %r13
8e0: 41 5e                                        popq %r14
8e2: 41 5f                                        popq %r15
8e4: c3                                           retq

630: <_start>
630:
630: 31 ed                                        xorl %ebp, %ebp
632: 49 89 d1                                     movq %rdx, %r9
635: 5e                                           popq %rsi
636: 48 89 e2                                     movq %rsp, %rdx
639: 48 83 e4 f0                                  andq $-0x10, %rsp
63d: 50                                           pushq %rax
63e: 54                                           pushq %rsp
63f: 4c 8d 05 aa 02 00 00                         leaq 0x2aa(%rip), %r8
646: 48 8d 0d 33 02 00 00                         leaq 0x233(%rip), %rcx
64d: 48 8d 3d 84 01 00 00                         leaq 0x184(%rip), %rdi
654: ff 15 86 09 20 00                            callq *0x200986(%rip)
65a:
65a: f4                                           hlt
65b: 0f 1f 44 00 00                               nopl (%rax,%rax)

7a8: <callback>
7a8:
7a8: 55                                           pushq %rbp
7a9: 48 89 e5                                     movq %rsp, %rbp
7ac: 48 83 ec 10                                  subq $0x10, %rsp
7b0: 48 89 7d f8                                  movq %rdi, -0x8(%rbp)
7b4: 48 8b 55 f8                                  movq -0x8(%rbp), %rdx
7b8: b8 00 00 00 00                               movl $0x0, %eax
7bd: ff d2                                        callq *%rdx
7bf:
7bf: 90                                           nop
7c0: c9                                           leave
7c1: c3                                           retq

660: <deregister_tm_clones>
660:
660: 48 8d 3d a9 09 20 00                         leaq 0x2009a9(%rip), %rdi
667: 55                                           pushq %rbp
668: 48 8d 05 a1 09 20 00                         leaq 0x2009a1(%rip), %rax
66f: 48 39 f8                                     cmpq %rdi, %rax
672: 48 89 e5                                     movq %rsp, %rbp
675: 74 19                                        je 0x19
677:
677: 48 8b 05 5a 09 20 00                         movq 0x20095a(%rip), %rax
67e: 48 85 c0                                     testq %rax, %rax
681: 74 0d                                        je 0xd
690:
690: 5d                                           popq %rbp
691: c3                                           retq
683:
683: 5d                                           popq %rbp
684: ff e0                                        jmpq *%rax

730: <frame_dummy>
730:
730: 55                                           pushq %rbp
731: 48 89 e5                                     movq %rsp, %rbp
734: 5d                                           popq %rbp
735: e9 66 ff ff ff                               jmp -0x9a
6a0:
6a0: 48 8d 3d 69 09 20 00                         leaq 0x200969(%rip), %rdi
6a7: 48 8d 35 62 09 20 00                         leaq 0x200962(%rip), %rsi
6ae: 55                                           pushq %rbp
6af: 48 29 fe                                     subq %rdi, %rsi
6b2: 48 89 e5                                     movq %rsp, %rbp
6b5: 48 c1 fe 03                                  sarq $0x3, %rsi
6b9: 48 89 f0                                     movq %rsi, %rax
6bc: 48 c1 e8 3f                                  shrq $0x3f, %rax
6c0: 48 01 c6                                     addq %rax, %rsi
6c3: 48 d1 fe                                     sarq %rsi
6c6: 74 18                                        je 0x18
6c8:
6c8: 48 8b 05 21 09 20 00                         movq 0x200921(%rip), %rax
6cf: 48 85 c0                                     testq %rax, %rax
6d2: 74 0c                                        je 0xc
6e0:
6e0: 5d                                           popq %rbp
6e1: c3                                           retq
6d4:
6d4: 5d                                           popq %rbp
6d5: ff e0                                        jmpq *%rax

7d8: <main>
7d8:
7d8: 55                                           pushq %rbp
7d9: 48 89 e5                                     movq %rsp, %rbp
7dc: 48 83 ec 40                                  subq $0x40, %rsp
7e0: 89 7d cc                                     movl %edi, -0x34(%rbp)
7e3: 64 48 8b 04 25 28 00 00 00                   movq %fs:0x28, %rax
7ec: 48 89 45 f8                                  movq %rax, -0x8(%rbp)
7f0: 31 c0                                        xorl %eax, %eax
7f2: bf 00 00 00 00                               movl $0x0, %edi
7f7: e8 14 fe ff ff                               callq -0x1ec
7fc:
7fc: 89 c7                                        movl %eax, %edi
7fe: e8 fd fd ff ff                               callq -0x203
803:
803: c7 45 d8 00 00 00 00                         movl $0x0, -0x28(%rbp)
80a: eb 1b                                        jmp 0x1b
827:
827: 83 7d d8 02                                  cmpl $0x2, -0x28(%rbp)
82b: 7e df                                        jle -0x21
82d:
82d: c7 45 dc 00 00 00 00                         movl $0x0, -0x24(%rbp)
834: eb 16                                        jmp 0x16
84c:
84c: 8b 45 cc                                     movl -0x34(%rbp), %eax
84f: 89 c6                                        movl %eax, %esi
851: bf 03 00 00 00                               movl $0x3, %edi
856: e8 67 ff ff ff                               callq -0x99
85b:
85b: 39 45 dc                                     cmpl %eax, -0x24(%rbp)
85e: 7c d6                                        jl -0x2a
860:
860: b8 00 00 00 00                               movl $0x0, %eax
865: 48 8b 4d f8                                  movq -0x8(%rbp), %rcx
869: 64 48 33 0c 25 28 00 00 00                   xorq %fs:0x28, %rcx
872: 74 05                                        je 0x5
874:
874: e8 77 fd ff ff                               callq -0x289
879:
879: c9                                           leave
87a: c3                                           retq
836:
836: 8b 45 dc                                     movl -0x24(%rbp), %eax
839: 48 98                                        cltq
83b: 48 8b 44 c5 e0                               movq -0x20(%rbp,%rax,8), %rax
840: 48 89 c7                                     movq %rax, %rdi
843: e8 60 ff ff ff                               callq -0xa0
848:
848: 83 45 dc 01                                  addl $0x1, -0x24(%rbp)
80c:
80c: 8b 45 d8                                     movl -0x28(%rbp), %eax
80f: 89 c7                                        movl %eax, %edi
811: e8 5d ff ff ff                               callq -0xa3
816:
816: 48 89 c2                                     movq %rax, %rdx
819: 8b 45 d8                                     movl -0x28(%rbp), %eax
81c: 48 98                                        cltq
81e: 48 89 54 c5 e0                               movq %rdx, -0x20(%rbp,%rax,8)
823: 83 45 d8 01                                  addl $0x1, -0x28(%rbp)

7c2: <min>
7c2:
7c2: 55                                           pushq %rbp
7c3: 48 89 e5                                     movq %rsp, %rbp
7c6: 89 7d fc                                     movl %edi, -0x4(%rbp)
7c9: 89 75 f8                                     movl %esi, -0x8(%rbp)
7cc: 8b 45 fc                                     movl -0x4(%rbp), %eax
7cf: 39 45 f8                                     cmpl %eax, -0x8(%rbp)
7d2: 0f 4e 45 f8                                  cmovlel -0x8(%rbp), %eax
7d6: 5d                                           popq %rbp
7d7: c3                                           retq

773: <pick_function>
773:
773: 55                                           pushq %rbp
774: 48 89 e5                                     movq %rsp, %rbp
777: 89 7d fc                                     movl %edi, -0x4(%rbp)
77a: 8b 45 fc                                     movl -0x4(%rbp), %eax
77d: 83 f8 01                                     cmpl $0x1, %eax
780: 74 12                                        je 0x12
794:
794: 48 8d 05 b2 ff ff ff                         leaq -0x4e(%rip), %rax
79b: eb 09                                        jmp 0x9
782:
782: 83 f8 02                                     cmpl $0x2, %eax
785: 74 16                                        je 0x16
79d:
79d: 48 8d 05 bc ff ff ff                         leaq -0x44(%rip), %rax
7a4: eb 00                                        jmp 0x0
787:
787: 85 c0                                        testl %eax, %eax
789: 75 1b                                        jne 0x1b
78b:
78b: 48 8d 05 a8 ff ff ff                         leaq -0x58(%rip), %rax
792: eb 12                                        jmp 0x12
7a6:
7a6: 5d                                           popq %rbp
7a7: c3                                           retq

701: <sub_701>
701:
701: 55                                           pushq %rbp
702: 48 89 e5                                     movq %rsp, %rbp
705: 74 0c                                        je 0xc
707:
707: 48 8b 3d fa 08 20 00                         movq 0x2008fa(%rip), %rdi
70e: e8 0d ff ff ff                               callq -0xf3
713:
713: e8 48 ff ff ff                               callq -0xb8
718:
718: c6 05 f1 08 20 00 01                         movb $0x1, 0x2008f1(%rip)
71f: 5d                                           popq %rbp
720: c3                                           retq
