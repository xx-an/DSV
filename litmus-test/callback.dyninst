
"puts@plt" :
5e0(6): jmp 0x2009d2(%rip)
5e6(5): push $0x0

"__stack_chk_fail@plt" :
5f0(6): jmp 0x2009ca(%rip)
5f6(5): push $0x1

"srand@plt" :
600(6): jmp 0x2009c2(%rip)
606(5): push $0x2

"time@plt" :
610(6): jmp 0x2009ba(%rip)
616(5): push $0x3

".plt.got" :
620(6): jmp 0x2009d2(%rip)
626(2): nop 

"_init" :
5b8(4): sub $0x8,%rsp
5bc(7): mov 0x200a25(%rip),%rax
5c3(3): test %rax,%rax
5c6(2): jz 0x4(%rip)
5c8(2): call %rax
5ca(4): add $0x8,%rsp
5ce(1): ret near (%rsp)

"_start" :
630(2): xor %ebp,%ebp
632(3): mov %rdx,%r9
635(1): pop %rsi
636(3): mov %rsp,%rdx
639(4): and $0xfffffff0,%rsp
63d(1): push %rax
63e(1): push %rsp
63f(7): lea 0x2aa(%rip),%r8
646(7): lea 0x233(%rip),%rcx
64d(7): lea 0x184(%rip),%rdi
654(6): call 0x200986(%rip)
65a(1): hlt 

"deregister_tm_clones" :
660(7): lea 0x2009a9(%rip),%rdi
667(1): push %rbp
668(7): lea 0x2009a1(%rip),%rax
66f(3): cmp %rdi,%rax
672(3): mov %rsp,%rbp
675(2): jz 0x1b(%rip)
677(7): mov 0x20095a(%rip),%rax
67e(3): test %rax,%rax
681(2): jz 0xf(%rip)
683(1): pop %rbp
684(2): jmp %rax
686(a): nop 0x0(%rax,%rax,1)
690(1): pop %rbp
691(1): ret near (%rsp)

"register_tm_clones" :
6a0(7): lea 0x200969(%rip),%rdi
6a7(7): lea 0x200962(%rip),%rsi
6ae(1): push %rbp
6af(3): sub %rdi,%rsi
6b2(3): mov %rsp,%rbp
6b5(4): sar $0x3,%rsi
6b9(3): mov %rsi,%rax
6bc(4): shr $0x3f,%rax
6c0(3): add %rax,%rsi
6c3(3): sar $0x1,%rsi
6c6(2): jz 0x1a(%rip)
6c8(7): mov 0x200921(%rip),%rax
6cf(3): test %rax,%rax
6d2(2): jz 0xe(%rip)
6d4(1): pop %rbp
6d5(2): jmp %rax
6d7(9): nop 0x0(%rax,%rax,1)
6e0(1): pop %rbp
6e1(1): ret near (%rsp)

"__do_global_dtors_aux" :
6f0(7): cmp $0x0,0x200919(%rip)
6f7(2): jnz 0x31(%rip)
6f9(8): cmp $0x0,0x2008f7(%rip)
701(1): push %rbp
702(3): mov %rsp,%rbp
705(2): jz 0xe(%rip)
707(7): mov 0x2008fa(%rip),%rdi
70e(5): call 0xffffff12(%rip)
713(5): call 0xffffff4d(%rip)
718(7): mov $0x1,0x2008f1(%rip)
71f(1): pop %rbp
720(1): ret near (%rsp)
721(7): nop 0x0(%rax)
728(2): REP ret near (%rsp)

"frame_dummy" :
730(1): push %rbp
731(3): mov %rsp,%rbp
734(1): pop %rbp
735(5): jmp 0xffffff6b(%rip)

"A" :
73a(1): push %rbp
73b(3): mov %rsp,%rbp
73e(7): lea 0x1bf(%rip),%rdi
745(5): call 0xfffffe9b(%rip)
74a(1): nop 
74b(1): pop %rbp
74c(1): ret near (%rsp)

"B" :
74d(1): push %rbp
74e(3): mov %rsp,%rbp
751(7): lea 0x1bc(%rip),%rdi
758(5): call 0xfffffe88(%rip)
75d(1): nop 
75e(1): pop %rbp
75f(1): ret near (%rsp)

"C" :
760(1): push %rbp
761(3): mov %rsp,%rbp
764(7): lea 0x1b9(%rip),%rdi
76b(5): call 0xfffffe75(%rip)
770(1): nop 
771(1): pop %rbp
772(1): ret near (%rsp)

"pick_function" :
773(1): push %rbp
774(3): mov %rsp,%rbp
777(3): mov %edi,0xfffffffc(%rbp)
77a(3): mov 0xfffffffc(%rbp),%eax
77d(3): cmp $0x1,%eax
780(2): jz 0x14(%rip)
782(3): cmp $0x2,%eax
785(2): jz 0x18(%rip)
787(2): test %eax,%eax
789(2): jnz 0x1d(%rip)
78b(7): lea 0xffffffa8(%rip),%rax
792(2): jmp 0x14(%rip)
794(7): lea 0xffffffb2(%rip),%rax
79b(2): jmp 0xb(%rip)
79d(7): lea 0xffffffbc(%rip),%rax
7a4(2): jmp 0x2(%rip)
7a6(1): pop %rbp
7a7(1): ret near (%rsp)

"callback" :
7a8(1): push %rbp
7a9(3): mov %rsp,%rbp
7ac(4): sub $0x10,%rsp
7b0(4): mov %rdi,0xfffffff8(%rbp)
7b4(4): mov 0xfffffff8(%rbp),%rdx
7b8(5): mov $0x0,%eax
7bd(2): call %rdx
7bf(1): nop 
7c0(1): leave 
7c1(1): ret near (%rsp)

"min" :
7c2(1): push %rbp
7c3(3): mov %rsp,%rbp
7c6(3): mov %edi,0xfffffffc(%rbp)
7c9(3): mov %esi,0xfffffff8(%rbp)
7cc(3): mov 0xfffffffc(%rbp),%eax
7cf(3): cmp %eax,0xfffffff8(%rbp)
7d2(4): cmovng 0xfffffff8(%rbp),%eax
7d6(1): pop %rbp
7d7(1): ret near (%rsp)

"main" :
7d8(1): push %rbp
7d9(3): mov %rsp,%rbp
7dc(4): sub $0x40,%rsp
7e0(3): mov %edi,0xffffffcc(%rbp)
7e3(9): mov $0x28,%rax
7ec(4): mov %rax,0xfffffff8(%rbp)
7f0(2): xor %eax,%eax
7f2(5): mov $0x0,%edi
7f7(5): call 0xfffffe19(%rip)
7fc(2): mov %eax,%edi
7fe(5): call 0xfffffe02(%rip)
803(7): mov $0x0,0xffffffd8(%rbp)
80a(2): jmp 0x1d(%rip)
80c(3): mov 0xffffffd8(%rbp),%eax
80f(2): mov %eax,%edi
811(5): call 0xffffff62(%rip)
816(3): mov %rax,%rdx
819(3): mov 0xffffffd8(%rbp),%eax
81c(2): cwde 
81e(5): mov %rdx,0xffffffe0(%rbp,%rax,8)
823(4): add $0x1,0xffffffd8(%rbp)
827(4): cmp $0x2,0xffffffd8(%rbp)
82b(2): jle 0xffffffe1(%rip)
82d(7): mov $0x0,0xffffffdc(%rbp)
834(2): jmp 0x18(%rip)
836(3): mov 0xffffffdc(%rbp),%eax
839(2): cwde 
83b(5): mov 0xffffffe0(%rbp,%rax,8),%rax
840(3): mov %rax,%rdi
843(5): call 0xffffff65(%rip)
848(4): add $0x1,0xffffffdc(%rbp)
84c(3): mov 0xffffffcc(%rbp),%eax
84f(2): mov %eax,%esi
851(5): mov $0x3,%edi
856(5): call 0xffffff6c(%rip)
85b(3): cmp %eax,0xffffffdc(%rbp)
85e(2): jl 0xffffffd8(%rip)
860(5): mov $0x0,%eax
865(4): mov 0xfffffff8(%rbp),%rcx
869(9): xor $0x28,%rcx
872(2): jz 0x7(%rip)
874(5): call 0xfffffd7c(%rip)
879(1): leave 
87a(1): ret near (%rsp)

"__libc_csu_init" :
880(2): push %r15
882(2): push %r14
884(3): mov %rdx,%r15
887(2): push %r13
889(2): push %r12
88b(7): lea 0x20050e(%rip),%r12
892(1): push %rbp
893(7): lea 0x20050e(%rip),%rbp
89a(1): push %rbx
89b(3): mov %edi,%r13d
89e(3): mov %rsi,%r14
8a1(3): sub %r12,%rbp
8a4(4): sub $0x8,%rsp
8a8(4): sar $0x3,%rbp
8ac(5): call 0xfffffd0c(%rip)
8b1(3): test %rbp,%rbp
8b4(2): jz 0x22(%rip)
8b6(2): xor %ebx,%ebx
8b8(8): nop 0x0(%rax,%rax,1)
8c0(3): mov %r15,%rdx
8c3(3): mov %r14,%rsi
8c6(3): mov %r13d,%edi
8c9(4): call 0x0(%r12,%rbx,8)
8cd(4): add $0x1,%rbx
8d1(3): cmp %rbx,%rbp
8d4(2): jnz 0xffffffec(%rip)
8d6(4): add $0x8,%rsp
8da(1): pop %rbx
8db(1): pop %rbp
8dc(2): pop %r12
8de(2): pop %r13
8e0(2): pop %r14
8e2(2): pop %r15
8e4(1): ret near (%rsp)

"_fini" :
8f4(4): sub $0x8,%rsp
8f8(4): add $0x8,%rsp
8fc(1): ret near (%rsp)

