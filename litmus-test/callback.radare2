;-- section..plt:
;-- .plt:
0x000005d0      ff35d2092000   push qword [0x00200fa8]                 ; [12] -r-x section size 80 named .plt
0x000005d6      ff25d4092000   jmp qword [0x00200fb0]                  ; [0x200fb0:8]=0
0x000005dc      0f1f4000       nop dword [rax]
;-- imp.puts:
0x000005e0      ff25d2092000   jmp qword [reloc.puts]                  ; [0x200fb8:8]=0x5e6
0x000005e6      6800000000     push 0
0x000005eb      e9e0ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x000005f0      ff25ca092000   jmp qword [reloc.__stack_chk_fail]      ; [0x200fc0:8]=0x5f6
0x000005f6      6801000000     push 1
0x000005fb      e9d0ffffff     jmp sym..plt
;-- imp.srand:
0x00000600      ff25c2092000   jmp qword [reloc.srand]                 ; [0x200fc8:8]=0x606
0x00000606      6802000000     push 2
0x0000060b      e9c0ffffff     jmp sym..plt
;-- imp.time:
0x00000610      ff25ba092000   jmp qword [reloc.time]                  ; [0x200fd0:8]=0x616
0x00000616      6803000000     push 3
0x0000061b      e9b0ffffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00000620      .qword 0x9066002009d225ff                              ; [13] -r-x section size 8 named .plt.got
0x00000628      0000           add byte [rax], al
0x0000062a      0000           add byte [rax], al
0x0000062c      0000           add byte [rax], al
0x0000062e      0000           add byte [rax], al
;-- entry0:
;-- section..text:
;-- .text:
;-- _start:
;-- rip:
0x00000630      31ed           xor ebp, ebp                            ; [14] -r-x section size 706 named .text
0x00000632      4989d1         mov r9, rdx
0x00000635      5e             pop rsi
0x00000636      4889e2         mov rdx, rsp
0x00000639      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000063d      50             push rax
0x0000063e      54             push rsp
0x0000063f      4c8d05aa0200.  lea r8, sym.__libc_csu_fini             ; 0x8f0
0x00000646      488d0d330200.  lea rcx, sym.__libc_csu_init            ; 0x880 ; "AWAVI\x89\xd7AUATL\x8d%\x0e\x05 "
0x0000064d      488d3d840100.  lea rdi, main                           ; sym.main
                                                                       ; 0x7d8
0x00000654      ff1586092000   call qword [reloc.__libc_start_main]    ; [0x200fe0:8]=0
0x0000065a      f4             hlt
0x0000065b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00000660      488d3da90920.  lea rdi, obj.completed.7698             ; obj.__TMC_END
                                                                       ; 0x201010
0x00000667      55             push rbp
0x00000668      488d05a10920.  lea rax, obj.completed.7698             ; obj.__TMC_END
                                                                       ; 0x201010
0x0000066f      4839f8         cmp rax, rdi
0x00000672      4889e5         mov rbp, rsp
0x00000675      7419           je 0x690
0x00000677      488b055a0920.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x200fd8:8]=0
0x0000067e      4885c0         test rax, rax
0x00000681      740d           je 0x690
0x00000683      5d             pop rbp
0x00000684      ffe0           jmp rax
0x00000686      662e0f1f8400.  nop word cs:[rax + rax]
0x00000690      5d             pop rbp
0x00000691      c3             ret
0x00000692      0f1f4000       nop dword [rax]
0x00000696      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x000006a0      488d3d690920.  lea rdi, obj.completed.7698             ; obj.__TMC_END
                                                                       ; 0x201010
0x000006a7      488d35620920.  lea rsi, obj.completed.7698             ; obj.__TMC_END
                                                                       ; 0x201010
0x000006ae      55             push rbp
0x000006af      4829fe         sub rsi, rdi
0x000006b2      4889e5         mov rbp, rsp
0x000006b5      48c1fe03       sar rsi, 3
0x000006b9      4889f0         mov rax, rsi
0x000006bc      48c1e83f       shr rax, 0x3f
0x000006c0      4801c6         add rsi, rax
0x000006c3      48d1fe         sar rsi, 1
0x000006c6      7418           je 0x6e0
0x000006c8      488b05210920.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x200ff0:8]=0
0x000006cf      4885c0         test rax, rax
0x000006d2      740c           je 0x6e0
0x000006d4      5d             pop rbp
0x000006d5      ffe0           jmp rax
0x000006d7      660f1f840000.  nop word [rax + rax]
0x000006e0      5d             pop rbp
0x000006e1      c3             ret
0x000006e2      0f1f4000       nop dword [rax]
0x000006e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x000006f0      803d19092000.  cmp byte [obj.completed.7698], 0        ; obj.__TMC_END
                                                                       ; [0x201010:1]=0
0x000006f7      752f           jne 0x728
0x000006f9      48833df70820.  cmp qword [reloc.__cxa_finalize], 0     ; [0x200ff8:8]=0
0x00000701      55             push rbp
0x00000702      4889e5         mov rbp, rsp
0x00000705      740c           je 0x713
0x00000707      488b3dfa0820.  mov rdi, qword [obj.__dso_handle]       ; [0x201008:8]=0x201008 obj.__dso_handle
0x0000070e      e80dffffff     call sym..plt.got
0x00000713      e848ffffff     call sym.deregister_tm_clones
0x00000718      c605f1082000.  mov byte [obj.completed.7698], 1        ; obj.__TMC_END
                                                                       ; [0x201010:1]=0
0x0000071f      5d             pop rbp
0x00000720      c3             ret
0x00000721      0f1f80000000.  nop dword [rax]
0x00000728      f3c3           ret
0x0000072a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00000730      55             push rbp
0x00000731      4889e5         mov rbp, rsp
0x00000734      5d             pop rbp
0x00000735      e966ffffff     jmp sym.register_tm_clones
;-- A:
0x0000073a      55             push rbp
0x0000073b      4889e5         mov rbp, rsp
0x0000073e      488d3dbf0100.  lea rdi, str.I_am_function_A            ; 0x904 ; "I am function A"
0x00000745      e896feffff     call sym.imp.puts
0x0000074a      90             nop
0x0000074b      5d             pop rbp
0x0000074c      c3             ret
;-- B:
0x0000074d      55             push rbp
0x0000074e      4889e5         mov rbp, rsp
0x00000751      488d3dbc0100.  lea rdi, str.I_am_function_B            ; 0x914 ; "I am function B"
0x00000758      e883feffff     call sym.imp.puts
0x0000075d      90             nop
0x0000075e      5d             pop rbp
0x0000075f      c3             ret
;-- C:
0x00000760      55             push rbp
0x00000761      4889e5         mov rbp, rsp
0x00000764      488d3db90100.  lea rdi, str.I_am_function_C            ; 0x924 ; "I am function C"
0x0000076b      e870feffff     call sym.imp.puts
0x00000770      90             nop
0x00000771      5d             pop rbp
0x00000772      c3             ret
;-- pick_function:
0x00000773      55             push rbp
0x00000774      4889e5         mov rbp, rsp
0x00000777      897dfc         mov dword [rbp - 4], edi
0x0000077a      8b45fc         mov eax, dword [rbp - 4]
0x0000077d      83f801         cmp eax, 1
0x00000780      7412           je 0x794
0x00000782      83f802         cmp eax, 2
0x00000785      7416           je 0x79d
0x00000787      85c0           test eax, eax
0x00000789      751b           jne 0x7a6
0x0000078b      488d05a8ffff.  lea rax, sym.A                          ; 0x73a
0x00000792      eb12           jmp 0x7a6
0x00000794      488d05b2ffff.  lea rax, sym.B                          ; 0x74d
0x0000079b      eb09           jmp 0x7a6
0x0000079d      488d05bcffff.  lea rax, sym.C                          ; 0x760
0x000007a4      eb00           jmp 0x7a6
0x000007a6      5d             pop rbp
0x000007a7      c3             ret
;-- callback:
0x000007a8      55             push rbp
0x000007a9      4889e5         mov rbp, rsp
0x000007ac      4883ec10       sub rsp, 0x10
0x000007b0      48897df8       mov qword [rbp - 8], rdi
0x000007b4      488b55f8       mov rdx, qword [rbp - 8]
0x000007b8      b800000000     mov eax, 0
0x000007bd      ffd2           call rdx
0x000007bf      90             nop
0x000007c0      c9             leave
0x000007c1      c3             ret
;-- min:
0x000007c2      55             push rbp
0x000007c3      4889e5         mov rbp, rsp
0x000007c6      897dfc         mov dword [rbp - 4], edi
0x000007c9      8975f8         mov dword [rbp - 8], esi
0x000007cc      8b45fc         mov eax, dword [rbp - 4]
0x000007cf      3945f8         cmp dword [rbp - 8], eax
0x000007d2      0f4e45f8       cmovle eax, dword [rbp - 8]
0x000007d6      5d             pop rbp
0x000007d7      c3             ret
;-- main:
0x000007d8      55             push rbp
0x000007d9      4889e5         mov rbp, rsp
0x000007dc      4883ec40       sub rsp, 0x40
0x000007e0      897dcc         mov dword [rbp - 0x34], edi
0x000007e3      64488b042528.  mov rax, qword fs:[0x28]
0x000007ec      488945f8       mov qword [rbp - 8], rax
0x000007f0      31c0           xor eax, eax
0x000007f2      bf00000000     mov edi, 0
0x000007f7      e814feffff     call sym.imp.time
0x000007fc      89c7           mov edi, eax
0x000007fe      e8fdfdffff     call sym.imp.srand
0x00000803      c745d8000000.  mov dword [rbp - 0x28], 0
0x0000080a      eb1b           jmp 0x827
0x0000080c      8b45d8         mov eax, dword [rbp - 0x28]
0x0000080f      89c7           mov edi, eax
0x00000811      e85dffffff     call sym.pick_function
0x00000816      4889c2         mov rdx, rax
0x00000819      8b45d8         mov eax, dword [rbp - 0x28]
0x0000081c      4898           cdqe
0x0000081e      488954c5e0     mov qword [rbp + rax*8 - 0x20], rdx
0x00000823      8345d801       add dword [rbp - 0x28], 1
0x00000827      837dd802       cmp dword [rbp - 0x28], 2
0x0000082b      7edf           jle 0x80c
0x0000082d      c745dc000000.  mov dword [rbp - 0x24], 0
0x00000834      eb16           jmp 0x84c
0x00000836      8b45dc         mov eax, dword [rbp - 0x24]
0x00000839      4898           cdqe
0x0000083b      488b44c5e0     mov rax, qword [rbp + rax*8 - 0x20]
0x00000840      4889c7         mov rdi, rax
0x00000843      e860ffffff     call sym.callback
0x00000848      8345dc01       add dword [rbp - 0x24], 1
0x0000084c      8b45cc         mov eax, dword [rbp - 0x34]
0x0000084f      89c6           mov esi, eax
0x00000851      bf03000000     mov edi, 3
0x00000856      e867ffffff     call sym.min
0x0000085b      3945dc         cmp dword [rbp - 0x24], eax
0x0000085e      7cd6           jl 0x836
0x00000860      b800000000     mov eax, 0
0x00000865      488b4df8       mov rcx, qword [rbp - 8]
0x00000869      6448330c2528.  xor rcx, qword fs:[0x28]
0x00000872      7405           je 0x879
0x00000874      e877fdffff     call sym.imp.__stack_chk_fail
0x00000879      c9             leave
0x0000087a      c3             ret
0x0000087b      0f1f440000     nop dword [rax + rax]
;-- __libc_csu_init:
0x00000880      4157           push r15
0x00000882      4156           push r14
0x00000884      4989d7         mov r15, rdx
0x00000887      4155           push r13
0x00000889      4154           push r12
0x0000088b      4c8d250e0520.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x200da0 ; "0\a"
0x00000892      55             push rbp
0x00000893      488d2d0e0520.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x200da8
0x0000089a      53             push rbx
0x0000089b      4189fd         mov r13d, edi
0x0000089e      4989f6         mov r14, rsi
0x000008a1      4c29e5         sub rbp, r12
0x000008a4      4883ec08       sub rsp, 8
0x000008a8      48c1fd03       sar rbp, 3
0x000008ac      e807fdffff     call sym._init
0x000008b1      4885ed         test rbp, rbp
0x000008b4      7420           je 0x8d6
0x000008b6      31db           xor ebx, ebx
0x000008b8      0f1f84000000.  nop dword [rax + rax]
0x000008c0      4c89fa         mov rdx, r15
0x000008c3      4c89f6         mov rsi, r14
0x000008c6      4489ef         mov edi, r13d
0x000008c9      41ff14dc       call qword [r12 + rbx*8]
0x000008cd      4883c301       add rbx, 1
0x000008d1      4839dd         cmp rbp, rbx
0x000008d4      75ea           jne 0x8c0
0x000008d6      4883c408       add rsp, 8
0x000008da      5b             pop rbx
0x000008db      5d             pop rbp
0x000008dc      415c           pop r12
0x000008de      415d           pop r13
0x000008e0      415e           pop r14
0x000008e2      415f           pop r15
0x000008e4      c3             ret
0x000008e5      90             nop
0x000008e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x000008f0      f3c3           ret
0x000008f2      0000           add byte [rax], al
